GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#1

DATE:		August 19, 2005

TITLE:		As the worm turns: The first Internet worms of 2005

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-001.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  How a never-disclosed Windows vulnerability was quickly reverse-engineered from the patches to fix it and turned into more than 12 potent and damaging Internet worms in three days.  What does this mean for the future of Internet security?



LEO LAPORTE:  Hi, this is Leo Laporte, and I'd like to introduce a brand-new podcast to the TWiT lineup, Security Now! with Steve Gibson.  This is Episode 1 for August 18, 2005.  You all know Steve Gibson.  He, of course, appears on TWiT regularly, This Week in Tech.  We've known him for a long time.  He's been a regular on the Screensavers and Call for Help.  And, you know, he's well-known to computer users everywhere for his products.  He's very well known to consumers for SpinRite, which was the inspiration for Norton Disk Doctor and still runs rings around it.  It is the ultimate hard-drive diagnostic recovery and file-saving tool.  It's really a remarkable tool that everybody should have a copy of from GRC.com.  But he's also been a very active consumer advocate, working really hard to help folks with their security.  He first came to my attention with the Click of Death, which was - that was the Zip drive Iomega...



STEVE GIBSON:  Right.



LEO:  ...hassle.  And was it you that kind of talked Iomega into admitting that there was a problem?



STEVE:  Actually, I think it was our show.  It was the Screensavers show that...



LEO:  It came out of the Screensavers.  Wow.



STEVE:  Yeah, because they - we had them on the phone, and it was David something, I can't remember his name now, who said there is...



LEO:  Oh, that's right.



STEVE:  There is a problem.  And it was great because we cornered him into saying that...



LEO:  On the air, yes.



STEVE:  ...on the air, that if anyone had this problem, they would replace - Iomega would replace their drives.



LEO:  I forgot about that.



STEVE:  And I made a WAV file of that and put it on my site.  Say, hey, you heard it from the guy, from Iomega themselves.  They're going to replace your drive if you've got the Click of Death.  And people were like, woohoo, you know, and they were emailing this WAV file to Iomega, saying, hey, this is what you said, I want a new drive.



LEO:  It worked.



STEVE:  It was great.



LEO:  It worked.  I'm also going to mention, of course, the fact that you were the first to discover spyware, coin the term spyware," wrote the very first anti-spyware program, and...



STEVE:  Yeah, found some on my own machine.



LEO:  Yeah.



STEVE:  And then, of course, Dale Haag was the guy who publicized it.  He actually sort of overpublicized it.  He talked about the Aureate spyware, and he said it was doing all kinds of other things.  And that's what OptOut - I wrote OptOut, you know, in a few days, in order to remove that.



LEO:  The very first anti-spyware tool.



STEVE:  Yup.



LEO:  And ShieldsUP! has up to now, what, 30 million...



STEVE:  39.



LEO:  Almost 40 million systems tested.  I've just used it last night.  And then finally, of course, Steve's continually coming out and really been very good at analyzing security threats, particularly in Windows, and publicizing these threats, things like the problems with Plug and Play.  And he wrote the great program, UnPlug n' Pray - UnPlug and Play - and DCOMbobulator to fix the DCOM flaw.  So he's been very good about calling Microsoft to task and, in fact, was probably the one sole voice in the wilderness against raw sockets...



STEVE:  Boy, was I.



LEO:  ...and even took a lot of heat for that.  And Microsoft pooh-poohed it, and others said, oh, Steve Gibson is, you know, just being hysterical.  And then, lo and behold, some years later, Microsoft just a few months ago secretly, without much fanfare, turned off raw sockets in Windows, finally admitting there indeed is a huge problem with raw sockets.



STEVE:  And, you know, the one other thing, too, is LeakTest.  That is still the number one most downloaded freeware we have.



LEO:  What does LeakTest do?



STEVE:  LeakTest was the thing I did years ago because none of the personal firewalls were checking to see whether the program was actually the program you had permitted.



LEO:  Ah.



STEVE:  So it prevented programs masquerading as Internet Explorer.



LEO:  And that's still the number one download.



STEVE:  Yeah.



LEO:  Interesting.



STEVE:  Even though it's dumb.



LEO:  And ladies and gentlemen, despite all this, he still uses Windows.  I don't know what's wrong with you, Steve.



STEVE:  Everybody else does, so that's where I - I am in the middle of where the problem is.



LEO:  So, Steve Gibson, this is going to be fun.  We'll do this every week and talk about what's going on in security.  And what you really have a knack for, and I've observed this now working with you for years, is taking what is really obscure, difficult-to-understand security information, understanding it because, you know, you get it, you're brilliant, and then making it accessible for us.  And I hope that's what you'll do each week on this show.



STEVE:  I look forward to it.



LEO:  Yeah.  So let's talk a little bit about Zotob, this virus that has been sweeping the world, particularly media companies.



STEVE:  Yeah, see, it's interesting that it hit them.  Basically the problem is, one week ago, on the 9th, I think it was, Microsoft did their standard second-Tuesday-of-the-month announcement of vulnerabilities.  Here are the things that we now have patches for.  The thing that has really brought people up short is that, within three days of announcing it, the hackers, the malicious hackers of the world had analyzed the patch, figured out what it was patching - although Microsoft really gave no information about that - and had figured out, based on what the patch was, this is the vulnerability that Microsoft was fixing, and then engineered a worm, an Internet worm to go after Windows 2000 machines, based on this vulnerability that was never really disclosed.  Only the fix for it was disclosed.



LEO:  That's the fastest turnaround ever, yes?



STEVE:  Yes.  Normally it's been, like, a month and a half.  When, like, Sasser, the vulnerability from late April of 2004, that was a vulnerability called LSASS.  It is a service running in Windows.  And then the Sasser worm was created from that, but it took about six weeks.



LEO:  Why?  Is it that they're getting smarter, or this is just an easy one to exploit?  How come so quick?



STEVE:  Actually, I think it's probably desperation.  There hasn't been anything for about, what, 14 months, 15 months.  And they were all still using this old LSASS vulnerability.  So, you know, the idea is that all of the carrier technology, the bot technology, the worm technology, everything is, like, well developed now and poised to take advantage of anything that happens in Windows.



LEO:  So they've got everything ready to go, they just need a hole.



STEVE:  Exactly.  So as soon as they had some way to get control, remote control of a Windows machine, they just stuck that little bit of code into their existing infrastructure, and off they went.



LEO:  What are these guys doing?  Are they trying to put mail servers on my system?  What is their goal?



STEVE:  Well, first of all, many of the news stories mischaracterized this as a virus because, you know, I guess just it's easy for them to say "virus" because that's just what they think of.



LEO:  What is it?



STEVE:  But in fact what we're seeing are worms.  And of course the difference between a worm and a virus is that a worm self-propagates, whereas a virus has traditionally been defined as the user has to do something to get themselves infected.



LEO:  Usually opening an email attachment.  So you don't have to open an attachment to get this one.



STEVE:  No.  The ideal situation would be a Windows 2000 machine.  And so we ought to mention that XP won't have this problem.



LEO:  Is that because of the patch?



STEVE:  Actually, XP has the vulnerability, and the patch fixes this in XP, even the most recently patched Windows, you know, XP Service Pack 2 machine with all the security stuff.   However, in XP, and further in Service Pack 1 and even further in Service Pack 2, other sort of related security enhancements, specifically anonymous log-on and admin log-on, are required.  Whereas on Windows 2000, an anonymous connection to a Windows 2000 machine can infect it.



LEO:  That's funny because I usually think of 2000 as being more secure than XP.  In this case not.



STEVE:  Well, and of course that's certainly the case.  And also in Service Pack 2 you would finally have XP's firewall running by default, and so that would block it.



LEO:  So if you had a firewall of any kind, a router or a software firewall running, if you were running XP, you would not be vulnerable.  So it's really only Windows 2000 machines that have not been patched, that are not behind a firewall, that are vulnerable.



STEVE:  True.  And so as a consequence of that, most end-users were not affected.  The other protection that an end-user might have, even if you had a Windows 2000 machine - which of course most end-users went from the last edition of 98, and they jumped over 2000 and went to XP.



LEO:  Right, it's mostly business that has 2000.



STEVE:  Exactly.



LEO:  Right.



STEVE:  But even if you were an end-user with 2000, no add-on firewall, no NAT router protecting you, with, like, a raw, broadband connection, where you'd, like, be "Okay, come get me," I mean, you know, like, first of all I'd be surprised if your machine was still on the 'Net anyway because, you know, it would just be attacked so quickly.  But it turns out the exploit port is NetBIOS, the good old, I mean, it's what I created ShieldsUP! to warm people about five years ago.



LEO:  File sharing.



STEVE:  Exactly.  It's the NetBIOS ports 139 and 445.  And, for example, my cable modem provider, Cox, they block those ports for me.  So, for example, I have a 98 machine on my cable modem.  And sometimes I'll bring my firewall down just to see what's going on.  And if I scan it with my own shield web service, I see green spots.  Everything is...



LEO:  Protected, stealthed.



STEVE:  It's stealthed.  Like those ports, 135 through 139 and 445 and a couple other, are being stealthed by Cox, my cable modem provider.



LEO:  Interesting.  In fact, more and more ISPs are doing that.  They're providing, in effect, firewalls for their users.



STEVE:  Exactly, because they don't want their clients' machines to get infected by these things because typically it turns these machines into zombies that then obey remote-control instructions and, for example, are sending spam out.



LEO:  So who got it?



STEVE:  Well, that's what's...



LEO:  And how?



STEVE:  That's what's really interesting is that CNN did a big story on this on Sunday night.  ABC, "The Financial Times," "The New York Times," General Electric, UPS, and even Caterpillar, you know, major corporations got it.  And the way they got it is they're not the typical end-user.  Apparently about 50 percent of corporate desktops are still using Windows 2000 because it works.  I mean, I'm using Windows 2000.  I'm really not yet even an XP user because XP doesn't really have anything that I want or need.  So about half of the corporate desktops are using Windows 2000.  Now, of course...



LEO:  But they're still behind firewalls.



STEVE:  Exactly.  They're absolutely behind a corporate firewall.  But they're not running individual machine firewalls.



LEO:  Oh, so a corporate firewall - okay.  I'm going to let you follow the train of thought here.  Plus, and I might add, they don't update these things as regularly as end-users might.



STEVE:  Exactly.  Well, for example, the patch was available from Microsoft the prior Tuesday before infection Tuesday, which was...



LEO:  Does Windows 2000 do automatic updates in the same way that Windows XP does?



STEVE:  It can, although it doesn't force it on you sort of in the same way.



LEO:  Most corporate computers probably don't have it turned on.



STEVE:  They probably don't have - exactly.  They don't have automatic update turned on.  And it might not be able to function through the corporate firewall anyway because, I mean, certainly corporations have had problems like this in the past.  I mean, they got zapped by Sasser, and they got zapped by Blaster.  So, you know, the IT guys in corporate world, they're going to have a firewall super locked down.  But what happened was some telecommuters got their laptops infected over the weekend, when this thing began propagating at the end of last week, and then they brought the laptops into work, plugged them into the network, and got infected from within.



LEO:  Ah.  So the road warriors, out for the weekend, who didn't have protection, brought it in and then infected the network because there's no internal firewalling.  They brought it into the safe space.



STEVE:  Brought it inside, exactly.  So Windows 2000 machines didn't have local personal firewalls.  They were all depending upon the corporate barricade on, you know, at the Internet interface.  But they got infected massively from within.



LEO:  Do you think there's a lesson learned here?  There's behavioral changes that need to be made?



STEVE:  Well, I think so.  I mean, it's certainly the case that, if corporations wanted to stay with 2000, and they had firewalls per machine, then they wouldn't have got - I mean, you know, CNN and "The New York Times" were seriously hurt by this.  You know, they got really zapped.  So had those machines had local personal firewalls, this wouldn't have been a problem.  There are companies who, for example, ZoneAlarm has the technology, and Sygate has the technology.  In fact, Symantec just yesterday announced they're buying - Symantec is buying Sygate in order to acquire their corporate lockdown technology, whatever they call it, where they would run a Sygate personal firewall, soon to be renamed the, you know, Norton Internet Security for Corporations 2006...



LEO:  Or something.



STEVE:  ...or something, who knows, and they'd be running that on every single one of these machines.  And then the idea is that they would have central policy control over what the individual machines' firewalls would be able to do.



LEO:  Right.



STEVE:  I mean, and no one wants to do it because it just mucks up your computer.  But it's clearly necessary.



LEO:  Either that or ban laptops.



STEVE:  Well, exactly.  Now, for example, I have a friend who has a corporate laptop.  He works for 3M.  And the only way that laptop can get on the Internet is by using a VPN tunnel into 3M that then allows the 3M network to go out.



LEO:  So you're never on the 'Net on your own connection.  You're always on 3M's connection.



STEVE:  Exactly, I mean, and he hates it because, you know, it's a slower connection than anything he just could get his own - he could get that laptop on the 'Net.  But 3M's IT guys have, like, you know, screwed this thing down so tight that nothing is able to run at all.



LEO:  And now you know why they do that.



STEVE:  And now it's real clear that that was a good policy on their side.



LEO:  Does this herald anything new, or is this just business as usual, just yet another network worm and some people who had one little hole that they weren't keeping an eye on?



STEVE:  I would say this was another network worm.  It's probably significant that it was back on Windows 2000 and not on XP because, you know, most of the world is moving to XP.  Microsoft's security provisions in XP, even though they didn't deal with this vulnerability, it would have prevented a worm from being written to an XP machine both because of internal policies and because Microsoft finally is running a firewall by default on Service Pack 2 of XP.  So...



LEO:  We talked about this the last time you were on Call for Help.  Hackers are going to have - because finally XP is getting so buttoned down, hackers are going to start to have to look for new ways and new operating systems to attack.



STEVE:  It's funny, too, because I've thought about that several times.  Since you and I did that Call for Help show, there have been several announcements of vulnerabilities in third-party software, backup software specifically, where exactly this is going on, is external, remote, take-your-computer-over-if-you're-using-this-backup-software kind of stuff.



LEO:  So more and more, do you think attacks will take those avenues?



STEVE:  I think so because I think Microsoft, I mean, it's taken Microsoft, God knows, you know, 15 years to button this stuff up.  But they're finally, as a policy, they're showing some real improvements.



LEO:  Steve Gibson, as usual, you did it again.



STEVE:  Always a pleasure, Leo.



LEO:  That's it for this edition of Security Now! with Steve Gibson.  Security Now! with Steve Gibson can be heard every Thursday, starting at midnight.  You can download it for Friday or your weekend.  You can listen on AOL Radio at AOLmusic.com or, of course, through our feed at feeds.feedburner.com/securitynow.  And we thank AOL Radio for the bandwidth for this podcast.  I'm Leo Laporte.  See you next time on Security Now! with Steve Gibson.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#2

DATE:		August 25, 2005

TITLE:		"HoneyMonkeys"

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-002.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  How Microsoft's "HoneyMonkey" system works, how it finds malicious web sites before they find you, and what Microsoft is doing (and NOT doing) with this valuable security information it is now collecting.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 2 for August 25, 2005.  On this episode we decided to use something a little different.  Normally we have used Skype in the past for both This Week in Tech and Security Now!.  But of course yesterday Google came out with its new Google Talk, and we thought we should try it.  We were pretty impressed with the results.  The entire interview was conducted with Google Talk.  Steve and I both agreed, the best part is the incoming ringtone.  Ooh.  Oh, I do like that.  Listen to that.  Oh, I do like that.  That sounds good.



STEVE GIBSON:  I mean, that's worth it just for the ringtone.



LEO:  Just for the ring.  That's very pretty.  Very, very pretty.  Wow.  So what are we going to talk about today?



STEVE:  Today we're going to talk about a recent emergence of some technology from Microsoft Research Branch called the Strider HoneyMonkey Exploit Detection System.



LEO:  Wait a minute, wait a minute.  Strider HoneyMonkey.



STEVE:  Yeah.  Now...



LEO:  Try to guess what that is, folks.



STEVE:  Well, honeypots, of course, are technology that's been around for a while.  A honeypot is what many, for example, security systems and firms, and even just people who are interested in Internet security setup, a honeypot is a computer which is sort of stuck out on the Internet and allowed to be attacked by hackers for the purpose of finding out what sort of exploits are going on, what's out there.  Basically it's a system you stick out there to be a victim of hacker attacks.  And it's closely monitored, but obviously it's protected from the rest of the network so that nothing that happens to it can infect anyone else's network.



LEO:  I guess it's kind of like Winnie the Pooh.  You put out a honeypot and see what happens.



STEVE:  And it attracts the bees.



LEO:  See who sticks their nose in.



STEVE:  Exactly.



LEO:  All right.  Well, that's been around for a while.  There have been a lot of different...



STEVE:  Exactly.  That's old technology, and but very effective for finding out what's out there on the Internet, you know, what types of exploits are out there.  And, for example, that's the way these security firms discover new worms...



LEO:  Right.



STEVE:  ...is that they've got honeypot or honeypot networks of computers that get infected by new worms, and that allows them to determine what's, you know, what kind of junk is out there cruising around the Internet.  Well, Microsoft decided to experiment with reversing this process.  Rather than wait for bad stuff to come to users, they've created a network of machines which they call "HoneyMonkeys."  And if you're familiar with the old, you know, monkey see, monkey do...



LEO:  Yeah.



STEVE:  ...the idea that monkeys mimic things that they see.



LEO:  Yeah.



STEVE:  Well, these HoneyMonkeys mimic users who are surfing the Internet with Microsoft's Internet Explorer and getting themselves infected by malicious websites.



LEO:  Oh, so they're - you mean end-users?  Who are they going for here?



STEVE:  No, no, they're actually going for malicious websites...



LEO:  Oh, the bad guys, I get it.



STEVE:  Yeah.  But the HoneyMonkey computers pretend to be users who are, like, for example, cruising porn sites and getting themselves...



LEO:  I see.



STEVE:  ...infected as a consequence.



LEO:  So they pretend to be users in order to find malicious websites.



STEVE:  Exactly.  It's sort of in the same way that a web search system uses spiders to spider the web and follow links.



LEO:  Right, right, right.



STEVE:  These things go out and pull web pages from servers in order to, literally, to get themselves infected, to solicit infections of themselves.



LEO:  So instead of a spider, it's a strider.  But otherwise the same.



STEVE:  Exactly.  And...



LEO:  It's astride the 'Net.



STEVE:  Well, I'm not sure if "strider" refers to that because they've got a number of other research projects.  There's something called the Strider Gatekeeper, which is a spyware detector, and a Strider GhostBuster, which is a rootkit detector.



LEO:  Right.



STEVE:  So Strider seems to be sort of a moniker under which a number of different security-related projects are put together.



LEO:  Okay



STEVE:  But what they do is, they use sort of like a VMware, or Microsoft's Virtual PC technology, to create a virtual PC.  The reason they do this is that, once they get themselves infected, of course, they don't want to have to reformat the hard drive and reinstall Windows and everything.  So a virtual PC, you're able to sort of boot from a file and just wash it away if it gets infected.  So the way this starts is that Microsoft does some standard searches to, for example, find hosts files out on the Internet, which have been assembled by humans, of sites you want to stay away from.  They'll also use links in spam and fishing emails.  Basically, because the web is so huge - it's, you know, 10 billion pages - you just can't go out there looking at every single page because most of them are certainly not malicious.  It's only sort of like the seedy sides of the web...



LEO:  Right.



STEVE:  ...the bad neighborhoods, where there's a useful expectation that you might have something malicious trying to use an exploit in your browser to infect your machine.  So they sort of start off seeding their HoneyMonkeys with - I know, it's fun to say.



LEO:  Sounds more interesting, really, than it is, actually, I hate to say.



STEVE:  Well, but wait till I tell you what the results have been.



LEO:  So they've set up these honeypots.  They've established striders, or spiders, to search the bad areas of the 'Net for bad guys.  Then what?



STEVE:  Well, so the idea is that, after running this for one month, that is, seeding their HoneyMonkey project with a bunch of potentially bad URLs that they've collected from, you know, just doing web searches of people's hosts file, which are like URL block lists...



LEO:  Right.



STEVE:  ...essentially, Microsoft has found 752 URLs which attempt to infect their Windows Internet Explorers by using known vulnerabilities.



LEO:  Interesting.



STEVE:  They actually sort of release these HoneyMonkeys on a URL in stages.  They call it a "pipeline."  They'll first use an unpatched XP, then a Service Pack 1 with patches, then a Service Pack 2 unpatched, then a Service Pack 2 with all recent patches, in a series of stages, and even, finally, a Service Pack 2 that's got all the latest patches, to find out whether there's any pages out there that have any unknown zero-day exploits.



LEO:  Something that Microsoft hasn't yet patched.



STEVE:  And they have found one.



LEO:  They did.



STEVE:  Yeah.



LEO:  Now, when did they find these?



STEVE:  They actually found one which, fortunately, they knew about, but which had never been publicly disclosed.



LEO:  Wow.  Now, what does that tell them?



STEVE:  Well, yeah, exactly.  This demonstrates that there are websites out there using exploits that have been discovered but kept quiet, and are actively working to infect people's machines.



LEO:  This addresses something that the security community has for a long time called "security through obscurity."  The feeling in a lot of companies - I always thought Microsoft kind of had this feeling that, well, if you just don't tell anybody, nobody will know there's a problem.  Well, apparently you don't have to tell anybody.  Hackers find these problems anyway.



STEVE:  Well, what they're also doing is they're analyzing the interconnectivity of these exploit sites.  What they have found is, within the top 30 exploiting sites, many of them are owned by the same people...



LEO:  Oh, interesting.



STEVE:  ...and the site registration addresses covers more than ten countries.



LEO:  Wow.  So you think there's a ring?



STEVE:  Well, there's a great deal of interaction among the sites, with sites referring them to each other.



LEO:  Ah, interesting.



STEVE:  One guy, for example, owns the number one, the number three, and the number ten exploit sites in terms of strength; and 61 other exploit sites redirect traffic to this guy.



LEO:  So is this the Osama bin Laden of hackers?



STEVE:  Well, essentially what's happening is there are now, I mean, the way this is shaping up is that the notion of infecting people's machines with spyware is becoming a business model.



LEO:  Right.



STEVE:  I mean, it's not just hackers now.  It's people trying to acquire a spam box, as we know, zombie machines, basically trying to make money from maliciously infecting other machines.



LEO:  Is that why spyware has gotten so much worse, and viruses have gotten so much worse, because now there's money in the equation?  Before it was just to show off.



STEVE:  Yes.  Exactly.  It's not just a hacker home from high school in the afternoon, unsupervised, screwing around.



LEO:  Well, it might be, but now he wants money.



STEVE:  Exactly.  Exactly.



LEO:  It might have been.  It might still be this kid after school.  But now he wants something - he's making some money.  This is the paper route of the 21st century.



STEVE:  Right.  Well, and a couple of other things have been found.  First of all, most of the exploit URLs are pornography sites.



LEO:  Okay.



STEVE:  So, I mean, and that's not a surprise to anyone who's been on the 'Net for a long time.  You know...



LEO:  It's a little self-selecting, though.  These are sites that Microsoft has seeded, right?  I mean, so where do they get these sites originally?  I mean, maybe that's because that's what Microsoft had, is what I'm saying, right?



STEVE:  Well, no, what they did was they did searches for...



LEO:  So they searched the entire 'Net.  They didn't kind of limit their search.



STEVE:  Well, they did searches, for example, using MSN Search, I would imagine.  They...



LEO:  Well, there's your problem right there.



STEVE:  They did searches for people who had posted their hosts file or their list of known spyware sites.  It was sort of...



LEO:  So they were going through other people saying, this is where we've had problems.



STEVE:  Exactly.



LEO:  Because you'll post your hosts file asking for help or offering, actually, help, saying "block these sites."



STEVE:  Exactly.  Here's a list of all the bad domains that I don't let my computer go to.



LEO:  So this is what the community has been saying.



STEVE:  And so these are people sharing them.



LEO:  Right.  So, interesting.  So I guess advice, piece of advice number one would be stay away from adult websites.



STEVE:  I think that's probably a really good idea, I mean, because...



LEO:  That's a honey bucket of their own, isn't it, a honeypot of their own, really, if you think about it.  Hackers are going to put their bad stuff on sites that they know people will be drawn to.



STEVE:  Right.  Well, and we've also seen - apparently there is a shopping site which performs exploits.  There are now - they have discovered some of these URLs are freeware sites...



LEO:  Oh, boy.



STEVE:  ...that not only offer freeware where the freeware contains spyware...



LEO:  Right.



STEVE:  ...but the site itself is using browser vulnerabilities to directly install spyware in people's machines.  So just going to a freeware website, you know, one of the obviously low reputation sites, but still, you know, that's one thing we're seeing.  And there are even some search sites which - they found more than 20 malicious search sites where using the site to do searches attempts to infect your machine with malware.



LEO:  So to kind of explain this in a little bit of more detail, of course people understand, if you download a program, you run the risk of that program being malicious.  But that's not the only way they're infecting you.  These sites, just by visiting the site you're getting infected?



STEVE:  Well, in fact, that's what - in order to test that, that's what the HoneyMonkeys do.  They take a fresh computer with some level of patching done.



LEO:  Right.



STEVE:  They simply display the page.  They go to the URL and wait a few minutes.



LEO:  Right.



STEVE:  They don't explore links, they don't click on buttons saying yes to anything.



LEO:  They just sit there.



STEVE:  They just go to the page.  And then what they're doing is they're using this other technology that Microsoft has to detect rootkit activity, these other Strider projects, the so-called GhostBuster and the Gatekeeper, to detect any changes that are made to the machine as a result of just going to this page.  And so that's what they're detecting.  So basically Microsoft, for the first time, is being proactive in sending Windows out onto the Internet and monitoring whether changes are made - exploitive changes, presumably - just by going and visiting a website.



LEO:  And you think this is a good technique?  You think this is a good policy, a way to do it?



STEVE:  Actually, I'm very excited about it.  Now, it means a couple things that are interesting.  They also, in their research report, they check to see whether various search engines, like Google and Yahoo! and MSN, contained the links, that is, these URLs that they found.  Google and Yahoo! and MSN did.  Microsoft removed them from their search engine, so that MSN no longer contains these bad URLs.



LEO:  There's the little ad for Microsoft in there.  But I would hope that they told Google and Yahoo!, as well.



STEVE:  No.  Microsoft's very competitive.  They're, you know, you and I have talked about how...



LEO:  So here's the press release.  Microsoft has found bad sites.  We're not going to tell anybody, but we'll block them on MSN.



STEVE:  And - exactly.



LEO:  Oh, man.



STEVE:  And, notice also, Microsoft...



LEO:  I was starting to like them for a minute, there.



STEVE:  Notice also that Microsoft is only checking for IE vulnerabilities, not for Netscape, not for Mozilla Firefox or anything else.



LEO:  Interesting.



STEVE:  And the other thing is that Microsoft is now feeding these things to their security team...



LEO:  To fix.



STEVE:  ...it's the ISE, the Microsoft Internet Security Enforcement Team, and getting involved with the FBI to go after these sites and begin to corral this.  So suddenly...



LEO:  Well, that's one thing I wanted to ask you, though.  A lot of malicious sites open and close very rapidly.  For instance, the fishing sites are only up for a few days.  So they're really only catching a certain kind of scammer.



STEVE:  Well, and the other thing they're doing, it also argues for them not revealing the URLs that they're monitoring because they're now...



LEO:  Yeah, they're watching.



STEVE:  ...monitoring these sites, and they're watching them for the emergence of new exploits.



LEO:  Right.  How long has Microsoft been doing this Strider MonkeyPot thing, whatever it's called?



STEVE:  It's been about six months.



LEO:  All right.



STEVE:  And the news, I mean, the security community a few weeks ago really began buzzing about it because they produced a research report.



LEO:  Right.



STEVE:  But, for example, in the case of this one zero-day exploit that had not ever been publicly disclosed, the HoneyMonkey discovered a page, a site that was doing it, identified what it was, and these guys thought, oh, my goodness, you know, here's something we've never told anybody about.



LEO:  Right.



STEVE:  We know about it.  We're going to fix it when we get around to it.  But a site is already exploiting it.  Well, within two weeks, 40 other sites were running the same unknown exploit.



LEO:  Wow.  Now, does Microsoft offer any theory as to how those sites - the guy in the first place discovered this vulnerability?



STEVE:  Yeah, it's the interconnectivity.  I mean, there's a community, you know, a real dark underbelly here, that are communicating with each other and sharing this information.  And, for example, many sites will redirect you to a different site that uses different exploits to see if some other location is able to infect you.



LEO:  How about the original hacker?  How did he uncover this hole?



STEVE:  That's a really good question.



LEO:  Does he have an inside source at Microsoft maybe?  Or  maybe he just banged on Internet Explorer to...



STEVE:  Really good question.  Now, and again, one of the really interesting aspects of this is that Microsoft is actively working now to clean things up, but only for them.



LEO:  Right.



STEVE:  You know, only for their tools, only for their web search.  So...



LEO:  What's the reaction of the security community to that aspect of it?



STEVE:  Well, it's, you know, it's been sort of a mixed blessing.  It's going to be interesting to see what Microsoft's going to do.  The security community has suggested, well, maybe Microsoft's going to go into the URL blocking business that other companies are offering to commercial companies.



LEO:  Right.



STEVE:  And get in there.  Also, it's certainly the case that this factors into Microsoft's anti-spyware and forthcoming antivirus initiatives.



LEO:  This is the subscription program they plan to offer.



STEVE:  Right.



LEO:  And maybe that would be part of the subscription program is, oh, we know something that no one else knows, which is there's a problem that we can prevent that no one else can prevent.



STEVE:  Yeah.



LEO:  And you'd better pay $29.95 a year to subscribe to our...



STEVE:  Now, the flipside of this is that, because you're not able to spoof the IP of the HoneyMonkey, and Microsoft...



LEO:  By the way, ladies and gentlemen, this may be the only podcast where you ever hear the phrase, "spoof the IP of the HoneyMonkey."



STEVE:  So right now this HoneyMonkey network has been operating from a certain zone of IPs.  And you can imagine that one of the things that the malicious websites...



LEO:  Yeah.  They want those numbers.



STEVE:  Exactly.  The malicious website webmasters will block Microsoft's HoneyMonkeys from visiting their sites in order to...



LEO:  Well, if they could figure out who they...



STEVE:  ...continue to black this out.



LEO:  If they could figure out who the HoneyMonkeys are.



STEVE:  Exactly.



LEO:  I mean, they have to find those IP addresses.  I presume that's a highly guarded secret at Microsoft, right?  I mean, they're not going to tell anybody.



STEVE:  Well, you would think that, if the HoneyMonkeys are routinely visiting these sites...



LEO:  Maybe people will start noticing.



STEVE:  If, now that the webmasters of these malicious sites know to be, you know, on guard...



LEO:  Right.



STEVE:  ...that they might say, wait a minute, this same, you know, here's an IP range, a block of IP addresses that seems to be coming back a lot.  On the other...



LEO:  That argues for Microsoft not telling anybody about this.  Maybe it would have been better if Microsoft had kept this a secret.



STEVE:  Well, it also means that Microsoft's going to have to set up, and they have talked about setting up, networks around the world...



LEO:  Right.



STEVE:  ...to essentially distribute their HoneyMonkeys around the globe so that they're much harder to track and verify.



LEO:  And not such a bad thing, if bad guys start blocking IP addresses out of paranoia.  Maybe they'll protect some innocent people, as well, right?



STEVE:  Well, I was going to say that...



LEO:  If they blocked everybody from Redmond, Washington, that'd be great.  Everybody would move to Redmond saying, I'm safe.  I'm in Redmond, Washington.  They might think I'm Microsoft.  They might think I'm a HoneyBucket Monkey, whatever it is.



STEVE:  You might also argue that somebody who is using a porn site, himself or herself constantly, might have their IP blocked because they're being...



LEO:  Yeah.



STEVE:  ...they're incorrectly being identified as a HoneyMonkey.



LEO:  So, in fact, your advice would be to use more porn?



STEVE:  No.  I think...



LEO:  No.



STEVE:  ...you'd probably want to stay away from those sites.



LEO:  The risk is there.  So, now, how do we know these - now, obviously Google's not one of the search sites.  But how would we know if it's a malicious search site?  I mean, that's kind of scary.



STEVE:  It is scary that, among these malicious sites, there were 20 that were found.  I mean, it really argues for sticking with the top search engines...



LEO:  Go to the big guys, yeah.



STEVE:  ...Google, Yahoo!, and MSN.



LEO:  Yeah.  Well, sticking with well-known sites in general, I guess.



STEVE:  Yes, yes.



LEO:  Wow.  Or patching your Windows as often as possible, not using Internet Explorer, that kind of thing, too.



STEVE:  Well, yeah.  One of the things that many of the pages that were talking about this were referring to was the fact that this demonstrates the effectiveness of patching.  Well, who ever doubted the effectiveness of patching?



LEO:  No, right.  That's not a question.



STEVE:  I mean, you absolutely want to keep...



LEO:  Patch.



STEVE:  It's like, oh, look how many pages infected us when we just went with a brand new Windows XP.  But, yeah, no kidding.



LEO:  Yeah, right.  Well, in fact, you just go online with an unprotected Windows XP Service Pack 1, you'll get Sasser within a minute.



STEVE:  Oh, it's game over.  You stick it on the 'Net without a firewall up, and you're in trouble.



LEO:  Yeah, yeah.  So is there anything that the average user can learn from this?  I mean, I guess we've said a few things.  Stay away from adult sites.  Be careful where you go.  Stick to the kind of major, well-known sites.  Any other things that we know now because of this?



STEVE:  No, except that I think that it does sort of flip the whole security, you know, Microsoft security disadvantage sort of upside down, to the degree that Microsoft figures out how to protect people from this.



LEO:  Yeah.  Well, I would like to see Firefox do this.  I would like to see other companies do this.  I'd like to see Apple do this, right?



STEVE:  That's exactly the point, is that we know that there are Firefox vulnerabilities.  Apple just released a...



LEO:  Big one.



STEVE:  ...major security update.



LEO:  40 updates, yeah.



STEVE:  Yeah, 44 different security patches.  So I guess the point is that Microsoft used to argue that the reason we seem to look more insecure is that we're being attacked more often, and we're beginning to see, you know, non-IE attacks on other browsers and non-Windows attacks on - I mean, and Linux, for example, non-Windows attacks on other OSes.



LEO:  Yeah, but none of them have been as severe yet.



STEVE:  None of them have been severe, although there are, you know, remote code exploit attacks all over.  So you can almost argue that, because Microsoft has had such a problem for so long, they're finally getting truly proactive; and that, as a consequence, you could foresee the day where Windows is more secure than the others.



LEO:  Is something like a Strider HoneyMonkey project - I can't believe I just said that - difficult to do?  Is it something that other companies couldn't do, as well?



STEVE:  No.  And there is really nothing hard about it.  And in fact, in Microsoft's research report, they do talk about other companies doing this kind of thing as a proactive means of finding flaws.



LEO:  I have mixed feelings about it.  On the one hand, I'm glad they're being proactive.  On the other hand, it kind of makes me mad that they're keeping it to themselves.



STEVE:  Yeah.  I mean, I certainly understand that.



LEO:  Yeah.



STEVE:  And, for example, that they're cleansing their own search engine of those dangerous URLs...



LEO:  They're using it to their economic advantage, which kind of makes me a little ticked off, to be honest with you.  Isn't it the tradition of the security community that you share the results of this kind of research as widely as possible?  If you care about security, you don't take advantage of these flaws to boost your numbers.



STEVE:  It gives Microsoft a competitive advantage.



LEO:  Yeah, I don't like that.



STEVE:  And clearly, I mean, the fact that they're now in the spyware business, or the anti-spyware business, and they're now - some people might argue that they are in the spyware business - but the anti-spyware business and the antivirus business, it's clear that security is becoming a profit center.  And so Microsoft has come up with, you know, a substantially useful technology.  The good news is they've published it.  Everyone understands how it works.  So other people can certainly set up their own HoneyMonkey systems, should they choose to.



LEO:  Everybody.  Make yourself a HoneyMonkey.  Well, we've learned a lot.  I appreciate it.  More information, of course, as always, at GRC.com.  That's where you'll find ShieldsUP!, SpinRite, and the many great pro bono projects that Steve Gibson always embarks on to save our bacon, or our HoneyMonkeys, as the case may be.  Steve, great to talk to you.



STEVE:  Always a pleasure, Leo.



LEO:  We'll talk again next week.



STEVE:  See you next week.



LEO:  That's it for this edition of Security Now! with Steve Gibson.  I'm Leo Laporte.  Thanks for joining us.  We'll see you next week.









Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/








GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#3

DATE:		September 1, 2005

TITLE:		NAT Router Firewalls

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-003.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  How and why any simple NAT Router makes a terrific hardware firewall. (And what you must disable to prevent it from being bypassed!)



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 3 for September 1, 2005, NAT Routers.



So let's talk about routers, because this is something you schooled me in some time ago and convinced me that a software firewall wasn't as good - even though you're the guy who really put ZoneAlarm on the map - wasn't as good as a hardware router.



STEVE GIBSON:  Well, yeah.  I guess the point is that a software firewall, while it's running in your machine, it's victim to anything that your machine is.  And we know, we know for sure that many malware now deliberately knows about software firewalls and has taken actions to shut them down.  So while a software firewall is certainly a good thing to have for monitoring outbound flow from your machine, what few people recognize is that a NAT router, the same kind of NAT router that, you know, many people have for so-called "IP sharing," where they have one IP on their cable modem or their DSL, and they want to share it among many machines, that makes inherently an extremely good hardware firewall.  Nothing is able to come across the router that isn't expected.  Because the way it works is that the router needs to know, when packets do arrive, which machine behind the router that is in your own private network is expecting to receive it.  Since they're all sharing that one IP, the router has to have some way of figuring out which one asked for it.  The way it does that is it watches the packets leaving the network.  It watches any machines on the LAN sending data out onto the Internet.  When packets leave, it makes a note of that packet, where it's bound for, and it changes the IP on the packet to its own public IP and gives it a port so that, when data comes back from that remote server, it looks in this table, so-called "connection table," to try to find a match.  When it's able to match it up, that tells it which of the machines - because you might have, you know, you could have 15 of them behind your NAT router - it tells it which of the machines originated that traffic in the outgoing direction, so that it knows how to route it in the incoming direction.



LEO:  So that's what a router is doing.  It's saying, the data came from X; when it comes back, I send it to X.  That's called "routing."



STEVE:  Exactly.



LEO:  How does that protect me?



STEVE:  Well, the way it protects you is that hackers that are scanning the 'Net, or worms that are infecting the 'Net, that are just sending out data - or remember for a while there was the Windows Messenger spam, where people were getting these pop-up Messenger dialogues all the time?  All of that - worms, hackers, scanners, Messenger spam, all that - those are unsolicited packets, meaning that they're coming from some random IP and port number, and they're just scanning across your IP range of your ISP, and that traffic tries to reach your computers.  Well, the beauty of having a NAT router as, like, your first line of defense, is any of that stuff coming in, the router thinks, oh, maybe this is expected, maybe it's been solicited by a computer behind the router.  So it checks its table.  It will not find an entry there because it's coming from, you know, any of four...



LEO:  It's unsolicited, right.



STEVE:  Yeah, exactly.  It's coming from any of other, you know, 4 billion IPs - there literally are 4 billion possible IPs - and so it ignores it.  It just throws it away.



LEO:  Is, I mean, is that all a firewall does?



STEVE:  That's really all a firewall does.



LEO:  So just by the virtue of the fact that it can't route a packet it didn't expect, it's blocking everything unexpected, it's a firewall.



STEVE:  Yeah.



LEO:  Even if it doesn't say so on the box?  Even if they don't say, this is a router and firewall?



STEVE:  Exactly.  Any NAT router is also a firewall.



LEO:  Now, this raises a couple of questions.  First of all, are all broadband routers NAT firewalls?  Or NAT routers?



STEVE:  I don't think I've ever seen one that isn't.



LEO:  That's how they work.



STEVE:  Yeah.  That's essentially - that's why people buy them is they want to share one IP, one public IP among multiple machines.



LEO:  So if it's able to do that, it's blocking stuff.  The second thing, and this is the one that people come up with most often when I tell them, oh, no, you've got a very good firewall with your router, they say, "But it's only looking at incoming traffic.  What about outbound traffic?"



STEVE:  Well, and that's a really good point.  It permits outbound traffic all the time, which is why it still makes sense to have a personal firewall running on the computer.  You know, people want security to be perfect.  They want it to be an absolute, black or white thing.  And it's just not.  So the more security you have, the better.  And so a hardware firewall - one of the nicest things about a NAT router is that, if you have a computer with a personal firewall, I mean, that's just directly on the Internet with no NAT router, you'll very quickly get used to seeing all these pop-up messages as your software firewall is saying, oh, no, you're being attacked, you know, I'm blocking this, I'm blocking that.  Here's somebody attacking you, blah blah blah, you know.  The personal firewalls running on computers tend to be very noisy because they're trying to sell you on all the benefit that they're delivering.  They're saying, look at all the good I'm doing for you.  This horrible stuff would have actually reached into your computer if I, the software firewall, hadn't blocked it.  Well, it's just nonsense.  You know, I coined the acronym "IBR" for Internet Background Radiation.  It's just like static on the 'Net.



LEO:  There's always - this stuff's always going to be happening.



STEVE:  Well, in fact, we're never going to get worm-free now.  There's worms out.  And it's common knowledge that, if you take an unpatched Windows machine and stick it on the Internet, within minutes it's compromised, and it's got spyware and malware crawling in it.  Because the 'Net is just now crawling with this stuff, we're never going to get rid of it.  It's just - it's part of the 'Net ecosystem.



LEO:  So you're always going to see this background radiation.



STEVE:  Yes.



LEO:  Unless, of course, you put on a router, and then it suddenly gets silent.  Gets very quiet.



STEVE:  Well, that's exactly what happens.  As I was going to make the point, is that, if your computer with a software firewall is right on the Internet with no other protection, then the software firewall's popping up all the time.  If, however, the moment you put a router on your Internet connection, everything else still works, but your software firewalls go quiet.  They're not complaining anymore.  They're not popping things up because nothing is coming inbound that's going to get past the router.



LEO:  So you say the software firewall protects you against outbound traffic.  Why would there be any outbound traffic?  Isn't that my machine?  What's coming from my machine?



STEVE:  Well, of course, that's the benefit of a software firewall, is that malware can get into your system and use your Internet connection without your knowledge.



LEO:  So if your machine already is infected, the software firewall can notify you that something's going on under your nose.



STEVE:  Exactly.  It will...



LEO:  In fact, that's how you discovered spyware.



STEVE:  That's exactly right.  I was beta testing the very first pre-release version of ZoneAlarm, and I had something on my machine which just completely surprised me.  I think it was PKZIP for Windows briefly had some adware that, I mean, it wasn't malicious spyware, it was just adware that was bundled in.  And I had installed it because I was wondering how it compared to WinZip.  And I thought, well, I'll give this a try.  Well, it brought some advertising software along with it which, without my knowledge or permission, was using my connection and connecting to remote servers.  I don't know that it was doing anything bad.  I doubt that it was.  But the fact that this was happening said, whoa, you know, there's a need for knowing what's going on.



LEO:  So you said something interesting.  You said it's not a bad idea to have both a hardware router, acting as an inbound firewall, and a software firewall to protect you from outbound traffic.  Do you need both?



STEVE:  I think it makes sense to have both.



LEO:  There is a downside to software firewalls.  Now, you mentioned one, which is that bad guys can turn them off, if they're sophisticated enough.



STEVE:  Right.



LEO:  But the other is it does add to the complexity of your system.  You're running system-level software that can cause problems and takes up CPU cycles and memory.



STEVE:  Well, and, yes.  And I'm all for not adding stuff you don't need.  Which is why one of the upcoming positive features of the Windows Vista OS is they've finally added an outbound filtering capability to the XP firewall, which will be on by default, and users will begin to have this sort of functionality we've always had to add add-ons in order to get.  It'll be built into the OS and just inherently more stable.



LEO:  The current Windows firewall isn't as effective?



STEVE:  No, in fact, the current Windows firewall is very much like a little NAT router on your own system.  It allows outbound traffic to flow without being fettered at all, but it does block incoming traffic.  So it's sort of like having a little NAT router right there.  But of course all the hackers know how to turn it off.



LEO:  Right.  Is it fairly easy to do?



STEVE:  Oh, yeah.  It's quite trivial, actually, to turn it off.



LEO:  Oh, that's too bad.



STEVE:  I mean, and that's an inherent problem with a software firewall.  But I don't see that changing anytime soon because to change Windows architecture would be just a huge, a huge revamp of the OS.



LEO:  So if you've got a router, no point in using the Windows firewall.  It's not giving you any additional protection.  But you might want to run something like ZoneAlarm, my personal favorite right now.  I think you were the one who told me about it, is the Sygate personal edition, the free Sygate firewall?



STEVE:  I like Sygate.  I like - actually my favorite two are the Kerio or the Tiny personal firewall.



LEO:  Tiny's very good, yeah.



STEVE:  And of course Sygate just got purchased by Symantec. 



LEO:  Right.



STEVE:  So it's going to be gone here before long.



LEO:  It won't be free anymore, yeah.



STEVE:  Don't know if you can still get it.



LEO:  Right.  So Tiny or Kerio.  Is it K-e...



STEVE:  K-e-r-i-o.



LEO:  ...r-i-o, all right.  So those are two.  And they're free?



STEVE:  Yes, they have free, and then they have commercial editions.  But the free ones work just fine.



LEO:  I have to admit, I don't run an outbound firewall.  I just trust that my NAT router is protecting me.  And I guess, if you're pretty sure you're not infected by spyware or malware of some kind, that's probably okay.



STEVE:  Actually, Leo, I don't either.



LEO:  Oh.  You make me feel better because I don't want that additional complexity and...



STEVE:  But, see, I also don't have antivirus or anti-spyware of any kind.



LEO:  But you're very careful about what you do.



STEVE:  I'm, yeah, the term would be "anal."  I mean, I am so careful.  Nothing could make me open a file attachment in email.  I mean, just nothing.



LEO:  No.



STEVE:  I also do something which is uncommon, which is to surf with IE.  I still use Internet Explorer, but it's locked down so that it won't run any scripting or do anything unless I explicitly permit it on a per-site basis.



LEO:  We have the instructions that you gave me some time ago for doing that on my radio show website.  I will put a link to that in the show notes so that people can - it involves trusted zones and protecting yourself that way.  And it's kind of a pain in the butt, to be honest with you, Steve, I mean...



STEVE:  I know.  I know.



LEO:  That's the nature of security.



STEVE:  It really is.  There isn't a way to be out there exposed on the Internet and be safe.  So you've just got to keep your guard up.



LEO:  So we've talked a little bit about, just to recap, the fact that a router makes a very good inbound firewall.  If you want further protection, a software firewall will protect you against outbound traffic.  There is an exception, though.  Routers, in order to do some things on the Internet, you have to poke a hole in the router.



STEVE:  Correct.



LEO:  Does that compromise your security?



STEVE:  Well, it potentially does.  And, in fact, it's the one caveat and the caution that I try to always remind people about.  And that's this thing called Universal Plug and Play.  This was a standard that Microsoft created which first appeared in XP.  And of course it had all kinds of problems and exploits.  In fact, it's why I created by UnPlug n' Pray freeware, to shut this off on the XP side.  But that's different than shutting it off on the router side.  What Unplug and Play - I'm sorry.  What Universal Plug and Play, which is what it's called on the router, does is it allows any computer behind the router to ask for holes to be opened up so that this unsolicited traffic that we are talking about the router being so good about blocking, to allow the unsolicited traffic to actually pass through the router, even though it's not a conversation or a connection that has been initiated from behind the router.  So it is a hole that traffic is allowed to come through, and then routed to a specific machine.  This is important for, in some cases, for peer-to-peer file sharing, but mostly for things like Instant Messaging clients, where you want to be able to be part of a peer-to-peer network.  You want to be able to receive incoming messages into your network.  The problem, of course, is that Instant Messaging is replete with all kinds of malicious software, you know, malware, spyware, viruses, there's all kinds of problems and security problems with Instant Messaging that users need to be aware of.  So contemporary routers have - they all have something called Universal Plug and Play.  If you don't know you need it, turn it off.



LEO:  This is essentially what it's doing, is automatically port-forwarding.



STEVE:  Well, it's automating the configuration of the router.  But there's no security associated with it.  You don't get a pop-up; you get no notice whatsoever.  And, in fact, even if you look at the user interface, you know, how you're able to go to a sort of a virtual website and web pages the router creates, you can look at that, and it doesn't even show you what port-forwarding has been configured by the software behind your back.



LEO:  It may be turned on without your knowledge, without warning.  And there's no way of knowing what was turned on.



STEVE:  Correct.  And...



LEO:  If I turn off UPnP in my router settings, does it turn off all the forwarding that's been done?



STEVE:  I would turn it off, and then I would restart or reset the router so that it's going to come up fresh and clean.



LEO:  Oh, interesting.  Because it may, in fact, retain some of those port-forwarding settings.  Now, frequently people will do port-forwarding intentionally.  If I want to use BitTorrent or MSN Messenger, I will, in order to use it, I will have to do some port-forwarding.  I will have to open up some holes in my router.  But at least I'm doing that explicitly.



STEVE:  Well, and, in fact, yes.  When you and I were using Skype for these conferences before, I had to deliberately open a port through my router so that a friend - actually, it wasn't you that I had a problem with.  It was someone else who had a VPN router that wasn't peer-to-peer friendly.  And so I had to open my side up so that Skype was able to hook us up directly, and we were able to get a good connection.



LEO:  Oh, interesting, okay.  So there are times when you do do this.  But at least you've done it explicitly.  You know it's being done, and it's not some malware that's doing it, it's you.



STEVE:  Well, that's exactly the problem, is that malware will start becoming - and as far as I know, there isn't any yet, but we might as well be ahead of the curve this time.  Malware will start issuing UPnP commands to reach out to people's routers, as routers become more popular, in order to open holes back into the malware, so that, for example, traditional trojans are able to operate.  Because a trojan that would normally be functional will be blocked by a router.  No one will be able to call in to the trojan as they used to.



LEO:  Well, so I'm going to now extend our list of things that you should do.  So we said you should have a router.  You might want to have a software firewall, as well.  You should, on this router, you should turn off Universal Plug and Play.



STEVE:  And then restart the router.



LEO:  Restart the router.  And one more thing I'll add, which I know you would add, but is that you should change the password on the router because all of them have default passwords which are well known.



STEVE:  Well, and that's the other thing, too, is that some routers have an option for WAN management, that is, W-A-N, stands for Wide Area Network; as opposed to LAN, which is the Local Area Network.  In other words, some routers allow you to have administrative access from the Internet side.



LEO:  Oh, boy.



STEVE:  Unless you really know that you need that, you'd absolutely want to turn that off.  So if you, as you're browsing through your router configuration, you see WAN Management is enabled, absolutely turn that off.



LEO:  And it's often enabled by default, it seems.



STEVE:  It is, and it's just crazy.



LEO:  I think that what happens is a manufacturer wants as few support calls as possible.  So they really configure these to be as loose and open as possible because they don't want people to call and say, well, I can't do this.



STEVE:  Right.



LEO:  But of course you don't want to be able to do that unless you have a specific need.  There's one other thing that people often do and have problems with routers, and that is run a server, particularly game servers, but there are other kinds of servers, a web server, that you might want to run.  And routers are going to get in the way of those, as well, aren't they.



STEVE:  Well, that brings up a really interesting issue because that's the so-called "DMZ," the Demilitarized Zone, as it's called on routers.  And the idea is that you can designate one of your machines to be the machine that unsolicited traffic goes to on purpose.  Or, as we've said, you could just forward specific ports.  For example, you were just saying, you know, people might want to run a game server.  The problem with that is, and it's a serious security issue, is that the router is essentially making that machine part of your LAN.  That is, you're allowing unsolicited traffic and trusting this traffic to come into your LAN, aimed at a specific machine.  But once it gets there, if something were malicious that got into that machine you deliberately opened, that machine has access to all the other computers in your network.  It's on your LAN.



So one trick that I have never seen anywhere is you can actually use two NAT routers.  You're able to put NAT routers in series.  So that, for example, you'd have an external NAT router and an internal NAT router.  And you might want to put this link on the show notes.  It's www.grc.com/nat/nat.htm.  I've put together a page where I've drawn some diagrams to make this a little more clear and explained it carefully because it's a very cool idea.  The idea is that you could put your game server on the external NAT, on the NAT that's connected to the Internet.  And then, rather than putting the rest of your computers on the same NAT router, put them on their own NAT router and then hook that second NAT router to the first one, essentially in series.



LEO:  So the first one's passing all traffic through.  But the second one's blocking traffic from those computers you want to keep off the DMZ.



STEVE:  Well, and it's also - so no longer is your game server on your LAN.  Essentially...



LEO:  It's separated, as well.



STEVE:  It's sort of on, like, WAN 2.  It's sort of on a separate network.  And again, you're able to access the game server because you're going upstream.  You're going through the NAT outbound, which is where the game server is, on the outside of your second NAT; but it can't get to you.  So if something were to compromise it, you are safe.  Another cool application would be, if you wanted to mess with wireless, but you were still, you know, you had, like, first-generation wireless technology with WEP security - which is actually an oxymoron - as opposed to the WPA security, which is really good security, what you could do is you could have your wireless router on the Internet, and then have a standard non-wireless router which runs your main network, your wired network, and you plug your second router into the wireless router.  The beauty of that is that no wireless traffic is then able to reach into your network because that second NAT router blocks everything trying to come into it.



LEO:  So conceptually these both are the same idea, which is that anything that's at risk is isolated from the rest of your network by this second router, which provides a barrier against these at-risk routers or computers.



STEVE:  Right.  In fact, you can sort of think of a NAT router sort of like a one-way valve.  Data can flow out of it without any trouble.  But unsolicited data is unable to flow back in.  It's sort of like a backflow valve.  It won't let the data come in the other direction.  And you can chain them.  You can put them in series and come up with, you know, interesting network topologies to really increase the overall security of your system.  Say, for example, you were a family, and you had a bunch of teenagers, all with their own computers.



LEO:  Isolate them.



STEVE:  Well, no.  No, actually - well, essentially.  So, and then you've got Mom and Dad's adult computer, where the banking and the stock portfolio and all that stuff is.  You just - you connect it to the family router through its own NAT router, giving it its own little one-way valve.  It's able, you know, the adult computer, Mom and Dad's computer could still get out to the Internet.  But nothing that infects the kids' computers and their LAN has an opportunity to come back in to you.



LEO:  That's a really useful metaphor for how a router works.  It's a one-way valve.  Outgoing traffic's allowed, but unknown incoming traffic is always blocked.



STEVE:  Yup.



LEO:  And then, if you conceptually understand that, then I think it makes sense - this more advanced description of DMZs and so forth makes a little bit more sense.



STEVE:  Yeah, it's very cool.



LEO:  Steve, great stuff.  And I will this time put together a list of links on the show notes which are available at thisweekintech.com.  A reminder to folks who subscribe to all of our podcasts - This Week in Tech, Security Now!, Radio Leo, the Laporte Report, and the KFI podcast - that we've moved them off FeedBurner and onto their own RSS feeds, so that - you probably won't have to do anything.  Most RSS software is going to be smart enough.  FeedBurner has an automatic redirect.  The feed software that you use will, in all likelihood, see that redirect and change the URL for you.  If it doesn't, just so you know, the new feed for this podcast is leo.am/podcasts/sn, for Security Now!.

And of course we're still hosted - and gratefully hosted - by AOL's Podcast Channel on AOL Radio at aolmusic.com.  Without them, there'd be no way we could do these podcasts pro bono.  But they absorb the costs of the immense amount of bandwidth; we don't have to.  Thank you, AOL.



And thank you, Steve, for another great description.  I think routers are one of the most important tools in the security arsenal.  And I think everybody should have one.  If you have a broadband connection, get a router.  I feel bad for people with dialup because, I mean, there's the WiFlyer, and there's some dialup routers, but they're very expensive.



STEVE:  Well, and the only advantage, really, is they're not on the 'Net 24/7.



LEO:  Right. 



STEVE:  So they're only connected briefly.  And of course routers have come down so that they're below 50 bucks now.



LEO:  Yeah.



STEVE:  It's a great little security appliance.



LEO:  Even if you only have one computer connected to a DSL or cable modem, a router is pretty much a must-have.



STEVE:  Right.



LEO:  Oh, and another nice feature of Security Now!, Steve Gibson has decided to foot the bill for transcripts.  So does that mean we'll have full text of each podcast, Steve?



STEVE:  Each podcast, about 24 hours after it goes public, will have both a text and a ready-to-print PDF file that are very small, and it allows people just to get them in text if they want to.



LEO:  Wow, that's really great.  I mean, it underscores that this is really a pro bono effort on your part to just get the word out about security.  And that's one thing you've done all along with GRC.com.  So the web page is GRC.com/securitynow?



STEVE:  .htm.



LEO:  .htm.  Thank you, Steve Gibson.  We'll see you at GRC.com and back here again next Thursday for Security Now!.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#4

DATE:		September 8, 2005

TITLE:		Personal Password Policy

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-004.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Everyone who uses web-based services such as eBay, Amazon, and Yahoo, needs to authenticate their identity with passwords.  Password quality is important since easily guessable passwords can be easily defeated.  Leo and I recap a bit from last week's program, then discuss passwords.  We suggest an approach that anyone can use to easily create unbreakable passwords.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 4 for September 8, 2005:  Passwords.  Steve Gibson is on the line, our security wizard, the king of security, the guy who coined the term "spyware," of course created ShieldsUP!, which has saved almost 40 million people from themselves.



STEVE GIBSON:  We passed 38 million the other day.



LEO:  It's amazing.  It's amazing.



STEVE:  Use of the ShieldsUP!.



LEO:  GRC.com, and the author of SpinRite, which is still, to this day, after over a decade, the best hard drive recovery and test solution out there.  GRC.com.



Okay.  Last week we did this thing on routers.  And I don't know about you, but I got a ton of mail on this.



STEVE:  Well, I did, too; and in fact I want to bring up a few points that readers - or listeners, I guess - wrote back.  One guy - who said I could use his name, so he probably wants me to mention him, his name is Jeff McDonald - made the point that, you know, you and I were talking toward the end about the hardware versus the software firewall issue.  That is, if we have a NAT router out on the front line, is there really a need for software firewalls on the machines?  And, you know, we were talking about the fact that software firewalls still allow you to do per-application control.



Well, Jeff made the point that, well, sure.  But if you're going to have a network of computers, then if something nasty got into one computer, then in the same way that we were talking about the Zotob worm in our very first podcast where, you know, somebody brought it from the weekend home into the corporations and then it got loose within the corporations' Intranet, similarly you do want your individual machines protected, each of them behind the NAT router so that, if something nasty got into one of them, it wouldn't as easily spread through all the others.



LEO:  Well, that's just a subset of the general issue about software routers, which is, if a beastie gets on your machine somehow, whether it's from somebody bringing a laptop in or you opening an attachment, you don't have a software firewall to protect you.



STEVE:  Right, right.



LEO:  But on the other hand, if it is on your machine, it could turn off the software firewall; whereas, if the bad guy's on somebody else's machine on my network, at least my firewall will protect me.



STEVE:  Right.  And of course, you know, that's always going to be the problem with a software firewall, that the software running in the same computer is vulnerable to anything that's in that computer.



LEO:  Yeah.



STEVE:  Also, we talked about both the Tiny and the Kerio firewalls.



LEO:  They're not going to be free much longer.



STEVE:  Well, exactly.  Tiny has been purchased very recently, it turns out, by Computer Associates, you know, CAI.  So that's probably going to go away.  And it turns out that the Kerio Personal Firewall is still available, but their Server Firewall version is being discontinued at the end of this month, at the end of September 30.  So...



LEO:  Well, what do we do?



STEVE:  ...you know, it's really looking like free firewalls are beginning to become pretty scarce.



LEO:  Does ZoneAlarm still have a free version?



STEVE:  ZoneAlarm still does.  It suffers from sort of a kitchen sink syndrome.  They're trying to be feature complete, that is, to keep up with Symantec, that's just, you know, a huge, bloated firewall.  I mean, it does all kinds of things for people.  And for many people it's the right solution because it does cookie management and pop-up blocking and all kinds of stuff.  But I really like a trimmer sort of application-specific solution, that ZoneAlarm was in the old days.



LEO:  Well, to respond to this correspondent's issue, even the Windows Firewall would be sufficient in that case.



STEVE:  That's really true.  And in fact, someone also mentioned that the Windows Firewall in Service Pack 2 does alert the user if a program running in the system wants to create a listening port.  That is, it doesn't tell you if it just wants to communicate outwards.  But if it was like a trojan or a server or any kind that wants to set up a connection and open a port for listening, even the current Windows Firewall will tell you that that's going on.  And you have to give it permission to do so.  So that's a good thing.



LEO:  So probably, for most people, if you've got a NAT router, turning on the Windows Firewall is adequate protection.  Yes?



STEVE:  I think that that's true, except that you still wouldn't get the notification of some spyware that was phoning home.  And that's probably a useful thing to do, even though the spyware could be aware of your firewall and circumvent it in order to get the message out, if it wanted to.



LEO:  Right.  You don't really have any assurance with a software firewall that you're not compromised.



STEVE:  Right.



LEO:  It just may catch some compromises.



STEVE:  And then the last point I wanted to make from last week's podcast is an amazing number of people wanted me to talk about or mention SmoothWall, which is a sort of a prepackaged firewall, based on Linux, that includes Linux along with it.  It's completely free.  It's www.smoothwall.org is the website.



LEO:  We have Patrick to thank for that because Patrick Norton was a big SmoothWall fan.  Of course, you have to have a dedicated computer to run SmoothWall.



STEVE:  I was just going to say, it's sort of off on a different branch of our main topic, which was how you could just use either a single NAT router, or even two, in order to create various types of security configurations.  But for someone who's more of a hardcore networking guy, who's got, you know, an older machine that is no longer really speedy enough to run Windows and do useful things, especially with, you know, today's media sizes and so forth, if you can stick a few more NIC cards into it, you could definitely take an older PC, give it one interface card for the WAN, one interface card for your LAN, and then a third interface card if you wanted to set up a true DMZ, a true sort of protected separate network, then SmoothWall is a terrific solution for that.  You don't need to know Linux.  It's got a web browser-based interface, I mean, it's got bells and whistles you can't even imagine.  So for a higher end user, it's certainly the case that that would work.



LEO:  It's funny, we really touched on a nerve there.  I mean, I got so much mail.  And it seems like people who for some reason were really offended when you say - when I say I don't recommend a software firewall, I recommend a NAT router instead, I don't want to offend anybody, but that's just my opinion.  So, and you think that probably it's not a bad idea to run a software firewall.



STEVE:  Well, you know, you and I don't.



LEO:  We don't.



STEVE:  But I'm also extremely careful and paying attention to what my machine is doing from moment to moment.  But on the other hand, it is because I was beta-testing ZoneAlarm that I first discovered spyware.



LEO:  But things have changed since then.



STEVE:  Yeah.



LEO:  I mean, spyware is much more sophisticated than it used to be.



STEVE:  It is also the case that Microsoft is becoming clearly security conscious.  And, as we know, Vista will offer an outbound-blocking, built-in firewall.



LEO:  Right.  Well, that'll be...



STEVE:  Which is probably going to end up being the recommendation, as long as they can bolt it down enough so that software isn't able to turn it off and get around it.



LEO:  Right.  So your recommendation now is what?



STEVE:  Certainly a NAT router continues to provide very good, I mean, like, perfect protection from external intrusion into the system.  And I think that the Kerio Personal Firewall Version 4.2, which is the current one, the free version - not the Server Firewall, which is being discontinued at the end of the month, but the current Personal Firewall - I think that's the best solution for a nice, you know, not heavy, it's very small, it's one of those smaller firewalls around in terms of download size and just lightweightness, and it behaves itself very well.



LEO:  And I'm just going to say that in my - because I've had so much experience with people installing ZoneAlarm and having problems, you know, anytime you put system-level software on your machine, you know, some percentage of machines are going to have compatibility issues, slowdowns, crashes, maybe even stop working.  I'm just going to say, using that router, if you want a little more extra protection, turn on the Windows Firewall.  If you're using XP Service Pack 2, that's a pretty darn good combination.



STEVE:  I really think that's the case, yes.



LEO:  Yeah.  All right.  Now, let's move on to something that people don't pay enough attention to and probably should:  passwords.



STEVE:  Right.  Right.  There was an interesting comment made by actually Microsoft's senior program manager for their security policies, a guy named Jesper Johannsen, at a conference a few months ago.  He stood up in front of the room and said to everybody that the recommendations most corporations give their employees, if not, like, formal security policy, is wrong.  Most companies are now telling their employees, do not write down your passwords because of the problem of, you know, people gone at lunchtime, and someone comes into your cubicle and sees your passwords written down on post-it notes.



LEO:  Yeah.  People leave their passwords on the monitor.



STEVE:  Well, of course the classic from so many movies is somebody turning the keyboard upside down, and there's the password written on the underside of the keyboard. 



LEO:  Why did he say that that was bad advice?  That seems like good advice.  Don't write it down.



STEVE:  Well, and what's interesting is that this got picked up, and then a real security guru, Bruce Schneier - who's, you know, counterpane.com, really understands security - is in complete agreement, that passwords should be written down.  The point is that, if you don't allow people to write down passwords, they are forced to choose really dumb ones.



LEO:  Because they can't remember anything better.



STEVE:  Because they can't - exactly.  They can't remember a complex password which will not be in a dictionary.  So if you - the idea is that corporations that are saying "Do not write down your passwords" are inherently forcing people to choose passwords that are easily guessable or prone to dictionary attack; that is to say, by refusing to allow people to write them down, they're having to choose bad passwords.  And that's worse than writing them down.  The point that Bruce makes, which I think is a very good one, is that, write down your passwords on a small piece of paper and put them where you put your other private pieces of paper, which is to say, in your wallet.  He makes the point, and I think it's a good one, that people are already good about protecting written-down information that they know they need to keep private.  So don't put it on a post-it note on your monitor, but stick it in your wallet. 



LEO:  That seems sensible.



STEVE:  You already don't want people to get your credit cards, and you probably have other private information in your wallet that you don't want people to have access to.  And he makes a point that people are good about protecting that kind of information.



LEO:  Is it okay to use a software password wallet that is protected on your system?  That's what I do.



STEVE:  Well, that's really where I wanted this conversation to go.  I wanted you and me to sort of open up the topic during this podcast and get people to think about what they can do about passwords.  Because normally what happens is, you know, I mean, first of all, anyone who's using Internet services is being confronted with the need to create or enter, you know, to be involved with passwords because to do online services, whether it's eBay or Amazon or whatever, you're having to authenticate yourself on a more or less continuous basis.  Most people have never taken some time to create their own policy, their own personal password policy.  They're on the web, they're doing something, and suddenly something says, okay, give me a password, create a password.  And so, you know, they think of - they just do the first thing that comes to mind, whatever that might be.  And so I wanted to take some time to discuss the issue of passwords and cause our listeners to sort of say, okay, wait a minute, this is an important thing.  I'm going to, you know, take five minutes and figure out what I want to do about this, rather than continuing not to think about it and not to think that it's important.  Because I think it arguably really is an important issue.



LEO:  So create a personal password policy, and do it now while you've got the leisure to think about it.  I'll tell you what I do.  I try to create passwords that are both strong and memorable by using various mnemonics and devices.  Let's start off by what is a good password, Steve?



STEVE:  Well, we know that strong passwords are things that are not in dictionaries.  One of the most powerful attacks against passwords is the so-called "dictionary attack."  And there are, like, 300MB dictionaries - I'm sorry, 30MB dictionaries that are floating around the 'Net that contain just about every word you can imagine.



LEO:  So if you've got a real word, a pet name, a personal name, you're going to be cracked pretty quick.



STEVE:  Forget it.  Exactly.  It's like people who use their names in email get spam without ever having told anyone what their name is because their name is in every one of these spam lists.  And so the spammers just use dictionaries to drive their spam sending.  And so the same sort of approach can be used in cracking a password.  You just simply guess what the password is from a list of all known feasible words.  And it's amazing how often that's effective.



LEO:  How about a nonsense word?



STEVE:  You absolutely don't want to just use a normal word or your name or your pet name or anything like that.



LEO:  Right.  How about a nonsense word?  Is that acceptable?



STEVE:  Well, the best passwords are not easily guessable and not obvious.  So, for example, a mixture of letters and numbers makes a good password.



LEO:  Little punctuation salted in for good measure.



STEVE:  Or something, for example, maybe a word that you scramble up.  One of the most interesting approaches for websites is to come up with sort of a personal hash of the domain name of the website.  For example...



LEO:  There's a dashboard widget that does this.  It's kind of a neat...



STEVE:  Oh, okay.



LEO:  So you have a standard password that you use on all sites, but you hash it with the domain name of the site.



STEVE:  Well, the problem is that that requires the use of some software.



LEO:  Right.



STEVE:  And, for example, a software password wallet is also a nice approach.  The problem is that it's not portable.



LEO:  Right.



STEVE:  And so if you're ever at someone's - at a friend's house, or away from your desk...



LEO:  Yeah.



STEVE:  And the other problem is, of course, that could be stolen, or somebody could - if someone got the master password for that...



LEO:  Oh, boy.



STEVE:  ...then they unlock your password wallet, and they've got all your passwords.  What I'm thinking of is imagine a simple algorithm that you can memorize which is a way of, like, mutating the domain where you're visiting in a way that is unique to you.  For example, take every other letter from the domain name, or every third letter.  Come up with a rule for capitalizing them.  Swap some letters around.  You know, just sort of make up your own algorithm - and you don't share with anybody else, and don't use anything that I've talked about on the show, of course - and use that to create a password.  The beauty is that it'll be unique, it'll not be in a dictionary - unless you don't have a very good algorithm.  But once you know what it is, you don't have to remember the password any longer because you can always regenerate it.  And wherever you are, you can regenerate it.  I mean, it might take a little bit of pencil-and-paper work, depending upon - or maybe it's something that you can sort of type in as you look at the domain name.  So, like, you know, reverse the order of certain groups of letters.  Change the capitalization in a special way.  Maybe take the name and, like, mix in the year of your birth, alternating that with the letters.  I mean, you can get creative.  But the beauty is, it's your own - basically it's your own password-hashing algorithm that takes the domain, mixes something that's unique to you in, and maybe tack on a couple gibberish characters that that part you don't ever change, but the gibberish is completely made up, you know...



LEO:  This is a good technique.



STEVE:  ...q7z, you know, w or something.



LEO:  I like this.  So if I'm on nytimes.com, I could, say, intermix my year of birth at every other letter, and then uppercase every third letter, so I'd have n1Y9 and so forth, and that would not be a guessable password.



STEVE:  Exactly.  It's going to create a super-strong password.  It's going to be an algorithm, I mean, okay.  If two people on the planet had the same algorithm by chance, that's not a problem either.



LEO:  No.



STEVE:  Because the chances are...



LEO:  You don't know which two.



STEVE:  ...you know, because there are so many algorithms, that no one's going to be able to figure out what the algorithm is.



LEO:  Right, right.



STEVE:  So if there was an "algorithm collision," as we would call it in cryptography, that doesn't weaken your use of your passwords; but it does create something that's portable, that - I mean, and you might want to write the rules down.  You could imagine writing them down in your wallet in case you ever forget them, and nobody who looked at it would know what that was.  They'd go, what the heck is this?



LEO:  Especially if you did it a little cryptically, you know.  "Alternate third letter with year of birth," I mean, nobody's going to think of that.



STEVE:  Exactly.



LEO:  Now, before we wrap, let me ask you a question, Steve.  How do you do your passwords?



STEVE:  [Laughing]  I'm not as good as I should be.  I have - always sitting next to me is a Palm Pilot, which is my address book and a list of all of that kind of stuff.  It's just my master notepad.  And I do have a huge number of passwords that I've used over time.  So what'll happen is, if I'm away from my Palm Pilot, I'll have to hope that the website I'm using is patient as I'm running through all the possible passwords that it might be.



LEO:  That's what I do, too.  It's embarrassing.  That's what I do, too.



STEVE:  [Laughing]  Wait.  Did I use this one here?



LEO:  Yeah.



STEVE:  Did I use that one there?



LEO:  Yeah.



STEVE:  Which one did I use?



LEO:  I have a few what I consider high security passwords, some medium security passwords, and some low security passwords.



STEVE:  Ah, now, that's another very good point because it's certainly the case that not all things require the same level of protection.



LEO:  Right.  The New York Times I don't really care if my password's guessed.



STEVE:  Exactly.  One thing you don't want to do, however, something that got me a while ago, I've been a victim of credit card fraud online twice.



LEO:  Hmm.



STEVE:  And the most recent case was that my bank apparently used an online web form that allowed you to change your mailing address, which I think is a really bad thing for the bank to do in the first place.



LEO:  Yes.



STEVE:  Because what happened was that somebody was ordering stuff shipped to Colorado, rather than Southern California.  And my bank, you know, a red flag finally went up, they realized something strange was going on, my behavior pattern had changed.  And mostly I was now in Colorado, apparently, which never happened.



LEO:  Right.



STEVE:  The point is that, even though my password was different, the bank used mother's maiden name as authentication.  Well, somewhere else, on a different site I had used it, not as my password, but as, like, a password reminder kind of thing.  And the point is that there are places where it's a common security problem, it's called "repurposing."  That is, I didn't use my mother's maiden name as a password; but I did use my mother's maiden name, knowing that it was my mother's maiden name, in order to have a password reminder on another site.



LEO:  Right.



STEVE:  So any employee of that facility would have a list of all the mothers' maiden names of people.



LEO:  Yes.



STEVE:  And if they then went to somewhere else that was actually using the mother's maiden name as the password, you know, you're cracked, basically.



LEO:  It's not such a hard thing to find out somebody's mother's maiden name, either, so.



STEVE:  No.  That's probably a good example of the worst possible thing you could use to protect yourself.



LEO:  Well, and let's not forget Paris Hilton, who used her dog's name as her password reminder.  And of course everybody knew her dog's name and figured that that would probably be what she'd use.  So that's a bad choice.



So I think we want to get some feedback, don't we, from people on how they do this, what they recommend, and what works for them, maybe if they use some password software, that kind of thing?  Should they go to your site?



STEVE:  I'm sure we will, and we can certainly start off next week's show by talking about the feedback we get from this.



LEO:  That's great.



STEVE:  But more than anything the message would be, give this some time.  Rather than always being in a hurry, needing to come up with a password quickly, take some time now, maybe invent your own cool little algorithm that takes any domain name and turns it into a password that you can use.  And again, the beauty of that is, that way you're creating a different password every time, never using the same one twice on different domains, and you're able to recreate that without needing to memorize it.



LEO:  I love it.  It's your personal portable password policy from Mr. Steve Gibson.  GRC.com is the website.  Security Now!, it comes out every Thursday.  If you want to subscribe, you can go directly to the feed, which is leo.am/podcasts/sn.  You can also subscribe on iTunes, PodNova, Odeo, all the usual places.  Or just go to GRC.com, where Steve makes available, not only the 64kbps version, but also a lo-fi version for those of you on the dial-up or who just want a smaller file size.



STEVE:  Oh, and also text and PDF text transcripts of the shows, also.



LEO:  I love that.  Are people downloading the transcripts?



STEVE:  Yes.  And we're getting a lot of positive feedback.  On your first TWiT in the Apple Store last week, I noticed that you did a poll, asking people if they like the 64kbps, if they like the 32kbps or less...



LEO:  They all wanted the high quality.



STEVE:  For what it's worth, we're getting a lot of downloads of the more efficient...



LEO:  Interesting.



STEVE:  ...you know, leaner 16kbps.  So it's very popular also with people who are getting this over modem.



LEO:  Well, we'll keep doing that.  And really it's the content that counts.  And that's why, of course, we offer it so many different ways.



STEVE:  Absolutely.



LEO:  Steve, always a pleasure.  I'll talk to you next Thursday.



STEVE:  Thanks, Leo.  I look forward to it.



LEO:  That's it for Episode 4 of Security Now! with Steve Gibson.  Our thanks to AOL Radio at aolmusic.com for providing the bandwidth for Security Now!.  If you'd like more information about the topics we discussed, or to give us feedback, visit GRC.com/securitynow.htm.  You'll also find transcripts and low-fidelity versions of the same show there.  To subscribe, visit the iTunes Music Store, the Podcasts section.  Or just download a podcasting program like iPodder X and enter leo.am/podcasts/sn.  Of course you can hear Security Now! on AOL Radio in the Podcasting Channel.  I'm Leo Laporte.  Thanks for joining us.









Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#5

DATE:		September 15, 2005

TITLE:		Personal Password Policy - Part 2

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-005.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Our previous episode (#4), which discussed personal password policies, generated so much great listener feedback, thoughts, ideas, and reminders about things we didn't mention, that we decided to wrap up this important topic with a final episode to share listeners' ideas and to clarify some things we left unsaid.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 5, for September 15, 2005.  And here we are in Toronto.



STEVE GIBSON:  Yeah, for the first time together, doing a Security Now! podcast.



LEO:  Live.



STEVE:  Absolutely, together, face to face instead of over some wacky VoIP solution that we're still trying to nail down.



LEO:  This is much better, I think.  It's a good way to do it.  So we got a lot of response - we've gotten response on all of our podcasts so far.  But the last one, Passwords, got a lot of response.  We thought we'd address that.



STEVE:  I think part of the reason, of course, is that we were soliciting response.  We didn't intend, really, to make it a two-part podcast, but that's what we decided to do.  We're going to do Part 2 now of Personal Password Policies, based on a lot of the feedback - or at least, you know, triggered by a lot of the feedback that we received because, having asked for feedback, boy, you know, we got it.



LEO:  And most of it was positive; right?  Was there anybody who said we had a bad idea?



STEVE:  One person made a very good point, and that was that, if you - you remember that we talked about the idea of taking a domain name and, like, munging it, using your personal hashing algorithm to swap the letters around and do things.  Well, he pointed out that, if you did that in an obvious way, somebody could reverse engineer your personal password policy and then go hunting for other sites where you might have used the same policy on a different site.  I mean, it's a point that is certainly worth making, that is, if you were going to use this approach to create a special password on a per-domain basis, you'd want to do something where looking at the result it wasn't obvious what the domain was.  So...



LEO:  I've got to go back to the drawing board.



STEVE:  Exactly, so be clever.  Now...



LEO:  Well, as an example, just so people understand what we're talking about, if you had a password for Google.com, you might intersperse it with your Social Security number, so it would be g5o5, that kind of thing.  That would be an awfully transparent way to do it, however.



STEVE:  Right.  So you'd like to have something where you're a little more clever about that.  Another person made the very good point that we didn't - I didn't really fully answer your question, or correctly answer it, to, like, what is a good password?  Because we immediately launched off on the whole dictionary attack idea.  But the other attack on a password is the so-called "brute force method," where you just start with A, then B, then C.  And then when you run through Z, you go, okay, he didn't use a one-letter password, how about the two-letter passwords - AA, AB, AC, AD and so forth.  So the point is that password length is the other thing that is certainly important.  You don't want a too-short of a password because then it's possible to try them all.



LEO:  So what would you say would be a good starting point?  Eight?  12?



STEVE:  Well, the strength goes up quickly.  For example, if you have lowercase alpha and uppercase alpha and number signs, just for example, so you've got 26 lowercase, 26 uppercase, and 10.  So that's, what, 62 symbols in each character position.  So each character position goes up by a factor of 62.



LEO:  So there's 62 possibilities for a one-character password, and 62 squared for a two-character password, or 62 cubed for three - well, you could see very quickly that even eight would be enough if you used all of those different possibilities.



STEVE:  Yeah.  Now, some sites, of course, will - they're not case-sensitive, so you wouldn't get credit for using uppercase, and you wouldn't get any sensitivity.  But, I mean, I guess it's a function of application.



The other thing that we touched on last week that I think I wanted to come back to is this notion of the importance, or the idea, of varying levels of security.  For example, you might argue that you only want to use the password that you use for PayPal on PayPal, and on your banking site, only there, and never be tempted to use it again.  A number of people came up with sort of acronym-based approaches, where they're lyrics to their favorite song or some verse that they like.  Or some guy was saying, well, how about like if I was on my banking site, then I'd think of the phrase "Show me the money," and I would use some sort of password based on that.  So the idea of, like, using something memorable that's easy for them to memorize.  We heard that from a lot of people.



LEO:  Difficult, though, if you have dozens of these sites.  I mean, if you go to your investment site and you hum "We're in the money," and you go to your bank site and you say, "Show me the money," I mean, you'll run out quickly, and you could easily get confused.



STEVE:  You can get yourself tangled up pretty easily, too.  But I guess the - and another approach that actually you and I talked about in something we did before, it may have been on TechTV or something, is the idea of using the keyboard as your - sort of your crypto device.  Look at a word on the keyboard, and then skew the key presses like up and over, to the row above and to the left.  And so if any letters fall in the top row of alphabetic, they go into the numbers column, and you pretty quickly end up with something which visually you'd never guess what it was.  If someone were trying to crack it, you know, and they thought this might be what you were doing, they might look at the keyboard and try to figure out what way you went.  But you could do other things like, you know, go left, up left for the first character, up right for the second one, down left, I mean you could get some - you know, again, that's sort of a variation on a personal algorithm that is very unlikely to be cracked.



LEO:  But I guess we should point out that ultimately only something that's completely random is going to be completely secure.  The less random it is, the more likely it is to be cracked.



STEVE:  That's the perfect parameter.  We know that something that's random is the least likely to be, you know, to appear on the keyboard, in a dictionary, or anywhere else.  And so you take the randomness times the length.  And that really gives you your raw sense of strength.



Now, the other question is the issue of is it necessary, really, to have per-site passwords?  I mean, you know, you and I confessed last week that we've got, like, a collection of passwords that we sort of use and re-use.  And so sometimes when I'm on a site that wants me to log on - I hate these ecommerce sites where you have to create an account.  Because, like, I don't want to create an account.  I just want to buy this.  I'm never coming back.  But no, no, you've got to join.  So, you know, so I'll frequently be going, okay, now, what one of my little collection of passwords that I re-use did I use here?  And hopefully the site is patient while I guess and doesn't time out on me.



LEO:  I do the same exact thing.  And you'll enter passwords five or six times, trying all the variations of the password, yeah.



STEVE:  So I'm not clear that it's necessary.  I would say, don't reuse your critical site passwords that are based on ecommerce or banking or check management or stock portfolio stuff.  But, you know, frankly, I think you could relax.  Because really, what would the attack be if someone at some arbitrary site, you know, figured out that you used this password, and this was your email address.  Well, they'd have to go to, you know, every other site on the planet to get a collision of your use of the same password and so forth.  So I think it's very unlikely.



LEO:  Another thing we didn't address, but I do, is also vary the log-in.  If you always use your name as the log-in, that's pretty easy to guess.  But if you have kind of nonstandard log-ins, those are going to be difficult to guess.  And then combine those with your password, it's going to be a pretty tough...



STEVE:  If you have the opportunity to do that, that's a perfect idea.  What I'm seeing more and more is the use of email addresses as the username.  So there you'd be stuck having to create some temporary accounts which, you know, we've all done when we want to go somewhere that we're not going to be tracked down.  But maybe then the approach is, the variation on the log-in name, is to have some and maintain some throwaway email accounts to use, you know, for random places you go that you're never going to come back to.



LEO:  Here's a good trick Kevin Rose taught me.  Google allows you to take your Google address - mine is Laporte@gmail.com - and append a plus and then any arbitrary string of, I think, eight to 10 characters to it.  So if I do Laporte+security@gmail.com, it still will go to my Laporte account.



STEVE:  So it creates, like, mailboxes within your master account.



LEO:  And you can then filter on it, whatever.  But you essentially have a very, very large number of email addresses that all go to the same account.  So you could use it for that purpose.  For instance, I could have as my New York Times log-in Laporte+nytimes@gmail.com, and that would be unique to that log-in.



STEVE:  As long as it's @gmail.com.  Yeah, it's not generally the case that that works, unfortunately.



LEO:  It's only gmail, let's get that right.



STEVE:  The other thing that we got many questions about is, what about the password managers that are built into some web browsers?  Because clearly, you know, I guess the Mozilla Firefox browser has a built-in password management facility.  And I'm a little nervous about that only because it happens to be built into a communicating application.  The idea of a third-party password manager makes me feel safer than a password manager built into a browser. 



LEO:  There are some like RoboForm that is a third party, but integrates with a browser.  Would you say that would be more secure than using the one that's built into the browser?



STEVE:  I would say that's more secure because you can - it's easily possible to envision an attack against a browser's built-in password manager itself, where you go to a site that takes advantage of a scripting vulnerability to get into the browser, and what this particular site has chosen to do today is suck out all the passwords that anyone visiting it has.  So to me, I mean, to me that seems like an Achilles heel.  I mean, it's tempting as all get-out because, hey, look, it's built in, I'm at a website, my web browser knows what website I'm at.  I mean, what a cool idea.



LEO:  I think we all use it.  I mean, I kind of rely on Mozilla Firefox's password memory.



STEVE:  So again, maybe that's the place where you make a conscious decision, I'm not going to do that on my critical sites. 



LEO:  And most banking sites, for instance, won't let you do that.  Most sites somehow disable that capability.  So, for instance, my banks I cannot - I can't memorize the password.  And the other thing you don't know is how cryptographically secure those password stores are.  I don't know what they're - they may be in plain text.



STEVE:  We would certainly have to presume that whoever it was who was creating a password storage facility for the browser took advantage of, you know, state-of-the-art crypto.  And, I mean, crypto is so strong now.  As long as there's no mistakes made in the implementation of it, then you're really safe.  Now, the flipside of that is, okay, what about if malware got into your computer and said, oh, I'm going to suck out all of the passwords in this browser?  Well, I thought about that for a while.  But my feeling is, well, if malware gets into your computer, you're pretty much hosed anyway.



LEO:  They can record your keystrokes.



STEVE:  Exactly.  A keystroke logger to watch you type in a 16-character credit card number, do the little Mod 9 thing to verify that it is a valid credit card number, and then send to the mothership, wherever, you know, everything you've typed in for the hundred keystrokes before and the hundred keystrokes later, and they've probably got the entire log-on and ecommerce data for you.



LEO:  This is a complete digression, but is that what they do?  They do a Mod 9 on the number?



STEVE:  That's what I would do.



LEO:  We don't know what they do exactly.



STEVE:  Well, for example, you know, I wrote my own site's ecommerce system from scratch.  And so it's well known that if you add up all the digits, it is a Mod 9 function.  And what that does is it catches digit transposition.  It won't catch them if you swap them, they're two digits apart, but adjacent digit transposition.  So that means that technically only one out of every nine credit card numbers is valid.  So it has a one in nine chance of catching an invalid one.



LEO:  That's nice to know. 



STEVE:  So were I a bad guy writing, you know, a let's suck out, you know, I mean, let's really do some nasty malware, I'd do a keystroke logger because that way you're upstream of everything.  And I just have a big ring buffer of everything that the guy is typing in.  And when 16 characters have been typed in, and they match the Mod 9, the chances are he's just entered a credit card number into his machine.  Well, he's entered a bunch of other information first, and he's probably going to enter some more information later.  So if I had a big ring buffer, I'd have the last thousand things he typed, keyed by and triggered by a valid credit card number being typed in...



LEO:  And catch almost all the credit card numbers.  Now, this raises another issue for security pros, is that by taking about these things, in fact, you've just told somebody a pretty good technique.  Do you presume that they already know these?



STEVE:  I hope so.



LEO:  It's kind of difficult to talk about security and not reveal, sometimes, tricks that a bad guy could use.  At least any bad guy listening to this is going to have some better ideas about how to try to steal passwords.



I want to give a little plug for OSX because it has a built-in password manager called Keychain and Keychain Access that is cryptographically secure.  It's unlocked by default by you logging into your account, and it does remember passwords.  It actually has a password assistant that allows you to choose good passwords.  It will generate good passwords for you.  And it's the one that does the fill-in in the browser.  So it's separate from the browser.



STEVE:  Right, well, that sounds perfect.  And speaking of that, we did get a bunch of people wrote in with their favorite password tools.  We got about 15 of them.  I read through all the email and all the submissions that I received.  You may have received...



LEO:  I forwarded them all to you.



STEVE:  Okay.  So in the notes on TWiT.tv we'll put the URLs of everything that we've been sent.  These are not our recommendations.  But it's our listeners' recommendations. And, you know, there's freeware, there's open source, there's shareware.  Some of the things are Palm OS or Pocket PC.  They integrate with your PC or your Mac so you're able - in fact, I was surprised by how many people are carrying USB dongles around with their passwords stored in them.  So, I mean, there are people listening to this who are really taking - are already taking this really seriously.



LEO:  That's a good thing, yeah.  These will show up in the show notes on the website, as you mentioned.  But also they are part of the RSS feed.  So if you use an RSS reader or a podcast client that can see the full RSS feed, you'll have all the links in there, as well, for clickable purposes.  I've been doing that for a little while.  It's actually a great way.  iTunes doesn't do it, but for a lot of the other podcast clients.  You don't use any of these, though, yourself.



STEVE:  No, I don't.  I've got my little asynchronous Palm Pilot, and I do - I am happy that I have a Palm 5 now because they finally took the limit off of how big the notepads could be.  There used to be, I think it was a 4K limit.  And I was always hitting the end of that.  And so I have the Palm.  Actually I have two:  one that I travel with that is my eBook reader.  That has no personally sensitive information in it at all.  It's got eBooks and TV programs and things.  And then the other one sits right by my side.  And again, I don't dock it, and it does not touch my computers because I don't want anything to crawl into it.  But that's sort of my offline reminder of which one of my collection of passwords I used on a particular day, you know, whatever mood I was in.



LEO:  Yeah, essentially I do a similar thing, only I keep it on the computer, and it's a notebook of all of my passwords and all the sites I've used.  And if I don't put them in there, heaven help me because I'll never remember.  It's hopeless.  Anything else you want to add to the subject?



STEVE:  No, I'm just glad we spent two podcasts talking about this.  The reaction - we did get a lot of mail from people who loved the domain algorithm idea, who basically indicated that we've achieved our goal here, which is to get people to stop and think about this for minute, because it's the kind of thing the importance of which sort of creeps up on you.  You know, the first time you log in, you probably don't do the right thing.  Well, logging in to online stuff is in everyone's future from now on out.  And so if you haven't already given it time, lots of people who are listening to this already have because, you know, we probably attract that kind of crowd.  But for those of you who haven't, sit down, figure out how you want to do it, and take it seriously because passwords and needing to come up with them somehow, one way or another, and manage them is in all of our futures.



LEO:  Oh, it's my hope that people will pass these along to their friends and family and share the ideas, at least, if they don't want to share the podcast itself.



We are going to make the podcasts available on a CD.  We're trying to figure out - I think the best way to do this, and we'd love to get your input on it, is to not put out an audio CD because we'd only be able to put two or three podcasts, or four maybe, on one audio CD, but to put out an MP3 CD that could contain, you know, dozens of them, and so have a real library on there.  So that's what we're probably looking at.  But if you have some input, we'd love to hear from you.  And of course the website for Steve's Security Now! podcast is GRC.com/securitynow.htm.  And he always puts more information up there.



We'll be back next week.  We don't know what we're going to talk about at this point.  Often it's topical, timed to some big announcement.  And sometimes it's just educational.  But I hope you'll come back every Thursday.  You have a final word?



STEVE:  I was just going to say that, at the bottom of that page, the list of things we're going to be talking about is growing.  I've got about 25 of them now.  So we won't be running out anytime soon.



LEO:  Guess we'd better do another podcast.  Our thanks to AOL Radio at aolmusic.com for providing the bandwidth for this podcast.  It makes it possible for us to do this for free and can get everybody who wants a copy to get their own copy.  They do a great job for us.  Thank you, AOL Radio.  And an invitation to visit This Week in Tech at TWiT.tv for more information about this podcast, This Week in Tech, and all of our other productions.



I'm Leo Laporte for Steve Gibson.  Thanks for joining us for Security Now!.  We'll see you next week.







Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/








GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#6

DATE:		September 22, 2005

TITLE:		Mechanical & Electromagnetic Information Leakage

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-006.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Triggered by a recent report of three UC Berkeley researchers recovering text typed at a keyboard (any keyboard) after simply listening to ten minutes of typing, Leo and I discuss the weird realm of "alternative information leakage" - from CRTs glowing, to radio emissions, to LED lamps on the front of network equipment...to a microphone listening to anyone typing.



LEO LAPORTE:  This is Security Now! Episode 6 for September 22, 2005.  Steve Gibson is with us, our security wizard from GRC.com, author of SpinRite, ShieldsUP!, DCOMbobulator, LeakTest, and all those great security programs, as well as, of course, as I mentioned, SpinRite, which is a fabulous disk recovery program.  Steve's back in Irvine, I'm back in Petaluma, so we're home safe and sound.  And we're going to talk today about electronic eavesdropping and how people can spy on you.



STEVE GIBSON:  Well, there's been a lot of dialogue in the last week because three researchers at Berkeley wrote some software which, after just recording the sound of someone typing, not a prepared text, just random English language - they need to assume that it's English because they use English dictionaries and something called Markov modeling which allows you to determine the probability of one letter following another - which is language based, but not requiring that their system be trained with a previously prepared text, just recording the sound of someone typing.  They record ten minutes of the sound of someone typing.  Then their machine, which is running a 3GB Pentium IV, takes 30 minutes to process that sound.  And they are able to, with 96 percent accuracy, determine what was being typed, just from the sound of someone typing.



LEO:  How have they done that?  Have they mapped - does each key sound different?



STEVE:  Well, it turns out, yes.  There are enough - they use the energy content of the keystrokes as opposed to the frequency domain content.  Some of this has been done before using fast Fourier transforms, which determine essentially the spectrum.  These guys use the energy content that is represented by the sound.  And there's enough variation in keys that they are able to record that.  Then through processing this, they group the keys that they are unable to differentiate into similar groups.  But then, by presuming that English is what's being typed - that is, words that they have in a dictionary - they're able to process that information and disambiguate the keys which sound indistinguishably different and figure out what they are.  Basically sort of running a speller and a grammar check on this, they're able to break it apart and figure out what was done.



The chilling thing is that, once they've done that, they can, for example, they're able to determine passwords which are not in the dictionary - that is, random characters that are being entered - with a 90 percent probability.  They end up with a list of possible passwords that were typed.  And with very good probability, the correct password is in this list of, like, a hundred passwords that it could be, based on what they heard being typed.



LEO:  So someone could put a recorder in your cubicle at work and basically see everything you're typing.  You don't need a keystroke logger, in other words.



STEVE:  Well, exactly.  Now, if you had that kind of physical access to someone's cubicle, what you'd really do is you'd stick one of those little in-line keystroke loggers into their keyboard connection.  You know, that's a real risk from that kind of physical proximity.  But I think the real danger here is, for example, if you had a parabolic microphone that was aimed at someone's keyboard from, you know, across a hall or some distance away, where for whatever reason you didn't have direct access, or maybe, for example, you could bounce a laser off of their window in order to pick up the sound of them typing in their office...



LEO:  The window makes kind of an audio transducer, so you could actually see the vibration of the window?   Is that...



STEVE:  Oh, exactly.



LEO:  From the typing, just like a microphone.



STEVE:  And that technology exists pretty well.  Now, well, what's interesting is this is another in a long series of security and information leakage which is a function of electrical or mechanical or electromagnetic leakage from a computer.  You know, we've all heard, you know, years ago there was this technology called Tempest, which was - it attempted to, and apparently successfully, determined what image you had on your screen based on the electromagnetic leakage from a CRT.



LEO:  "Van Eck freaking" they call that, yeah.



STEVE:  Exactly.



LEO:  So, I mean, Tempest was an attempt to - that was the military spec to avoid it by shielding.  And I remember PGP used to have a Tempest mode where, instead of displaying the characters in crisp black and white on your screen, it would do as a very light blue that apparently was supposedly more difficult to freak.



STEVE:  And so the point would be, exactly, that the scanning beam, in displaying that light blue, it was enough low contrast, and there wasn't enough difference...



LEO:  Right.



STEVE:  ...that it didn't put out a signal that was able to be picked up.



LEO:  I notice they've - as far as I know, they've taken that out of recent versions of PGP.  Maybe not something in great demand.  How serious is this stuff?



STEVE:  There's also been some other research recently that is able to do this using the ambient light generated from the CRT...



LEO:  Right.



STEVE:  ...and also even from an LCD, apparently.



LEO:  Yeah, Bunnie Huang, who was the guy who cracked the Xbox ["Hacking the Xbox: An Introduction to Reverse Engineering" by Andrew "bunnie" Huang], I remember, told us that he could, for the screensavers, build us such a device that would - you could see around corners, in effect, because if you could see the flicker, the strobe coming off a CRT, you could reconstruct it into this visual on the screen.  That's all it took.



STEVE:  But not easy to do.  You know, the work I did years ago was to create a high-resolution light pen for the Apple II computer...



LEO:  Oh, I remember that, yeah.



STEVE:  ...that used a photo diode.  You'd need an extremely fast response photo detector in order to pick up the scanning beam on a CRT.  But it's certainly possible to do.  I mean, that technology exists now, and it's been refined a lot because, of course, that's how we move information through fiber optics is by having very, very high-performance photo reception at the receiving end of a fiber optic.  Which brings to mind another issue, and that was about a year ago people suddenly got concerned that the LEDs which were showing the activity of their routers was a similar sort of electromagnetic, in this case optical, leakage of what was going on in their networks.



LEO:  And it was strobing fast enough that you could see data?



STEVE:  Well, I mean, that's the thing...



LEO:  I don't think so.



STEVE:  ...is that it was one of these sort of urban legends that made the rounds through the Internet community about a year, maybe a year and a half ago, to the point where ISPs started putting black electrical tape...



LEO:  Ohhh.



STEVE:  I'm not kidding you - over the lights on the front of their networking equipment because they were afraid that people were going to suck the information out somehow.



LEO:  I don't think you have the resolution.  Maybe for 300 baud, but not for 10 megabits.



STEVE:  Well, I was immediately skeptical because all of the LEDs that I've seen...



LEO:  They can't switch fast enough.



STEVE:  Well, they're showing you packets...



LEO:  Right.



STEVE:  ...not bits.



LEO:  Right.



STEVE:  And so they're only meant to be information illumination and not actual data being moved.



LEO:  If they were showing you bits, they'd be on constantly because the bitrate is so fast.



STEVE:  Right.  So what's interesting about all of these is that, I mean, based on all the email that we've received, people being concerned now about people listening to them typing on the keyboard, it seems to me that it's an interesting issue for security, and that is that it's important to recognize that not just the traditional means of information leakage, but even these nontraditional approaches - optical leakage and now acoustic - are things that, you know, at the far end of the spectrum, it is a way for information to get out of your computer, something that people need to be concerned about.  Well, or at least, you know, NSA sorts of people.



LEO:  Yeah.  Did the Berkeley researchers come up with any recommendations?



STEVE:  Well, this is a preprint from their paper that they'll be publishing in the November issue of the Communications of the ACM for Computers, Communications, and Security.  So they did experiment with, like, softer, quieter keyboards.  They actually used a couple Dell specifically, like, low-noise keyboards for these experiments.  And those keyboards generated enough noise that they were able to perform with 96 percent recognition of what was being typed.



LEO:  I suppose if you had one of those white noise generators in the background, or something like that, you might be able to mask it.



STEVE:  Well, and certainly, if you were doing anything yourself to deliberately obfuscate this kind of problem, like deliberately hitting, you know, every other key harder, you know, clearing your voice while you're typing your password...



LEO:  [Humming]



STEVE:  Right.  They did talk about the notion of two-factor security, that is, for example, you know, using some other technology than just a password, which would not be typed at the keyboard.  And, in fact, some of the people that responded to our second podcast, No. 5, about passwords, also talked about the idea of onscreen keyboards, where you would use your mouse and click the password on the screen in order to completely avoid the keyboard and the problem with keystroke loggers and so forth.



LEO:  And of course biometrics, thumbprint recognition and the like, would have the same benefit.



STEVE:  Yeah, it's interesting that they have to take these keystrokes, the sound of these keystrokes, in context.  That is, you know, you need to use English, and they largely improve the accuracy by figuring out what, you know, based on the sounds, there were many possible combinations because acoustics wasn't perfect.  Not every key sounded unique.  So they ended up with groups of keys that they were able then to say, okay, here's all the words in the dictionary that are possible, versus based on what we've seen, here's the groupings of keys that could be pulled out.  Now, you know, what of these groupings map into the words, they did that.  Then they figured out, okay, which words make sense from a grammar context, based on the assumption that English is being typed?



LEO:  Don't you think, Steve, though, that worrying about these kinds of things is kind of ignoring the larger danger of the fact that your stuff is being sent over the Internet and, you know, that, I mean, frankly, the password, the weakest point is the storage on the other end.  I remember IBM did a study a few years ago where they discovered that something like eight out of ten of the big e-commerce sites had poor password security on their end.



STEVE:  Well, or poor storage of the data.



LEO:  Right.



STEVE:  Like, for example, unencrypted databases at the other end.



LEO:  Right.  So that that's really the greater risk.



STEVE:  Yes, I completely agree that this is sort of in a far out end of what any real normal user needs to be concerned about.  But again, you know, the people that listen to this podcast, who are surprisingly security concerned, were, you know, sending me links to this story that I have now seen a hundred times by the end of the week.  And I was thinking, okay, well, let's just talk about this and put it into context, which is something I'm glad you're doing because it is clear that, you know, this is, again, it's the sort of thing where, in order to record the data and the sound of someone's keyboard, you would have to have, you know, either a parabolic mic which is somehow aimed at their keyboard, or plant a microphone or a recorder of some sort near them.  Well, if you're going to have that kind of physical access, there's way easier ways to get the information, far more reliable ways to get it.



LEO:  That's right, yeah,  yeah.  And Van Eck freaking, while, I mean, I've seen demonstrations that kind of work.  I don't know if anybody's really demonstrated that you could, you know, through a hotel room wall, for instance, see what the other guy is doing on his screen.



STEVE:  Well, what is a little annoying is that, based on the paper, which I've read and studied carefully, this was really some serious number crunching and a lot of work.



LEO:  Yeah.



STEVE:  But they're going to post the source code for this...



LEO:  Oh, great.  Oh, great.



STEVE:  ...on their site.  Keyboard-emanations.org will be the name of the site.  And on our Security Now! page I've got a link to a page of links of various information.



LEO:  Very interesting.



STEVE:  Now, one other aspect of this which is sort of interesting is that, from a legal standpoint, this is not illegal.



LEO:  Really.



STEVE:  Yeah.



LEO:  It's not eavesdropping.  It's not...



STEVE:  Well, it's not eavesdropping because it's not covered by the law because this is not considered deliberate communication.  So even though the law has been amended so that, even if you don't have an expectation of privacy, there is sort of a presumed privacy in the law, this is not considered communication.  So the sound of your keyboard being typed is not protected under the law because there's no expectation that this is communication.



LEO:  Mm-hmm, it's just incidental sound.



STEVE:  Whereas, of course, you know, Internet communication or telephone communication and so forth, there you're protected.  But not any kind of, you know, optical, electromagnetic, or acoustic emanations from your system.  So, you know, these guys are going to post the source code for this.  Who knows what kind of tools the open source community will generate from that.  And it may be at some point that, in the same way that we have now cracking tools that allow wireless communications to be cracked far more easily just by downloading them and running them, at some point you can foresee in the future that there will be freely downloadable software that will process the sound of keyboards being typed and figure out what people are typing.



LEO:  Well, I only have one thing to say to that [typing sounds].  And there.  You detect that, huh?



STEVE:  Right.



LEO:  All right.  Steve Gibson, fascinating conversation.  And I'm sure people will have more to say about it.  And we encourage their feedback.  How do you like people to get a hold of you?



STEVE:  We've got a response form down at the bottom of the Security Now! page on GRC.com, and that's how lots of people are sending their comments and thoughts and questions.



LEO:  Great.  So that's at GRC.com/securitynow.htm.  And of course we thank AOL Podcasting at AOLmusic.com for providing the bandwidth for Security Now!.  We couldn't do it without them.  But their contribution makes it possible for us to do this for free.  And Steve also puts transcripts of each Security Now! up on his website.  Steve, how long does it take to get a transcript out, about a week later?



STEVE:  No, I've got this great gal who's into computers and knows the moment these things go up.  It normally takes only a few hours. 



LEO:  Wow.  Wow.  Again, that's at GRC.com/securitynow.htm.  Can you come up with a little redirect for that to just make it so much easier for me to say?



STEVE:  We always have a link at the top of our home page.



LEO:  GRC.com, okay.



STEVE:  But just GRC.com, and that'll get them to it.



LEO:  That's easy enough to remember.  And this time - I didn't put up the show notes last week, so I will put dual show notes up this week.  For those of you who use RSS readers or professional-style podcast clients to get this, you'll see the show notes have links in it, and there's more information.  But for those of you using iTunes or less capable podcatchers, the web page will have that information.  Again, GRC.com/securitynow.htm.  And be careful what you type.  I'm more concerned really about the NSA with spy satellites looking in at my windows and watching the strobe from my monitors and reconstructing what I'm looking at.  You know what they'd see right now?  A picture of you...



STEVE:  [Laughing]



LEO:  ...on Skype.  Steve Gibson, thanks a lot.



STEVE:  Thank you, Leo.







Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#7

DATE:		September 30, 2005

TITLE:		SPYaWAREness

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-007.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Any contemporary discussion of threats to Internet security must discuss the history, current situation, and future of spyware.  Leo and I spend a little more time than usual covering many aspects of this important topic. DON'T MISS the Episode Notes Page for this episode!



LEO LAPORTE:  This is Security Now! Episode 7 for September 30, 2005:  Spyware.



Steve Gibson is on the line, once again using Google Talk, although we've got evil plans afoot to create our own client, which would be kind of cool.  Welcome, Steve.



STEVE GIBSON:  Hey, great to be back, Leo.



LEO:  Steve started ShieldsUP! many years ago as one of the first security applications on the Internet, and shortly thereafter discovered something he named called "spyware."  How did that happen?



STEVE:  Right, well, ShieldsUP! was only about four or five months old, and I was sort of, you know, then involved in and getting more and more involved in the whole security on the Internet space.  And in fact I was beta testing ZoneAlarm before it was made publicly available.  The guys at Zone Labs knew of my work with ShieldsUP!, and they liked it, and they said, hey, you know, take a look at this firewall.  Well, what was significant about it is it did outbound blocking, that is, unlike all other firewalls at the time - actually I think AtGuard was also there before.  But the idea was it would catch programs that were using your computer connection without your knowledge.  And something was on my machine called TSAdbot.



So shortly after running ZoneAlarm, I discovered I had something that was connecting to somewhere.  I tracked it down, and it was something that was - for a while it was included in the Windows version of PKZIP for Windows that I was trying.  And so, you know, it was in the early days.  Well, this freaked me out because I'm one of these people who pretty much feels like he knows everything he's got on his computer.  I watch my machine very carefully.  So that was the first event.



Then a couple weeks later there was news of something really bad that was installing itself in people's machines.  People were finding it by DLL name.  It was called Aureate.  So I created something called OptOut that was the very first anti-spyware tool.  And that's where the name got coined, or the term "spyware" came out of that work.  And OptOut was super popular because this company, this Aureate company, was bragging that they were installed in 25 million machines worldwide, and all kinds of freeware was including this thing.  The idea was that it would be like the next advertising model.  Just the same way that you have ads on the web, they were going to put ads in freeware applications, and so the freeware authors would get paid back by this central advertising agency.  The problem is that it was profiling what you did, watching your connection, and sending this data back to them, all without the user's permission.  So...



LEO:  Yeah, in the early days, I mean, I guess it was relatively benign, I mean, if you're going to put ads in software to support the author, and it was because shareware wasn't working very well.  You'd have to monitor the clicks on the ads, and you'd have to replace new ads, so it would be reasonable to have a program that did that in the background.



STEVE:  Oh, and I don't - I really, to this day, I don't think these guys were ever doing anything wrong, except they weren't asking.



LEO:  Right.



STEVE:  In fact, part of that was the reason I trademarked the phrase "It's MY Computer."  Because more and more it seems like people are forgetting that, you know, these are our machines, not their machines that we're just borrowing.



LEO:  Yes, that's right.



STEVE:  So, and exactly as you say, more and more now, of course, the scene has changed.  Back then, OptOut was able to scan the machine, find these bad files, and remove them.  It turns out that we got feedback that it was fixing people's computers because, for example, after running this freeware, which unbeknownst to them installed this Aureate stuff, suddenly their machines started acting strangely.  The problem was the spyware was buggy, and it was a BrowserHelperObject, one of these things called a BHO, which IE can have attached to it, which caused Internet Explorer to load this every time you ran IE.  Well, it was buggy, and it was crashing people's machines and Internet Explorer.  So OptOut, by removing the software, fixed these problems for people.  Well, it turns out that, I mean, it was just a matter of removing the DLLs, and there were no other consequences.  Today's...



LEO:  Although there was one problem with the spyware, which would be that you would uninstall the original program, PKZIP or whatever, and the adware would stick around.



STEVE:  Well, now, that's exactly right.  And that was one of my real complaints was that, not only did people not know this had been installed, but if the problem occurred, and then they uninstalled the original application that brought this into their system, by design this adware stayed behind.  The instructions from this Aureate company were, when you uninstall your freeware, leave our components, these adware/spyware components behind because they're shared components, and more than one freeware utility might be using them.



LEO:  Well, in their defense, that's not unreasonable.  If somebody's relying on your DLL, you can't assume that, if you're being uninstalled, nobody else is going to want you.



STEVE:  That's true, although of course it had the side effect that people would undo what it is they had done, that is, they would uninstall a program that seemed to have hurt their computer, that wouldn't make it better because a piece of the program, this spyware, stayed behind.



LEO:  A good point.



STEVE:  And it was using their machine behind their back.



LEO:  And that's the real bottom line, is it should be asking.  It is your computer.



STEVE:  Well, exactly.  And, you know, when confronted with this, they said, oh, we tell our developers that they must present the user with a dialogue box that says this is what's going to happen, you know?  And if you look at some of the software that was bringing this Aureate stuff around, you know, yeah, nine scroll pages down in the fine print there's something about and, you know, we're bringing some, you know, in order to offer this free software to you we're enhancing it with ads, which are provided from the Aureate Company.  And then in order to provide the ads it must contact the Internet in order to get new advertising material to present to you, blah blah blah.  Well, you know, I've tried to read those license agreements.  It's not possible.



LEO:  Forget it.



STEVE:  You just say, okay, fine, whatever you're going to do to me, just fine, click next, and you go on.



LEO:  Well, you know, those seem like innocent days now, if you fast-forward to 2005.  Those things were nothing compared to what we're getting now.



STEVE:  Oh, Leo, today what's happening is there's like - in the same way that we've seen an escalation in the war between viruses and anti-viruses where, like, viruses were getting more fancy, they're becoming polymorphic, where they're deliberately trying - they're, like, the viruses themselves are working not to be catchable by the anti-virus software.  Similarly, this spyware, there's a spyware and anti-spyware back and forth.  And so, for example, spyware is adopting technology known as rootkit technology, which is, you know, from the original days of hackers that were trying to surreptitiously install stuff in people's machines that could not be found.



The idea is that an operating system is sort of like the foundation of the way the system operates, and applications run on top of the operating system.  And so there's this inherent division between the user space and what's called the kernel space, with the kernel space being down below doing all the work on behalf of requests from the applications.  What rootkits do is they actually get their code down into this kernel space, becoming part of the operating system and altering its behavior.  So, for example, when an anti-spyware scanner runs to scan someone's machine, looking for a long list of files that are known filenames of spyware that it's searching for, if spyware has beaten it into the system, gotten there beforehand and installed this newer rootkit technology, the spyware itself can lie on behalf of the operating system to anyone who asks what's on the system.  So, for example, even a user doing a directory listing or looking at the contents of their system won't see the files.  They're literally being hidden by this operating system extension.  And...



LEO:  You know, I can understand why a virus would do that.  They want to hide.  But what is the percentage in an advertising company doing that?  Don't they know that that's going to, I mean, that people are going to consider them viruses, not ads?



STEVE:  Yeah, I mean, certainly once upon a time, you know, we were worrying maybe about cookies or beacons, or people were annoyed just by ads on web pages.  I mean, you know, the problems that people focused on have evolved over time.  And, arguably, spyware has become the number one problem for people using the Internet, most typical people using the Internet.  I've got friends who are computer consultants.  They now specialize in spyware removal.



LEO:  Yeah.  I'm sure most people listening to this podcast know exactly what you're talking about.  When your friends and family call, that's what they want you to do, basically.



STEVE:  Right.



LEO:  If they're using Windows, they almost undoubtedly have spyware.



STEVE:  Well, and I think that one of the reasons is that, if we were to create like a distinction between what's a virus or what makes a virus and what makes spyware, the division would be that viruses have typically been created just by, you know, young hackers with time on their hands who wanted to see if they could do it.  There was no economic motivation for them, for the virus authors.  It was just a matter of, you know, I'm going to see if I can create something that will live, have a life of its own among machines on the Internet, if it can get in the machines and propagate.  And, I mean, it's an interesting fact that, you know, very few viruses have been deliberately malicious.  You know, people are finding viruses on their machines all the time...



LEO:  Lately, anyway.  Lately.



STEVE:  ...which means that those viruses are not destroying their computers.



LEO:  Right.



STEVE:  The viruses are not being nearly as deadly as they could be.  So the flipside of that is spyware, where there's always been an economic motive...



LEO:  Right.



STEVE:  ...behind the software.  I mean, from the very first moment that TSAdbot that I found from a company called Conducent, this Aureate spyware, there's CoolWebSearch, there's Gator, there's Cydoor, there's, you know, a long list of economically driven installations.  And I think that's one of the things that has kept the anti-virus companies from responding for so long.  I mean, we've had anti-virus stuff for years.  And it really took Microsoft to step into this anti-spyware market to bring the other companies around, I think because you could argue, well, maybe somebody wanted CoolWebSearch.  Maybe somebody wanted Gator or Cydoor or one of the things.  I mean, the point is there were...



LEO:  That's certainly what those companies argue.  They say, look, people are asking for - this is - we're not spyware.  We're doing what people want.



STEVE:  We're enhancing their web experience.



LEO: Right.  And I can see why companies would have been reluctant because they'd be afraid of getting sued.  Gator, very famously, has gone after people.



STEVE:  Well, exactly.  And, in fact, one of the things that I did was, when I started to roll up my sleeves about the problem, was I created a list of known and suspected spyware, and immediately began getting angry letters from these companies...



LEO:  Yeah.



STEVE:  ...saying, hey, you've got us listed on your page of bad stuff.  We're not bad.  We're good.



LEO:  Did anybody ever sue you?



STEVE:  No.  Because, you know, that's just not a battle that I'm in a position to fight.  So I said, okay, fine, I will remove you pending further research.



LEO:  Right.



STEVE:  And what happened was a great company, Lavasoft, created essentially the next in line, if you want to make OptOut first, my own little freeware tool, they came along with Ad-Aware.  And they were out of the United States, so they were, you know, much harder for anyone to actually sue.  And they created a great little scanning tool.  I had a dialogue with them, and I said hey, you know, my real focus isn't on this malicious software stuff.  I want to stay over on the Internet security side.  If you guys will promise me  you'll always have a free version, I'm going to formally endorse you guys and, you know, turn this chunk of stuff over to you.  And of course they've just been doing a fantastic job.



LEO:  So we have you to thank for the fact that this is free.  And that explains why both Spybot and Ad-Aware were originally from Germany.



STEVE:  Exactly.



LEO:  They didn't have to worry about the lawsuits.



STEVE:  Exactly.



LEO:  But now everybody acknowledges that spyware is evil.



STEVE:  Well, as Microsoft has now gotten into the game with their anti-spyware tool, that sort of legitimized the notion that this is bad stuff.  And people, again, you know, following my trademarked phrase, "It's MY Computer," people are saying, I don't, you know, I want a choice of whether to have this stuff installed on my computer or not.



LEO:  Reasonably so.



STEVE:  And of course, you know, you made the point about removal, which has become such a problem.  One of my employees got, I think it was this CoolWebSearch or Jiffy  Search or some random thing, attached to her Internet Explorer browser.  My tech support guy ran the various scanners and removers.  It apparently removed the file, but in the process it destroyed her Internet connectivity for that machine.



LEO:  That's frequently the case.  These things are - they've got their grip so tight on your system that removing them can often break your system.



STEVE:  Yes.  Well, you can sort of think of it like links in a chain, where from the Internet to your eyes there's a whole series of different phases that the data goes through.  The spyware installs itself as a new link in the chain in order to monitor data coming in, add its own data, and monitor what the user's doing on the way out.  So it's very much involved in everything going on with the Internet.  So when an anti-spyware tool comes along and simply deletes the files that were part of that link, well, the chain is broken because, in order to install itself, it had to make modifications to the system deliberately to get itself in there.  So when you simply delete the files that the system has now become dependent upon by virtue of the installation, you break that chain.  And suddenly, you know, this user's off the Internet.



So removing this stuff has become a real problem.  You simply can't delete the files.  Some of the spyware companies have their own, you know, if you really want to take Gator or Cydoor or CoolWebSearch or whatever off your machine, you know, here's our uninstaller tool, which will do it.  And generally that will function because they know how to put the chain back together without, you know, after removing that link.



But one of the real problems of course now is - and this is why it takes days sometimes to get spyware off a machine is that there's often multiple types of spyware.  Spyware is now really fighting users who are trying to get it off the machine.  I mean, it's become an escalating battle.  And often you just, you know, users are stuck with reformatting their machine and starting over.



LEO:  Unbelievable.  Unbelievable.  So you can't really say there's any one way that spyware works.  It works in all the different ways that viruses can work.  And but can you say - is there a way to kind of prevent it?  Is there a behavior that users should have to not get it in the first place?



STEVE:  Spyware gets into machines because it's bundled with software.  And in fact that's become - that was always the original entry vector for spyware.  You know, just exactly as I said, where I with a very early version of PKZIP for Windows brought along that Conducent adware, this advertising-enhanced spyware has been the original way stuff got onto your machines.  And in fact you'll now see download sites, reputable download sites, or even freeware will explicitly say this is really, really free.  We don't include - there's, you know, no other stuff, no spyware, no adware, nothing bundled in with our tools, because so many companies for a while were trying to do that.



LEO:  Is there one kind of software that's, I mean, I know music-sharing software, Kazaa, for example, tends to install a lot of other stuff on your system.  Is there a particular area that you should watch out for?



STEVE:  Well, there is downloading freeware and running freeware...



LEO:  A lot of freeware.



STEVE:  You want to make sure that this stuff is really spyware clean.  So I still think that that's generally the way people get stuff on their machine is by running software which has this malware attached to it.



LEO:  Right.



STEVE:  So use reputable sites, you know, Download.com, CNET...



LEO:  SnapFiles.



STEVE:  That's the one I was trying to - I was drawing a blank on that.  SnapFiles, you know, sites that really take responsibility for the quality of the software.  I would say that's number one.  In general, when systems have been really massively infected, there is music-sharing software present.



LEO:  That's very common, yeah.



STEVE:  There's Kazaa, there's iMesh or whatever.  I think...



LEO:  Whether it comes from Kazaa itself or comes from downloads that you're doing with Kazaa.



STEVE:  Well, exactly.  I think that it's - very often it's the behavior of the people who are, you know, they have a behavior of sharing music, and along with that goes, oh, let's just go get software from wherever, it doesn't matter.



LEO:  Right.



STEVE:  Now, I mean, if you treat your computer like a toy, like a little entertainment toy, then that's what it's going to become.  It's going to get infested with this stuff.  If your computer is a tool that you really want to keep running in good shape, you have to treat it with respect and recognize that there's just a lot of bad stuff out there.  And on the Internet...



LEO:  I'm going to recommend a wonderful website.  There's actually two very useful websites in this area besides your own, which is SpywareInfo.com and SpywareGuide.com.  And I use SpywareGuide to look up software before I install it because they have a very complete list of programs that contain spyware.



STEVE:  Yeah.



LEO:  And so it's a good idea to check before you install something.  And SpywareGuide.com - we'll put these links in the Show Notes.



STEVE:  Yeah, I think that's great advice, Leo.  And again...



LEO:  How about infection from the web?  Does that happen by just going to a website?  Is that happening now, as well?



STEVE:  Well, yes.  We have the problem from day one that - well, I guess it wasn't one because browsers used to be safe.  What happened is that. in this goal towards making the web more seamless and providing enhanced services, web pages have, of course, not been static for a long time.  They're just not, you know, dead pages that you read.  Instead, more and more they're doing more stuff.  Netscape gave us JavaScript, introduced the notion of scripting to web pages.  Well, that was the first problem.  Microsoft, unfortunately, when they were early on competing really ferociously with Netscape, they took the technology they had, which was ActiveX technology, and essentially brought it to their browser, so that when you visit a website, this ActiveX technology uses either the Java scripting or Microsoft's Active scripting to download code, without asking you, from that website and running it on your machine.



Now, in a perfect world, that's very cool because it means that, essentially, they've granularized software, and websites become application servers, so users can do all kinds of advanced things.  The problem is, as we well know, it's not a perfect world.  So you can have malicious code, which is also downloaded into your machine, just, I mean, in all the same ways that we've been talking about malware getting into your machine by piggybacking on freeware, now with Microsoft's formal blessing, just going to a website that has malicious intent can install stuff on your machine.  And in fact that's the way people get these browser add-on things.  You know, I mean, they're constantly getting them.  They're getting reinfected.  They go, what do I do?  How do I keep from getting this stuff on my computer?  I'm not installing anything.  I'm just going to websites.  And that's all it takes.



LEO:  So how do you prevent that?



STEVE:  Well, certainly not using Internet Explorer immediately solves this problem with ActiveX because Internet Explorer is the only browser that is - now, I should also say Internet Explorer or any of the IE variants.  There are a number of other browsers, sort of non-mainstream browsers, that are really still IE, they just put some different window dressing around it.  For example, they'll add tabbing features or various other things to the IE core, but it's still really IE.  So, for example, Opera, which is a completely non-Microsoft browser, or any of the Mozilla browsers, you know...



LEO:  Firefox or...



STEVE:  ...the Firefox of course being the most popular.



LEO:  Those don't have ActiveX.  You can actually add an ActiveX plug-in to Firefox, which seems like a bad idea.  But normally they don't have ActiveX, and they don't have active scripting, which is another problem.



STEVE:  Right.  The problem, of course, is that there are some sites, notably Microsoft's own, you know, Windows Update site and those things, that still do require that you have IE.  So you're probably still going to have it on your machine.  Certainly it came with.  But for most of your browsing, if you stay away from Internet Explorer, and you use a non-Microsoft browser, you're not going to have the problem of this stuff getting into your machine all the time just by visiting websites.  Then...



LEO:  So update, use - that's very important, too, Windows Update regularly, use Internet Explorer for that, but then don't use Internet Explorer for anything else.



STEVE:  Right, because the second way things get into your machine - the first is by formal policy.  The second way is by defects that are known in browsers.  There are historically many faults in Microsoft Windows browsing technology where, again, just going to a website that runs some scripting on your browser, I mean, I'm just fundamentally anti-scripting.  There are ways we could have done most of the things we do with scripting without using scripting.  The problem is, I mean, scripting is code.  It's sort of, you know, semi-tamed, neutered code, but still code.  And mistakes in that scripting technology can be exploited and are exploited so that just visiting sites can infect you by taking advantage of known problems with Internet Explorer, most of which have already been fixed.  So keeping Windows updated is the way to keep those things from crawling into your system just by visiting a website.



LEO:  So update, use Firefox.  Should you use anti-spyware software, as well?



STEVE:  I know that most people are.  And so I would never want to recommend against it.  I'm, you know, I like to keep myself as simple as I can.  The top three anti-spyware tools that, used in conjunction, generally find everything - I'm not going to say they always do because, again, it's an ongoing battle back and forth.  But no one tool does as good a job in terms of covering the landscape as using multiple tools:  Microsoft's own anti-spyware, which is still in beta, but clearly they're committed now to getting into the removing the stuff market; the very first scanner that followed OptOut, which is the Lavasoft Ad-Aware anti-spyware; and, finally, the Spybot Search & Destroy which you mentioned, those are the top three.  Many people run all three of those from time to time, scanning their machine to make sure that nothing has gotten into their system.



LEO:  And the good news is all three are free, although the bad news is Microsoft has for some reason decided not to support Windows 98 and ME with their anti-spyware solution.  You have to have XP to use it, which is too bad.



STEVE:  Yeah.  The flipside is that most of the newer spyware, since the market has moved so strongly to the Windows 2000, XP, 2003 and so forth platform, we're beginning to see these older machines aren't getting infected because they're just too old.



LEO:  Oh, interesting.



STEVE:  They don't have these problems.  They don't have the technologies that are now being leveraged against users who have them.  The one last thing I ought to say, because frankly it's what I do, is the idea of running - and we're going to talk about this in future Security Now! podcasts because I think there are ways to make this more feasible, and that is locking down your browser, essentially disabling scripting completely so that sites are unable to run code on your computer.  Now, for the majority of sites you visit, that's not a problem.  But some e-commerce sites, certainly Microsoft's site that's trying to do active things, there are sites that require scripting.  So the reason this is a problem is by locking down your browser you are definitely breaking some sites that have become scripting dependent.



So in Internet Explorer they have this notion of zones, where you have a trusted - you have the so-called Trusted Zone and the Internet Zone.  And what you're able to do is you're able to manually put the web domains of sites you trust into your Trusted Zone, so IE is sort of like a chameleon.  It will dynamically change its settings depending upon where you go.  You could, if you trust Amazon.com and eBay.com and your banking domain and some e-commerce sites, you know, PayPal, for example, you put a list of all the places you go that you trust and that need scripting in the list of trusted sites.  And then you lock down the Internet zone so that most sites are unable to do anything to your browser.



LEO:  Or you just...



STEVE:  And that's really the safest way to function.



LEO:  Or you just don't use Internet Explorer.



STEVE:  Or, exactly.  Although, you know, in fairness, we are now seeing exploits against Firefox because it's now becoming popular enough...



LEO:  Right.



STEVE:  ...to be a target.  So, I mean...



LEO:  But it's harder to do with Firefox because you don't have the benefit of ActiveX; right?  I mean...



STEVE:  Yes.  Certainly in terms of one thing people could do that would generally make them safer is to use Firefox.  And Firefox is a great browser.



LEO:  Yeah.  There are other tools that modify your system and protect you.  In fact, I think it's important to turn on the immunization features of Spybot Search & Destroy and the real-time protecting in Microsoft's anti-spyware because both of those kind of are more active in preventing spyware infections.  And frankly, as you pointed out, once you get spyware, it can be dang difficult to get rid of it.



STEVE:  Yes.



LEO:  Much better not to get it in the first place.



STEVE:  In the long term, we're going to have to see some evolution of the operating system itself.  The problem is we're still bringing along sort of this historic presumption that all software is good, that all software is something that you want to run.  And the fact is now for, you know, a decade, that's not been true.



LEO:  Right.



STEVE:  Viruses are software we don't want to run.  Malware, spyware, software we don't want to run.  But, you know, that's out there now.  So our operating system is still designed to run everything with the presumption that it's good software.  That has to change.  And over time, you know, ultimately that's what we're going to have to see changing.



LEO:  Well, Steve, you know, unfortunately there's no, you know, great answer right now except to change your behavior, you know, maybe change some of your software and run anti-spyware.  Do you think victory against spyware is possible in the long run?



STEVE:  In the long run I really do.  It's going to - as always with security we're going to be trading off convenience for safety.  You know, adding a personal firewall makes you safer because you'll know if something is in your machine trying to phone home.  But it means that things are popping up.  It means that you have to give applications permission to use the Internet.  Clearly, that's a burden.  Actually it's why Microsoft hasn't done that so far, and the third-party firewall technologies do.  So there we've had to trade off convenience of just assuming that, you know, all software on the machine is good for being much more careful and safe.  So the future I think we can presume we're going to see even more tradeoff of convenience.  But, you know, anyone who's had a real spyware infestation on their machine will say, bring it on.  I don't want the spyware.



LEO:  It's terrible.



STEVE:  I'm willing to take more responsibility.



LEO:  Right.  And the other side I should mention because I don't want to leave this out.  People who are using Macintoshes don't yet have anywhere near the spyware issue.  Not that that will continue that way.  But for now there are some anti-spyware programs on the Macintosh site, but they're really not necessary.



STEVE:  Yeah, and that's a good point.  We're beginning to see Apple, you know, in the second Tuesday of the month patch cycle, bringing, you know, finding problems...



LEO:  They do it more often than that even, actually.



STEVE:  Yeah.



LEO:  They do it pretty regularly.



STEVE:  Yeah.



LEO:  But most of the time they're exploit patches, not specifically spyware patches.  Although, you know, I think it's only a matter of time before people start targeting the Apple platform.  I think it's a little bit more difficult to infect, fortunately.  Just like Firefox, you don't have the same kinds of ActiveX and active scripting technologies.



STEVE:  Right.  And if we resume that the model will be spyware and viruses, viruses generally are written by people just, you know, because they want to.  And they write them for the machines they have.



LEO:  Right.



STEVE:  Most of the young malicious hackers have Windows machines, so they write viruses for Windows machines.  And, frankly, there's a huge, now, base of technology for virus writing that...



LEO:  Makes it easier.



STEVE:  ...supports that creation.



LEO:  Now, you say "viruses," but you're including spyware when you say "virus."



STEVE:  Well, no, I was deliberately meaning viruses.



LEO:  Oh, okay.



STEVE:  Because, as opposed to spyware, you might imagine spyware would happen for computers over on the Mac side because of the possibility of a real economic incentive. 



LEO:  Right.



STEVE:  Whereas viruses, I don't think so so much.



LEO:  Right, right, right.  Well, it's always great to talk to you, Steve Gibson.  We thank you for all your good work and for sending this information along.  I know you've created a page talking about spyware.  And that's available online at GRC.com/securitynow.htm, as are all the back issues of Security Now!, both in high-quality 64KB MP3, as well as 16KB MP3, for those people who have slower bandwidth or smaller storage media.  Steve likes to play stuff back on his Palm.  I think that's why.



STEVE:  Yes, I'll mention that, for people who've been following along so far, this last week the Security Now! page got a huge facelift.  We've added some more features.  We've always had text transcripts.  Now they're also in a really nice HTML format that is easy to view.  And that page is turned into a PDF.  And every single episode has Show Notes.  In this Episode No. 7's Show Notes is a whole bunch of stuff that's worth taking a look at, too.



LEO:  Oh, that's fantastic.  We thank Mark Blasco of Podcastthemes.com for our new theme.  I hope you enjoy it.  And of course America Online's podcast network, American Online Radio at aolmusic.com, for providing the bandwidth for Security Now!.  Steve Gibson, thanks.  We'll talk again next week.



STEVE:  Looking forward to it, Leo, thanks.







Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#8

DATE:		October 6, 2005

TITLE:		DDoS Attacks

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-008.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Distributed Denial of Service (DDoS) attacks are occurring with ever-greater frequency every day. Although these damaging attacks are often used to extort high-profile gaming and gambling sites before major gambling events, attacks are also launched against individual users who do something to annoy "zombie fleet masters" while they are online. Some router and firewall vendors claim that their devices prevent DDoS attacks. Is that possible? What can be done to dodge the bullet of a DDoS attack launched against you while you're online?



LEO LAPORTE:  This is Security Now!, Episode 8, for October 6, 2005:  DDoS Attacks.  Steve Gibson from GRC.com is on the line with Google Talk.  Hello, Steve in Irvine, how are you today?



STEVE GIBSON:  Hey, Leo, great to be back.



LEO:  This is something you're an expert in per force, denial of service attacks, because you've been the victim.



STEVE:  Well, and how.  It was a number of years ago.  Some dialogue in our newsgroups upset some young hackers who had access to one of these fleets of zombies which are infecting end-user machines and just blew me and GRC.com completely off the Internet for a number of hours.  And it was a real problem for me.  That was my real first, you know, literally firsthand experience being on the receiving end of a distributed denial of service attack.



LEO:  Let's first explain what a simple denial of service attack is.



STEVE:  Well, the idea is, any kind of packet traffic which can cause problems for the receiving end can create what's called a "denial of service," you know, the term meaning, of course, that whatever service you are trying to get is being denied you by someone, for whatever reason, who wants that to happen.  So, for example, in the old days, websites used to have their web servers brought down by people doing something called a "SYN flood," S-Y-N.  A SYN packet is the first packet of a TCP connection.  When a user's browser, for example, wants to connect to a web server, it'll send a SYN packet.  The web server allocates some resources to get ready for this connection, sends back what's called a SYN/ACK packet, and then a final ACK packet is returned to the server.  What that does is that verifies the communication path between these two endpoints, the user's browser and the server, and sort of establishes the communication.



Well, if the browser or an end-user being malicious were to do nothing but send SYN packets just by themselves, the server would keep allocating all these resources, thinking that all these connections, like, wow, I've become really popular all of a sudden, as if all these users were wanting to connect to it.  Well, what happened is that, before long, that server would run out of resources.  It would sort of be like creating a memory leak.  It would burn up all of the memory that it had allocated for accepting connections, and then regular users who were actually trying to connect would send their own SYN packet, which would end up getting dropped or ignored because the server thought that it was already too busy receiving real connections.  So that was sort of the original denial of service attack against a web server.



LEO:  So let me put it in baby talk.  In baby talk, somebody basically sends so many requests to your - phony requests, but requests - to your website that you spend all your bandwidth trying to handle them and can't handle legitimate incoming traffic.



STEVE:  Well, actually, that's the second-generation denial of service attack.  This first one actually consumed resources on the server...



LEO:  Oh.



STEVE:  ...so that the server was no longer able to accept connections.



LEO:  Oh, so the SYN is simply setting up a server connection, and that just uses up all the memory and the processor bandwidth on the server itself.



STEVE:  Exactly.



LEO:  Oh.



STEVE:  It uses up memory and processor bandwidth, not the connection bandwidth.



LEO:  Got it.



STEVE:  And so what was really interesting...



LEO:  The upshot's the same, though, the server's too busy, doesn't have the resources to respond to normal traffic.



STEVE:  Exactly.  However, it's not the bandwidth which has been consumed.



LEO:  Got it.



STEVE:  It's the resources on the server.



LEO:  Right.



STEVE:  And the reason that, well, we'll see why that's an important distinction in a second.  Because, for example, just one guy sending SYN packets could have brought down and did bring down historically some major websites, just one computer sending SYN packets.



LEO:  I remember this happening to Yahoo! some years ago.



STEVE:  And that's what that was.



LEO:  Yeah.



STEVE:  Exactly.



LEO:  Yeah.



STEVE:  Now, what happened was servers got smarter.  Servers started being this denial of service attack aware so that they would, if their queue of pending connections got full, they'd start throwing away the oldest ones that hadn't come back and completed that three-way handshake.  And so basically systems got resilient or able to protect themselves against this kind of attack.



LEO:  How many different SYN requests would you need to bring down something like Yahoo!?



STEVE:  Only a few thousand.



LEO:  So it's an easy thing for an individual to do from a single computer.



STEVE:  Yes.  Well, now, once upon a time it was an easy thing.  Now virtually all servers are hardened against that kind of attack.



LEO:  So they just have a queue, and they just start dumping stuff at the bottom as new stuff comes in from the top.



STEVE:  Exactly.



LEO:  Yeah.



STEVE:  So what then happened was we went from a DoS attack to a DDoS attack, to a distributed denial of service attack.  And this is where this notion of zombie fleets come in, the idea being that malware has infected a large population of computers, maybe a hundred, maybe a thousand.  There are some fleets that are apparently tens of thousands of end-user computers that are slaved to a single or a small group of zombie masters.  In this scenario, this large group of computers are all told to attack a single end-user, whether it's a website or an individual.  And so what happens is this distributed set of machines all start sending traffic.  It doesn't even have to be, in this case, a SYN packet.



And, in fact, I was not attacked with a SYN flood.  I was attacked just with good old pings, just enough ping packets, the so-called ICMP.  What that did was it flooded my bandwidth so that my connection to the Internet was congested.  And that's the scenario that you were talking about where, if enough of these, like, you know, several hundred machines were all pinging my web server at the same time, then normal bandwidth trying to access my website was no longer able to get there.



LEO:  So they choked - the difference is they choked the pipe, not the server.



STEVE:  That's exactly right.



LEO:  The ping of death.



STEVE:  So anywhere that you had a choke point in the bandwidth - and it might have even been, like, a router upstream of me.  Because the idea is that packets are flooding in from all over the Internet, and they're sort of converging.  You could think of it sort of as a convergence down to a single point.  And, in fact, an analogy that I've used is, if you put your hand out in the sunlight, you know, it feels fine.  It's warm, you know, hands were meant to handle sunlight.  That's no problem.  But if you take a magnifying glass and hold it over your hand, focusing essentially that same amount of sunlight down to a single point, suddenly you start seeing a little smoke and some charred flesh because that same amount of sunlight is now focused down to a single point.  Similarly, Internet traffic.  If it's focused to a single point, all being directed at a single target, that target's just gone.  It's off the Internet.



LEO:  So how do we fight a distributed denial of service attack?  Can we just ignore pings?



STEVE:  Well, what happens is that - well, in fact, that was one of my first defenses was I asked Verio, I said, you know, it's nice to be able to ping me and to run a traceroute to see if GRC's around.  But, gee, I'm being attacked.  I'm being flooded with all this ICMP traffic.  Let's block that.  And so Verio, my supplier at the time, blocked that and prevented the attack from getting to my server.  The problem is that now - and this is really a problem today - these tools have become increasingly sophisticated, so that attacks then started using this TCP traffic, the so-called SYN packets.  Well, I can't and couldn't block those because those were the packets that valid users, you know, valid users didn't need to ping me or to do a traceroute.  They needed to connect their browsers to my web server, and to do that they needed to use this TCP SYN packet.  So I was unable to filter those or to have my ISP block those to keep those from getting to my computer, or nobody would be able to.



LEO:  You could block them, but you were off the 'Net, yeah.



STEVE:  Exactly.  We were off the 'Net again.



LEO:  So how many different servers are we talking about in a distributed denial of service attack?



STEVE:  Well, I've seen small - small zombie or bot armies are several hundred, maybe four or five hundred.  And they even get up to the several thousands.



LEO:  Could you set some sort of automation that, when it saw a certain number of SYN packets from a single IP address, that it said, we're going to block that IP address for five minutes or ten minutes?



STEVE:  Ah, well, now, that's another good point, is the other thing that these packets are doing is that they're spoofing their source IP.  When a legitimate packet comes to a server or to an end-user, it identifies who sent it, that is, by IP address, and what its destination is.  The destination IP gets it to you.  The source IP is the IP to which you send the return traffic.  So the packet has to have both.  In these denial of service attacks, the source IP is being randomized on purpose so that you really don't know if it's legitimate or not.



LEO:  You couldn't block anything.



STEVE:  So you may never see two packets from the same source IP.



LEO:  This can be done on zombie computers, thanks to the raw socket support that was built into Windows XP.



STEVE:  That's exactly right.



LEO:  I mean, raw sockets exists on UNIX and Linux and so forth.  But because Windows XP is so prevalent, and a zombie attack has got to take over a bunch of unsophisticated computers, they make a natural platform for that.  Is it better now that Microsoft's taken out raw sockets?



STEVE:  Well, it's better, except that we still have the ICMP attack.  And one of the things that I've received a bunch of questions about is what does an end-user do when they're attacked?  It's one thing for, like, major websites to be attacked.  But, for example, end-users will be involved in an online chat or an online conference, or maybe they're, like, doing online gaming.  Whenever a bunch of people are hooked to a game server, their IP has to be known.  That is, the IP address of everyone on this game server needs to be known because that's how the game server is able to exchange traffic with you.  So what can happen is that, one way or another, or for whatever reason, somebody upsets somebody else on the Internet.  You know, they get pissed off because they're blasting them or...



LEO:  Happens all the time.



STEVE:  ...they say something that upsets somebody else.  And before they know it, they're now under attack.  And it actually does happen all the time.  End-users who have one way or another upset somebody else on the Internet find themselves, an end-user, a single person, the victim of a denial of service attack.  Basically they're just blasted off the Internet.



LEO:  Many people have asked me about this.  It happens a lot with instant messenger clients, where they'll get flooded with a lot of requests to message.  Or, yeah, a game server, you could get pinged to death.  There are all sorts of ways to do this.  Is there a way to protect yourself?



STEVE:  Well, there really isn't.  You don't have the ability to filter.  You know, you can't call AOL and say, hey, AOL, I want you to block this stuff from my connection.



LEO:  Well, you can turn off pings in the router, though; right?



STEVE:  Well, yes.  The problem is, by the time it comes to the router, it's already clogged your connection.



LEO:  Because your connection is upstream from you, yeah.



STEVE:  This connection clogging is the real problem.  And, in fact, it's one of my complaints with router manufacturers and some residential firewall manufacturers who say on the box that this will protect users from denial of service attacks.  That's the other question that I get a lot is people saying, hey, should I buy this router that'll protect me from a denial of service attack?  It won't.  It can't.



LEO:  Well, it technically is protecting your router from the denial of service attack, and what's inside the network.  But it doesn't protect you upstream, so it doesn't matter.



STEVE:  Well, exactly.



LEO:  I mean, it's not a lie, it's just that it's ineffective.



STEVE:  What the router can do is the router can see that there's a whole bunch of traffic that is being aimed at one of the computers behind the router.  The only thing it can do is to block that traffic.



LEO:  Right, right.



STEVE:  So it's not like...



LEO:  But the traffic's still coming down your pipe, it's just getting blocked...



STEVE:  Well, exactly.  So it's not like the computer can still be accessed.  The computer is not being attacked.  But it's also off the Internet.



LEO:  It has no Internet access.



STEVE:  I mean, it's got no connectivity because the router had to shut off any traffic going to that computer.  The only way it can protect it is to disconnect it.



LEO:  Well, is the only solution not to piss off people in games, or what?  I mean...



STEVE:  That really is the truth, Leo.  That's the only thing you can do.  Now, the other approach is to somehow, if possible, change your IP.  It's trivial for a dialup user to change their IP because every time you connect to the Internet through a modem, you're going to be assigned a new IP.  It's much less easy if you're a DSL or a broadband user.  Most...



LEO:  This is interesting.  It means you probably shouldn't have a static IP address unless you've got a web server or some other reason to do it.



STEVE:  Well, yes.  And, in fact, if you disconnect your router from your cable modem, or even more significantly, maybe unplug your cable modem - say that you're an end-user.  You've upset somebody on the Internet for whatever reason in an IM chat or on online gaming or something.  And now you're suddenly - your light's on constantly, you've lost your connection to the Internet.  If you disconnect completely, that is, not just your computer from the router, but you want to actually unplug the router, probably power down the cable modem, and wait a while...



LEO:  Don't do it right away because they'll just give you the same IP address back; right?



STEVE:  Yes, that's exactly what happens.  The router identifies itself by its MAC address.  Now, that's one other thing you can do is many routers now allow you to either user the router's own MAC address or to specify a MAC address.  That's done because some cable providers lock your subscription to the MAC address of your computer.  So the router needs to be able to clone the MAC address.  If your provider is not requiring that you not change your MAC address, you can change it.  And that will trick your ISP into allocating a different IP address for you when you reconnect to the Internet.  And the point is, these attacks are not aimed at you, like at your equipment, in any particular way.  They're always aimed at your IP.  So if you can arrange to change your IP address, either by disconnecting completely for a few hours, when you reconnect you'll probably get a new IP.  Or if you can trick your router into pretending to be a different router by changing its MAC address, then again, your ISP will give you a new IP, basically a clean IP.



LEO:  They're not going to want to do this, of course, because it's not helping them.  They're just going to give that IP, the bad IP to somebody else, and the problem will just be spread around, so...



STEVE:  Well, in fact, that's something that happens also.  Sometimes users will hook up to their broadband provider, get a new IP, and that IP is under attack from the person who had it before, they were under attack.  Now you get a new IP.  Or, for example, sometimes I know that it may be that the user before was very active with file sharing.  This was happening a lot in the Napster and the Kazaa days, where you would get a new IP, and suddenly you were getting all this inbound traffic from other peer-to-peer users who thought you had the file that they wanted, trying to get the file from you because whoever it was who had the IP before, you know, that's what they were doing, and now you've got their IP.



LEO:  This sounds like something we have to solve in the long run, that there's a structural flaw here.



STEVE:  It is a mess.



LEO:  There's no solution, though.



STEVE:  The problem is, this has all sort of evolved over time.



LEO:  Right.



STEVE:  These are very new problems compared to the technology of the Internet, which has now, of course, a vast infrastructure keeping it from changing.



LEO:  So the bottom line is, try not to annoy anybody on the Internet.  Don't attract attention.  If you can change your IP address, it's probably a good idea to change it periodically.  Maybe look for an Internet service provider that gives you that capability.  And if they have a large enough pool of addresses, you should be able to report a problem with an address, and they could put it on the shelf for a while, and pull it out of circulation.



STEVE:  I would say that, in general, for people who are really security conscious, if they can disconnect their cable modem and their router, power down the router, just from time to time, maybe if you know you're not going to be using your computer, like, all day Sunday, just turn the power off on your cable modem and your router, let them sit for a day.  Chances are, when you turn them on at the end of the day or the next day, they'll come up with a new IP.  And it's just sort of a good idea to change it from time to time.  It's really not the case that your IP can ever be super stealthful and secret because, for example, most people will find that their email address contains their IP as a consequence of the way that the information has gone from their email client to their ISP.  So it's not, you know, something that it's really possible to keep super secret.  But changing it from time to time really does make sense.



LEO:  Let me just raise this, and it may be a dead end, but I use a service, it's essentially a proxy server.  It's a security service called iPhantom.  And it anonymizes my IP address to their IP address.  Any attacks, any time I'm online, if I'm on BitTorrent or whatever, I appear to be coming from that IP address.  Would that be an effective solution?



STEVE:  That would be an effective solution.  Basically you're using them as what's called a "proxy" in order to route all of your traffic through them.  Then their IP is the only one that's going to be visible.  If you disconnect from them, then later reconnect, chances are you'll be coming out of a different pool of their IP.  And I would imagine that someone like that has all kinds of defenses that they've already got in place upstream that are much more than your provider provides to you.



LEO:  Right.  I mean, that's their business.  That's one of the things they really ought to do.



STEVE:  Right.



LEO:  Well, it sounds like the other message that probably consumers should get is, if you see on the box "protects against," you know, "ping attacks, protects against DoS attacks," that's not true.



STEVE:  No.  That's exactly right.  And I'm glad that we've made this very clear because it's an annoyance that these vendors are claiming, I mean, they know that people are concerned about being attacked on the Internet, about these denial of service attacks, so they're putting it on the box.  But if traffic is flooding your connection, there's nothing the box at the receiving end of the flood can do to get out of the way.



LEO:  It's too late.



STEVE:  The only thing you as an end-user can do is dodge that bullet by one way or another arranging to change your IP address.  And, you know, you may want to change your online gaming name or whatever it was that caused you to draw this fire because, of course, if you just reappear in the same environment with the same name, even if your IP has changed - and this has happened a lot - people will attack you at your new IP. 



LEO:  And in addition, if you're using - if you're being attacked over instant messenger, for example, being flooded with IM requests, nothing you can do about that either, really, because you have to let those in; right?



STEVE:  Well, exactly.  And the IM system will automatically pick up on your new IP if you maintain the same username in the IM system.  If you change your IP and then reconnect into the IM system, your new IP automatically gets passed in so that you're able to receive that information.



LEO:  So you can't run - you can run, but you can't hide.



STEVE:  That's exactly right.



LEO:  Steve, it's fascinating.  The ins and outs of denial of service attacks, both the original DoS attacks and the newer, scarier DDoS attacks.  And one more reason why people should also update their operating systems, run anti-viruses, and try to keep their system from being one of the zombies that's being used to attack others.



STEVE:  Oh, absolutely.



LEO:  Yeah, I mean, that's another way we can practice some hygiene on the Internet.



STEVE:  Being good citizens on the Internet.



LEO:  Steve Gibson is at GRC.com.  Information about all of our Security Now! shows, including small 16-bit downloads for those of you on a dialup or with smaller storage devices, and transcripts for those of you who like to read while you listen, are available at GRC.com/securitynow.htm.  Our thanks to AOL Radio at aolmusic.com for providing the bandwidth for Security Now! so that we can offer this absolutely free.  And every Thursday we'll be back with yet another Security Now!.  Steve Gibson, thanks for joining me.



STEVE:  Always a pleasure, Leo.  Thanks.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#9

DATE:		October 13, 2005

TITLE:		Rootkits

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-009.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  This week we explain "rootkit technology."  We examine what rootkits are, why they have suddenly become a problem, and how that problem is rapidly growing in severity.  We also discuss their detection and removal and point listeners to some very effective free rootkit detection solutions.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 9, for October 13, 2005:  Rootkits.



Steve Gibson is here.  We are in Toronto, preparing to record another episode, or two or three or four, of Call for Help.  And today we're going to talk about rootkits.  What is a rootkit?



STEVE GIBSON:  Well, you know, in prior episodes of Security Now! we've used the term.  We've sort of bumped into them tangentially.  And I thought we ought to just, you know, take some time and really explain what that is because it's no longer just a theoretical problem.  It's really becoming something that end-users need to be aware of.



LEO:  And that's not good.



STEVE:  The term "root" is the original term used for, like, the maximum privileged account on a UNIX machine.  UNIX, of course, beat Windows to the Internet...



LEO:  Right.



STEVE:  ...by, I don't know, a decade or so.  You know, it was the foundation of the Internet.  And so when hackers wanted to get into and compromise a UNIX machine - because UNIX administrators are typically very savvy, you know, they're not Mom and Dad, they're like, I mean, they knew what was going on.  They couldn't just install files and run processes because they would be spotted immediately.  So they realized they had to go stealth.  So rootkit technology refers to - it's a stealthing approach.  Anything that stealths a process or files or, in the case of Windows, registry entries, basically - and even the appearance of the process in a list of processes, so that stuff can be loaded on your hard drive and running in the system.  And no matter what you do, you can't see it.



LEO:  It's undetectable.



STEVE:  It's virtually undetectable.  We'll talk here before we're done about new approaches that will detect rootkits.  But unless you take extraordinary measures, you can't see them.



LEO:  It seems like that's a pretty big flaw in an operating system, that a process should be able to do that.  I mean, can't they just say nobody's allowed to be this stealthy?



STEVE:  You know, the problem is, no OS we have was designed from the beginning assuming mistrust.  One of the other things we're going to talk about in the future is the fundamental problem with security being assuming trust, and dealing with problems rather than assuming mistrust, and then explicitly allowing.  Our whole security model is upside down.



LEO:  It's too bad.  I mean, it'd be nice to say everybody's beneficial, nobody's being mean.  But in fact we know now that, no matter what you're designing, somebody's going to try to attack it.



STEVE:  Well, and imagine having a system that is fundamentally hardened against attack, instead of all of our systems being fundamentally open to attack.



LEO:  And patched.  Even UNIX, though, originally was not designed to be secure.



STEVE:  Well, it had the idea of, like, the root was the way you had, you know, godlike powers over the system.  And then you were supposed to have normal users that couldn't mess around with the operating system.



LEO:  Even from the beginning, UNIX had permissions and access control and things like that.



STEVE:  Well, and so did Windows, actually.  I mean, you know, the original NT was a secure operating system that had the ability to...



LEO:  Well, NT.  But never Windows 95, 3.1, 98.



STEVE:  That's a very good point.



LEO:  It was inherently insecure.  And in fact I think that's part of the problem XP has is that, in order to maintain compatibility with older 98 programs, they can't really have secure policies.



STEVE:  Right.



LEO:  They have to allow programs to do things they shouldn't.



STEVE:  Exactly.



LEO:  Yeah, yeah.  So who's using rootkits now besides mean little hacker kids?



STEVE:  Well, what's happened is, in this ongoing escalation of spyware and anti-spyware, as people are becoming more aware of spyware - and, for example, the antivirus companies are now beginning to scan for malware, and of course we've talked about spyware itself, - Ad-Aware and Spybot Search & Destroy.  There are now spyware scanners that attempt to find this stuff on your system.  So what's happening is this rootkit technology has come down from on high, and it's well-known now there are sites like rootkit.com on the Internet that have the source code for this stuff.



LEO:  Rootkits R Us.



STEVE:  And remember Phrack magazine, Phrack.org, P-h-r-a-c-k, you know, they have a magazine that is published every so often.  I think they're, like, up to issue 63 over the last...



LEO:  Yeah, not anymore though.  They stopped, but...



STEVE:  Yeah, well, they did shut down finally.  But the last issue is out, and it's full of source code showing how you can do this.  So what's happening is, the spyware and commercialware and other sorts of malware are now incorporating this rootkit technology to go stealth.  Once they load themselves on your system, they disappear.



LEO:  When you say "disappear," you mean if I hit Control-Alt-Delete, I don't see them in a list of processes?  If I'm running an intrusion detection system, I can't see them there?  The antivirus and the firewalls don't see them?  They're totally invisible.



STEVE:  It's freaky.  I mean, when you play with this stuff, it gives you a sort of a chill because you know it's on the hardware, and you know where it is.  You do a directory listing, and it doesn't show.  Now, you know, we have hidden files, for example, where we're able to set the attributes to a file to "hidden" or "archive" or "read-only," you know, at that level.  But this is a level where you can't unhide these files.  Your operating system will not show them to you.



LEO:  How do they do that?



STEVE:  What happens is, they essentially modify the way the OS itself works.  They're compromising the operating system kernel.  You know, in operating system terminology we have the notion of a kernel, which is the OS core.  And then you've got applications which run as sort of clients of that operating system.  So a program you're running, you know, Corel Draw or Outlook or whatever, that's a client of the operating system.  Well, so are the spyware scanners.  So when you're running even a spyware scanner, it's saying to the operating system - in fact, for example, there are two API calls that's "find first file" and "find next file."  So if you ever want to, like, do a directory listing, you'll say "find first file *.*," and it gives you the first file.  And then you successively call "find next," "find next," "find next," until it returns no more files.  That's all there is to it.  So that's - so anything that's scanning your system is basically doing that.



Well, imagine if something altered the way the "find first" and "find next" operated, so that it was intercepting the response back to you, out of the operating system, back to any application that was asking, so that if it was about to report one of its own files, it would call - it would say, whoops, and call "find next" again on your behalf, skipping over that file.  Suddenly any program running on the operating system will not see any of those stealthed, rootkitted files.  They just disappear.



LEO:  Do they have to kind of rewrite the operating system kernel?  They replace the kernel to do this?



STEVE:  Actually, no.  Turns out that the way the OS is linked together, there's a table of jumps at the end of every program which is called the IAT, the Interrupt...



LEO:  Access?



STEVE:  ...Access Table, yeah.  And so all calls vector through that, look up the address in the operating system, and then go off to there.  All you have to do is change that address to your own code, and so the call goes to you instead of to the operating system.  And then from there it goes down into the operating system.  So, I mean...



LEO:  You might say, why did they make that so easy?  But there are legitimate reasons why you want to have an IAT, yeah?



STEVE:  Well, for example, I've done that myself.  On my own code, I want to make sure that I don't overwrite memory.  So I've intercepted the memory allocation and freeing of my own software so that I put guard bands in front and after blocks that I allocate.  And whenever I allocate memory, I fill them with a pattern.  And whenever I deallocate, I make sure that that pattern is still present.  So it's very cool for me.  I was able to add a feature to the operating system that it didn't have for my own software by doing this.  Well, imagine that something else comes along and starts adding malicious features to the operating system.  It's completely transparent to my software that I'm checking my own memory allocation.  Similarly, it would be completely transparent to some other software that something is altering what the operating system is doing.



LEO:  Can't a tool, a security tool, look at that jump table and make sure that it's intact, or somehow maybe write its own directory scanning routines, somehow avoid this?



STEVE:  The problem is that any tool like that is using the operating system even to do that.



LEO:  They just have to prevent me from doing that, and...



STEVE:  Once trust is broken, it's broken.  So once something gets into your system, you don't know what it's doing and what happened.



LEO:  And you may not even know it's there because there's no way of finding out.



STEVE:  Well, that's...



LEO:  Because you have to use the operating system.



STEVE:  Exactly.  That's the biggest problem.  The only thing that you would see would be, like, behavior that would give it away.  For example, there's no way it can keep the lights from blinking on your router when it's sending data out.



LEO:  Right.



STEVE:  And there's no way that, for example, if you had another computer sniffing the traffic, that it could hide that.  Now, the problem is, it could encrypt it so it wouldn't know what it was.  And, you know, Windows is so busy talking to the world now, it's all, any new updates today, what's going on today, I mean, you know, who knows what's going on with it most of the time?



LEO:  Is it possible to write a secure operating system?



STEVE:  Absolutely theoretically possible.  The problem is that, the way OSes developed, they developed in an environment sort of of academia, in the case of UNIX.  It's, you know, remember that these were $100,000 systems.  Nobody was going to be carrying one in their pocket.  They weren't going to go, you know, down to Radio Shack and take one home.



LEO:  And there weren't USB keys.  There weren't, I mean, yeah.



STEVE:  Yeah, people literally wore white coats.



LEO:  Yeah, to go in there.



STEVE:  And they had to - or a jacket because they were in air-conditioned, elevated floors.  I mean, so there was no awareness or presumption that you'd have 13-year-old script kiddies that were, you know, talking about this at lunch in high school and coming home and trying to outcode each other to see who could hack, you know, their Christmas present from the year before.



LEO:  So it's pretty widely known then that, I mean, the kids are out there.  They know about rootkits.  They know how to write them.  They know how to use them.



STEVE:  Actually, it's - now they brag about "getting root" on this and "getting root" on that.  That's the term for compromising and getting full, godlike power on someone else's machine.



LEO:  I guess, you know, the fact that you can figure this stuff out in Windows shows that some people are pretty determined.  I guess it's not so hard at all with an open source operating system.  I mean, Linux would be fairly easy to find these hooks and...



STEVE:  Actually, that's one place you could argue, and security people do, that full disclosure is a problem.  There are several techniques that we'll talk about here in a minute that are successful in finding current rootkit technology because they take advantage of still undocumented stuff in Windows.  Now, we know it's only a matter of time until that information gets loose.  So you might say, well, using that gives you a false sense of security.  But we now that the higher the fence is, the fewer people are going to take the trouble or have the ability to climb over it.



LEO:  But that's the old saying, "security through obscurity."  I mean, it's certainly nothing you'd want to rely on.  It's not a bad thing to have, but - but so you're saying that open source operating systems are perhaps more hackable, at least in this way.



STEVE:  I would say they are more hackable because they are fully known.  And, now, people who want to argue against that, and I could take that position, too, it's like, well, security's bad, full disclosure's good...



LEO:  At least you're going to write something secure from the get-go.



STEVE:  Well, the other thing you're going to do is you're going to assume the hacker has the same information you do.



LEO:  That's right.  That's right.



STEVE:  And that's really what you want.



LEO:  You can't count on them being ignorant and in the dark.



STEVE:  Exactly.



LEO:  Who is using rootkits?



STEVE:  That's the real problem, and that's why it's worth us talking about this for our regular, you know, interested PC user, is that rootkit technology has found its way into downloadable spyware and malware, that is part of freeware, that is part of file sharing systems, that is stuff you can - you could have it on your system right now...



LEO:  And have no way of knowing.



STEVE:  You would not know.  And none of the anti-spyware technology, Ad-Aware or Spybot Search & Destroy, those tools are not yet doing anti-rootkit scanning.  Now, Microsoft's own malicious software removal tool has just started doing that because the research group in Microsoft - remember that we, in fact our very first podcast we talked about the Strider HoneyMonkeys.  There is a Strider GhostBuster project.  The idea is that Microsoft uses the term "ghosting" as disappearing from all detection in the system.  So they have a GhostBuster as their technology which they're working on to begin to deal with this.  But getting back to your question, spyware is now incorporating this really hard-to-detect-and-remove technology.



LEO:  You don't want to name any names?



STEVE:  I know that CoolWebSearch is doing it.



LEO:  Really.



STEVE:  Yes.



LEO:  I mean, there's no business model that involves hacking your customers' computers, or is there?



STEVE:  Anybody who knows about CoolWebSearch and who has gotten their system infected...



LEO:  Nasty.



STEVE:  It's nasty.  Gotten infected with it over and over and over.  I mean, it is absolutely detected by any anti-spyware tool because it's so prevalent.



LEO:  You're making yourself an enemy.



STEVE:  Yes.  Yes.  So it's got to be that the people who do CoolWebSearch have just decided, look, we know the world hates us, we're just going to try to get in there anyway.  We're going to give them this CoolWebSearch whether they want it or not, and not going to let them take it out.



LEO:  And we're going to use rootkit technology to do it.



STEVE:  And we're going to use rootkit technology to prevent ourselves from being removed.



LEO:  You give me some hope, though.  If Microsoft can come up with a way to detect these rootkits, they're not completely undetectable.



STEVE:  Well, there are two approaches in general.  There is in-system detection and out-of-system detection.  The fundamental problem with in-system detection, meaning that you're running your detector on the system that you're trying to test, the fundamental problem is you know nothing about an infected system.



LEO:  It's been compromised.  You can't trust anything it tells you.



STEVE:  Exactly.  Once compromised, anything could have been done.  You no longer can trust any operating system call.  For example, there is one rootkit called the FU rootkit, which removes itself from the list of processes.  There's, I mean, down in the kernel, internal kernel data structures, down in protected kernel memory, there's a list of everything running.  That's what Task Manager shows you.  That's what Tlist shows you.  I mean, that's what everything uses.  Well, literally, it's what's called a "linked list."  It's a series of entries, each one pointing to the next.  This thing takes the entry pointing to it and points it to the one it's pointing to, meaning that it unlinks itself from the list.  Well, that's a bad thing to do because now you can't get rid of it.  But that's what it wants.  It wants to be undeletable, to disappear from any listing.  It's still running.  It's got threads.  It's able to do stuff.  But it's sort of just disappeared from the operating system.



LEO:  So how does Microsoft get rid of these things?



STEVE:  Well...



LEO:  You said there's internal you can't trust.  So is there an external way to monitor this stuff?



STEVE:  Well, there are the fundamental problems of internal and external.  Now, the guys at Sysinternals.com - and we're going to have a bunch of links for people to download this stuff, both on your show notes and on mine.  There is a RootkitRevealer, it's called, at Sysinternals.  And they've done something that is very clever.  And actually they say it's patent-pending technology, but it's exactly what Microsoft is doing with their GhostBuster, so I'm not sure who got there first.  The Sysinternals guys, they know the FAT file system and the NTFS file system backwards and forwards.  What they have done is they've built a little file system technology, basically a little mini OS of their own, and it's free.  This RootkitRevealer is free.  And I hope everybody who's listening to this will grab it.  You just want to run it on your system.  It will probably find nothing.  But if it finds something, that's going to get your attention.



The idea is that any rootkit is all about hiding itself.  So what this thing does is this scans the operating system from the normal API; and it also, because it knows how the FAT file system works and the NTFS file system works, it also scans it itself, down at the lowest level, physical disk access level.  So it's doing a scan of what the OS is telling you, and it's doing - basically it's its own little operating system, scanning individual hard disk sectors, interpreting the master file table, interpreting the file allocation table, and all of the file and directory entries.  So, and what it does is it compares them.  Because if there's no rootkit installed, then the operating system...



LEO:  Will match exactly.



STEVE:  It would match exactly.



LEO:  All right.  So any discrepancy means that there is a file on there that's not being exposed to the operating system.



STEVE:  Exactly.



LEO:  Something hidden.



STEVE:  Well, and what's so cool about this is it's universal.  Now hiding yourself is a bad thing to do because it exposes you.  Any change you make to the operating system in terms of files, it will find.



LEO:  And pretty much anything has to at least do that, has to save itself somewhere.



STEVE:  Well, and many things want - the other stealthing technology is to stick yourself in the registry.  The question is, how is this thing going to get started when you reboot?  These rootkits want to survive a reboot.  So they've got to stick themselves in all - and we know Windows is all full of these, you know, runonce, runservice, rundll, appnt, there's all kinds of ways these things can start.  Well, there's a comprehensive list of them.  They're in the registry.  So a rootkit has to have logged itself in to the registry in order to get itself started at boot.  So the other thing the Sysinternals guys have done, they absolutely  know what's called the "hive structure."  The "hive" is the on-disk storage for the registry.  So, similarly, they do a registry scan of all the known ways that anything could start itself in the operating system.  Then they read the raw hive file and parse it in order to compare it with what the registry scan showed.  And again, anything, any discrepancy, there should never be a discrepancy.  Any discrepancy says something is starting up and is taking extreme measures to hide itself from us.



LEO:  So the Sysinternals stuff doesn't use kernel calls at all.  It never uses the operating system call at all for its own internal look.



STEVE:  Well, it does.  It uses the operating system call like any application would.



LEO:  And then...



STEVE:  And then a low physical...



LEO:  And that couldn't be changed by a rootkit.



STEVE:  Well, that's the problem, is...



LEO:  I knew there was a problem.



STEVE:  That's the problem, is, okay, in order to do that, the rootkit would have to intercept the lowest level hard disk call and be smart enough to edit individual hard disk sectors.



LEO:  That's pretty hard to do.



STEVE:  That's the point.  This really...



LEO:  You'd have to know exactly what sector you're on and...



STEVE:  This really raises the bar.  The rootkit would then have to also have a full little operating system in it in order to be able to lie about the contents of physical sectors.  So it is way harder.  And at this point, the free, free to download from Sysinternals, it's called RootkitRevealer - people could just Google it if they want to.



LEO:  I'm doing it tonight.



STEVE:  Yes.



LEO:  I'm running right out there.



STEVE:  It finds every known rootkit.  Because no rootkits are yet smart enough, I mean capable enough, to fool it.  But get this.  This is really cool.  What rootkits did start doing is when...



LEO:  They'd look for RootkitRevealer is what they'd do.



STEVE:  And not lie to it.



LEO:  Tell it the truth.



STEVE:  Yes.  Isn't that neat?



LEO:  So there's no discrepancy.



STEVE:  Right.  So, oh, I just love that.  So what happened was, after RootkitRevealer came out, the malware said, oh, shoot...



LEO:  Something's looking for us.



STEVE:  ...this is RootkitRevealer making the call.  Let's tell it the truth.  Show it our files.



LEO:  Right.



STEVE:  Because RootkitRevealer doesn't know about specific rootkits.  It's looking for a lie.  And so the malware stopped lying to RootkitRevealer.  I love that.  So what they did was, now it makes up a random name for itself and runs as a Windows service.



LEO:  So essentially RootkitRevealer is a rootkit.



STEVE:  It's got rootkit technology, yes, because it's accessing the physical hard drive.



LEO:  Right.  It has to act like a rootkit to find a rootkit.  But we trust Sysinternals.



STEVE:  Oh, well, those guys are tremendous, yes.  Okay.  So we're still locked in a cat-and-mouse battle with rootkit technology.  The RootkitRevealer, free from Sysinternals, finds 100 percent of the current rootkits that are known to exist.  And because it does it by knowing exactly how the FAT and NTFS work, in order to trick it, you would have to literally be able to edit physical sectors on the fly, not creating any breaks, I mean, you...



LEO:  Pretty hard to do.



STEVE:  It's a serious piece of work to do that.



LEO:  I mean, somebody may well end up doing it.  I wouldn't put it past these guys.



STEVE:  It's what's going to have to be done if they're going to want to fool the RootkitRevealer.



LEO:  Very interesting.



STEVE:  Now, Microsoft's approach, or any approach - oh, and the guys at Sysinternals understand this.  They talk about this is a limitation, and the only way to really do this is being outside the system.  So the way this works - and the links we have to the Microsoft Research GhostBuster project, people will be able to read some white papers that give more information about that.  The idea is, in the system you enumerate all the files, all the registry keys and so forth, and basically take a snapshot.  Then you boot the winpe from a CD.  Basically you boot Windows from a read-only medium.  And now you look at the hard drive and, again, look at everything that the hard drive has.  You parse the registry hive, you figure out what's going on, and you compare the two.  So you take a snapshot that may have lies in it.  And then from outside the system, from a CD boot, you look back at the hard drive, while that operating system is not running at all, and do a comparison.



LEO:  So similarly the rootkit isn't running because the operating system hasn't booted up.  You're running from a clean system.



STEVE:  Well, yeah, the rootkit exists only on hard disk as some files.  And there's no way for it to hide itself because it's sitting there trying to run next time you boot.  So Microsoft recognizes that of course this is not easy.  I mean, you know, you would have to shut down your system.  Also there's all that pesky licensing problems with Windows.  You know, I mean, it's an advantage of a Linux or an open source system because people can have as many copies of the operating system as they want to.  Here, over on the Windows side, you know, you have a problem of licensing a bootable copy of Windows.  But ultimately, the only way to know absolutely for sure, if rootkits ever get smart enough to bypass RootkitRevealer, is by booting a static system and then comparing sort of an in-system and an out-system snapshot in order to find the differences.



LEO:  Is Microsoft offering a product like that yet, or is...



STEVE:  No.  Nothing...



LEO:  It's internal right now.



STEVE:  You know, they know at the research level that's what they have to do.  Now, there are some problems...



LEO:  Because I could see - and by the way, we have a lot of IT administrators who listen to this podcast because they of course have to fight this fight for real every single day.  And I could see an IT...



STEVE:  Ooh, speaking of which...



LEO:  Yeah.



STEVE:  I'm sorry to interrupt, but I wanted to make sure the IT guys know that Sysinternals allows the RootkitRevealer to be run on remote systems, using that PsExec utility they have.  As long as you have access to the system, you're able to launch it remotely.  And it's a...



LEO:  So you can scan your whole network.



STEVE:  Yes.



LEO:  Yeah.  And eventually it would be worth buying an extra copy of Windows on a CD for doing this, if you had a large installation.  It's the individual user that's going to be a little hard pressed...



STEVE:  Right.



LEO:  ...to figure out a way to do this.  So rootkits are out there.  They're well known.  The technology that they use is well known.  There's not much we can do to fight that.  But there are at least tools that we can use to try to discover them.



STEVE:  There are two...



LEO:  Can you prevent infection?



STEVE:  Well, there we come to...



LEO:  The same way we prevent other spyware and viruses, yeah.



STEVE:  Yeah, there we come to the issue of hardening the OS.  And right now we have extremely soft operating systems.  I mean, the traditional wisdom is, don't run as administrator because a non-admin account, you know, like the guest account or a lower privileged account under Windows, or even, you know, any of the open source OSes, presumably you have lesser privileges.  The problem is all kinds of things break.  And much software requires admin privileges in order to install it.



LEO:  Mostly on Windows, and that's because of the heredity - or the legacy, I should say - of Windows 3.1 and 95 and 98.



STEVE:  Well, and for example, RootkitRevealer needs admin access.



LEO:  Right.  Well, that's appropriate.  I mean, if you're going to install software, you should be an admin.



STEVE:  Yes.



LEO:  If you're going to run RootkitRevealer, you should be the admin.



STEVE:  Yeah.  What I see Microsoft doing - and I think Longhorn, now called Vista, has some of this.  They're working to make it more feasible to run the system as a non-privileged user.  So you're able to get elevated privileges briefly in order to run an install of some software, but you never yourself have to log on as that privileged user.



LEO:  Every UNIX book I've ever read, every manual, every program, every UNIX sysadmin has always said, "Never run as root."  This is one of many reasons why you never want to run as root.  You never see that in Microsoft's documentation.  Don't run as administrator.



STEVE:  It comes.  I mean, it comes with full privilege.  Who would ever, you know, Mom and Dad would never know that they have to lower their privilege because Microsoft knows too many things break.



LEO:  You can do that.  I set up my Mom on Windows 2000 as a limited user.  And, yeah, she would call me, saying I want to...



STEVE:  Leo, Leo...



LEO:  ...you can't update her antivirus.  You can't update your own antivirus.  And it seems like that should be - at least you should be able to run that.  But anyway, but yeah, but that's better than - and she never got any spyware and never got a virus because she was never running with high enough privileges.  You can't install software, you can't install a virus.



STEVE:  And Mom probably needs to surf the Web and to check email.  And so you really want her to have a safe system.  And so she, you know, she - not being a power user, she's not going to hit that barrier of needing admin.



LEO:  And at home my family all runs their own Macs, but they all run as limited users.  It's a little easier on OSX to run as a limited user long term.



STEVE:  Right.



LEO:  It's really hard on Windows, you know, unfortunately.  Well, anything else to say about rootkits?  Have we covered the topic?  Just run to Sysinternals right now.



STEVE:  Go to Sysinternals, RootkitRevealer.  Also, just for the sake of completeness, people will see these links on both of our pages.  F-Secure.com also has in beta now something called Blacklight, which is the same kind of thing.  It is a rootkit-revealing, rootkit-finding tool.  So, you know, the good news is, you know, again, it's a cat-and-mouse game.  The spyware has upped the ante, elevated the stakes, is using more technology to hide.  So we're beginning to see, you know, the whitehat guys are responding.  Unfortunately, we're reacting instead of being proactive.



LEO:  The only question I have is, if you detect a rootkit, how do you remove it?



STEVE:  That'll be a topic for another Security Now!.  I mean, yes.  I would say, if you detect a rootkit, you'll have to figure out what it is.  Then you can Google and find instructions for...



LEO:  But if you can't - if no normal tool can see it, it's going to be darn hard to remove it.



STEVE:  Well, that's exactly the problem.  So that's where you really do need to be able to have, like, a multiboot configuration where, again, you boot off a CD, yeah, or take your drive and make it the D: drive of another machine.  Then it won't be running, and you can go and delete those files.



LEO:  [Indiscernible] won't do it.



STEVE:  No.  No, because it's still the OS.



LEO:  Steve Gibson, you've terrified us all, but I think it was an important thing to talk about.



STEVE:  Yeah, that RootkitRevealer, we'll be showing it on Call for Help, in fact.  It's just a very cool tool.



LEO:  Let's see how many of our machines that call for help are compromised.  What do you say?



STEVE:  Ooh, that'd be really neat.



LEO:  Oh, you think?  Thank you, Steve Gibson, and thanks, of course, to our friends at AOL Radio for providing us with the bandwidth for this podcast:  AOLmusic.com.  And of course you can tune in their podcast channel on AOL Radio and hear Security Now!, along with some other fine podcasts.  We'll see you next time.  Have a good trip back.



STEVE:  Yup.



LEO:  Thanks.



STEVE:  Thanks, Leo.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#10

DATE:		October 20, 2005

TITLE:		Open Wireless Access Points

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-010.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I examine the security and privacy considerations of using non-encrypted (i.e., "Open") wireless access points at home and in public locations.  We discuss the various ways of protecting privacy when untrusted strangers can "sniff" the data traffic flowing to and from your online PC.



LEO LAPORTE:  This is Security Now! Episode 10 for October 20, 2005:  Open Wireless Access Points.



Steve Gibson is on the line, and we're ready to talk security.  Steve, of course, the head honcho and maven at GRC.com, the creator of the great SpinRite file recovery and disk recovery program, which I still use and have used for years and love, and it's updated and great and better than ever.  And of course ShieldsUP! and all of his free security products that you can download, like DCOMbobulator, Shoot The Messenger, UnPlug n' Pray - or is it UnPlug n' Play?



STEVE GIBSON:  UnPlug n' Pray.



LEO:  It is UnPlug n' Pray.



STEVE:  Because the idea is you want to run it and then pray that nothing else gets you.



LEO:  Pray it works.  And then of course the Security Now! podcast, which we're very pleased to say is getting a great response, I think a lot of interest.  Everybody has to pay attention to security; and occasionally I'll see a message saying, well, I'm a Mac user, but I still listen.  This stuff applies to Mac users, too.



STEVE:  Well, and in fact that's one of the things that, you know, we're trying to do with this, is there are some people who sort of just want to know what button to push.  It's like, oh, don't confuse me with any theory.  I just want to know what program to run, what button to push.  But it's really more interesting, I think, to - I mean, certainly we do some of that, the way we did, for example, with RootkitRevealer, telling people who are using Windows to just get that off the Sysinternals site and run it.  At the same time, it's much more valuable, I think, if we explain what this stuff is about.  And, you know, I don't remember what the old adage was, something about, you know...



LEO:  Give a man a fish, he'll eat for a day.



STEVE:  That's right.



LEO:  Teach a man to fish, he'll know what equipment to buy.



STEVE:  Exactly, so...



LEO:  Or something like that.



STEVE:  Well, what I think - no, I'm sure that's exactly the one that I was trying to think of.



LEO:  Yes.



STEVE:  So the point is that, if we can explain essentially that, you know, the things that we know in our soul from having been dipped in all this technology for years and years, in a way that's accessible to people, then we're turning people into security, you know, gurus themselves, who, for example, won't want to know only what the best antivirus program is, but will be able to evaluate for themselves what the best one might be.



LEO:  I think that's important.  I think that, unfortunately, we do live in a world, certainly in the Windows side, where you have to be a security expert, unless you're lucky enough to be sitting behind a well-manned firewall at your office, and you don't use the stuff at home.  I mean, everybody needs to have some security information.



STEVE:  Right.



LEO:  It's just part of the deal.  And if you're a Mac user, I think it's very important.



Well, the topic today impacts Mac users just as much as it impacts PC users.  But before we get to today's topic, let's kind of wrap up this rootkit.  Because we did learn some stuff since our last podcast.



STEVE:  Well, and in fact it was the day after you and I did the podcast in Toronto that we also did a show on Call for Help about the same topic, about rootkits.  We ran RootkitRevealer on the various machines there.  I don't think there was a single one that came out perfectly clean.



LEO:  But a lot of it was false positives.



STEVE:  Well, that's exactly the point.  For example, we discovered that Norton's secure-delete facility actually uses this same rootkit technology to hide deleted files from any programs in the operating system, much the same way we were talking about rootkit technology would be hiding malware.  Of course, Norton's secure deletion system is not malicious at all.  It's doing this in order to really securely save these deleted files until you want to bring them back.



LEO:  So it's a legitimate use of rootkit technology.



STEVE:  Yes.  And so, again, it's the perfect example of why it's worth spending some time on the theory behind the things we talk about because this would allow people, if people understood that what RootkitRevealer was doing was not revealing rootkits necessarily, but actually showing the difference between what's really on the system and what you're seeing - I mean, for example, you would have a sense that, okay, this is something that's hidden from me, not, you know - it's a false positive result from RootkitRevealer, not something that's necessarily malicious.



LEO:  We also found that Kaspersky's Antivirus uses a rootkit to hide some of its processes.



STEVE:  Right.



LEO:  And so we thought, oh, my God.  We ran it on Andy's computer, and we were laughing because it was so loaded with stuff.  And then we realized, oh, it's just Kaspersky.  It's normal.



STEVE:  Right.  There have been some people who have responded that they have found rootkits.  They have found randomly named files and other confusing things.  So it looks like it's very useful.  But again, it certainly is the case that there are valid programs, non-malicious programs, that are also hiding things on behalf of the user as part of their function.



LEO:  It just underscores your point.  There's no such thing as pushbutton security.  You really do kind of have to understand this stuff.  You know, we have that bent, though, you and I.  We like to understand it.  We're interested.  That's part of the fun of it for us.  Not everybody wants to.  But that's, I guess, just the way it is, at least...



STEVE:  Well, and I think that's what this program is about is explaining issues of security, oftentimes telling people, you know, what we recommend they do; but also, you know, a lot of why because, you know, why is what's really interesting, I think.



LEO:  Let's change gears now, talk about our subject of the day, open wireless accent points, something everybody has to deal with, not only when they set up their own wireless network at home, but when you go to an Internet caf�, an airport, a hotel, and use their wireless.



STEVE:  Right.  I think that, well, certainly we will be talking about issues of wireless security many times.  You know, at some point we're going to talk about, you know, encryption and essentially non-open use of Wi-Fi.  But I really wanted to spend some time to talk about open access points.  For example, right now, where I'm sitting at home, I don't have wireless running.  There are three open access points that my, you know, if I were running wireless, I'd have complete access to.



LEO:  Your neighbors.



STEVE:  Those neighbors of mine have not secured their access points.



LEO:  I walked downtown with NetStumbler running a couple of weeks ago, just to see.  I walked through my small town.  I live in a little community of about 50,000.  And I would estimate about 60 percent - and apparently this is a pretty consistent figure nationwide - 60 percent of the access points I was able to see were unprotected.



STEVE:  Well, now, from prior conversations that we've had in TWiT, we know that a lot of people want their access point to be open.  They sort of like the idea of creating a communal access to their broadband through their access point.  So sometimes they're doing it deliberately.



LEO:  I used to be that way.  But as soon as I realized that people could see everything I'm doing, I kind of changed my tune.



STEVE:  Well, now, that's exactly the point.  And that's really what I wanted to talk about is, if we step back a little bit, a wireless system is like an Internet hub, inasmuch as, you know, anybody who has access to - who is within range and has access to the radio signals is able to see all of the traffic going to and from.  There are, you know, in Internet technology there's this notion of a hub versus a switch, where the difference is a switch actually looks at the data coming in and routes it back to or out to the destination where it's going to.  So if one person is, like, sniffing all the traffic on their wire, they'll only see their traffic going to and from the switch because the switch sends other people's traffic down their connections; whereas with a hub, essentially you're rebroadcasting everything that the hub receives.  Well, similarly, a wireless access point that is running open is working like a hub, inasmuch as anyone sniffing the traffic that they're able to receive sees everything coming and going.  And because it's an open access point that is not encrypted, it's in the clear.



LEO:  This is the nature of Ethernet.  It's what they call a "collision-based network."  Think of it as a big circle, a big ring, and all of the traffic goes around the ring everywhere until it finds its destination.  But it's visible, meanwhile, to everybody on that ring.



STEVE:  Exactly.  And in fact the original topology for Ethernet was a coax, a single coax cable, and you tied your cards into this coax.



LEO:  Uh-huh, I remember that...



STEVE:  So the idea was that, if packets happened to be sent at the same time, they would collide.  And they were listening themselves to the traffic, so they would see that they had collided because somebody else started transmitting at exactly the same time, so they would wait a random length of time.  Chances are, then, that one or the other would retransmit in the clear.



LEO:  So the upshot of this is that, when you're on a network like this, anybody else on the network can see what you're doing.



STEVE:  Well, yes.  And in terms of what the person's doing, for example email, unless special actions and measures are taken, email is transmitted as pure raw text in the clear.  So, for example, somebody running a packet sniffer, which are freely available for download on the Internet - Ethereal is my favorite packet sniffer - anyone sitting with a wireless machine running Ethereal will see all the traffic going to and from everyone's machine that is within range.



LEO:  So they see raw data, though; but can they construct, you know, your emails, your passwords?  Can they reconstruct that out of the raw packets?



STEVE:  Oh, absolutely.  And in fact, tools like Ethereal will reconstruct dialogues because it's able to understand what the protocol is.  It'll rebuild email messages.  Much of the email log-on called POP is just in the clear.  So you'll see usernames and passwords going out, you'll see mail that they're sending and mail that they're receiving.  I mean, it really is completely insecure.  So I think the real point that we want to drive home is that, sure, you may think that it's exactly the model that you had, Leo, where you were talking about initially running your access point open completely.  It's great to think about sharing your bandwidth in a situation where you're not being billed per byte, you're just being billed a flat rate per month.  That's like, hey, I'm not using my bandwidth, you know, I want to be a good citizen here and allow my neighbors to do so.  But, I mean, it really is the case that, unless you take special measures, like running a VPN connection through, or running a secure tunnel to a remote proxy, I mean, it's very difficult to protect this by default in an open access point.



LEO:  So the solution is to scramble your data.  Now, it's scrambled when you go to your bank or you buy a book on Amazon.com because those are secure socket layers, and they're scrambling it.  But it's not scrambled normally when you're downloading email or visiting a web page.  So you said you can...



STEVE:  No, exactly.



LEO:  You can protect it by scrambling it.  And you mentioned VPN and other techniques.



STEVE:  Well, yeah.  I had a person who wrote in asking, if they were on a secure site filling out a form, and they did not yet have the little lock showing, was it safe to submit that data.  That's actually a really good point, that the way data is sent back to a web server is over, well, secure data is over this SSL connection, or as people see it in the URL, https, "S" being for secure, as opposed to just http://.  The event of pushing the button and submitting the data will create a secure connection.  So it's very likely that, if the web page is running securely, that is, even if it's not showing you the lock when it's displaying the form, submitting the form can still be done securely.  However, unless you take a look at the source code of the web page, you're not going to be really sure that it's a secure submission.  So most sites will take the time to, for example, create the form on a secure page...



LEO:  Right.



STEVE:  ...to show their users that they've got SSL technology and to give them the assumption that, when they actually submit the data, it's going to be secured.



LEO:  And a late model browser - and you may have seen this warning, now you understand what it means - late model browsers will say, "Warning:  You are submitting this data over an unencrypted connection."  Most browsers will now warn you about that.



STEVE:  Right.



LEO:  Just so that you don't think - well, I'll give you an example.  I use SSL for my email.  But in order to establish the SSL link, I have to send a password to log in.  I presume that password is sent in the clear, unencrypted; right?



STEVE:  I would guess that that's probably going to be encrypted.  If you're using SSL mail, you're probably connecting to a port other than the normal POP default port.



LEO:  Ah, that's right.  We're connecting over 443.  So it's secure already.



STEVE:  Oh, okay.  Exactly.  So the idea is that, I mean, the beauty of SSL - and it's a very nice protocol that, again, we will be talking about in the future in some length because it involves this whole public key/private key business - the beauty is it establishes a secure encrypted tunnel, or connection, between the end points, prior to any user data passing through it.  So that the connection is secured before the URL goes through requesting a page to be delivered over SSL, before your username and password goes through, I mean, it's extremely secure.



LEO:  Now, when I set up my wireless network at home, I'm turning on WEP, or better yet, WPA.  That's protecting me.  Is that right?



STEVE:  Well, sort of.  One of the things I want to talk about soon - maybe we can do it next week - is to follow on with this talk about, you know, open versus closed by talking about different types of closed or encrypted connections.  Because it really matters what type of encryption you use.



LEO:  Well, let's save that for a later date.  But just at least say use WPA if you can.



STEVE:  Yes.



LEO:  And...



STEVE:  Absolutely.  If, as a result of us talking about this, people decide, hey, you know, I'm going to go to a little more trouble now - I think what happens is, oftentimes people, you know, bring their wireless gear home.  They plug it in.  They think, oh, well, you know, I'll worry about all that encryption stuff later.  I just want to make sure this thing works and see if it goes.  And, you know, they plug it in, they connect up, everything's working.  And it's like, oh, well, I'll do that tomorrow, or next week, or whenever...



LEO:  And I don't blame them because they...



STEVE:  ...and never get around to locking their access point down.



LEO:  And it can be a real pain, you know, to do that, so I don't blame them.  So, but assuming you're doing that at home, you would be safe; yes?



STEVE:  Doing what?



LEO:  Turning on WPA encryption.



STEVE:  Yes, yes.  If you are at home, well, basically any of the encryption - the original encryption, WEP, has been badly broken.  And that's what I want to talk about when we specifically discuss this because it's really interesting how and why it's broken.  But the successor, called WPA, was specifically designed so that it could be retrofitted in older gear that only used the WEP encryption.  So WPA is extremely strong.  I mean, it's industrial strength.  You can use it anywhere.  If your equipment only has WEP encryption, as all of the early equipment did, then that's certainly - that's, like, way better than nothing at all because it will encrypt the data.  It's just that if somebody really wanted to get to it, they could.  So if you only have a choice of WEP, that's certainly better than leaving your access point open completely.



LEO:  But here's the problem.  If I go to a coffee shop, or I go to the airport or a hotel, they don't turn on encryption.  They have to leave them open so I can log in; right?



STEVE:  Well, that's exactly right.  And again, it's really important to keep that in mind, that if you're using an open access point, you really need to think of it in terms of everyone in the coffee shop, for example, is clustered around behind you, looking at your screen.  I mean, they're not actually looking at your screen electronically...



LEO:  But they could.



STEVE:  ...but they're seeing the mail you're sending; they're seeing the mail you're receiving.



LEO:  There's really two issues.  We've talked about the privacy issue of people seeing your stream.  What about the issue of people hacking into your computer?  Aren't they able just to get access to your network by virtue of being able to glom onto that connection?



STEVE:  Well, I'm hoping that anyone who's concerned with security has taken the measure already of running a local personal firewall.  This is another good reason why, even if you've got a NAT router at home that you know is going to be protecting you from external intrusion into your network, you still really want to be running a firewall on your machine.



LEO:  If you ever leave your home network - you don't need it on a desktop.  But if you ever leave your home network, you've got to have it on your laptop.



STEVE:  Yeah.  And anybody using Windows XP Service Pack 2, and certainly anyone who's now running Windows XP should be; or maybe you prefer ZoneAlarm or, you know, Sygate or Norton or Outpost or Kerio or, you know, any of these many personal firewalls.  You know, that's going to be there, carried around on your machine, and it's going to keep people from getting into it in any simple fashion, even though they are basically in a shared wireless mode.



LEO:  Probably even just the built-in Windows Firewall would be sufficient in that case.



STEVE:  I think it really is absolutely sufficient in this instance.



LEO:  And especially Service Pack 2, yeah.  So what do you do when you go to a wireless access point?  You can't force them to turn on WPA.  How do you protect yourself?



STEVE:  There are really only a couple ways.  If you were at an open wireless access point, accessing your corporate network, most likely you're in a mode where, in order to dial in or connect into a remote corporate network, you're going to be running over a VPN.  A VPN is very much like SSL.  It actually uses a different protocol, typically IPSec, which is IP Security, in order to establish an extremely strongly encrypted connection between your machine and the remote network.  Essentially you're participating in that remote network, sort of extending your corporate network across the Internet, through the air, to your table in the coffee shop, and making your remotely connected machine very much secure, as if it were sitting inside of the corporate firewall on the corporate network.



LEO:  Many of us, unfortunately, don't work at companies where we can do that.  But there are alternatives, things you can do even if you don't have a corporate network.



STEVE:  Yes, exactly.  The next step is to use some sort of a proxying service that is offering you a secure tunnel on purpose.  You've mentioned the one that you have some appliance for.



LEO:  Yeah.  I use iPhantom.  Now, you'd have to carry that around with you.  I don't know how practical that is.  But that does that because it establishes an SSL link with their servers.



STEVE:  Yes.



LEO:  There's also companies...



STEVE:  Also Anonymizer.com.



LEO:  Anonymizer does it.  And that's...



STEVE:  And they explicitly offer exactly what we're talking about.  An encrypted tunnel is what this is called, an encrypted tunneling service, where you would run some client software on your side.  Basically you're using the wireless connection to get your machine on the Internet.  Then you're creating an encrypted tunnel connection between your machine, client software running on your side, and this service, for example, the Anonymizer secure tunneling service, so that your traffic is encrypted through the air, across the Internet, to Anonymizer.com, where it is then decrypted in order to then transit from their location out over the Internet, just as you normally would if you were at home or in a corporate environment or wherever else.  The point being that the vulnerable segment, where you're going over the air from your computer to the coffee shop or airport access point, that's encrypted.  It's also encrypted all the way to where it gets to Anonymizer, so you're safe against, for example, employees at the access point who might be able to sniff your traffic, as well.



LEO:  I want to mention two other products that do the same thing.  One is very inexpensive, it's called HotSpotVPN.  And it uses SSL, which is kind of nice because most of the time SSL ports are wide open.  You don't have to talk to the coffee shop to say, hey, please pass my VPN traffic.  Because not all routers will do that automatically.  That's the...



STEVE:  That's true.



LEO:  So since it's SSL, you can pretty much guarantee you'll be able to do that.  If you pay for a year, it's fairly inexpensive.  And then there's another one called PublicVPN.com.  And same idea, you subscribe, and then you log into their servers, and they protect you.  So there are choices.  Do you think that's the way to go, I mean, if you're going to be in a coffee shop?



STEVE:  I really do think that's the way to go.  It's, I mean, sure, it's not free, but you're getting some substantial benefit from the service.  If you're a person who uses open access points, you really need to be aware that - well, and in fact, what's really interesting, Leo, is even if you were to use encryption, that is, if you were to use first-generation WEP encryption, typically everybody on the access point has the same key.  So even if it's encrypted, if you're using WEP encryption, you still don't have any protection.



LEO:  That's not good.



STEVE:  No, it's - no.  WEP does have a configuration where you can use a per-user key.  But due to the, you know, tremendous overhead of managing keys for individual users, almost no one does that.



LEO:  Interesting.



STEVE:  Generally an access point has a single key.  Everything connecting to it has the same key, and it encrypts it.  But it means that, again, sniffing the traffic, it can trivially be decrypted if you're using WEP-style encryption, which is another reason WEP is really bad and WPA is a much better solution if you have a choice.



LEO:  Now, I notice that Wi-Fi hotspot providers are becoming more aware of this.  I know that T-Mobile now claims that it's offering some sort of - I'm not sure how they're doing it, so we'll have to look into it.  But they provide some sort of security for users of T-Mobile hotspots.  I'm sure Wayport, the other big provider, is going to start doing the same thing.



STEVE:  Yes.



LEO:  Boingo has for a long time.



STEVE:  Certainly if the user was just surfing the Internet, they didn't care if anyone was, like, looking over their shoulder, seeing the pages that they were bringing up, saw the URLs they were clicking on, the music they were downloading, or whatever they were doing, you know, there are certainly scenarios where you really just don't care about eavesdroppers.  But it is totally the case that, unless you're taking some measures on an open access point, eavesdropping is completely possible.



I'll mention one scenario for the home user that's useful because it's simple and free, and that is, if your access point is not part of your cable modem or your main router, but you've got a separate access point, like a freestanding little radio that you plug in to your router, if that's a switch as opposed to a hub, as most of these routers are, then your traffic on your wired network is not going to be seen by the wireless network.  That switch gives you some isolation.  And so there are ways that you could, if you really wanted to run an open wireless access point for your neighborhood, for example, there are ways that it could be done securely; but you really need to give it some thought.



LEO:  Anything more to be said on this topic?  I know there's a lot more to be said, but on this particular show, how about?



STEVE:  I think we've got this one covered.  And next week let's talk about WEP versus WPA...



LEO:  Absolutely.



STEVE:  ...and the different types of encryption of wireless because we've had a lot of questions from people about that.



LEO:  For more information, of course, we've got the show notes, they're online, and we'll put links to all the websites and products we mentioned on the show notes at GRC.com/securitynow.htm, or on ThisWeekInTech.com, where I also post the show notes.  By the way, I want to mention, if you use a podcast client like iPodder X or iPodder, the show notes are also visible in the RSS of the feed.  So the information that we're talking about is part of what you get if you subscribe to the show.  It's not visible in iTunes and some of the other aggregators, but it is visible in most of them.  So that's another way to see where those links are and so forth.  Look in the show description of your aggregator to see more.



And Steve keeps a pretty good page with lots of information and feedback, and there's always a conversation going on around it at his website, GRC.com/securitynow.htm.  That's where you'll find the small versions of this show, the 16KB version for those people who want to play it back on portable devices or just don't want to spend the time downloading it.  He also provides transcripts in a variety of formats for people who want to share this information with colleagues, friends, and family.



And I want to thank the folks at AOL's podcast network, AOL Radio at AOLmusic.com, for providing us with the bandwidth for Security Now!.  It's a great pro bono service they offer that makes it possible for us to get this to you in the easiest possible way.



We'll be back next Thursday with more Security Now! with Steve Gibson.  Thanks, Steve.



STEVE:  Thank you, Leo.



LEO:  Have a great day.  I'm Leo Laporte.  Take care.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED

This work is licensed for the good of the Internet Community under the 

Creative Commons License v2.5. See the following Web page for details:

http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#11

DATE:		October 27, 2005

TITLE:		Bad WiFi Security (WEP and MAC address filtering)

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-011.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I answer some questions arising from last week's episode, then plow into a detailed discussion of the lack of security value of MAC address filtering, the futility of disabling SSIDs for security, and the extremely poor security offered by the first-generation WEP encryption system.



LEO LAPORTE:  This is Security Now! Episode 11 for October 27, 2005:  WEP and MAC Address Filtering.  Right?



STEVE GIBSON:  Yeah.



LEO:  Steve Gibson.



STEVE:  Yeah.  Now, talking about wireless security is a huge issue for people.  It's complicated.  There's a lot of acronyms, you know, sort of an acronym soup area.  And, sadly, the vendors of these wireless routers are doing really dumb things.  I ran across some pages in one book that showed the default WEP keys that some routers have.



LEO:  So they have keys that anybody who knew what they were doing could just crack right away.



STEVE:  I just - when I saw this, it was like, my god, these people are never going to learn.



LEO:  Wow.



STEVE:  You know, it's like having, you know, default administrative name, or username and password.  It's like, okay, that's just a bad idea.  And so here they're, like, creating really good security, or what they hope is really good security, and then giving it default passwords.



LEO:  Good lord.



STEVE:  Just amazing.  But a whole ton of people posted to the Security Now! page all kinds of ideas and questions and things about our last week's topic, which was the idea of open access points.  And there were a couple things that I thought we had covered that I guess we hadn't, that I want to.  And many people were wondering about MAC address filtering.



LEO:  Right.



STEVE:  But first of all, a question that we got several times was, what about the legal implications of leaving your access point open on purpose so that other people can use it?  And I would have thought we would have talked about it.  But if not, we certainly want to because, of course, that's the huge issue, is if your neighbors are using your access point, then anything they're doing which is illegal - and you might guess that maybe someone would tend to use somebody else's access point just specifically because of the inherent anonymity that they're going to get.  But any traffic which is backtracked towards them is going to hit your IP address, that is, the IP of the open access point, and stop there.  I mean, that's the public IP for the access point.  And at that point, you know, it goes wireless, and there's no way to track it beyond there.



LEO:  So even if you want to let people use - I mean, I think there's something to be said for being generous and letting people use your access point.  You might want to think twice about it just because you'll be liable for what they do on it.



STEVE:  Well, it's do you know your neighbors?  Or maybe it doesn't even matter if you know your neighbors.  So, yes, I don't want to discourage people from being generous and sort of having this community spirit of, oh, you know, my bandwidth is a flat rate, I'm not paying per transfer, so I'd like to make it available.  But again, as with so many things, as long as you know that, you know, the RIAA might come knocking at your door, I mean, and they are suing people; and that, you know, any kind of filesharing, any file downloads, anyone who's, like, tracking malicious activity will come to the IP of your router, which is the same as your access point, and stop at your location.



LEO:  Certainly something to be aware of, although we're not legal experts; so the legality of it and so forth and what your liability is I would have to leave to a lawyer.



STEVE:  And, you know, we've talked on several previous TWiT episodes a few months ago that there have been some strange legal judgments made.  Like someone got sued for using someone else's open access point.



LEO:  Right, right.



STEVE:  Because he was doing it deliberately, they said, oh, well, that's an abuse of somebody else's computer network.  It's like, oh, okay.



LEO:  And we don't know yet what the upshot of that case will be.  But, yeah, it's, you know, it's kind of murky right now, to be honest.



STEVE:  It's strange.



LEO:  We don't, you know, they're all - the rules - nobody's really codified how this whole stuff works and who's liable for what, so I guess it makes sense.  There's also the other issue, then, there's a real security issue of an open access point.  Even if you're using SSL and encrypting everything you're doing, it still gives people access to your network; right?



STEVE:  Oh, well, it does, although the switch provides some protection.  Now, a couple people who know a little bit more about the way Ethernet switching happens took issue with my saying that the fact that you had a switch on your access point was good because it meant that your wired network traffic would not be going out over the air.  Well, that's completely true; but it turns out, and this is absolutely true, that there are ways to penetrate switches.  And we'll talk about that here in a couple minutes when we talk about MAC address filtering.  But it is the case that a switch can be breached.  But, in general, it's also true that the wired traffic is not just being gratuitously broadcast all over the neighborhood, which is, you know, certainly something you want to be aware of.



LEO:  So, but not all - most routers are not switches.



STEVE:  Actually, most routers are switches.



LEO:  Oh, they are, okay.



STEVE:  Yeah.  So, for example, a Linksys router will have a 4- or 8-port switch.  And so the idea behind a switch is that traffic is being sent to the endpoint that it's destined to, not just broadcast...



LEO:  Right.



STEVE:  ...out on all the wires or out over the air.



LEO:  And that gives you some protection.



STEVE:  That gives you some protection unless somebody really wanted to work to penetrate that.  I guess I ought to talk briefly about how that's done.  There's something called "ARP spoofing."  ARP stands for Address Resolution Protocol.  The way Ethernet functions, Ethernet works on these things called "MAC addresses," which is sort of the address of the physical interface.  Every Ethernet card has a unique 48-bit MAC address.  24 bits of that 48 bits - that is, half of the address, 24 bits - is assigned uniquely to each manufacturer.  And then they have the other 24 bits - actually it's the least significant, the right-hand 24 bits - which is a serial number which they increment uniquely for every single device they create, the idea being that there is no provision on the Ethernet protocol for dealing with the collision of MAC addresses; that is, two adapters, both plugged into the same Ethernet, are going to have a problem if they've got the same MAC address.



LEO:  Let me just kind of - a MAC address is a unique number assigned to your network card or all network interface cards, wireless adapters, wireless access points.  Each have supposedly a unique MAC address.



STEVE:  Correct.



LEO:  And is it guaranteed to be unique, or is it likely to be unique?



STEVE:  Well, it has to be unique for an Ethernet, for local segment of an Ethernet; that is, all of the adapters that can see each other on the Ethernet, it has to be a unique MAC address.



LEO:  So that's how the packet knows where to go, or...



STEVE:  Exactly.



LEO:  Yeah.



STEVE:  And, in fact, that's where this Address Resolution Protocol comes in.  What happens is, typically the gateway machine, that machine that is on the connection between your local network, your LAN, and the WAN, or another chunk of LAN, when it gets a packet that's destined for inside, it sends something called an "ARP broadcast," basically saying, hey, who has this IP, that is, which adapter out there is handling traffic for this IP address.  Because a MAC address and an IP address are very different.  The IP address, as we've talked about many times, is the unique address for the Internet, which is different from the - sort of like the physical hardware address, which is the MAC address.  So in response to this broadcast, which all adapters receive, one of them that has that IP assigned to it says, oh, that's me.  So it answers the request, saying that my adapter is assigned to this IP.  So at that point, anything listening has the - essentially begins to build up a map, gets information about which IPs are associated with which MAC addresses.  So this is the way that a switch, then, learns on which wired connections, which MAC addresses are valid, and which IPs those are associated with.  Okay, now, this all comes...



LEO:  Okay.  I'm trying to follow this.  It's a little complicated, folks, and I - this is one of your black diamond Security Now! podcasts, for the experts here.



STEVE:  Well, there's all the details.  Now, the question that so many people wrote in to ask about after last week was, many people said, you know, for whatever reason, I'm not using any encryption, I'm not using WEP, I'm not using WPA; but I do want security on my wireless network.  So I've taken advantage of what's called "MAC address filtering."  On my router, I'm able to give it a list of MAC addresses, that is, the physical adapter, like the wireless adapter, serial number that I want to allow to have use my access point.  Is that secure?



LEO:  Right.



STEVE:  And the answer is, not at all.



LEO:  Now, but see, this is a surprise to me because pretty much every corporation does this - we did it at TechTV - the assumption being, well, by preventing nonregistered MAC addresses from logging in, we're secure.



STEVE:  Yup.



LEO:  Why is it not...



STEVE:  Absolutely not secure.  It's...



LEO:  Why not?  It seems like it would work.



STEVE:  It's what I was referring to when I said it's hard to believe that router manufacturers are offering something which is completely bypassable.  But that's what's going on.



LEO:  So I just want to mention one more time, so people understand, this is that setting, usually called "MAC address filtering," that most routers have.  And what you do is you'll get the MAC address of all the different wireless cards that you want to allow to connect to your access point, and you'll enter them into a table.  And if this filtering is turned on, only cards with that MAC address, in theory, will be able to log into your access point.  It seems like the ultimate in security.  It's an affirmative security policy, saying only these people can get in.



STEVE:  Yes, it is a feel-good...



LEO:  You're really bumming me out here.



STEVE:  Well, okay.



LEO:  So what happens?  Do we spoof it?  How do we crack that?



STEVE:  Yes, that's the problem, is that the MAC address is the front of every packet sent, says basically there's a - I'm going to this MAC address from this MAC address.  Which means anyone with any sniffer software...



LEO:  Ah.



STEVE:  ...instantly sees all the authorized MAC addresses for the wireless network.



LEO:  Well, not all of them.  All the active...



STEVE:  It's that...



LEO:  All the active ones.



STEVE:  All the active ones.



LEO:  So they watch traffic that's legitimate traffic.  They capture even one packet, they've got the MAC address that they can spoof.



STEVE:  Yes.  They have a valid MAC address which has been authorized and recognized by the access point, and they can simply use it.  It's that bad.



LEO:  You know what?  That provides no security at all.  So in other words, I'm a bad guy.  I'm sitting outside of Big Bank, Incorporated.  Big Bank, Incorporated believes in wireless, but believes in secure wireless, and says only these MAC addresses can connect.  So I just capture one packet of somebody talking to their router.  I say, oh, there's their MAC address.  I put in - almost every program allows you to spoof MAC addresses.  That's trivial.  In fact, your router allows you to spoof its MAC address very often.



STEVE:  Well, in fact, many user interfaces allow you to specify...



LEO:  What's your MAC address?



STEVE:  ...a MAC address for, you know, whatever reason.  I mean, there's nothing at all special about a MAC address.  It's just a 48-bit serial number.  If...



LEO:  Now, wait a minute, though.  You said that only one device can have that MAC address.  So I cannot get on while that other one is on still.



STEVE:  Well, actually you can.



LEO:  Oh.



STEVE:  Because there's nothing to prevent two devices from  using the same one.  That is to say, it'll be little confusing for the other one...



LEO:  Right.



STEVE:  ...which is receiving traffic that's bound for it.  But that happens all the time.  So if you adapt - or, sorry, adopt the MAC address of some other machine, then it'll go to the access point.  The access point checks the MAC address against its list of authorized MAC addresses, sees that it's valid, and accepts the traffic from it.



LEO:  Wow.  So, okay.



STEVE:  So there are even - there are plenty of more advanced things that can be done, as well.  There are ways to disassociate a remote machine from the access point using the wireless protocol.  So, I mean, this is something that's been researched extensively.  There are ways you can disconnect one machine and then connect yourself in.



LEO:  So you could knock the other guy off.



STEVE:  But the short version of this is it provides zero protection.  I mean, it would protect your access point from a neighbor casually connecting or maybe, as often happens, mistakenly connecting.



LEO:  Right, right.



STEVE:  There was a true story that I heard - this is not an urban legend - from a security guy who went to one of his clients' homes who was complaining that something was wrong with his wireless connection.  And when he looked, it had a Apple AirPort SSID.  Well, this was a Windows guy.  And he said, you know, I've got a Linksys wireless router here, not an Apple AirPort.  So they unplugged his Linksys wireless router, and he stayed connected.



LEO:  He's still on.



STEVE:  He was using, without knowing it, he was using his neighbor's wireless connection.  So then they shut his system down and reconfigured things, turned it back on, and it's like, oh, now I'm connected correctly.  But then they realized they forgot to plug his router back in.  Now he was using somebody else's wireless access point.  There were several of them within radio range.  And his system was just grabbing whatever one came along.  So, I mean, there are certainly cases where locking down and filtering MAC addresses would prevent casual misuse of your access point.  And so I don't want to say it's completely useless.  It will certainly prevent casual use.  But it should never be confused with security.  It is not security.



LEO:  Well, it's similar to the SSID hiding that some people advocate, where you hide the name of your router so that people don't see it.  But that's - in fact, it's almost identical to that because it hides it only from those who aren't using packet sniffers, but everybody else can see it just fine.



STEVE:  Exactly.  Anyone who wanted access to your access point would still be able to get it without any trouble at all.



LEO:  So we've eliminated the use of MAC address filtering, SSID hiding, and WEP encryption.  It sounds like the only way to secure wireless networking is with WPA encryption.



STEVE:  Well, that's really true.  And what I want to do is, for the balance of this second podcast about wireless, is I want to talk about WEP encryption because, again, it's so tantalizing, and it was the legacy encryption technology, which has been obsoleted.  But because older equipment doesn't support the stronger WPA encryption, many people are using WEP encryption because that's all they've got, or it's there; or, you know, they've heard that it's not secure, but they've really never taken it very seriously.



LEO:  Well, and this is also - this story is really a very good object lesson in how not to design a security protocol.



STEVE:  Well, what happened is really interesting.



LEO:  Yeah.



STEVE:  It was designed by - the WEP, W-E-P, this original encryption was designed without consulting security people.  It was a security protocol designed by engineers who had the best of intentions but weren't security people.



LEO:  It's a security protocol that sounded like a good idea at the time.



STEVE:  Well, and, for example, it uses an extremely good cipher technology called RC4.  That's an RSA proprietary cipher which is very good for encrypting as long as you use it correctly.  And that's really the key.  The foundation of WEP encryption, with this RC4 cipher, is extremely strong.  But it was used in a very bad way.  For example, an absolutely unbreakable encryption is something called the "one-time pad."  With a one-time pad - and this was used by the U.S. military in early world wars and was never broken because it is unbreakable.  And, you know, I don't say that casually.  I mean, really, truly unbreakable, not like, oh, there aren't enough computer power, you know, it would take X billion billion years, no.  Unbreakable.  The idea is that you generate random numbers.  And it's - now, that's super critical.  The numbers have to be really truly random.



LEO:  Now, that's hard for a computer to do, in fact.



STEVE:  Well, it's very hard.  And, in fact, back in, you know, World War I, it was the bingo bowl approach, where they had a whole bunch of letters, A through Z, in a big ball that rolled around, and the cage spit one out, and they wrote this down on a pad of paper - which is why it's called a one-time pad - and then they put that ball back in, waited a minute, pulled the next one out.  So they ended up with a pad of paper with letters A through Z, really, really, really random.  Then they mixed the message that they wanted to send with this pad.  And in the case of mixing, for example, you would take the letter you wanted to send, you would look at the first spot on the pad, and it would be A through Z.  Well, that told you how far along in the alphabet to shift the letter you wanted to send sort of like forward.  And so that would convert your letter A through Z to a different alphabetic letter A through Z, having sort of rotated it forward in the alphabet by the amount specified on the pad.  Well, clearly that would create a completely scrambled message.  What's amazing is, it's impossible to decrypt it.  There is not enough information contained in that message...



LEO:  Well, a short message.  If you had a long message, eventually you'd see a pattern; right?



STEVE:  No.  No.



LEO:  Oh, because you keep reusing - you keep changing it.



STEVE:  Yes.  Every...



LEO:  You left out a key part.



STEVE:  You change for every single letter.



LEO:  Ah ha.



STEVE:  For the second letter, you use the second position in your one-time pad.



LEO:  Got it.



STEVE:  The third letter, the third position.



LEO:  So there are no repeats.



STEVE:  And you never reuse your one-time pad ever, ever, ever.  Now, it turns out that some of our foreign adversaries also had the idea of a one-time pad.  They made the mistake of reusing it.



LEO:  Right.  And that's how you can crack it.



STEVE:  And that's all it took to break their encoding because reusing it and comparing these encrypted messages was, essentially, a huge mistake.  But so the idea is, when you receive this message, if you have the same one-time pad - and that was the problem with this approach was that, once this was generated, then the recipient had to have an identical copy of this pad.  But, for example, if you were a submarine operator, before you left port you'd get a whole suitcase full of these one-time pad sheets.  And then that's what your decryption officer would use in order to decrypt these messages.  And, once used, that pad was destroyed, and it would never be used again.  That's an unbreakable cryptography.  I mean, truly unbreakable.



LEO:  Now, the reason - just as a side note, the reason computers are not good at random numbers is because they use an algorithm, which inevitably repeats.



STEVE:  Well, yes.  Anything...



LEO:  So they're called "pseudorandom numbers."  They're not really random.



STEVE:  Yes, exactly.  And, in fact, a computer just can't generate anything random.  It's a deterministic math machine that is always going to go from one place to another.  However...



LEO:  There's not enough chaos.



STEVE:  Yes.  And, in fact, at Sun Computer they have photocells aimed at lava lamps.



LEO:  Which are random.



STEVE:  I'm not kidding.



LEO:  They are chaotic.



STEVE:  They use lava lamps to generate cryptographically strong random numbers.



LEO:  I love that.



STEVE:  Because it's just - it's like weather patterns.  I mean, it is...



LEO:  It's chaotic.



STEVE:  ...pure chaotic physics, and it is nondeterministic.  Now, computers can do a very good job with generating random numbers.  And that's what this RC4 algorithm does.  It is an extremely good pseudorandom number generator.  The idea is you give it a key, and that's the encryption key that WEP uses.  And using that key it scrambles its initial condition in a pattern based on the key.  From that point on it generates very good random numbers.  Now, it then uses this stream of random numbers to, in the same way as a one-time pad, to encrypt any communication going between endpoints.  The access point has the same key.  It uses this string of random numbers to perform the encryption.  And then the recipient has the same key.  It's why it's called a "preshared key," or PSK.  It uses the same key with its RC4 algorithm to generate an identical stream of these pseudorandom numbers, which it then essentially mixes again in order to restore the original message.



Well, it's a good idea except it was used badly.  For example, there was, in the initial implementation, an access point would authenticate someone who wanted to connect with it by sending it a - it would just make up some message of any sort.  And it would send it to somebody who wanted to connect.  The endpoint that wanted to connect would use its key to encrypt that message - whatever it was, it could just be randomness - and send it back.  The access point would then decrypt it and compare it with the message it sent.  Okay, now, from an engineering standpoint that sounds like, you know, a secure thing because that was a way for the machine that wanted to connect to prove that it had the key, because only if it had the key would it be able to encrypt what the access point sent properly.  So that when the access point decrypted it, it would compare properly to what was originally sent.  What they forgot was that somebody sniffing would see the in-the-clear text go to the end that wanted to authenticate itself and would see the encrypted response.  Well, since it had the in-the-clear text and the response, it had everything it needed to decrypt, basically to decrypt the encryption and determine trivially what the pseudorandom sequence was that the shared key was generating.



LEO:  So in order to decrypt WEP, all you need is enough information.



STEVE:  Well, and in the case of this horrible authentication protocol - which, by the way, has since been removed because it was so bad - you literally just did what's called an "Exclusive OR," an "EXOR," of the encrypted message and the plain text, the unencrypted message.  And what you got out was the stream of pseudorandom numbers that...



LEO:  But how do you get the unencrypted message, though?



STEVE:  Because that's what the access point sent initially...



LEO:  Oh, to say hello.



STEVE:  ...to tell the endpoint to encrypt.



LEO:  Oh.



STEVE:  Was just amazingly dumb.



LEO:  So you really only have to get a little data, and you can see the whole - you can get the key, and you're done.



STEVE:  Well, what that meant was that then, when the eavesdropper wanted to authenticate, he would say, "Hi there, authenticate me."  Well, the access point would send a different test jumble to him.  He didn't have to have the key because he already figured out what the pseudorandom stream was that resulted from the key.  So he just used that to encrypt a message and sent it back, and it was a perfect match.



LEO:  And so he's on.



STEVE:  And so he's on.  Now, that's not the same as being able to communicate from there on.  But it turns out that, I mean, that's typical of the mistakes that were made.  WEP, the WEP technology, is so badly broken that, given about an hour, it's possible to crack it for sure.  Sometimes you crack it sooner; sometimes it takes a little bit longer.  There are newer attacks which are able to stimulate the access point to generate much more traffic than it normally would in order to get it to give more samples of its use of the key, which then, using any freely downloadable software - I mean, there's like 10 or 15 different WEP decryption packages now, and people are spitting them out just because it's sort of fun sport.



LEO:  So if you're - why, you know, didn't these engineers realize the flaw here?



STEVE:  No.



LEO:  And why not?



STEVE:  The other thing, for example, is - I mean, it's just - the more you read about this, and I've studied this extensively, it's like mistake after mistake after mistake.  It turns out that, because they knew they couldn't use exactly the same key over and over and over because that would generate exactly the same pseudorandom sequence used for encryption, what they did was they said, okay, we're going to have a 24-bit counter on the front and 104-bit encryption code.  That's where this 104 comes from.  Some people have seen a 40-bit key...



LEO:  Right.



STEVE:  ...or a 104-bit key.  Well, if you add 24 to 40, you get 64, which is one of our favorite binary lengths.  If you add 24 to 104, you get 128, which is another one of our nice, you know, binary lengths, 128 bits.  That's where this 104 comes from, is it's 128 bits minus 24.  So they put a counter on the front of the key, and every time a message is used, the access point sends the counter and then uses the rest of the 104 bits with the counter to encrypt the message.  The problem is, it turns out that RC4 has weak keys, that is, some percentage of keys don't do a good job of prescrambling its initial state, so that it ends up not generating good random numbers.  So every so often, just in the normal use of traffic going over WEP, you know, every access point, every WEP-based device will encrypt with a bad key.  Since the receiver has to have that 24 bits to know which key was used, that's sent in the clear.  So anything sniffing is able to say, oh, there's a bad key, because now bad keys are well known.  So anyway, the bottom line is WEP is really, really, really badly broken.



LEO:  And if they had just asked, any security expert would have immediately seen the problem and said no, you can't do it that way.



STEVE:  Oh, exactly.  I mean, anyone who understood that RC4 was a good pseudorandom number generator, but you can't trust it in this application for many reasons.  For example, if you just throw away the first 256 bytes that it generates, after a while it gets going, and it does a good job.  But right off the bat, what it's spitting out is not very random.



LEO:  Oh.



STEVE:  Well, it turns out that's the header of the packets.  And headers have a very well-defined format.  Which means knowing what the headers are is something, you know, any TCP or IP engineer has.  So knowing what it is, you can subtract that from the encrypted message and get the random bytes back.  I mean, it's just horrible.



LEO:  So really now what we've learned is - and we knew this before - WEP doesn't work.  Now we know why WEP doesn't work.  That's one of the forms of encryption on wireless access points.



STEVE:  Well, it's the original encryption.  In any system which supports wireless encryption, WEP will be there, and sort of maybe encouraged - people tend to use it because they may have an older laptop or an older wireless adapter that only supports WEP.



LEO:  Right.



STEVE:  Now, there is - and we're going to talk about next week, you know, how to really lock down a wireless system.  There is a free WPA client running around, and XP supports WPA.  And...



LEO:  As does OSX.  So any modern operating system you'll be able to use WPA.  And maybe a firmware upgrade on your router will make it support WPA.



STEVE:  Yes, that's very much - that's very often the case is that the original firmware - now, the good news is that WPA is extremely good because WEP was extremely bad.



LEO:  We learned.



STEVE:  That is what happened, is WEP was so badly broken and was such an embarrassment to the 802.11 guys, the folks that were doing this, was that this time, for round two, serious security oversight was given.



LEO:  Right, right.



STEVE:  And the new protocols, TKIP, which was deliberately designed to be retrofittable into older hardware.  So with this background now, next week we're going to talk about what you do to really be secure with wireless, and how and why that really works in a very secure fashion.



LEO:  And you can no longer live in a fool's paradise, thinking that you're secure because you've got WEP or MAC address filtering or SSID hiding.  None of those do anything at all.



STEVE:  Yeah.  MAC address filtering is good because it will prevent casual, inadvertent misuse of your network.



LEO:  As will WEP.



STEVE:  Well, yes.  And, in fact, you certainly, I mean, WEP is better than nothing.  And also, if you change your WEP key often, it's normally the case, for example, it used to be that a busy access point would run through all of its keys in about seven hours.  Now it turns out you can stimulate an access point to just pour these keys out and make it much more, you know, basically bring the average cracking time down to about an hour.



LEO:  So we'd have to change our keys every hour to be safe?



STEVE:  Yeah, well, and the good news is that's what TKIP does.



LEO:  Ah.



STEVE:  It's a Temporal Key Integrity Protocol that keeps the keys changing.  And it never actually uses the master keys in the transfer of the packets.  That's the other mistake that WEP made is this preshared key, this key that each endpoint has, is what's being used to do the encryption.  So once you have that, you've got literally the keys to the kingdom.



LEO:  Right.



STEVE:  With WPA, the keys are used to derive other keys, which are then used for encryption.  It just - it's really so much better.



LEO:  We'll save all this for next time.  Maybe you'll explain to me WPA, WPA-PSK, WPA-TKIP, and all the other little acronyms.  I have to say one thing:  WPA is much easier to use than WEP because you don't have to do these long hexadecimal strings for your passkey.  You can use regular passwords.  So...



STEVE:  Right.



LEO:  ...by itself, that's a good reason to shift.



STEVE:  And by the way, there are attacks.  I'll just say, if we're moving people from WEP over to WPA, take the time when you're reconfiguring to come up with a really good, long passphrase because WPA is prone to dictionary attacks, which we've talked about before with passwords.  So in the same way that you want to use a really good, strong password, meaning numbers and letters and things that are not in a dictionary, even WPA can be prone to dictionary-style attacks.



LEO:  Steve Gibson, we've done it again, explaining the lack of security in wireless.  And I think, you know, I have to say, every place I've gone, and I can think of some places, including TechTV, has used MAC address filtering.  To learn that it's useless is just kind of a shocker for me, frankly.



STEVE:  And again, you know, as we've often said, a false sense of security...



LEO:  No kidding.



STEVE:  ...is worse than none at all.



LEO:  Yeah.



STEVE:  People thinking that MAC address filtering is going to really protect them and, like, be better than WEP, for example, is...



LEO:  And it's a pain to implement because you have to figure out what your MAC address is and then take it to the, you know, priest, the guy who holds the keys, and say here it is, please, sir, may I have access, and it's doing nothing.



STEVE:  Nothing.



LEO:  I love it.  If you want to take this information to your boss or your IT supervisor and explain to him why what he's doing isn't making a hill of bean's difference, go to GRC.com/securitynow.htm, and all of this will be explained in detail.  There's also a lo-fi, 16KB version of this for people who don't have the bandwidth or the space to store a larger file, as well as transcripts for those bosses who can't actually figure out how to listen to a podcast.



We want to thank Jamie Diamond, our high school sophomore, for our opening theme, and Mark Blasco for our closing theme.  And of course the great folks at AOL Radio who broadcast Security Now! on their podcast channel, but also provide us the bandwidth for download at AOLmusic.com.  We appreciate the support.



Steve Gibson, thanks for joining us.  We'll talk next week about really, truly, for once and for all, locking down wireless access.



STEVE:  Absolutely.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details:  http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#12

DATE:		November 2, 2005

TITLE:		Sony's "Rootkit Technology" DRM  (copy protection gone bad) 

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-012.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I discuss details and consequences of Sony Corporation's alarming "Rootkit" DRM (digital rights management) copy protection scheme.  This poorly written software unnecessarily employs classic rootkit technology (see episode #9) to hide from its users after installation.  It can not be uninstalled easily, it can be easily misused for malicious purposes, and it has been implicated in many repeated BSOD "blue screen of death" PC crashes.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 12 for November 2, 2005, a special edition on Sony's Rootkit DRM.  Steve Gibson, welcome back from GRC.com.



STEVE GIBSON:  Hey, Leo.



LEO:  The man behind SpinRite and ShieldsUP! and, of course, Security Now!, our security expert.  His expertise is in taking complex security issues and making them intelligible and understandable for everyone.



We did a whole section, a whole segment on rootkits a couple of segments back.  And they've returned to bite us in the butt.  What's the latest on rootkits?



STEVE:  Yeah.



LEO:  First maybe we should define "rootkits" for those who missed our podcast on rootkits.



STEVE:  Rootkit technology is technology which exploits the hookability, the variability of the operating system itself.  It changes the way the OS works for the express purpose of hiding malicious software right, like, in plain view, right in front of the user.



LEO:  Used by hackers to hide their hacks, originally on UNIX systems but now on Windows systems.  And then as we - and if you want more details, you should listen to Episode 9 of Security Now!.  But as we mentioned, it's always being used by spyware.  But the big story this week is a big company that's using rootkit technology.



STEVE:  Well, exactly.  What happened was that Mark Russinovich of Sysinternals, who wrote the RootkitRevealer that we talked about in Episode 9 and recommended to people that they get in the habit of using, he discovered something on one of his own machines, using his own tool.  Actually, he was updating the RootkitRevealer to add some more features to it and, you know, ran it on his system, and there was a bunch of stuff which, you know, he was as surprised as any of us who really know or feel like we know what's in our systems would be.  Well, he tracked it down to a commercial Sony CD that he had purchased not long before.  And when he stuck it in his computer, it popped up an end-user license agreement, the so-called EULA.  And, you know, he clicked on, oh, you know, okay, whatever, because apparently it needs its own player in order to play the music that it comes with.



LEO:  This is a kind of copy protection that a number of audio CDs use now.  And by the way, I don't know about this particular one, but in the past we've just told people, if you hold the Shift key down when you insert the CD, it will prevent the running of any software on the CD.  And that in the past has disabled the copy protection and allowed you to play the CD as you would any normal audio CD.



STEVE:  Well, and apparently, I mean, I don't know whether this has to be installed, or whether it's only for, like, the extended digital rights management stuff.



LEO:  Right, right.



STEVE:  But what Mark found was that a whole bunch of files and registry keys and, you know, modifications, you know, deep, I mean, true rootkit modifications were made to his system as a consequence of installing this thing.



LEO:  Wow.



STEVE:  So, I mean, you know, the RootkitRevealer did what it was doing.  He had no bugs in his code.  It was really showing that something had installed itself malicious - well, okay, not maliciously, but really without...



LEO:  Sneakily.



STEVE:  ...giving him any sense for what it was doing.



LEO:  Right.  So it's being used by Sony to enforce their digital rights management, their copy restrictions on the CD.  And is there a credible reason for them to hide this?



STEVE:  Well, I don't really think so.  And what's really interesting is that, I mean, this feels like d�j� vu for me because, as we talked about before with our original SPYaWAREness podcast, talking about the Aureate DLL that was bringing advertising software along and going, you know, it wasn't using rootkit technology, but it was installing itself without people really understanding what was going on, a side effect of that was that it was making systems less stable.  And it turns out, in researching this, I have found that this has been going on apparently for at least six months, back to, like, March of 2005.  People have been getting blue screens when they boot their system, associated with something called the aries.sys driver that Windows complains is a critical system component.  Well, this aries.sys is part of the DRM system called XCP which Sony is now installing when you buy one of their disks and stick it in your system.



LEO:  Now, Sony doesn't make this copy protection scheme.  They're licensing it from another company.



STEVE:  Correct.  It comes from a company in the U.K., and we'll have links to this company in our show notes.  What's interesting is that this thing has caused so many problems that even it, this rootkit technology, has a service pack.



LEO:  And how do you get the service pack?



STEVE:  So you download Service Pack 1 of this crap you don't want to have on your system anyway, in order to cause...



LEO:  But how do you get the service - how do you even know it's there to get the service pack?



STEVE:  Well, I mean, that's the problem with a software that installs itself surreptitiously in a machine.  Or, you know, many people had had these problems and didn't know and didn't, like, logically associate it with the fact that they had played an audio CD in their system.  The box comes up, and they click on OK, and off it goes.  Well, this just installed a rootkit.



LEO:  The license agreement implies that you can uninstall this.



STEVE:  Correct.  And there is absolutely no provision for uninstalling.  Now...



LEO:  You may think you've uninstalled it, but it's still there.



STEVE:  Well, actually, it's even worse.  I mean, again, it's exactly the kind of things you and I have talked about before.  People have used the RootkitRevealer, also the F-Secure product that we mentioned in our Rootkits podcast, the BlackLight product.  It showed, back in October, last month, some users use the BlackLight product from F-Secure to also discover this.  Well, in trying to remove it, they damaged Windows and lost their CD-ROM drive completely, just disappeared.



LEO:  Well, you know, I get a lot of calls on Call for Help and on my KFI radio show from people who have disappearing CD-ROMs.



STEVE:  I wonder if this could be related to that.



LEO:  This has become a very common problem in Windows of late.



STEVE:  Well, I mean, again, we're reliving history because this is exactly what was happening back with the Ad-Aware stuff, which is why I wrote OptOut in order to scan for and safely remove the Ad-Aware stuff.  They had no remover at all.  And when people would improperly delete these things - in fact, you and I have talked about how even one of our computers at the office lost its Internet connectivity when an anti-spyware tool just scraped the programs off.



In the case of this Sony DRM rootkit, it installs a filter driver sort of in - it's called a "filter" because it's in line between the operating system and the CD-ROM.  And Mark of Sysinternals had exactly this happen.  He deleted this file, this sys file, and his CD-ROM disappeared.  Now, he knew, because he's a heavy-duty techie, how to go around and how to go about getting it reconnected.  But many people have had to install Windows from scratch after removing this thing incorrectly.  And in fact, in some postings over on the F-Secure site, they say, yes, BlackLight, our rootkit tool, will discover it.  Do not use its deletion or you will lose your CD-ROM drive.



LEO:  So let's talk about - there's a number of angles to this story that I think are interesting.  But first let's just kind of cover the basics.  What do we know, what does Mark Russinovich say this tool does?  It looks like it does quite a bit to your system.



STEVE:  Yes.  It's got a collection of files and registry links.  So, I mean, it is a true rootkit technology.  Now, one of the problems with this is that it was also not very well written.



LEO:  Oh, great.



STEVE:  For example - yes, exactly.  It has technology to allow itself to be removed, but it has a driver-unload capability.  Mark saw, in looking at this, that it attempts to do so safely.



LEO:  But it can't.



STEVE:  He knows it's not possible to safely remove something that is hooking the kernel the way this thing does, really down deep.  There is no safe way to do it.  If you do you'll just get blue screens.



LEO:  It's rewritten the system service table; and if you remove the entry there, the system crashes.



STEVE:  Exactly.



LEO:  So you can't unload the driver.  It leaves the system unstable.



STEVE:  Exactly.  Now, even worse, he discovered in his version that it was also - the drivers were marked as "safe boot" drivers, meaning that, if you reboot Windows into Safe Mode, which is supposed to get rid of anything that could be causing a problem, allowing you to do system recovery sorts of work, then you'd be safe.  Well, this thing now marks itself as "safe boot."  Apparently it didn't used to because some earlier posts I found had people, they'd figured out how to work around this DRM, that is, you booted into Safe Mode, then you deleted a file called caj.dll, which was this CD-ROM filter driver, then you boot back normally, your CD-ROM is gone, so you delete it from the Windows hardware list and then tell Windows to rescan for any new hardware.  Windows would refind the CD-ROM, link it back in, and you'd be set to go again with this DRM bypassed permanently.



LEO:  So apparently people were circumventing the copy protection, and Sony, or the makers of this copy protection, decided to make that impossible by making them Safe Mode drivers.



STEVE:  Precisely.



LEO:  Wow.



STEVE:  Also...



LEO:  Yeah, tell us more.



STEVE:  It also named itself the "Plug and Play Device Manager," you know, which it's not, in order to confuse users who were trying to look at the list of running services and figure out, you know, why their system has started to misbehave.



LEO:  This is precisely what hackers do.



STEVE:  Oh, yeah.  And one last thing.  What it does is it hides anything that begins with $sys$ dot dot dot, I mean, you know, anything that begins with $sys$ gets hidden by this tool, even things that are not its.  So, for example, to test this, Mark renamed notepad.exe to $sys$notepad.exe.  It promptly disappeared.



LEO:  It's used...



STEVE:  Even though it was still in the system.



LEO:  It hooks into the rootkit and is now a hidden file that cannot be seen.



STEVE:  Which means that, if this software became prevalent, that junior hackers who don't have the ability to create a rootkit themselves could simply name their files $sys$, and they'd all be - they would all disappear, courtesy of Sony's copy protection.



LEO:  Let me underscore this.  Sony is installing, without your knowledge and with really very weak permission, a program that allows any hacker, whatever his skills, to hide files on your system without your knowledge.  They're putting a rootkit on your system that could be used by any moron.



STEVE:  Exactly.



LEO:  This is just appalling.  Now, Sony, as we speak, has not responded to these allegations.  But what's good news is that this is being picked up everywhere: PC Magazine; PC Pro; Slashdot's written quite a bit about it.  There's also a good article in The Washington Post.  The Washington Post has a good security column on there, and the author of that has written a little bit about it.  So it's getting coverage.



STEVE:  Yes.  Some guy who was blogging on MSNBC, a regular columnist, wrote a story yesterday about how he was going to be listening to and reporting on a new piece of audio CD that he had.  He put it in his drive, it popped up this EULA, and he clicked No.  He said, wait a minute, I don't want software installed on my system in order to listen to an audio CD.  Then he did a little looking around and realized how glad he was he clicked on No.



LEO:  Yes.  Well, I wonder how many of us have done this and exposed ourselves to this rootkit.  Do we know which CDs it's on?



STEVE:  Apparently, Sony's been using this kind of technology for on the order of a year or more.  There was another rootkit-ish technology they were using by a different name before this.  But at least six months this goes back.  And again, the good news is, RootkitRevealer, that we've talked about before, will let people know if they've got this on their system.



LEO:  If you run RootkitRevealer, what string should you see?  We've mentioned before there are a number of false positives you can get with RootkitRevealer that are okay - Kaspersky's Antivirus, Norton's Trash Protect. 



STEVE:  Yes.



LEO:  But is there a distinctive string that you'd see that would let you know that in fact you have the Sony/BMG protection on it?



STEVE:  Yes.  You want to look for the $sys$ on the files directory off the system 32 folder and a whole bunch of registry keys.  All are protecting themselves and hiding themselves with this $sys$.



LEO:  Are these the null-terminated string registry keys that we had talked about before?  Or null...



STEVE:  No, it's just this prefix of $sys$.



LEO:  $sys$, okay.



STEVE:  That's really the tip-off.  Now, we'll have in our show notes a couple other links because Sony - the good news is, Sony is getting a huge amount of heat from this.  You know, they are not saying they're not going to use it, but they do have a page now where they give you a link over to the XCP-Aurora.com site, where there is something that will remove this finally from your system.



LEO:  And have we verified that it actually does that without crashing you?



STEVE:  No, but I've seen a whole bunch of blog postings from people who have said that - and explained that what it does is it'll - the other thing is it has to install one more thing.  It works with an Active-X control, so you have to give it permission to install an Active-X control in your system in order to offer you the Service Pack 1 upgrade to this heinous bit of software.  And then if you say No, it has an option for deleting it.



LEO:  Brian Krebs, who writes the Security Fix column in The Washington Post, says that Sony says that any CD labeled "Content Enhanced and Protected," and it would be on the front and the back of the product, could contain this rootkit.  And he said that he did a quick search on Amazon.com site.  There are 24,000 of these CDs out there.



STEVE:  Oh, boy.



LEO:  So it's a serious issue.



STEVE:  Well, and the other thing that's really interesting, too, is that Mark technically violated digital rights management law...



LEO:  The DMCA, yeah.



STEVE:  Exactly, the DMCA, by figuring this out.



LEO:  It was illegal to do what he did.  And this is the problem.  This is a situation that our lawmakers have gotten us into because they're in the pockets of the recording industry.  And the recording industry clearly has no scruples when it comes to protecting their intellectual property.  Well, I hope that Sony does the right thing and pulls it back.  Nevertheless, that means there's still probably a lot of computers infected out there.



STEVE:  Well, and many people have written to the groups and the bands whose CDs did this to their machine.



LEO:  Good.



STEVE:  Typically, these people have responded that they had no idea...



LEO:  No, of course not.



STEVE:  ...this was going to be done.



LEO:  And unfortunately the bands, in their defense, have no control of this at all.  I'm sure their contracts, you know, specify that Sony can do anything they want on the CD.



STEVE:  Right.



LEO:  You'd have to be a pretty big band to say no to Sony in this case.  Well, I think what it means to me is that I'm going to be much less likely to buy a CD from Sony from now on.  Certainly, if you put an audio or - this is, by the way, true of movie CDs in another way.  There's a player that movie CDs install, the InterActual Player, that is known to disable CD-cracking software, DVD-cracking software on your system.  So I guess the bottom line is, if you're using a computer to watch movies or listen to music, and it asks you may it install some software, to say no.  And I would imagine that holding the Shift key down would still work in preventing that software from running.



STEVE:  Yes, that will prevent the autorun.  Now, one other nice feature - again, this goes back to what we've often talked about security-wise, if you do not have administration rights, this cannot install itself.



LEO:  Oh, very interesting, another reason not to run as root.



STEVE:  Exactly.  So many administrators have mentioned in various postings that users came to them when they installed some music on their machine, or tried to just play some music on their machine at work, because the work machines were locked down and their employees were running without administrative rights, this junk would not install itself on their machine.  And Sony has on their site, actually has pages explaining, here's how you add administrative rights because you're going to have to have those in order to use our little player with our music CDs.



LEO:  Oh.  Appalling.  Appalling.  And this is just, I mean, just appalling.  Well, we've met the enemy, and he is Sony/BMG.  I hope people are listening and write to Sony, write to the bands.  And I think the best thing to do is at this point stop buying Sony CDs.  In fact, I wouldn't buy a CD that says "Contents Enhanced and Protected" on it of any kind.  Do not buy a CD that says it's copy-protected.



STEVE:  Well, in fact, a number of people, posts in the various blogs said, you know, way to go, Sony, you've really made me want to legitimately purchase music now.



LEO:  Yeah.  This is, of course, what we've talked about.  And we talked about this on TWiT.  It's just turning people into criminals.  You do this, you go far enough, people are going to stop buying music.



STEVE:  Right.



LEO:  Well, Steve, I thank you for the update on this.  It couldn't have been more timely that we covered rootkits.  I would encourage people to go back to Episode 9, if they haven't heard it, when we talk about the rootkits and the potential problems.  And here it is, three episodes later, and one of the biggest companies in the world is foisting them on us.



STEVE:  Well, and what's neat is that, you know, we have talked about, and there exist, tools that will find these.  And now, thanks to all the furor which this has generated, there is a safe removal tool from the authors of the software, which, you know, always...



LEO:  If you trust them.



STEVE:  ...ultimately comes along afterwards just due to end-user demand.



LEO:  Well, but as we know from other software quote "removal tools" that the spyware companies gave us, you can't always trust them to do the right thing and remove their software properly.



STEVE:  Well, and here's an interesting issue, too, Leo.  Will the current anti-spyware and future anti-rootkit scanners label this as a rootkit?



LEO:  Right.  Because of course in the past they've bowed to commercial pressures and said, oh, well, I guess it's not a rootkit if Sony's doing it.



STEVE:  Yeah, I mean, so in terms of the standard non-supertechie rootkit scanner stuff, the stuff that the typical end-users run, will it deliberately ignore the Sony DRM rootkit and not tell somebody that it's on their system...



LEO:  Just appalling.



STEVE:  ...or not?



LEO:  It's just appalling.  And in fact it ought to because it's not - whether you think Sony's benign or not, it's not merely Sony protecting its DRM.  It's so badly done that it gives a backdoor to any hacker who wants to hide files on your system.



STEVE:  And has been known to create unstable booting situations where people are getting blue screens every so often when they boot, for reason of not being able to find this aries.sys driver.



LEO:  Once again, I'm going to go out and run RootkitRevealer on all my systems and make sure I didn't accidentally install it.  And if I find any Sony/BMG disks, I'm going to put a pile in the backyard.  Anybody wants to bring theirs over, we'll be burning them later tonight.



STEVE:  Well, and if nothing happens between now and next week's Security Now! podcast, we'll do our third installment on how to be really, really secure with wireless networks.



LEO:  Good.  Unless something else breaks.  Yeah.  But that's part of the mission of this show is to give you the latest breaking news, as well as, of course, tutorials on all of the fundamentals of security.



More information on this topic and all of our Security Now! podcasts, both in high-quality and 16KB versions, as well as transcripts, are available at Steve's site, GRC.com/securitynow.htm, that's the URL.  Steve, I want to ask you to update the podcast URL on your page to - the redirect that I use never changes, it's leo.am/podcasts/sn.  It did point to a site which has been changed.  So make sure you use, if you subscribe to this podcast, leo.am/podcasts/sn.  And...



STEVE:  I'll do it right now.



LEO:  Yeah, because we want to make sure everybody gets a copy of this particular episode of Security Now!  And iTunes has it right.  All the other places, if you subscribe through My Yahoo!, iTunes, Odeo, PodNova, they'll all get you the file.  And of course you can always get the latest file at GRC.com/securitynow.htm.



Our thanks to the good folks at AOL Radio for broadcasting Security Now! on their podcast channel and hosting our files for free so that everybody can get a copy of it:  AOLmusic.com.  Thank you, AOL.  And thank you, Steve Gibson.  Your information couldn't be more timely.  This is important stuff.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED. This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/








GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#13

DATE:		November 10, 2005

Title:		Unbreakable WiFi Security 

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-013.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I follow up on last week's discussion of the Sony Rootkit debacle with the distressing news of "phoning home" (spyware) behavior from the Sony DRM software, and the rootkit's exploitation by a new malicious backdoor Trojan.  We then return to complete our discussion of WiFi security, demystifying the many confusing flavors of WPA encryption and presenting several critical MUST DO tips for WPA users.



LEO LAPORTE:  This is Security Now! with Steve Gibson, lucky Episode 13:  Wireless Encryption Part 2.



Steve Gibson is back, the hero of the hour.  Did you get a lot of calls about the Sony rootkit?



STEVE GIBSON:  Yeah.



LEO:  I mean, whew, this was a big story.  We covered it last week.  If you missed it, do listen to Episode 12.  This is the copy protection scheme Sony is putting on some of its - Sony and BMG Music are putting on some of their audio CDs that is a hacker toolkit.



STEVE:  Well, and in fact, Kaspersky Lab reports today in their virus news that there is now a new backdoor Trojan program using, that is, leveraging the Sony DRM rootkit to hide itself in users' systems.  If it gets into the system - they're calling it Breplibot.b, I don't know why, but it's about a 10KB size file that renames itself $sys$drv.exe.



LEO:  And as we know from last week's episode, if you have the Sony copy protection on your system, any file named $sys$ will be rooted, rootkitted.  It'll be invisible to every tool.



STEVE:  Right, any file beginning with the $sys$ string just disappears.  So we already see - I mean, and we predicted last week that this was going to happen, never having seen one, that this was a serious potential danger for what Sony had done because, rather than only protecting specifically its own files, the authors of this - that were not Sony, they used a subcontractor - the authors arranged to cause anything beginning with the string $sys$ to disappear, including registry keys and any kind of files that are stuck on the file system...



LEO:  That's just so sloppy.  I can't believe they'd leave that hole on there.  Now, how does this Trojan spread?



STEVE:  It looks like it spreads by spam email messages.



LEO:  Oh, so opening an attachment.



STEVE:  Tricking people into loading it.



LEO:  Okay.  So don't download files or...



STEVE:  And it apparently opens a back door on the user system.



LEO:  Don't download files from unknown sites, open attachments.  Be very careful.  Now, here's a question for you, and a number of people have asked me this.  There are some anti-spyware programs that claim to detect the Sony rootkit.  Kaspersky must be able to.  If it's a rootkit, how can they do that?



STEVE:  Well, they're able to - well, for example, the Sony rootkit is easily detected.  You could simply rename a file to $sys$.



LEO:  Oh, yeah.



STEVE:  If it disappears, you know you've got the rootkit on your system.  You don't even need to use RootkitRevealer, as we were talking about now several times, in order to do a scan of your whole system.



LEO:  Yeah, somebody, shortly after we put out the podcast, mentioned that and said he's created a file on his desktop called $sys$canary, like the canary the old miners used to take down.  If that...



STEVE:  And if it ever disappears...



LEO:  If it disappears, you've got trouble.  So, okay, so it's easy to detect.  Is it easy to remove?



STEVE:  That's the problem.  Now, Sony - there's been, you know, we were part of the initial uproar at this time last week.  In fact, you know, we did our podcast a day early because we wanted to make sure this message got out as quickly as possible.  Sony has responded to the pressure.  They're doing some butt-covering PR spin, saying that there's really nothing wrong with it, but we'll put something on our site that people can use to remove the hiding behavior.  The DRM technology stays there, but the hiding behavior at least will be - it'll be shut down.



Now, the other revelation since last week is that Mark at Sysinternals has confirmed a report that he heard.  And I have not yet myself - I've ordered one of these CDs that I'm going to be infecting myself with here in a couple days because I want some firsthand experience of this myself.  But the Sony technology is also phoning home.  It uses the user's Internet connection on the fly, when they're listening to any of the disks that they've purchased using this built-in player.  It sends a message back to Sony saying that this particular song or album is being played.  Apparently this is for some sort of, like, banner rotation technology that it has to present something to the user.  But the problem is this is classic spyware phoning home behavior.  It is not disclosed by Sony.  And in fact, Sony specifically says that's not being done, yet it's been found in packet capture traces.  And Sony's saying, well, but if we're doing it, then we're not keeping any of the information.



LEO:  We're not doing it, but if we were to do it, we wouldn't keep it.  How can you trust a company that does that?  That's terrible.



STEVE:  Oh, it's so bad.



LEO:  All right.  So this isn't the primary topic of our show today, but we did want to kind of update you all on that.  And so what should we do?  I still am kind of baffled about all that.



STEVE:  Well, I think it's a function of how concerned individual users are.  You know, our goal here with these podcasts is not to tell people what they have to do ever, but to say, look, here's the truth about what's going on.  You decide for yourself how concerned you are.  As long as somebody knows that this content-enhanced Sony CD technology is installing technology on their system which does allow known Trojans to hide themselves, well, okay, if that's what they want, I have no problem with that, as long as they know.



LEO:  Right, right.



STEVE:  So, you know, we do know that you can go to Sony, you can submit your email address to them to get a link for a remover which will remove this from your system.  So you've got to go through some...



LEO:  You can't get it any other way?  You can't...



STEVE:  ...in order to get this removed.



LEO:  You can't just go to XPC Aurora and download it?  You have to...



STEVE:  I guess - I think you can do that, too.  And get this removed from your system.  Then, if you ever make the mistake of installing one of these Sony audio CDs into your computer, as you said last week, Leo, hold down the Shift key.



LEO:  Right.



STEVE:  Or, if you're a more security-concerned user, you might have already disabled the CD autorun feature in your system, which otherwise causes this thing to present you with a EULA.  If you ever see the End User License Agreement because you forgot to hold down the CD, decline the installation and, you know, play the CD normally, or hold down Shift when you put it in to prevent this thing from being reinstalled.



LEO:  Right.  Okay.  It's too bad.  And I hope, you know, there are lawsuits, class-action lawsuits.  I suppose some aggressive district attorney in some state or country might actually go after them for...



STEVE:  I think there is some governmental action I heard in Ireland somewhere.  And there's an ambulance-chasing class-action-happy law firm in San Francisco that's filed against Hewlett-Packard and Toshiba and everybody you can imagine.  And they're, you know, rolling up their sleeves to go after Sony now.



LEO:  Okay.  So, you know, and I have to say I'm actually pretty disappointed with Sony's response to this.  They have minimized consistently.  They've lied, obviously.  Well, it sounds like they've lied anyway about the phoning home issue.  And they're really not taking responsibility in a way that I would hope they would.



STEVE:  Well, it's certainly been a good object lesson for other people...



LEO:  Yes.



STEVE:  ...who will hopefully not follow in Sony's footsteps.



LEO:  Yes.



STEVE:  And, you know, I don't think we've seen the end of this.  I'm going to take a look at the CD myself.  I may have one suggestion next week, in next week's podcast, which you and I will be doing from Toronto again.



LEO:  That's right, yeah.



STEVE:  Otherwise, I think this issue is behind us.



LEO:  All right.



STEVE:  Anybody who's interested, by the way, can just put "Sony rootkit" into Google and stand back.



LEO:  You'll find plenty about it.



STEVE:  Yep.



LEO:  Well, yeah.  And it was kind of timely because we had just talked about rootkits.  So I'm glad we had talked about them because then, lo and behold, it became an issue, so.  But we had also started a conversation about protecting yourself on a wireless network, and that's a very important conversation day in, day out, as well.  So let's get back to that.  When last we spoke, we pretty much debunked the notion that MAC address filtering had any impact on security.  SSID hiding, useless.  WEP encryption broken and next to useless.  It sounds like the best way to do this is WPA.



STEVE:  Yes.



LEO:  In fact, the only real way to secure a wireless network is with WPA.



STEVE:  Yes.  Just to clarify the issue of SSID and MAC filtering, because I got a lot of mail from people after I said, you know, it was not useful for security, complaining about my position on that.  So...



LEO:  Wait a minute.  Wait.  How could they complain about your position on it?  What you were talking about is factual.



STEVE:  Well, yeah, but...



LEO:  Do they dispute that at all?



STEVE:  Well, I guess maybe the problem is what I mean by security.  MAC address filtering and SSID hiding, and also changing the SSID from the default, which typically is Linksys or D-Link or Netgear or whatever, those are useful for preventing inadvertent use of your access point by a neighbor who just has, you know, not implemented any security themselves.  Many people were of the feeling like, hey, you know, encrypting my home network is a pain because I have...



LEO:  More of a pain than MAC address filtering?  No, that doesn't make any sense.  In MAC address filtering you've got the MAC address of each device you have to enter in.  You enter in the password once in WPA encryption, and that's it.



STEVE:  Well, but, for example, if, you know, what I'm citing from people is they've got friends who come over with a wireless laptop who want to use their access point.



LEO:  Yeah?



STEVE:  So I guess, you know, somebody who's into this is able to add their MAC address of their wireless NIC on their laptop to their permissions list on their access point.  They know how to do that flexibly and so forth.  They don't have to modify their friend's laptop at all.



LEO:  Just give your friend the password, and he can log in.



STEVE:  I know.  I know.



LEO:  It doesn't - it's not logical.  These people are not being logical.  You either...



STEVE:  No.  What I want to clarify is that...



LEO:  All right.



STEVE:  ...the use of MAC address filtering is not secure, nor is SSID hiding or changing your SSID from the default, because both of those are easily obtainable just by sniffing the air.



LEO:  Right.



STEVE:  However, they are useful to prevent inadvertent use by a neighbor of your access point.  So...



LEO:  I have an analogy for this, Steve.



STEVE:  Okay.



LEO:  Let's say you don't want to lock your door because you want your kids to come in and out of your house freely.  So you don't lock your door.  You have no security.  But just to kind of discourage burglars, you put a big sign out front that says you have an alarm system.  Now, in fact, you don't have an alarm system, and the door isn't locked.  But you've put a sign up that says you do.  That's that kind of security.  I think it's not particularly logical.  If you ask me, give your kids a key and lock the door.



STEVE:  Well, again, it's not secure.  It prevents...



LEO:  It's pretending to be secure.



STEVE:  Well, maybe we need another word.  I mean, it's very weak authentication is what it is.  And authentication is different from security.



LEO:  Okay.



STEVE:  It's not authentication of your wireless devices that cannot be broken, which is to say even that can be breached.  But it's weak authentication, which is better than none if you want to prevent your neighbors from inadvertently using your system.  But it should never be confused with security, and that's what we're going to talk about with WPA.



LEO:  So let's say, how to protect your system for real, not by putting a sign up that says "it's secure, really..."



STEVE:  Right.



LEO:  ...but actually securing it.  How do you do that?



STEVE:  As we talked about when we talked about how badly broken the whole WEP original legacy encryption for WiFi was, I was talking about all the different ways that it could be compromised, to the point where, you know, there are now - there's, like, competing hacker tools that run on Linux platforms, that allow people to sniff your traffic, induce your access point to spill keys at a much faster rate than it normally would, that allows them to be analyzed in order to crack your key.  So WEP encryption, again, it's better than no encryption at all.  It does provide a much better barrier than leaving your system wide open or even protected by MAC address filtering or SSID hiding, but it can be cracked.



The reason I make this point is that WPA, even the weakest form of WPA encryption, if it's done properly, is absolutely uncrackable as long as no one gets your key.  The WEP is so badly broken that, when they thought, uh-oh, okay, let's really fix WiFi security seriously this time, they got heavy-duty security experts involved, and they created a next-generation encryption technology called WPA.  It has a number of different ways it can work.  And unfortunately it's an acronym soup that gets very confusing very quickly.  But specifically, WPA, sort of all an end-user needs to really appreciate is that, if you use a really good passphrase - and we've talked about passwords and passphrases before - a really good passphrase, you are virtually uncrackable.  Now, there's TKIP, which is a Temporal Key Integrity Protocol, which basically changes the keys often enough that existing encryption, that is, the RC4 encryption that was in the early WiFi can now be used safely.  There is more industrial-strength WPA, also called 802.11i, also called WPA2...



LEO:  And sometimes I've seen it as Enterprise WPA, as well.



STEVE:  Exactly.  Well, and that's even...



LEO:  Is that the same thing?



STEVE:  ...a little bit different.



LEO:  Oh, okay.



STEVE:  Because that's why this is all so confusing.  WPA2 uses AES encryption, which is the new NIST encryption standard.  So it doesn't use the RC4 encryption.  Some people think, oh, well, that's better.  The fact is, RC4 encryption is an extremely strong cipher, absolutely strong enough, as long as it's used correctly; and WPA technology uses it correctly.  The reason we're still using RC4 is that there's a very good chance that older technology systems can be upgraded with - older routers can be upgraded to WPA security, even though they've got older hardware.  The problem with AES encryption, which is this next stronger level, is that it's much more hardware and processor intensive, and so only newer hardware that was designed with this technology from scratch will probably be able to run it.



LEO:  So give me a shopping list, in order, from least secure to most secure.  And I presume you would choose the most secure you had as an option; right?



STEVE:  Well, maybe.  But, you know, from all the feedback we've received from users, people are very sensitive to any sort of inconvenience.  Well, we know that inconvenience and security are always fighting each other.  It's like...



LEO:  Right.  I have to say, though, my experience with WPA is it's much less inconvenient than WEP was.  It's a...



STEVE:  Well, okay.



LEO:  It's a simple passphrase.  You enter it once, and most implementations you don't have to enter it again, and...



STEVE:  Well, that's true, except get a load of this.  It turns out that passphrases are much less secure than they seem.



LEO:  Oh.  Oh.



STEVE:  Typical passphrases are, you know, per character of a passphrase, due to the fact that case is not changing randomly, that is, uppercase and lowercase, that passphrases are normally not highly mixed with letters, special symbols, and alphabetic, and that there's generally a lack of randomness in a passphrase, the typical strength of a passphrase is 2.5 bits of security per character.



LEO:  Compared to a random string?



STEVE:  Well, compared to a byte, which is 8 bits.  So we're used to thinking in terms of a character as being of 8 bits' worth of strength.



LEO:  Right.



STEVE:  So for example...



LEO:  So it's less than a third as - it's a third as strong.



STEVE:  Right.  So, for example, if you had a 20-character passphrase, it turns out that's only good for 50 bits of encryption.



LEO:  Again, because there's some organization.  The best password or passphrase is totally random.



STEVE:  Well, exactly.  So what this means is that there is an attack which WPA, well, which pre-shared key WPA can be subjected to.  And you're right.  We have to talk a little bit about what this means.  The easiest to use, most practical and workable encryption is called PSK, Pre-Shared Key, WPA.  And that's what you've been talking about, Leo, where you simply make up a really good passphrase once.  You assign that to your access point, to any wireless equipment you have in your home, and you're done.



LEO:  It's very easy.



STEVE:  Now, the enterprise...



LEO:  Now I'm worried it's not secure.



STEVE:  Right.  The enterprise stuff adds another level.  It uses a technology typically known as "radius technology," where there's another server somewhere that authenticates the user and dynamically creates keys for them so that each user has a separate key sort of assigned on the fly.  One consequence of normal pre-shared key WPA, this PSK WPA, is that all devices in your environment will be using that single pre-shared key.  So they're able to cross-decrypt each other's traffic if they wanted to.



LEO:  Ah, I see.



STEVE:  Meaning that, in a corporate environment, if you had a bad employee...



LEO:  Right.



STEVE:  ...and the whole corporate access point was using the same pre-shared key, employees would be able to spy on each other's traffic.



LEO:  Right.



STEVE:  Now, in a residential environment, we know that's not going to be a problem.



LEO:  So this is where you have to kind of be aware of what your needs are and choose appropriately.



STEVE:  Right.



LEO:  So in a business you should probably not use PSK, but in a home environment PSK would be acceptable.



STEVE:  Well, and in a business environment you're going to probably be spending more money or have a bigger budget; or, you know, in a serious corporate environment you've got, you know, a whole IT staff that are going to be doing this.



LEO:  Well, but also in a corporate environment you still have the advantage of you enter it once and your system remembers the passphrase; right?  I mean, you don't have to re-enter it every time you log onto the base station, do you?



STEVE:  Oh, absolutely.  In a corporate environment, with a radius-based server and dynamic key assignment, the user is authenticated...



LEO:  Each time.



STEVE:  ...against this major - this main central server, and then keys are dynamically assigned to the access point and the user on the fly.  So it's not burdensome in any way.



LEO:  Give us, if you can, before we go much farther, I'd just like to understand all the flavors...



STEVE:  Okay.



LEO:  ...all the players involved.  And then, if you would, can you talk about the pros and cons of each?



STEVE:  Yes.  Okay.  So with WPA we have either a static, pre-shared key; or, in corporate environments, keys which are being assigned by a centralized server where the users authenticate themselves with their own password and credentials, then the server creates the keys used for their connection.  No users at home or even in a small office environment are going to see that or be involved with it; but I wanted just to say that, you know, it exists, and it's there, and it's super high-grade security.



LEO:  And the purpose of that is to keep people from snooping on each other within the network.



STEVE:  Correct.  Also, if you had an ex-employee...



LEO:  Right.



STEVE:  ...who left and had the knowledge of what that pre-shared key, a single global pre-shared key was, that would create a vulnerability also.



LEO:  Right.



STEVE:  So in a corporate environment, this WPA using a central server for, like, key distribution solves cross-user snooping and the problem of keys not expiring from people being fired or leaving the company and so forth.



LEO:  Got it.  Okay, that makes sense.



STEVE:  So in a home environment, everyone is going to be using a single pre-shared key, which is completely safe as long as the passphrase that generates the key is safe.  And that's how we'll wrap up our dialogue here in a few minutes.



LEO:  Okay.



STEVE:  But first I'll say that, so, we have the issue of a single key or dynamically assigned keys.  Everybody in the home is going to be using a single pre-shared key.  Then another aspect of WPA is which encryption technology is being used.  Older hardware, which is not as strong, will tend to be using the RC4 encryption, which has been made safe by changing its keys all the time using something called TKIP, the Temporal Key Integrity Protocol.  TKIP makes RC4 safe where it wasn't safe before in WEP legacy-style encryption.  Alternatively...



LEO:  Okay.



STEVE:  ...newer hardware that is stronger might be capable of using a different cryptography technology called AES.  So, for example, my new Belkin router does offer me AES encryption.  So if XP, if the XP client that I was using also supported AES, I might choose to use it.  It is more processor-intensive.  Technically it will be putting more of a load on my computer.  I haven't chosen to use it because TKIP is absolutely safe enough.  It is a more efficient technology and protocol.  And if someone came over with a slower laptop who I wanted to briefly allow to join my network, now TKIP is for sure what they're going to be able to use within this WPA umbrella.



LEO:  Okay.



STEVE:  So that really wraps up the choices.



LEO:  And I guess the key is you've got to kind of know what your security needs are, and you can choose.  But for most home users, any form of WPA would be good enough.  Yes?



STEVE:  Yes.  Exactly.  So the lowest common denominator will be WPA with a pre-shared key using TKIP technology encryption, which drives RC4.  Like I said, it's an acronym gumbo.



LEO:  Take notes, kids.



STEVE:  Okay, so...



LEO:  Yes.



STEVE:  The last thing that is important, and this is critical, is passphrase quality.  The reason it's critical is WPA is subject to what's called an "offline attack," meaning that someone could sniff your traffic and only needs a little bit of traffic to sniff.  They don't need a lot.  They then take that home to a big computer and run an offline cracking utility, which basically it does a brute force, or dictionary, attack against your passphrase.  So because it's possible to do this, to put as much time or energy as necessary, you know, since you're bothering to do WPA anyway, you know, it absolutely makes sense to choose a good passphrase.  And what that means is somehow come up with just a jumble of arbitrary special characters.  You're able to, with WPA passphrases, you can use anything printable, you know, asterisks, dollar signs, you can look like a comic book swearing person - upper, lowercase, numbers, you name it.  And use the full length.  A passphrase can be 63 characters.  And that's what I'm saying.  This is not somewhere where you want to type in a sentence that you like to use.  That can get cracked offline.  You want just a nightmare jumble of junk.  And then you just use copy and pasting in order to paste the same thing into each of your machines at access point.  And when a friend does come over, you paste this jumble in, they can't memorize it.



LEO:  Right.



STEVE:  So, you know, before they leave, you delete that from their wireless adapter, and it's safe just by obscurity.  There's no way anyone is going to - even you are going to be able to memorize this 63-character hodgepodge of just static.



LEO:  Now, let me ask another question.  And this, I think, is really where the criticism comes from on what we were talking about last time with MAC address filtering and so forth.  People say, how real is this threat, anyway?  Aren't we kind of spreading a lot of fear unnecessarily?  How many people are getting hacked?



STEVE:  I don't know how to respond to that because, again, our goal is just to explain the technology.  So it's important for people to know that WPA is subject to offline cracking.  So that if they were in a situation where they thought they were secure using a few English words strung together as their passphrase, maybe it's useful for them to know how that can be broken, and that it really can be broken.



LEO:  Right.



STEVE:  That, you know, if I were in their facility, and I wanted access to their system, I could get it, even though they've used WPA.



LEO:  And then you can decide, folks, whether you really want to worry about this or not.  I mean, that's - I guess that makes sense.



STEVE:  Yeah.  I think that's...



LEO:  You need the information.



STEVE:  That's our, you know, that's our position.  I know from the people who write to us, Leo, that there are people who do think we're going overboard.  I mean, you can imagine, I got a lot of mail when we were talking about listening to keyboard clicking noises.



LEO:  Well, we know that that's silly.



STEVE:  But it's possible.



LEO:  We just want to let you know, I mean, we thought - that was a case of, well, I think it's interesting.  I don't think we ever implied that somebody was going to do that to you.



STEVE:  I'm not worried about that.



LEO:  On the other hand...



STEVE:  Believe me, I do have an extremely strong WPA passphrase that I can't remember.  It's in a file on my computer.  And when I need to set up a new device, I copy and paste it into the device.  There's no way I could even type it again.  But it's absolutely never going to get cracked.  The reason is that passphrase ends up getting hashed 4,096 times into a 256-bit master key.  256 bits is way long for a master key.  So my point is, while you're doing WPA security, if it's okay with your lifestyle to have a key that you can't remember, but because you can't remember it, that demonstrates how strong it is, then take the time to do it once, and you never, never need to worry about it again.



LEO:  So then our recommendations, if I can summarize, are use - certainly use WPA.  If you're - let's, maybe, well, I have to put that little codicil at the beginning.  If you are concerned about WiFi security, use WPA because it works.  Use a completely random password of 64 characters.  That's the maximum?



STEVE:  Actually 63.



LEO:  63.  And that's the most you can use.  And randomize them.  And don't use a phrase, even though that's easy to remember.  But since you're just cutting and pasting, you don't need to remember it.



STEVE:  And it only has to be done once.



LEO:  And you don't have to worry about Temporal Key, TKIP, because that's really more for a business situation where you want to provide security between people who are on the same network, or maybe protect yourself against former disgruntled employees.  In a home environment, that's probably not necessary.



STEVE:  There actually is some firmware that can be downloaded into the Linksys, that WRT54G, you know, that nice little router that a lot of people...



LEO:  Everybody has, yes.



STEVE:  ...that are using and running Linux, that does have, like, a little mini radius server technology in it, if somebody really wanted to get into this in a home environment.



LEO:  You could implement Temporal Key.



STEVE:  Not a typical application.



LEO:  Okay.  And if you don't use WPA2, you don't worry about that.



STEVE:  Nope, not at all.



LEO:  Simple WPA is fine.  All right.  Okay.  And again, folks, if you want to put a sign on your front lawn that says "This house protected by guard dogs," and keep your door unlocked, be our guest.  We're not telling you not to.  We just want you to know what the risks are when you do it.  Right?



STEVE:  Or how about a little sign in the window that says, "Using strong WPA with a passphrase you will never figure out."



LEO:  "So go away."  And then you can just leave it wide open because who cares?  All right, Steve.  Hey, it's always good to talk to you.  And I think that this was important.  And we apologize to those folks who wanted to hear more of the wireless encryption and were less worried about the Sony rootkit for a little interruption, our little intermezzo last week.  But we did think that was important, too.



STEVE:  Well, yes.  People really wanted guidelines for how to really lock down their security.  I mean, I'm responding to the mail that I get.



LEO:  Yeah.



STEVE:  People wanted this, so that's it.  That's the story.  Next week, unless something happens, we're going to finally talk about VPN technology...



LEO:  Okay.



STEVE:  ...to be safe no matter where you are using wireless.



LEO:  Right.  And we will come to you from Toronto next week, of course, via podcast as always.  For more information, visit our show notes at GRC.com/securitynow.htm.  You'll also find two versions of Security Now! there, the normal 64KB version and a 16KB version for those of you with slower download speeds or less file space, as well as transcripts.  And I think it's great, Steve, you've got them in text and PDF form so people can read what we say and understand it. Sometimes it helps to read it in addition to listening to it.



STEVE:  And there's one thing I meant to say that I forgot to say, but it's very important.  WPA may not be available on your platform.



LEO:  Oh, yes.



STEVE:  It's only officially available in XP.  There is a free WPA client software that runs on all versions of Windows - 95, 98, and on - that used to be from a company called Wireless Security Corp., that apparently McAfee recently acquired.  But if you put "free WPA client" into Google, it'll take you there.  And I'll have a link to that on the Security Now! page on GRC.  And also, Leo, I'll send it to you for the show notes.



LEO:  Great.



STEVE:  Because it will allow people who have a WPA-capable router, but who are running OSes that do not have a WPA client to, for free, add WPA technology to their system.  And that's very important.



LEO:  That's nice.  And as we said when we talked about WEP, if all you have is WEP, WEP is better than nothing.  You know, use that.  But just understand the risks that you're running.



STEVE:  Exactly.



LEO:  And, you know, next week we'll talk about using VPN.  And even if you're using WEP, VPN can be very handy in securing your system.



Steve Gibson, thanks for joining us.  Our hearty, deepest thanks to the folks at the AOL Radio Podcast Channel who not only broadcast this podcast, but give us the bandwidth so that you can all download it easily and freely at AOLmusic.com.  I'm Leo Laporte.  We'll see you next time on Security Now!.



Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#14

DATE:		November 17, 2005

TITLE:		Virtual Private Networks (VPN): Theory 

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-014.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I first follow-up on the past two episodes, discussing new developments in the continuing Sony Rootkit DRM drama, and some confusion over the crackability of WPA passphrases. Then, in this first of our two-part series on VPNs, we discuss the theory of VPN connections and tunnels, explaining how they work and why they represent such a terrific solution for anyone on the go.



LEO LAPORTE:  This is Security Now! Episode 14 for November 16, 2005:  VPNs.  And Steve Gibson and I are here in the dark Call for Help studio.



STEVE GIBSON:  A quiet studio.



LEO:  They're on a lunch break.



STEVE:  Yeah, perfect.



LEO:  Everybody's run away to get their wraps.  But we're going to talk about - actually, let's start by talking about issues that came up from our last episode.



STEVE:  Yeah, there's been some additional news over on the Sony front.



LEO:  Okay.



STEVE:  Sony has now backed away officially from offering copy-protected DRM-based CDs.  All of this rootkit nightmare that they've stumbled into has caused so much trouble that they've said, okay, we're going to remove...



LEO:  We give up.



STEVE:  Exactly.  We give up.  We're going to remove this from our stuff and, apparently, even recall existing inventory that's out in the retail channel.  I mean, it's been a huge problem.



LEO:  I did notice that they said "remove temporarily."  So I think they're reserving the right to put copy protection in, but just not that copy protection.



STEVE:  One of the nicest things I read somewhere - and I can't remember now where it was, it was in the last week - somebody was interviewed and said Sony needs to understand that, while it is their intellectual property, it's their copyrighted material, it's not their computer.



LEO:  Right.



STEVE:  It's the user's computer.



LEO:  And I'll be honest, from reading the comments from Sony executives, I don't think they get that yet.



STEVE:  No.



LEO:  They still believe that they, in pursuit of protecting their intellectual property rights to that music, can modify your system.  And I think that that's - they're going to try some other way of doing it.



STEVE:  Well, and that's of course the good thing about this as a precedent-setting event, is that hopefully this is going to demonstrate to people where the boundaries are for DRM, what you can and you cannot do.  And there was also a report that this is apparently installed in as many as 500,000 machines.



LEO:  One expert said that, yeah.



STEVE:  Are now carrying this technology.



LEO:  And those machines in all likelihood are never going to be disinfected.  It's too difficult to do, and their users probably don't even know they're infected.



STEVE:  I was going to say, yes.  We're certainly reaching with our podcast, you know, an upper-end, technically competent, you know, really aware audience.  Most people who just stick the audio CD - I mean, I don't play audio CDs in my computer...



LEO:  Right.



STEVE:  ...because, you know, it's just not something I've ever done.  It just sort of seems wrong to me.



LEO:  But what I do is I rip them.  I do put them in there to copy.



STEVE:  Absolutely, to move them to your players.



LEO:  Yeah.  And that is, you know, the key there is not to play it.  You press the Shift key not to run the autorun.  But I have to point out something.  Now, I don't - I haven't verified this, and we're going to get a disk, and you're going to verify this.



STEVE:  Yup.



LEO:  Somebody said that, even if you say no to the EULA, it's already too late; they've already installed the software.



STEVE:  Oh.



LEO:  They haven't activated it.



STEVE:  Ah, interesting.



LEO:  But it is on your system already.



STEVE:  Wow.



LEO:  So it's not running.  The EULA is required before they say, okay, autorun.



STEVE:  Right.



LEO:  The EULA is what puts it into the registry or whatever so that it starts every time you boot your machine.  But even before the EULA, the EULA runs as a consequence of having installed the software.  So I haven't verified that.  But if that's the case, I mean, it's just a mess.



STEVE:  Yeah.



LEO:  It's just a nasty mess.  Okay.  So that's the Sony rootkit.  Let's talk a little bit about WPA because that's what we talked about last week.



STEVE:  Right.  It's interesting.  I got one comment back from someone who had a point that I wanted to bring up.  And he said, hey, Steve, I took offense or objection or exception to you saying that WPA was completely uncrackable.  He said there are WPA cracking tools that are already out.



LEO:  Yes.



STEVE:  And I wrote back because he gave me an email address.  And I said, yeah, you're right, except that those are only useful if people have weak WPA passwords.  So WPA with a really, really random gibberish passphrase, which is a pain to establish once, but once done, I mean, it is truly uncrackable.  And I did something between the last podcast and now because a couple of people said, hey, you know, how do I get a really good random password?  And they provided some links to some existing online password generators.  The problem is that those password generators aren't running over SSL, and they're not perfectly written.  For example, they don't have an expiration date on the page, which means that an ISP could cache and would cache that page locally, so that somebody else might get the same page that you got and would get your passwords.  And okay, that's not a big problem.  But I thought, okay, GRC should have a password generator.  So I wrote one:  www.GRC.com/ - in your honor, Leo, I made it four letters - p-a-s-s.



LEO:  Easy to remember.



STEVE:  "Pass."  Or...



LEO:  Or "password."



STEVE:  ..."password" or "passwords."  And people can put .htm on the end if they want to; it'll ignore it.  Doesn't matter.  Anyway, what it is, is it's very cool.  If you just go to, you know, HTTP, that is, not "S," just regular - you know, as most people would, they just stick GRC.com/passwords in their browser - it'll see that you're trying to access GRC's password generator over a non-secure connection that anyone could sniff, that is, you know, may be available, open, and certainly that proxies can cache.  It'll say, oh, no no no.  It'll automatically redirect your browser to a secure version, set up an SSL connection, then on the fly use extremely good cryptographic random number generation to create three different passphrases:  a hex 64-character passphrase...



LEO:  63.



STEVE:  Actually 64.  It turns out that WPA has two modes that it can operate in.  And the Windows WPA client accepts either one.



LEO:  Oh, okay.



STEVE:  And that is, you can actually give it - 64 hex characters is exactly 256 bits.  So you can actually give it the actual encryption key.  Or you can use a 63-character passphrase which can be any kind of alphanumeric mumbo jumbo.  So the second version is a 63-character, any printable ASCII, I mean, backslashes, colons, dots, periods.  It looks like your computer is broken...



LEO:  Right.



STEVE:  ...when you see this.  And then, since I wanted to make sort of a general-purpose solution, and I also heard that some hardware might not be compatible, might not be actually on the WPA spec, so that if you put the passphrase into two devices, you would not be able to connect because some hardware wouldn't be handling all the funky characters correctly.



LEO:  Right, right.



STEVE:  So the third version that comes out on my page is only alphanumeric.  It's all alpha, you know, A through Z, upper and lowercase, and 0 through 9, which will be acceptable by anything, and is still sufficiently random that, you know, it's going to be very solid.  So there's now a new little service at GRC.  [Perfect Passwords:  GRC's Ultra High Security Password Generator, at www.GRC.com/pass or www.GRC.com/password or www.GRC.com/passwords.]



LEO:  It's probably beyond the scope of this, but I'm just curious.  We've talked before about random number generators on computers not really being real, they're pseudo-random number generators.



STEVE:  Yes.



LEO:  Because it's hard to do real - it can't do real random.  How did you - what are you using for your random algorithms that you know they're cryptographically strong?



STEVE:  I have a crypto license from RSA Security themselves.  I own what they call the BSAFE cryptography library, which is what I use over on my server side stuff.  I seed it with a whole bunch of stuff, like how many processor cycles the clock has run since it was powered up, and the phase of the moon, and the NIC address, I mean, it's just a whole bunch of stuff, and some other information that only increments and never decrements.  So I'm sure I will never repeat these.  And, you know, my page, my passwords page, is a super-safe place to get passwords.



LEO:  Great.



STEVE:  And a user might not want, you know, even trusting me as much as they would, might not want to take them as-is.  So you could take, like, do it three times.  Oh, the other cool thing is, just refresh the page.  Every time you refresh, a whole new set of, you know, pseudo-random passwords.



LEO:  So do three of them and take a third from each.



STEVE:  Exactly.  Or take it and chop it and swap pieces around or whatever.



LEO:  Right.  As long as it's 63...



STEVE:  But it is super, super random.



LEO:  Would you recommend using 63 characters, just to make sure it's compatible?



STEVE:  Yes.



LEO:  Yeah.



STEVE:  Yeah.  I don't know...



LEO:  That's random enough.



STEVE:  I mean, well, okay.  It is so uncrackable at 63 characters, no one is going to have that in a dictionary.  And it would take them forever to, like, come up with that.



LEO:  And we should point out for the people who are going to be semantic purists, it's not uncrackable.  It's practically uncrackable.



STEVE:  Yes.



LEO:  In any practical sense.



STEVE:  In the lifetime of the universe.



LEO:  Yeah.  Sometime it could get cracked.  And it might happen less than the lifetime of the universe.  But...



STEVE:  By bizarre chance.



LEO:  Right.



STEVE:  Or by, you know, if you just chose random passphrases, you know, one in a gazillion gazillion possibilities.



LEO:  Right.  So mostly uncrackable.



STEVE:  Yeah.  Anyway, it's there if anyone wants to take advantage of it.



LEO:  Not theoretically uncrackable.  All right.  Now, let's get to VPN.  This is something that's used by businesses all the time, Virtual Private Networking.  It allows a telecommuter to log into the business network in a secure fashion.  Can it also be used by the home users?



STEVE:  Well, absolutely, and in fact that's really sort of our focus for the podcast.  This follows perfectly on the three segments that we've done so far on WiFi and, you know, on the security aspects of wireless networking.  Because the idea is, you know, basically we talked about open access points.  We talked about weak WiFi security.  And then finally we talked about WPA, you know, honest-to-God serious industrial-strength security.  So the next thing really to talk about within this context is how can you be secure when you're at Starbucks, or you're, you know, using a public access point...



LEO:  Yeah.



STEVE:  ...where it's not your network, you're not able to secure it, you have no administrative control over it, but you want to use the access point in a secure fashion.



LEO:  More and more access points are offering security of some kind or other.  But still, a lot of them don't.



STEVE:  Well, as a telecommuter, say, like, here I am staying overnight in a hotel in Toronto.



LEO:  Right.



STEVE:  I want to be able to plug my computer, even not WiFi, I want to plug my laptop into the hotel network.



LEO:  You don't know what's happening there.



STEVE:  I have no idea what's going on.  And in fact, it was interesting.  A column in InfoWorld two weeks ago, Roger Grimes was quoting a gal who is a security person, who travels around a lot.  She said half of the hotels - I mean, she's, like, on the road all the time, a real road warrior.  Half of the hotels that she's in are using hubs and not switches.  Meaning she...



LEO:  Means you're all on the same network.



STEVE:  Yes.  Well, they're not only the same network, but they're a shared segment.  So if she turns on Ethereal to do packet capture...



LEO:  Could see anything.



STEVE:  And she does.  She says in a typical evening stay - and there's a password capturer called Cain.



LEO:  Yes.



STEVE:  She uses Cain.  And Cain is smart about various protocols.  It knows what it's seeing in packets that go by.  She typically sees more than a hundred, the number that was quoted in the article was 118 in-the-clear passwords for people staying in the hotel.  I mean, she literally captured their information.



LEO:  Well, I know that's the case because I'm staying in a hotel now that offers free WiFi.  And when I open my iTunes, I can see other people's iTunes libraries.  So we're on the same segment.



STEVE:  Right.  Well, you're WiFi, so you're inherently - you're in the same atmosphere, you know, you're on the same planet as other people.



LEO:  There is a little - they must be doing some firewalling or blocking of some protocols because I can't actually see their music.  But I can see their shared libraries.



STEVE:  Well.  So, you know, you and I...



LEO:  So how do I protect myself?



STEVE:  You and I have talked about using and needing a personal firewall.  I mean, on my laptop...



LEO:  I did do that.



STEVE:  ...I've got XP.



LEO:  Yeah.



STEVE:  And I've got Service Pack 2.



LEO:  I turned on my firewall.



STEVE:  So I've got its firewall on.  So I know I'm okay as far as that goes.  But, you know, I am not going to do anything where I need privacy, which, you know, even...



LEO:  Well, my data's in the clear.



STEVE:  ...checking email.



LEO:  Well, then, that's the problem.



STEVE:  Yes.



LEO:  As soon as I log onto email, my email password and log-in is visible.



STEVE:  Yes.



LEO:  Now, I use SSL for my email, so fortunately I think I'm all right.



STEVE:  Yes, you are, in fact, because SSL creates - and that's a perfect segue into this.  SSL creates a secure connection which is actually not a tunnel.  A tunnel is a different thing.  But it creates a secure transport for everything that happens afterwards.  And that security is negotiated before any user data passes through the connection.



LEO:  Even my password?



STEVE:  Yes.



LEO:  Okay.



STEVE:  Yes.



LEO:  So as soon as I'm in that SSL mode...



STEVE:  Yes.



LEO:  ...on that port, everything is encrypted.



STEVE:  The original negotiation, first a TCP connection is established.  So the SYN packets go back and forth with the TCP connection.  Then a security channel is established within that connection.



LEO:  And then I enter my password.



STEVE:  And then you actually have a user data, an application-level channel between the endpoints.



LEO:  So that's pretty safe.  When I do FTP, and I upload to my website - which I do, in fact, from the hotel fairly frequently - if I'm using plain old FTP...



STEVE:  Yup, ports 21 and 22.



LEO:  ...and that gives them an access to my website.



STEVE:  Well, and anyone could have the file that you were transferring.



LEO:  Well, and also what happens is a lot of times people use the same password for their FTP to upload to the website as their administrator log-in or their SSH log-in.



STEVE:  Right.



LEO:  So that really opens you up to somebody hacking your website.  So that's why I use secure FTP when I transfer.



STEVE:  Right.  Okay.  So...



LEO:  But I'm still open to everything else.



STEVE:  Going to the next...



LEO:  So what do I do?



STEVE:  Yes.  Going to the next level is this thing called a VPN.  Now, the reason it's available to end users - there are a couple ways it's available.  And this week I want to talk about sort of the theory and the technology of a VPN...



LEO:  Okay.



STEVE:  ...and not get into all the detailed specifics.  We're going to do that next week because it's a big topic.  I don't want to try to cram too much in and miss stuff.  So the theory of VPN, Virtual Private Network, the key concept is what's called a "tunnel."  With a tunnel, you establish a connection between endpoints.  And we've talked about how packets are used to move data over the Internet.  One of our future podcasts, we're actually going to talk about how the Internet works and get into that in more detail.  But for now, it's sufficient to know that data travels in packets.  The packets have, like, an address information on the front, the so-called header of the packet, where it's the source IP, the destination IP, the source port, the destination port, and some other stuff.  That is normally visible to anyone who's sniffing the traffic.  And it gives the IP of your machine, where it originated, and the IP of where it's heading.  And also, from looking in the packet - normal Internet packets are not encrypted in any way.  They're just so-called plaintext, as the crypto term is.  So anybody, again, sniffing the traffic can see what it is that's going on and understand what the traffic is.



Now, what the VPN does, which is unique and special, is it essentially encapsulates the packet.  Every packet coming from your computer is encapsulated.  It's wrapped in another packet where your entire packet is the payload, the data of this VPN packet.  So the IP addresses, like where your data is going to, ends up being in the data of this so-called VPN tunnel packet.



LEO:  So even that's not visible.



STEVE:  Even - exactly.



LEO:  Well, how does addressing happen, then?



STEVE:  Well, what happens is, you always establish a VPN, this so-called VPN tunnel, between two points which are both aware of this VPNing.  Normally...



LEO:  So you have a client and a server.



STEVE:  Well, actually you have peers.



LEO:  They're peers, okay.



STEVE:  Yeah.  It's VPN peering.  So, for example, you could take two VPN routers and peer them together, and they would create a tunnel.  Or, most often, telecommuters would have a VPN client in their system, and they'd be dialing into, like, a VPN pool in their corporate environment or - and this is what we're going to talk about in detail next week - their own VPN router at home.  Because you can now get consumer VPN routers which would allow you to dial into your home - to essentially use the Internet to get you to your home router over a secured channel.  Then you have access, not only to any machines you have at home, but to the Internet, just as you would at home, out from that router.



LEO:  So once that tunnel is established, it's hardened.  Nothing inside can be seen, including the addresses on the packet.



STEVE:  Well, that's the key is that - so first we have this notion of wrapping a packet in, like, a super packet, in this encapsulation packet.  There's also seriously strong, industrial-strength encryption going on.  So, and the encryption technology is something our more techie listeners may have heard of called IPSec.  IPSec is an IP standard for endpoint-to-endpoint security that establishes extremely strong, you know, virtually uncrackable encryption.  So every single packet is scrambled when it's put into this VPN packet.



Now, an interesting little tidbit is that Microsoft Service Pack, I think it was the first Service Pack 2, broke VPN because what happens when you wrap a packet is it gets bigger.  And there are limits to the size that packets can be as they travel over the Internet.  So what should happen, what has to happen, is that your packets, your source packets, before being wrapped, need to be made smaller so that, after the VPN wrapper is added, they'll still be within that 1500 bytes.  Microsoft forgot that and ended up breaking VPN, which was a good lesson to all the people in corporate America who are not installing service packs and major patches without really testing them first to make sure that they don't break critical things.  And it was, you know, Microsoft quickly scrambled to fix it.  But they did break it with that security update.



LEO:  Interesting.



STEVE:  So essentially...



LEO:  It's fixed since, but...



STEVE:  Oh, it was immediately fixed.  And it's like, oh, oops, we're sorry.  We won't do that again.



LEO:  When corporate America howls, Microsoft probably jumps a little faster than when you and I howl.



STEVE:  Oh, absolutely.  Yeah, we know how fast they jump when I howl.



LEO:  Not at all.



STEVE:  No, not at all.  So anyway, the idea is that this VPN tunneling establishes a secure channel.  Now, somebody sniffing the traffic is just out of luck.  They could know by looking at the IP address or port number that it's a VPN channel because VPN channels tend to use specific ports.  But they won't even know where you're going...



LEO:  They can't see any addressing.



STEVE:  ...because your entire packet is encrypted.  Even your headers are encrypted.  So they see nothing.  They will see the endpoint of the tunnel, wherever that is, but not know anything about what you're doing because what happens is, at the receiving end, the outer wrapper is removed from this packet.  Then whatever it is inside that just looks like static, looks like noise, it's decrypted back into your original packet, and then it's dropped onto the network.  So what this does is, for example, if you were using a VPN router as your normal home router, you could, from being remotely located somewhere, you could connect to it through any open environment, in the hotel environment that we were talking about before, or WiFi.



LEO:  Right.  The only issue sometimes with VPN is that those ports may not be open.



STEVE:  Ah, yes, and that's where we're going to talk about problems with VPN and things that can go wrong.  Sort of the, you know, here we're talking about the theory.  We're going to talk about the practice of VPN and things that people need to be aware of.  And if you thought that WPA was acronym stew, with RC4 and TKIP and, you know, AES and enterprise blah blah blah, I mean, this VPN stuff is - when you look at one of these VPN clients that you have to, like, add the numbers to and configure, you just glaze over because there's IKE, Internet Key Exchange; there's the IPSec; and, you know, 3DES and AES and so forth.  But there are ways that you can configure all of this for maximum compatibility.  And that's what we're going to talk about next week is how - basically, now everyone knows they want VPN because, I mean, it really is cool.  It allows you, with total confidence, to use your computer anywhere.  I mean, even if you go to a friend's house, use their WiFi and VPN back to your home, then you get out on the Internet from there, and you have access to any machines that you have at home.  It's a real win.



LEO:  Sounds like something everybody should be doing.



STEVE:  It's a great solution.



LEO:  And there are services out there that you can do this through, as well, yeah.



STEVE:  Right.  That's the alternative.  In our earlier show we had some show notes...



LEO:  We mentioned a couple of services, yeah.



STEVE:  ...with three of those.  And Google had a VPN service for a while, which I guess they then shut down.



LEO:  Well, because Google was, at least in San Francisco, offering WiFi.  And they plan to, I think, roll this out nationwide.  They do have a secure WiFi.  And for a while people had figured out how to hack it and use it...



STEVE:  Ah.



LEO:  ...going through the Google servers, the Google VPN servers, even on your own access point.  I don't know if that hole is still there.  It sounds like it's not.  But there are ways you can do this, as you said, for yourself.  There's services you can use...



STEVE:  Well, and if between now and next week's podcast people, like, have to do something immediately, Anonymizer.com, they have a service where they will anonymize just a few things, like web surfing, where you use them as a proxy to, like, filter and anonymize your web search.  And they also have exactly what we're talking about, is a secure tunnel.  And the other cool thing about this...



LEO:  They use SSL, which is a little more transparent.  You don't have to worry about ports because SSL ports are almost always open.



STEVE:  Correct.  And but the other cool thing I want to make sure I don't forget about tunneling is nothing, nothing knows what traffic you're sending through a VPN tunnel.  It's, literally, it is impossible for anything to know.  So people, for example, have problems if they're telecommuting because, like, port 25 for SMTP, for email, might be blocked by the hotel, who doesn't want spam being sent.  The beauty is, through a VPN tunnel, if you can establish the tunnel, once that's done, you could do anything.  Nobody can block any specific behavior you have because it's...



LEO:  Because they can't see it.



STEVE:  It's just static.  It's noise.



LEO:  Yeah, yeah.



STEVE:  It's completely transparent.



LEO:  So Part 2 of VPN next week on implementation, how you can do it.  Can we throw in a little bit of stuff on SSH tunneling, as well?



STEVE:  Oh, yes.



LEO:  Because that's another way to do it.



STEVE:  Yes, for sure, and SSL.



LEO:  Yes.



STEVE:  And I want to say that we've been getting so many questions that we're going to start a practice of doing some Q&A podcasts.



LEO:  Maybe once a month we'll just go through questions and responses...



STEVE:  Well, being the mathematician, I'm thinking any podcast that's divisible by four.



LEO:  Okay.



STEVE:  So here we are...



LEO:  This is 14.



STEVE:  ...on number 14.  We'll do VPN next week.  And so 16 will be...



LEO:  Okay.



STEVE:  ...our first Q&A podcast.  So every...



LEO:  Okay, Mod 4.  Security Now! Mod 4.



STEVE:  Security Now! Mod 4.  And so people who are submitting things on the securitynow.htm page at GRC, believe it or not, I read all of that.  I mean, it's a job reading everyone's submissions because we get a ton of stuff.



LEO:  Lot of useful stuff.



STEVE:  But it's great feedback for me because I know what stuff, you know, we missed, what we need to cover.  And so every fourth episode - you know, again, if something critical happens, like did happen with the Sony DRM stuff, we'll hold off, you know, and cover that, and jigger our schedule around.



LEO:  Right.



STEVE:  But, you know...



LEO:  I like the Mod 4.  We're going to have to stick to that Mod 4.



STEVE:  I like that.  It's good.



LEO:  It's easy to remember.



STEVE:  Yup.



LEO:  It's like leap year.  But let's not get like leap year because then there's always those exceptions.



STEVE:  Every 400 years there's not one.



LEO:  Yeah, and the century mark and all that stuff.  If you want to know more, of course, Steve puts up great show notes at GRC.com/securitynow.htm.  Not only show notes, but there's also a lo-fi 16KB version for people who don't have the bandwidth or the storage; also transcripts in a variety of formats.  So, in fact, the transcripts have proven very popular.



STEVE:  Yeah.



LEO:  Do you want to give credit to the woman who does those for you?  Do you remember her name?



STEVE:  Her first name is Elaine.



LEO:  Thank you, Elaine.



STEVE:  She's spectacular.



LEO:  That's really a nice thing to do.



STEVE:  I mean, she is just super.



LEO:  All right.  Well, we really appreciate it.  It makes it much more accessible for people who can't listen to the podcast or want to share it.



STEVE:  And she's going to have to be transcribing what I just said.  Flattering her.



LEO:  She'll be smiling.



STEVE:  Elaine, you deserve all the praise that I can give you.  You're fantastic.



LEO:  And of course thanks to the folks at the AOL Radio, the podcast channel there, who not only broadcast Security Now! on their podcast channel, but also provide us with the bandwidth.  AOLmusic.com is the URL for that.  We'll be back next week talking about VPN implementation unless something awful happens again.  But that's what we're here for.



STEVE:  Yup.



LEO:  Security Now!.  Steve Gibson, thanks a lot.



STEVE:  Always a pleasure, Leo.



LEO:  Safe trip home.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#15

DATE:		November 23, 2005

TITLE:		VPN Secure Tunneling Solutions

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-015.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I discuss the use of SSL and SSH encrypted tunneling for providing privacy and security whenever an insecure local network is being used - such as at an open WiFi hotspot or when using a hotel's network.  These solutions are not transparent and tend to be configuration intensive.  They also require the use of a "server" of some sort at the user's home or office.  This makes these approaches less suitable for casual users, but offers a solution for the more technically inclined road warriors. 



LEO LAPORTE:  This is Security Now! Episode 15 for Thanksgiving Day, November 24, 2005:  Part 2 of our continuing series on Virtual Private Networks.  Steve Gibson.  And a very good afternoon, and a Happy Thanksgiving to you.



STEVE GIBSON:  Yeah, thank you.



LEO:  We're actually doing this the day before Thanksgiving.  Are you going to do Thanksgiving?  Do you do Thanksgiving?



STEVE:  Oh, yeah.  I've got plans down here with some friends...



LEO:  Great, great.



STEVE:  ...to hang out and relax a little bit.



LEO:  My mom's in town.  We're going to have a big Thanksgiving.  And I'm supposed to be making stuffing right now.  But no.  I'm making a podcast.  Security Now! is more important than stuffing.



Last week we talked about VPNs, Virtual Private Networks.  And we did the theory of VPNs.  In fact, I got a number of emails saying, quick, get to the practice.  What do you do with them?



STEVE:  Yeah.



LEO:  So shall we recap last week?



STEVE:  Yeah.  I also want to mention a little bit on the continuing saga of Sony.  The news is now the Attorney General of Texas has filed suit against Sony.



LEO:  Good.



STEVE:  The EFF, who were considering filing suit - that is, the Electronic Frontier Foundation - have filed suit.



LEO:  Whew.



STEVE:  And there are reportedly six class-action suits also now pending.



LEO:  Wow.  And what I thought very interesting, the Recording Industry Association of America said no, no - that was, you know, Cary Sherman, who's the CEO of the RIAA...



STEVE:  Yeah, defended this.



LEO:  Yeah, defended it.  He said no, no, no, the only issue was there was a security flaw.  But they were just doing copy protection.  No big deal, we plan to keep doing this.  You know, wasn't perfect.  But he said Sony did a good job of making up for it with the recall.  And he said they're doing the right thing.  And, you know, no problem.  What's the problem here?



STEVE:  On TWiT on Sunday I mischaracterized some email that I received from Amazon that I wanted to just fix because I'd read a bunch of BBS postings and various blogs and things after receiving this email.  And I made a comment that they were saying that Amazon sent me email saying that the CD was defective.



LEO:  Yeah.



STEVE:  Actually, when I went back, I thought, oh, I really need to make this clear, that I got email from Amazon because I purchased a CD specifically with the Sony DRM rootkit stuff on it in order to experiment with it myself.  They followed up - and I was very impressed, actually, that Amazon did this.  Their email reads:  "The Sony CDs listed above contain XCP digital rights management DRM software.  Due to security concerns raised about the use of CDs containing the software on PCs, Sony has recalled these CDs and has asked Amazon.com to remove all unsold CDs with XCP software from our store.  Since you purchased this CD from Amazon.com, you may return it to us for a full refund, regardless of whether the CD is opened or unopened.  Just visit..." blah blah blah.  "Thanks for your understanding.  We hope to see you again at Amazon.com."



LEO:  That's actually a very good explanation, I think.



STEVE:  Yeah, it was very clear and very thorough.



LEO:  Yeah.



STEVE:  And, you know, and anybody who isn't in the loop on this would have received email like this if they had purchased one of these CDs and, you know, in that fashion be brought up to speed, at least to some degree.  It's like, oh, wow, you know, now what do I do?



LEO:  Yeah, I think that's fair to both sides and an accurate description of it.  And I hope other retailers maybe kind of take a page from Amazon's book because of course the recall is global.



STEVE:  Well, of course Amazon has the advantage of being able to look at their database of everyone who purchased the CDs in question and send them retroactive email.  You know, if you buy something from Good Guys or Best Buy or Fry's or wherever, there's no way for other retails, you know, physical retailers to get a hold of you.



LEO:  So if you've got one, bring it back.



STEVE:  Yeah.



LEO:  And they're supposed to take it back.



STEVE:  The other thing I wanted to mention before we continue with VPNs is I've gotten a lot of great feedback from people who are loving the little passwords page that I created.  I've been so bogged down with VPN research for this podcast that I haven't been able to finish the page.  Although it's fully functional, I'm adding application notes to the bottom.  So I just wanted to remind people about, if you just put in GRC.com/passwords, you get a page which generates really high-security passwords for whatever purpose you have.  [Perfect Passwords:  GRC's Ultra High Security Password Generator, at www.GRC.com/pass or www.GRC.com/password or www.GRC.com/passwords.]



LEO:  All right.  And that's free and available for anybody who wants to use it.  And it's that 63- or 64-character password that Steve recommends for people who are using WPA on a wireless network.  



STEVE:  Right.  Well, and even, for example, VPN Shared Keys.



LEO:  Oh, you could use it for that, too, sure.



STEVE:  Or, yeah, I mean, just sort of any...



LEO:  Anything you need a 64...



STEVE:  ...any purpose.



LEO:  Or take what you need and leave the other letters, as well.



STEVE:  Well, yeah.  In fact, the passwords are what's called "maximum entropy" passwords, meaning that at any point, the next character is equally probable to be anything within the alphabet, which means that shorter chunks of those passwords are just as good, that is, in terms of like just as random as the whole thing.  So if you've got something that, like, only allows you - for example, I have a router that only accepts a 49-character pre-shared key for VPN setup.  And it's like, okay, you know, you give it as much as it'll take.



LEO:  A number of people sent me notes with other password generators.  There are lots of programs out there.  In fact, OSX includes in its Keychain application a random password generator.  And I'm sure they implemented it well, although the problem is one doesn't know.



STEVE:  Right.



LEO:  And Steve's taken great care to make sure this is really random.



STEVE:  Well, you know, it only displays itself over a secured connection.  And the page is postdated 1999 so that no proxy will hold onto it, thinking that it might still be good, and serve it to somebody else.  So I did what's possible in terms of, you know, preventing anyone else from ever seeing the passwords that the page provides.



LEO:  If you are creating a password in OSX, open the Keychain Access application, press the "+" button, and you'll see next to the password there's a little key.  You can press that, and that gives you the password assistant.  And Steve, you'll like this.  They give you a variety of different choices:  memorable, letters and numbers, numbers only, random, and FIPS 181 compliant.  I presume that that's some sort of high-quality...



STEVE:  Standard.



LEO:  ...standard.



STEVE:  Yeah.



LEO:  And they have a little slider for length.  And they even give you a little bar that shows you the quality.  So I think that this is probably a pretty, I mean, pretty good one.  Although it only goes up to 31 letters, so you'd have to double it up if you want to be 64.  Isn't that strange.



STEVE:  Yes, do it twice.



LEO:  I don't know where they got 31 from, but that's the maximum number.



So last week, Steve, we established that for home use you want to turn on WPA encryption, and that's going to give you a safe connection with your wireless network at home.  And we also raised this specter of this problem:  When you go out, and you're using a hotel or a hotspot that doesn't have any encryption, it is of necessity open, that everything you do is now suddenly back in the open and insecure.  And we talked a little bit about VPNs as one way to secure this.  Let's just go back a little bit and explain the issue and why VPNs are helpful.



STEVE:  Great.  First I'll mention, relative to WPA, there have been a lot of questions, great questions that people have sent, which we'll be addressing in next week's divisible-by-four Security Now! Podcast No. 16, which will be our Q&A episode.



LEO:  Right, right, okay.



STEVE:  Okay.



LEO:  So hold your questions till next week.  Actually, send them, but we'll answer them next week.



STEVE:  Right.



LEO:  But now we're on the road.  Our WPA is not helping us at all.



STEVE:  Yes, exactly.



LEO:  Because I'm using the Holiday Inn, and it's got an open access port.  And now what do I do?



STEVE:  Exactly.  So the idea is, in a network where you have control, we've really covered clearly the issues of securing your own environment.  The question now is, what happens when you're out on the road?  You're in a hotel.  We know from empirical evidence that about half of the hotels use a hub rather than a switch - because hubs are a lot cheaper, and the hotel doesn't care - in order to network all of the rooms.  A hub means that somebody in any room in the hotel running a packet sniffer is going to see all the traffic from all the hotel guests using their broadband solution.



LEO:  So actually I misspoke.  It's not just wireless.  It's wired connections in the hotel, too.



STEVE:  Yes.



LEO:  Every connection.



STEVE:  Yes.  And the problem, of course, is that typical email protocols are in the clear, not only for the log-in, but for the text of the email.  So when you go to a hotel - and, I mean, most people, what they're doing is they're checking their email.  They're wanting to make sure, you know, that they're staying current with any email that they've had come in.  It's over POP or IMAP, you know, port 110, or they're sending out through SMTP on port 25.  Anybody sniffing that will see their username, their log-in, their password, and the contents of their mail.  And of course the same is true if you're in an open WiFi hotspot, where you're taking advantage of somebody's kindness to use their open wireless.  Again, as we know, that means there's no encryption.



LEO:  And lest you think, well, this is only a temporary thing, once they get your email password and log-in, they can get it from now on until you change it.  So, you know, you could go home, and they're still reading your email until you change your password.



STEVE:  And, I mean, some people might think, well, that's not a big deal.  But, I mean, you can be - any cookies that are sent back and forth would allow someone, for example, to impersonate your automatic log-on onto Amazon or eBay.



LEO:  Ooh, good point.



STEVE:  Which is cookie based.



LEO:  Right.



STEVE:  So they don't even need your username and password because, as we know, when you come back to Amazon or back to eBay or one of these sites that uses persistent cookies to identify you, they just say, "Hi there, Steve."  You know, "Click here if you're not Steve."  They do that by using a cookie, which is in the clear, not over a secure connection.  So this allows somebody else to impersonate you.  I guess my point is, this is really a serious security issue, using non-encrypted communications in a public setting where there's one way or another for your traffic to be sniffed, either in a network with a hub or wireless, which is inherently sniffing.



LEO:  Okay.  So we now see the problem.  And we all are exposed to this.  I mean, I do this all the time.  How do I secure my traffic?  What are the options open to me?



STEVE:  Certainly there are some protocols, like we talk about HTTP as opposed to HTTPS.  With HTTPS, the "S" stands for "Secure."  That creates what's called an SSL tunnel.  When you connect to the server, there's a secure negotiation which occurs.  And essentially, any traffic that then travels over that connection is encrypted.  It only carries the normal web traffic.  But, for example, it's the way ecommerce is able to accept your personal credentials, credit card numbers and so forth, without that being a security risk.



LEO:  Okay.  So that's good.



STEVE:  Yeah, exactly.  And, for example, there are some email systems where you're able to use a similar SSL connection for email.  The problem is, those are protocol-specific.  They're only for specific applications that you're running which are sort of preset to operate in a secure fashion.  So in general, if we step back from those examples for a second, what they have in common is this establishment of a secure tunnel.  We started talking about this last week, the idea being that a connection is established between two points.  Then any traffic which you're sending back and forth is encrypted and then placed in a packet which is sent to the other end.  It is expecting this, so it takes the wrapper off of that and then decrypts the traffic in order to get what it was that you originally sent.  Essentially, it means that anybody sniffing your traffic, and even someone who is able to intercept your traffic, the so-called man in the middle, would be thwarted and would not be able to in any way gain access to the content of what you were sending.  I mean, it's the perfect solution for this kind of mobile use of an otherwise insecure environment in a secure fashion.



LEO:  I wish we could do it all the time.



STEVE:  Well, that's really the goal.  And we're going to, over the next few weeks, we're going to talk about strategies and approaches.  And I've sort of set myself a holy grail.  I know where I want to get.  But there's a lot of history here that I want to talk about because there are sort of halfway measures and other solutions that are useful, too.



LEO:  All right.  I don't want to get you out of order here.  So we want to get that holy grail set up at some point.  Can we talk about that down the road, and talk instead now about the easy stuff?



STEVE:  I think we should.  One of the oldest...



LEO:  I want to protect people now, you know?



STEVE:  Yes.



LEO:  Yes.



STEVE:  Or in the meantime, at least make sure people understand what dangers they're facing if they're not protected.



LEO:  Right.



STEVE:  One of the oldest approaches is something called "SSH tunneling."  SSH stands for Secure Shell.  It comes from the UNIX world, as does so much of this technology, the idea being that when you are remotely administering a UNIX machine - in the old days you would use Telnet, which is just - basically it's sort of a terminal window where you're typing text into the window.  As you're typing it, the text is sent to the computer, and it's just like you were sitting in front of it at the console, entering those characters.  And then the things it would display on the screen instead it sends back to you, and it's displayed on your remote screen.



LEO:  Yeah.  Well, I have that capability on my Mac.  I mean, that's something I could set up, SSH tunneling.  Although I've never really got it working exactly.



STEVE:  Well, actually that's Telnet that I was talking about.



LEO:  Oh, Telnet, okay.  Well, Telnet's the insecure SSH.



STEVE:  Exactly.



LEO:  I see, okay.



STEVE:  And it was the lack of security of Telnet...



LEO:  I get it.  I'm sorry, I didn't mean to interrupt you.



STEVE:  It's okay.  It's the lack of security of Telnet which induced people to say, okay, we've got a problem here.  If I log on to my UNIX machine remotely, my root username and password, for example, are going over the 'Net in the clear.



LEO:  Right.



STEVE:  So anybody that was sniffing the traffic would be able to get my log-on credentials as God of that remote machine.  So they said, okay, we need to come up with a solution.  What they came up with is actually an extremely robust solution called Secure Shell, or SSH.  The idea is it's very much like what we just discussed with SSL, the Secure Sockets Layer, which is used, for example, with ecommerce, or anytime you're doing HTTPS over your browser.  The Secure Shell, SSH, creates an endpoint-to-endpoint tunnel.  And at that point your log-in, anything after that's connected is completely encrypted.  It is very, very securely encrypted.



LEO:  Now, I use that from now - I've been using that for the last couple of years to get into my website, once I realized Telnet was insecure.  And that works really well.



STEVE:  Yes.



LEO:  And it's very much like Telnet.  You get a terminal session and everything.



STEVE:  Well, in fact it's identical.  You would not know that you were running over a secure connection in any way.  Basically it's transparent.  And in fact, transparency is one of the keys of this whole notion of tunneling, the idea being that you could be, you know, in a Telnet, in an insecure Telnet session.  You're typing, and you're seeing what you've typed.  The same thing happens with an SSH session except that, unbeknownst to you visibly, everything that you type looks just like noise, completely scrambled, you know, dust going through the Internet to the far end.



LEO:  So that's SSH log-in versus Telnet.  Now, what is SSH tunneling?



STEVE:  Well, now, that's an interesting sort of, I have to say, kluge.  Because that's really what it is.  Now say that somebody wanted a secure connection for traffic which would otherwise not be secure, for example, email.  Normal POP account to port 110 is username and password, and all the contents back and forth of your email is in the clear.  Say that you were traveling around, and you wanted some way to protect that, even though that protocol itself is not secure.  What you can do is you use what's called an "SSH tunnel."  And now we're going to be a little techie here.  It's not something for the faint of heart.  But it is a very well-proven and effective approach.  The idea is, your SSH client running on your computer is able to support what's called "tunneling."  You instruct it to listen for connections on an unused port of your own machine, like maybe port 1111, for example.  I mean, I'm just making that up.  It could be anything from 1 to 65535, you know, any one of the local ports.  So you tell this sort of little server running on your machine to listen for anything connecting on your own local port, 1111; and, when that occurs, to accept the connection and send any traffic after encryption down that SSH connection to a receiving server at the other end, to an SSH server to which you've already connected.



So essentially you've got two connections.  You've got the secure connection across the Internet from your SSH client to a remote SSH server.  And then you've got a second connection that is not secure, but it's just within your own computer.  You tell your email system, rather than connecting to a remote server on port 110, which is the normal POP port, remotely, instead you tell it to connect to your own computer, often called the Local Host, and sometimes referred to with an IP address 127.001.  You tell it to connect to this Local Host port, 1111.  So when you check your email now, your email client connects to a port in your own machine.  It has an insecure dialogue to that port.  But everything that it sends into that port gets encrypted and sent across the Internet.  And everything returning encrypted gets decrypted and returned.  So what this does is essentially it creates a secure connection where there was no protocol security beforehand.



LEO:  That's why it's called a tunnel.  I mean, you're essentially establishing a new highway from your computer to another computer.  And you just have - but the problem with this is you have to tell each client, okay, don't use 110 anymore, you've got to use 101.  And then when the tunnel's not there, 101's not going to work, so you have to reconfigure it.



STEVE:  Yeah.  I mean, it really is - it's something that people who are spinning the propellers on top of their heads are able to get to work.  But exactly as you said, if you were doing this with a laptop, when you were traveling you'd have to establish this SSH connection to an SSH server.  The other thing is, you know, you'd have to have an SSH server somewhere.  If someone were a Linux or a UNIX guy, they could be running an SSH server at home, and then create an opening through a router or their firewall to allow SSH traffic to come in.



LEO:  The good news is that's not so hard.  On Mac, for instance, you can do it very easily with the system preferences, under the sharing preference pane.  You just turn on the SSH server.  The problem is you have to then open up a hole in your - you have to forward the port through your router for that to work.



STEVE:  Right.  And know that essentially...



LEO:  And incoming traffic's going to be a problem.  I don't know how you do incoming traffic at all.



STEVE:  Well, in fact, all the traffic coming from the outside would then be routed through that port.



LEO:  You have to port forward, right.



STEVE:  Now, that's normally port 22.  One of the first things you would do for security is you would want to move that to some other port number because SSH is often attacked because it's a well-known port.



LEO:  And while it is fairly secure, there have been holes in it in the past.  So you can't...



STEVE:  Of course.  And that's the problem that you run into when you're running any server on your own network.



LEO:  Right.  So just for Apple users, just so they know, in the sharing preference pane you turn on Remote Log-in.  And that will turn on an SSH server for you.  And then you'll have to port forward to make it work.  But by default it uses port 22, so I guess that may be not the best advice anyway.



STEVE:  So, yes.  You would want to tell the server to run on a different port if you were getting into this that way.



LEO:  Right.



STEVE:  But returning to the point you made, when you're out roaming around, and you've established this SSH tunnel, and you've got this SSH tunneling server on your roaming computer, exactly as you said, you'd have to configure your email client to use a different port than it normally would in order for this SSH server to intercept it.  Not only port, though, but also IP.  You're telling it don't go out to my normal POP server, which is located, you know, somewhere on my ISP.



LEO:  Use Local Host.



STEVE:  Instead, yes, connect to my own machine, this own machine right here, which has a special SSH server, which is essentially redirecting that port traffic down the tunnel.  Furthermore, it would only work, you know, everything we just described solves the problem for one single protocol.  That is, you know, just getting your email from your ISP to your computer.  If you wanted to send email, now you need to do the same thing for, essentially, for SMTP - run another tunnel on another port, tell your email client again to send mail to the Local Host address on this port, and that would need to get intercepted and rerouted similarly.



LEO:  The way people usually do this is with a series of scripts.  The SSH command line is long and abstruse.  But once you've got it working, you just run the script, and it turns them all on.



STEVE:  Well, it would create all of your local port services.



LEO:  Right, reconfigure...



STEVE:  But you'd still then need to reconfigure all your clients.



LEO:  Although I suppose if you just, you know, you always used it, it would be okay.



STEVE:  That's a good point.  If you always ran in that mode, then you would just leave it that way all the time.



LEO:  All the time, yeah.  I've been tempted to do this because I, in fact, do run SSH all the time.  And I have SSH open so I can log into my computer as a terminal.  And I've been tempted to create some tunnels just to see if this works.  But so it's free.  Not easy, but it is free, and it does work.  And it's secure; right?



STEVE:  Yes.  It's extremely secure.  SSH is able to operate with very strong certificates, using public and private key cryptography.  So, I mean, it's as secure as anything can be.  It's a well-thought-out, solid protocol that will definitely allow you to move traffic between two endpoints that nobody can sniff and have access to.



LEO:  So that's SSH tunneling.



STEVE:  That's SSH tunneling.



LEO:  Are there other ways we can do this?



STEVE:  Yes.



LEO:  Okay.  Shall we talk about those, or do you want to save them for later?



STEVE:  Let's talk about SSL solutions.



LEO:  That might be the easiest way to do this.  And you're already doing SSL.



STEVE:  Well, yes.  SSL is - now, that's back to Secure Sockets, much as web browsers that are running over a secure connection are tunneling their HTTP traffic through this secure tunnel.  The real difference with SSL, I think, is that it's got such a strong browser orientation that many solutions are browser based, which hugely simplifies configuration problems.  For example, does GoToMyPC run over an SSL connection?



LEO:  It does.



STEVE:  Yes.



LEO:  As does Anonymizer.  In fact, any solution that is trying to sell itself to consumers is likely to use SSL for the simple reason that that port, 443, is almost always open.



STEVE:  Well, yes, it...



LEO:  You don't have to have any router configuration.



STEVE:  Well, exactly.  Anybody who's going to be using the web needs to be able to switch over to a secure web connection, and that'll be over port 443 and SSL.



LEO:  So it's the same thing you're using when you go to your bank or you buy a book on Amazon or any - that's the same SSL.  It's secure.  It's HTTPS.



STEVE:  Right, Secure Socket Layer.



LEO:  Okay.



STEVE:  Now, the thing that's interesting about this is that many of these solutions will download an application, like a Java applet, which your local computer knows how to run.  And essentially they'll provide the client side for you...



LEO:  Oh.



STEVE:  ...automatically.



LEO:  Now, that's interesting.  Because you already have an SSL client, your browser.  What you need is an SSL server on your home system.



STEVE:  Well, you need a - when you're using some sort of remote system, for example, you go to a library, you log on to GoToMyPC.  What GoToMyPC does is send you an applet which runs on that browser locally to be the client side of the solution.



LEO:  Right.



STEVE:  So...



LEO:  Oh, that's so - let me clarify, then.  I don't need a client to use SSL with my bank.  That's built into the browser.



STEVE:  Well, actually the browser is a simple text client, is sort of the way to think of it.



LEO:  So if I want more capabilities, then I may need to download additional software on the client side.



STEVE:  Or the browser will automatically run Java.



LEO:  Java will do it, yeah, yeah.



STEVE:  Exactly.  So the idea would be that the service would provide you with an applet in Java which any browser knows how to run.



LEO:  So I put this on my home PC.  I log into it with my browser.  I will have to open ports to do that, yes?



STEVE:  Actually, no, you're not putting anything on your home PC.



LEO:  Oh, I'm not.



STEVE:  Your browser logs into the service, and the browser downloads it, just the same way like you download Flash or something.



LEO:  I know what the confusion is.  I'm still going for this holy grail of me running the server.  You're saying I can't run the SSL server.  I have to use a third-party service to do this.



STEVE:  Well, it's a good thing you mentioned that because I found one.



LEO:  Oh.  So normally I would go through somebody like PublicVPN.com or Boingo.  There are a lot of places that do this that basically offer an SSL server that I can use.



STEVE:  Right.



LEO:  But we want to do this cheap or free, so we don't want to pay a monthly fee.  This is that holy grail you're going for.  We would like to do it so we run it on our own home system and surf through our own home connection.



STEVE:  Correct.  Now, certainly there are people for whom GoToMyPC or any...



LEO:  Anonymizer...



STEVE:  Exactly.  Anonymizer, any of these public VPNing services would make sense because they don't even have to have a home.



LEO:  Right.



STEVE:  I mean, they're using it wherever they are, out roaming around.



LEO:  Well, in fact, that's better in some ways.  You don't have to leave a home PC on.  You don't have to make sure your connection's always up, blah blah.  And you may have a slow connection at home.  You may not want to use your home connection.



STEVE:  Correct.



LEO:  Right.



STEVE:  For do-it-yourself people, there's something called SSL-Explorer, which is a very interesting-looking solution.  It's hosted by SourceForge.  If you just put SSL-Explorer into Google, it'll take any of our listeners directly there.



LEO:  I'll put that on the show notes, too.



STEVE:  Great.



LEO:  It's a SourceForge project.



STEVE:  Right.



LEO:  So it's free and open source, okay.



STEVE:  What's interesting about it is that essentially they do what we've been talking about, except that instead of the server end being something that you have to subscribe to, and which inherently means you're paying, you know, I don't know, $10, $15, $20 a month, whatever, for the service, you run the server out of your home.  So the idea is, some machine, whether it's a Linux box or a spare Windows machine or maybe your main Windows machine, it's sitting at home and is the server for you to access remotely.  So when you're out and about, essentially you connect to your home's IP address.  And of course there are now - all the routers are supporting dynamic DNS, which essentially gives you a normal domain name which will track any changes to your home router IP, so you don't have to worry about the IP changing and you being caught by surprise.



LEO:  Oh, I didn't know that.  I've been still recommending DynDNS.org and some of these other sites.  So your new routers do this.



STEVE:  Yes.



LEO:  Oh, I didn't know that.  How...



STEVE:  Well, in fact, the way they do it is with DynDNS.



LEO:  Oh.



STEVE:  But they're DynDNS clients.



LEO:  They run the client on the router instead of on your system.



STEVE:  Exactly.



LEO:  I see.



STEVE:  And so the router has the responsibility for it.  And when it notices that its address has changed, it will contact DynDNS and say, hey, here's the new IP address for this domain.



LEO:  So what's wrong with this?  This sounds like the holy grail right there.  This just sounds like the way to do it.



STEVE:  Well, it's close.  It's not - I'm still not happy because there's another step that I want to go to.



LEO:  Why, Steve?  Why aren't you happy?



STEVE:  Because it does mean that it's - again, it's a little more techie.  You need to have a computer dedicated to this or, as you said, on and running all the time on your home network.



LEO:  Right.



STEVE:  You need to be able to run a client-side Java applet in a browser.  It might be that a library has their browsers locked down, for example, so that you're not able to run applets of any kind on the browser.  Although, you know, again, if it was for your own use, for you to use in a laptop as you were traveling around, then you're going to be in good shape.  The key is that the connections to it are over SSL.  It's extremely easy to configure.  There's good documentation about this SSL-Explorer.  And for somebody who's interested in experimenting with this kind of solution, I think it's, I mean, I've spent the afternoon reading the docs and taking a look at it.  I'm very impressed with what you're able to do.  You're able to access your files remotely.  You're able to run your desktop using the standard remote desktop protocol, which is very efficient.  So you're able to, like, essentially operate your home computer as if you were there, very much like GoToMyPC does.



LEO:  That's cool.  So we would run SSL-Explorer.  It's currently Windows and Linux only, Mac version as soon as the new Java is available for the Mac.  And you can surf the 'Net.  You can do everything you want.  But you have to leave this machine on running this software.



STEVE:  Yes.  And at the client end it's completely browser agnostic.  It just uses Java.  So, for example, you could go to a library, you could use a hotel's Internet service down off the lobby, you could use your own laptop and your own browser.  Essentially, it allows you to access your home network in a completely secure fashion and do all kinds of things - transfer files, map drives, access your regular desktop on the computer.  And it's absolutely free.  So that's really why I like it, as opposed to using some sort of a subscription service.



LEO:  So there you have the easy, or not easy, but there are two ways to do it.  Neither of them is the perfect way.  But you could do it with SSH tunneling.  That's really geeky and hard to set up.  On the other hand, pretty transparent once it's working.  SSL might be a better way to do it.  And if you don't mind paying one of the SSL services like HotSpotVPN.com or PublicVPN.com or GoToMyPC, or Anonymizer might be a good choice.  And if you want to save money and do it yourself, SSL-Explorer.  But none answers Steve's holy grail, the holy grail of computing.  And what is that?



STEVE:  Well, the holy grail - and this is where we're going to spend some time in a couple weeks, so we'll just leave this as a bit of a teaser - the holy grail is no software installed on the client machine for any version of Windows and Linux and probably Mac, although we'll need to see whether Mac supports one of the protocols required.  The idea is you have nothing but a residential VPN router installed in your home.  We've already talked about NAT routers and how great they are for security.  There's an additional feature that is now offered by the same residential routers called VPN.  That is a Virtual Private Network endpoint, the idea being that Windows already has VPN technology.  Windows 2000 and XP has it.  And they have a free download for 98, ME, and NT4.  So the idea would be you use the built-in software in Windows to connect to your VPN router, which means that that's then a secure connection.  And it's all protocols.  It's actually, you know, it'll run through POP and SMTP and web browsing.  Anything you do is running through this Virtual Private Network tunnel to your router at home.  Once there, you have access to your home network, if you've left any machines on.  But even if everything's turned off at home except the router, sitting there glowing in the corner by itself, then you're able to use that router to get out to the Internet.



LEO:  That's the holy grail.  I agree with you.  I like this.  However, it's not that easy.



STEVE:  It's a configuration nightmare.



LEO:  And we're going to hold that discussion for another episode.  Because that alone could take us half an hour.



Next week we'll answer your questions.  If you have questions, go to GRC.com/securitynow.htm.  Or suggestions.  We'll just respond - our viewer mailbag next week; right?



STEVE:  Well, you know, I have hundreds already.



LEO:  So don't send anymore.



STEVE:  I mean, oh.



LEO:  We've got plenty.  But that's what we're going to - barring a major security issue in the news, that's what we're going to do every fourth episode.



STEVE:  Yup.



LEO:  That's what's coming up next in Episode 16.  And then in Episode 17 we will, we hope, be able to explain how to set this holy grail up, this VPN router.  Costs around 100 bucks, easy to set up, and you're good to go.  You're golden.



STEVE:  Many people may already have them.  If not, they could probably upgrade their router's firmware...



LEO:  Really.



STEVE:  ...to get the additional functionality.  Or maybe sell their old one on eBay and buy a new shiny one.  The beauty is, you pay then nobody any money every month.



LEO:  Right, it's yours.  And you run it.  And meanwhile, I'm going to try to get SSH tunneling up, just to show it can be done.



STEVE:  Cool.



LEO:  Maybe I'll have something to - then I've spent nothing to do that.  And we'll see if that works.  Good luck.



All right, Steve.  If people want to know more, they should go to the website.  You'll have full notes here at GRC.com/securitynow.htm.  That's also where you'll find the written transcripts and the 16KB version of the show.  The 64-bit, full-fidelity version is available via podcast, of course, and you can use your favorite podcast client to get Security Now!.  We're on all the different networks and channels and so forth.  Or just go to ThisWeekinTech.com and you can find a direct link.  That goes through AOL.  And we do thank the folks at AOL Radio who put us on their podcast channel and provide the bandwidth for Security Now! at AOLmusic.com.  Thank you, guys.



Before we go, Steve, I just want to mention one thing.  And I know anybody who listens to Security Now! knows enough not to open email attachments.  That' s kind of the fundamental basics.  But just because you will be the go-to person for your friends and family, there is a email scam going around, email purporting to be from the FBI or the CIA or the U.S. Postal Service.  I'll read you the FBI one:  "Dear Sir or Madam:  We've logged your IP address in more than 30 illegal websites.  Important:  Please answer our questions.  This list of questions is attached.  FBI."  And the CIA one says "We can help disinfect."  So if you get an email from the FBI or the CIA with an attachment, don't be dumb enough to run it.  Of course it's a phony.  Both the CIA and the FBI have announcements on their web page saying, we don't do that.  We don't send out emails.  Don't open attachments.  You'll get the SOBER virus.  It's going to send itself out to other people and open your system to trojan access, including probably spam servers.  It'll Zombie your computer.  So you know better, gang, because you listen to Security Now!.  But tell your friends and family, if they get an email from the FBI or the CIA, just delete the email.



STEVE:  Yup.



LEO:  Delete the email.



STEVE:  I did receive one of those, by the way.



LEO:  Did you?



STEVE:  Yeah.



LEO:  We're all getting them.  According to MessageLabs, I think there were - MessageLabs has intercepted over two million of these.  So what that tells me is that people are opening it.



STEVE:  Yup.



LEO:  Which is kind of hard to believe in this day and age that somebody would actually buy that.  But, you know, it's scary, and you go, oh, the FBI, oh.



STEVE:  It's like the reason we still get spam is that it pays.  People will buy things from spam ads.



LEO:  You're right.  If nobody ever bought anything.



STEVE:  Right.



LEO:  All right, Steve.  Thank you very much.  Happy Thanksgiving and have a good Turkey Day.



STEVE:  Thank you, Leo.  Always a pleasure.



LEO:  We'll talk again next week on Security Now!.  Bye bye.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#16

DATE:		December 1, 2005

TITLE:		Listener Feedback Q&A #1

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-016.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I discuss questions asked by listeners of our previous episodes.  We tie up loose ends, discuss a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world "application notes" for any of the security technologies we have previously discussed.



LEO LAPORTE:  This is Security Now! Episode 16 - your questions, Steve's answers.  Steve Gibson is on the line via Google Talk from his...



STEVE GIBSON:  Hey, Leo.



LEO:  ...lair in Irvine.  Hi, Steve.



STEVE:  My fortress of solitude.



LEO:  Every - we decided every Mod 4 podcast we're going to start taking questions and responding to them.  Is that the idea?



STEVE:  Yup.  Yup.



LEO:  Yeah.  And this is Mod 4, Episode 16.



STEVE:  Yup, so episode numbers that are evenly divisible by four will be Q&A.  And it's really nice because lots of people are posting questions to the form at securitynow.htm on my website at GRC.com.  I'm pretty much keeping up.  I mean, I am at the moment up to date.  And I'll sort of see, like, a question that's asked many times in different ways.  And it's like, okay, this is something that, you know, we need to deal with.  And also there are issues that come up that really aren't big enough to be a whole half-hour Security Now! episode, but are, like, it's a real good point.  And so it really helps me.  Also a lot of people are, you know, they have different experiences.  For example, we've talked about GoToMyPC.  A huge number of people have said, hey, what about LogMeIn.com?



LEO:  Right, right.



STEVE:  And so, you know, there's another system that is free for their minimum service, that allows people to access their computers remotely.  So it allows us to, you know, to bring those things to light, too, basically closing the loop of feedback with our listeners.



LEO:  So let's close the loop.  And we start with our first question.  And this, again, it's a composite of a number of questions along these lines.



STEVE:  Exactly.



LEO:  Referring way back to your passwords episode, which, gosh, that was one of our very earliest episodes, wasn't it.



STEVE:  We did, I think, the first couple episodes on passwords.



LEO:  Yeah.



STEVE:  After the Zotob worm.  That was the very first one.



LEO:  Yeah.  And that was a great topic.  The need for using strong passwords that can't be guessed makes sense.  But writing them down and keeping them in my wallet scares me.  What if my wallet fell into the wrong hands?  What should I do?



STEVE:  Ah.  And many people have mentioned that.  It's like, hey, you know, they like the idea.  I mean, they get it that using a password that's complex and has, like, upper and lowercase and just gobbledygook makes total sense to them.  But, and then that means you have to write it down.  Otherwise you're never going to be able to remember it and get it right again.  But what if someone discovered that?



LEO:  Right.



STEVE:  And my idea is that, okay, write down a variation of it.  For example, maybe write it down with the first five letters from the end on the front.  That is, make a simple change to it when it's written down that only you know.  So you have a secret way of turning what you wrote down back into what your real password is.



LEO:  So somebody finding the wallet's not going to have anything.



STEVE:  Exactly.  And even if they tried to use it, you know, it's not going to work.  And they'll go, okay, well, I guess this isn't the right thing.  Or...



LEO:  I do that.  I just shift the capitalization in a certain way that is according to a rule.  And that won't work...



STEVE:  That would be good as long as where you were logging into...



LEO:  Was case sensitive, yeah.



STEVE:  Exactly, was case sensitive.



LEO:  Most places are.



STEVE:  Or maybe just tack on your own secret five characters to the end of everything that's written down.  Anyway, the point is - and people can figure out their own algorithm because we don't want to give it away because otherwise we've lowered the security.  But do something to what you write down in a uniform way that, you know, only you know.  And so you've still got an aspect of it that is secret.



LEO:  And this isn't - by the way, as soon as we finished that podcast, I started changing all my passwords using this portable password policy that you came up with.  And I do it only on the low to medium security sites.  I have to have stronger passwords on my bank and so forth.  But I'll tell you what I - you know, it's not exactly this, but it's like this.  I will take the name of the site.  So if it's Google, without the dotcom, just Google, and then I will intersperse the letters with the last four digits of my Social Security number.



STEVE:  Nice.



LEO:  And that works.  You know, as somebody pointed out in another email, if a couple of webmasters got together and looked at my passwords, they'd be able to figure out how I was doing it.  But first of all, that's unlikely.  And that's why I only use it in lower security issues.



STEVE:  Yeah.  And another point has been brought up, actually, another question that I've had several times that this now occurs to me, is many people wrote in saying, okay, but what about a situation where there's a password policy that forces me to change the password every so often?



LEO:  Yeah.  I hate that.



STEVE:  That breaks the algorithm approach completely.



LEO:  Right.



STEVE:  The only thing I could suggest is maybe put a serial number on the end, you know, 000, 001, 002.  Again, technically you would know, like, what the password was before, if you knew what it was now.  But it would allow you to quickly try a few things to get the one that's correct.  And again, it's a way of mutating an existing password, making a slight change to it.  Still, the bulk of it is completely random and high security.



LEO:  Also you created a password page at GRC.com/passwords that generates, you know, truly random strings for wireless encryption.



STEVE:  Well, and it's just great raw material.  It's raw material for any time someone needs a password, you know, chunk.



LEO:  So people wrote and said, okay, fine, but how should we manage that password?  You know, for instance you have guests who are wanting to log onto your wireless network.  Do you give them, the guests, the password?  How do you do it?  It's so long and difficult to handle.



STEVE:  That's a very good point.  I sort of glibly said in a podcast, oh, just cut and paste, without thinking it through.  Because, you know, somebody who comes to your home isn't yet on your network.  So cut and paste what?



LEO:  Right.



STEVE:  I have a couple thoughts.  One would be, if you have a floppy drive, of course, if people still have diskette drives, you could just use that to move the password over to their machine.  Failing that, USB drives are more and more universally available now that would allow you to get into their machine.  Or, if they could get on the 'Net any way, and then, for example, you email it to them or, like, leave it on Google Mail, for example, and then you briefly log on, download...



LEO:  On their machine, yeah.



STEVE:  On their machine, you know, just in order to get it over to their machine.



LEO:  I think I like the USB Key.  I think that's a great idea.  People more and more are using USB Keys to store stuff like that.  And that's a very good use for it, I think.



STEVE:  And, you know, frankly there's been a lot of issue about - and as we look at these questions, this problem of merging security and lack of security continues to create problems.  So another possibility is, if this person doesn't need security while they're at your house, just shut down your encryption.  Just, you know, with a...



LEO:  Oh, yeah.



STEVE:  ...button on your browser, turn off your encryption...



LEO:  Let them use it, yeah.



STEVE:  ...while they're visiting.  You know, don't you do anything, but...



LEO:  It's just temporary.



STEVE:  ...don't do any online banking with all your neighbors.  But, you know, like, while they're there...



LEO:  Yeah, that's fair.



STEVE:  ...you know, you accommodate them.  And then when they leave, you switch back up to strong encryption.



LEO:  Here's a question that addresses something that we're in the middle of right now.  Is it possible to use a public computer in a hotel, a library, an airport, with total safety?  What are the security and privacy concerns?



STEVE:  Well, now, that's a really good question because that's a little different than sort of the VPN topic that we're going to continue talking about for the next couple episodes.  This is, like, you go to a library and want to do something.  The problem is, even if you logged into Google Mail, for example, you could use a secure connection to Google Mail to prevent your dialogue from being listened to.  But you're using somebody else's hardware and, you know, essentially booted with somebody else's software.  So you don't know there's not a keystroke logger monitoring everything you type at the keyboard prior...



LEO:  Oh.  So even if you had a VPN, they could keep track of that.



STEVE:  Exactly.



LEO:  Oh.



STEVE:  I mean, if you use GoToMyPC, if you do LogMeIn, or like that SSL-Explorer that we talked about that allows...



LEO:  Doesn't matter. 



STEVE:  Yeah.



LEO:  Doesn't matter.  You're still getting your keystrokes logged.



STEVE:  So it is a - and in fact, anecdotally we hear that those computers in public locations tend, you know, like script key guys like to install even like a hardware keystroke logger, just inline in the keyboard.



LEO:  And that's undetectable.  You cannot detect that.



STEVE:  Yeah.  And so they, you know, some kid sticks it in the keyboard, sits back and pretends to be reading a magazine while other people come up and use the computer.  Then they unplug it, take it home, and dump out everything that was typed.



LEO:  Oh.  So what can you do about that?



STEVE:  Don't use public machines.



LEO:  [Laughing]



STEVE:  No, I'm not kidding.  There is no - again, there's just no...



LEO:  Can't be secured.



STEVE:  There's no safe way.  Even if it's not a hardware keystroke logger, it could be something in software that somebody else has deliberately installed to hack the machine.  So, and it's an important lesson, I think, overall, in terms of a security policy, is having known control of the platform that you're using.



LEO:  Hardware control, yeah.



STEVE:  Yeah, it's your laptop, you're carrying it around, you don't loan it to somebody who you don't trust because, you know, in general you tend not to because presumably you've got other stuff on the laptop that is yours.  So maintaining physical control of the computer is definitely part and parcel of being able to be secure using that machine.  So you really need to remember that you can't use somebody else's computer that you have no security oversight on in a secure fashion.  Sure, it's safe to go Google and browse around and not do anything important.  But be very careful, not even logging into Google Mail on a public hotspot machine, because anything could be happening there.



LEO:  Wow.  That's a good warning.  Several times, another questioner asks, you've mentioned that hubs are less secure than switches.  What's the difference between a switch and a hub, and why do hubs allow you to see the entire network?  Are switches one-way devices like NAT routers?



STEVE:  Okay.  That's, again, a question that's come up a number of times.  The idea between a switch and a hub is that, first of all, only with current 10BaseT technology - you remember that there was - I've lost my vocabulary.  Was it 2BaseT?



LEO:  Oh, the old coax, you mean?



STEVE:  Yeah.  With coax you actually had an electrically shared connection.



LEO:  I remember that because, if you unplugged your computer from the network, the whole network would die because it was serial.



STEVE:  It was a nightmare.



LEO:  It was terrible.



STEVE:  But you were actually...



LEO:  Had these T connections everywhere.



STEVE:  You actually had multiple computers on the same physical wire.  Well, the way 10BaseT works is different.  You have a single computer connected to a hub or a router so that each computer is electrically on its own set of wires, which is really important.  Inside the hub, now, inside a hub or a switch is essentially a little mini NIC, a little network interface, just like you have on your computer for every one of its connections.  With a hub, anything that any one of those wires receives is sort of mindlessly sent back out of every other one of the connections.



LEO:  That's what it means not to have any routing.  It's not routed.  Everybody gets a look at every packet, and then the one that's for you, you take.



STEVE:  Well, routing...



LEO:  Kind of; right?



STEVE:  We have to be, yeah, we have to be careful of words because routing is something else.  The right term would be "switching," where the idea would be there's no switching, so that what one port receives, all other ports hear.  And so that's a hub, where you actually - everybody's sort of on - they're not quite on the same wire electrically, but they're all seeing any information that anyone sends.  So the reason this is a problem in a hotel is that you could have a huge hub or a set of hubs where something that one computer on the 12th floor sends to the Internet, literally every other machine in the physical hotel is able to sniff that, and essentially receives that traffic.



LEO:  You know me and physical analogies.  I've got one for you.



STEVE:  Oh, good.



LEO:  That will explain this.  So it's as if you're in an office, a crowded office, and somebody wants to pass a phone message to you.  They can come in the door and shout the message.  You'll get the message, but so will everybody else in the office.



STEVE:  That's perfect.



LEO:  That's a hub.



STEVE:  Yes.



LEO:  If you had a switch, you would be divided up into different rooms in the same office.  There'd be other people in your room.  But the person who comes in and shouts the messages is only heard by those people in your room, that is, that segment on the switch.



STEVE:  Well, actually a switch is even better than that.  It is exactly like someone coming in and whispering just to you.



LEO:  Oh, really.  Oh, I thought a switch divided the network into segments that were still public.



STEVE:  No.



LEO:  Oh, okay.



STEVE:  What happens...



LEO:  So my analogy doesn't work, then.  All right.



STEVE:  Yeah.  I mean, it's sort of tricky because what happens...



LEO:  Because I was going to say a router is like somebody calling you on the phone and saying that message directly to you.



STEVE:  A switch does that, too.



LEO:  A switch does that, too.  Okay.



STEVE:  What happens is a switch learns which MAC address, which physical NIC is on each of its segments.  Now, if you had a master switch, and then it was connected to other switches, and then they were connected to NICs, so you sort of have a hierarchy?  In that case, the switch at the top of the tree would learn, like, maybe that there were 10 NICs that were connected to its first port because that then connects to another switch that learns which NIC is on each one of its ports.



LEO:  Right.



STEVE:  So it is possible for a switch to send multiple traffic down one of its connections that's then further subdivided by another switch or a hub out further away from it.  But essentially, the bottom line, no one listening to traffic on a switch is able to ever hear anything other than what's bound for it.



LEO:  It's the guys coming up and whispering in your ear.



STEVE:  Exactly.



LEO:  Okay.



STEVE:  Just like it's whispering in your ear.  In fact, it's funny that hubs are becoming endangered now.  It's hard to find hubs because switch technology is coming down in price, and it's just better.  So I literally, because I'm in, you know, sort of in the network end of the world, I've purchased a bunch of hubs, just sitting in boxes, before they disappear completely.



LEO:  I have some I can give you, Steve, if you really want some.



STEVE:  Well, because they're so useful for me.  I want to be...



LEO:  Well, in our own...



STEVE:  I want to be able to sniff the traffic on my own network and watch other computers talking to each other.  You cannot do that if you use a switch to connect all your computers together.



LEO:  To understand this really requires an understanding how Ethernet, which is a networking protocol that is being used, works.  It's a broadcast protocol.  Without any special switching, it will just send everything to everybody.



STEVE:  Yeah.  In fact, in one of our earlier...



LEO:  And that's inefficient; but, well, it's actually got some efficiencies and some inefficiencies.



STEVE:  Well, it's inefficient because you start having packet collisions.



LEO:  Right.



STEVE:  The way Ethernet works is that, essentially, anyone can talk on the wire at anytime they want.  If two people talk at the same time, they will collide.  Their packets literally collide and scramble each other's bits on the wire.  But each of them is listening to the wire as they're talking.  So in the old days, when you literally were all on the same wire, or even today if you're on a hub instead of a switch, if two computers on a hub send at exactly the same time, their packets will collide.  But because they're all hearing what everybody else says, they hear their own collision, and they realize, oops, somebody was talking, started transmitting at exactly the same time I did.  So what they do is they back off, they wait a random amount of time and retransmit.  Well, the chances of a second collision are low.  But if it happened, then they would, again, they'd wait a random amount of time and try again.  The point is, this technology, it's called CSMA, Collision Sense Multiple Access.  That's the original brilliant Ethernet technology that Bob Metcalfe invented back in the old days.



LEO:  And that's why people came up with switches, because on very large networks you were getting so many collisions that you wanted to kind of segment your network to make it more efficient, to reduce collisions.



STEVE:  Well, that's exactly right.  If your network gets huge, and you've got a certain number of computers, what's happened is the Ethernet starts to fail because you end up with a much - the rate of collisions starts going up so high that no one is able to get their message through without somebody else stomping on it.



LEO:  Right.



STEVE:  And a switch is a store-and-forward technology.  It receives the packet; it looks at the MAC address to see where it's bound for.  It looks up in a table that tells it which ports the MAC addresses are connected to.  And it resends that packet only out on that one port.  That's that switching behavior.  And that prevents your network from collapsing as it gets really big.



LEO:  All right.  Let's move on because we have a lot of questions.  I want to get to as many as we can.  This is a very interesting one from a Good Samaritan.  He says, there are a number of unsecured Wi-Fi access points in my neighborhood.  Is there any way I can contact them, aside from knocking on doors, and warning them about the security issues that they're facing?



STEVE:  That's an interesting question.  I thought about it when it was asked, when I received it from the web page.  Certainly anything he would do over Wi-Fi would be illegal.  I mean, in the early days of filesharing, there were - remember where we had open filesharing ports?  There were people who would put text files on other people's desktops telling them that their - I never did this, but...



LEO:  This is not nice.



STEVE:  That's not a good idea.  I mean, it's illegal for someone to alter anyone else's computer, even if you have the best of intentions.



LEO:  You mean like Sony?



STEVE:  Yeah, exactly.



LEO:  Okay, let's not - we'll get into that later.



STEVE:  So unfortunately the only thing I could suggest is what this guy suggested, maybe like printing up, you know, Xeroxing some leaflets, some little information pamphlets, and say, hey, I don't know who you are, but my computer can see your network, and it's not secured.  It's wide open.  I'm not touching your network, and I never have.  But you ought to go start listening to Episode 1 of Security Now! with Gibson and Laporte...



LEO:  We wouldn't mind that.



STEVE:  Exactly.



LEO:  Do a little ad for us.



STEVE:  Again, there's no way it is not illegal.  And believe me, you could piss off some knee-jerk neighbor who could have the cops out, and it would be a problem.



LEO:  You don't want to do that, yeah.



STEVE:  Nope.



LEO:  Here's a fellow who's been listening well, I think.  He's using WPA, which is the encryption that you recommend for wireless networking.  He's using the Pre-Shared Key, the PSK version.



STEVE:  Right.



LEO:  And TKIP.  He says he's using a killer key from your passwords page.  But since AES encryption is better than TKIP, which you said still uses the RC4 encryption from WEP, I'd rather use AES.  My vendor doesn't offer it.  What is a boy to do?  Or girl, I'm not sure.



STEVE:  This, again, is sort of a composite question that many people have asked.  They recognize that, okay, they're happy they are no longer using WEP.  But they know there's something more.  They're, like, using WPA instead of WPA2.  They know that there's something more.  Or there's, like...



LEO:  That's good enough, isn't it?



STEVE:  Yes.  And that's my point, is there's nothing wrong with RC4.  This AES...



LEO:  It was how it was implemented that was bad.



STEVE:  Yes.  RC4 is a fantastic cipher, extremely random.  You mix that with your clear text, you get undecipherable crypt text.  There's just no way that anyone is going to be able to crack it.  So I really think that any concern about going beyond basic WPA with a pre-shared key, and especially if you're using one of those gobbledygook 63-character passwords from my passwords page, I mean, you are just nailed down.  You are super secure.  And there's another reason not to go further.  You might be able to get, like, one computer and your access point to hook up.  But the further you push the encryption, the more problems you're going to have with other devices.  Somebody comes over who doesn't support - they may support WPA with a pre-shared key, but not the higher level that you're using.  So WPA with a pre-shared key is so strong, you just really - you can stop there with confidence.



LEO:  If you don't want to bother with proxies or VPNs at a public hotspot because you're just doing email, how secure are the secure features of web mail systems?  He asked about - or this person asked about Google Mail.  But I'm actually curious.  I use FastMail, which is an IMAP service, but it does SSL.  Am I secure?  Is he secure?



STEVE:  Yes.  Yes.  Now, we've got to be a little bit careful when we say "public hotspot."  As long as we mean you use your computer that you have controlled and public connectivity...



LEO:  A public terminal is another problem entirely, as we talked about earlier.



STEVE:  A public terminal, as we discussed before, that's just a big no-no.  There's just no safe way to do that.



LEO:  Okay.  But your password is sent encrypted.  Your entire transaction is encrypted.  And most of these services, I know Google and FastMail do this, you can click a box to say, yeah, I'm on a public network.  Don't, you know, make sure that nothing gets saved and all that stuff.



STEVE:  Yes.  I would say that it is completely safe.  SSL will protect everything you do once it's connected.  So, for example, if you use https://gmail.com to get onto Google Mail, and make sure that it keeps you on a secure connection as you move around the website - I believe it does - then you're safe.  As long as all you do is email that is over that SSL connection from a public hotspot, you have nothing to worry about.



LEO:  And listen next week because we are going more into detail on how to create a VPN that you can use to be secure all the time.



STEVE:  Excruciating detail.



LEO:  Oh, man.  No, let's not get started, because I've been playing with some of the things you're going to suggest.  And "excruciating" might be the right word.



STEVE:  Yeah.



LEO:  Is it possible, one listener asks, to compromise a NAT router or a NAT router modem?  Here's what happened.  Normally ZoneAlarm is silent on his PC.  A few weeks after resetting the NAT router he began to get a couple of ZoneAlarm alerts from real IP addresses.  He reset the NAT router again.  That made it go away for a few weeks.  But it comes back.  Is he being corrupted?  Is he being compromised?



STEVE:  Yeah.  I would bet money - you know how we've talked about the moment you put a NAT router in, your personal firewall goes silent because there's no way unsolicited traffic is able to enter through the NAT router any longer.



LEO:  Any alerts you get will be from outgoing, outbound traffic, not incoming traffic.



STEVE:  It'll be your own applications asking for permission to use the Internet, exactly.  I would bet anything this guy's got Universal Plug and Play enabled on his router.   And that is a big no-no.  Universal Plug and Play is an insecure technology that Microsoft created which allows - basically, it's sort of their zero administration effort.  The idea is they want their MSN Instant Messaging and things just to work.  They don't want to ask users to open ports through their router, to have to do, like, static open ports.  Basically, Universal Plug and Play allows the computer to tell the router to open ports.  And what's worse, it doesn't show in the user interface.  You can't go to your router and see what ports have been administratively opened behind your back.  It's really bad.  And so this sounds like exactly what's happening here is that something in the user's computer - and that's the other problem.  It could be malicious.  It could be a trojan that doesn't want to get cut off from the outside world.  It installs itself.  It uses Universal Plug and Play to bring his router defenses down deliberately so that unsolicited junk is now able to enter through his router.  You absolutely have to disable Universal Plug and Play, and then reboot your router.  Otherwise...



LEO:  And that will be somewhere in the router settings, if you log in or out.



STEVE:  Yeah, it'll always be in the user interface.  And the good news is most of the routers I've seen seem to have it disabled by default...



LEO:  Oh, that's good.



STEVE:  ...because they're recognizing it's a problem.



LEO:  Oh, that's interesting.  That's something new.  Maybe because of you.  I don't know.



STEVE:  Well, I've been pounding on people about it.



LEO:  Good.  What are your feelings, another writer asks, on file and print sharing on a home network if you have a NAT firewall, you know, you're behind a router?  I know that XP has a fit about the security issues when you set sharing up.  It really does.  It warns you several times.



STEVE:  Oh, yeah.



LEO:  But it is a prime reason I have a home network.  I want to be able to use one printer on the network.  All my machines, I want to be able to share files.  He's not alone.  Everybody, I think, wants to do that.



STEVE:  Yup.



LEO:  In addition to being behind the router, the NAT firewall, I have also installed NetBEUI on all my PCs, XP Pro and Home, plus 2003 Server - and that's because filesharing's a little easier over NetBEUI, I'm sure - and have unbound file and print sharing from TCP/IP, so that it is only accessible via NetBEUI.



STEVE:  Oh.



LEO:  Was that a good idea?



STEVE:  This guy, he's...



LEO:  That's clever, isn't it.



STEVE:  Well, he's read my ShieldsUP! pages.  That was what I discovered years ago, was that you did not need TCP to do filesharing.  NetBEUI was Microsoft's original protocol...



LEO:  Used to be called NetBIOS.



STEVE:  Well, actually...



LEO:  Pretty much the same, isn't it?



STEVE:  Yeah.  They're certainly related, although they are different technologies.



LEO:  Oh, okay.



STEVE:  NetBEUI's an actual transport protocol.  What's cool about NetBEUI is it is a non-routable protocol.  It is unable to get away from your local network.  There's no IP address in NetBEUI.  It's all only for a LAN, not for a WAN.  Now, if listeners don't know what we're talking about, this is all about what ShieldsUP!, the original security stuff on my website, is about.  And it shows you how to do this thing called unbinding TCP/IP from file and printer sharing and using NetBEUI instead.  I mean...



LEO:  Isn't he protected, though, anyway?



STEVE:  Yes.



LEO:  Because he's got the router protecting...



STEVE:  I was just going to say, he's a real suspenders-and-belt guy who's got, you know, super level of protection.  So he would be safe using NetBEUI even without a router because...



LEO:  Because port 139 is blocked by the router.



STEVE:  Yes.



LEO:  And nobody's going to be able to make any NetBIOS calls.



STEVE:  Well, and NetBEUI doesn't have ports.  I mean...



LEO:  Oh, it doesn't.  Oh, I get it.  All right, okay.



STEVE:  I mean, it's completely - it's a non-Internet protocol.



LEO:  I see.



STEVE:  And so by...



LEO:  So what is port 139?  That's a NetBIOS - that's a filesharing port, isn't it?



STEVE:  Yeah.  It's NetBIOS over TCP.



LEO:  So that's what we're disabling.



STEVE:  Exactly.  And so by unbinding file and printer sharing from the use of TCP, you're, like, in a whole different networking realm that can't go anywhere.  I mean, he is super safe.



LEO:  Good.  Good job, in other words.  But not necessary as long as you block those ports.  If you get a green light from ShieldsUP!, you're stealthed on port 139 and the filesharing ports.  You don't - that's enough.



STEVE:  If you're behind a NAT router, you're safe anyway.



LEO:  Anyway.



STEVE:  Yup.



LEO:  Okay.



STEVE:  Because NAT protects you.



LEO:  Right.  You've said that SSL connections are not susceptible to man-in-the-middle attacks, but I've read that they are.  I want to believe you, but why do others think that SSL is susceptible to MITM attacks?  And when an SSL or VPN authorizes, what stops someone listening to the packages each way to figure out the keys?  So first let's start with what is a man-in-the-middle attack?



STEVE:  Okay.  In fact...



LEO:  I have no analogy for this one.  You're on your own.  I mean, I could do it, but I'm going to let you do it.



STEVE:  We're going to start the beginning of the New Year talking about the way the Internet works - what's ports, what's IP addresses, what are packets and all that.



LEO:  Oh, good.



STEVE:  Then we're going to talk about crypto because we really need a foundation to understand some of this more advanced stuff.  So it's probably the wrong time for me to answer this because we don't have enough foundation for me to talk about how SSL security works and how man-in-the-middle attacks can be avoided.  I wanted to bring up the question because so many people are asking it.



LEO:  A man-in-the-middle attack is when somebody kind of poses as the receiving or the sending site.



STEVE:  Yes.



LEO:  And intercepts traffic.



STEVE:  Yeah.  The idea is that it's one thing to passively listen to packets going in both directions.  And that was the second part of this question was, if someone listened to this session, this SSL or the VPN connection being established, why doesn't that give them all the information they need to decrypt the whole conversation?



LEO:  Right.



STEVE:  Because, after all, they've heard everything that both sides have sent back and forth to each other.  I mean...



LEO:  But that's public key cryptography.  That's the whole point of public key cryptography.



STEVE:  Exactly.



LEO:  In the old days, if you had a decoder ring and, you know - or you had to send the guy the decoder ring; right?  And if anybody intercepted the decoder ring, he could copy down the algorithm and then send the decoder ring on, and you're cracked.  But because of public key cryptography, I can send you the public key, and it's still useless.  Is that basically it?



STEVE:  That's it.  And that's probably all we should say for now.



LEO:  It just means it's possible to exchange a key without compromising security.  You still need the personal, the private key to decrypt.



STEVE:  It's sort of like, okay, I could explain this now...



LEO:  Let's save it.



STEVE:  ...but people would get more confused...



LEO:  Let's save it.



STEVE:  ...and everyone's eyes would cross.



LEO:  That happens anyway.  Let's not...



STEVE:  So I want to explain this.  It's so cool how this works.



LEO:  It is.  It is.



STEVE:  And I think people are going to get a big kick out of it.  But if we do a partway job, people will just end up being more confused.



LEO:  So just answer this question.  So man-in-the-middle is not possible with a properly implemented SSL?



STEVE:  Oh, boy.  We're going to get into trouble, Leo.



LEO:  Okay.  You could say - you could fudge it.  You could say "in some cases."



STEVE:  If it - no.  There's just no simple way to answer the question.  SSL is susceptible to man-in-the-middle attacks if authentication is not involved.  A man in the middle, there's no way for a man in the middle, who's somebody who's not just passively listening, but is actually able to impersonate the people at either end, that is...



LEO:  That's why these certificates are so important.  Certificates are the authentication you're talking about.



STEVE:  Certificates are an aspect of authentication.  But again, here's where we really need to get careful with our definitions.



LEO:  Okay.



STEVE:  So there's just - we're going to have to wait.



LEO:  Okay.



STEVE:  People are going to love this...



LEO:  Stay tuned.



STEVE:  ...when we explain it, yes.



LEO:  By the time you've listened to Episode 99 of Security Now!, you will be the next Bruce Schneier.



Nintendo just launched its Wi-Fi service for the Nintendo DS.  You can now go to McDonald's and play games against other DS people.  The problem is the device doesn't support WPA encryption.  The DS only has WEP.  Many small portable devices are like this.  Any suggestions for a home network where we might want to use these devices and still be secure?  In other words, if I've got a DS, and I've got a WPA-encrypted network, I can't use the Wi-Fi.



STEVE:  Yeah.  And this sort of question has come up in many different flavors.  For example, there's some people that have their TiVos on a wireless connection.



LEO:  Right.



STEVE:  But TiVo only supports WEP.  It doesn't support WPA.



LEO:  Right.



STEVE:  They want to run their whole network on WPA, but now the TiVos are stranded.



LEO:  Now, Palm did the right thing.  They support WPA.



STEVE:  Oh.  In fact, Leo...



LEO:  Which is nice.



STEVE:  ...I took one of my hairy - I was going to say "hairy-ass passwords" - from my own passwords page.  I mean, this thing just makes your eyes cross.  63 characters, it looks like, you know, the computer is badly broken.  I did, I copied and pasted it using a little SD card into my Wi-Fi, my new TX, dropped it in, and it connected right up to my network.



LEO:  Isn't that great.



STEVE:  Oh, using real strong WPA encryption.



LEO:  But so if you have a DS, you just - either you don't use it on the network; or you set the network for WEP during that time; or actually, as you mentioned earlier, you could just turn off security during the time you want to use it.



STEVE:  The thing that I've suggested to people whose email addresses I had was - and actually they wrote back and loved the idea.  So I guess maybe it's feasible.  It's possible to run two networks.



LEO:  Oh.



STEVE:  There's nothing to prevent you from having your - and this actually solves the problem of people coming over to your house, also.



LEO:  So have an insecure network and a secure network.



STEVE:  Exactly.  You might want to run MAC address filtering and hide your SSID so that your neighbors are not using - I mean, I would suggest having one that is WPA running at full security, and probably just leave the other one wide open.  Don't even bother with WEP security on the other one if you really don't care.  But do use MAC address filtering...



LEO:  Just to keep it out of prying eyes.



STEVE:  ...to keep your neighbors from using it by mistake.  Then your TiVos can connect, your Nintendo DS can connect, your neighbors who bring their laptops over...



LEO:  Real quickly, what would the topology be?  You would have, okay, I have my cable modem or DSL modem.  It's connected first to the insecure access point, and that's bridging to the secure access point?



STEVE:  There are levels of security that you could go through.  But as long as you've got a switch on your router which is isolating the traffic from each other, you're going to be very secure.



LEO:  Ah.  So you have a router connected to the cable modem and a Wi-Fi access point coming off that router...



STEVE:  Yup.



LEO:  ...that is open.



STEVE:  And it's not going to see any of your - and none of your encrypted traffic would ever be decryptable anyway because you're on WPA.



LEO:  Right.  So a modern router is going to have a switch, and it's going to be - that'll be sufficient.  An older router might not, but...



STEVE:  Yup.



LEO:  Okay.  Let's see.  We only have a few more minutes.  Let's get a few more in here.  What's the security of the Windows Remote Desktop?  Is it safe?  Is it secure?  Do you recommend using it at a hotspot as a kind of VPN?



STEVE:  Ah.  That's a great question.  And we're going to do one whole episode on Remote Desktop security and securing Remote Desktop because it's a really nice way for people who are interested in not using a third-party service like GoToMyPC or LogMeIn.com, for them to be able to access their machines.  Microsoft has tried for years to make this secure.  And they still haven't got it right.  It is deeply encrypted.  With XP you're using 128-bit RC4 encryption cipher.  So it is extremely encrypted.  It is, however, susceptible to a man-in-the-middle attack, like we were saying before.  There are even freely available tools - this Cain & Abel tool has a Remote Desktop Protocol man-in-the-middle logging and interception capability that basically someone can sniff that traffic - actually can't sniff it.  I need to be careful here myself.  They have to actively modify the initial log-in dialogue to insert themselves in the middle.  But these tools are available and are known.  Then they are able to record everything you do with your Remote Desktop.  Now, this is one of those deals where someone says, okay, c'mon, Gibson, you know, it's encrypted, it's secure, it's not susceptible to passive eavesdropping.  Isn't that good enough?  I have to say yes, probably it is.



LEO:  But you should beware that there are holes.



STEVE:  Yes.  It is - and there again, that's always where we draw the line.  I want to tell people what is possible, let them decide whether they care or not.



LEO:  Whether it's probable.



STEVE:  Exactly.  Microsoft has the problem that they are not securely authenticating.  There is no authentication technology in Remote Desktop, and no secure certificates.  They actually tried to fix this earlier this year and still didn't get it right.



LEO:  Essentially what you're saying is that it's secure, but it's not perfect.



STEVE:  It is deeply encrypted.  It's very strongly encrypted.  No one sniffing the traffic would ever be able to get it.  And the only vulnerability in the desktop protocol - which is what they're using, RDP, Remote Desktop Protocol - is that, if somebody really wanted, I mean, like, knew you were going to be using Remote Desktop, got all set up, and managed to intercept and modify your traffic on the fly, I mean, it's much more of a theoretical vulnerability.  But it exists, and it has been exploited, and the software is on the 'Net that allows it to be done.  Then somebody could, essentially without you knowing it, monitor everything you did remotely - mouse movements, typing on the keyboard, capturing your keystrokes, logging in with your email client, running on the other machine and so forth.  So it is, like, a theoretical exposure.



LEO:  All right.  We are out of time.  I wish we had more.   But, you know what, we will do more.  Every fourth episode we'll answer more of your questions.  So keep them coming.



Next week, Steve, are we going to finally find that holy grail of safe computing on the road?



STEVE:  We're going to address a whole next aspect of VPN, the so-called PPTP, Point-to-Point Tunneling Protocol, and IPSec VPNs, which are implemented by Microsoft and by so many of the later model consumer Small Office Home Office, the SOHO routers.  We're going to talk about that works and how, unfortunately, Microsoft has deliberately made their built-in Windows client incompatible with any, well, almost all of those routers.



LEO:  So that's...



STEVE:  But still some good solutions are available.



LEO:  Do we have a silver bullet, a magic...



STEVE:  We're on the way.  We're on the way.



LEO:  All right, okay.  We're getting close.  Okay.  Well, ladies and gentlemen, that's it for this episode of Security Now!, Episode 16.  Thanks for all your questions.  If you want more information, show notes are on GRC.com/securitynow.htm, as is a 16KB version of this show, and transcripts, too, in all sorts of formats, so you can follow along with the home version of Security Now!.



Our thanks to the folks at AOL Radio who broadcast Security Now! on their podcast channel and very graciously provide us bandwidth so that we can offer this podcast to you absolutely free at AOLmusic.com.  I'm Leo Laporte for Steve Gibson.  Thanks for joining us in Security Now!.  We'll talk to you next week, Steve.



STEVE:  Bye, Leo.



LEO:  Thanks.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#17

DATE:		December 8, 2005

TITLE:		PPTP and IPSec VPN Technology

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-017.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  In our continuing exploration of VPN technology for protecting network users on networks they don't control, Leo and I discuss the oldest "original" VPN protocols: Industry standard IPSec, and Microsoft's own PPTP and L2TP/IPSec.  We examine and explain the trouble with interconnecting Windows machines to third-party VPN routers and examine the many reasons these older technologies are probably not optimal for on-the-go road warriors.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 17 for December 8, 2005, continuing VPN solutions.  Steve Gibson is joining us via Google Talk.  And we're ready...



STEVE GIBSON:  Hey, Leo.



LEO:  ...to continue - is this Episode 4 of VPN?  Episode 3?  We've been doing this...



STEVE:  I think this is actually our third.



LEO:  Third.



STEVE:  We talked about the theory of VPN first, what's the concept of tunneling packets through another protocol.  Last week, of course we talked about SSH tunnels and SSL tunnels.  And this week we want to talk about basically sort of the granddaddy protocol of VPN, which is a point-to-point tunneling protocol, PPTP, which was originated by Microsoft; and then sort of the formal IETF standard, which is IPSec tunneling, to create a virtual private network extension.



LEO:  So this is really the alphabet soup edition.



STEVE:  Uh, yeah.  We have a few more to go.  We're going to talk about some open source VPN solutions and some public services in the next week or two.  But I wanted to talk about the VPN that most people already have, basically, if they're using Windows.  Even Mac supports PPTP VPNs.  And of course many people have VPN endpoint NAT routers.  And there are issues with interconnecting all this.  So that's sort of where I wanted to go.



LEO:  It's a big topic and an important topic because, frankly, secure networking, secure online use is, you know, top of mind for everybody these days.



STEVE:  Well, I can tell you that there's been a phenomenal response in the postings that we've received about this topic.  People who are roaming around, the so-called "road warriors," who are in hotels or in open Wi-Fi, they understand that, you know, their traffic is very vulnerable without creating a secure connection.  So that's, of course, what VPN offers.



LEO:  Well, let's start with a kind of circle around for last week's episode.  Because even though it was a question-and-answer episode, we created some more questions.



STEVE:  Well, yeah.  I think I overstated the security offered by switches versus hubs in responding to one of the questions that we'd seen many times, like, you know, is a hub much more secure than a - I'm sorry, is a switch much more secure than a hub, because it doesn't allow you - a switch doesn't rebroadcast all of the net's traffic out of every port.  A number of people said, wait a minute, there are ways to breach the security of a switch.  Well, that's not really true.  There are ways to breach the security of an Ethernet LAN, and we're definitely going to be talking about those.  But I first - I don't want to freak everyone out with that until we provide some solutions which they'll already have implemented or be ready to implement after we talk about these VPN solutions.  So it's really not that the security of a switch is unbreakable.  It's that the security of the Ethernet itself, it was never designed, like many of our protocols, never designed with security in mind.  So it is true that you cannot passively sniff the LAN's traffic on a switch, whereas you can with a hub.  But it is also true that there are active means of subverting the entire network that we'll be talking about in the future.  But I just wanted to go on the record and clear that up.



LEO:  That ARP poisoning that the guy was talking about; right?



STEVE:  Exactly.



LEO:  We'll save that for another...



STEVE:  Also, I mangled an acronym, and I hate when I do that, especially acronyms that I know so well.  I talked about CSMA, and I called it Collision Sense Multiple Access instead of Carrier Sense Multiple Access.  And it has a CD on the end which stands for Collision Detection.



LEO:  All right.



STEVE:  So the real acronym for Ethernet is CSMA/CD, which is Carrier Sense Multiple Access with Collision Detection, which...



LEO:  I admire your engineer's drive to precision and clarity.



STEVE:  Well, the only way...



LEO:  But I don't think most people care that much.



STEVE:  That's the only way I could code everything in assembly language, if I paid attention to the carry bit.



LEO:  Everything matters in assembly.



STEVE:  And in following up one last point, which was our discussion of how virtually impossible it is to use a public access point, that is, like a public terminal in a hotel or in a library.  Even, you know, like we were explaining, even keystroke logging could be installed on that machine and, in fact, has been found in public terminals.  Many people wrote with various, like, clever means to get around that.  For example, if you open Notepad, you could type a couple characters in on your password, then switch to a different application, type some nonsense, go back to notepad, type a few more, go back to something else, type some nonsense.  The point is that, if you could - if something was only able to see your keystrokes and not things you were doing elsewhere on the multi-windowed interface, then you could even use, like, cut and copy/paste in order to end up assembling your final username and password that a keystroke logger would be blind to.  And there's, you know, any number of variations of that concept.  And I thought those were clever and certainly worth mentioning.



LEO:  Knock yourself out, kids.



STEVE:  There you go.



LEO:  If you really want to do that.  But I guess it is one way that you could use a public terminal and be fairly assured of safety.  Unless somebody's got a camera over your shoulder, and then forget it.



STEVE:  If you really have it.



LEO:  All right.  Let's go on.  PPTP, Point-to-Point Tunneling Protocol.



STEVE:  This is the original protocol which every version of Windows from 95 on has had built into it.  There are a number of ways to use the protocol.  And because they're built into Windows, they're sort of compelling.  The problem is that Microsoft's first implementation had some very serious security vulnerabilities in the way the tunnel authenticates itself.  And even the second one ends up being prone to ready abuse.  So Microsoft is deprecating the use of it.  They call it "non-strategic for the future," and they're moving to what they call L2TP, which is Layer 2 Tunneling Protocol, which is protected by IPSec, which is the standard IP Security Protocol.  But it is in everyone's machine.  And in our show notes I've got some links to some pages that show, for example, how you can, with no additional software, how you can just use the built-in New Connection Wizard in Windows XP, or there's a variation of that in Windows 2000.  Just step through the Wizard and basically interconnect two machines using this VPN.



LEO:  They call it VPN, but it's using this Point-to-Point Tunneling Protocol.



STEVE:  It is.  Well, it would be a Point-to-Point Tunneling Protocol VPN.  I mean, it truly is a Virtual Private Network where the client machine is acquiring an IP from the machine it's connecting to, which is essentially extending the entire network through to the other machine.  It's worth  mentioning that, when we were talking last week about SSH tunneling, there we're really not using a VPN solution.  It's a secure protocol tunnel which uses proxy servers in order to basically fool your clients into routing their traffic through the tunnel, as opposed to a true VPN, which is what we're talking about this week, that actually gives your client an IP from the server.  And it's like it's on the server's local network, and it's being secured through this encrypted tunnel.  So these are true VPN solutions.



LEO:  I remember using corporate VPNs that used this PPTP.  You had to use Windows pretty much.  Macintosh and Linux didn't support it very well because it's a Microsoft protocol.  The rest of the world's not using PPTP.



STEVE:  That's true.  And in fact, the routers that people can buy recently now, these so-called VPN endpoint routers, they actually are a VPN server.  And you remember a couple of weeks ago I started talking about my quest for the holy grail.  Well, the holy grail was to need no client software on a machine out on the Internet.  You're in an open Wi-Fi hotspot; you're a road warrior in a hotel.  You realize that, because it's on a LAN, which is inherently unsafe, or your radio, which is inherently unsafe, you really need to encrypt your traffic, at least until it gets out of that danger zone.



A number of people have said, hey, Steve, you know, it's cool that you're talking about VPNs.  But, you know, once you get your traffic decrypted, it's going out over the Internet anyway, isn't it?  So what's the point?  Well, the point is you want it encrypted while your traffic is crossing the area of highest danger.  Which, for example, in a hotel setting is a network you don't control, or in open Wi-Fi is where your traffic is inherently sniffable by anybody who is able to be within range.  So, sure.  All Internet traffic as it passes over the Internet, unless it's explicitly encrypted by an SSL connection, it's going to be in the clear.  But there you just have safety in numbers.  It's, you know, a huge tunnel, an amazing amount of traffic going by, very unlikely that anyone is going to find it.  But again, it's prone to targeted attack, but not sort of just general, you know, general let's see what we can pick up with our antennae attack.  But these VPN routers, my hope was that we'd be able with a Windows machine to connect to a VPN router.



Well, it turns out that Microsoft has deliberately chosen to stick their head in the sand and not support the protocol in their built-in Windows client that everybody else does.  Microsoft supports this L2TP, this Layer 2 Tunneling Protocol, which is incompatible with just standard IPSec VPNs, which is what all of the endpoint routers support.  So it turns out that my search for the holy grail, that is, no software installed in a laptop, and you can connect to your VPN router at home, is deliberately not possible using just standard Microsoft client.  Now...



LEO:  And why would they do that?  Is there a compelling reason to do that?



STEVE:  I've got some links in our show notes, in the episode notes, that show them defending this position for, like, page after page after page.  It's like, no, we don't believe that the standards yet exist, blah blah blah, I mean, it just goes on and on and on.  It's like, okay, Microsoft, you know, if you don't want to do it, just say so.



LEO:  Yeah.



STEVE:  For whatever reason, they just don't want to do it.



LEO:  So as far as you can tell there's really no legitimate reason, it's just they don't want to do it.



STEVE:  I'm sure there's no legitimate reason because everybody else has, and everybody else is interoperable.  Now, if you had a Netgear router or a D-Link router or a Linksys or any router that really offered good peer-to-peer VPN endpoint support, which is what any of these VPN routers do, they offer - unfortunately, it's not free, but it is very nice - they offer inexpensive clients, about $39 typically, for the Netgear, the D-Link, or the Linksys.  In fact, I think Linksys's client may be free.  But it wasn't clear from their site.  They have something you can download for free.  It may be that it's available.  Although I don't know how interoperable it would be with other manufacturers' systems.



LEO:  So they have this router.  I put it on my system.  Does it say on the box "VPN Router"?



STEVE:  Yes.



LEO:  Yes.  So I should look for that.



STEVE:  And they're generally a little more expensive than the sort of generic non-VPN routers.  But it's about $129-$139, something like that.



LEO:  Now, and then I run this software on my laptop at the hotel where I'm worried about security.



STEVE:  Yes.



LEO:  It connects to my router at home.  And here's my big question.  And this is - I've been trying to, you know, in parallel with you, trying to set this up to make it work.  I understand it lets me get to my home network and see my machines and stuff like that.  Can I then surf out onto the 'Net, as well?  I mean, can I use my Internet connection at home to surf the 'Net?



STEVE:  Well, you're a member of your local network.  And I think we talked about this once before, and I had not yet achieved that.



LEO:  Yeah.  In theory, it's doable.



STEVE:  Well, what actually put me off of it is that there are still some problems even with doing that.  The problems are, first of all, there is a problem with using IPSec through any NAT routers because the IPSec technology inherently, by design, protects its packets from being changed.  It's a packet authentication technology that basically signs every packet so that any change will be detected.  Except that NAT routers change packets.  They have to.  That's the way they work.  As you know...



LEO:  They re-address them.  They change the address on them.



STEVE:  Exactly.  Now, there are actually two encryption technologies for IPSec: one called AH, which is Authenticated Header; and one called ESP, which is, I can't remember the acronym.  It's like...



LEO:  Extrasensory per- no.



STEVE:  Encapsulation Security Policy or Protocol.  Encapsulated Security Protocol.  The AH approach does include the IP address of the packet.  Well, we know that has to change.  So AH can never be routed across a NAT router.  However, the ESP encryption stops a little bit short.  It doesn't change the IP address.  It does change the inner packet address.  So it's possible to route that.  What happened is, people recognized that IPSec would not be very useful if it was unable, if it was absolutely unable to ever transit NAT routers because, of course, NAT routers are - you're going to find them in any hotel, any Wi-Fi hotspot, and of course in any home environment.



So what they did was they created a next-generation technology a few years ago called, unfortunately, NAT-T, or NAT-Traversal.  Now, this is different than just regular NAT traversal that we've had with packets crossing regular NAT routers.  This is special - NAT-T is the acronym you want to look for, NAT-T, NAT-Traversal for IPSec.  What this NAT-T does is it wraps the IPSec packet in another wrapper of UDP - the standard UDP, you know, versus TCP, the Datagram Protocol - that then allows the packet to run through a NAT router, for example, in a hotspot, traverse the Internet, come through another, like, user NAT router, and then, since the protocol is recognized - if it's recognized, I should say - by each end, then this allows IPSec to work through NAT without any problems.



LEO:  So basically it's saying to IPSec, look, you don't have to change the packet, it's fine, we'll wrap it up in a wrapper that will keep its integrity from point to point.  Then once it's inside the network we'll unwrap it, and then the router can re-address it.



STEVE:  Exactly.  Now, Microsoft silently added this technology in XP Service Pack 2.  So it does exist in Service Pack 2, even though Microsoft is hostile for their client hooking up to endpoint VPN routers, unfortunately.  However, all of the very latest VPN routers also support it.  For example, Netgear has an FVS318, like Frank Victor Sam 318.  It's in its third version right now.  The Version 3 router does support this NAT-T traversal.  However, versions 1 and 2 don't.  And unfortunately they're not upgradeable to support this.  So if you had an earlier version of this particular router, you'd be out of luck.  But if you've got a Version 3 router, you're okay.  Similarly, all of the current D-Link VPN routers also support this.  The problem is, it's very poorly documented on anyone's side.  I had to contact D-Link and get a hold of a technical guy and say, okay, which of your routers support this?  You don't talk about it anywhere.  Well, they all do.  However, only some of the latest Netgear routers support it.  They do have a PDF that shows a spreadsheet of what features are supported.  And there's a line item, so they're beginning to recognize that this is an important thing.  But it still is sort of just on the emergence of being widespread.



LEO:  So if you want to use a Windows computer to access your home network, and you have purchased a router that supports VPN, that must support also NAT-T, the NAT- Traversal, so your client can get into your network.



STEVE:  There are two ways, though, that a router can support VPN.  So we want to be clear about this.  Routers for a long time have supported what's called VPN traversal - or I'm sorry, VPN passthrough.  VPN passthrough acknowledges the problem of changing the port as the packet emerges from the NAT router.  So what VPN passthrough does is, for one VPN connection, that is, if you're connecting to one remote server, the router recognizes, oh, look, this is UDP port 500, which is what IPSec uses for its transport.  It deliberately leaves the port alone.  It leaves it as 500 when it comes out the other side of the NAT router and puts it out onto the Internet specifically so that the IPSec packet is not broken.  So the idea is this would allow somebody working at home who had to have a VPN connection to their corporate server, it would allow them to still get a VPN connection to their corporate server, even if they've got a NAT router in their home environment that would normally break VPN because it's just, you know, VPN, you know, IPSec cannot traverse through NAT.  So VPN passthrough is different than a VPN endpoint.  When you've purchased a VPN endpoint router, you've got a router that you can actually VPN to.  It's the server of the VPN connection.  So exactly as you were saying, Leo, you're out roaming around the Internet somewhere, and you use one of these third-party clients, you know, probably the same client whose router you purchased, just to make sure that there's not going to be any interoperability problem.  And it allows you then to connect to your network at home.



LEO:  I'm so confused, Steve.  You've completely left me in the dust.  Can we kind of boil this down to a series of recommendations?  Or no?



STEVE:  Well, okay.



LEO:  Look, let's get back to our original premise.  I'm at a hotel.



STEVE:  Yes.



LEO:  Or I'm actually - this is perfect because I'm planning to do this.  Tomorrow I'm going to get on a plane.  I'm going to go to a hotel.  What should I do at home so that I can safely use that hotel network?



STEVE:  If you have a VPN endpoint router, that is, a router that is clearly a VPN router...



LEO:  And it'll say so on the box...



STEVE:  You probably paid extra for it, so you may know that...



LEO:  You'll know.



STEVE:  You know that you have it, even if you've never been able to use it before.



LEO:  Which I haven't, okay.



STEVE:  Then you will need to purchase their matching client software because, unfortunately, Microsoft's built-in client technology won't connect to an endpoint router.



LEO:  It's intentionally disabled in this LTPTPT2P2.



STEVE:  Yes.  They just - they will not support it.



LEO:  They don't want to, okay.



STEVE:  They won't do it.



LEO:  For unclear reasons.



STEVE:  So you could then use this client software that you purchase for about $39 to connect to your router at home.



LEO:  Okay.



STEVE:  Now, that would get you to your home network.



LEO:  Right.



STEVE:  You could then basically do anything you wanted to with very good security using your home network.  I should mention, though, that you will want to use a Pre-Shared Key, much as we've talked about with WPA technology...



LEO:  So you have to set that up before you leave.



STEVE:  You do need to set it up before you leave.  Now, the other problem is, and this is why I haven't pursued this all the way, is it turns out that ISPs or hotels can be...



LEO:  Don't tell me they block the port?



STEVE:  Yes.  That's the problem with this failing the holy grail solution also is - aside from needing to buy additional software - because you're using standard IPSec or Point-to-Point Tunneling Protocol ports - 1723, 1701, 500 - those could be administratively blocked if, for whatever reason, someone didn't want you to be using VPN within or through their network.



LEO:  Do you think they're commonly blocked?  Is that...



STEVE:  Yes.  And in fact, I know that they are because I've run across sites which are trying to offer this as a service.  And they say, well, if PPTP doesn't work, try using IPSec, you know, hopefully one or the other will.



LEO:  Now, PPTP won't work if you're trying to use a Windows box because you'll have to use the LP2P, which Microsoft prevents.



STEVE:  Well, it turns out that we...



LEO:  Is that right, or am I...



STEVE:  ...we've mentioned - kind of.  We've mentioned one nice-looking service called PublicVPN.



LEO:  Right.



STEVE:  PublicVPN.com.  And it's something I would recommend for people as a possible solution for sort of, you know, in this myriad of solutions.  It's inexpensive.  It's $5.95 a month, or $59.95 for a year.  They're running servers that support Microsoft's PPTP and this Level 2 Tunneling Protocol, L2TP IPSec.  What it means is that you need no client installed.  They support all Windows platforms and the Mac platform, allowing you to create a secure connection to their server which would get you out of the danger zone.  If you were in a hotel, for example, Leo, with your Mac, for $5.95 for a month you could get an account with them and connect to them, getting your traffic encrypted as it leaves the hotel's LAN, travels the Internet to them, where it would be decrypted and dropped out onto the Internet.



LEO:  And it uses SSL, so it's unlikely to be blocked.



STEVE:  No, it uses - and that's why, again, it's probably not a great solution for someone traveling a lot...



LEO:  Because...



STEVE:  ...because it does use the standard...



LEO:  PPN.



STEVE:  ...PPTP and L2TP blah blah blah.



LEO:  Yeah, yeah, yeah.



STEVE:  So but, you know, it's there.  And we've talked about it before; so I wanted to, like, wrap that up when we were specifically talking about it. 



LEO:  There's another one called HotSpotVPN that might be...



STEVE:  Now...



LEO:  How about that one?



STEVE:  Yes.  I'm just...



LEO:  It's less expensive.



STEVE:  I'm just opening a dialogue - actually it's more expensive.  They have a special of $8.88 per month at the moment.



LEO:  Oh.



STEVE:  Otherwise it's like $11 or $13 or $15, depending upon how many bits you want your key length to be, which actually is pretty hokey since even 128-bit key would be fine.



LEO:  Plenty, yeah.



STEVE:  These people are an SSL-based VPN.  But I haven't yet finished my dialogue with this guy to figure out exactly what it is they're doing.  So we will definitely...



LEO:  No endorsement yet, but we're looking at it.



STEVE:  Yeah, no endorsement yet.  But we'll come back to it.  Ultimately, Leo, you and I are going to take a look at this OpenVPN service, and another one that I have found called Hamachi, which both look like they're very interesting solutions.



LEO:  It's not merely yellowtail tuna, it's a VPN solution.



STEVE:  Exactly.



LEO:  Okay.



STEVE:  However, for the sake of completeness, for people who have VPN endpoint routers, want to know how to use them, I can guarantee them they cannot connect with a Windows client.  They need to purchase the client from their supplier.



LEO:  Because that uses the NAT-Traversal.



STEVE:  Yes.  And also they need to make sure they have either updated their firmware or that their particular VPN endpoint does support the NAT-Traversal.  Otherwise they absolutely won't be able to connect from a hotel.  And even if it does, they are subject to the VPN packets being filtered by policy by the hotel or - for example, maybe somebody wanted to VPN from their corporate environment to their home to get a file or to check up on their systems there or something.  They might well find that their corporate firewall is blocking outbound VPN connections, even while allowing incoming VPN connections from people that were outside the corporation coming in.  As a corporate policy, they might be really locked down.  So there are problems with standard VPN technology being used all over the place, even if you're got a VPN router.  I'm still aiming at coming up with a better solution, and that's what we're going to talk about next week.



LEO:  Good.  I'm exhausted.  Okay.  So I just want to recap so that people aren't completely left in the dust.  And if anybody's still listening, they're very brave.  Because this was complicated, and it had a lot of acronyms in it.



STEVE:  It did.  Although, based on the feedback we've had, this is the discussion people want because they...



LEO:  Well, yeah.



STEVE:  ...want to understand the limits of virtual private networking.



LEO:  And we all want to solve this problem of how do I use a network at a hotel safely?  And if you're not clear why we want to solve this, listen to some of the earlier episodes, particularly, I think, Episode 14, where we really talk about why it's just not safe to use a hotel's network.



STEVE:  Well, and Leo, in all honesty, we haven't yet really explained the danger.  I don't want to really do that until we have some solutions in place.



LEO:  It's worse than you think. 



STEVE:  You mentioned ARP poisoning, and it's a horrible problem.



LEO:  Okay, okay.  Don't, don't - because you're going to scare people.  You're going to scare me.  I got ten days on the road coming up.  Hotel access for all ten days.  Okay.  And you still have not found the holy grail for me.  And I've been trying all these solutions, you know, SSH tunneling and OpenVPN and so forth.  And so, well, all right.  And I'm worse because I'm on a Mac.  Does that make it worse or better?  At least I don't have to deal with Windows blocking IPSec.



STEVE:  True.  The Mac does support PPTP, although it turns out that that is subject to man-in-the-middle attacks.  It has no strong useful authentication, and it has been cracked by various tools that are able to insert themselves.  And in fact, we're going to show how easy that is to actually do in the real world.



LEO:  All right.



STEVE:  We're going to get the solution, but we need to create a nice foundation here first.



LEO:  Oh, it's so frustrating.  Well, it's good.  No, and so I understand people really want to know this.  And it was complicated, but we're laying the foundation for why...



STEVE:  We've ended up choosing something else.



LEO:  We have to go a particular route.



STEVE:  Yes, exactly.



LEO:  Okay.  And it's just - it's interesting.  All right.  So thank you very much, Steve, for explaining this.  And as difficult a subject as it is, even a dunce like me, I think I've understood it.  If you want to know more, the show notes are available at GRC.com/securitynow.htm.  And they are very helpful for kind of elucidating this because you've got pictures, you've got a graph, it makes it just much easier to understand.



STEVE:  Yes.  And, in fact, for this episode I have an extensive list of links that people can poke around at if they want to fill in the gaps.



LEO:  And thanks to Elaine who's going to transcribe all this and make sense of it.  You can even reread it slowly.  And maybe reading out loud with your mouth moving will help.



STEVE:  I had one person named Andrew posted a comment.  He said, wow, your podcasts have really picked up speed.  I got a kick out of that.  I thought that was a nice analogy.



LEO:  Does he mean they're getting more complicated?



STEVE:  I think they've really got his interest.



LEO:  Good.  Well, and we're not always going to do this kind of high-level stuff.  We're going to mix it up.  But frankly, this is an issue for everybody, that everybody has to solve.  And, you know, we will get - you think the next episode we'll finally get this holy grail thing?



STEVE:  Yes.  We're going to talk about the very interesting cross-platform solution called OpenVPN.  People who want to do a little research ahead of time can put "OpenVPN" into Google.  They'll find a ton of links.  It's a very popular-looking solution.  But it's not zero-configuration by any means.



LEO:  Right.  I know, I've been trying, and I can't figure it out.  And who knows, it'll happen in seven days.  We could find out there's a horrible hole in it, and then we'll have to find something else.



If you want to read those transcripts that Elaine works so very hard on, of course, again, GRC.com/securitynow.htm.  Steve also hosts 16KB versions of this for easy download.  And we have decided that we're going to put together some audio CDs of the year when we get to January so that you can buy it as a portfolio and give it to your favorite IT person.  We'll let you know about that.  If you want to listen on AOL, we're on part of the AOL Radio on the Podcast Channel.  So tune in there.  And we thank AOL for providing that and for providing the bandwidth for Security Now!.



All right.  I have a plane to catch.  Steve Gibson, thank you very much.  I really appreciate your explaining this and all the work that you must have to do to understand it yourself.



STEVE:  Thanks, Leo.



LEO:  It's a tangled web we weave.



STEVE:  Talk to you next week.



LEO:  That's it for this edition of Security Now!.









Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/


GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#18

DATE:		December 15, 2005

TITLE:		Hamachi Rocks!

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-018.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  This week Leo and I discuss and describe the brand new, ready to emerge from its long development beta phase, ultra-secure, lightweight, high-performance, highly polished, multi-platform, peer-to-peer and FREE! personal virtual private networking system known as "Hamachi."  After two solid weeks of testing and intense dialog with Hamachi's lead developer and designer, I have fully vetted the system's security architecture and have it running on many of my systems.  While I am traveling to Toronto this week, Hamachi is keeping my roaming laptop securely and directly connected to all of my machines back home. Don't miss this one!



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 18 for December 15, 2005:  Hamachi.  Hamachi is a kind of sushi, isn't it.



STEVE GIBSON:  Yeah.  It's funny, I asked the developer, a guy named Alex Pankratov, where he came up with the name Hamachi.  And he explained that he had been doing some work on an IPSec VPN tunneling technology prior to this, and that they were calling it TUNA, T-U-N-A, as Tunneling Architecture.  And so when they started on this Hamachi project - I'm sorry, when they started on their second-generation project, that's what this evolved into, they thought, well, what are we going to call this?  And so, what is it, yellow-fin, yellowtail...



LEO:  Yellowtail tuna, yeah.



STEVE:  Yeah, yellowtail tuna is Hamachi.  And so that's the name of this.  What it is, you know, we've talked now extensively for many weeks about SSH tunnels, about the concept of tunneling, about SSL, about the traditional IPSec, Microsoft's L2TP, IPSec, the original PPTP, Point-to-Point Tunneling Protocol, blah blah blah, you know, VPN, endpoint routers and all that.  All of this really results or boils down to what do users actually use to solve these problems?  We've talked about, you know, what it is that the problem is that VPN technologies solve.  Hamachi - I am so excited about this, Leo - it's a secure-from-the-ground-up, lightweight, free, peer-to-peer system that does NAT traversal, so it solves NAT traversal, firewall traversal.  And essentially it allows people to build ad hoc local area networks.  It's interesting, when I first installed it, it assigned my machine an IP in the 5. range.



LEO:  I never heard of that.



STEVE:  Well, there isn't any.  You know, as we know...



LEO:  10 is the lowest you can go; right?



STEVE:  Well, as we know, there are three networks that people are familiar with if they've looked at the inside of their NAT routers.  It's typically 192.169 dot something dot something.



LEO:  That's kind of reserved by the numbers folks for private networks.



STEVE:  Exactly.  In fact, there's an RFC, it's RFC1918, talks about these three networks.  There's 192.169.*.*; there's 10 dot anything anything anything; and then another one is 172.16 through 172.31.  So those three subnets are set aside for use in private networks.  And so you typically find that behind NAT routers that are routing those private addresses out onto the public Internet space, the point being that those are so-called nonroutable subnet ranges, or IP ranges, because no routers on the Internet would know how to forward a packet.  Well, this 5. network is reserved by the IANA, the Internet Assigned Numbers Association.



LEO:  Assigned Numbers and Addresses.



STEVE:  And Addresses.



LEO:  Jon Postel's IT Group, which I think has been subsumed by ICANN.



STEVE:  Probably.



LEO:  I think so, yeah.



STEVE:  Anyway, so there are no 5. IPs.  Theoretically there could be someday.  But the reason Alex chose this 5. is that he knew - he needed to give IP addresses to computers that were running Hamachi that would not collide with either IPs out in the public space or any of these three subnets which they might be running behind NAT routers.  So he needed sort of like a third class of IPs.  And so IPs that have never been issued was where he went.  And so, you know, what, is it 16 million?  I don't know, I can't do the math here on the fly.  But it's...



LEO:  It's four bytes.



STEVE:  It's, well, three bytes.



LEO:  Three bytes.



STEVE:  So it's 24 bits.  It might be, I think it's 16 million is the total number of IPs that are from 5.0.0.0 to 5.255.255.255.  Okay.  So what's cool about this is, well, there are so many things that are cool about this.  When you install Hamachi on your system - oh.  It's multiplatform.  Right now it's just emerging from beta.  It's available right now for Windows and Linux platforms.  And as soon as it gets finished, as soon as the 1.0 version is released for Windows and Linux, shortly thereafter he will be releasing it for the Mac.



LEO:  Is this the holy grail?  Because you were looking for a free solution that allowed anybody to tunnel out and have secure networking no matter where they were, in a hotel, in an airport, on a Wi-Fi.  Is this that holy grail?



STEVE:  This is absolutely part of the holy grail.



LEO:  What's wrong with it?



STEVE:  Well, the thing I was actually looking for initially was a way to, with no client software on your machine, to connect to a VPN router that would get you into your network or out to the Internet.



LEO:  But we now know that that's not possible.  That's not going to happen.



STEVE:  It doesn't exist.  Actually, I should mention that several people have brought up the fact that there are some obscure routers, for example, the SMC Barricade, there are a couple versions that do support PPTP routing themselves.  So that's certainly, I mean, there are some that you can connect to with Windows.  But they're not these, you know, the major mainstream routers.  And again, the problem there would be that you might find yourself blocked by the environment where you were.  You might find that your hotel was not allowing VPN, or their router does not support VPN passthrough, so you'd still have problems getting to your router at home.



LEO:  Hamachi doesn't have that problem.



STEVE:  No.  In fact, well, so it's multiplatform.  When you install it on your machine, the Hamachi server issues a 5. IP that your machine statically and permanently and forever has.  That's its IP in this 5. address space.  It never changes.  Now, you can transport your setup to a different machine if you had some reason to.  But the point is, that's an IP that you can write down, you can configure it into links and do whatever you want to with it.  So you install this Hamachi client on whatever set of machines you want to.



LEO:  This would be at your home, probably, yes?



STEVE:  Well, at your home.  I've got it running in my co-location in my server space.



LEO:  So you could install it on your web server.



STEVE:  Absolutely.  I mean, well, and I'll explain why.  Because then what happens is you create ad hoc subnetworks of these machines.  For example, I've got one called Gibson Research Corporation.  And in that I have joined all of my various Hamachi-equipped machines into that network.  You give it a long password.  I got a password from my passwords page at GRC.com, you know, one of these 63-character nightmares, dropped it in, it hashes it, and that authorizes that machine to join a network that you've created.  Now the machines can see each other.  So what this does is it creates a secure, encrypted, peer-to-peer tunnel between any of the machines that are on the network.



So, for example, many people have written saying, hey, I love using Remote Desktop, but I'm concerned about its security.  What should I do?  Well, they should be concerned about its security because Remote Desktop does not have strong authentication.  So it is subject to man-in-the-middle attacks, and it can be compromised.  In fact, the current version of the Cain & Abel Cain tool has the latest support for the current RDP protocol, which allows - and, I mean, it actually builds a file, when you're running Cain, of everything you do over your Remote Desktop session.  So here Hamachi solves the problem of wanting one computer to connect to and control another.



LEO:  This is within your LAN.



STEVE:  Within, well, within the LAN that you create.



LEO:  Right.



STEVE:  So you're able now to securely and safely use Remote Desktop through this Hamachi link with absolutely no concern that it can be eavesdropped upon.  I've spent - I started talking to Alex on December 1st, and here we are on the 15th.  I spent two weeks back and forth with him, asking him, I mean, bugging him to death, asking him very detailed questions about, okay, what about this?  Are you hashing this password?  Is it stored on the machine?  You know, everything.  He has done this, I mean, perfectly correct.  The client builds an asymmetric key pair, a so-called public key pair.  It gives the public one to the server so that the server can be used as the key distribution mechanism.



LEO:  So you could dial into the server and say, what's the public key.



STEVE:  Yes.  And you're able to also see it in your client if you want.  But the nice thing about the server having the public key is then other clients that you agree you want to have connect to you, they receive the key from the server.  Basically Hamachi is a zero configuration VPN peer-to-peer system.  It does NAT traversal so that you're able - two people behind NAT routers, it will connect them.  His server does not forward any traffic.  And in fact it is not a relay.  It actually establishes direct point-to-point connections between the machines.



LEO:  So this is how he avoids the router issue, the firewall issue.  He has a third point, a middle point that you both make outgoing connections to which - and then he connects you.



STEVE:  Yes.



LEO:  Ah.



STEVE:  It's like a rendezvous or a liaison server.



LEO:  Yeah.



STEVE:  So he looks, he basically figures out how your router is working, characterizes your router, and then works out - he tells then both clients over a TCP connection how to find each other.  They find...



LEO:  This is without opening - doing any port forwarding or...



STEVE:  And that's the other cool thing, is that if you had  a VPN router, if you had any server running on your system, you'd have to have static ports open in order for you to be able to connect to it from the outside.  Not so with Hamachi.  It makes outgoing connections to the server, maintains a static TCP connection, then when you want traffic to go between machines, it's able to negotiate that directly.



LEO:  Using a random IP - a port that - it does use a port, though, doesn't it?



STEVE:  Well, it's able to work through the local NAT router's port.  So it works with whatever port the NAT router has assigned to outgoing traffic.  Well, so it solves that problem.  The security is complete.  As I was saying about the asymmetric key pair, your private key never leaves your client.  So you don't even have to trust the Hamachi server.  The Hamachi server cannot be part of an attack on your system.  It wasn't until I really understood this that I was willing to run these clients on my servers in my co-location.  I mean, there is no way for the Hamachi system to access my stuff, even if it wanted to.



LEO:  But it has the public key.



STEVE:  It's got the public key.  But it doesn't have the private key for any of the clients.  And you create the authorization when you initially create a connection between these endpoints.  So it's extremely fast.  The other cool thing is, for people who are, like, running around, doing telecommuting, one option, of course, is to run an email client on your laptop.  Then you've got the problem of synchronizing your email, like if you're on the road and you download a bunch of stuff, then you've got it on your laptop, it's not back on your main system.  So a cool solution for turning this into a system to give you Internet access, which it doesn't natively do, is instead, if you're using a Windows-based system, use Remote Desktop, which is  now secured by the Hamachi system, and it's made accessible. If you were using Remote Desktop without Hamachi, you'd have to have port 3389 wide open to the world.  Everyone knows 3389 is Remote Desktop Protocol, and so you're potentially vulnerable to, I mean, anyone knows you've got that open and soliciting a connection.  If you use Hamachi to give you the same functionality, a direct point-to-point connection, it's encrypted and strongly authenticated, which Remote Desktop Protocol won't do.  You still have a point-to-point connection.  So all you do is you bring up your desktop at home and use its web browser, use its email client, and use its connection to the Internet.



LEO:  I've seen you do this, and it's pretty fast.



STEVE:  Oh, well...



LEO:  I mean, it feels - I mean, it's fine.



STEVE:  Well, yes.  And of course everyone knows about VNC.  VNC is the...



LEO:  It's a little slower.



STEVE:  ...is open source.  It is also cross-platform.



LEO:  Right.



STEVE:  That's the problem with Remote Desktop is it's a Windows-only technology.



LEO:  Although there are clients for other platforms.



STEVE:  Ah.  Well, in that case...



LEO:  So I could use my Mac to surf to my Windows machine using Hamachi, and then use my Windows machine on my Mac desktop as if I were using a Windows machine, including surfing out.  So let's step back and talk about the process of putting Hamachi on, what you need to do to install Hamachi.  You need a - there's a client, and there's a server; yes?



STEVE:  No.  It's just - it's a single...



LEO:  Single program.



STEVE:  ...a single program.  The website is - and if you just put Hamachi into Google you can get there.  But it's...



LEO:  H-a-m-a-c-h-i.



STEVE:  It's www.hamachi.cc.  Alex is up in Vancouver, and so he's got a .cc on the end of his URL.  You'll go to his site, download his client, currently for Windows or Macintosh - I'm sorry, Windows or Linux, and then Mac is coming soon.  Installing couldn't be any easier.  You simply run the setup, you go through a little wizard-based install to basically, you know, tell it where you want to load it on your hard drive.  It sees that it's being installed in a system that it hasn't installed before.  There's a negotiation with the server where it assigns it a unique IP.  Your client produces its own asymmetric key pair, which it then uses to perform strong authentication.  You do that on a couple other systems.  Now, one trick is, he is assigning IPs sequentially.  When I installed it on my second machine, for example, one of mine was 5.11.66.114.  That was the first one I installed.  What's very cool is I can tell you the IP.  It doesn't matter.  You can't get to 5.



LEO:  Right.



STEVE:  I mean, it doesn't exist on the Internet.  So, and what's really cool is my machine will always be 5.11.66.114.  When I installed it on a second machine, it was, like, .120.  I thought, oh, they're, like, so five people had installed it between the time that I had.  So I quickly installed it on three more machines so that I could get IPs...



LEO:  Sequential numbers.



STEVE:  Exactly, that I could get IPs that were sort of near each other.



LEO:  Now that we've made it famous, it may not be easy to do.



STEVE:  You're going to be quicker.  But...



LEO:  So the Hamachi server, his server is assigning the IP addresses and keeps track of those.



STEVE:  It's doling them out.



LEO:  So each one is unique.



STEVE:  And it's also, when your client builds the asymmetric key pair, it's then used for authentication and encryption.  The client gives its public key to the Hamachi server so that it's able to then distribute it to anybody else who you authorize to connect.  So you install it in a few systems.



LEO:  And you don't have to.  You could have it only on one system.  But it's nice to have it on a bunch of systems.



STEVE:  I don't - who would you talk to if you only...



LEO:  Well, okay.  You only need it on a laptop and a desktop.



STEVE:  Oh, exactly.



LEO:  But you installed it all through your office and in your co-lo and everywhere.



STEVE:  Yes.



LEO:  Why did you do that?



STEVE:  Well, because I wanted to play with it.  I wanted to get an understanding...



LEO:  But you can also log on to any of those machines now from your remote client.



STEVE:  Well, yes.  You can ping them.  It supports Windows browsing directly.  So you can right-click on any machine in the list and browse the directory on those drives, do some standard Windows filesharing drag-and-drop.  If you have...



LEO:  Do you have to set up filesharing in Windows?



STEVE:  No, no.



LEO:  Hamachi handles that.



STEVE:  Because it's inside Windows already, so you don't have to do that explicitly.  So once you've got it installed on a few machines, then you start creating one or more of your own networks, where you define which machines get to participate.  So, for example, you would create a network - I created Gibson Research Corporation.  It wants a password.  So I went to my passwords page, came up with this nasty 63-character random ASCII thing and dropped it in.  Well, of course, because Alex is a crypto guy, it digested the 63 characters with no trouble at all.  Nobody will ever get that password.  I mean, I won't, if I ever lose it.



LEO:  Yeah, don't lose it.



STEVE:  So I put it in a text file.  I took that to a couple other machines, joined them to the Gibson Research Corporation network...



LEO:  You only have to authenticate once, though; right?  I do remember that, okay.



STEVE:  Exactly.  Well, and in fact, one of the questions I asked him just before I came up here to Toronto to do this podcast with you is I said, wait a minute, what if I was at the TechTV studios, and I wanted to join a TechTV machine temporarily to my prized, super-secret, I don't want to, like, risk anybody ever getting in there network.  What do I do afterwards to, like, remove all trace?  Well, again, they did this thing perfectly.  The password that I use is never written to the hard drive.  It's hashed into a long token.  And that's then used to validate this machine against my network.  So then I would connect.  I'd see all my machines there.  I have now, by, you know, roaming around - oh, and since it's free, I don't even have to carry it with me.  I go to any machine.



LEO:  Just download it.



STEVE:  I just download it, install it.  I would have to keep my wacky 63-character key around.  So that allows me to join a machine into my super-secret private network, do whatever I want to.  When I unjoin it, it can never come back because the key is not stored locally.  It's only used to authenticate against the server.  So I never need to worry again about someone following in my tracks and reconnecting to my network after I've gone.



LEO:  Just uninstalling Hamachi is sufficient to...



STEVE:  Or actually, as people will see from the user interface, there's a Join and a Create Network.  And then there's a Leave Network.  So if I just left my network...



LEO:  You could even leave Hamachi there.  



STEVE:  I could leave Hamachi there.



LEO:  So we'll download - there's a single file we download that we install.  We authenticate.  We create a key.



STEVE:  Actually it's all done for you.  You don't even see any of that.



LEO:  It's all wizards doing it all?



STEVE:  All of that is just done transparently.  It's literally a zero configuration peer-to-peer system.



LEO:  It traverses firewalls and NATs without - absolutely transparently because...



STEVE:  Deeply encrypted.



LEO:  Yeah.



STEVE:  So, for example, it's our solution for hotel travelers, for Wi-Fi users.  The one gotcha is you've got to have a machine somewhere for you to connect to.  So you'd need to leave your home computer running with Hamachi on in order for you, in a Wi-Fi hotspot or in a hotel, to connect to it.  But it is absolutely free.  Now, they will have a premium version that will, for example, add some additional features.  For example, it'll run as a service in the background, so you won't see it as an app on our desktop.



LEO:  Oh, it is an app right now.



STEVE:  Yes.  The free one won't relay at all.  But there are some really nasty NAT routers.  If you had a recalcitrant non-peer-to-peer-friendly NAT router on each end that Hamachi would not be able to negotiate a tunnel directly.  So you would have to use the premium version...



LEO:  Which would provide that third point that you'd connect to.



STEVE:  Yes, in order to use Hamachi as a relay.  And that's really fair, too, because...



LEO:  It's fair because you're using their bandwidth.



STEVE:  You're using their traffic.  You're using their bandwidth, exactly.



LEO:  So normally you're not.  Normally you only use it to authenticate, to handshake.  Once the handshaking is done, you have a direct peer-to-peer connection between your home and...



STEVE:  And it's fast.  It's as fast as it could be between those two endpoints.



LEO:  And now the only addition is - okay, so that gives me access to my computer at home from the road.  And as you said, if you want to surf the 'Net or go out, you would just run Windows Remote Desktop, and in effect you'd be using your home computer, kind of like a GoToMyPC solution or a Citrix solution.  You'd be using your computer to do the surfing.



STEVE:  But for free.



LEO:  But for free, right.



STEVE:  Because you're using your own system instead of somebody else's system.



LEO:  Is it a tunnel?  It's a tunneling solution.



STEVE:  It is.  It is a virtual private network, peer-to-peer secure tunneling system that, I mean, I can't find a single fault in it.  I mean, I'm using it.  I'm in love with this thing.



LEO:  And it's absolutely free, from Hamachi.cc, if people want to download it.  And we're not done with VPNs.



STEVE:  No.  We've got one more week.  We're going to talk about...



LEO:  Well, what more is there to say?  You've come up with the holy grail, Steve.



STEVE:  Well, there's one more solution we have to talk about because it's very popular, and that's the OpenVPN system.  And that's next week.



LEO:  Okay.  And we also have found a commercial provider, HotSpotVPN, that works very well.



STEVE:  Yeah.



LEO:  Using OpenVPN.



STEVE:  We're basically, so next week we're going to talk about, I mean, I hope everybody listens to this.



LEO:  I'm going to install Hamachi right now.



STEVE:  We'll go to www.hamachi.cc.



LEO:  Yeah.



STEVE:  Play with it.  It is a super cool system.



LEO:  Well, and because I run a web server that runs Linux, I can install it on my Linux web server.  And all of that stuff will be - in fact, my web hosting company won't block it because it looks like normal traffic; right?



STEVE:  Well, that's the other - yes, that's exactly right.  The other cool thing is that, because it's running through a tunnel, no hotel can block it.  And say that somebody working for a corporation had, you know, Gestapo firewall people who didn't let anything in or out, yet you wanted to access your network at home.  You know, Hamachi would allow you, if you have the ability to install Hamachi...



LEO:  As long as you can install software; right.



STEVE:  As long as you can install software on your corporate computer, this would allow you to literally, on your desk, have access to your home computer.  Also...



LEO:  You can't run this off a USB key because it does have to modify Windows.  You couldn't just run it as a standalone application off a USB key.



STEVE:  Don't know.  I think it installs information in the registry.



LEO:  It must modify Windows.



STEVE:  Or maybe in the directory.  I'm not sure.  The other thing is, we've had some people, for example, in prior months of TechTV, wanting - gamers who wanted to know how they could - how he could set up his Xbox to game with somebody else.  And the only solution we had at the time was VPN endpoint routers, to use VPN endpoint routers.



LEO:  This would work for that.



STEVE:  Hamachi is a perfect network for gamers.  Okay, so next week we're going to talk about OpenVPN in all of its various forms.  Because the reason I want to talk about it is there's so many ways it can be used, the HotSpotVPN being one of them, a commercial service.  And there are a number of others that are also completely free.



LEO:  It sounds like Hamachi is something that everybody would want to set up now, just to establish a connection between you on the road and your home system.  If you were able to run Remote Desktop, you could then use it to do the kinds of things you would do at your home system, like surf the 'Net and so forth.



STEVE:  Exactly, and that gives you Internet access.



LEO:  That gives you your Internet access.



STEVE:  Yes.  And also access to all your files at home.



LEO:  Now, when I log on, I use SSH to log on to my web server.  I'm essentially doing the same thing.  I'm setting up a tunnel.  The only difference is, of course, I have to leave port 22 open so that I can log in, and I have to have - and I only have command line access to the server.



STEVE:  Well, the other problem is, SSH is a TCP protocol.



LEO:  Oh.



STEVE:  Tunneling TCP through TCP is problematical because TCP is itself an error correction guaranteed packet delivery protocol.  When you tunnel one of those protocols within another of those protocols, they're not talking to each other because they're sort of separate sheaths that are carrying your data.  You can get very bad performance when you tunnel TCP in TCP.  This is one of the things that's given VPNs a bad name.  The other...



LEO:  They seem slow because they're trying to do that.



STEVE:  Well, yeah.  In fact...



LEO:  Well, what's the solution to that?



STEVE:  ...the computers are fighting.  The solution is to use UDP as the transport protocol.  There you're sending packets only when you need to.  So the internal TCP protocol gets encapsulated in UDP, and that's what Hamachi uses.  And also because UDP translates through NAT routers and traverses NAT routers far more easily.



LEO:  So it's - in fact, and I saw you, you gave me a little demonstration.  You were sitting here on the set in Toronto, and you were logged on to your computer in Irvine, California.



STEVE:  Looking at my desktop.



LEO:  And I have to say it looked every bit as fast as if you were actually there.  Now, that's partly because Windows Remote Desktop is efficient, but also because that UDP transport is not slowing you down.



STEVE:  It's the right way to do a VPN.  Now, the one other glitch that VPN - the thing that hurts VPNs is, when you encapsulate packets, you make them bigger.  And so what can happen is your packets can be fragmented because they won't traverse the Internet because they end up being too big when they're wrapped in the packet.  Hamachi fixes that and knows how to change the stack in your machine so that the TCP packets it generates are already shrunk, so that when it's encapsulated, it still fits in within what's called the MSS, the Maximum Segment Size, so that it won't fragment the packets.  So you get, I mean, really good performance.  In fact, I have, using Remote Desktop before, I have forgotten sometimes that I'm not on my computer.  I mean, it's just not a painful experience.



LEO:  For Windows and Linux users, this is just a remarkable solution.  I mean, it gives you complete remote access to your home system.  And because you put all of your computers on this thing, you've got a menu of all the computers at home that you can access.  In fact, not only does it give you such good access, you were able to shut down one of those...



STEVE:  Here it comes.



LEO:  ...computers by accident.



STEVE:  I knew.  Yes.



LEO:  Can't get to it right now.



STEVE:  I meant - I was reconfiguring it, and I meant to remotely choose Reboot, and I chose Shutdown, and it powered off in Southern California.  It was like, oooh.



LEO:  And there's no way to turn it back on from here.



STEVE:  Nope.



LEO:  So that computer is now inaccessible.  So one little word of warning.  It's so much like the real thing, you could actually make a mistake and shut it down.



STEVE:  You need to be careful, yeah.  You don't have the power button next to you for the computer that you're talking to.



LEO:  It's a really - it sounds very - sounds like it is the holy grail, very close.



STEVE:  I had my fingers crossed while I was vetting the security architecture, thinking, oh, this, I mean, oh, and the UI is polished.  I mean, it's a professionally assembled, beautiful piece of work.  I mean, I can't recommend it highly enough.



LEO:  He's giving it away for free, but the good news is - and I say this is good news - he has a business model where he can make money on it, and that means he will keep developing it, and there's a chance...



STEVE:  Well, and what's interesting, too, is...



LEO:  It's a real product.



STEVE:  ...he had said that he will sell the server side also.  It's hosted on Linux.  So he's not just going to be the sole source of the Hamachi protocol.



LEO:  That's a good idea.  If I'm a company, and I want to set up, you know, have a large number of telecommuting workers, I create a Hamachi server at our home base, and I control it all.  I don't have to worry, I know it's secure because I'm in charge of it.  Boy, that's a great idea.



STEVE:  Yeah.  And he's got online forums where people can ask questions.  I'll be surprised if anybody has a question.  I mean, it is so simple to use.  The graphics are beautiful.



LEO:  I got a question.



STEVE:  You can see the status of the different machines.  Yeah.



LEO:  When is the Mac client coming out?



STEVE:  What he said is, it's at very late beta stage now.  I've never had a problem with it.



LEO:  That's encouraging.



STEVE:  Yeah.  So it's, like, it's almost there for Windows and for Linux.  And as soon as that happens, he's going to do the Mac.  So he's absolutely committed to a Mac-based platform.



LEO:  For Mac to work you'd need something like Windows Remote Desktop.  There is Apple Remote Desktop, but it's fairly expensive.



STEVE:  Or to hook your Macs together.



LEO:  Yeah.  Well, yeah, absolutely, you could do it that way.  That's great.  Hamachi.cc.  And of course the show notes and a 16KB version of this show, as well as transcripts, are all available at GRC.com/securitynow.htm.



STEVE:  There's one more issue I have to cover because it comes up so many times.  I talked a couple episodes ago about the idea of, well, about the problem people are having when they have followed our advice and beefed their Wi-Fi, their wireless technology in their home, up to WPA, or in some cases just added full, you know, the strongest WEP encryption that they could if they don't have WEP-compatible hardware.  Other stuff that they had, like their TiVos, for example, or PDAs...



LEO:  Don't work.



STEVE:  ...that don't support, exactly, that don't support the WPA are in trouble.  I mentioned, oh, well, there's nothing to keep you from running two wireless networks at home.



LEO:  One secure and one relatively insecure.



STEVE:  Yes.  And when I said that, you asked me right then on the spot, what would the architecture be?  Which router would go where?  Well, I punted the question because...



LEO:  You fooled me.  I thought you answered it.



STEVE:  No.  I had to think about it extensively.  Because of something known as ARP poisoning, it's different to answer the question if we assume everybody is passive than if we assume you could have an active attacker who could reorganize your networks by sending ARP replies.  Very early in 2006 we're going to do a podcast about ARP poisoning and what that's all about and why it's a concern.  What this means, though, for now, is - and I've gotten pencil and paper and really thought this through.  If you put the insecure network inside and the secure network outside, the problem is it - because, as we know, NAT routers are like one-way valves - the insecure network would have upstream access to your secure resources, which is a bad thing.  If we reverse it, if we put the insecure one upstream and the secured one downstream, sort of inside, you still have a problem because now the insecure network is on your perimeter, and it could potentially see the traffic coming from your secured network.



LEO:  And it could be ARP poisoned.



STEVE:  Well, exactly.  Passively, the response from passive listening is different.  But in this day and age we need to assume, you know, any possible attack, certainly, that we know about.  So the answer is, anyone who wants to run two wireless networks, they have to...



LEO:  Need three routers.



STEVE:  Yes.  They do.  You have to have a Y architecture.  You have your main router on the border that is not - that's just - it's a wired router.  You then plug each of your wireless into it.  So essentially you'd have three subnets.  You'd have...



LEO:  Otherwise your traffic's passing through the insecure network.



STEVE:  Yes.



LEO:  This way you can make it a tributary.  The insecure network is somewhere off by itself.



STEVE:  And ARP packets never traverse a router.  ARP packets - ARP is a nonroutable protocol.  It's only used, after all, for associating Mac addresses and IPs within a LAN.  So basically you would have three LANs.  You'd have the outside LAN that feeds the two inside LANs.  So you'd have 192.168.0 something on one of them; 192.168.1 dot something, and 192.168.2 dot something.  And so that's the architecture.



LEO:  Are you going to draw this up and put it on the website?



STEVE:  Yes, we're going to do a page.



LEO:  Do a little map.



STEVE:  In fact, the page I showed you earlier that we'll be talking about in the show...



LEO:  Yeah, the ARP poisoning...



STEVE:  Yeah, that was a page that grew out of my need to lay some foundation for this.



LEO:  All right.  GRC.com/securitynow.htm.  We thank the good folks at AOL Radio for providing the podcast channel which this show and all the other TWiT shows appear on, AOLmusic.com; and of course they also donate bandwidth, which saves us a packet of money.



STEVE:  Makes it possible.



LEO:  I don't even - it makes it possible, that's the truth of it.  We'll see you next week on Security Now!.  We're going to talk about OpenVPN and a good commercial solution that is very easy to implement.  In fact, I've been using it, and I've been very happy with it.



STEVE:  I am, too, yes.  I wanted to give it a couple weeks of play before we got everyone revved up for it.



LEO:  But meanwhile, enjoy your sushi treat from Steve Gibson.



STEVE:  Oh, it's so good, Leo, oh.



LEO:  Now, next week is Christmas week.  So we might - I guess we'll just do the podcast as usual.



STEVE:  Yeah, works for me on Thursday.



LEO:  Okay.  I might have to do it a little earlier because I have to go visit family.



STEVE:  I'm around.



LEO:  Well, I'll tell you what.  We'll deliver it on Thursday, by hook or by crook.



STEVE:  Absolutely.



LEO:  And then we'll be back the week after Christmas because, well, we have no life.  Thank you.  On behalf of Steve Gibson, I'm Leo Laporte.  Thanks for joining us.  Stay safe, stay secure.  We'll see you next time on...



STEVE:  And have some Hamachi.



LEO:  Have some Hamachi on Security Now!.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#19

DATE:		December 22, 2005

TITLE:		VPNs Three: Hamachi, iPig, and OpenVPN

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-019.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  Leo and I wrap up our multi-week, in-depth coverage of PC VPN solutions by discussing some aftermath of the zero-configuration Hamachi system; introducing "iPig," a very appealing new zero-configuration VPN contender; and describing the many faces of OpenVPN, the "Swiss army knife" of VPN solutions.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 19 for December 22, 2005:  VPNs, The Final Chapter.



STEVE GIBSON:  The final frontier.



LEO:  The final frontier.  Steve Gibson, Happy Holidays to you.  Thanks for joining us, even though we're so close to Christmas, for this Security Now! episode.  You helped us out on TWiT, too, on Sunday.  That was nice.



STEVE:  We're doing it a little bit early this week...



LEO:  Yes.



STEVE:  ...to kind of give people some clearance from the holidays.



LEO:  Give me some clearance.



STEVE:  We're not going to miss a beat.  We'll do one this week, and then of course Episode 20 will be next week, which will be our Mod 4 Q&A episode.



LEO:  Right, our usual we-answer-your-questions.  So get them in to GRC.com/securitynow.htm.



STEVE:  Oh, Leo.  After...



LEO:  That was not a good thing to do.



STEVE:  Oh, God.  After last week's Hamachi, you know, I used to be saying, oh, yeah, I'm keeping up, I'm reading everything that's coming in.  I am so buried under stuff.



LEO:  Yeah, that's all right.  People will have to - do, I'm sure, understand that you can't respond to everything.  And we'll try to respond to as many as we can.



STEVE:  I can't even read everything at the moment.  It's just...



LEO:  Yeah, it's amazing.



STEVE:  It's been phenomenal.



LEO:  Well, before we get into the final chapter of VPNs - and we're going to talk about OpenVPN this week - let's follow up on a few things from previous weeks, some corrections, updates, and Hamachi updates.



STEVE:  Yeah, some errata.



LEO:  Errata.



STEVE:  First of all, everybody is writing to me about this article from earlier in the year, talking about cracking Wi-Fi protected access, cracking WPA.  And, I mean, I just - people keep posting this link to me.  I meant to bring it up last week; but, as you know, I forgot my little errata notes at the beginning of the show, so we had to wing it.



WPA has not been cracked.  WPA is not prone to cracking.  The article is at Informit.com.  And it was back from May, I think, or maybe it was March.  No, yeah, it's March.  So, you know, nine months ago.  It's a two-part article that goes into excruciating detail about brute force attacks on WPA.  Well, that's what we've talked about.  We know that WPA is susceptible to an offline brute force attack, that you can capture a couple of packets and then take those home with you and pound on that data, trying either dictionary attacks or every possible key.  Which is why the passwords page at GRC.com was created, to give people these really nasty long WPA keys that nobody is going to be able to, you know, in any reasonable amount of time, recreate.



So I want everybody who's been concerned about what this article means - and by the way, I mean, I don't blame anyone for being confused.  This thing was deliberately created, it seems, to be extremely confusing and alarming.  But WPA is not cracked.  There's no simple way to breach it as long as you use a really good passphrase.



LEO:  It is kind of a shame.  I guess Informit decided, well, let's go for the big headline, get a lot of attention, a lot of traffic to our page.  But everybody knows, I mean, many protocols, not all, but almost all protocols are subject to brute force attacks.  That's, you know, bad password, no security.  We know that.



STEVE:  Yeah.  And what you hope is that it's not subject to anything else, which is clearly the concern that this article raised.  Now, also we've already begun to see the emergence of WPA brute force cracking tools floating around in the hacker sites.  So that's something else that I saw in the last couple weeks is that we're beginning to see that emerge.  So as we told people before, WPA is safe as long as you use a really good passphrase.



LEO:  GRC.com/passwords.  And you can get a good one.



STEVE:  Yup.



LEO:  All right.



STEVE:  Now, one other little loose end was we've talked about the problem of distributing those super-secure passphrases and talked about the idea of using the standard little USB, you know, drive dongle.  One other thing occurred to me, and that is that those little mini CD-Rs would work.  You could take maybe 10 passwords and just burn them on a CD-R.  There they're going to be involatile.  It's easy for you to move them around from machine to machine.  Every machine that you run across is going to have a CD-ROM drive now.  And that way it's extremely simple to move this really long password that you wouldn't want to have to type in manually.



LEO:  Of course, the CD-Rs, you're not going to change it very often.  But I guess that's kind of the idea anyway.



STEVE:  And that's the whole idea is you don't want to change this super-bizarre password.  And in fact, that's why I was suggesting you might put 10 of them on there.  You might start off just using the first one.  If for any reason - you, for example, had to disclose it to a friend who came over, you know, for example, move them onto your WPA network by giving them that password.  Then, if you wanted to, you might feel more comfortable switching to your number two password that's already recorded on the CD-R throughout your network, so that you've essentially obsoleted that first one.  You've removed it from being able to have any access to your network.



LEO:  We were talking about that at the meet-up, something kind of related, which is this reverse - this cracking of the MD5 hashes.  Somebody put out a CD or a disk, I guess it was a hard drive, with all of the reverse hashes, right, so you could do a reverse lookup?



STEVE:  Well, yeah.  It's called a "precomputation attack."  And we're seeing that both for MD5 and SHA1.  The idea is that those are very secure hashes.  They have been weakened a little bit through recent cryptanalysis.  But they're still, you know, they're widespread, in extreme use everywhere.  What's happened is, hard drives have gotten so big and so cheap.  And of course the Internet has happened.  What's going on is that people are precomputing the hashes.  They're doing basically a brute force...



LEO:  In reverse.



STEVE:  Well, they're doing a brute force use of the hash forward, and they're storing the value and its corresponding hash on a hard drive.  Then what you do is you go to a website that's got this massive database of precomputed hashes.  You give it the hash; it gives you the password.  So it's not - it hasn't cracked the hash, it's just done them all.



LEO:  That's pretty amazing.



STEVE:  Well, it's...



LEO:  Once again, that's why a good, long, random passphrase or password is the best solution.  Because they're not going to brute force something like that.



STEVE:  Exactly.  It's going to be way down after the end of the life of the universe...



LEO:  Before they get to it.



STEVE:  ...before they get to it.  Now, also in a prior episode I mentioned the idea of creating a secure connection to webmail.  That is, we were talking about, you know, SSL at the very beginning of our VPN conversion, how, if you're using an SSL connection to a remote server, your communications cannot be eavesdropped on.



LEO:  That's how Yahoo! Mail works and a number of other clients.  And you can even use a POP client that way if your ISP supports it.



STEVE:  Exactly.  But in the case of webmail, some people were having some problems doing this with Google because it turns out that Google has a funky way of bouncing you from your log-on page, which is secure, to a non-secure session, once you've logged on.  So I did a little poking around.  And it turns out that, if you use the proper URL, among many ways of getting Google Mail - for example, if you use https://mail.google.com or https://gmail.google.com, then, for whatever reason, you'll get a secure connection when you're actually logging on, and it will bounce you to a continuing secure interaction with the server subsequently.  But other ways of entering bounce you over to a non-secure connection.  So if you use https://mail.google.com or https://gmail.google.com, it will see that you want a secure connection and leave you that way.



LEO:  Good to know.  All right.  That's what you should bookmark and use that every time.



STEVE:  And in the last little bit of stuff that I have been meaning to say for weeks but keep forgetting...



LEO:  You got your notes now.



STEVE:  I do, baby.  I'm home.  We've never told everybody who's listening to Security Now! that GRC runs, and has for years, an extremely useful set of security-related newsgroups.  Our news server is news.grc.com.  And if you - this is not a web-based forum.  It's real, you know, Usenet-style news reading.  But most web browsers, you know, IE and Opera and, I presume, Firefox, do have built-in Usenet newsreaders.  So...



LEO:  Actually, Firefox does not.  But there are - well, it kind of does.  It's got a funky way of doing it.  But you can add an extension like Sage or Fizzle to give it that capability.



STEVE:  Okay.  Well, I'm not a big fan of web-based forums because I've become addicted to, like, real Usenet-style news, where you've got lots of newsgroups; you've got well-threaded, very clearly threaded dialogues.  You can see which postings you've read and so forth.  My favorite client is free, and that's Gravity, the Gravity newsreader for Windows that people can find on the 'Net.  And there are other ones.



LEO:  Actually, I want to correct myself.  I was talking about RSS.  People use Thunderbird for newsgroup reading, as opposed to Mozilla, or Firefox.



STEVE:  Ah, okay.



LEO:  Yeah.  But you like Gravity.  That's a good - I'll put a link in the show notes to that.



STEVE:  I like Gravity.  Also, on our main navigation bar at GRC.com, at the top of the home page or the bottom of every page, the far right link there is called Discussions.  We have a page at GRC.com/discussions.htm.  That will give people sort of some foundation in this.  I have a step-by-step guide for setting up Internet Explorer, or I guess it's Outlook?  Oh, yeah, I'm sorry, it's Outlook Express that is both email and has the...



LEO:  Newsreader, yeah.



STEVE:  ...newsreader.  So I take them through a step-by-step.  We have a little bit of some fancy stuff going on for the way you log on, that I explain, because we have something that no other newsreader has, which is an ability to allow people to securely cancel their own messages.  I create a hash of their username and password that they use for logging on so that they're able to securely delete their own postings, if they want to, without anybody else being able to.  Anyway, there's a bunch of technology I've actually been working on for years for our own newsgroups.  So I wanted to tell people.  Among our listeners, I know from the feedback we get, we've got real security junkies here.  And there is a really super community of people who hang out on news.grc.com, my news server there.  And in fact, the Discussions page does allow you to use a web reader, a web interface to just sort of browse around the newsgroups, if you weren't sure you wanted to go to all the trouble of setting up a newsreader and participating.  You're not able to post from there, but you can browse around, look and see what the newsgroups are.  Oh, and I just created a Security Now! newsgroup.



LEO:  Great.



STEVE:  That is there, it's been there for a few days, and it'll be entertaining specific dialogue relating to whatever we're talking about on Security Now!.



LEO:  So GRC.com/discussions.htm.  You can read them online if you want to participate.  We'll put a link to Gravity, Steve's favorite newsreader; but there are many, many choices, of course.



STEVE:  And if you've got Outlook Express with Windows, you've already got a newsreader built in.



LEO:  That's cool.



STEVE:  Okay.



LEO:  Hamachi.  Let's finish up from last week because that was very popular.



STEVE:  Yes.  Now, the good news is, a lot of people fell in love with this.  Alex Pankratov, Hamachi's chief lead developer, the guy that I was talking to for several weeks before talking about this last week, sent me a link from this delicious server that shows all the people that are linking.  And there was a phenomenal reaction to number of people who are interested in Hamachi following our talking about it last week.  I've got one posting here that someone sent a few hours ago, who posted to our site saying, I do a lot of traveling and have always had issues with using the wireless connections at hotels.  I was so happy to have heard about Hamachi that I had it installed and running before I finished listening to your podcast.



LEO:  That's nice.



STEVE:  You are right.  Hamachi rocks.



LEO:  Very easy on Windows.  A little more tricky, I did it on a Mac, but you have to download some additional software and do some configuration.  But I started using it right away, and I love it.



STEVE:  Are you talking about Hamachi on the Mac?



LEO:  Oh, I'm sorry.  It's something else.



STEVE:  You're talking about OpenVPN.



LEO:  Forget I mentioned that.  I'll edit that out.  So Hamachi is very cool.  There is no Hamachi for the Mac, but that's coming.



STEVE:  So he said, you're right, Hamachi rocks.  I'm leaving for Europe for a three-week vacation.  And now, using Hamachi and an open source VNC, I have a way to securely connect to my home PC, transfer files, browse the web, and check email.



LEO:  Wow.



STEVE:  So there's an example of the good news.  Now, there were some disappointed people, who, for example, are behind very restrictive corporate firewalls, or behind, like, ISP proxy servers.  So it's important to say that, good as Hamachi is, there certainly are Hamachi-hostile environments where you're not going to be able to use Hamachi.  Unfortunately, those people who were really excited by last week's podcast about Hamachi and downloaded the client, hoping that they would be able to immediately connect to their home machines, in some cases they were.  In some cases they found that, for whatever reason, for example, their corporate firewall - I saw some posts where their corporate firewall allows traffic out through port 80 and 443...



LEO:  And that's it.



STEVE:  ...only.



LEO:  Geez.



STEVE:  You know, for example, DNS goes to the corporate DNS server.



LEO:  Right.



STEVE:  SMTP and POP for transferring email, or in fact maybe IMAP, goes to, again, the corporate local mail server.  And they have no access to anything other than ports 80 and 443 for browsing the web.  So in that scenario, they're going to need a different tool.  The good news is, we've got a different tool, which we will be talking about.  So there were people for whom Hamachi was not, you know, the holy grail that we've been talking about.



LEO:  Hey, if I were a corporate IT guy, I think blocking all ports but 80 and 443 sounds like a pretty darn good idea.



STEVE:  Oh, I agree.



LEO:  To be honest with you, I would do that.



STEVE:  In fact, some people took exception, understandably, to my saying last week, hey, you know, you could run this at home and on your desktop in your company and get...



LEO:  And they'd never know what you were doing.



STEVE:  ...and, well, and get access to your home.  And of course the reciprocal works.  From home you could get access into your corporate network.  People were annoyed that I, as a security person or security-conscious person, was suggesting the use of this for accessing corporate networks remotely.  And so your point is well taken, Leo.  You would hope that a corporation already has dealt with this because, you know, it's been possible for a long time using all kinds of techniques.



LEO:  And we're not advocating doing an end-around on your IT security because the next Zotob worm, if you're the vector that brings it into the corporation, they're not going to like you too much.



STEVE:  That'd be bad.



LEO:  That'd be bad thing.  One other note I got from a good friend and Perl wizard, Randal Schwartz, he's the author of "Learning Perl" and really a great guy, had a couple of questions for you.  First of all, he said, Hamachi's not open source.  How can we trust it?



STEVE:  Ah, well, that's a very good point.  I mean, it's one of the things that made me anxious and continues to make me anxious.  I'm going to end up probably over on OpenVPN, which is how we're going to wrap up this episode of Security Now!.  But Hamachi is - I'm convinced that Alex has really designed this system exactly as he's told me he has.  He's got years of experience with security, implementing IPSec tunnels, you know, classic VPN solutions.  I couldn't feel any better about this than I do, short of doing a complete source audit and, you know, build verify and all that, which is just not practical.  So it's certainly the case though that, well, I mean, you know, we're trusting Bill when we use Windows.



LEO:  Right.



STEVE:  We're, you know...



LEO:  But that's why a lot of people say use open source security software and only open source security software because you don't know what government backdoors are in there and so forth.  Things like PGP, you know what's in there.



STEVE:  Well, that's certainly the case.  And in fact, I think you made a comment, I don't remember if it was before the podcast or under your breath, that was like, you know, Alex Pankratov sounds like a Russian...



LEO:  Who is this guy, KGB?



STEVE:  Exactly.  Who are we - well, and in fact, it's why I went around and around with him to make sure, for example, that the asymmetric key pair generated by the client was never given at any point, was given to the server or left the client, so that it wasn't necessary for us to trust the Hamachi server.  And, you know, I'm sure Alex has told me the truth, but I have no proof of it.  So listeners should certainly be aware of that.



LEO:  And he points out, and I'm sure we'll talk about it at some point, that the next version of OpenSSH 4.3 will add support for tunneling.  Essentially you can set up an OpenVPN-type tunnel using SSH.



STEVE:  Well...



LEO:  Which'll be nice.



STEVE:  It'll be nice; but again, we have to be careful with details because OpenVPN has done something very correct that Hamachi has also done very correct, which other solutions have not.  And that is, because it's - I assume it's OpenSSH, so it's a TCP tunnel.



LEO:  Right.



STEVE:  And we've talked before about the problems of tunneling TCP through TCP.  Whereas Hamachi is UDP based, and OpenVPN in its default configuration is UDP based.  And that's a better transport protocol because you don't have the problem of two reliability-guaranteeing protocols like TCP interacting with each other in a bad way.



LEO:  And as you pointed out, that's one of the reasons people don't like VPNs.  They seem slow and sluggish.  It's because it's TCP over TCP.



STEVE:  Well, and the other problem is, yes, that TCP optimizes its packet size so that it doesn't fragment as it crosses the Internet.  The problem is, if you encapsulate TCP in TCP, you're making a larger packet because you've got the already maximum-size TCP packet enclosed in another packet that has inherently made it bigger.  So you often have fragmentation problems which can be very severe, meaning that every packet hits the first router that is not able to forward that overly large packet.  It cracks it in half, and the Internet never reassembles those.  So suddenly you've got twice as many packets, twice the opportunity for packet loss and retransmission, and twice the number of packets coming back in that then need to be reassembled.  And some routers will not, because there has been a history of fragmentation attacks, different ways of using fragmented packets to get through firewalls.  Because, for example, a firewall that doesn't have the whole packet can't really check it as thoroughly as it would like to, many firewalls drop fragments because fragments are not supposed to happen.  So this is one way that VPNs can not only have low performance, but actually fail.



LEO:  Good to know.  All right.



STEVE:  Anyway.  One last issue with Hamachi is relative to Remote Desktop.  I was jumping up and down last week about how I was able to log on to my desktop remotely from home, from Toronto.



LEO:  You showed us.  It was so cool.



STEVE:  Yeah, exactly.  I mean, and thankfully, Remote Desktop is a very efficient protocol.  Hamachi has a problem, or I guess actually Remote Desktop has a problem, if the Hamachi client is running with the same user on your desktop that you are trying to log in as remotely.  You get this "This user already logged on" sort of collision, apparently.  Alex has responded to this.  And over in the Hamachi forums there is discussion and the resolution of this problem.  It turns out that, if you run Hamachi as a service, then it runs as the system process as opposed to on your desktop as the logged in user, and then you're able to log in remotely.  So for all the people who have had problems getting Remote Desktop to work as easily as I did, I actually was running it as a system process, as a service.  So it was logged in as the system and not as the user I was logging into it as.



LEO:  Is that dangerous?



STEVE:  It's, no, you are...



LEO:  It's got system...



STEVE:  You are trusting it because it has more privileges in your system.



LEO:  Right.  All right.  We're all caught up; right?  Any more?



STEVE:  The one last issue...



LEO:  Okay.



STEVE:  ...with Hamachi is...



LEO:  We may have to put OpenVPN off till next week.  No, go ahead.



STEVE:  Well, but Hamachi's important.



LEO:  It is.



STEVE:  And it's going to be one of our enduring solutions, I'm sure.



LEO:  Oh, yeah.



STEVE:  Some people are using Hamachi on their own internal networks and have said, hey, I've got all my systems running with Hamachi.  Do I need WPA anymore?  Well, that's a really good question.  If you were sure that you're using Hamachi for your filesharing and to link things together, I could argue that that really replaces the need for internal Wi-Fi encryption.  Remember, however, that you do have the problem of people using your network and, you know, being able to mess with your systems.  You still, even if you've got Hamachi interconnecting your systems, you still have your non-Hamachi'd IPs available.



So there's two problems.  There's the problem of you using the non-Hamachi IP by mistake, if you weren't really careful; and the fact that all the non-Hamachi, the regular native IPs, are still available.  So it's really not okay not to use WPA.  I would not recommend it.  However, one of the cool things about using Hamachi within your network, especially if you've adopted one of the multi NAT router approaches that we've talked about for isolating networks from one another, people who have done that in the past have written to me saying they've got problems because, like, filesharing and printer sharing breaks across routers.  And that's the case because Windows normal filesharing broadcasts will not be moved across routers.  Hamachi does forward broadcasts, and people have reported that, using Hamachi, now they've got their filesharing back, even in complex multi-router configurations.



LEO:  And we also met a number of gamers who use Hamachi.  This might, up to now, have been the most popular use of Hamachi, to turn LAN games into WAN games, which is very cool.



STEVE:  Right.



LEO:  Yeah.  We won't name the person who told us all about that.



STEVE:  Nope.



LEO:  Because of his high-ranking security clearance.



STEVE:  In the military.



LEO:  We won't - shhh, that's enough.



STEVE:  Oh, oops, okay.



LEO:  But I think that's - actually, gamers were the first to really get the value of Hamachi, I think.



STEVE:  Yup.



LEO:  All right.  Shall we talk about our subject for the week, which is OpenVPN?



STEVE:  Not quite.



LEO:  Oh, there's more?



STEVE:  There's one more.



LEO:  One more thing.



STEVE:  I have to talk about iPig, the worst-named but very compelling-looking VPN solution I just started playing with yesterday.  A number of users wrote to me about it.  I tracked it down.  It's www.iopus.com.  The trouble is, for some reason the guy who did this shows a picture of a silver  hardware wireless router on the page for iPig.  And several times I went there thinking, no, no, no, I'm not looking for a hardware solution.  You know, I don't want an iPhantom-style thing.  I'm looking for a client-and-server software package.  Well, that's what this is.  It's got nothing to do with hardware at all.  So I'm not sure why he shows a hardware router on the page, leading people to think that, unfortunately, that's something to do with what his iPig software is.



LEO:  Is it, like, a software version of a hardware router?



STEVE:  Okay.  It is extremely cool.  I ran his server - he has a free server and a free service.  I ran his server on my system.  I installed his client on my laptop.  I then connected to my - oh, I also had to forward a port from my router through to the listening port on my server.  So there is that aspect that anybody who's going to be running a server on their LAN needs to be aware of.  Hamachi avoids that by doing outbound-directed NAT traversal.  So that's not a problem.  But anyone using OpenVPN or using iPig will need to open a port and forward a port through their router, also through their firewall, if they've got one, so that the program is able to answer incoming calls.  I then, using this free client-and-server solution, I connected to my server.  I ran Remote Desktop.  I connected to my fileshares.  I talked to other machines in my own private LAN and accessed the Internet back out through my Internet connection.  I mean, it is the holy grail that we were looking for.  Unfortunately, it's called iPig.



LEO:  And it's not free.  Or is it?



STEVE:  It is free.



LEO:  It's free.



STEVE:  It's completely free.  His server-side unit will allow you to define five accounts and presumably have five users simultaneously using it.  I can't imagine why that's any practical limitation.  He also has a free service.  You can use his server with a five-gigabyte limit for an account.  And - which is, I mean, would last you years if you were just using it for email.  If you were trying to do something, you know, like using BitTorrent or something, that would be a problem.  You would burn out that account before long.  He's thinking about going to a paid service, like $29.95 per year for hundreds of gigabytes, which solves that problem.  So it's really an interesting solution.  You use the free iPig - which I hate saying, but there it is - iPig client.  You connect to his server.  I mean, it's a simple download.  You connect to his server, you've got encrypted access from any hotspot out to the Internet.  And it's free.  Or...



LEO:  Well, is this better than OpenVPN or - I mean, PublicVPN or HotSpotVPN or one of the commercial services?



STEVE:  Well, okay.  What he's doing is, he's redirecting.  He runs a little driver in the client that redirects your traffic through the connection the client has made to your server.  Then it goes out over the Internet.  Now, the problem with this is that the traffic is going to be prone to proxying and NAT problems.  Unless he's dealt with that.  I've got a dialogue open with him now.  His name is - he's a neat guy in Germany, they're based in Germany - Mathias Roth.  I was concerned about the security aspect, so I opened a dialogue with him.  We went back and forth actually this morning.  And if anyone wants to go to the iPig forums, they'll see my posting and the thread between Mathias and myself, talking about exactly what the security protocol is.  Because I did some packet sniffing last night, and I saw that my username was in the clear, followed by a 256-bit token.  And I was concerned that that might be the key.  He uses 256-bit AES encryption, which is very strong.  And over the course of the morning, going back and forth with him - he's gone to sleep now because he's in Germany, and we're going to continue our discussion when he wakes up in the morning, his time.



Anyway, he did everything correctly.  His system is prone to the same kind of brute force security attack that WPA is, or any preshared key technology is.  But it's very clean, it's very simple, and it looks fine to me.  So you download his free iPig client.  You connect to his server.  You've got - wherever you are, hotspots, hotels, you name it - you've got up to five gigabytes per account of access.  You would then have to delete the account and create a new one, and you've got five gig more.  I'm hoping this works for him and that people will instead, once he offers a for-fee service, will consider using that.



The other cool thing is, using the same technology, anyone can download his free server, set it up in a Windows machine - ah.  This is only Windows.  So that's one difference from OpenVPN and Hamachi is, at the moment at least, it's only a Windows platform-based solution.  So you'd run the iPig server on your system, change the default port - he defaults to 11888.  The first thing I did was move it somewhere else because you would never want to be running any service like that on the manufacturer's default port so that, if some vulnerability was found at some future point in his server, you'd have people scanning the 'Net, looking to attack you and get into your system that way.  So run it on a different port, forward that through your router, and you can connect to it just the same.  And when you do, you have access to all your machines in our network, as well as access out to the Internet.



So it's a, I mean, it's a really interesting solution.  I haven't spent nearly as much time with it as I have with Hamachi.  And again, there is the question that I've raised, that he had to go to sleep so he hasn't answered yet, is what about protocols which are NAT router and proxy sensitive?  For example, in the FTP protocol, several of the connection setups include your IP address and port number of your machine.  Well, since this has been redirected through a different machine, those packets are no longer going to be correct.  NAT routers that are aware of this, they will reach into - they'll see that you're doing FTP based on ports and looking at the protocol.  They'll reach in and adjust those packets to reflect the fact that the IP has been changed.  I don't know if he's doing that.  It's a big job, if he is.



And there are other protocols, like SIP and the H., what is it, 363, the various teleconferencing protocols, that also embed ports and IPs in their packets.  So it might be that this isn't a universal solution.  But certainly for web browsing and mail and many other things, it's worth a try, and it's free, and the security looks fine as long as you go to my passwords page or just invent a really nasty long key.  He's got everything else worked out well.  So again, I think people should take a look at it.



LEO:  Change the default port and use a nasty key.



STEVE:  Yup.



LEO:  And we should say that, yeah, as bad as iPig is, at least it's an acronym for the iOpus Private Internet Gateway.  So there's a reason for it.  It's bad, but there's a reason for it.



STEVE:  And the logo has a pig's nose with a key hanging from it.



LEO:  That might be worse than the name.  But it's free, you know.



STEVE:  It's free, and it looks great.  And I'm going to be working with Mathias in the future.  I will get answers to these questions that I still have.  I'll talk about it, I'm sure, next week and have an update for people.  But it really looks like a very nice solution.



LEO:  All right.  Now, we're more than half an hour into the podcast, and we haven't really gotten to the meat of the matter.  So let's do that now.



STEVE:  Well, the good news is, there is too much meat for us to get to on OpenVPN.  OpenVPN is probably what I'm going to end up using and what you're going to end up using.



LEO:  It's the holy grail?



STEVE:  It is, for many reasons, the holy grail.



LEO:  Yeah.



STEVE:  It's not client-free.  We know no client-free solution exists.  We tried that using, you know, Word and - or, I'm sorry, Word - using Windows, PPTP, IPSec, L2TP, all that acronym soup stuff.  We realized that VPN NAT routers are good for talking to each other, but really not designed for talking to roaming hotspot users, and that those protocols tend to get blocked with a high degree of probability.



OpenVPN is an open source project located over at SourceForge.  It uses a UDP tunnel, which is the best transport for moving tunneling protocol, if you're able to get UDP from your client to your server.  It is multiplatform, running on Linux, on the BSDs, on Windows, on the Mac.  So it's a beautiful multiplatform solution.  The other cool thing is, thanks to its open nature, it's been ported many places.  For example, an OpenVPN server is part of Monowall, which many people are already running on a little, you know, discarded PC running Linux, and they're using it as their firewall or gateway in their home network.  So OpenVPN can be installed or turned on in Monowall, and you've got remote access to your internal LAN.  It's also supported by the OpenWrt project, which means that people who are downloading different firmware for their Linksys and other routers will be able to essentially put an OpenVPN server in their little plastic retail box, and, again, access their network from remotely, much as we were hoping people would be able to in the holy grail.



And finally, there's a very nice service that you, Leo, and I have both been using now for a couple weeks, which is called HotSpotVPN.  HotSpotVPN uses just the OpenVPN system, right out of the box.  What they provide is about a $10-a-month service where they provide the Internet connectivity for anyone using OpenVPN out on the road.



LEO:  So OpenVPN requires you to run a server that your client can log into, but you can subscribe to services that run the server for you.



STEVE:  Yes.  Very much like Hamachi, OpenVPN, when installed on your system, creates a virtual adapter.  Now, that's important because that's the only clean way I've seen of solving this packet fragmentation problem.  You're able to tell the adapter that its maximum segment size is smaller than what's truly the maximum segment size for the network, so that when TCP is setting its protocol up and generating packets, it'll be making smaller packets, which then the protocol encapsulates in its transport tunnel in order to send over the Internet.  So you end up with - oh, and it's using UDP, so maximum VPN performance.  I don't think anybody will see a slowdown using HotSpotVPN.  I've certainly noticed none.  So...



LEO:  And I was using it, too, and I was actually very impressed by the performance.  It seemed like it didn't slow it down at all, yeah, on my Mac.



STEVE:  Yes.  And...



LEO:  Very impressed.



STEVE:  And, for example, someone behind a corporate firewall that is allowing TCP 80 and TCP 443, they would be able to use OpenVPN to get to their machines at home because it would look just like - unless the corporate system was actually running a proxy, where it's accepting their true HTTP connections and then regenerating a request outbound, which certainly could be going on.  But if it's just using port filtering, they'd be able to access their network from home.  So it's a - what I like about it is it's a widely multifaceted solution.  It's available cross-platform.  It's available in many forms.  And we have a reasonable-priced HotSpotVPN service that will allow road warriors to encrypt their connections out of the danger zone, out of the hotel and out of a Wi-Fi environment, out to the HotSpotVPN location.  I believe he's got - I've spoken to Glynn, who's the founder of the HotSpotVPN solution.  He's got networks, I think, on both coasts.  And he's considering putting another network perhaps in an international setting in order to continue to do some load balancing.  But it's a very wide application domain.



The downside, and of course there is one, is it is anything but one click.  Whereas Hamachi, if it works for you, is amazingly zero configuration.  And even iPig, if it can work for you, will probably be a fantastic solution for people for whom that works.  OpenVPN is a much more complex product.  I would consider it the Swiss army knife of VPN solutions.  You configure whether you want TCP or UDP protocol, what port you want to run on, and, I mean, well, that's just the beginning.  I mean, it's...



LEO:  I want to clarify something just so people understand that.  The commercial providers like HotSpotVPN, they're providing the OpenVPN service.  In fact, they make it pretty easy to configure.  That's one of the reasons you pay them.  But that's not, when you're talking about OpenVPN, you're talking about the free software that they use, which is more complicated to set up on your own.



STEVE:  Yes.  And in fact, I don't want to scare people away from HotSpotVPN.  I was very impressed.



LEO:  That was easy.  On Windows, that's just - you run an installer, and that's it.



STEVE:  I mean, literally.  It installs exactly the same stuff as if you were to download it from SourceForge, except that they've done all the work of pre-preparing your asymmetric public key certificates.  It's all part of the bundle.  So you sign up for HotSpotVPN, you get a link in a return email, you click the link, download a package, install it on your machine, and you literally click an icon on your taskbar, and you're connected securely to their servers.  It is that simple.  They've done all of the work.



LEO:  I installed it on a Windows machine and a Mac machine.  It was very easy on Windows.  Little more complicated on Mac because you need a second solution called Tunnelblick, and you have to configure that a little bit.  What does it take to do OpenVPN yourself?  What are the steps to do that?



STEVE:  Well, that's really what I'm not going to talk about today.



LEO:  Because it's so complicated.



STEVE:  Well, yes.  What I'm going to do is, you know, a lot of people have said, okay, enough already on the VPN topic.  And in fact it doesn't make sense for me to try to explain in detail how to install OpenVPN oneself.  I'm only going to be using all the online documentation.  I'm going to put up on my show notes, for this Episode 19, a list of all the online available documents.  So anyone who is intrepid and wants to go ahead and mess with OpenVPN, knowing that we vetted it enough to know that it really does work and really is a terrific solution, anyone who wants to is welcome to.  What I'm going to do in the background now is I'm going to put together some - I'm going to distill all that into some simple, easy-to-use how-to guides.



LEO:  That's kind of what's lacking in the OpenVPN documentation.



STEVE:  Yes.  It really is.  Well, the problem is, you know, these guys who developed it are all excited about all the bells and whistles they've got.  I mean, there's all kinds of stuff, where if you drop your connection, you may come back with a different MAC address because the adapter assigns a MAC address on the fly.  So you would have an old MAC address in the ARP table, but there's a command-line switch you can put in to automatically flush the ARP table when you reconnect...



LEO:  I don't want to know.  I don't want to know.



STEVE:  ...blah blah blah, right.  So I'm going to work through all that nonsense.  I'm going to figure out, okay, here is exactly what you have to do.  Here's some scripts.  Here's some guides.  Here's some screenshots.  Follow these, you know, instructions, and you'll be set up with, like, the optimal configuration.  And the good news is there is a really good optimal setting where you can connect into your system remotely with what's called a bridge, as opposed to a routed connection.  The bridging connection essentially extends your local LAN Ethernet, including the Ethernet broadcasts, across the bridge to your machine.  That means that all file and printer sharing works; non-TCP protocols work, like if you wanted to use NetBEUI if you were really security conscious, that would work through the bridge.  And ARP traffic works.  So, for example, you're able to participate on the LAN and automatically route back out to the Internet.  So, I mean, it is, it's a high-configuration holy grail solution.  I'm going to work to - and I want to make it clear that, at the time that we're recording this, Leo, these guides don't exist.  But that's what I'm working on.  I'm going to nail this stuff down for myself, and I will share everything I learn along the way and distill some simple how-to approaches that figure out exactly what to do to make it work.



LEO:  So if you can do that, then OpenVPN would be your choice.  Are there any drawbacks to OpenVPN?  Besides the complexity of installing it and getting it running?



STEVE:  Let me think.  You do have to have a static incoming port that will accept connections from known and unknown people.



LEO:  Can you use DynDNS or some other solution if you don't have a static port?



STEVE:  Well, now, that's a static IP.  I meant...



LEO:  Oh, you mean a static port, I'm sorry, okay.



STEVE:  Right.  And you absolutely...



LEO:  But you just do that by opening up your firewall, port forwarding.



STEVE:  Well, but I'm just saying that, you know, Hamachi doesn't require you to have any static port forwarding through your router or your firewall.  Any solution where you're running a server on your LAN, whether it's iPig's server or the OpenVPN server, it will absolutely require that you run a port forward through.  Now, I don't think it's a problem because this thing is very well hardened.  It's been scrutinized.  It's open source.  But again, you want to pick some wacky port that only you know so that it's unlikely to be found.  Just, you know, a little obscurity doesn't hurt.  You also would want to run a Dynamic DNS.  And many of the contemporary routers now allow you to set up a DynDNS account, and they will maintain that for you.



LEO:  That's the static IP we were talking about.



STEVE:  Exactly.  So that if your ISP did change your router's IP, and you were away from home, you'd be screwed.  You wouldn't have any idea what IP to use to connect to your home network.  But if your router supports Dynamic DNS, or you run a client on your own machine which will do the same job, then you'll always have your own domain name, you know, bobshomenetwork.dyndns.org or whatever, which will always be pointing to your router's IP, making sure that you're able to access it remotely.



LEO:  It's a lot better than trying to get your spouse to run ipconfig.  Trust me.



STEVE:  Well, and you would also want that, if you were using the iPig solution - I encourage people to take a look at iOpus's iPig.  It's badly named, but it really worked well for me in my brief run-through yesterday.  And so far the security architecture looks very solid.



LEO:  Details on how to use OpenVPN will be available on your site in the show notes.



STEVE:  Excruciating details.



LEO:  Do you anticipate - you're not going to work on that through Christmas, are you?



STEVE:  That's all I'm doing.



LEO:  Steve.



STEVE:  I'm working on Open - I'm rolling up my sleeves.



LEO:  Steve.  You're the kind of guy that goes to a Chinese restaurant on Christmas Day, aren't you.



STEVE:  I am.  In fact, Sam Woo, my favorite place, is open 365 days a year - on Thanksgiving, on Christmas, on New Year's, you name it.



LEO:  So if you're looking for help with Hamachi or OpenVPN, Christmas Day, we have a date at Sam Woo's.  No, no.  Don't - leave poor Steve alone.  He'll be reading a little science fiction, I hope, and taking a break.



STEVE:  But I will be setting up a Linux machine from scratch and doing the Linux config...



LEO:  Wait, wait, wait, wait, wait.  You're going to set up a Linux machine?



STEVE:  Oh, I'm sorry, I meant FreeBSD.



LEO:  Okay.



STEVE:  The newsgroup server that I talked about at the beginning of the show, news.grc.com?  That's a FreeBSD UNIX machine.  FreeBSD is my, you know, Linux/UNIX-style platform of choice.



LEO:  I was getting faint for a moment there.  I thought the world was coming to an end.



STEVE:  Oh, I do it all the time.  I love FreeBSD.



LEO:  Yeah.  FreeBSD is great.  And we Mac users know a little bit about BSD because that's what's underlying Darwin.



STEVE:  That's right.



LEO:  Okay.  Are we complete now?  Do we have everything we need to know?



STEVE:  I think we're done.



LEO:  VPNs have been covered.  I so decree it.



STEVE:  Now, what we'll do is, we will touch on this.  I mean, VPN...



LEO:  It's not going away.



STEVE:  Exactly.  VPN is a core topic for Security Now! and for us.  You know, you and I roam around, we're telecommuters, we want security.



LEO:  Oh, yeah.



STEVE:  So listeners don't need to worry that their questions that they've asked are never going to be answered...



LEO:  No no no no.  Yeah.



STEVE:  ...that we're never coming back here.  I mean...



LEO:  We live here.  This is our - this is where we live.



STEVE:  Yes.  I mean, VPN is a core technology.  We're not going to drop it.  As I learn more about iPig, as I learn  more about OpenVPN and I'm posting things, we'll be touching on it.  But we've got a whole bunch of cool stuff lined up for the beginning of next year and Security Now!.  And of course next week we'll do our Q&A, and we'll talk about some more of users' questions.



LEO:  Well, and I also see why we needed to do the early chapters to get to this part, because there is so much to understand about what's going on, the pros and cons, the negatives, the security risks.  You have to understand that before you can even have a conversation about VPN.  So that was well worth it.



STEVE:  Yes.  And that was exactly our intent.  And of course we're going to talk early on about security architecture, what is an asymmetric key, what is a symmetric key.  And so one of the things that users need to be aware of is that we're deliberately creating a foundation here that will allow us to explain, once it's necessary, about OpenVPN certificates and how they work.  It wouldn't make a lot of sense to talk about it now.  But once we've really explained how this stuff works, it'll all come together.



LEO:  If you want more information and that step-by-step on how to configure and run OpenVPN, GRC.com/securitynow.htm.  Those are the show notes.  And some people are confused by the little icons.  Click those little icons.  They all do something.  There's transcripts there.  There's a 16KB version of the show which I know people love.  I'm not sure why, but they love that low-quality, low-fidelity version.



STEVE:  Well, it's because the file size is so small.



LEO:  It's such a small - I understand.  I'm just giving them a hard time.



STEVE:  I know.



LEO:  Because we work so hard on audio quality here.  And for more information about all this stuff, Steve's the guy.  And don't forget those newsgroups, the GRC.com/discussions.htm.



STEVE:  Oh, Leo, I mean, we've got hundreds of really good people who hang out there.  And, you know, the Usenet-style newsreader is such a joy to use.  I'm sure, you know, in the old days you've used it a lot.



LEO:  I still use it.  Oh, absolutely, yeah.



STEVE:  It's just a great way to have dialogues and conversations.  And we do now have a Security Now! newsgroup on the GRC news server.



LEO:  That's great.  If you want to download the full version, of course, you can always get it at ThisWeekinTech.com.  We do thank the folks at AOL Radio for broadcasting Security Now! on their podcast channel, and providing the bandwidth for the Security Now! downloads because there's a lot of downloads.  And at some point we're going to try to put this all together in an anthology, maybe a CD.  We've started to get requests from corporations who want to distribute them to employees and so forth.  So we'll work on that, as well.



Next week, your questions, Steve's answers.  Have a great and happy holiday, Steve.



STEVE:  Thanks.  You too, Leo.



LEO:  Thank you so much for all the work you've done on VPNs.  This has been really fascinating.  And it makes me feel good when I open up my HotSpotVPN to know that I'm safe now on the road.



STEVE:  That's what I'm using.



LEO:  Yeah, it's just great.  I'm Leo Laporte for Steve Gibson.  We hope you have the best of holidays, and we'll see you next week on Security Now!.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/








GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#20

DATE:		December 29, 2005

TITLE:		A SERIOUS new Windows vulnerability - and Listener Q&A #2

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-020.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm

	

DESCRIPTION:  On December 28th a serious new Windows vulnerability appeared and was immediately exploited by a growing number of malicious web sites to install malware.  Many worse viruses and worms are expected soon.  We start off discussing this, and our show notes provide a quick necessary workaround until Microsoft provides a patch.  Then we spend the next 45 minutes answering and discussing interesting listener questions.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 20, for December 29, 2005.



STEVE GIBSON:  Last episode of this year.



LEO:  The last episode of 2005.  And we've done 20 of them.



STEVE:  Yeah.



LEO:  And we'll do another 52, I predict, next year.



STEVE:  I have a feeling...



LEO:  Something like that.



STEVE:  ...we're on track.



LEO:  We've been very consistent, and there's always lots to talk about.  But one of the things that you started a few episodes ago, and I think it's a really great, is every fourth episode we answer listeners' questions.



STEVE:  Well, yeah, you know, just the nature of what we're doing, suggesting things to people that they're able to go try, sometimes people come back, you know, like more than one person, with, like, whoops, what about this or what about that?  So it really gives us a chance just to, you know, sort of know what people are thinking, too.



LEO:  Well, before we do that, let's talk about a big hole in Windows.  And this was my original concern with doing every fourth episode on, you know, a schedule, you know, answering questions, that we might miss a big security story.  So, but we're not going to do that because we're going to tell you about it.



STEVE:  Yeah, this week we've got one.  This all exploded yesterday, on December 28.  There's a brand newly discovered Windows metafile exploit which is really bad.  It's been called a "zero day exploit."  It is able to install malware in people's computers just by visiting a website.  In fact, the guys at F-Secure, while they were fetching a file in a DOS box, it infected their machine because they had Google's desktop search system going.  And it turns out, when they fetched the file, Google's desktop system indexed it.  And the process of indexing the file caused the exploit to run.



LEO:  Wow.



STEVE:  So...



LEO:  So let me define a couple of terms real quickly, or ask you to define a couple of terms real quickly before we go further.  What is a metafile?



STEVE:  A Windows metafile has been a format that's existed from the very beginning of Windows.  It's sort of a scripting language, sort of in the feeling of a PDF, the way a PDF is able to define rectangles and squares and things.  So it's a different kind of image format than people are used to.  You know, we're used to GIFs and JPGs and PNG files.  We're also used to...



LEO:  What's the extension for it?  Is it...



STEVE:  Well, it's WMF.



LEO:  Okay.



STEVE:  Except that just filtering WMF files doesn't solve the problem because it turns out that other image formats are able to cause Windows to execute the same code.  Windows actually looks at the content of the file, not just the file extension.  So you're able to masquerade WMF files in non-WMF image formats.



LEO:  So you could distribute this as an attachment to an email with any arbitrary extension.  But more likely it's going to happen on a website.  As an image, or just something that's part of the page, or...



STEVE:  Well, when IE displays it - this will affect Firefox, Opera, IE.  So it's...



LEO:  Doesn't matter, wow.



STEVE:  Yup, it's browser agnostic.  At the moment, this is so new that they were only seeing websites exploiting it.  But we're expecting a virus to appear at any moment, an email-borne virus, because, when you open the email, your viewer shows an image.  That can install malware on your machine.



LEO:  And this kind of underscores the fact that even what appears to be a pure data file can contain a virus or malware, as you say.



STEVE:  Right.



LEO:  Now, you said it's a "zero day exploit."  What's that mean?



STEVE:  Well, it means that it has the ability to propagate very quickly, and that it does not require any direct user interaction.  I mean, there are many vectors that will get this thing into people's machines.  Now, this happened  yesterday.  We have no response from Microsoft yet, although they do have a page on their site acknowledging the exploit.  The good news is there's something that anyone who knows about this, anyone listening to this podcast, can do immediately.  It's possible to unregister Windows's handling of the vulnerable DLL.  What will happen is that, in Windows Explorer, the image thumbnails that Windows Explorer would normally show, they will stop functioning.  But you want them to stop functioning because...



LEO:  That's part of the problem.



STEVE:  Exactly.



LEO:  Those files, yeah.



STEVE:  Exactly.  It's Windows's display of a file which is infected with this malicious exploit does cause the problem.  So on the show notes for this episode, which we always have posted - Leo, you can copy the string if you want to or just point people to the show notes page on my site.  But I have an extensive dialogue explaining what the problem is, with lots of links to other sources of information, but also with a step-by-step explanation for how anybody can just drop a string into the Run field under their Start Menu to run a little utility program that Windows provides to unregister the handling, basically, of this exploit.  And they will be safe, then, from any exploitation of this until Microsoft catches up with a patch.  Now, as we know, Microsoft generally patches on the second Tuesday of every month.  This is so bad, I would expect something from them as quickly as they can react because, I mean, already we're seeing, I mean, the malware guys are jumping on this fast.



LEO:  Oh, so there's already exploits.



STEVE:  Many exploits.



LEO:  Many.  Within 24 hours.  Wow.



STEVE:  Yes, yes.  And, I mean, sites are exploiting it.  The exploitation code has gone, you know, like wildfire across the Internet.  So listeners want to do this immediately and probably, you know, email their friends with, again, a link to our show notes page to get people to protect themselves.



LEO:  Yeah.



STEVE:  The word really needs to get out about this.



LEO:  And I won't put the string on the TWiT website.  I'll just put a link to your - because you describe it, you tell how to do - I mean, it's much more elaborate than just giving people a string.  So we'll point people to grc.com/sn/notes-020.htm.  I know that's a lot to remember, but ThisWeekinTech.com will have it on the entry for this page.  So, wow, that's scary.  That's really scary.



STEVE:  Yeah.  Well, and also, as I always do, the top of the GRC.com homepage will have a link to our Security Now! page.  And this week I will have a special link directly to the show notes.



LEO:  Good, all right.



STEVE:  So just going to GRC.com's homepage will also take people.  Because, I mean, this is a big, bad problem.



LEO:  This strikes me as the kind of thing that an antivirus probably wouldn't be much help in.  I mean, heuristics might catch this kind of thing, but likely not.



STEVE:  I would imagine you could design something specifically for it.  So it might very well be that the antivirus guys will jump on this even more quickly than Microsoft can.



LEO:  But you're not currently protected against it, in all likelihood; right?  And it happened so fast that...



STEVE:  Yes.  Absolutely not.  It's funny, too, because it's taking advantage of a deliberate feature which was built into the metafiles.  Metafiles, as I indicated, is sort of like a scripting format.  On the web there's something called "scalable vector graphics."



LEO:  Right.



STEVE:  SVG.  And the metafiles are similar to that in that you define rectangles and lines.  And so Windows sort of draws them.  In fact, what a metafile actually is, is, like, GDI, the so-called...



LEO:  It's a small program, really.



STEVE:  It's a little program that's basically calling the  Windows graphics primitives to draw rectangles and text and so forth.



LEO:  And that's why it can be taken advantage of.  It's really not a pure data file, it's a program file.



STEVE:  It is a little scripting format.



LEO:  Yeah, yeah.



STEVE:  And what's interesting is that there's a hook in there saying, if the metafile fails, execute the following procedure.  Well, that's what this thing does.



LEO:  Oh, interesting.



STEVE:  Is it's actually executing - it's taking advantage of the ability to execute a procedure in the event of a metafile failure.  So the malware registers itself as this metafile procedure and then fails the metafile, causing the procedure to execute.  I mean, it's a perfect example of just, you know, sort of a nice thing that represents an inherent security vulnerability which has finally been leveraged.  And I've seen some reports saying that all versions of Windows, even like back in Millennium Edition and probably before, are vulnerable to this because it's built into the protocol.



LEO:  It's interesting, too, because it's not a buffer overflow exploit.  You don't have to trick anything.  You're actually behaving as Microsoft intended you to.



STEVE:  Right.



LEO:  Unfortunately, Microsoft - and this is the big flaw in security - assumed that people were kind and benevolent, and nobody would ever take advantage of this to do bad things.



STEVE:  Well, like putting scripting in email, which is, you know, still my biggest source of, you know, head-shaking.



LEO:  Well, and TrueType fonts are also scripts.  I mean, a lot of graphics file formats are not really bits.  They're program code.



STEVE:  And it's a very powerful technique, but it is prone to exploitation if you're not very, very careful.



LEO:  Got to sandbox it.



STEVE:  In terms of errata, before we start our Q&A, one person made the comment that I've been promoting the idea of cutting and pasting these really long, hairy passwords using Windows Clipboard as the transport.  And he said, you know, Steve, it's worthwhile mentioning that you don't want to leave the password on the clipboard.



LEO:  On the clipboard.



STEVE:  It's like, oh, good point.  I'm definitely going to mention that.



LEO:  You know, it's funny because we leave data trails, little crumbs behind us all the time, you know, our cache, our swap files, page files, you know, there's a lot of data left behind.  And even the slack space on your hard drive contains data.



STEVE:  And our own browser caches.  I mean, browser caching is done so that, as you move around a site, you're not having to always reload the same images that are, like, common among multiple pages on a website.  But the browser caches everything it can, and it really does leave a trail that can be taken advantage of.



And then one last thing before we get into our questions.  OpenSSH, the forthcoming version, it'll be 4.3, of OpenSSH is offering a VPN-style tunnel in addition to the traditional port forwarding that we've talked about many times with SSH.  And so it's going to be extending the protocol to actually do this sort of tunneling.  However, it'll have the same problems that TCP tunnels always have.  And in fact, in an interview that Damien Miller, the developer of OpenSSH, gives, he says, and I'm quoting him, "Like any VPN system that uses a reliable transport like TCP, an OpenSSH tunnel can alter packet delivery dynamics, e.g., a dropped transport packet will stall all tunneling traffic."  So it probably isn't good for things like VOIP over a lossy network.  Use IPSec for that.  But it's still used for most other things.  So several people have written to me mentioning the fact that they've heard OpenSSH is going to be offering a VPN tunnel, you know, what does that mean?  Well, it means it's another good thing, but it's not as good as using UDP as the tunneling transport.  So OpenSSH is never quite going to give us what we want, whereas OpenVPN does.



LEO:  All right.  Let's move on to the questions.  We have quite a few for you, Steve, starting with this one.  And again, these are composites, questions you receive over and over again from a variety of different people.  So credit to everybody who asked this question:  I have a question about secure web pages.  Some bank and credit cards ask for a username and password from what appears to be an unsecured homepage.  So Washington Mutual does it; MBNA does it.  When using such sites, I normally click the log-on button without entering any info, so I get forwarded then to a secure page informing me of my error and allowing me to try again.  I have this question, too.  He says, am I being too paranoid, or is this method of logging in actually secure?



STEVE:  That's a great question.  And as you said, a bunch of people have asked.  Most secure sites give people a sort of a warm and fuzzy feeling about entering data into a secure form by moving them onto a secure page before they ask them to fill anything in.  You know, I wrote my own ecommerce system at GRC.  And I do exactly that.  I put people onto a secure page before I ask them to provide any information.  The advantage is that you're able to right-click on the page, bring up the properties, check the actual security certificate that the page has to make sure that you're on the page that you think you are, and that you're not victim to some sort of redirection scam or phishing exploitation, as has happened in the past.



LEO:  But now I'm on my Bank of America site, I'm at the log-in page, it isn't a secure page, and I just checked, there's no certificate for it.  It says "website identity not verified."  So that is a good question.  Am I safe to enter my data here?



STEVE:  Yeah, it's a great question.  The answer is probably.  But this is the problem.  There's no real way to guarantee it.  Now, if you were to look at the code, if you were to view the source of the page, the actual HTML, chances are that the link that you would see, that is, the URL associated with the Submit button, it would be HTTPS:// and then whatever page is going to be accepting the data.  So the point is that it's not the security of the page you're filling the form data in on that matters.  It's the security of the page you go to that carries, that accepts that data.  So it's possible and likely that, for example, Bank of America or Washington Mutual or whomever has set up the site, it's almost certainly the case that you're going to a secure page, and that's what's receiving your confidential data.



But, I mean, the reason this is a great question is that, unless you somehow verify that, you don't know for sure.  And so I really think it's a fault of the website designer that they don't move you onto a secure page where the form is being filled out, even though technically it's not that page, it's the page that you're going to submit the data to, which is the next page you go to, which needs to be secure.  And similarly, if they put you on a secure page, then it's possible that they could use an unsecure button to accept the data.  I mean, it's really...



LEO:  Oh, I see, because it's really the page you're going to, not the page you're on, that matters.



STEVE:  Exactly.



LEO:  Yeah.



STEVE:  The idea is - this is all sort of a kluge which evolved after HTML and web pages existed.  You know, the original concept of the web was just static delivery of pages that would - you know, basically people reading pages.  There was no original concept of data going the other direction, that a web user would be submitting data back to the server.  So that was grafted on later as an extension to the original concept, and it's got these problems.  It's that, you know, it's the link you go to that needs to be secured because that's where your data is moving.  It's not the page you're on.  So it's a really great question.  There isn't, without looking at the code of the page that you're submitting, there isn't a way to tell whether you're about to be secure or you're about to be nonsecure.



LEO:  In fact, I've been, while you've been talking, browsing the Bank of America page.  And it is - the post does go to an HTTPS secure site.  So...



STEVE:  Right.



LEO:  ...in a way this is guaranteed secure because I'm looking at it.  On the other hand, if I were on a secure site, and I didn't look at the source, I might be going to an insecure site to do the submit.  That's good to know, and it's actually kind of parallel to a question I've asked you, which is, I have secure web-based email, but the log-in doesn't seem to be secure.  And you've reassured me now that it's still secure.



STEVE:  Right.  Oftentimes, if you float your mouse over the button, sometimes your browser will show you the link down in the status bar at the bottom of your browser.



LEO:  Oh, the button might tell you.  Ah.



STEVE:  The button might.  Normally it's more the case with normal links instead of Post links, where the data is not a Get request, it's a Post request, which is what most forms now use because that's a much more secure way of submitting data, because otherwise third-party advertiser things, you know, we've talked before about URL information leakage, which is also a problem.



LEO:  Yeah.  And Bank of America, which is - I have mixed feelings about this.  They do put a padlock next to this - I'm hovering over the Submit button.  It doesn't show me any security.



STEVE:  Right.



LEO:  But they put a graphic of a padlock in this box, which is - I'm a little of mixed feelings because that is deceptive, in a way, because it isn't the same as the padlock you see in your browser.



STEVE:  Right.



LEO:  Anybody can put a padlock graphic.  But when you click it, it does explain exactly what you've just said.  And it says, to provide the fastest access, we don't make the page secure, but when you do press Submit it is secure.



STEVE:  That's really interesting.  Because, I mean, it no longer is the case that this represents any sort of overhead.  I mean, lots of sites do it.  I do it.



LEO:  It's not that - it's not slow, is it.



STEVE:  It's dumb.



LEO:  I mean, there is some handshaking; but it's not, I mean, come on.



STEVE:  So the idea that they've gone to all the trouble of putting up an explanation, rather than just securing that page, that's just quacky.



LEO:  Question two, and actually it's a really interesting question:  The Hamachi server - and we all know how much you love Hamachi, and I do, too, and how you recommended it - was down a couple of days ago.  It's back online now.  That's kind of scary.  You want to talk about that?  I mean, we are - when you use Hamachi, you're relying on it, aren't you, on their server?



STEVE:  Yes, totally.  And so, you know, the guy wonders if it's useful for, I mean, he wants to make the point that we're relying on Hamachi to basically build our little network for us.  And we're completely dependent upon it.  Now, it's certainly the case with the VOIP systems, you know, you and I are using Google Talk.  We relied on Google Talk being up...



LEO:  Right.



STEVE:  ...in order to initiate our connection.  But it's not the case that this system would work without Hamachi being up.  Now, one of the things that Alex mentioned, as he's moved his versions forward, is that the clients now do not depend upon Hamachi's server to be up to maintain an existing set of tunnels; but it does have to be there in order to establish a new network.  And in fact he's been doing some versioning on his server in the last couple days.  And apparently there was an actual outage, also.  And so people need to recognize that, yeah, it's really cool that this thing is free, but there is a dependence on the server being up.  And that's of course the same with HotSpotVPN or iPig or any of the stuff that we've talked about.  It will not be true once users are using their own OpenVPN scenario, which is where we're headed, of course.  But, you know, nothing beats Hamachi for ease of use.  It comes with this downside.



LEO:  I set up my home network, someone writes, with WPA, as you recommended, and a preshared key using Steve's password generator.  WPA worked fine on all my wireless GNICs - those network cards that support 802.11g - but not with the old 802.11b card in my laptop.  Question.  WPA doesn't work with a wireless "b" network card unless the new driver for that NIC supports it; correct?



STEVE:  Almost.  Certainly having - if you can update your drivers, there is a chance that "b" will work.  There's nothing about the...



LEO:  "B" doesn't preclude it.



STEVE:  Exactly.  There's nothing about the Bness versus the Gness of the Wi-Fi that does or doesn't mean WPA.  So if you can get later model drivers for the card, and they support  WPA, you're in great shape.  If not, McAfee does offer a free WPA client which I've actually personally seen it work on a laptop whose built-in Wi-Fi driver did not support WPA.  I have a link to it on our show notes page.  It's a long link, so it's not something I can even say over the air.  But they're trying to sell you, on that page this link goes to, much fancier sort of radius-style dynamic real-time authentication, which you don't need.  So read the page carefully.  There's a place when you're installing it where you say "disable the dynamic authentication."  You definitely want to do that.  Then you're just using the preshared key, which is what I'm promoting as really all the security you need.  So it may be that you can use this free client to upgrade your WEP-only system to run WPA.  And I know that it has worked for people.



LEO:  So it's not necessarily a firmware update to the card you have to make.  It's merely a driver or maybe not even a driver, a client that you need.



STEVE:  Yeah.  They call it a Windows client software.



LEO:  It's not even a driver.  It's just instead of the - well, see, I mean, the problem is on some versions of Windows there is no WPA support.  So that would fix that.



STEVE:  Exactly.



LEO:  Yeah.  But the driver would also have to support it, or not?



STEVE:  No, it does not need to support it.



LEO:  Okay.  It's just merely that you need the client.



STEVE:  Right.



LEO:  Got it.  What's the security of Windows Remote Desktop?  Oh, we talked about this before, which is so easy to use, one man writes, and which you and Leo often talk about.  One thing that I've always done is connected via RDP to my home PC from the office.  I work as a network administrator, so no worry about the IT department catching on.  But your show made me wonder about the security of Remote Desktop.  Is it at all encrypted?  Could it be sniffed?  Would it be better to conduct the RDP session on a port other than its default, 3389?  Perhaps that all should be a show on its own.  And just to share what I do in terms of security, it's pretty basic.  I have my router configured to allow traffic in on that port, which could be viewed as somewhat of a security threat.  However, I also do some filtering with my ZoneAlarm firewall to only allow my office IP address through.  So even though the port's open, only one IP address is allowed.  It seems to work.  When I connect from a friend's PC and log in, even as administrator, I'm almost instantly dropped by my firewall before I can even attempt to shut down the firewall or anything.



STEVE:  Well, it's a long question.



LEO:  Yeah.



STEVE:  But it's a really good one.



LEO:  Okay.



STEVE:  So we have a guy who's running Remote Desktop at home.  He's opened a port through his router, so - and he's using 3389, which is the default.  And then he's using the firewall on his machine, he's basically set up a packet filter so that only that port will be accepted coming from his office IP.  Well, okay.  A couple things.  First of all, always changing Remote Desktop's default port is a super idea.  And the good news is there are pages on the web that provide you with instructions for how to do that.  So the default port, 3389, can be changed.  And that's the first thing I would do is change it.



LEO:  Now, that's security by obscurity.  It's not really security.  And I suppose there are sniffers that would just try the protocol - of course it would take you a lot longer, but across a bunch of ports; right?



STEVE:  Right.  I mean, certainly you don't want to rely on security by obscurity.  But it's better than not having any security.



LEO:  Or being wide open and saying, here I am, come get me at 3389.



STEVE:  Yeah.  So, for example, if, as just happened yesterday, we were talking about this Windows metafile exploit - if a horrible new exploit was found in the Windows Remote Desktop, then what would immediately happen is that worms would start scanning for port 3389, trying to get in on that port.  They would just all assume the default.  So being on 33890, for example, or anything else, is, you know, really the first thing you want to do.



Now, secondly, doing what this guy has done, that is, establishing a port filter so that he's only accepting incoming connections from his office IP, that is really good security.  It's, for example, it's what I do in order to have Telnet available on my remote equipment at Level 3.  Unfortunately, the equipment I'm using doesn't let me use a super-strong password.  So what I've done is, I'm filtering the traffic so that only my home network range is even able to see those ports open where they are.  I mean, nobody else is able to see them.  And you can't spoof those IPs because they're TCP connections, which are inherently immune to any kind of spoofing.



LEO:  Oh, I didn't know that.



STEVE:  Oh, yeah.



LEO:  So even raw sockets don't let you spoof TCP.



STEVE:  Well, raw sockets would allow you to make up a...



LEO:  Random.



STEVE:  ...fake source IP.



LEO:  Right.



STEVE:  But the TCP connection handshake, it sends a packet in each direction.  Both...



LEO:  Oh, yeah, you couldn't - it couldn't get back, could it.



STEVE:  Exactly.



LEO:  There's no return address.  I get it.



STEVE:  Exactly.  So what this guy has done is absolutely secure.  The only threat would be somebody on his local Ethernet would be able to use ARP poisoning.  But, you know, that would have to be somebody in his own home network, which is...



LEO:  To pose as him on the IP address.



STEVE:  Exactly.  And there you'd have a man-in-the-middle vulnerability.  But you are completely invulnerable out on the Internet.  So what he's done is really good.  And I will just say that, otherwise, RDP is not secure.  This is one of those things Microsoft keeps trying to do, and they're up to Version 4 now, and they still haven't got it.  We talked about briefly there's a tool called Cain & Abel.  And the current version of Cain & Abel, which is freely downloadable, has complete RDP man-in-the-middle spoofing and decoding so that, if it knew that that's what was going on, and if it was able to insert itself with a man-in-the-middle attack, it could, and it does, give you a complete transcript of everything the user does and types over his Remote Desktop connection.  So you cannot rely on RDP security all by itself.  You have to tunnel it through VPN, as we've talked about, you know, running Remote Desktop over Hamachi or iPig.  Or, in this case, this user is just using it with port filtering so that it only accepts a connection from his office IP range.  And that's really good security.



LEO:  SSH, OpenSSH uses RSA fingerprinting in a similar way, saying, you know, this is the fingerprint for this machine that's contacting me.  And if it's a known machine, allow it; otherwise, don't.



STEVE:  Well, what you're talking about is extremely good authentication.



LEO:  Right.



STEVE:  And that's what you need in order to avoid man-in-the-middle attacks, strong endpoint authentication, which we'll be talking about very soon in 2006.



LEO:  Even better than the IP authentication.  You can't, you mean, you can't fake that, it's a public - it's a, you know, RSA key.



Play-Doh in Poughkeepsie writes:  Biometrics.  What do you guys think of all the cool new fingerprint scanners?  I'm setting you up on that one.



STEVE:  That's okay.  There's lots of people who are asking about biometrics.



LEO:  Yeah.



STEVE:  I'm scared of them.



LEO:  Well, you saw the - maybe you didn't see the story, that 83 percent of all fingerprint scanners can be fooled by a Play-Doh thumb.



STEVE:  Oh, I see what you mean.  Oh, oh...



LEO:  You didn't see this, you didn't see this.



STEVE:  I thought you said Plato and not...



LEO:  Play-Doh.



STEVE:  ...not Play-Doh.  Yeah.  Now, I mean, that's a perfect example.  I see these things that are, like, these little scanners on the end of a USB cord.  And, I mean, I just know that they're going to be a problem.



LEO:  It's kind of hard, I mean, you have to get an imprint of the actual guy's thumbprint and then use the Play-Doh to  make it reverse, so...



STEVE:  Well, actually there are - unless you wipe one of those scanners off deliberately after you've removed your...



LEO:  There's a fingerprint.



STEVE:  Yes.  It turns out...



LEO:  Of course.



STEVE:  ...you can fill a bag of water and push it against the plate again, and it thinks you're back.



LEO:  Oh, that's not good.



STEVE:  Now, the good news is, on my little Toshiba Libretto, and also on the IBM ThinkPad, there's a different kind of scanner.  It's a fingerprint scanner, but you have to draw your finger across it.  It's a capacitive scanner instead of a static image scanner.  And so the beauty of that is that at no point is your entire fingerprint available on a plate.  Instead you're scanning across, like, a little single line scanner.  And so it's a dynamic print, which it acquires over time.  That's much more secure.  But overall, the whole idea that any sort of single static biometric is being used for full authentication, I think that's always a bad idea.



For example, when I go to access my equipment at Level 3, I have two things I have to present.  I have a badge, which I wave by their badge scanner.  Then I stick my hand in a biometric reader, which reads the various parameter from my palm.  So the idea is that - that's called two-factor authentication, and it is far better than single-factor authentication.  So what that prevents is it would prevent somebody from getting my badge without my knowledge and going behind my back to the facility and getting in.  Because the chances that they could have my badge and have an identical hand to mine is really much smaller than them just being able to get the badge by itself.  So in real terms, I would say, if you had a system that required a password and a thumbprint or fingerprint, that makes lots of sense because then it prevents somebody from getting your password or discovering it independently and being able to log on as you, because, again, the chance that they're going to have a fingerprint which matches yours or have, you know, a spare ball of Play-Doh in their pocket, is very remote.



LEO:  But don't assume that just the plain old, as convenient as it is, that the plain old thumbprint scanners are really secure.  They're not, really.



STEVE:  You know, the rule of thumb is, anytime something seems really convenient, you've got a problem.



LEO:  Secure does not equal convenient.



STEVE:  Exactly.



LEO:  Regarding the information you have in Episode 19, using the secured connection that Google's Gmail offers - that's HTTPS://mail.google.com for Gmail - if one wanted to use this as their only email account when using an open Wi-Fi hotspot, would this provide enough security so I don't need VPN for my email?  And I have, on FastMail, which I love, my IMAP email provider also has a secure log-in.  In fact, they're nice.  They have a public terminal and a secure log-in, so it saves no information, and it's HTTPS.  Is that safe over Wi-Fi?



STEVE:  Absolutely.  I mean, that's the short, one-word answer.



LEO:  Yeah.



STEVE:  That's going to be using SSL.  And we're going to be talking, again, early in 2006 about SSL and certificates and authentication and all of this stuff.  You would want to make sure that the connection and the certificate had not been spoofed by right-clicking on the secure page and looking at their certificate.  I really - I'm going to start talking about this a lot because it's the way phishing scams work, and it's the way SSL man-in-the-middle attacks work, is by presenting people with fake credentials, because that breaks the authentication, which is inherently the way these protocols are secure.  So you really want to make sure that you're actually talking to the server you think you are.  If, however, you are, and you're, for example, using secure Google Mail or whatever, then, you know, all of your email work would then be secure in an otherwise insecure area, you know, hotspot or in a hotel or so forth.



LEO:  Very good to know.  How secure are NAT routers, Steve?  Do stateful routers offer more security?  I guess he's talking about stateful packet inspection?



STEVE:  The SPI, right.



LEO:  SPI.  Do firewall routers, or routers billed as firewall, offer more security than just plain old NAT routers?



STEVE:  It's a really good question.  You know, we've talked about NAT routers extensively as providing inherent security because they don't allow unsolicited traffic to come into your network.  My sense is that's really enough.  Now, if manufacturers are going to offer more features, for example, stateful packet inspection, where they're actually tracking the state of the protocol as it goes back and forth, I mean, it provides theoretically better protection.  And I like the idea that maybe it offers much more configuration flexibility.  For example, the guy, for example, who was configuring ZoneAlarm only to allow incoming traffic on a certain port.  A firewall router will probably have that built in, so you wouldn't have to use ZoneAlarm on your computer, but instead you could say allow incoming traffic on this port only from this IP range.  So more features of a security nature are probably a good thing.  But I wouldn't ever suggest that someone go out and buy, like, buy another router just to get those more features.



LEO:  Well, and also you could legitimately label any router, NAT router, a firewall.  So just because it says "firewall" doesn't even mean you get more features.



STEVE:  And any NAT router is doing...



LEO:  They're doing it.



STEVE:  ...stateful packet inspection.



LEO:  Right, right.



STEVE:  That's what it means to have a packet come in and inspect it and check the state of the connection table to figure out which machine to send it to.  That's...



LEO:  Does any form of SPI do more than that, look at the actual contents of the packet or, you know, try to assess what's going on, anything like that?



STEVE:  They say they do, and it's theoretically possible; but how would we ever know?  I mean, no, I mean, really, it's just - don't buy one.  I mean, if you don't own a router yet, buy the most secure fancy-schmancy stateful packet inspecting firewall, you know, router that you can afford.  But...



LEO:  And you still may not be getting anything better than your Linksys WRT54G; right?



STEVE:  Well, certainly if it's got features that are exposed on the user interface...



LEO:  Right, right.



STEVE:  ...of the router.  If it's got extra fancy, you know, firewall features, timed availability so, like, instant messaging is only available during these hours, you know, those kinds of things are cool.  But...



LEO:  And useful, yeah.



STEVE:  But really, any NAT router is providing you with great security.  Beyond that, well, it doesn't hurt.



LEO:  There's a company which shall remain nameless, mostly because I just can't remember the name, that sells what is essentially a router with an on/off switch, and - for twice the price - and claims it to be a, you know, high-security firewall router.



STEVE:  That's got to be the dumb idea of the century.



LEO:  Well, you could turn off the Internet.  I mean, that is secure.



STEVE:  Or you could just unplug your computer.



LEO:  Yeah.  Well, that's a good point, yeah.  You just shut down.  That'd have the same effect, wouldn't it.  Another correspondent writes - and by the way, if I could ask people, when they fill out those forms, if you want to get a question on the show, it would be great if you'd put your name and city, just so we can give you credit.



STEVE:  Yeah, that'd be cool.



LEO:  Yeah, just, you know, say - make up a name if you want.



STEVE:  You know, before we leave the last topic, I'll mention that one of the cool things that Windows 2000 and XP do is, if you right-click on Network Neighborhood and then do Properties, it'll show you your various adapters.  You're able to right-click and disable an adapter.  And in fact I use it on my laptop all the time because I've got, you know, adapters coming out my ears.  I've got multiple Wi-Fi, I've got, you know, VPN, I've got several different interfaces.  And I deliberately keep them all disabled, and then I selectively enable the one that I want to use.  So that's another nice way of sort of taking your machine off of your LAN if you're not using it.  I mean, it's certainly not super secure, but it's a little nicer than literally unplugging your computer from your router.



LEO:  And it would protect you against incoming traffic, although if you had a bad boy on your system...



STEVE:  Right.



LEO:  ...they could probably turn it back on.



STEVE:  No doubt.



LEO:  If they were smart, you know, if they were checking for that, I guess.



STEVE:  Yup.



LEO:  I'll make up a name.  Doleful in Duluth writes:  If I use my home network from somewhere else to access the Internet, what would the resulting speed be?



STEVE:  Ah, that's really a good question.  And it brings up a good point.  We will be promoting the idea of people running some sort of an OpenVPN server on their home network, either their own little, you know, plastic Linksys router that they've reflashed with OpenVPN, or running OpenVPN server on a Windows machine, which is then used, not only to give them access inside their network, but as their connection to the Internet.  But we know that many connections to the Internet are not the same speed upstream as they are downstream.  Instead of being symmetric speed, they are asymmetric connections.  And what's normally the case is that the traffic downstream toward them is high speed, for example, for downloading, but their outbound traffic is low speed.  And this allows their providers to basically sort of change the bandwidth allocation to optimize it because upstream traffic actually takes more channel bandwidth if you're going to have high-speed upstream traffic.  But when you're out roaming around, and you're connecting to your server at home, then your traffic has to come down your connection to your home and then, if you're going out on the Internet, back out your connection to go on the Internet.  Basically what this means is that your effective speed is the lower of your upstream and downstream speed.  It's not the greater.  So surfing the Internet using your home connection as your entry point to the Internet would be slower than just using it from your home and not needing to have traffic coming downstream as well.



LEO:  That's a very good point.



STEVE:  Yeah.



LEO:  Can a Sony rootkit or any rootkit be removed by reformatting the hard drive and doing a clean install of the operating system?  Isn't that one way to get rid of it?



STEVE:  Yes, absolutely.  It's...



LEO:  Nothing's going to survive a format and install.



STEVE:  Nothing.  Now, it's a little trickier if you had a multiboot environment, where you had multiple operating systems on the drive.  You'd want to make sure that you got it off of the drive.  There are viruses which are able to install themselves in the partition table and in the first track of the hard drive, that are able to install or able survive reformats and reinstalls of the operating system.  But that's not a rootkit.  A rootkit is a compromise of the OS.  So if you wipe it clean and reinstall it, you know, that rootkit is gone.



LEO:  Good.  Sony, by the way, recently announced that they were going to settle a class-action lawsuit against them over the rootkit.  And they're going to offer people money for the CDs that they bought, and they're going to offer trade-ins, and they're going to stop doing it and offer an uninstaller.  So maybe they've seen the light.



STEVE:  Oh, if this hasn't shown them the light, they'll never see it.



LEO:  Nothing will.  For the VPN, I would love to set one up on my home server.  Unfortunately, my DSL provider gives me a private IP address, not a public IP address.  Is there any way, short of getting a public IP address, to connect to my home network from the outside world?



STEVE:  Wow, that's another great question.  So...



LEO:  I haven't heard of this.  So what is going on here?



STEVE:  And it is becoming more and more common.  He's actually got a provider, his ISP is giving him, like, a 10. address, or a 192.168.  So he doesn't actually get from his ISP a publicly routable IP like most cable modem users have, for example, you know, it's 66 or 64 or something.



LEO:  That seems like a good idea from a security point of view.



STEVE:  Well, it is because he's never having any unsolicited stuff coming in.  Basically what it means is, his provider is running a big NAT router on his behalf.  The bad news is, it totally precludes him from running any servers.



LEO:  Ah, which is probably another reason the ISP does it.



STEVE:  Well, exactly.  So the only solution for him is Hamachi.



LEO:  Hamachi gets around that.



STEVE:  Yes.  If Hamachi will work for him - and he'll have to give it a try.  But if Hamachi will work, it will in the same way that Hamachi is able to go outbound through a user's own local NAT router, it ought to be able to go outbound through his ISP's NAT router.



LEO:  It does NAT traversal with the ISP's router.



STEVE:  Exactly.



LEO:  Interesting.  So it tunnels through, basically, the router, and you've established a connection.



STEVE:  Yeah.  So I would imagine that, if Hamachi works for him, it's the only thing I can think of that would work for him.



LEO:  Another reason to love Hamachi.  This is kind of related to the slowdown question before.  Isn't using a VPN inherently slower than just an unprotected connection?  I guess the encryption would slow it down, wouldn't it?



STEVE:  The encryption can.  And in fact, in the case, for example, of Hamachi, Alex will be offering a non-encrypted variant for Hamachi, specially for gaming guys who are extremely concerned about the latency through the network.  The fact is, on modern computers, encryption is a very low overhead overall.



LEO:  They're fast.



STEVE:  They really are.  I mean, encryption, I mean, you could even use RC4, which is virtually, I mean, it's so fast and still very good encryption that is just representing no overhead.  So, well, for example, Leo, I'm going to be using RC4 in my own experimenting with VOIP stuff because I don't want encryption to slow us down...



LEO:  Right.



STEVE:  ...and there's just no need for anything more.  However, VPNs are slow, not because of encryption, but for two reasons.  And I want to hammer this home.  In fact, people are complaining about iPig and slowdowns with iPig, and in fact iPig's stalling sometimes.  Stalling is what happens when you are tunneling TCP through a TCP tunnel.  If you suffer packet loss, then the external tunneling protocol, TCP, will start asking for packets to be retransmitted.  But the internal TCP protocol will also start asking for packets to be retransmitted, which ends up creating a complete bog down of the VPN protocol.  So this is really a fault, not of the VPNness, but of the particular technology used to implement the VPN.  So unfortunately, iPig, cool and free as it is, it can have problems, which you will see if you're on a connection which is too slow or is suffering from packet loss.  You can have problems.  The traditional VPN protocols, IPSec and L2TP and PPTP that we've talked about before, they avoid using TCP just for this reason.  They have their own tunneling protocols.  And what is becoming my favorite solution, OpenVPN, it's able to use UDP in order to avoid that problem.  So it's really, I mean, encryption is some overhead, but it really should no longer be a real problem.  It's just the implementation of the VPN that can cause problems.



LEO:  Won't disabling - another viewer writes, Secure in Encino - won't disabling my access point's SSID keep my network secure?  Now, I thought we'd flattened this one.  This is turning off the broadcast ID.



STEVE:  Yeah, we have flattened it.  And it brings up a good point.  We're going to be needing to sort of move forward with these security topics and not continually address things that we have in the past.  So I'm going to be presuming that we're building on a foundation of knowledge as we move forward and be referring to things that we've talked about.  So I want to answer the user's question; but I want to say that, you know, we've covered this, and it's really going to be important for people to spend some time to catch up on our prior podcasts so that they're moving along with everyone, and we're not penalizing the people that are, you know, keeping themselves current.



LEO:  Yeah.  I mean, we have the same problem on the radio show and the TV show, and there are certain things that just come up again and again and are worth, I guess, addressing.  But we have covered this one pretty thoroughly.  Just the short answer is...



STEVE:  It prevents - blanking or disabling the broadcast SSID from a node does not provide you with security, but it does provide you with the prevention of people using your bandwidth by mistake.  It's much like MAC address filtering.  If you tune your access point only to accept data from known adapters or known MAC addresses, then it will prevent your neighbors from inadvertently using your node and your access point.  But it will not prevent someone who really wants to use your connection from doing so.  So both MAC address filtering and SSID hiding, they will prevent inadvertent access; but they should not be confused with real security.



LEO:  And finally, could you explain port knocking - that's with a K-N, knocking - and how I can use it?  From what I've heard, it seems like a great solution for allowing controlled access to a system or network.  What is port knocking?



STEVE:  It's very cool.  Unfortunately, it's still very unavailable.  The idea is, say that you have a router that's got no exposed open ports, yet you want to connect into a router from outside.  For example, say we were running OpenVPN server, and a user wanted to connect into his OpenVPN server, but he didn't want to leave his router's port open and forwarding traffic in all the time.  Port knocking is just so cool.  You send a sequence of packets at your router on closed ports.  And, you know, closed ports don't do anything.  But the router knows they hit there, and it drops them.  But the idea would be, you configure your own secret sequence of packets to send.



LEO:  You mean, knock, knock-knock-knock-knock, knock knock.



STEVE:  Yeah, exactly.  Exactly.  And so you configure your own secret sequence to send.  And when the router sees it, then it knows it's you because you've given it the secret knock.  And then it opens the port and allows your data through.  So...



LEO:  I like that.  It's kind of like a call-back, a little bit.



STEVE:  Yeah.  It's, well, it's very cool.  As far as I know, no commercial routers offer it yet.  It's becoming available on, like, you know, in Linux systems and in other Open Source systems.  I hope it becomes a widespread solution.  It means you need something fancy over on your computer to send out the special knocking sequence.  But, you know, that's not a big deal.  And it's just - it's a very cool solution because it allows you to be absolutely stealth until it knows it's you.  Oh, and the source IP of the knocking packets.  If the router was really clever, it wouldn't open the port to everyone, it would only then allow unsolicited packets from your IP from which the knocking packets came.



LEO:  Oh, very important, yeah.



STEVE:  So it's very - it's a very, very cool technology.



LEO:  I like it.  Knocking.



STEVE:  As it happens, we'll be letting people know.



LEO:  Oh, we are?  We're going to do some stuff on port knocking, huh?



STEVE:  Oh, sure.  I mean, as it becomes available.



LEO:  I hadn't really heard about it.  I like it.  Well, I thank you for making yourself so available.  Steve Gibson, it's always a pleasure.  Security Now! appears every Thursday afternoon, thanks to the good graces, I have to say, of your company's SpinRite and GRC.com.  SpinRite is the world's best file recovery and disk maintenance utility, still available and always getting better.



STEVE:  Well, yeah.  In fact, it's at Version 6, of course.  And you're right, it's SpinRite's ongoing sales and success that basically, you know, pays for my bandwidth, pays for my time, and lets me do this.



LEO:  Yeah.  Because this has pretty much become a full-time job for you, I know.  I know at least it was with OpenVPN.  And of course, thanks to our friends at AOL Radio who broadcast this show on their podcast channel and offer us the bandwidth so that the downloads are free to you.  That's at AOLmusic.com.



What are we going to talk about next week, Steve?



STEVE:  Next week we're going to sort of start off the New Year with talking about how the Internet works.  It'll be a review for people who already think they know it all, but it will answer a question I had in the very beginning and that I know lots of people have, you know, what actually are packets?  What actually are ports?



LEO:  Oh, great.



STEVE:  And how does all that work?  We're going to sort of start laying a foundation for security understanding by talking about some stuff that we've referred to but have never really taken the time to define.



LEO:  There's a couple of people I saw complain, well, sometimes it's a really advanced show, and sometimes it's a really basic show.  But I like the mix because I learn something on all of the episodes.  And eventually, you put it all together, you've got a pretty good education in how this stuff works and how security works.



STEVE:  Yeah, in fact some people have written that the Security Now! podcast is becoming an assignment.  Their teachers are telling...



LEO:  That's great.



STEVE:  ...to listen to the podcasts.  So...



LEO:  I like that.



STEVE:  ...it's very cool.



LEO:  You're the teacher we always wish we'd had.  Thank you, Steve Gibson.



STEVE:  My pleasure, Leo.



LEO:  Happy New Year.  All the best in 2006.  Look forward to another great year of Security Now!.



STEVE:  Here it comes.



LEO:  Take care.





Copyright (c) 2005 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#21

DATE:		January 5, 2006

TITLE:		The Windows MetaFile (WMF) Vulnerability

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-021.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss everything known about the first serious Windows security exploits of the New Year, caused by the Windows MetaFile (WMF) vulnerability.  In our show's first guest appearance, we are joined by Ilfak Guilfanov, the developer of the wildly popular - and very necessary - temporary patch that was used by millions of users to secure Windows systems while the world waited for Microsoft to respond.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 21 for January 5, 2006:  The WMF Vulnerability.



Via Skype today because we're going to do a little conference call:  Steve Gibson joining us from Irvine; I'm in Northern California; and soon to join us, Ilfak Guilfanov.  We're talking about the Windows MetaFile (WMF) vulnerability.



Steve, why don't you recap the story so far.



STEVE GIBSON:  And I have to tell you, Leo, that with this new microphone, even Skype sounds pretty good.



LEO:  You sound really good.



STEVE:  Hello.



LEO:  With your PR-40, yeah.



STEVE:  Yup.



LEO:  All right.  Thanks to Bob Heil.



STEVE:  Okay.  So the Windows Metafile vulnerability is something which came to light due to its exploitation.  The good news is that people didn't - the people who figured this out did not go stealth with it.  Although on the other hand, of course, we don't know how long this might have been used secretly before it came to light up public attention.



LEO:  And that's an important point because we called this a "zero day vulnerability," in other words, the exploits emerged immediately.  But in fact it was the exploits that introduced us to the vulnerability.  It wasn't Microsoft that announced it; or was it?  Or was it a security firm that announced it?  Who first discovered it?  Was it SANS Institute or...



STEVE:  The timing was so close, I don't know.  Although certainly Microsoft did have a notice up on - I believe it was on the 27th.  On Tuesday the 27th they put up a notice saying that they realized there was a problem.  It was in active exploitation.  And they then set about fixing it.



LEO:  So we really don't know how long the exploits have been going on, frankly.



STEVE:  No, I mean, in fact, you know, there have been people, sort of the conspiracy theorist people, who wonder, you know, that the NSA or CIA or, you know, shadowy government bodies might not have access to our machines with, you know, knowledge or not of unknown and still undisclosed vulnerabilities.  So...



LEO:  Because this is like a backdoor.  Not an intentional backdoor, but it's very - it gives you that functionality.  It's essentially a backdoor into Windows that Microsoft didn't mean to put in there, but has been there as far as - as long as we can tell.



STEVE:  Actually, as we know, it's a backdoor that they did mean to put in there.  This thing was designed in.  It's not a mistake.  It's always been there.  And someone realized, hey, we can use this to run whatever code we want on users' computers.



LEO:  It was done in a day, I guess - and we've talked about this before - when programmers assumed the benevolence of their users and so gave them capabilities, not assuming that their users would be malicious.  But of course now all programmers are trained to assume that users are malicious and to make sure they don't include this kind of code.



STEVE:  It's a whole different mindset today.



LEO:  When the vulnerability was discovered on Tuesday, Microsoft offered a kind of a rude fix for it, which was essentially to unregister a DLL.  Turns out that wasn't a very good fix.  And very quickly, a fellow named Ilfak Guilfanov stepped forward.  Who is Ilfak?



STEVE:  Ilfak has actually been known within the developer community for quite a while.  He's the lead developer for a company called DataRescue.  He's largely responsible for an amazing disassembler called the IDA Disassembler, which is really highly useful for anyone who's trying to take a blob of code to which they do not have the source and figure out how it works.  And so for people who are disassembling and reverse-engineering viruses and other kinds of malware, it's a very powerful tool for giving them a look into unknown code.



LEO:  I wonder if he used his disassembler to figure out what the WMF interpreter was doing.



STEVE:  I have no doubt that he did.  In fact, I will be, if I end up writing a patch for Windows 9x.



LEO:  Interesting.  Well, we're fortunate enough - he lives in Li�ge, Belgium, and it is after 10:00 o'clock at night there.  But we are fortunate enough to be able to talk to Ilfak right now.  So let's dial him in via Skype.  Hello, Ilfak.



ILFAK GUILFANOV:  Hi.



LEO:  Hi.  This is Leo and...



ILFAK:  This is Leo?  Okay.



LEO:  Yeah.  And Steve is with us.



STEVE:  Hi, Ilfak.



ILFAK:  Hi, Steve.



LEO:  And we all are good.  I'm so glad that you could join us for this.



STEVE:  Ilfak, the one thing that I've seen mixed issues about is whether this vulnerability is created by a buffer overrun bug in the Windows Metafile processing, or is it just taking advantage of a feature which is working correctly and has always been there.



ILFAK:  It is the latter, the second.  It's not a buffer overflow.  It is something that is by design.  So the design of these WMF files allows to specify a code sequence to be executed.  And this code sequence is in the file itself, so anything can happen.



LEO:  And Windows makes no check on what that arbitrary code is.  It just allows you to execute any code at all.  Does the code have the same privileges as the running user?



ILFAK:  Yes.



LEO:  Wow.  So if you're running as administrator, that's where the issue occurs.  If you were running as a limited user, would you have a problem?



ILFAK:  Well, you will still have problems like, for example, this malicious code could destroy, could delete your files or do something bad to your data.



LEO:  Anything you could do.



ILFAK:  Yeah.



LEO:  But of course when you're running as administrator that includes installing a trojan horse or other malware.



ILFAK:  Yeah.  Everything can be done to your computers, yeah.



STEVE:  So this means that this code, or this feature, rather, has always been there and that - I mean, like for 15 years, at least.  And so suddenly someone realized, basically had an inspiration that they could use this longstanding feature working correctly in Windows in order to leverage attacks against users who opened images.



ILFAK:  Yes.  Or they just found it by chance by just looking on the code, at the specification of these WMF files.  And they saw, okay, that's something we can do with - we can do anything with a computer if we feed it a specially crafted WMF file.



LEO:  It's really amazing that this hole has existed for so long.



ILFAK:  Yeah.



LEO:  Do you think anybody knew about it before but was keeping a secret?



ILFAK:  Well, I think that, since the feature existed since long ago, there were people knowing about it, but they were not looking at it as something to exploit.  After all, this feature is there by design.  So it has a - it can be used for good, not only for bad things.



LEO:  Right, right.



STEVE:  What do you think Microsoft will do, then, with this patch, in order to eliminate this without breaking any applications that may have actually been using this in the way it was intended?



ILFAK:  Oh, it's a very, very tough question.  I wonder what Microsoft will do with this.  I don't know.  Really I don't know because the feature itself is a vulnerability.



LEO:  So, Ilfak, what does your program do?  Does it completely disable Windows Metafiles?



ILFAK:  No.  It doesn't disable the files.  It just disables one single function in these files.  It's the function that executes this arbitrary code.



LEO:  So that's presumably something Microsoft could do.



ILFAK:  Yeah.



LEO:  I wonder if it would break a lot of software.  Have you heard reports that your patch is causing problems for people?



ILFAK:  Yes, there were some reports like an old printer does not print anymore, something like that.  I heard about problems, printing-related problems.  So there might be some broken applications.



STEVE:  Well, and in fact that was something that you expected and talked about early on when this began to spread, that is, when your patch began to be used last weekend, was that it was clear that this involved printer-related aspects of Windows Metafiles.



ILFAK:  Yes.  I put a warning on my blog, saying if you apply these patches, there might be some bad consequences like printing problems or something else.  I cannot tell.  I cannot tell, but there might be bad problems.



LEO:  Ilfak, you fixed the problem for Windows 2000 and Windows XP.  But as I understand it, the problem also exists for Windows 95, 98, and ME.  Is that true?



ILFAK:  Oh, there were different opinions about this.  And I still don't know for sure if these systems are vulnerable or not.  They use completely different code.  XP and 98 systems are different in this.  They use different ddi.dll library.  So I just cannot tell if they are vulnerable or not.  But most likely they are not.



STEVE:  Now, your vulnerability checker does say that the system - that, when run on a 98 system, that it may be vulnerable.



ILFAK:  Then it may be.  I just, you know, I don't have the computer with 98, and I cannot check myself.



STEVE:  Oh, okay.



ILFAK:  That's, unfortunately, that's the...



STEVE:  What's interesting is that Microsoft has just reissued their standard policy page.  They've moved the 9x and ME systems off of that, which were previously listed.  And in the FAQ section, they're saying now that they don't consider this to be a critical vulnerability because they haven't found an explicit way that this vulnerability could be used.  And presumably it means they're not going to be patching the 9x and ME systems.



LEO:  And since no one knows if you're vulnerable, it's kind of a little bit scary.



STEVE:  What I've told people on my site is that, if Microsoft doesn't fix this, I will.



LEO:  Ilfak, how did you come to know about this vulnerability, and how did you write the fix so quickly?



ILFAK:  I learned about it, as everyone else, from the news that's on the Internet.  And I thought that it was a really dangerous vulnerability this time because you just go somewhere and browse, and that's all.



LEO:  Microsoft did a kind of a very broad patch, but recommended a very broad patch, which is just to unregister the DLL.  Did you feel that that was inadequate and decide to do something better?



ILFAK:  Well, since the problem itself is not in this unregistered DLL, I felt that it might not be enough in all cases.  That's why I developed my patch.



STEVE:  Well, and you were, of course, completely correct.  The shell image viewer DLL, which is the one that Microsoft was recommending be unregistered, it was sort of a quick workaround that Microsoft felt comfortable recommending early on.  But it was even then well known that there were other ways you could get Windows to parse a file that turned out to be a Windows Metafile, even if it didn't have a WMF extension, because Microsoft's looking inside the header of the file.  And it was, you know, clearly not a good recommendation, although it may have been all Microsoft could do at the time.



LEO:  Right.  Ilfak, how many people downloaded that file from your site before Hexblog was shut down?



ILFAK:  That's a difficult question because my site went down, and I could not even check my logs.



LEO:  Oh, my.  So you don't know.



ILFAK:  No, I don't know exactly.



LEO:  Steve, you've had at least 200,000 visits to the page, yes?



STEVE:  Yes, we have.  Actually, now we've crossed a quarter million.



ILFAK:  Whoa.



STEVE:  Our Episode No. 20 show notes crossed a quarter million viewings earlier today.  It's at 252,711.  So, I mean, this has clearly been, I mean, I've been seeing more site traffic myself at GRC than, you know, than I've seen in a long time.



LEO:  Yeah.



STEVE:  And interestingly, Tuesday was even busier than Monday, and Wednesday was busier than Tuesday.  Today it's quieting down and slowing down a little bit.  But it's really, I mean, as the word spread, the need for this has been, you know, really widespread.



Ilfak, did you expect that what has happened was going to happen, that there would just be this incredible demand for what you wrote just basically for yourself; right?



ILFAK:  No, I didn't expect anything like that.  I just looked at this as a technical problem.  I wanted to solve it, like to protect my computer and to present it to others.  And it's up to them if they want to use it.  If they use it, if they don't want to use it, again, it's their choice.  I respect it.  But it turned out to be much bigger than I thought.



LEO:  Well, at this point PC Magazine, eWEEK, Steve Gibson and many others have recommended the Ilfak Patch.  And as far as I know, it's the only effective patch out there.  You are updating it; it looks like you have updated it.  You're now at version 1.4.  Tell me about the updates.  Do they change the functionality of the patch?



ILFAK:  No, they don't change anything in the patch itself.  So if the very first version of patch works for you, there is no need to install or reinstall anything.  It works pretty well and is the same protection as in the first version.  The first version or the last version will give you the same protection.  The only difference is that the first versions were not compatible with all systems.  And each new release was adding support for a new version of the operating system, like Windows 2000 or SP2 or something like that.  That's the only difference between the releases.



STEVE:  Well, in fact, that was how you and I first communicated, was you and I worked to add Windows 2000 compatibility to your very first release.



ILFAK:  Yeah, yeah, yeah, exactly.



LEO:  Well, we want to thank you on behalf of the entire Internet community, Ilfak.  Obviously what you've done is you jumped into the fray when Microsoft was unwilling to and, frankly, risked liability doing so.  And I think it's very brave of you, and I think it's a really great contribution.  So thank you very, very much.  I've run it, and I know everybody else who's listening has.



STEVE:  Yes, thanks, Ilfak.  And...



ILFAK:  I am happy to be of any help.



STEVE:  Well, and certainly we now know that there are literally hundreds of websites that are distributing images, trying to take advantage of this exploit.  And, you know, who knows how many computers your patch has actively helped prevent being taken over by whatever malware was being used by this exploit in order to move it into people's computers.



ILFAK:  Oh, we don't know.  But let's hope that we have protected as many computers as we could.



LEO:  But of course that raises the issue that, if you were already infected, running Ilfak's patch isn't going to in any way remove any malware on your system.  It's just going to prevent further infections.  But your infection is still there.



ILFAK:  Yeah.



STEVE:  Well, that - yeah.  And of course it raises an interesting point.  People keep asking, how do I know if I've been infected by this?  And they misunderstand what the "this" is.  The exploit is sort of, like, creates an open door that allows anything else to be carried into your computer.  So it's not so much that you're being infected by this exploit as much as, you know, it's being used to install Lord only knows what into your machine.



LEO:  And even if you close the barn door, the horse may well be gone.  Ilfak, I know it's late in Li�ge.  So we thank you so much for joining us.



ILFAK:  Thank you, Steve.  Thank you, Leo.



LEO:  And once again, thank you for the great job you did.



ILFAK:  Thank you.



LEO:  Ilfak Guilfanov, take care.  Goodnight.



ILFAK:  Bye.



LEO:  Great to talk to Ilfak.  And I didn't want to scare him, but I did raise the issue.  You know why Microsoft is slow to release these, of course, is the liability issues if the patch goes wrong or is perceived to go wrong by people.



STEVE:  Well, and it has happened before that they've come out with a security patch which has broken other things.  They did one, in fact, that we've referred to in a prior podcast, where they messed up some aspect of segment size.  I can't remember exactly what it was now.  But, for example, it caused VPNs that corporations were using to suddenly break after the corporations deployed the patch.  So, yeah, I mean, it's really understandable.  Now, we should mention that, by the time anyone hears this, Microsoft's final real official patch for Windows and for this whole Windows Metafile vulnerability will be publicly available.



LEO:  Let's talk about that because it leaked out earlier.



STEVE:  Right, it leaked out Tuesday night, actually.



LEO:  And normally Microsoft waits till the second Tuesday of the month for their patch cycle.  So you're saying on Thursday the 5th at what time they're going to release the official patch?



STEVE:  It's at 2:00 p.m. on the West, which of course is 5:00 p.m. Eastern.



LEO:  Just about as we record this, in fact.



STEVE:  Right, a little bit after we're recording it, it'll be made available.  And this will be the official patch.  I was notified that it was available Tuesday.  I quickly grabbed it.  I took great pains, of course, to check the digital signature chain to make sure that this was, I mean, really, truly from Microsoft.  And I verified that the root certificate that was anchoring the trust chain - of course we'll be talking about all of this stuff in podcasts very quickly, I mean, very soon here in 2006.  I verified that it was the same root certificate that had signed other patches, official patches from Microsoft.  So the only way for that to be true is if this file that I had downloaded from some file archiving site was truly signed by Microsoft.



LEO:  Let me ask you, did you run the patch?



STEVE:  I did.



LEO:  And did it fix the vulnerability?  In other words, did the tester that Ilfak has written come up clean?



STEVE:  Yes, it fixed the vulnerability.  And what was interesting, and what I wanted to verify for everyone, was that there wasn't any problem interaction between what Ilfak had done and what Microsoft has done.



LEO:  Right.



STEVE:  And of course I did review the source code when I was working with Ilfak on this last weekend.  So I knew that, I mean, I knew to expect no problem.  And so my advice had been to go ahead and install Microsoft's patch when it's available, and then remove Ilfak's.  See, what his does is actually it suppresses the vulnerability.  It doesn't actually patch the files, as you and I talked about in our special edition of Episode 20 over the weekend; it just prevents this from happening without actually modifying, physically modifying the file.  It makes some in-memory changes that just sort of kills that function that Ilfak was explaining is something deliberately that's always been part of Windows Metafile.



LEO:  So his program loads on boot and runs in memory, blocks it; but Microsoft's will actually patch the - presumably will patch the underlying file.  At which point you would want to uninstall Ilfak's patch.  There's no reason to have that running in memory.



STEVE:  Correct.  And the other thing that was really interesting is that Microsoft's file, the version of the new GDI32DLL, which is the single file that's changed, it was dated Wednesday evening of last week.



LEO:  Hmm.



STEVE:  Meaning they really did jump on this immediately.



LEO:  And were able to fix it.



STEVE:  Yes, as far...



LEO:  It seems like it would be a simple thing to fix.  You just, you know, you turn off that arbitrary code execution...



STEVE:  Well, I mean, and that really is the issue.  And I don't yet know, and Ilfak doesn't know, I don't think anyone knows until we look at the code or until Microsoft formally states what it is they've done, I mean, they have actually had to turn off, perhaps turn off a feature which Windows Metafile processing has had from its inception.



LEO:  And some GDI printers will expect, apparently.



STEVE:  Well, yes.  Which is certainly a feature that's going to have some interaction.  Now, I received a blurb - because I've been in the middle of all this here for the last week.  Nothing else has been done over at GRC except, you know, dealing with this.  And I may in fact find myself writing a patch for Windows 9x and ME users if Microsoft doesn't address it.  And it looks like they're not planning to, which is distressing a lot of people.



LEO:  Well, I think they're end-of-line on those products.  They don't promise support.



STEVE:  Actually not.



LEO:  No?



STEVE:  I checked that out, and they are officially supporting 98 and ME through June of 2006.  They had originally said they were going to end it, I think sometime in 2004.



LEO:  Right.



STEVE:  And there was such a hue and cry from people saying, hey, wait a minute, we're still using these things, and the code's buggy.  We need you to keep it current.  So they said, oh, okay, fine.  And but so arguably they really should patch Windows 98, but apparently they have no plans to.



LEO:  Well, we'll see.  I mean, they may not do it today; they may do it later.



STEVE:  I heard a quote from someone - actually it was a press person who forwarded to me something from Microsoft's website.  It was, I think, a PR person that he was speaking with, saying that as a consequence of this they're going to be reexamining other things like this.  And he said, you know, what do you make of this, Steve?  And so, you know, decoding it from, you know, PR speak, it sounded like exactly what Ilfak has said.  And now this all sort of makes sense.  It's they may have looked in the past at opportunities for buffer overruns, but this was not a buffer overrun.  This was written in the days when nobody was thinking about security.  No one was...



LEO:  It made sense to write a feature that, if the file format is corrupted or fails, you're allowed a fallback routine.  And it sounds like, if they did it in this, they may have done it in many, many other situations.



STEVE:  Well, and what's really interesting is that the image itself, or that is to say the Windows Metafile itself, contains the code which you can cause it to execute.  So it was like, I mean, you know, it was literally like by design an image file would contain executable code.



LEO:  Well, I guess - I'm just guessing, reading tea leaves, that the idea was that you would put some sort of fallback routine if the GDI calls weren't - I would imagine an issue was if the GDI calls weren't supported.  Maybe there were various versions of GDI.  And if a printer didn't support the calls necessary to render the image, then you could have a fallback routine in the image, something like that.



STEVE:  Yeah.



LEO:  And I bet you that that's a technique that Microsoft has used widely, which means hackers are going to be looking for other areas to exploit.  And there may be many.



STEVE:  Well, certainly with our current understanding of security, no one in their right mind would create a file format which contained, you know...



LEO:  Executable code.



STEVE:  Literally, where you could put binary code in.  Now, you know, there are, I mean, you know, people are having all kinds of problems with scripting.  And I know that, you know, we've seen PDF files that have had problems.  And PDFs are, you know, executable PostScript-style code.  So, you know, these kinds of powerful technologies, you know, with the power comes security concerns.



LEO:  One wonders if Adobe used a technique like that in the PDF file format for a failback routine.



STEVE:  Well, it couldn't have been binary executable because, of course, PDFs have always been cross-platform.  They've been able to run...



LEO:  And they're texts, they're interpreted texts, basically.



STEVE:  Exactly.



LEO:  Yeah, yeah.



STEVE:  Whereas, in the case of a Windows Metafile, this was, you know, Intel binary code...



LEO:  Right.



STEVE:  ...where something just said, oh, start running here.



LEO:  Right.



STEVE:  And Lord knows.



LEO:  Wow.



STEVE:  It's been an amazing week.



LEO:  Well, Steve, I'm glad that we were able to cover this.  I know it wasn't on our schedule.  We were going to talk about other issues.  But we'll come back next week.  What will we talk about next week?



STEVE:  Next week we're going to talk about - we're going to lay some foundation for basic Internet technology, you know, what are packets, what is routing, what is the IP address space?  We'll talk about IPv6 and what it means, sort of lay some foundations for a number of different things we want to be able to talk about in the future.  So sort of like, you know, nail down some terminology.



LEO:  Once again, barring any nasty exploits of any kind because, of course, we always cover those first.  That's what this show is all about.



STEVE:  And for what it's worth, for people who are listening to this that have Windows 9x or ME, if it turns out that Microsoft is not going to fix this and there is a problem, and it seems to me that there is, I'll be coming up with some sort of a solution for it.



LEO:  Stay tuned.  We'll put a link in the show notes to Steve's site, talking about this vulnerability and offering Ilfak's patch.  Although, again, by now you won't need it.  You can run Windows Update, and Microsoft Windows will automatically be patched using an official Microsoft fix.  They plan to ship it on January 5th at 5:00 o'clock Eastern, 5:00 p.m. Eastern.  But again, you can go to GRC.com/sn/notes-020.htm, or I should say zero two zero dot htm, if you want to know more.  Or just go to GRC.com and go to the show notes page, and you'll find a link there.



Now Heil-powered for your enjoyment.  You ran out and got a PR-40, huh, Steve?



STEVE:  Yeah.  Well, you sounded so good when you switched to yours, I thought, okay, I've got to have one as big as Leo's.



LEO:  Steve, you should have asked me.  I'm sure Bob Heil would have sent you one.



[Talking simultaneously]



LEO:  He's a fan.  All right.  Well, thanks to Bob Heil for my PR-40, anyway.  And of course to AOL Radio and the AOL Podcast Channel, where this show appears.  And they provide us the bandwidth to make it possible to offer you Security Now! absolutely free, every single Thursday.  Steve Gibson, we'll talk again next week, if not sooner.



STEVE:  Right-o.



LEO:  Thanks for joining us.



STEVE:  Thanks, Leo.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#22

DATE:		January 12, 2006

TITLE:		The Windows MetaFile Backdoor?

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-022.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I carefully examine the operation of the recently patched Windows MetaFile vulnerability.  I describe exactly how it works in an effort to explain why it doesn't have the feeling of another Microsoft "coding error."  It has the feeling of something that Microsoft deliberately designed into Windows.  Given the nature of what it is, this would make it a remote code execution "backdoor."  We will likely never know if this was the case, but the forensic evidence appears to be quite compelling.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 22, for January 12, 2006:  The Windows MetaFile Backdoor.



Leo Laporte here with Steve Gibson.  We're back again.  And once again, we're going to put off our discussion of how the Internet works because we've got a blockbuster story for you tonight.



STEVE GIBSON:  Yeah.  We have to delay again.  Again, you know, we'll always do what needs to be done and then get back to our regularly scheduled programming.



LEO:  Okay, so first let's just circle back to previous episodes and catch up with anything we left out there.  Anything you want to update?



STEVE:  Yeah.  There were a couple things sort of in my category of errata.  Someone made the point that I refer to hackers as "hackers," rather than as "crackers."



LEO:  Oh, we get this every time.



STEVE:  I know.



LEO:  I get this so often.  Let's address it.



STEVE:  Yeah, exactly.  So I wanted to say something about it.  You know, for me, the term "cracker" just, I don't know, it sounds like, you know, what African Americans refer to white guys as, or like a saltine.  It just doesn't seem serious and evil.  And so, you know, I try to say "malicious hacker."  But, you know, on the fly, you know, when you and I are talking, I just say "hacker."  And...



LEO:  The point these guys are trying to make is that the hacking profession is an old and honorable one, and the Internet wouldn't exist without hackers, UNIX wouldn't exist without hackers, GNU - I mean, hacking is not, in and of itself, bad.  And so when we talk about bad guys as "hackers," they feel like we're besmirching the hacking community.



STEVE:  Exactly.  And, you know, I mean, well, it's two things.  It's a shorthand; and also, whether these people, these purists, the hacker purists like it or not, the definition, sort of the publicly accepted definition of "hackers" is changing to the dark side.



LEO:  Yeah.



STEVE:  So, for example, when I talk to people not in the industry, you know, who are not, like, saying, wait a minute, do you mean a malicious hacker or one of those good guy hackers, I mean, they know that hackers are bad.  And so...



LEO:  I think you can tell.  English is a very subtle language.  You can tell from the context.  We don't have to tell you we're talking about good hackers or bad hackers.  There are both.  And just listen to what we're saying, and I think it'll be obvious.  What I say when people - and I get this all the time still.  And I just say, look, we're trying to communicate in a language, a common language.  And if most people don't understand "cracker" and they do understand "hacker," that's the word we're going to use.  You're just going to - we're going to have to trust you and your good brains to figure out what kind we're talking about.



STEVE:  Oh, and Leo, if we started saying "cracker" all the time...



LEO:  I'm sorry, it's not going to work.



STEVE:  ...we'd cause a lot more confusion than just saying "hacker."



LEO:  It'd be very confusing.  Saltines?  What are they talking about?



STEVE:  Yeah.  Okay...



LEO:  So we know there are good hackers.  I consider Steve a hacker of the...



STEVE:  Yeah.



LEO:  ...best kind.  I mean, you hack away at code.  And I've done a little hacking in my time.  But neither of us has, to my knowledge, anyway, cracked into other people's computers.



STEVE:  No.



LEO:  That's a different kind of hacker, and you know...



STEVE:  Okay.  The second thing here in errata category is many people followed the advice from two weeks ago, which was Microsoft's initial advice about this Windows MetaFile vulnerability, of unregistering that shell image viewer DLL, shimgvw.dll.  And after Microsoft's patch came out last week - early, as we know - they couldn't find the instructions for reregistering.  So, I mean, it's simple to do.  It's regsvr32 shimgvw.dll does it.  In fact, it's probably in your Run command.  If you scroll down, you'll see the one with the -u, which means unregister.  Just remove the -u, and it reregisters it.  But I've also given the complete instructions, which were on the show notes for 20.  I've moved just the reregistration part over to the show notes for today's show, for Episode 22.  So anybody who wants to get it directly from the web page, just go to the show notes for 22.  And Leo, I imagine you might want to put that on your page, too.



LEO:  I will.



STEVE:  Because lots of people have said, hey, I've lost all my thumbnails.  Now what do I do?



LEO:  And that was a bad fix from Microsoft.  It didn't really fix the problem, and there's a better fix.  In fact, Ilfak's fix was better, and now Microsoft's fix.  And by the way, does Microsoft's fix work still?  I mean, are we still happy with it?



STEVE:  Oh, yes.  What they did was to remove this feature, which is what I think it actually is, from Windows after it was discovered.



LEO:  Now, let's - you just said something, and I think we can move on.  Are you ready to move on to the...



STEVE:  Yeah, yeah.



LEO:  Okay.  Let's talk about when you said "what I think it really is."



STEVE:  Well, remember that last week the way things ended was we weren't sure whether Microsoft was going to fix the earlier versions of Windows.  They were saying that they were offering a fix for Windows 2000, XP, 64, or 2003, but not for the older versions of Windows because the problem wasn't as bad on those machines.  They said there is a problem there, but it's not as bad, whatever that means.  And so I made the statement, hey, you know, if Microsoft ends up not fixing this, I'm going to fix it because, you know, who wants to be using a machine, no matter how old it is, where you go to a website and display a bad image and get your machine taken over.  That's not okay, even though it takes more, apparently, on those machines to display a Windows MetaFile image.  You have to have, you know, something needs to have registered the handling of Windows MetaFiles.  But, you know, the IrfanView program is a known way of displaying metafiles that is vulnerable, and many people use that.



LEO:  Yeah.  So you...



STEVE:  You know, and again...



LEO:  So this confirms that you are vulnerable if you're using Windows 95, 98, or ME.  Is that right?  You are vulnerable to the WMF flaw.



STEVE:  No.



LEO:  If you have something that can view Windows MetaFiles.



STEVE:  I'm still not sure.



LEO:  Oh.



STEVE:  And this sort of leads us into what I've been doing for the last week and what I've discovered.



LEO:  Okay.



STEVE:  What I decided to do was, you know - oh, and we should say that Microsoft - as most people probably know who are running the older versions of Windows, they've been left out to dry.  What happened was, Microsoft's original vulnerability report on their page listed all the versions that were affected by this Windows MetaFile "vulnerability."  And I'm putting "vulnerability" in quotes now, so you can hear those quotes around "vulnerability."  What happened later is that they moved the earlier versions of Windows - 98, Second Edition, and ME and NT - out of that category.  Well, it turns out that, in the process of doing that, it became a non-critical vulnerability by their definition.  And their definition for what's critical is sort of amazing.  I mean, and this is from a page on their website.  They say a vulnerability in Windows is critical only if its exploitation could allow the propagation of an Internet worm without user action.  In other words, anything else is not critical.



LEO:  Well, that's surprising because many of their patches, in fact, they call "critical," although they don't allow the propagation of Internet worms.



STEVE:  Exactly.  And so...



LEO:  Why are they fudging it like that?



STEVE:  It's amazing.  And so, get this, the next level down from "critical" is an "important severity" rating.  An "important severity" is a vulnerability whose exploitation could result in compromise of the confidentiality, integrity, or availability of users' data or the integrity or availability of processing resources.



LEO:  Ah.  So a rootkit is actually not a critical vulnerability, it's just an important vulnerability.



STEVE:  Very good point.  So, I mean, they...



LEO:  In Microsoft's language, which is clearly, patently absurd.



STEVE:  Well, they've defined - yeah.  They've defined this so that, I mean, almost nothing now is a critical vulnerability.  And then by moving the older versions of Windows out of that category, they said, oh, well, yes, we've agreed that we will patch older versions of Windows' critical vulnerabilities, but we're no longer maintaining those older versions for non-critical vulnerabilities.  In other words, this allowed them last week to say, oh, this Windows MetaFile exploit is non-critical, so the older versions of Windows we're not going to fix.



LEO:  In their defense, I guess what you could say is, well, if people choose to run an old, out-of-date operating system, we really can't be held accountable for it unless it impacts the health of the Internet.  In other words, if you choose to run an old operating system, we're not going to protect you, but we'll do our duty and protect the Internet.  I mean, that's not unreasonable, is it?



STEVE:  And I also agree that, you know, it makes sense for them to set some sort of sunset provision here where they're not being obligated to, like, for example, go back and patch Windows 3.0.



LEO:  Yeah.



STEVE:  Or, I mean, you know, or 95, the real legacy OSes that, sure, you could have put that on the Internet; but, you know, it's just so old, you know, where does Microsoft's responsibility end?  So, you know, I'm not arguing, I guess, with this.  But if, in fact, these machines are vulnerable, then I had committed, and I believe I should, to fix them for people because Microsoft, it was very clear then last week, was not going to.  So...



LEO:  And by the way, even if Microsoft doesn't consider it critical, certainly everybody else does, including the users who are susceptible to this.



STEVE:  Well, and there's still millions of Windows 9x and ME systems out there, I mean, actively on the Internet, that are now in some sort of unknown limbo state.  So over the weekend I rolled up my sleeves and sort of switched into what was really hacker mode.  You know, normally I'm writing code.  Now it's like, okay, I'm going to sort of follow in Ilfak's footsteps.  And I wanted to acquire an understanding of exactly what this problem was in order to determine for myself first if, in fact, these older versions of Windows were actually vulnerable.  And then, if so, I would certainly have a head start on how to cure that vulnerability.



So I started with what was known, which was the vulnerability in our existing versions of Windows, you know, 2000, XP, and so forth, and basically created from scratch my own GRC-style vulnerability testing tool.  And, you know, there was, you know, code snippets from the hacking sites.  And Ilfak had in fact published the source for his tester.  Mine ends up working differently because, again, I wrote it from scratch.  I have a different approach.  But I had a hard time getting this vulnerability to trigger.  I was creating metafiles.  I was using this, you know, this Escape/SETABORTPROC procedure that we knew was sort of the vector of exploitation.  Mine wasn't working.  And...



LEO:  And this is in Windows 98 you're talking about.



STEVE:  No, this is Windows 2000.



LEO:  Oh, you couldn't even get it in 2000.



STEVE:  I removed the patch from my system, and I could not get the exploit to trigger using a metafile that I created with my own code.  It just, you know, it came back and said it could not play the metafile, but it wouldn't run any of my own code.  So, you know, I scratched my head.  I looked at, you know, at the other samples of malicious metafiles.  And, you know, the way a metafile is built is there's a header, a set of bytes that's the header that talks about what version of Windows it's using, how large the whole metafile is, what the size of the largest metafile record contained within the metafile is, sort of gives Windows some orientation for the subsequent processing of these metafile records.  Then you have a series of metafile records where each one starts out with a four-byte size of that record in words, then a two-byte function number which is what type of metafile record this is, then followed by between zero or however many data that function requires.  So it's pretty straightforward.



Well, it turned out that, first of all, the way this Escape function was working was it didn't strike me as, like, erroneous.  That is, what this Escape/SETABORTPROC function does, the idea is that when an application is printing to the printer, it creates something called a Device Context.  I've got to get a little bit tricky here with Windows terminology.  But, you know, everyone will be able to follow along.  It creates something called a Printer Device Context where things like the thickness of the pen, the color of the pen, the size of the paper, sort of all the things that are about the context of this printing page are stored.  So once the application has a page ready, it turns it over to Windows and says, okay, here, go print this.  And essentially it's done with that page, and it gets on about its business, for example, maybe getting the next page ready to hand over to Windows to print.



The problem is, what if the user aborted that page, that is, aborted the printing of the page, after it had been handed over to Windows?  Since the application that's doing the printing has already turned responsibility for the printing over to Windows, there's really no way for Windows to say, hey, oops, just want to let you know the user canceled your print job.  So this SETABORTPROC is a means for giving that printer context, that printer device context, a subroutine that Windows can call back in the application.  It's called a "callback," in fact, because Windows calls back the application to notify it if the user or something causes an abort of the print job.  So, you know, that's what that is.  It's well understood.  It makes complete sense in a printer device context.



LEO:  So my understanding of it and the general understanding of it has changed a little bit.  It is just simply a callback routine that's designed for aborting a printing process so that you can callback the calling program.



STEVE:  Yeah.  Basically you're giving Windows a pointer.  You're giving Windows a pointer to a subroutine in your code and telling Windows, if the user aborts the print job, and I've given you a pointer, then call that subroutine of mine, which is a way for Windows to notify the application.  That's what that is.



LEO:  Right.



STEVE:  Well, okay.  First of all, it makes no sense at all in a metafile device context.  In the context of processing a metafile, setting a printer abort is crazy because it's not a printer context.  You don't print metafile contexts in this way.  It's just not the way it's done in Windows.  So it doesn't make sense.  But it's like, okay, well, so maybe, you know, it's there anyway; they didn't think to remove it or take it out.  Except that, when I was pursuing this and finally got it to work, what Windows did when it encountered this Escape function, followed by the SETABORTPROC metafile record, was it jumped immediately to the next byte of code and began to execute it.  That is, it was no longer interpreting my metafile records record by record, which is the way metafiles are supposed to be processed.  You don't actually execute the metafile.  As we said before last week, and I think the week before, it's sort of a script.  It's a script of Windows graphics calls that allow you to specify, you know, draw a rectangle from here to here, draw a line from there to there.  And it's in a nice sort of device-independent fashion.  So you don't run the code in the metafile.  But what Windows did when it encountered this particular nonsensical sequence was to start executing the next byte of code in the metafile.



LEO:  Hmm.



STEVE:  And it's like, okay, wait a minute.



LEO:  Why?



STEVE:  You know, that's crazy.  But what's even more crazy is what it took for me to make it do this.  As I said before, each record in a metafile begins with a four-byte length, followed by a two-byte function number.  So in other words, each metafile record has six bytes minimum that it can possibly be in size.  Oh, and since the size is in words, the smallest possible size for a metafile record would be three words long, or six bytes.  Look, the reason I had problems making this exploit happen initially is I was setting the length correctly.  It turns out that the only way to get Windows to misbehave in this bizarre fashion is to set the length to one, which is an impossible value.  I tried setting it to zero.  It didn't trigger the exploit.  I tried setting it to two, no effect.  Three, no effect.  Nothing, not even the correct length.  Only one.



LEO:  And why were you experimenting?  Isn't the exploit well known and documented, and isn't there exploit code floating around?



STEVE:  No.  I mean, what we've got, Leo, is a bunch of misunderstanding and sort of strange half explanations.  I mean, you know, and frankly...



LEO:  So none of the hacker sites have exploit code up.



STEVE:  Oh, no, many of them do.  But no one is really looking - see, they don't care about how Windows is working.  They just want to get their code to run.



LEO:  Right.



STEVE:  And so, you know, because I'm a developer when I'm not being a hacker, I wanted to understand - oh, and the other thing is, I want to write a robust testing application, you know, that always works all the time.  So I wanted to know, like, okay, what bytes have to be set which way, what matters, what doesn't.  Because, you know, that's the way you get something that is as solid as, you know, the code that I put out from GRC.  So what I found was that, when I deliberately lied about the size of this record and set the size to one and no other value, and I gave this particular byte sequence that makes no sense for a metafile, then Windows created a thread and jumped into my code, began executing my code.  Okay, Leo?  This was not a mistake.  This is not buggy code.  This was put into Windows by someone.  We are never going to know who.  We're never going to know - well, actually I'm going to find out when because we're going to know when this appeared because this appeared - I'm guessing this is not in older versions of Windows, which is why this function - or if it is in older versions of Windows, it's done slightly differently.  I'm still on the hunt.



So this is not my last report on this.  I expect to have a much better sense for this a week from now.  But the only conclusion I can draw is that there has been code from at least Windows 2000 on, and in all current versions, and even, you know, future versions, until it was discovered, which was deliberately put in there by some group, we don't know at what level or how large in Microsoft, that gave them the ability that they who knew how to get their Windows systems to silently and secretly run code contained in an image, those people would be able to do that on remotely located Windows machines...



LEO:  So you're saying intentionally or - Microsoft intentionally put a backdoor in Windows?  Is that what you're saying?



STEVE:  Yes.



LEO:  Well, that's a pretty strong accusation.  Could this not have been a...



STEVE:  Well, it's the only conclusion...



LEO:  It couldn't have been a mistake?



STEVE:  I don't see how it could have been a mistake.  Again, I'm going to continue to look at it.  But from what I've seen now, this had to be deliberate.  It was not what we were led to believe.  Well, and it's funny, too, because then I thought, okay, wait a minute, Microsoft has lied to us.  I reread the original vulnerability spec in, you know, their vulnerability page.  And they never say this isn't the case.  I mean, they describe it as a vulnerability, which it certainly is.  Nowhere, you know, is even what I'm saying contradicted by their page.



LEO:  So you're saying Microsoft, or people at Microsoft maybe unbeknownst to Microsoft, intentionally put code in Microsoft Windows that will allow anybody who knew about it access any Windows machine, to get into any Windows machine and run any arbitrary code on it.



STEVE:  Well, it's not like a trojan, where they would be able to contact a remote machine.  But, for example, if Microsoft was worried that for some reason in the future they might have cause to get visitors to their website to execute code, even if ActiveX is turned off, even if security is up full, even if firewalls are on, basically if Microsoft wanted a short circuit, a means to get code run in a Windows machine by visiting their website, they have had that ability, and this code gave it to them.



LEO:  And there'd be nothing anybody could do about it or - and in most cases detect it.  So it sounds like - and I really want to be careful here because this is a very serious accusation.  It sounds like this was done on purpose by Microsoft or somebody at Microsoft.  It sounds like it was accidentally discovered.  Microsoft reacted and has pulled it out now.



STEVE:  Right.



LEO:  Could there be other backdoors like this?



STEVE:  Well, yes.  I mean, that's the problem with a closed source operating system like...



LEO:  I have to say, before we go any further, you're not an open source advocate.  You're not a Macintosh advocate.  You've been a Windows user.  And frankly, you're my staunchest friend who's a Windows advocate.  I mean, so this is not some plan on your part to discredit Microsoft.



STEVE:  Well, no.  And in fact I'm sure, I mean, I'm hoping that we're going to see corroboration from other people who didn't think about or didn't look closely at this.  I mean, frankly, if last week Microsoft had patched the older versions of Windows, I would have had no cause to look closely to understand how this exploit worked that was discovered.  I believe that some very clever and industrious hacker figured this out, started using it, and Microsoft was caught off guard and thought, whoops, we've got to close this backdoor down.  Now, you know, to say that Microsoft did this, I mean, on one level it's clearly true.  But we don't know who knows about this in Microsoft.



LEO:  It could have been a renegade programmer working for Windows who just thought he'd throw this in for fun.



STEVE:  Yes.  I mean...



LEO:  Let me ask you one more time, though...



STEVE:  But that's dangerous, too.



LEO:  Well, of course.  But let me ask you one more - you're convinced there's no way this could have happened by accident.  It can't be a programming error or bad design.



STEVE:  No.  No.  I mean, you know, again, this is as much a surprise to me, Leo, as it is to, you know, anyone who hears this.  I did not expect to see this.  I expected to find, for example, that the way this exploit worked was that the SETABORTPROC was working correctly, and that I would give it a pointer to my own code a few bytes lower, then I would do something to force the metafile to abort, and then the metafile processing would use the pointer, the legitimate SETABORTPROC pointer, and then basically run the code that was located right there in the metafile.  That's what I thought I was going to encounter, something that sort of made sense, like we were originally led to believe.  Or actually I think, you know, Microsoft didn't say anything at all.  So we just all kind of presumed this was another one of those coding errors that Microsoft now famously makes and corrects on the second Tuesday of every month.  This wasn't a programming error.  And, you know, so it's like, whoa.  When I give it the magic key on the size of the metafile record, then it jumps directly into my code.



Now, again, I will know more in a week.  I have to say that, you know, I want to call this preliminary.  But I don't see any way that this was not something that someone in Microsoft deliberately put into Windows.  And, you know, the other thing, too...



LEO:  Could this have been at the request of a government agency, let's say?  I guess not because, as you point out, it's not a trojan horse.  You have to go to a site.  You have to go to the site of somebody who knows about this exploit to be taken advantage of.  And in fact, the scenario you describe is really the only scenario I can think of, Microsoft doing it so that, if worst case happened, they would be able to update a machine.  They'd be able to say, go to the Microsoft site and we'll fix you or something.  I mean, the NSA wouldn't put this in because they couldn't guarantee access to any computer.



STEVE:  I've looked back over all the documentation.  I can't find anything about this documented anywhere.  Okay, then I said - I played my own devil's advocate.  Okay, so code is running in the metafile.  Wouldn't that be useful?  Wouldn't it be useful if a metafile could contain executable code, sort of as an undocumented feature?  Microsoft never got around to writing about it; but they said, oh, this would be cool, and we'll use the SETABORTPROC.  Notice that SETABORTPROC, it was just, I mean, this has nothing to do with printer aborting.  It was just sort of a - it was a value that they had handy from other processing, and they sort of reused it.  But this has got nothing to do with aborting printing.  So it almost helped with the obfuscation and sort of, you know, the plausible deniability, except that this wasn't a coding mistake.  And, you know, you even had to put the magic key into the length of the record in order to get this to work.  And that was protection from somebody's metafile having a SETABORTPROC metafile record in it and tripping over this backdoor by mistake.



LEO:  This is exactly what you would do, if you were going to write a backdoor, this is exactly how you would do it.



STEVE:  Yeah.  Yeah.  So I asked myself, isn't there, like, a constructive purpose for putting code in a metafile?  And the problem is, code running in the metafile doesn't have access to the context of the metafile.  It doesn't know what to do with it.  It's, you know, it's powerless to use the objects that Windows is using.  And there seems to be no way to get back to Microsoft's code from this.  Again, I've got some more work to do, and then the timing of this Security Now! podcast coincided with, you know, I've known this for a day now.  And I've been going back over it and trying to come up with a reason, I mean, a benign reason for this.  And I just don't see it.



LEO:  I suppose we should contact Microsoft and ask them what they think about this.  But I doubt that we'd get a straight answer.



STEVE:  I've tried doing that before on other issues like this, Leo.  And, you know, it's not useful.  So...



LEO:  In this case, you know, Microsoft often says, well, don't reveal this stuff because give us a chance to fix it because it could be a security issue.  But the security issue has already been revealed.  We're not revealing anything that isn't already known.  We're just asking why is it in there.



STEVE:  Yeah.



LEO:  And the answer is not very encouraging.  It does make you think maybe open source is a better way to go for an operating system.  At least if it were in there, somebody would have had a chance to see it.



STEVE:  Well, and setting this length of the metafile record to one, that breaks the metafile processing.  It's not possible to, like, execute some code, then go back and finish things up gracefully.  I mean, you've got a thread running on your own code, in your own image.  And everything is, like, over at that point.  I mean, it just makes no sense.



LEO:  Have you contacted anybody in the security community to ask them about this?



STEVE:  No, everyone hearing this will be learning about it from our podcast for the first time.



LEO:  We've got a bit of a scoop here.  And I want to reserve judgment and give Microsoft the benefit of the doubt.  Prove to us why this isn't an intentional backdoor in Windows and reassure us that there aren't any more.



STEVE:  Well, I mean, as you've mentioned a couple times here, I mean, one of the advantages of an open source system is, you know, and I'm finding myself gravitating more and more toward open source solutions because of their transparency.  And so, you know, but an advantage of that is that all kinds of people are looking at the code, and there's just no opportunity, especially when you build the system yourself from source, there's no opportunity for anything evil to get stuck in.  And also, about this what appears to be a Windows MetaFile backdoor that's always been in Windows from 2000 on, you know, they've done recently serious security reviews of all their code.  You know, they took that whole timeout from all the work they were going to be doing and said they were rereading all their code.  And this is not the first time metafiles have had a problem.  There have been what are probably real bugs in metafile processing in the past, I think two of them.  So the whole metafile system would have come under the scrutiny of someone, you know, very deliberately.



Now, you know, if Microsoft had said last week, whoops, this was an undocumented backdoor or means for us to run code in a metafile, we never documented it, our security sweeps didn't find it, blah blah blah - but nothing was said.  They allowed the industry to believe that this was just like all their other code mistakes, but this wasn't like all their other code mistakes.



LEO:  Well, it's a very serious indictment, if not of Microsoft, maybe of a renegade programmer inside Microsoft.  If you were doing a code review, would this kind of thing stand out?  Would it be fairly obvious that something was going on?



STEVE:  Yeah.  I mean, I've seen Microsoft source code.  In the old days they used to publish the source for what's called the DDK, the Device Driver Kit.  And, you know, they're very cautious about, you know, on a module-by-module basis, there's the person's name or initials and when they made changes and what they made to the code that follows.  So, I mean, again, Leo, we're never going to know for sure.  I mean, I've been in this position with Microsoft in the past, or similar positions.  And, you know, it's very difficult to get a straight answer from them.  So I don't know what their source says.  But it seems to me that somebody had to have seen relatively recently, certainly since Windows 2000, had to have looked at the code, seen that this was something that was there, and just kind of nodded to himself and said, yup, that's what we want to have in our metafile processing code.



LEO:  Wow.  Well, I'm sure we'll hear more about this.  I think you probably are going to stir up a hornet's nest here.  And if Microsoft would like to come on the show and respond, you absolutely are welcome to do so.  I'd like to hear an explanation.



STEVE:  I'm going to continue looking at this.  The unanswered question is, when was this installed in Windows?  My hunch is it actually wasn't ever in the earlier versions of Windows.  I'm going to look for it and see what I can find.  But it feels to me like this was something added later and that the older versions are, in fact, not vulnerable and have never been vulnerable.



LEO:  Hmm.



STEVE:  But again, I haven't looked there.  I don't know for sure.  I haven't also looked at Windows code itself.  So far  my work has just been from the outside, you know, poking at this, trying to get the behavior from Windows that I expect.  So, again, it may be that a week from now I come back with my tail between my legs and say, Leo, you know, I told what I believed to be the case at the time.  I now see how this makes sense, and something that I see in the code didn't occur to me.  I haven't done that yet.  So that's what I'll be doing.  We'll certainly know more in a week.  But everything to me looks like this had to have been put in Windows, in many versions of Windows, for a long time, and that someone just discovered it, so Microsoft had to take it out.



LEO:  Wow.  Well, that's a blockbuster.  That's a real bombshell, Steve Gibson.  Of course at this point the good news is Microsoft has released a patch that fixes it, and so we don't have to worry about at least this backdoor.



STEVE:  As a matter of fact, my little tester is finished.  It's still going to undergo more development.  But since I believe this is a backdoor, my tester is called KnockKnock.



LEO:  And you can get that at GRC.com/securitynow.htm.  That's where you can also get the show notes, the transcripts, and the 16KB versions of this show.  Of course we thank the folks at AOL Radio and their podcast channel for broadcasting the show and for providing us with bandwidth for the download.  Quite a blockbuster, Steve Gibson.  I don't know what the reaction is going to be.  But I can tell you, there's going to be one.  And we'll continue to cover this.



STEVE:  Well, this is the way it looks to me.  I do want to mention that this KnockKnock.exe is still in development.  It currently only runs on the newer versions of Windows because that's all that my research has extended to so far.  And it's when I got that running that I realized the implications of what I had to do in order to make that work.



LEO:  Just to reassure us, you can't use KnockKnock as a hacker tool.  It will just let you know the vulnerability is there.



STEVE:  It's not a hacker tool.  It works similar to Ilfak's vulnerability test, although it executes the code in a different way.  I retained control of the program, whereas Ilfak's terminated the program after presenting the user with a little dialogue box.  So mine actually validates the code, that a thread was created by Microsoft and allowed to run in my metafile image.  Also mine will not trigger people's AV scanners, whereas other vulnerability testers do.



However, I want to make sure people understand, this is not in our normal freeware files list.  This is not linked from my homepage.  This is for people who are listening to Security Now! who want to play with this little tester that runs under Windows 2000, XP - oh, and it has been checked under the 64-bit version, both with a vulnerable and non-vulnerable machine.  Several people wrote saying that, after applying Microsoft's patch, they still believed they were vulnerable.  So I think it had to have been pilot error, like they forgot to reboot Windows afterwards or something, because you do have to reboot Windows after applying the patch.  But my little program, this little KnockKnock.exe, will tell you for sure, on the later versions of Windows, if you're vulnerable or not to this.  And then I am going to be doing the research, finally, to extend this to the earlier versions.  And as you said, we may find out more about how this happened in Windows.  I don't think we've heard the whole story so far, Leo.



LEO:  Headline reads:  Security Expert Steve Gibson Says Microsoft Intentionally Put a Backdoor in Windows 2000 and XP.  Film at 11.



STEVE:  2000 and 64, I mean, basically all the versions from the time it first appeared.



LEO:  Wow.  Stay tuned for more on this one.  We'll be back next Thursday with another edition of Security Now!.  Steve, I'd make sure you lock your door tonight.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#23

DATE:		January 19, 2006

TITLE:		GRC's MouseTrap

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-023.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve close the backdoor on the controversial Windows WMF MetaFile Image code Execution (MICE) vulnerability.  They discuss everything that's known about it, separate the facts from the spin, explain exactly which Windows versions are vulnerable and why, and introduce a new piece of GRC freeware - MouseTrap - which determines whether any Windows or Linux/WINE system has 'MICE'.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 23 for January 19, 2006:  GRC's MouseTrap.  Steve Gibson is back, and we are here finally to put a rest to the whole controversy surrounding this WMF exploit whole intentional backdoor, depending on your point of view.  Steve, I think you've been in a firestorm of controversy all week.



STEVE GIBSON:  Well, you know, yes.  Certainly that's the case.  It's like the world ended when I suggested that maybe this was an intentional backdoor.  Or I guess the word was "deliberate."  And, you know, there are a couple of things that are very hot about, well, exactly those two words.  First of all, "backdoor" carries a hugely negative connotation.  I mean, the only way we're used to using it is it's installed by a malicious hacker to get into your system remotely.  And in fact, you know, you asked me did this mean that somebody could connect into our computer when we talked about this for the first time last week.  And I explained, no no no, this would only allow someone going to a website or in one way or another getting your system to render a metafile, could be by receiving email or something, to run arbitrary code on your machine.



Now, the fact is - and, you know we talked about a benign sample or example for how you could use this.  But, I mean, the idea of thinking Microsoft is malicious is nuts.  I should have been careful to say that that was not what I meant.  I mean, I run - we all run - gigabytes of Microsoft's object code, for which we have no source, which we totally trust to varying degrees what it's going to do.  I mean, so the idea that Microsoft would have malicious intent is completely ridiculous.  It was never what I meant to imply when I said "backdoor."  "Backdoor" is just, you know, it's sort of the only term we have to describe this new kind of vulnerability that was discovered, you know, very early in 2006 or the end of 2005.



LEO:  There's a longstanding tradition, though, of backdoors in code.  In fact, many BIOSes for PCs, for instance, have secret passwords you can use to get in if the administrative password has been set.  I mean, this is well known.  It's not unprecedented.



STEVE:  Well, right.  And in fact many people wrote to me saying, Steve, you know, programmers often put in their own private backdoors just because, you know, they think the code is theirs; or they have some feeling of ownership about the system they're designing; or, you know, they want to be able to get back in, not recognizing how serious doing something like that can really be.



Now, the second component was my use of the word "deliberate."  Now, you'll remember that last week, what I was saying was, I was writing this vulnerability tester for the purpose of understanding what was going on and to ultimately look at the older versions of Windows, which Microsoft said were vulnerable, but they were not going to patch because they weren't vulnerable enough.  The feeling I had with just the way the code worked really led me to believe that this was on purpose, that this was not, you know, anything like the traditional bug.



Now, of course, we understand that this is sort of somehow different.  One mistake I made, and that was as a consequence of the fact that my test metafile only had a single record, was I talked about key, the fact that the metafile record had to, apparently, in my case had to be set to an incorrect length in order to make this happen, which further increased my suspicion, beyond the fact that, I mean, code was running in the image, which is never supposed to happen anyway.  It turns out that that was a consequence of my metafile image having only a single record.  The other exploit images - I should have realized this at the time - the other exploit images created by the Metasploit Framework have multiple metafile records and can have the correct length.  And even Ilfak's original metafile tester, it used a length that was not one.  So, you know, that was dumb.  I fully recognize that that was a mistake I made.  Microsoft's blog, which came out from the Microsoft Security Research Center the day after, you know, corrected this initially, before I had a chance even to get back in and look at it; but I verified that I was wrong about that.



LEO:  Does that destroy your argument, or does it impact the argument?



STEVE:  Well, I don't think it does.  I mean, certainly it takes some of the edge off of it.  But when I did finally look at Windows - I mean, and believe me, Leo, I was holding my breath that, you know, as I said, I might end up retracting everything and be completely wrong about this - when I looked at Windows I saw, I mean, as clear an example of intention as I have ever seen.  I mean, this was just code designed to do this, code designed to jump into the metafile image and run the code contained in the image.



LEO:  Now, Stephen Toulouse, who blogged about this for Microsoft, said, well, sure it's intentional, but it's intentional with a benign point of view.  It was to allow GDI functionality; right?



STEVE:  No.  No one ever believed, I mean, no documentation, no common practice, no use ever had metafile images running code.  I mean nowhere.  I've put together and I've further fleshed out the page that I began last week.  It was just sort of a placeholder page.  It's at GRC.com/wmf/wmf.htm - WMF, of course, for Windows MetaFile.  I've laid the whole thing out.  I've got a screenshot and link to Microsoft's original documentation from Windows 3.0 and 3.1 explaining what this whole ABORTPROC thing is, and that it is for executing code in the user's application.  I mean, it makes - it's crazy to think that even Microsoft at any time in the past would have thought that it made sense to mix code with drawing commands.



LEO:  So the only reason you'd put this in is why?



STEVE:  The only reason is to run code in an image, which has never been sanctioned, never documented, and, I mean, makes no practical sense.



LEO:  There's no other legitimate use of that.  It's so that you could put code in an image.



STEVE:  Well, exactly.  And, even more so, when a program runs, the Windows Loader does all kinds of fancy things, fixing up and filling out that IAT that we talked about a long time ago with RootkitRevealer, the Import Address Table, which essentially connects the application into the Windows API.  If you're code running in an image, you have no advantage of Windows Loader, which basically makes it feasible for you to talk to the rest of Windows.  Ilfak, in his vulnerability tester, because of this had to go through all kinds of very tricky hacker hoops in order to explicitly get access to Windows in order to just pop up his little dialogue that said you are or you are not vulnerable.  It was a lot of work.



So, I mean, it just - it doesn't make sense that Microsoft could have ever published the idea of doing this; yet not only did I look at this, at the way this is implemented, but our friend Mark Russinovich from Sysinternals, he looked at it and sent me email, which I have a link to also on our WMF page.  He analyzed this and concluded, just as I had, that this was intentional.  He was not comfortable saying it was a backdoor.  And, I mean, I respect his opinion.  You know, "backdoor," as I said, is a very loaded word that carries with it all kinds of, you know, implicit malice, which I never meant to imply.  But Mark, looking at the same code I have, and actually several other people, too, recognized that, for whatever reason, this is what the coder intended.



Now, I want to say that separately from what Microsoft intended because, you know, Microsoft isn't one mind.  They're not like one person that even thinks coherently.  And we see examples of that all the time.  So I'm not saying - I have no way to forensically examine or to know what the source code ever looked like, whether there was a comment there that might have said, "This code will allow images to contain executable code."  I mean, we'll just not know.  Maybe it was a mistake.  I mean, anything is possible.  But, you know, as I said last week, when I looked more closely at this, the only reasonable conclusion is that for some reason it's intentional.



LEO:  All right.  So you're standing by that.  And we just don't - we'll probably never know why it was put in there.  And it's clearly a dangerous thing.  And as we've seen, it ended up making a very big security flaw in Windows.



STEVE:  Well, and, you know, we were talking about Steve Toulouse's blog posting.  I also have a link to that, the complete posting.  And also I've taken it apart and responded in-line to some of his points.  At one point he explains that Windows 9x is not susceptible to this at a critical level because Windows 9x platforms have extra security measures to prevent this from happening.



LEO:  More than XP and 2000 and NT?



STEVE:  Well, yes.



LEO:  Well, c'mon.



STEVE:  So you would - no, that's what Microsoft is saying.



LEO:  That's not particularly credible.



STEVE:  Meaning that these extra protections...



LEO:  Were removed.



STEVE:  ...have been removed, removed from the later versions of Windows.



LEO:  Okay.



STEVE:  You know, and even Vista, you know, the beta of Vista that isn't even shipped yet, Microsoft issued a patch last week, or I guess earlier this week, to fix it because they were shipping it with this same vulnerability.



LEO:  Now, I got emails from some security folks who said, well, wait a minute, if WINE has this vulnerability - the Windows emulator under Linux - that means the WINE guys wrote it in.  Surely they didn't perpetuate this backdoor.  Doesn't that kind of blow your theory to heck?



STEVE:  Well, okay.  Let's talk about WINE.  First of all, Ilfak's tester, which in all fairness to him he wrote quickly, and he talked about how, you know, he was only able to write it for the systems he had.



LEO:  Right.



STEVE:  It says that WINE systems are not vulnerable.  It's very important for anyone listening to this to get a copy of MouseTrap, which is GRC's official Windows MetaFile vulnerability tester.  It shows that WINE systems are vulnerable unless they are brought up to current patch level.  So I want to make sure people know about that.  We will talk a little bit more about MouseTrap.  The reason I've named it MouseTrap is that I was looking for something, you know, less frightening and loaded with negative connotations than "backdoor."  And so I said, well, we're talking about Metafile Image Code Execution, MICE.  So that's MICE.  The question is, does your version of Windows have MICE or not.



LEO:  So if WINE has MICE, why would the WINE people put an intentional backdoor in?



STEVE:  Ah.  Well, you know, those guys brag - and, I mean, first of all I've got to say they just do a phenomenal job.  It boggles my mind that you can run one of my apps that takes advantage of lots of Windows characteristics under Linux on WINE, and the darn thing even works.



LEO:  Yeah.



STEVE:  So, you know, the idea of emulating the incredibly expansive Windows API is shocking and daunting.  I wouldn't have believed it possible.  But, you know, they brag bug-for-bug compatibility with Windows.  Well, the way you get bug-for-bug compatibility, that is, you know, even duplicating undocumented features, is you don't code to the specification because, of course, Windows bugs are not in the Windows specification.  You code to what Windows actually does.  The way you determine that is through reverse engineering.



LEO:  So they're disassembling everything and duplicating it, the calls, yeah.



STEVE:  Exactly.  So, I mean, and actually this lends credence to my theory because if, you know, you might expect that a rewritten buffer overflow would not be carried into WINE because doing the same sorts of things, you know, there would be enough difference in translation that, you know, a buffer overflow that's clearly a bug, you know, like a defect in the programmer's thinking, it would be reasonable to presume it wouldn't get copied across.  But something intentional in Windows, where anyone looking at the code says, oh, this is what I'm supposed to do - I mean, this is what Mark Russinovich, other coders, and myself all saw.  Well, the WINE guys saw it, too.  They didn't ask...



LEO:  So they just said, hey, this is what Microsoft wanted to put in, we're going to put it in.  We've got to duplicate it.



STEVE:  Yes, exactly.  They didn't ask why.



LEO:  Right.



STEVE:  Because their admirable goal is compatibility first.



LEO:  Ours not to ask why.



STEVE:  Now, in this case it bit them because they copied this intentional behavior that's been in Windows since NT4.



LEO:  Pretty impressive.  They actually duplicated one of the worst exploits on Windows of all.  So that's a nice job, guys.  I mean, but that's what they claim to do, bugs and all.



STEVE:  Yeah.



LEO:  All right.



STEVE:  Okay, now, older versions of Windows.



LEO:  Yeah, let's talk about that because 95, 98, and ME, there's been a lot of question.  Are they vulnerable or not?



STEVE:  Well, that's what got me into all this was, you know, Microsoft said, you know, initially on their vulnerability report all versions of Windows were there.  Then they moved off the older legacy versions that were no longer under their, you know, "we'll fix every bug" support level.  They moved its designation from "critical" to "important," which essentially had the effect that they did not need to patch it.  Unfortunately, it also had the effect of frightening millions of Windows 9x platform users, you know, 95, 98, 98 Second Edition, and Millennium, because they now had the feeling that they were vulnerable to something that could get them that Microsoft had chosen not to fix.



So I looked at this.  Okay, here's the whole - here's the absolute truth.  None of those early platforms are vulnerable at all.  Microsoft says, oh, they had, you know, extra precautions were taken.  Okay, mumbo jumbo, I don't know, you know, we don't know really what that...



LEO:  Yeah, the extra precaution is we didn't write it into that version.



STEVE:  Yeah, the extra precautions we forgot later.  I've used Microsoft's tools.  Microsoft makes symbols available for their kernels that allow their debuggers to show you, as you're stepping around inside of Windows - this is for programmers to figure out why their code is not working.  I've gone through.  There is absolutely no possibility.  I mean none.  You have as much possibility of jumping from Earth to the Moon as exploiting this under early versions of Windows.  So, I mean, I don't know if...



LEO:  You're brave, Steve.  I don't know if I'd ever say "never" with hackers these days.  But all right, I'll take your word for it.



STEVE:  Well, I just, I mean, I've literally, I mean, I've sat there and stepped one instruction at a time, trying to find a way, because I wanted to, you know, make my vulnerability tester as effective as possible.



LEO:  You know, this raises an interesting issue.  Isn't this exactly how these kinds of exploits are found?  People just step one by one through all of the different routines in Windows, looking for holes?



STEVE:  They must be...



LEO:  You're basically doing what hackers are doing, trying to reverse engineer the code, looking for exploits.



STEVE:  Combing, combing - exactly.  Combing through the code, you know, looking for anything that they can interpret in a way that's to their advantage.



LEO:  Right.



STEVE:  So, I mean, really none of these old versions of Windows, no one using them has anything to worry about.  Now...



LEO:  Can you run your MouseTrap on Windows to see?



STEVE:  Absolutely, all versions of Windows.



LEO:  Okay.



STEVE:  MouseTrap will detect Windows MICE in every version of Windows, including on WINE.  I ought to mention also that there were some versions of WINE we encountered during testing earlier this week that did crash when trying to run my app.  I mean, again, I'm not surprised.  For that reason I created a command line version, just called MouseTrapCmd, which anyone - well, first of all, it runs under Windows in general.  But specifically for WINE guys, if they've got a version of WINE which is serving their needs, but for whatever reason they can't run my MouseTrap and they want to check the vulnerability of their current build of WINE, they can use the command line version, also available on my site, in order to do that.



LEO:  And just to underscore this, this isn't testing for all vulnerabilities with Windows MetaFile.  This is testing for the existing one that we know about, just to see if it exists in the version of Windows you're using.



STEVE:  Just MICE.



LEO:  Just MICE.



STEVE:  Just testing for MICE.  Now, the one version of Windows that was left hanging out in the breeze is NT4.  Earlier this week an earlier version of MouseTrap detected NT4 as vulnerable.  Microsoft says no, not a critical vulnerability, don't worry about it, don't need to patch it.  Well, the reason they're getting away with that is that - and we've talked about this, many people have talked about this - that NT4 may not have a default viewer which would cause it to display a metafile.  As we know, it's the act of causing Windows to display a metafile, or even, for example, Google's desktop search indexing the metafile caused the exploit to occur.  So NT4 users, I would say, I mean, if it's a server that has no user interaction, nothing is likely to cause it to display a metafile; and, of course, if it's not poking around under strange, dark website, you know, in the seamier sides of the Internet, you probably have nothing to worry about.



I don't want to, again, overhype this and cause people to worry.  But I absolutely want anyone using NT4 to know they are vulnerable to this exploit.  Microsoft's not going to fix it.  Because the machines are so old and there are so many versions of these files, I'm not going to try to tackle that, either, especially since the target of opportunity, again, as I've said, is relatively shallow.  And we've got two workable, useful, although, you know, less than ideal patch solutions which are available.  Ilfak's original Windows Metafile vulnerability patcher works great on NT4.  And the NOD32 guys - I can't remember his whole name, it's Paolo something, I'll have a link to it on our page.  So there are two patchers which anyone using NT4 can safely use to suppress this.  And when either of those are running, and you run MouseTrap to check, my MouseTrap utility will say, "This system has no MICE."  Before running that, "This system has MICE."



LEO:  Good.  So it works.



STEVE:  Yeah, works great.



LEO:  Great.  All right.  So to recap for the less technically inclined - including myself, because this is a little hard for us to follow because really you have to have some knowledge of how programmers work and so forth.  To recap, it still looks like whatever was done in Windows MetaFiles to make them be able to execute code was done intentionally, isn't a bug, but is an intentional feature.



STEVE:  Everyone, not just I, everyone who has seen this and looked at the code...



LEO:  Mark Russinovich and everybody.



STEVE:  ...yup, agree that it was intentional.



LEO:  No one knows, including you, why Microsoft did it; and no one is averring that Microsoft in some way was doing this maliciously.  It's just it's there.  We don't know why.



STEVE:  And no one knows who put it in.  I mean...



LEO:  It may not be, well, it was Microsoft; but it may not have been a, you know, could have been a renegade employee, I guess.



STEVE:  Could have not - yeah, exactly.  It might not have been officially sanctioned.  And, I mean, we certainly hope it wasn't.



LEO:  Yeah.  It is obviously a major security flaw.  Obviously a data file shouldn't be executing code.  We don't like that.  And but Microsoft has patched it for Windows XP and Windows 2000, and there are two very good patches for it for Windows 95, 98, and ME.  And there's even...



STEVE:  Although, remember, those earlier versions don't need it.  You only need it for NT4.



LEO:  That's right.  So would you recommend not patching it for those earlier versions?



STEVE:  Oh, yeah, because these patches are actual programs that run on the fly.  What I was going to do, if I needed to, was actually modify the Windows code permanently on disk so that it would just no longer do this, so that people would have, essentially, the equivalent of a Microsoft patch that actually fixed the problem rather than suppressing it.



LEO:  Right.



STEVE:  It's important to recognize that both Ilfak's and Paolo's patches, they are not really patches, per se.  They are programs you run in Windows to suppress the vulnerability, to keep it from having a chance to happen.  They don't remove it.  So, yeah, I mean, anyone running now currently either of these patch utilities on their earlier versions of Windows, under the assumption, as Microsoft has stated, that these systems are vulnerable to this, can absolutely safely remove those and stop running that code.  So, you know, it is a program you're running.  NT4 users will have no choice but to run that for the rest of their lives, if they're worried about this biting them.  And, you know, you have to decide how concerned you are about that.



LEO:  Right.  Anything else you want to say about this?



STEVE:  I think this closes the chapter, Leo.



LEO:  And a lousy chapter it's been.  I'm glad we're closed, first of all because it was such a nasty bug.  I do hope people have patched it.  And gosh only knows how many people were impacted by it and have infections they don't know about and may never know about.



STEVE:  Well, and two really good things, or three really good things came of it.  We have GRC's MouseTrap, which will now be available on our site forever, that will allow anyone at any time to check whether their Windows system has MICE, Metafile Image Code Execution.  So we have a new utility, a secure utility.  Anyone setting up Windows from the beginning will always have MICE until they bring themselves to Microsoft's current patch level.



LEO:  That's right.



STEVE:  Remember, this will always be there.  It's in the code from the beginning, ever since NT4.  So that's the first thing that came from this.  The second is we've answered the question for all users, I mean, the millions of legacy Windows users.  They are, despite what Microsoft claims - I mean, I don't know why Microsoft is saying this.  I mean, it's been suggested that maybe they're attempting to scare people into upgrading to versions of Windows that are being currently maintained.  Obviously people still running Windows 9x machines have chosen for whatever reason not to.  So I want to put to rest forever the issue and the concern that maybe they're vulnerable.  They are not vulnerable.  And if they're running those dynamic exploit suppression code patches from Ilfak or Paolo, they can remove them.



LEO:  They don't need them.



STEVE:  And the third...



LEO:  So Microsoft said - just before you go to the third step - Microsoft did say that they were vulnerable, or they said they didn't know if they were vulnerable.



STEVE:  No, Microsoft still, even in not only their vulnerability report but in Stephen Toulouse's blog, is claiming these systems are vulnerable.



LEO:  Okay, so let's clarify that.  They're not.



STEVE:  They're just not.



LEO:  Okay.



STEVE:  Okay.  And the third thing is NT4 users need to recognize that they are in fact vulnerable, that NT4 will run code contained in a metafile, if for whatever reason it ever in the future encounters one.  So NT4 users should run, if they're concerned, you know, if they're, like, using NT4 to surf the 'Net, as opposed to sitting in a back room being a server, if there's a chance of it encountering malicious metafiles, you'll want to run one of these dynamic vulnerability suppression utilities.



LEO:  Because there's no other patch for it.  That's the only way to get rid of it.



STEVE:  Yup.  I'm not going to fix it, and Microsoft's not going to fix it.



LEO:  And finally, at a higher level, I think we've learned something, which is there is always this risk in closed source code that stuff's going on that you don't know about.  To me it's still a good argument for why open source is a good idea.



STEVE:  Yeah, I find myself gravitating toward those kinds of solutions.  I'll mention here, as we wrap this up, that people have written asking about OpenVPN because, of course, prior to this we were doing a series on VPN solutions.  I just wanted to mention, I am in love with OpenVPN.  I've got it working and dancing and prancing.  I mean, it does everything I want it to.  It's a beautiful open source solution which will allow people to do the things, I mean, really closely approaching what we were hoping is the holy grail and in some ways, I think, even surpassing it.  So I ask them to be patient.  Obviously I've been a little distracted here.  It's like, okay, Steve, where did your first three weeks of 2006 go?  But I'll be getting back to...



LEO:  Deep within the Windows code.



STEVE:  I'll be getting back to nailing all this down, documenting how OpenVPN works, and producing some how-tos; and we'll be talking about it in the future.



LEO:  All right.  And next week are we going to go back to our originally scheduled programming?



STEVE:  Oh, who can predict?  We've been wrong the last three weeks.



LEO:  Well, it's Mod 4 anyway.  So I think normally we would do questions and answers next week.



STEVE:  Ah, we've got to do questions and answers.



LEO:  Yeah.  And then after that we are going to get to kind of the underlying concepts behind how the Internet works, which I'm actually very interested in.  I think that...



STEVE:  Well, and many people have written saying that they are.  I'm very excited that we're going to be able to lay some foundation that will then allow us to build on cool things, like how crypto works and how to verify security certificates and all kinds of neat technologies.



LEO:  Well, this has turned into a college-level course on security.  But I'm learning a lot.  I hope you all are, too.  And I thank you, Steve Gibson, for doing this for us.  Of course, more information and the show notes are available at Steve's site, GRC.com/securitynow.htm.  You'll also find 16KB versions of the show for the bandwidth-impaired.



We do thank our friends at AOL Radio for providing us the bandwidth and broadcasting the show on their podcast channel at AOLmusic.com.  And Steve and I are thinking about making this a stereo podcast so that he can, you know, our voices will be slightly separated.  And if that's the case, we'll continue to offer a mono version, a 16KB version, but the stereo version will be on AOL Music.  That seems to be the trend.  People want higher quality, not lower quality.



STEVE:  Well, I get a lot of requests, in fact, many people are wanting, you know, the podcasting for the lower bandwidth links.  But I agree, I think certainly high quality is the step in the future.



LEO:  Yeah.  For those with the broadband, it's easy.



STEVE:  We ought to mention also that, from my side, at least, this podcast is also brought to you by SpinRite, which pays all my bills and is responsible for making it possible for me to screw around and poke inside Windows and reverse engineer VPN systems and all that.



LEO:  Yeah.



STEVE:  So, you know, for 17 years the SpinRite just keeps on going and helping, you know, literally tens of thousands of people whose hard drives are in trouble.



LEO:  And rightly so.  Absolutely the best hard drive maintenance and recovery utility in the world, SpinRite from GRC.com.  Thanks, Steve.  We'll talk next week.



STEVE:  It's always an adventure, Leo.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#24

DATE:		January 26, 2006

TITLE:		Listener Feedback Q&A #3

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-024.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world "application notes" for any of the security technologies they have previously discussed.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 24 for Thursday, January 26, 2006:  Listener Questions and Answers.



STEVE GIBSON:  Hey, Leo.  Glad to be with you again.



LEO:  We're in the studio at Call for Help, so...



STEVE:  Yeah, physically together, rather than by Skype this time.



LEO:  Steve, Steve, you just crack me up.  He brought, essentially, an entire radio production studio with him in his suitcase.



STEVE:  It was heavy.  I'm not doing this again.



LEO:  Two PR40 mics...



STEVE:  I was dragging it through the airport.



LEO:  Two arms, you have a pop filter for your PR40, I mean, we're just really - we're rocking here.  So, as we do every fourth episode, we're going to answer your questions and kind of follow up on things that Steve raised in previous episodes.  Shall we just get right into it?



STEVE:  Yeah, let's go.



LEO:  A couple of questions right off the bat about Hamachi, which was the VPN client that you used and recommended.  Tony from Northeastern PA said:  On many forums there's been a great deal of disagreement about Hamachi and the need for hardware and software firewalls.  Hamachi rocks, as you've said.  But what, if any, dangers does its use open us up to?  And Greg from Goodyear, Arizona kind of follows on in that.  He says:  If I'm using Hamachi on my laptop through a friend's open wireless network to connect to my machine at home, how secure am I?



STEVE:  Yeah, those are great questions.  Hamachi, I'm just so stoked that we discovered this thing because people are using it like crazy.  I mean, they really love what it does because it allows them to create really secure point-to-point links between machines.  However, the bit of confusion, and we talked about his when we first did our show about Hamachi, is that it's a very powerful connection.  You're literally giving somebody else an IP address on your  machine, and you're connecting.  So it makes sense for a personal use to, like, hook your own machines together.  But I was wondering, you know, like for example gamers, a lot of gamers are using this in order to create their own little five-dot LAN systems.  But it does mean that other people are connecting to your machine, just like they were in the same room, plugged into a hub.



LEO:  So you're on a LAN together.  When you say "five-dot," that's the address range that uses five dot something dot something dot something.



STEVE:  Exactly.  But the other thing that's important is that, even while you're using Hamachi, your machine still has its original IP.  So, for example, in Greg's case, where he's at a friend's house using his laptop and using Hamachi to connect to his machine at home, he's still on his friend's wireless LAN.  So he's got his wireless IP, which is still keeping him exposed from that standpoint.



LEO:  So essentially what's happening is he's putting his home machine on the local LAN, as visible as any other machine; right?



STEVE:  Only if he had some trojan software on his laptop, that would be a problem.



LEO:  It would have to be on the connecting machine.



STEVE:  Yeah.



LEO:  Not anywhere else on the LAN.



STEVE:  The way to think of it is that, when you're using Hamachi, your system has its original IP and the Hamachi IP, not the Hamachi IP instead of the original IP.



LEO:  I see.



STEVE:  So the first caller's question about firewalls, the short answer is yes, you still need a firewall.



LEO:  But not to protect your Hamachi connection.



STEVE:  Exactly.  Well, not to protect the data flowing over the Hamachi connection.  But, for example, say that you were going to be using Hamachi for gaming, and you wanted to tie ten machines together.  Well, it would make sense to use your firewall to only allow gaming traffic over the Hamachi IP.  So you really do want to use a software firewall to protect access through Hamachi, if you don't trust somebody on the other side.  That is, if you don't trust the Hamachi computers you're connecting to, you still want to keep your guard up.  And so because Hamachi looks like a standard Internet interface, and most firewalls will allow you to permit traffic by interface, that is, by connection, you could say only allow the gaming traffic over my Hamachi 5.xxx IP.  And you certainly still want to have a firewall to protect your non-Hamachi IP.



LEO:  So, and let's say you're using a router as a firewall, and the router port forwarding - what port does Hamachi use?



STEVE:  Well, see, that's actually a really perfect example because, by using Hamachi, you are basically penetrating your router's inherent security when you create a Hamachi tunnel between...



LEO:  Because it's an outgoing thing, you don't have to forward it.



STEVE:  Well, and it allows incoming traffic.



LEO:  Once you've established the tunnel.



STEVE:  Once you've established that tunnel.  So the tunnel is made outbound through your router.  But once you've got the Hamachi tunnel, inbound traffic is allowed and is not...



LEO:  Of any kind.



STEVE:  Exactly, of any kind, and is not controlled.  Basically it is...



LEO:  So the router and firewall don't even see it.



STEVE:  Exactly.  Well, now, your router cannot see it.  Your software firewall will see it.  And so it...



LEO:  Do you have tell the firewall anything particular, like watch five-dot?



STEVE:  Yes.  In fact, normally, if you look at a software firewall, if you've got one that is about inbound blocking, for example, you may have to deliberately permit Hamachi to access out to the rest of the Internet.  So...



LEO:  It'll give you that pop-up most of the time that says...



STEVE:  Exactly.



LEO:  ...Hamachi's trying to access the Internet.  Do you want to be able...



STEVE:  Well, and for example, say that you were, like, a high-volume Windows user, as most are, using Windows XP Service Pack 2.  So you've got the Windows Firewall on.  You won't initially be able to get any incoming traffic.  Now, the non-secure solution is to simply remove Hamachi from the firewall completely.  That's okay as long as you trust the computers that are on the Hamachi network.  But what you probably really want to do is to specifically allow only the traffic, like the gaming traffic or whatever, if...



LEO:  Open the port that that game uses.



STEVE:  Exactly.  Forward that port through that only the game is going to need.  Otherwise, anyone who you're connecting to in their Hamachi network has complete access to your machine.



LEO:  So you'll give your software firewall permission for an outbound connection to Hamachi from your system.  And then you may say, but don't allow any incoming traffic except traffic over the specific port that that game or whatever thing you want to use, uses.



STEVE:  Right.  I mean, these are great questions because this is a confusing topic.



LEO:  Is it documented on the Hamachi site, or do you have to just kind of figure it out?



STEVE:  If someone will go through the forums.  There's not a lot of documentation, like static documentation on the pages.  But there's been a lot of dialogue in the Hamachi forums.  And that's a great place to learn about, you know, all these Hamachi specifics.



LEO:  Norbert Davis asks - is it Norbert in Davis, or is Norbert Davis his name?



STEVE:  I think Norbert Davis is his name.



LEO:  Okay.  I've loved the ZoneAlarm software firewall because I can see what programs are asking to talk back to the mothership.  That's that outbound traffic protection we're talking about.



STEVE:  Right.



LEO:  Really the only real reason to run a software firewall.  However, ZoneAlarm has become bloated in its code, consumes a lot of resources, and does things I don't need.  Can you recommend a good freeware or shareware software firewall?  I run Windows XP and need something dependable but lightweight.



STEVE:  You know, it's funny, earlier on in our podcasts, and this was months ago, I referred to two firewalls that I liked a lot, and that's Tiny and Kerio.  We had a lot of people who wrote back and said, wait a minute, they're both being discontinued.  And it turns out that they were sort of partly being discontinued.  They were changing their nature.  I did some research about six months ago on the next versions of my little LeakTest freeware, going to be LeakTest Version 2 and Version 3, that were going to be looking at sort of next-generation threats, aside from what my little first LeakTest did.  From looking at all the firewalls out there, my two favorites were Tiny and Kerio.



LEO:  At the time.



STEVE:  At the time, which is what I mentioned.  Okay.  The really good news is, Alex Eckelberry of Sunbelt Software is a good guy.  Sunbelt Software is down in Florida.  They've got a bunch of security and privacy-related applications.  He liked Kerio so much that he bought it.



LEO:  Oh, neat.



STEVE:  So Kerio has a new home, a new publisher.



LEO:  And they've renamed it to Sunbelt and Suspenders?



STEVE:  They're leaving the name Kerio because I guess he got the rights to that, too.  It used to be, I think it was $44.95 or $45 or something.  He's dropped the price to $19.95.



LEO:  Great.



STEVE:  And through March of this year he's, like, having a "we bought a new firewall" special - I guess we could call it a fire sale? - firewall sale, $14.95.  Now, the free version is really all anyone needs.  Kerio does a number of...



LEO:  Oh, so they're still doing a free version.



STEVE:  Yes, and they will always do a free version.



LEO:  Oh, great.



STEVE:  I think it's 4.1.something, you know, it's got the versionings, the changes frequently.  But it's being kept up state of the art.  It does pop-up blocking and cookie handling and some nice additional features.  It also does something which is increasingly important, which is it deals with rootkit-type behavior.  It watches processes that are trying to start other processes.  And so it will catch many sorts of malicious behavior that your typical standard firewall will not catch.  And I think even the free version has that.  It's the cookie handling and pop-up blocking and things that you get extra in the paid version.  But even the paid version is $14.95 through the end of March.  So anyway, if I had to...



LEO:  Are you recommending this for people who already have routers?



STEVE:  Well.  There are, okay, routers will protect you from any external intrusion.  And XP Service Pack 2's built-in firewall, which is free, protects you similarly from any external intrusion.  There are a lot of people who really like knowing what's going on in their computer, and they want, when they're running a new program, they want a software firewall to alert them when this program is trying, as this caller asks, to phone the mothership.



LEO:  Right.



STEVE:  You know, to phone home.  And so, in fact, it's the way I found the very first spyware I encountered, was I was beta testing the original ZoneAlarm, and it popped up something saying that TSAdbot was trying to use my Internet connection.  Well, I didn't know what that was or that I had anything like that in my machine.  So, I mean, I was really glad to have it for that purpose.



LEO:  Do current attacks, trojans, turn off software firewalls?



STEVE:  Well, that's one of the problems when you have a firewall as pervasive as Service Pack 2's firewall in Windows XP, is it's not invulnerable because any software that gets into your machine pretty much can do whatever it wants to inside of your machine.



LEO:  So it could disable it.



STEVE:  So it certainly could disable it.  And, I mean, and the firewalls have been in sort of a standard, you know, like antivirus/virus cat-and-mouse game.  Here it's like the trojans versus the firewalls game, where the firewalls are continually trying to strengthen themselves against new ways to be turned off.  So you really want to keep stuff out of your computer because, once something gets in, you're pretty much in trouble.



LEO:  Which begs the question, what do you need outbound protection for?



STEVE:  I mean, I don't disagree.  It is more hassle because things are popping up, asking if you want to give them permission.  The firewall will learn if it's okay for this application...



LEO:  Yeah, it shuts up eventually.



STEVE:  ...like Internet Explorer, Outlook Express and so forth, and Skype and so forth.  I am not a user of an outbound firewall because I pay a lot of attention to my machine.  I'm very careful with what I install.  But personal firewalls are very popular.  People are constantly writing, saying what's the best personal firewall?



LEO:  So there it is.



STEVE:  So there's the answer.  Is it Kerio?  It's going to live on from now on at Sunbelt Software.  They're great people, and they've dropped the price down, and they're going to keep it current and, you know, fix the bugs and so forth.



LEO:  Excellent.  Dylan in San Francisco writes:  Is there anything I can do to stop recreating the same adware tracking cookies on my PC?  For instance, you know, I'll run Spybot, Ad-Aware, Microsoft's Defender on one day and remove all the problem cookies.  Then the very next day I'll run the same programs, and they're back.



STEVE:  Well, as you and I have talked about before, a lot of the so-called spyware or bad cookies are just stuff that your system collects.  You know, some of these adware tools get a little carried away in trying to demonstrate their effectiveness and talking about, you know, or in discriminating what's bad and what's good.  So...



LEO:  It looks great if you say, "You had 60 infections, and I removed them all."  But they're all cookies.



STEVE:  Or 432.  I mean, I hear people talk about these insane numbers of stuff that was found.  And it's like, okay, not all of that is bad.



LEO:  So what should you do?  It's kind of unusable to use the 'Net without cookies.  You've got to leave cookies on.



STEVE:  Well, and you and I have talked about this before.  We're going to talk about this in detail in an upcoming podcast.  But essentially what's happening is third-party cookies are what these things are detecting, like DoubleClick cookies and...



LEO:  Ad cookies.



STEVE:  ...ad cookies.  As we have discovered, Leo, actually it's when we were doing a Call for Help show, we looked at the various browsers.  All browsers today, by default, enable third-party cookies.  That's what you want to turn off.  In Opera and in Mozilla and Firefox, there's normally a checkbox that says "allow third-party cookies" or "foreign cookies" or something.



LEO:  Uncheck that.



STEVE:  Yes, you want - whichever the - sometimes it's...



LEO:  So cookies from originating site only is what you really want.



STEVE:  Yes.  And Internet Explorer, it turns out, doesn't have an easy way to do that.  They've got a very scary button down in their configuration dialogue that says "Advanced," as if, oh, I don't know if I'm old enough to press that.  It turns out, just push the "Advanced" button.  None of their default cookie handling actually handles cookies the way you want.  When you press the "Advanced" button, you get a simple dialogue where you can say, "Allow first-party cookies; deny third-party cookies," and problem over.  And that's a large part of the debris that keeps coming back into someone's system after they've, like, cleaned it out.



LEO:  And that's really the only risk from cookies is these third-party images or third-party cookies.  Those are the real risks.



STEVE:  Right.



LEO:  Just don't let those load, and you're fine.



STEVE:  Right.



LEO:  And then you don't have to delete the rest.  And if they come back, it's not a big deal.



STEVE:  Right.



LEO:  Charles writes from Katy, Texas asking:  With U.S. government NSA eavesdropping and spying so much in the news, do you really think that SSL, SSH and other things we think are safe are truly safe from the folks who, you know, have this high-end stuff and big computers, like the NSA?  They can crack through this stuff, can't they?



STEVE:  No.



LEO:  No.



STEVE:  No.  The good news is, academic people and cryptologists who are not part of the NSA, with no axe to grind, have developed this current state-of-the-art crypto.  We understand exactly how it works and why it's uncrackable.  For example...



LEO:  It just takes that long to factor prime numbers, period.



STEVE:  Well, or to take the log of a really huge exponent.  The Diffie-Hellman key exchange operates by raising a large number to a large power.



LEO:  Now, you can throw a lot of computer power at it.  But if you get enough bits in your encryption, it's still going to take to the end of the universe to solve this.



STEVE:  Right.  The beauty of cryptography is that it seems complex and, you know, mysterious to us.  To the cryptographers, it's not.  You take two really large prime numbers, and you multiply them together, and you get this really huge number.  Now, it turns out that cracking crypto is a matter of finding out what the two primes are that made up this really huge number.



LEO:  Right.



STEVE:  There's no fast way to do that.  I mean, people have studied this thing...



LEO:  Now, that could happen down the road, some brilliant mathematician could crack this by coming up with a way to do it.



STEVE:  There could be a breakthrough.



LEO:  But right now...



STEVE:  But we would all know.



LEO:  Yeah.



STEVE:  So the beauty is it's not like this is based on some reliance on aliens or something...



LEO:  Or chaos or...



STEVE:  You know, exactly, something bizarre that we don't understand.  We know why it cannot be broken in a feasible time.



LEO:  Right.



STEVE:  And the NSA may not be happy about the fact that they would have to...



LEO:  They work.



STEVE:  ...put on amazing supercomputers to crunch something for a year to crack it.  But it really, I mean, everything we know says nobody can do this.



LEO:  You're okay.



STEVE:  You really are.



LEO:  Even the spooks can't do it.



STEVE:  Because, again, we know why it's safe.



LEO:  Right, right.



STEVE:  It's not like it's safe because no one's broken it yet.



LEO:  Because we say so.



STEVE:  Exactly.  We know what it takes to break it, and it just takes too long.



LEO:  What is the minimum bit length you recommend?



STEVE:  128 bits now.



LEO:  If it's that big...



STEVE:  128 bits of symmetric cryptography.  Now, we're going to be doing very shortly here a really nice podcast explaining symmetric and asymmetric and public keys and how all that stuff works.  But 128 bits of symmetric crypto is plenty strong.



LEO:  I'm going to throw in some of my questions here because I - when you talk about SSL, you talk about 128-bit.  But when you talk about RSA encryption, you talk about 1,024 and 2,048.



STEVE:  Yes, yes.



LEO:  Are those comparable?  What...



STEVE:  And even SSL will have a 1,024-bit component because those protocols use both public key and private key, that is, asymmetric and symmetric crypto.  So the initial key exchange, which you're using for authenticating a remote server, that uses a public and a private key pair because that type of crypto is fundamentally less secure.  The way you strengthen its security is by ramping the bit depth up high.  So 1,024 bits.  And in fact, I'm using OpenVPN in 2,048-bit length, just because...



LEO:  You can.



STEVE:  ...why not?  Yes, exactly.  And, I mean, that's just ridiculously strong.



LEO:  It can slow things down a little bit, but not significantly.



STEVE:  Well, and the actual crypto operations, and this is what we'll talk about in detail later, the actual crypto operations for bit lengths that long are so slow that you cannot afford to do it with your actual bulk data that you're shipping back and forth.



LEO:  Oh, I see.  So that's just for the key.



STEVE:  Exactly.



LEO:  And then the crypto is 128-bit.



STEVE:  They use the public key technology, the asymmetric key, just to exchange a 128-bit private key.  And that keeps it private so that only the two of them know it.  Then they get to use high-speed crypto that uses shorter key lengths and is super secure.



LEO:  Now I understand.  So one is for the public key; one's for the private key.



STEVE:  Right.



LEO:  John in Sunnyvale, California has a complaint that I have, I share with John.  I'm always giving you a hard time on this.  He says there's no way to find your password generator page from your site.  Could you please put a link on the homepage so I can send friends there?



STEVE:  Well, before answering this question, I have done that.



LEO:  No, have you?



STEVE:  Yes.  Our homepage has GRC's Perfect Password Page or something like that, right on the homepage.



LEO:  You've always had to dig through your site to find anything.



STEVE:  I know.  It just - it keeps growing, and I've never - you should see my closet.  Or no, maybe you shouldn't.  Anyway...



LEO:  So there's no conspiracy theory here.  I always thought, well, he just wants me to see everything he has before I...



STEVE:  Oh, that's good, too.  Yeah, oh, that's why, Leo.  Yeah, that's the reason.  Actually, it's just GRC.com/passwords.



LEO:  That'll do it.



STEVE:  That's all it takes.  But for those who can't remember GRC.com/passwords, if you can get to GRC.com, it is there now on the homepage.



LEO:  I know some good web designers.  We're doing a redesign on TWiT.  Do you want me to...



STEVE:  I'm getting interested.



LEO:  You know, it wouldn't hurt.



STEVE:  It wouldn't, yeah.  Maybe then I...



LEO:  You could still do it all.



STEVE:  Maybe then I'd get lost on my own web, on my own site.



LEO:  You understand how it works.  Paul in Athens, Ohio writes:  What's the comparative security of Windows, Linux, and UNIX Mac?  This is a very common question.  A lot of people say, oh, you Mac people, it's going to be just as bad as soon as Mac is as popular as Windows.  They're just as insecure.  Well, are they?



STEVE:  Okay.  To do justice to this, it's worth saying that Microsoft's Windows started out being a catastrophe.  I mean, it was never designed for the Internet.  Apparently no one at Microsoft understood what it meant to even design an operating system for the Internet.  I mean, for years and years and years they had problems that were not, I mean, like, not just bugs, not mistakes.  I could...



LEO:  Misunderstandings.



STEVE:  ...forgive anybody - yes.  They were running open servers, you know, file and printer sharing, sitting there exposed for...



LEO:  This was a corporate issue because Bill Gates didn't really think about the Internet until late.  He came to it very late.  I remember when he suddenly - the light went on, and he turned around the whole company on a dime.



STEVE:  Well, remember, MSN was going to be his AOL-killer when everyone was doing dial-up.  He was going to have - and then the Internet happened, and he said, whoops, we need a browser.



LEO:  So no surprise.  But have they been able to catch up?  In other words, they didn't start with good security.  Have they been able to fix that?



STEVE:  With security, the size of your code, the complexity of the code are always killers.  And Windows is huge and bloated and very complex.  I mean, it's feature packed.  But features are all potential security risks.  In all fairness, Windows is getting so much better.  I mean, the change with XP and Service Pack 2, putting a firewall in that would prevent external intrusion and having it on by default, that was a huge win.  Now, the Mac, and to a somewhat lesser degree Linux, but also Linux - the Mac because, of course, it's based on UNIX.  UNIX was the founding OS of the Internet.  I mean, the guys who wrote TCP, they implemented it on the UNIX platform.



LEO:  But I do have to point out that, even though UNIX was always a multi-user operating system and was permissions-aware, and they had passwords, they also, like everybody else, were kind of tilted in favor of openness.  And some of UNIX was not designed very securely in the beginning.



STEVE:  Right.  Well...



LEO:  But it is 30 years old.



STEVE:  Well, and again, it's...



LEO:  35.



STEVE:  It's evolving.  The problem is, anytime you do new stuff, you know, like PHP interpreters, PHP has had all kinds of security vulnerabilities because it was put together and put out and tested, but there were...



LEO:  And then people banged on it.



STEVE:  And then people banged on it.  So...



LEO:  So what's the bottom-line answer?



STEVE:  I don't really think there is a simple summary.  I would say that Windows is far better today than it ever has been before, that they are showing signs of finally figuring out what they need to do.  And Microsoft understands security really matters.



LEO:  I'm still using a Mac.



STEVE:  Yeah.



LEO:  Angie Brae of Venice, California writes:  How and why are pop-ups triggered only when I open a browser?  Does a malicious software rewrite the code for IE?  I've noticed when a computer is hijacked or compromised in any way, it all starts when I open up a browser.



STEVE:  Yeah.



LEO:  What's the deal?



STEVE:  Well, this is Java script, or Active script, or some sort of...



LEO:  Or ActiveX.



STEVE:  Or ActiveX, some sort of scripting technology.  The problem is, and this was something really that Netscape is responsible for because that's where this all came from, was they wanted websites, web servers that you visited with your browser, to be able to make more dynamic pages than just these, you know, well, my pages on my website, which are just content and just sort of sit there...



LEO:  Static.



STEVE:  ...and you click links, and you scroll around, but there's nothing fancy going on.



LEO:  It only changes when Steve opens up his HTML editor.



STEVE:  And types ASCII into my - actually it's my Notepad that I do the web pages in.



LEO:  But many pages are not that way.  They run scripts all the time.



STEVE:  Well, and users want more functionality.  So really our browsers are much more functional because they are running scripts which are provided to them by the websites they visit.



LEO:  It's client-side scripts that are the problem, though.  Server-side scripts like PHP, like Perl, like all...



STEVE:  That's a very good distinction, yes.



LEO:  That is running on the server, not on your computer.  And that's safe.



STEVE:  Yes.  So what happens is, you go to a site, and not only are you downloading the web page content, you're also actually downloading...



LEO:  A program.



STEVE:  ...executable script code, which runs on your browser in your computer.  And if it says open a new window, that's what your browser does.



LEO:  Which is why Firefox might be a little bit safer from spyware because it doesn't have ActiveX or active scripting.  So it's more limited in the things it can do.  It's actually a dumber...



STEVE:  It's got Java script.



LEO:  Right.



STEVE:  It certainly has Java script.  And Java script is able to do these things, as well.



LEO:  True.



STEVE:  I guess the point is, in order to answer Angie's question, it's the site you're visiting that is doing this through your browser.  So if you don't like that...



LEO:  Don't visit that site.



STEVE:  ...you can either disable those features, or don't visit that site.  But it's not like the Internet in general that's somehow tunneling through your browser.



LEO:  Well, but if you accidentally download spyware, or if you have a ActiveX intrusion...



STEVE:  Oh, if you've got bad stuff...



LEO:  Then you can have a program on your computer, doesn't need your browser, can pop up stuff even when you're not online.  That's another - that's really spyware, and that's...



STEVE:  Right.



LEO:  ...a whole 'nother conversation from pop-ups.  Bert in Redford, Michigan asks:  You mention that formatting a system and reinstalling removes most rootkits, but not necessarily all viruses, as some can reside on Track 0, or the master boot record.



STEVE:  Right, we did talk about that a few weeks ago.



LEO:  So will a low-level format, or using the manufacturer's software to write zeroes to the drive, remove all information, including that track surfacing?



STEVE:  There's a very cool, free, open source tool called Darik's Boot and Nuke, DBAN.



LEO:  That's a must-have for everybody.



STEVE:  Yes.  What this does is, it allows you to burn your own CD from an ISO.  You can just put DBAN into a search engine.  It'll find Darik's Boot and Nuke.  This thing creates a little bootable Linux that runs a scrubbing program.  So...



LEO:  Which will do, by the way, good disk erasing, so it's good if you want to really clear off your desk.



STEVE:  Oh, it'll do serious, like, overkill disk erasing.



LEO:  But it also does the master boot record and all...



STEVE:  Absolutely.  So, for example, if you want to start over from scratch and absolutely know that nothing bad at all was on your drive...



LEO:  Boot and Nuke it.



STEVE:  Boot and Nuke it.  Or if you're decommissioning a computer, you're going to give it...



LEO:  Right.



STEVE:  ...you know, donate it to a...



LEO:  That's who I'd recommend it for, yeah.



STEVE:  ...school or something, you know, scrub the drive with Darik's Boot and Nuke, and there'll be just nothing left behind.



LEO:  Low-level format is not only not advisable, it's not possible on modern drives.  You used to be able to do that; remember?



STEVE:  Well, true low-level format isn't.  Some manufacturers will allow you to trigger a low-level format on their drive.  What they're doing is they're writing zeroes throughout the entire drive.  If your drive manufacturer lets you do that, that will erase the whole drive to zeroes.  It won't deeply erase it.  So the NSA can get the data back if it came to that.  But...



LEO:  You know, I asked Simpson Garfinkel this because he's the MIT graduate student who did the study of hard drives.  They bought a bunch of hard drives on eBay and found passwords, ATM card information, all sorts of stuff.



STEVE:  Oh, just all in the clear right there.



LEO:  And I asked him, I said, do you really need to do this, you know erase, rewrite ones and zeroes erase?  He said no, you know, not really.



STEVE:  Yeah.



LEO:  That's, you know, I don't know of any way, even the NSA really...



STEVE:  Right.



LEO:  But nevertheless, Darik's Boot and Nuke does do that.



STEVE:  Yup.



LEO:  And Boot and Nuke is free.  Grant, UC Berkeley writes:  I can't use Windows Remote Desktop because I don't have XP Pro.  To be a host you have to have Pro.  You can use it as a client with XP and 95, 98, even on a Mac.  But the hosting requires Pro.  He said RealVNC  has been suggested on the Hamachi forums.  Is RealVNC secure?  I use RealVNC, as a matter of fact, all the time.



STEVE:  Yeah.  The VNC project was, I think, started by some AT&T folks.



LEO:  It's an AT&T in the U.K., yeah.



STEVE:  Yeah.  And it's a terrific solution if you need multi-platform.  It's Linux, Mac, PC, so cross-platform.  You're able to run the server-side on one platform and the client-side on the other.  And there's also something called TightVNC, which is a free version.



LEO:  That's what I use on Windows, yeah.



STEVE:  Yeah.  RealVNC has...



LEO:  I use Chicken of the VNC on the Mac, by the way.



STEVE:  Chicken?  Oh, Chicken of the VNC, oh, my God.



LEO:  That's very good.



STEVE:  There are three versions of RealVNC.  There's a free edition, there's a personal edition, and an enterprise edition.  The free edition is not secure.  It will allow you to log on in a secure fashion using a challenge passphrase handshake.  But after you've done the log-on, the actual data is in the clear.  It is not encrypted.  So it's...



LEO:  When we use this, we set up a VPN first, establishing a tunnel, an encrypted tunnel, and then use VNC over the VPN.  And that's secure.



STEVE:  And that's exactly what I was going to say, was that if, you know, the question was, could I use this with Hamachi, and would it be secure?



LEO:  Then it would be.



STEVE:  Absolutely.  And so you could definitely use any version of RealVNC, even the free one, over Hamachi, and it's going to give you, you know, good performance, and Hamachi will provide the security.  If you ever need to use RealVNC outside of Hamachi, and you certainly can, you're probably going to want to use the personal edition, which is $30, and there's a trial period and all that, because it invokes serious, state-of-the-art encryption over your entire connection, both your log-on and all communications afterwards.



LEO:  Brian in Toronto says:  I never give out my name online.  So how do the RIAA and the MPAA find me?  How do they know my name and address?  They only have my IP address.  How can I hide that?



STEVE:  Well...



LEO:  First of all, they don't have your name and address.  They only have your IP address.



STEVE:  Well, they start out with only having your IP address.



LEO:  They have to file what's called a John Doe lawsuit.



STEVE:  Exactly.  Your ISP knows your IP address.  Even somebody like AOL, who's issuing IP, if someone were to compel them, like a court order, and this is how the RIAA and the MPAA, you know, the people who are going and suing people who are doing filesharing, the way they get those is they collect all these IPs, they go, they get court orders to compel the ISPs to release the actual physical name and address of the person who had the IP either that week, in the case of, like, a cable modem that has a relatively static IP; or during a particular hour of the day if you were, like, an AOL user.  So even though you feel like you've got some anonymity, your true anonymity has limits on the Internet.



LEO:  When people use BitTorrent, your IP address is known.  Any peer-to-peer.  You wouldn't be able to do it if you didn't have an IP that somebody could hook up to.  That's what it means, peer-to-peer.



STEVE:  And the RIAA and these other people who are trying to prevent this, they have invested serious technology in, like, creating IP-scraping systems...



LEO:  Yeah, called honeypots.



STEVE:  Exactly, like fake BitTorrent clients and fake Kazaa and all these clients that are being used for peer-to-peer sharing, they're able to get in and harvest who's got which files and what IP they are.  Now, the other part of the question here...



LEO:  He says:  How can I hide my IP address?



STEVE:  Yes, was how to hide it.  There is an interesting system called the Tor system.  It stands for The Onion Router.  Onion routers are deliberate, like, proxy routers that allow you to send your traffic through them.  If you just put Tor, T-o-r, into a search engine, you'll find The Onion Router project.  There are hundreds of these routers set up all over the world.  And it's actually being funded by our free speech folks, the EFF.



LEO:  EFF?



STEVE:  Yes.  The EFF is currently hosting the site...



LEO:  Interesting.



STEVE:  ...and financing the project because they believe in free speech and freedom for use of the Internet.



LEO:  Now, as long as these anonymizing servers don't keep logs, you're okay.



STEVE:  And they explicitly do not keep logs.



LEO:  They have to destroy them.



STEVE:  Yeah.  So and also you normally bounce through three or four or five of these things before you come out of the other end.  And, I mean, you know, you're just untraceable at that point.



LEO:  Anonymizer works this way, too.  And that's one of the disadvantages of that is it does slow you down...



STEVE:  Yes.



LEO:  ...because you're traversing a lot more miles.



STEVE:  And The Onion Router system is free, so you don't have to pay for it; whereas you do for Anonymizer.



LEO:  Right.



STEVE:  Anonymizer, as you said, is a business specifically put on Earth here to...



LEO:  To do that.



STEVE:  Exactly.  You have to pay them some amount of money per month.  But the traffic stops there.



LEO:  It's not much.  It's 35 a year, I think.



STEVE:  And they protect your identity.



LEO:  I also use an iPhantom, which does the same thing.  You have, instead of your IP address, you have the iPhantom IP address.



STEVE:  Oh, and iPig.  The iPig system, the iOpus iPig client, if you are using them to route your traffic, no one would be able to know who your real IP was.



LEO:  But I have to tell you that, if a court order comes down, most of these at least commercial entities are going to cave in.  And if they say, who was using your system, unless these guys explicitly destroy logs so that they can't answer that court order, you're just as much at risk.



STEVE:  Right.



LEO:  You know.  So you really should ask a commercial entity, what do you do with those logs?  Do you keep track of who's using...



STEVE:  Right.



LEO:  ...what services?



STEVE:  And so, for example, you know, GRC.com I keep no logs.  I will turn them on briefly if I'm, you know, needing to figure out something that is wrong.  But I don't log any of the traffic at GRC.



LEO:  I like that.  We're going to get a hat for you.  John's got "I Get No Spam."



STEVE:  I keep no logs.  He gets no spam.



LEO:  You can have...



STEVE:  "I Keep No Logs."



LEO:  ..."I Keep No Logs."  You know, I should do that with my servers, too.  You have IIS, so I can't ask you how to do it.  But I'm sure on Apache there's a way to just say, hey, that log gets turned off.



STEVE:  Oh, yeah.



LEO:  Either doesn't get kept or gets just deleted frequently.



STEVE:  And it lightens the load, too.



LEO:  I could do it with the kron.  Yeah, because it's really...



STEVE:  Those logs are huge.



LEO:  Huge.  Last but not least, Joe from Iowa Falls, Iowa says:  I have a question about wireless security.  Is there a potential risk, when setting up your WPA protected network, as the key will be transmitted wirelessly?  Preshared key?



STEVE:  Well, it's called a "preshared key" because it's not transmitted wirelessly.  There is no exchange of keys in this environment.  The idea is...



LEO:  You have to ask me.



STEVE:  Well, you have to use another, you know, technically it's called a "secure channel," which is just like writing it down on a piece of paper and manually typing it into the other end.



LEO:  That's the secure channel.



STEVE:  That's the secure channel.



LEO:  Ask Steve.



STEVE:  No one is able to get you, you know, from anywhere on the Internet.



LEO:  So the key is never sent over the Internet?



STEVE:  It is never sent over the Internet.  And in fact, derivative keys are used and generated on the fly.  This is with that TKIP, the Temporal Key Integrity Protocol that WPA uses.  The idea is that only if endpoints already know the key, which they got because they were configured that way, not using any kind of radio connection or even network connection.



LEO:  So it's not like this challenge/response thing, where it says, what's the password, here's the password.  We're never sending the password.



STEVE:  Absolutely never.



LEO:  Oh, that's interesting.



STEVE:  Yeah.  And so, I mean, it has been engineered from the start the right way, unlike WEP encryption, which as we know is badly broken.



LEO:  Well, I thank all of you for your questions.  There's, of course, many more than we have time to answer on a single podcast.  But we love doing this, and we will do it every fourth show.



STEVE:  Yup.



LEO:  Conditions permitting.  Next week...



STEVE:  Next week we're going to start with the long-anticipated series, "How the Internet Works."



LEO:  It's only a month late.  That's not so long.



STEVE:  It's been a busy month.



LEO:  It's been a busy month.



STEVE:  Yeah.



LEO:  There's been a lot to talk about.  We're glad you listen to Security Now!.  We hope you'll keep listening every [Thursday] at TWiT.tv or GRC.com/securitynow.htm.  In fact, Steve, I know almost 5,000 people a day download the podcast from your site alone.



STEVE:  Or, yeah.  Well, all of our audio files.  Because I have an archive of everything that we've ever done.  And here we are, we're at the end of our sixth month of doing Security Now!.



LEO:  There's a lot there.



STEVE:  Yup.



LEO:  Both in the high-quality 64KB, as well as a very low bitrate, 16KB for people who don't have the bandwidth.  We also should mention that we know we are having some trouble with truncated files.  This is due to the Akamai servers that our provider AOL is using.  They went to Akamai because they were pushing 3.4 terabytes a day, and they had to.  And we know, we're working it out, and we think that this will be solved soon.  But if you have been getting truncated podcasts, just send me an email saying, you know, I'm having trouble with the Akamai.  I need your IP address or your location, that'll help, and how big the file was that you did get.  That will help us track down which servers are not caching properly.



STEVE:  And for what it's worth, I serve the low-bandwidth files from my own server.



LEO:  That's HTTP, so that's always complete.



STEVE:  And I always make sure that that's correct.  So my high bandwidth links do link to AOL.  So you'll still have a problem.  But if you did have a problem with a truncated high-quality file, let Leo know, and then you can always get the lower quality from me directly, and I know it won't be truncated.



LEO:  I think we're going to set up a BitTorrent version, as well, so that there's at least always one good - we can't afford to provide the bandwidth for it.  And thank goodness that AOL Music is there because, if it weren't for AOL, none of this would be happening.  We wouldn't have TWiT, Security Now!, Inside the Net, none of these podcasts.  But I think I'm going to start doing BitTorrents of everything.  So should something go wrong with the AOL...



STEVE:  We'll have a backup.



LEO:  You'll always be able to get it via BitTorrent.  And I'm recommending a really neat new program for downloading these BitTorrents that makes it very easy to do.  But I forgot the - I think it's [Fireant].  But you can go to the website, and there's some information on that at TWiT.tv.  



STEVE:  Okay.  And of course Mark Thompson has BitPump, which is his BitTorrent client.



LEO:  A very easy-to-use BitTorrent client.



STEVE:  And nice file managers.



LEO:  Windows only.



STEVE:  Oh, yeah, Windows - oh, no, Mac also.



LEO:  He did a Mac client?



STEVE:  Yeah.



LEO:  Mark "AnalogX" Thompson?



STEVE:  That's right.



LEO:  Oh, wow.  Mark's really spreading his wings.



STEVE:  Yup, AnalogX.com.



LEO:  Now I know the world's almost come to an end.  Again, transcripts, low-bandwidth versions, and lots more information about everything we talk about available at GRC.com/securitynow.htm.  And by the way, while you're at GRC.com, don't forget SpinRite, the ultimate disk recovery and maintenance utility.  If you've got a problem with a hard drive, you've got a file you can't recover, please, do yourself a favor, get SpinRite.  I have it, and I use it all the time.



STEVE:  Makes it all possible at my end, Leo.



LEO:  Yes, that's, well, that's our advertiser.



STEVE:  Yeah.



LEO:  Yeah.  It pays Steve's bills.  We do thank our good friends at AOL Radio, who not only broadcast this on their podcast channel, but also provide us with the bandwidth for this at AOLmusic.com.  And we thank you so much for joining us.  See you next time.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#25

DATE:		February 2, 2006

TITLE:		How the Internet Works, Part 1

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-025.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  During this 49-minute episode, Leo and Steve briefly discuss the "Kama Sutra" virus that will become destructive on February 3rd.  We briefly discuss PC World Magazine's recent evaluation and ranking of ten top anti-malware systems.  And we begin our long-planned "fundamental technology" series with a two-part close look at the history and detailed operation of the global Internet.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 25 for February 2, 2006:  How the Internet Works, Part 1.  Steve Gibson, and a very good day to you, sir.  How are you today?



STEVE GIBSON:  Hi, Leo.  Great to be back with you.



LEO:  I want to thank you for sending me that great sci-fi book.  Tell me the name?



STEVE:  It's called "Fallen Dragon."



LEO:  "Fallen Dragon."



STEVE:  Yeah.  Peter F. Hamilton is my current, my favorite sci-fi author.  I've read everything he has in print.  And in fact I'm rereading the last book I read of his because it's been a couple years, and he's coming out with the second part of that book, which was - the first one was called "Pandora's Star."  Anyway, I just, you know, I love sci-fi.  And you can't find enough movies and TV, so I read when I'm not doing anything else.



LEO:  Well, as you know, I'm off on a cruise, and I just needed a book.  So the timing couldn't have been better.  I can't wait to read it.



STEVE:  Yeah, "Fallen Dragon" is a really nice novel. 



LEO:  I'll give you a review when I come back.



STEVE:  Can't wait.



LEO:  Meanwhile, we're going to talk about how the Internet works in just a little bit.  But I've got to ask you about Kama Sutra...



STEVE:  Yup.



LEO:  ...which is not the Indian book of love, but in fact a virus that is expected to hit hard on Friday the 3rd.



STEVE:  Well, yeah, the good news is it's been known for a couple of weeks.  It was first - it first appeared on...



LEO:  How do we know about it?



STEVE:  ...January 20th.  Well, you know, people began getting it.  And interestingly enough, every instance of the virus that infects a machine goes and pokes a website that has a web counter on it.  So by looking at the counter, people have been able to determine approximately how many copies there are.



LEO:  Some hacker just wanted some glory, didn't he.



STEVE:  I guess.  You know, who knows?  What's significant about this virus, and the reason we're talking about it today - and we don't normally talk about viruses, I mean, you know, there's a hundred new ones a week, literally - is that this is a destructive virus.  Most current viruses and worms have the goal of getting into someone's machine for the purpose of taking it over for spamming or using it as a denial-of-service attack launch platform or something.  This is the first virus or worm we've had for a while where it's deliberately destructive to the user's computer.  What it does is it overwrites the contents of DOC files, Excel spreadsheets, PowerPoint presentations, ZIPs, RARs, PDF files, and MDB databases.  So, and it doesn't just delete them, it actually fills the file with garbage so it's less clear what's happened.  And, of course, if you didn't notice it happened, and you were doing regularly scheduled backups, you might overwrite your good backups with now garbage-filled, you know, newer versions.



LEO:  Ugh.  This is like the old days of viruses, when they really used to all be destructive.  They haven't been in a while.



STEVE:  That's true.  Because, again, the whole new goal is to acquire these botnets and fleets of things which the hackers, the malicious hackers then rent out for, you know, in order to get payment.  So on our show notes site, on our show notes page for Episode 25, I've got a link to - I sort of summarize what this is all about.  It launches 30 minutes after you start your computer on the 3rd of any month.  And so tomorrow, being February 3rd, will be the first launch event for this - it's called Kama Sutra; it's called Blackmal.  It's actually a flavor of a worm/virus that's been around for a couple years.  But this latest incarnation of it has changed its behavior in this very malicious fashion.  So it's also called Nyxem.  I don't know how you pronounce that.



But Symantec has a very nice free little scanner that I have a link to on our show notes page.  It's easy to download.  You don't have to register yourself or give them your email address or anything.  It's very clean.  You can grab the scanner, run it on your machine.  Now, again, I don't want to overhype this at all because all AV companies have known about this for a couple weeks, since it was first discovered several weeks ago.  So it's probable that, you know, no one who's security conscious and is updating their AV patterns consistently is going to have a problem with this.  But if our listeners know of people who have had problems with viruses or aren't that careful, it might be worth them telling their less security-conscious friends to run this little scanner just to make sure because it is, if it hits you, it's potentially damaging.



LEO:  By the way, somebody asked me - and I do the same thing, I recommend these removal tools or these standalone scanners from Symantec - they said to me, well, you hate Norton Antivirus, so how is you recommend Symantec's removal tools?



STEVE:  It's just clean.  I ran across it, I tried it today, I recommended it to both of my employees, and I sent out a very small little email to people who I know, you know, it wouldn't hurt them just to run this.  So...



LEO:  And as I point out, there's a big difference between a small, one-time-only program that does this and a big, bloated, huge program that takes over your system, so...



STEVE:  Right.  I mean, you know, unfortunately Symantec, I mean, I don't want to criticize it to people who are sensitive to and love Symantec.  But, you know, I like small, lightweight solutions.



LEO:  Right.



STEVE:  And Symantec is widely regarded in the industry as having really gone the other direction.  It's just huge.



LEO:  But their labs are still good, their virus researchers are still very good, and the removal tools they write are absolutely great.  They do the job.



STEVE:  Right.  Well, speaking of viruses, while we're on the topic, PC World just released their March 2006 results for malware detection software.  One of the questions I get constantly, and I know you do, too, Leo, is what's the best AV?  Well, just answering that question or, like, doing the research myself is the last thing I'm ever going to do ever.



LEO:  Oh, it's impossible.



STEVE:  Well, it is.



LEO:  There's too many viruses, too many programs.  You just need a lab to do it.



STEVE:  Well, PC World has done a very nice job.  And also on our show notes page I have a link to their comprehensive review.  What I will tell people, and I'll just sort of for the fun of it read this off from best to least good, their best-buy choice was BitDefender 9 Standard Edition, which got their top rating, a score of 92.  And they called it "superior."  It's the number one choice for, like, what they were looking for.  And they have charts and, you know, all the details.  Number two was McAfee's VirusScan 2006.  Coming in third place was Kaspersky Labs' Anti-Virus Personal 5.0.  Then F-Secure Anti-Virus.  Then Symantec Norton AntiVirus 2006 in fifth place.  Panda Software was in sixth.  AntiVir Personal Edition, seven.  Something called ALWIL Software avast! Home Edition 4.6 was in eighth place.



LEO:  That's a free one, avast!.  A lot of people use that, yeah.



STEVE:  Yes, yes.  And PC World said it was good and gave it a 77 rating.  Trend Micro's PC-Cillin took ninth place.



LEO:  Really, below either of the free ones, AntiVir and avast!.  That's interesting.



STEVE:  Yup.



LEO:  Wow.



STEVE:  And it's $50, whereas BitDefender is $30.



LEO:  Wow.



STEVE:  The number one ranked by PC World.  And then finally AVG's Free Edition is in last place, number ten.



LEO:  I'm a little disappointed they didn't review my favorite, NOD32, but I guess they left it out.



STEVE:  Good point.



LEO:  There are other antiviruses, although their top five are all well known.  I'm not a big McAfee fan.  I thought that was interesting that came in second, but...



STEVE:  Yeah.



LEO:  It does a good job; it's just another one of those big programs, you know?



STEVE:  Right, right.  It and Symantec.



LEO:  So links on your show notes at GRC.com/securitynow.htm to this article, so people can read the details.



STEVE:  Right.



LEO:  Now, is it time?



STEVE:  Yup, finally.



LEO:  How the Internet Works, Chapter One.



STEVE:  This is the beginning of a series we're going to do deliberately to lay a bunch of foundation.  I mean, I'm going to try to really explain everything so that, when we talk about specific issues relating to security - and of course I'll explain it while we go along in the context of security, since that's the whole point, not just to talk about bits for bits' own sake.  But I want to lay down a foundation for, you know, what these terms use that we've already, for the last 24 episodes, been using glibly.  And most people understand them.  But what I find is that, when people write in, even, like, you know, network directors for major IT companies, they say, yeah, I pretty much know generally what you guys are always talking about.  But I always pick up something that had never occurred to me, or a little corner that I hadn't gone into before.  So...



LEO:  So a review of the basics is good for everybody.



STEVE:  Right.  So the Internet.  When I first heard - and this is in the early '80s, I think, is when it first really became apparent that people were talking about the Internet.  You remember back then we all had modems, and we were dialing into The Source, or CompuServe...



LEO:  CompuServe, GEnie, yeah, yeah.



STEVE:  Exactly.  This notion that we were going to network all of the machines in the world or in some large space together just seemed loony to me because, coming from a hardware background, I thought, okay, what about the wires?



LEO:  Yeah, loony, it seemed impossible.



STEVE:  You know, how are we going to wire this all together?



LEO:  And not to mention, I mean, at that time, if you had MCI Mail, you couldn't send mail to somebody on GEnie, and they couldn't send mail to somebody on CompuServe.  They barely had gateways to one another, let alone talking to one another.



STEVE:  Right.  And in fact the breakthrough in conceptual approach was - and this happened in the mid-'60s, actually, first at MIT, and also at Stanford Research in Palo Alto - was this concept of switching from the idea of a circuit to a packet.  And that was the key.  You know, I don't think there's been a single Security Now! episode where we haven't talked about packets - packets this, packets that, IPs and ports and, you know, and packets.  And a packet is the fundamental, sort of like the DNA of the Internet.  And it was that concept that people had that instead of actually, for example, running wires between you and everyone you want to talk to, instead you could have an architecture where your data would go through intermediate spots that were richly interconnected, and one way or another these packets of data would get to their destination.  That was the key.  And in fact, you know, and that was the shift in thinking that really made the Internet possible.



You know, when I first heard, oh, we're going to connect all the computers together, it's like wait a minute, you know, if you have N computers, you've got N times N minus 1 interconnections, that is, if you connect every computer to every other computer.  And so of course the beauty of the Internet is you don't need to do that at all.  You need to connect your computer to some other computer, or maybe to a so-called router, which is connected to another one, connected to another one, and connected to another one.  And with enough of those intermediate cross connections, your data can reach any other machine on the planet.  And that's how the Internet works, basically.



LEO:  It's really a miracle.  I mean, the phone system for years was a switched network, where you had essentially a wire stretching between you and the other person on the other end.



STEVE:  And a whole bunch of wacky copper contact relays.



LEO:  Or an operator who said, "Number, please."



STEVE:  Right.



LEO:  So all of that was just kind of eliminated by this notion of packets.  A brilliant idea.



STEVE:  So overall, what we're using today, and the only thing that most people feel, is called Version 4, IPv4, or Internet Protocol Version 4.  1, 2, and 3 were sort of starter protocols that didn't have much life.  When we got to 4, it was a rich enough solution that, you know, we've had it ever since.  Essentially, all the Internet that anyone knows has always been Version 4.



Now, for strange historical reasons, Version 5 isn't ever going to happen.  We're essentially going to eventually move to IPv6, Version 6.  IPv6 isn't something that at this moment we're going to ever spend much time talking about because it just hasn't happened.  One of the concerns that was driving Version 6 was people were worried we were going to run out of addresses on the Internet.  It's funny, when the very first designers of this started up, they said, I mean, they had no concept that people would be walking around with computers in their pocket that were part of some global network, which is of course what we have today.  They were envisioning maybe national-size networks of, like, universities or major corporations.  When they laid out a 32-bit address, their idea was that the top byte, the first byte of the address, would be the network number, that is, essentially the location number.  And the other 24 bits of the 32-bit address would be the machine at that location.  So like a university would be 3, and then followed by which machine at that university.  And a different university would be 4.something.



So that was the original concept was that they had the idea of huge local networks that were then able to reach across to another different local network using this Internet protocol where the first number was which other network you wanted to go to.  There was, you know, nothing like what we have today was envisioned.  And so it's really something of a miracle that something that was designed so opportunistically 20 years ago, even a little more than that, actually, has survived as well as it has.  So what IPv6 will do is it expands that 32-bit IP address that we'll talk about here in a second in great detail, it expands that 32-bit IP address to 128 bits.  Well, 32 bits is 4,294,967,296.



LEO:  You can see why they thought that was a lot.



STEVE:  Well, exactly, even though they weren't even going to use it that way.  They were just going to use the first byte, which can be 0 through 255, as, like, which big meganode somewhere in the country the packets should all go to.  Then they'd go to a particular machine at that university or corporation.  So we have, you know, 4.3 almost billion IPs currently.  Well, 28 bits for addressing, which is what IPv6 gives us, is really out of control.  That's 3.4 times 10 to the 38th power.  That's 340 billion billion billion billion IPs.  So...



LEO:  That should be enough, at least until we conquer a few more galaxies, I think.



STEVE:  Yeah.  We don't have to worry about that.  The problem is that it's not easily compatible with IPv4.  The problem that IPv6 is having is, you know, the manufacturers who are making the routers, I mean even, for example, the PC manufacturers are supporting Version 6, though no one's using it yet.  You know, Windows Server 2003 and XP can do IPv6.  But you can't get it anywhere.  I mean, there's nowhere to plug it in to get Version 6.  Now, I mean, that's not strictly true.  There are university environments which are sort of using it experimentally.  And in fact what's happened is that, in order to straddle the address change, IPv4, our little 32 bits, sort of tucks itself in one little corner of IPv6 so that you're able to transport IPv4 data across an IPv6 network.  It doesn't get confused and lost.  You are able to do it.  But for all intents and purposes, it just hasn't happened yet.



LEO:  So is it just going to take so much to implement that it will never happen, or are people moving in that direction?  I mean, whither IPv6?



STEVE:  What's happened has been really interesting, and that is that the NAT router technology that we talk about so much because it's such great security for typical home users, you know, home users are sharing many IPs in their home behind a single IP at their ISP, that is, a single public IP.  So that's a perfect example of what's happened.  If it weren't for NAT router technology that basically allows many machines to share a single public IP, we really would be in trouble already with IP space depletion.   But NAT routers happened, and they're just a good thing for everybody.  Corporations are using them.  There are even some ISPs that are using NAT routers and putting all their customers behind a big NAT router because it really works very well, not perfectly, but very well, as most home users know.  And so the prevalence and birth of NAT routing technology has hugely reduced the pressure on the move to IPv6.



Now, IPv6 is more than just bigger IP numbers, more than just this move from 32-bit IPs to 128-bit.  It does offer also some inherent, what's called "link-level security," or IP-level security, where you're able to encrypt your endpoint-to-endpoint connection using the protocol, rather than having to lay it on separately as we've been talking about before, you know, during all of our talk about VPN.  So there are some other features which are beneficial, but they're just not driving forces.  And now that there's no big rush to IPv6, due to the fact that we're not about to run out of IPs, it's really not clear when we're going to make the move.  It's the kind of thing, you know, it's expensive to do.  People have to remove equipment.  And, you know, for example, all of the NAT routers that we have installed right now are IPv4.  They're not IPv6.  Probably the same is true with the cable modems, although I'm less sure of that.  So my point is that we're talking about a massive obsolescence when we finally do move.  It's sort of like, you know, how the FCC has been trying to push us to HD-TV, and ultimately they're going to be turning off the NTSC over the air to force those last people who've got, you know, rabbit ears sticking out of their TV to finally move.



LEO:  If you don't do it, you know, if you don't turn it off, nobody's going to change, frankly.



STEVE:  Right.  But no matter what, the essence of the Internet are these things called "packets."  Now, a packet is nothing but a block of data.  So the first thing, I mean, just in terms of demystification, a packet is nothing but just a blob of binary bits.  The Internet protocol defines the layout of these packets.  And at sort of like the outer layer you've got a source IP and a destination IP, which as we've talked about are 32 bits uniquely specifying where this packet came from on the internet and where it's going to.



Now, in the original sort of pre-NAT version of the Internet, packets actually did contain the IP address of the machine.  We know that's no longer true because, for example, if - well, for example, right now, Leo, you and I are conversing over VoIP.  Both of us are behind NAT routers.  It happens that my computer is the IP address 10.0.0.10.  Yours is probably 192.168.0.4 or 1 or something.



LEO:  Right.



STEVE:  So those are both private IPs that are nonroutable.  So the packets which are flowing between us across the Internet do not identify our machines, they identify our NAT routers.



LEO:  Although that is a private - or not a private, a public address assigned to us by our Internet service provider.  I mean, it's a real address.



STEVE:  Correct.



LEO:  Yeah.



STEVE:  But I guess the point is that...



LEO:  But there's one per person instead of one per computer.



STEVE:  Exactly.



LEO:  Right.



STEVE:  And it's when the packet arrives at our router that the router then does sort of the next level of job of figuring out which machine behind it has an established connection with the other endpoint.  And so it then routes it inside of our local area network to the proper machine.  So it's not the case any longer that IP addresses uniquely identify machines.  They identify sort of like the public endpoint.  And at that point the network may go private, as it does when it crosses into a NAT router.  Even many universities are doing this.



So, you know, people have asked, when they're concerned about file sharing and, you know, NSA spying, and how it is that their IP addresses can be tracked down to them, it's certainly the case that an IP address owned by an end user can be identified, you know, like by their household.  But once it goes into your NAT router, unless the router is logging specific IP assignments behind it - and most of them typically don't; but, for example, universities and ISPs do.  Unless there was that, there's really no way for anyone to trace it beyond when the IP stops being public and switches into being a private IP.  There's no way to know where it goes.



LEO:  People are using something called DHCP to assign those addresses.  I do remember in the earliest days of these routers people would sometimes use static IP addressing and buy five Internet addresses and just use the router to kind of bridge, almost as a hub, really, I guess.



STEVE:  Well, yes.  And in fact, the earlier days of DSL you would be able to get from your phone company, you could get a DSL network with eight IPs.



LEO:  Right.



STEVE:  And you'd actually have eight physical, public IPs as opposed to just one.  But again, because they're so scarce, it's really increasingly hard to do that.  And in fact, even people like myself, where I've got a corporate network, you have to now fill out - and I had to do this less than a year ago - what they call an "IP Justification Sheet," which they have on file in case they need to explain why they need the IP space they have.



LEO:  Right.



STEVE:  I mean, it's really becoming a scarce resource.  And we're not running out.  But, you know, there's already people being more responsible about the way these IPs are being handed out.



LEO:  Do you think we'll ever see IPv6 implemented?



STEVE:  Well, I mean, it's scattered around.  You can connect equipment together, and it does work.  But it just,  you know, in order for it to work from endpoint to endpoint, every single piece of equipment has to be IPv6 compatible along the way.  And we're, you know, we're a long way from being there.  It's just - I really would be surprised if it happens.



LEO:  We've figured out a way around it.



STEVE:  Right, right.  Okay.  So we have packets, which have a source IP and a destination IP.  The other thing that a packet, a standard Internet protocol packet also has is what's called a "protocol number."  Now, that's an eight-bit byte that tells the system or routers, basically anyone handling this packet, what type of packet it is.  And, you know, we've talked about ICMP, you know, pings, and TCP and UDP.  Well, all those things are are just different bytes.  ICMP happens to be a Type 1.  And TCP is a Type 6.  And UDP is a Type 17.  So the only thing that really differentiates sort of these otherwise generic Internet protocol packets is this one byte up at the front of the packet that says the rest of me is this type.  And so that's how equipment that is having to deal with this knows what to do with it.  ICMP is sort of used for plumbing maintenance.  If links go down, that is, between two points, you're no longer able to ping the other endpoint, it's used by sort of the mechanics of the Internet, sort of not as much for moving actual data, but for sort of managing the transport of the data and being able to check which equipment's online and for various sort of supervisory functions.



One of the other interesting things that's in every Internet packet is called the Time To Live, or the TTL.  What you have with a whole bunch of routers all linked to each other - and we'll talk about how that works in a second - what you have is basically one router passing the packet to another router that then passes it to another and so on until it finally reaches its destination.  Well, there is the possibility for so-called router loops where, for example, if one router were misconfigured, it might send the packet, instead of sort of sending it further towards its destination, it might send it upstream by mistake to a different router, which would then receive it and, just like it does any other packet, send it back towards its destination.  Well, due to misconfiguration, you could end up with loops between routers so that one poor packet just sits there being handed off in a circle, never being able to reach its destination due to a misconfiguration.



So the original designers recognized the danger of this, and so they put a Time To Live in each packet.  Even though it says "time," it's really not about time, it's about router handoffs.  It's a counter.  And so systems will start off setting the Time To Live, for example, to 64 or 128 or some semi-arbitrary value, whatever they're configured, to sort of launch packets out of themselves at.  And every time a router receives a new packet, it decrements that Time To Live counter by one.  As long as it doesn't go to zero, it considers that the packet has not expired.  And so it looks at the destination IP, figures out which of its many multiple connections is, like, going to take that packet closer to its destination, and so it sends it on out of itself to the next router in the chain.  That router receives the packet, again decrements that TTL by one.  And again, as long as it still has some life left in it, literally, as long as that counter hasn't hit zero, it forwards it again.



So the beauty of this approach is that, if a packet ever got stuck in a router loop, those routers passing it back and forth by mistake among themselves would each be decrementing this TTL towards zero.  Finally one of the routers - sort of like playing Hot Potato - one of the routers would decrement it from one to zero, and at that point the packet is said to have expired.  What the router then does is it - because this is like abnormal behavior, you don't want your packets obviously to be expiring - it will take the packet and sort of the first chunk of the packet and wrap that in one of our - what we were talking about before, an ICMP message called Expired.  It wraps it in an ICMP Time Expired message and sends it back to the IP that apparently put that packet onto the Internet, just to inform the sender that, hey, we don't know why, but we couldn't get your packet all the way to its destination before it expired.



Well, one of the really interesting things that was happening actually only a few years ago is that systems were not configured with the present and growing size of the Internet in mind.  There were some computers, in fact the early Windows machines, that would set their packets' TTLs, their Time To Live, to 32.  Well, back then, 20 years ago, 32 was enough because what that would mean is that, if you were sending it from a source location to a destination, you could go through 32 router handoffs before reaching the destination.  Well, the Internet not being that big, sort of in terms of like the diameter of the routing, or the so-called routing diameter of the Internet, you would be able to get it there.  But as ISPs became more internally complex, as more ISPs were born, and they hooked their routers to upstream routers, what happened was the so-called routing diameter of the Internet grew to the point that it became larger than 32 routers.  And what that meant was that there were some people who were using earlier versions of Windows or other operating systems that were still using a value, a starting value of this Time To Live that was too low.  They were unable to reach other locations.  Their packets would die, even with no routing problems at all.  Just, you know, 32 hops, and they hadn't quite gotten to their destination, and that final router would say, uh, sorry, and send it back to the person who originally put that onto the Internet, saying this thing died in transit.



So one of the things that we've seen has happened recently is that, as Windows and other operating systems have been run through their versions, this TTL has been bumped up to 64 and then typically to 128, sometimes up to its maximum value of 255, which, you know, if we ever get more than 255 routers between two points, we're really in trouble because no data will ever be able to get from one end to the other.  Isn't that cool?



LEO:  I really like the elegance of the solution.  How much of it is planned ahead?  How much of it is in response to problems as they come up?



STEVE:  That's one of the things that is shocking is that so much of this was done right the first time.  I mean, even though these guys had no idea where this was headed, I mean, you know, 25 years ago you couldn't have imagined this.  You know, even so, they laid down these fundamental protocols and got it right the first time.



Now, one really cool application of this packet expiring is something that many people who've messed with networking for a while have used and may not have really appreciated what was going on, and that's called the traceroute.  Because when a packet expires on its way to its destination - remember I said that the router where it expired, the router that decremented that packet's Time To Live from one down to zero, it wraps the packet in a little ICMP message and sends it back to the sender.  Well, that means that the packet is being sent from that router, from that router's IP, back to the sender.  So the neat engineers who thought up all this stuff in the beginning, they said, hey, what if we wanted to know the route that our packets are taking as they go from one router to the next across the Internet?  How could we determine that?  Well, what they realized was, hey, we could deliberately emit packets with shorter Time To Lives, so that on purpose they die before they get to their destination.



So what the so-called "traceroute" command does is it sends the first packet towards its destination, like say you were tracerouting to Microsoft.com.  It would address the packet with the IP address of Microsoft.com, but set the Time To Live on purpose to one.  So the first router that receives it decrements it to zero and goes, whoa, this must be an old packet.  Well, so it sends a Time Exceeded message back to the sender with its IP.  So we display that, and we now know the IP of the first router on our path towards Microsoft.  Then we send out a packet with a Time To Live of two.  Well, it goes past the first router, which decrements its time to one, gets to the second router, which decrements its Time To Live to zero, and now that sends it back to us.  So by repeating that process until we finally reach Microsoft.com, we end up with a very elegant little listing of every router between us and our destination.  And of course that's useful for all kinds of problems.  And in fact it can be used for many Internet diagnostics purposes.



Okay, now, the last thing I want to cover in this Part 1 is about routers.  You know, we've talked about how packets move from router to router.  The question is, how do routers know where to send it to?  And this is, I think, another one of the core bits of genius of the original designers of this thing, of the whole technology.  If IPs were assigned at random so that any IP could belong to anyone, routers would have a horrible problem.  They would literally have to have a four billion long table...



LEO:  Oh, okay.



STEVE:  ...that had everybody's IP and which interface, which of their interfaces is connected one way or another eventually to that user.



LEO:  Well, the Internet wouldn't work if you had to do that.



STEVE:  No, it just wouldn't work.  So instead, the IP space, this 32-bit IP is inherently a hierarchical addressing system.  Now, we're very familiar with hierarchical addressing systems because, for example, that's how postal mail is routed around the United States.  You know, my mailman doesn't know where Leo lives.  But he knows where, you know, the town you live in is.



LEO:  Right, right.



STEVE:  Maybe, you know, just by using ZIP code, for example.



LEO:  Well, and they're hierarchical, too, aren't they.



STEVE:  Well, exactly.



LEO:  I mean, 9 is California, or is the West Coast, I guess, and...



STEVE:  Well, I guess it's sort of linear.  But you're right, it certainly gives you a perfect starting point.  And so, for example, if we think of addresses as in, like, which state in the United States, then which town in the state, and then which street in the town, and then which number on the street, you know, there's a hierarchy of state, town, street, number, which almost exactly mirrors the way Internet protocol works.  So, for example, you know, there  might be a Laguna Hills, Florida, and there certainly is a Laguna Hills, California.  Because they are in different states, they're not confused.



So the way the Internet protocol works is very similar to this.  When an ISP is given an allocation of IP addresses, it gets a certain number of sort of like high octets, like, for example, you know, cable modems for a long time tended to be 24 dot.  And I think now a lot of them are in the 68 dot and 67 dot, meaning that it's, you know, 24.x.y.z, whatever the other numbers are.  So the idea was that a large cable modem ISP would get all of the addresses that start with 24 dot.  So what that means is that some router, you know, at the other side of the world, all it has to know is that any IP address beginning with 24. is sort of in that direction.  It just sort of - all it has to know is kind of over there, you know?



LEO:  Right.



STEVE:  You know, if you imagine that it had four interfaces - north, south, east, west - going to other routers to the north of it, to the south of it, to the east and the west of it, then its job would be to get an IP packet, look at the destination IP, and look up in a much shorter table.  Now its so-called routing table, if it had an entry that began with 24, it would just say, oh, 24, you know, dot star, essentially, you know, to use the terminology of, like, of a wildcard, anything beginning with 24 I send west.  And anything beginning with 4 I send north.  And anything beginning with, you know, something else, I send in a different direction. 



So it's actually the excruciating detail level is a little more complex than that.  But that's the whole concept of routing that makes this whole global network function, is routers talk to each other - which is another very complex topic I think we'll probably never get to - using something called BGP, Border Gateway Protocol, and a couple other protocols.  They're able to share with their neighbors the IPs that they know about and the connectedness of their other interfaces, so that their neighbors know what packets to send to them.  But basically this forms a big grid of routers, each that only have to know, when they receive a packet, which interface that they're connected to that they should send that out of in order to move it in the direction it's going to.  So in our example, where we had a packet that was addressed to 24.something, it would march across the globe from router to router that is just looking at the packet, going, whew, all I have to do is worry about this 24, and that goes out my, you know, interface number three.  And the next router gets it and says, oh, for me that's my interface number two.



And so the packet moves until it gets to the ISP.  The ISP then knows not necessarily about anything else on the Internet, but it knows within its own network how to further subdivide that down, just like a letter that is received by the post office in a city.  Now, the people in the post office know which carrier to stick it in because they figure out, you know, a given postal carrier has a certain neighborhood that is all these streets.  So similarly, once the packet gets into the ISP, it only has to then further segregate it to get it down into the neighborhood, further segregate it to get it down into a smaller block, and ultimately get it to the destination where it's aimed at.



LEO:  Again, very slick.



STEVE:  Yeah, I mean, and the idea that this thing, this system has hung together as well as it has, I'm in awe of the people who did this.



LEO:  And no one contemplated, I'm sure, the size and scope of it.  I mean, it's exploded beyond anybody's wildest dreams.



STEVE:  Right.  Now, one of the things that has happened is that there are classes of networks.  It's worth mentioning.  A Class A network is the largest type of network, and that would be all - sort of like the original concept I've talked about where the first byte was a location and the other 24 bits of the 32-bit address were the machine within that location's network.  That's a Class A network, where you have basically a network of a single byte at the top, and then 24 bits gives you 16.777 million machines within that.  And there are ISPs that own, I mean, many ISPs, actually, own whole big Class A networks.  And then they further subdivide that within their infrastructure.



A Class B network has the top two bytes that specify it, and then 16 bits below specify which machine within that network.  And the smallest formal type network is a so-called Class C, where the top three bytes specify which network it is, and the lower byte of eight bits specifies which one of 250-plus machines fit within its network.  So basically, by having a hierarchy of these network classes, which have actually become a little more loose as the Internet has evolved, we're able to address a packet from one location to another anywhere on the globe.  And most of the time, when everything's working right, it gets there.



LEO:  Wow.  Steve, I think we need to take a break and come back next week.



STEVE:  Yup, let's do that, Leo.



LEO:  I'm digesting.  And I don't mean lunch.  There's a lot to understand there.  Although I have to say it's just - it's really kind of fun to look at it because it's such a beautiful, elegant system.



STEVE:  Yeah.



LEO:  And it works.  So, well, we've talked on the show about vulnerabilities, and there certainly are vulnerabilities to this system.  But yet day in, day out we use it.  We don't think about it.  And it works.



STEVE:  Well, and it's worth also talking about redundancy.  I've mentioned that these routers are able to communicate with each other in order to talk about what routes they're able to offer to other routers.  One of the beauties of this rich interconnectivity among routers is that, if a router goes down, or it's being rebooted because, you know, its firmware needs to be updated or is being upgraded or something, the beauty of this system is the dialogue between routers allows them to determine when a router is gone.  And then they can choose sort of like a not my first choice, but this is the only way I have of sending this packet on.  So the Internet is also sort of self-healing.



LEO:  There was always the kind of story, although it turns out not to be true, that it was built...



STEVE:  Right.



LEO:  ...to survive an atomic attack.  That's not really the case.



STEVE:  No.  That was sort of an apocryphal story that sprung up.



LEO:  But I suppose it would because it would route around, you know, big losses like that.



STEVE:  Yeah.  Certainly, though, where our major arteries are located is well known.  There's something called MAE West and MAE East, which are major interconnection points.  And if bad people, you know, wanted to hurt us, all they have to do is knock out those two major interchanges, and we'd be in trouble.  But overall, the architecture, this notion of breaking everything, instead of having wires to everything, just have wires to your neighbors, and send these little packets of data, you know, granulate what you're sending into packets and just drop them on the network and have them all sort of autonomously get themselves to where they're going, it's just - it's a very robust and a fantastic system.



LEO:  All right.  Well, we'll talk next week about Part 2 of How the Internet Works.  And then this is all kind of the foundation for a lot of the security stuff we're going to talk about in weeks to come, I know.



STEVE:  Right.  Because, for example, when we understand how it works, we can better understand what happens when it doesn't work and what attacks are possible to deliberately keep it from working.



LEO:  Yes, hmm, all right.  We won't tell the terrorists too much.  They already know, probably.



STEVE:  Yeah.



LEO:  If you want more information about this, follow up on the show notes at Steve's website, GRC.com/securitynow.htm. Of course, GRC is the great Gibson Research Corporation.  Steve's the creator of SpinRite, the ultimate disk recovery and maintenance tool.  I wouldn't run a machine without it.  I have my SpinRite 6 disk by me at all times, and I encourage you to do the same.  And we do thank our friends at America Online for providing us with the bandwidth for this show.  We couldn't do it without them.  You can listen to the show on their AOL podcast channel or, of course, download it through our RSS feeds, as I'm sure many of you do.



We'll see you next Thursday for another fascinating edition of How the Internet Works on Security Now!.  Thanks, Steve.



STEVE:  My pleasure, Leo.



LEO:  See you next time.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#26

DATE:		February 9, 2006

TITLE:		How the Internet Works, Part 2

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-026-2.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  During Part 2 of "How the Internet Works," Leo and Steve briefly review last week's discussion of the ICMP protocol, then discuss the operational details of the Internet's two main data-carrying protocols: UDP and TCP.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 26 for February 9, 2006:  How the 'Net Works, Part 2.  Steve, it may seem like I'm here with you, but in fact I am basking somewhere in the Mexican Riviera.



STEVE GIBSON:  Wow, these satellite uplinks really are good now, aren't they.



LEO:  On a geek cruise, MacMania 4, reading "Fallen Dragon," thanks to you.



STEVE:  Ah, yes.



LEO:  But, hey, the podcast must go on.



STEVE:  Yup.  We'll make it come - I don't know what that expression is...



LEO:  Heck or high water.



STEVE:  Wind or rain or sleet or snow.



LEO:  Or snow, or..



STEVE:  I think I did it.  Yeah, I think...



LEO:  Yeah, or Oosterdam cruise ship.



STEVE:  Or Mexico Caribbean geek cruise for Leo.



LEO:  Oh, yes.  So we were - fascinating last week.  We were talking about how the Internet works.  And this is kind of laying the foundation for things we'll be talking about as the podcast continues, in security terms.  But you need to understand things like how routers work and what IP addresses mean and stuff like that to understand the rest.



STEVE:  Well, it's - if you'll pardon the pun, it's all interconnected.



LEO:  Yes, it is.



STEVE:  And so, you know, I've been thinking back about, you know, last week's episode.  I'm really glad we took the time to lay that out because there in, what, about 45 minutes or so is really the foundation of this technology that we're all using without really thinking about it because it works so well.  You know, it's been said that any really effective interface becomes transparent.  And of course the perfect example is the telephone, where, you know, when you're on the phone, you're not thinking about the fact that you're, you know, making sounds into a piece of hardware.  Your mind has bridged that gap, and you're just thinking to the other person.  And so it works.



LEO:  Or to paraphrase Sir Arthur C. Clarke, any sufficiently advanced technology appears to be magic.



STEVE:  Indistinguishable from magic, exactly.



LEO:  Indistinguishable from magic.  I didn't mention this last time.  But if, you know - Steve's talking about the technical aspects of this.  But if you're interested in the actual history of James Licklider and all the people who invented the Internet...



STEVE:  He was the first guy at MIT, yeah.



LEO:  Yeah.  Licklider actually was at ARPA, I think, or DARPA, wasn't he?  I can't remember.  But he was - somebody was at DARPA who said, "Look, this is not working.  I have two computers on my desk, and they don't talk to each other."



STEVE:  Right.



LEO:  And so he said, "Guys, you have an assignment.  Figure out how to get these two things to talk to each other."  And of course Robert Metcalfe invented the Ethernet, and it's just really been amazing, the progress we've made.  So there's a great book talking about all this.  Katie Hafner wrote it; it's called "Where Wizards Stay Up Late."  And it's light on the technical side.  You're getting that from Steve.  But if you're interested in the people behind it and what happened, the events - have you read that book?



STEVE:  I haven't.



LEO:  I'm going to have to return the favor and send you a copy.



STEVE:  Licklider was actually at MIT...



LEO:  Was he at MIT?  Oh, okay.



STEVE:  ...in the early '60s.  And what he did, he wrote the first, I mean, literally, it was science fiction at the time.  He called it - I love this - he called it the "Galactic Network."  That was his term.



LEO:  He understood the scope of it ultimately.  And at some time - I guess it will be the Galactic Network at some point, yeah.



STEVE:  Yup.



LEO:  So last week we covered kind of the hardware layer.  Yes?  Would you call it that?



STEVE:  Well, it's like the lower layer interconnection stuff.  You know, in terms of strict networking academic approach, networks are regarded as having layers where, like, layer one is the electrical...



LEO:  The physical layer.



STEVE:  ...wiring, the physical layer.  Layer two is the transport of sort of like whatever is going to be transported on top of that.  And then successive layers are sort of encapsulated.  And there are, like, higher level abstractions as we go.  So...



LEO:  It's a seven-layer model, as I remember.



STEVE:  So, yeah.  And not all seven, I mean, some of them are sort of strange.  It's like, you know, things that don't really map well onto what the engineers actually...



LEO:  Lots of layers.



STEVE:  Yeah, exactly, what the engineers actually implemented.  But, you know, from time to time in Security Now! I'll talk about Layer 2 or Layer 3 or Layer 4, which are sort of fundamental to what's going on, and always explain what I mean by that.  And in fact this is a perfect segue into what I want to talk about this week because we talked about IP, that is, Internet Protocol packets, IP Version 4 [IPv4] and Version 6 [IPv6], the idea that IP packets all have a source IP and a destination IP and a Time To Live and a protocol number which is just a byte.  So we're sort of - we're out of luck if we need more than 255 or 256 protocols.  But it turns out that, you know, a lot of them have fallen into disuse.  They were signed but never have amounted to much, unlike ICMP, which is Protocol 1; TCP, which is 6; and UDP, which is 17.



LEO:  That's pretty much it right there.  That's...



STEVE:  Yeah.  I mean, those are the workhorses, although there's, like, you know, many other types of protocols, like, you know, we talked about BGP briefly.  And, I mean, there's just - it's acronym soup if we got into it.  But so packets are these fundamental workhorses of the Internet.  Every Internet protocol packet begins with those fundamental bits of data - a source IP, a destination IP, that is, you know, who made the packet, where's it going, how long has it been trying to get there, which is that Time To Live, and what protocol sort of tells the system what the rest of the packet is.  Is the rest of this an ICMP packet?  Is it a TCP or a UDP packet?



So the major workhorse protocols, as we've talked about, is ICMP, which is, you know, people know it.  We talked about how that is used, for example, in the traceroute command, and how that works to allow you to trace the route that packets take from going from you to some designated remote.  And, for example, you know, so an ICMP time-exceeded message is sent back when a packet expires on the Internet, back to its apparent sender, to notify that sender that for whatever reason it didn't get there.  Similarly, the ping command is another example of ICMP.  The ping is sort of a human version of the ICMP called "echo request."  And so what that does is, when you ping a remote IP, basically you're sending an ICMP echo-request packet to that IP.  Any routers along the way just forward it on, as long as it hasn't expired yet.  When it gets to the router that it's addressed to, or the computer, the computer, if it's configured normally, will send back in response to an echo request, sends an echo reply, which is just a ping reply.  And this is used, again, by network engineers and just, you know, regular users who know about this, just to see whether the machine is up at the other end or connected.  Is there a path between me and that other IP?  So it's sort of another sort of fundamental plumbing layer which is very useful for making sure that, you know, the Internet and networking stuff is working.



LEO:  I had no idea that ICMP was on the same level as TCP and IP.  I mean UDP.



STEVE:  Well, it's interesting.  It's on the same level.  But, for example, ICMP doesn't have the notion of ports.  Ports is what we're just about to talk about.  And so, for example, ICMP - I'm sorry, TCP and UDP do have this next sort of abstraction of a port number; whereas ICMP, just exactly as you said, Leo, is on the same level as TCP and UDP and the other protocols.  But in the case of ICMP, it just deals with IP endpoints and not ports.  You know, there's no notion of, like, pinging a certain port at a given IP, just pinging that IP.



So in the case of TCP and UDP, those are the workhorse protocols.  And of course, you know, we've talked about often in our earlier episodes of Security Now!, it came up all the time when we were talking about VPN technologies and, for example, tunneling various protocols inside of a TCP connection or a UDP connection.



Well, let's talk about what UDP and TCP are, how they work, and how they're different.  Basically, just like any IP packet, there's nothing magic about a UDP or a TCP packet except the protocol number that's up in that IP header that tells whoever is sending it and receiving it and passing it along the way what type of packet it is.  And so, for example, a firewall that is receiving these IP packets would inspect that header, and it might be told, you know, to drop all UDP traffic because we don't want any in here.  And so it would just look at that.  It wouldn't care anything else about the rest of the packet.  It would check to see if it was a protocol 17.  If so, goodbye.  Just, you know, drop the packet, do nothing further with it.



So UDP is sort of the basic payload carrier for Internet traffic.  The UDP packet is - it's sort of, if you visualize the IP packet showing a source IP, destination IP, a Time To Live, and a protocol number, I ought to also mention that there is some error correcting.  There is a checksum up in these packets, too, that make sure that when the packet gets to where it's going, or even as it's moving across the Internet, that there's been no inadvertent change in the packet's data.  So after that, if this packet says I'm a type 17, meaning that I'm UDP, then immediately following is a source port and a destination port because, as we've said, UDP and TCP are port oriented.



Well, now, the idea of a port is an abstraction.  What it really means is that the IP address gets the packet to a given machine.  Let's for a minute ignore the complexity of having a NAT router stuck in there because that really does confuse things.  So imagine that you've got a computer directly connected to the Internet, and your computer had a so-called "public IP," the one that your ISP gave you.  You know, a cable modem, for example, is 70.181.whatever, you know, 2.1.  So it's an actual public IP.  The IP packet that has the destination IP got the packet to your computer.  Your computer then receives it.  Now what it wants to know is, of the various applications, that is, the software applications running in the computer, which one of the many ones that may be network aware should receive the packet?  You know, and so there's a bit of a confusing terminology with servers and services because UNIX guys talk about servers as being processes running in the system.  But it's easy to confuse that with, like, a physical server machine, where you'd have three servers that are physical boxes, as opposed to three services running in the system.  So I'm going to try to say "service" when that's what I mean.



So, for example, if a packet came into the computer that had a destination port of 25, well, by sort of common agreement, that's for the SMTP service, that is, for sending mail.  So packets are - okay, let me start again.  Oops.  So ports are sort of - are abstractions for services running in machines.  If a packet arrived that had a destination port of 25, that would tell the computer that receives it to send this packet to the SMTP service, which is listening for incoming packets on port 25.  If the packet were addressed with a destination port of 110, which is for the POP3, the receiving computer would hand that packet to this service, which is listening for incoming packets on that port.



So, you know, over the years people have sort of wondered what these ports are that we're talking about.  You know, they're wanting to use, like, ShieldsUP! for example, at GRC, just to scan the ports of their machines to make sure that they're all closed.  What ports are, as we've seen, is nothing but a 16-bit sort of address or abstraction in a UDP or TCP or potentially another protocol which is port oriented that tells the packet once it arrives at the machine, the IP address gets it to the machine, but to sort of, like, further decide within that machine who should receive the packet.



LEO:  So there's no physical thing.  There isn't a actual port.



STEVE:  Correct.  Correct.  It's not like, you know, serial ports 1, 2, 3, and 4...



LEO:  That's why I think people get confused, because there used to be physical ports.



STEVE:  Exactly.  Well, exactly, because of the notion of sort of like reusing the term "port" from the traditional use of, like, a serial or parallel port, to this notion of a 16-bit number.  And all that really means is...



LEO:  It's like a channel, would be maybe a better word.



STEVE:  That'd be a very good designation.  It's too bad we didn't call them "channels," in fact, because it would be - I think that's a fantastic analogy for it.  So with UDP, it has a source port and a destination port, the source port just being normally randomly assigned or algorithmically assigned by the computer that's generating UDP traffic and sending it across the Internet, aimed at a given destination.  So, for example, if your computer wants to look up the IP address associated with Microsoft.com, it uses the UDP protocol and generates a packet that's aimed at port 53 of your designated DNS server.  So the computer sends - it forms a DNS query.  And by universal agreement, your DNS server machine will have a DNS service running in it, listening for any incoming UDP, or actually in the case of DNS it works both UDP and TCP, listening in this case for any incoming traffic onto that machine's port 53.  And it will then receive the packet, look up the IP address for you of whoever you've asked for, like Microsoft.com, and then return a DNS response to your computer so your browser is able to go to Microsoft, knows what the IP address is for Microsoft.



So, literally, that's all that's going on is you're saying, my DNS server is this IP address.  That gets the packet to the machine.  Then you're saying. within this server - because the server could have, you know, it could have a web server, it could have a mail server, it could have many other types of - there again, I broke my own rule.  I'm saying "server" when I meant "service."  It could have a web service.  It could have an email service.  It could have DNS service, any kind of service processes that are there to answer queries or provide data or whatever the specific service does.  The designation of port, when it's received by the computer, just specifies which service in the machine to sort of hand that packet over to for further processing.



So that's UDP, which is a very simple protocol.  There's no real notion of a connection in the sense there is with TCP, which we'll talk about right now.  It's just the idea of sending data from point to point.  And in fact it's the simplicity of UDP that gives it its value.  DNS is carried by default over UDP because there's no overhead associated with setting up a UDP connection.  Literally, I send one packet to my DNS server asking for the IP address of Microsoft.com.  It sends one packet back to me saying here it is.  So again, these genius designers of the Internet recognized that there were many protocols or many applications that had no need for anything more fancy.  If I sent my packet toward the DNS server IP, and, for example, it got lost along the way, or if the response got lost on its way back to me, I wouldn't get an answer to my query.  So my end waits a few seconds for a response.  If it doesn't get it, it sends it again.  It waits a few more seconds.  If it doesn't get it, it sends it again.  It's responsible for retrying until it gets a response.  Or, if it never gets one, it'll return an error to me or the application saying we couldn't get any answer from your DNS server.  Something's broke somewhere.



LEO:  So that's a protocol to use where you can't afford to drop any packets.



STEVE:  Well, actually, that's the protocol to use where you're responsible for packets being dropped, rather than the protocol itself being responsible, which is a perfect segue into TCP.



LEO:  Okay.  So UDP does have kind of a response, but it's - see, I always thought UDP just didn't have any response at all.



STEVE:  Well, it doesn't.  The protocol - and I'm glad you asked the question because I don't want to confuse people.  UDP itself doesn't.  It's the application using UDP that would then be responsible.  And, for example, that's why VoIP, like what you and I are using right now, that's being carried by UDP because it's a lightweight protocol.  It always sends the data that it's got right then.  TCP, by comparison, is a much heavier weight protocol that's responsible for doing all kinds of extra work.



LEO:  So with Skype, it's Skype's responsibility to say, oops, didn't get that packet, could you resend it?



STEVE:  Or maybe what...



LEO:  Or maybe not.



STEVE:  ...Skype probably does is just ignore it.



LEO:  Right, they don't care.



STEVE:  If you don't get it - see, Skype is more concerned -  because we're doing voice over the Internet, Skype is more...



LEO:  It's real-time.



STEVE:  Exactly, is more concerned with real-time.  You know, so there's a little bit of an "er," you know, in the communication.  It just figures, hey, these guys are talking, who cares if they hear a little blerch.  We've just got to keep all this traffic moving between our endpoints.



LEO:  You've just got to keep up.  That's your only job.



STEVE:  Right.



LEO:  Right.



STEVE:  And so what TCP does, by comparison, is - and we'll sort of back our way into this - is it does a number of things.  If you send lots of small packets, TCP says, whoa, wait a minute, there's a lot of overhead per packet.  Remember that we talked about there's an IP header and there's source destination, there's TTL, there's source port, destination port, there's a bunch of stuff that is overhead beyond just the actual data payload.  So TCP does something where it coalesces packets into a larger packet so that, if you were trying to send a bunch of small TCP packets out of your computer, the lower networking layers would say, no no no, let's merge these together.  But what that does is that delays the first packet until there's been some period of time you haven't sent one, or until you've got enough saved up that it's worth emitting a single larger packet from the system.



LEO:  So it's concerned with overall network efficiency, not so much real-time.



STEVE:  Correct.  So that's one of the things that happens immediately with TCP is you lose your real-time, you know, send what I've got right now, and let's not worry about anything else.



LEO:  That made sense when network resources were scarce.  You didn't want to waste bandwidth.



STEVE:  Correct.  It was certainly more important there.  The other thing that TCP does is it is an error-tolerant and sort of error-recovery, error-correcting protocol.  That is, the receiving end maintains - well, actually both receiving and sending ends maintain a count of the bytes.  When a TCP connection is established, the establisher sends a so-called "SYN" packet.  And we've talked about SYN floods and, you know, zombies use SYN floods to attack servers.  A SYN packet is sent.  What the SYN packet contains - this is a TCP protocol SYN packet.  It contains a 32-bit number from the connection originator, saying hi there, to the server, I want to establish a connection, and I'm going to number all the bytes that I'm now going to be sending to you, starting with this number, with this serial number.  The server sends its response, which is called a SYN/ACK.  That's literally an ACK, which is acknowledging the receipt of the original SYN packet and its own SYN component, which says, fine, let's set up a communication.  I'm going to be numbering my bytes, all the bytes I send to you, with this serial number.  So both endpoints establish a serial number for their future dialogue.  And upon receiving that SYN/ACK, the connection originator sends a final ACK to acknowledge the receipt of the server's SYN/ACK.



So this is called - I know, it's complicated.  It's called a three-way handshake, a TCP three-way handshake.  And it does a couple of important things.  Not only does it allow each endpoint to sort of start a serialization of all the data that follows, but it also verifies that a roundtrip for each endpoint is possible.  One of the weird things about the Internet, as we saw in our last episode, where you got all sort of this large conglomeration of routers, and all they know is when a packet comes in, they send it off towards its destination.  Well, it's not necessarily the case that a packet going from point A to point B will flow backwards from point B to point A, that is, the responding packets will take the same path.  Nothing says they have to.



LEO:  Right.  They're just another kind of packet traffic; right?  Yeah.



STEVE:  Yeah, well, it might be, for example, that a certain link between routers is high speed in one direction and low speed in the other.  So that, if the routers had figured that out, they might choose not to route over a lower speed direction, but route in a different direction that would get the packet to its destination sooner.  So the point is that you don't know, necessarily, that the fact that you can get your traffic to a destination necessarily means you're able to get it back from the destination.  So the TCP three-way handshake, because the first guy sends a packet to the second guy, who sends a packet back to the first guy, who sends his final packet back to the second guy, that three-way handshake verifies to each endpoint that, one way or another, they can exchange data.  So here's an example of why the designers thought, well, what if we don't want to go through all that?  Well, that's what the UDP protocol is for because there's none of that nonsense with UDP.  With UDP it's like, here's my query, here's your answer.  Just two packets, for example, instead of this whole connection initiation setup process that TCP has.



LEO:  It's really kind of surprising that so few things use UDP.  It seems like UDP is a good idea.



STEVE:  Yes, it's a great idea.



LEO:  But almost everything uses TCP.



STEVE:  Well, and the reason is - God, you ask great questions, Leo.  The reason is, so much work is done for programmers.  All you have to do as a programmer is say, I want a connection with the server.  Then down in the networking underbelly of the computer, all of this SYN, SYN/ACK stuff, and the serialization of all of that is done completely transparent to the programmer.



LEO:  Ah.  So we have lazy programmers to blame.



STEVE:  Yeah, I didn't want to use the L word.



LEO:  You're a programmer.



STEVE:  And I use actually UDP wherever I can because it is so efficient.  I have a system that I wrote that allows me to monitor my network, the complete health of my network, that is remotely located at Level 3.  And I built my own UDP client-server system.  Yes, it would have been easier if I'd used TCP.  But I didn't need TCP because I could just send a query every couple of seconds and ask for an update from the server.  So for many things it's really more efficient.



LEO:  Is there any quantification of how much more efficient?  Are we talking 5 percent, 10 percent?  How much overhead is there in TCP?



STEVE:  You really couldn't - you couldn't estimate because, for example, there is a burden on the UDP system to, like, retransmit if it needs to.



LEO:  Right.



STEVE:  And, for example, a long-lived connection won't see much overhead.  That is, sure, you need to establish a connection with TCP.  And so you send a couple of very small packets back and forth.  Once that's done, though, then there really isn't much more.  There's some per-packet overhead, but not lots.  So in our TCP connection, we've got both endpoints that have given each other their serial numbers.  Now they have a full duplex connection, meaning that either of them can send data to the other, anytime they want.  And the beauty, from the - I'll say it - the lazy programmer's standpoint, is all you have to do is just give the operating system some stuff to send.  It chops it up in packets, which by the way UDP doesn't do for you, so you have to be concerned about the size of the packets you're sending over UDP.  Not with TCP.  TCP chops it up in nice-size packets that are optimally tuned for your network and ships them off.  It also puts the serial number of the byte which is the first byte of the packet in that packet for you.



Now, what's cool is the receiver is keeping track of this.  It knows from the SYN packet that it received where the serial numbering is supposed to start.  As the packets come in, it makes sure that they come in in sequence.  Because one of the other weird things that can happen in this loosey-goosey router Internet is there's no guarantee that packets are not going to arrive out of order.  If you're sending a bunch of packets towards a destination, they could, you know, routers have the option of, like, of getting overloading and, for example - or a link between routers might get overloaded, so that a different link would get used.  Well, that might be a faster link.  So packets sent later could arrive sooner at the receiving end.



LEO:  Packets sent later could arrive sooner.  All right.



STEVE:  And UDP won't detect that for you.  The TCP protocol does.  All hidden transparently down in the network, the receiving end is keeping track of serial numbers.  If it receives a packet that is not sequentially next after the prior one it received, it'll hold onto it and wait for, like, the missing packets to get filled in.  The program that's running at that end, receiving data, doesn't see any of this.  If it were caring, it would notice that it hadn't seen anything for a while and might sense a delay.  But TCP itself, the protocol, is doing all this for the programmer.  And it's acknowledging to the sender the, like, how far along I've received your data so far.  What that means is, if a packet got lost along the way, after waiting, like, enough, and there's all kinds of very complex adaptive algorithms for how long it ought to be waiting, it will be acknowledging the data that it's received.  If the sender doesn't get acknowledgment of the stuff it's been sending, it will automatically resend it.  So even the sender is, like, holding onto data that it has sent until it's been acknowledged as received by the receiving end.  I mean, it's just phenomenal how well this system works.  And again, this was designed in the early days of the Internet as part of the fundamental plumbing that we can all now just take for granted.



LEO:  And perhaps over-designed in light of today's Internet, or no?



STEVE:  No.  I don't think so.  There have been, especially with TCP, there has been some evolution of the protocol.  For example, no one expected that the Internet would be as big as it became.  Well, bigness equates to delays.  So, for example, TCP didn't used to be patient enough.



LEO:  Right.



STEVE:  And so it had to be made to be more patient.  The other thing is that these links are also very high speed,  meaning that a huge amount of data can be sent in a blob to the receiver.  TCP also, in the beginning, wasn't originally designed to allow so much outstanding data not to be acknowledged.  Remember we were saying that the receiver is acknowledging the data that it receives as it gets it back.  So as link speeds have gone up, TCP has had to evolve, again, sort of to become more adaptive, to figure out, wow, I can allow much larger chunks of data to be unacknowledged by the receiver just because I'm sending it at such a fast rate that the delay across the Internet lets me have a whole bunch of data in transit.



LEO:  Right.



STEVE:  So, I mean, it's really - it's been further developed over time.  But the fundamental concepts that were laid down from the beginning have really stood the test of time beautifully.



LEO:  It's a remarkable system.  So that's UDP and TCP.



STEVE:  And I think that really gives us a strong - with this episode and last, we have a strong understanding now of what IP addresses are, what ICMP with, like, ping and traceroute, and how that's used.  And then our two real workhorse protocols: UDP for just sort of like quick short messages; and TCP, which really takes advantage of major networking technology.  The so-called "TCP/IP stack," as it's called, a stack because it can be viewed as a layer of protocols, this TCP work does just an incredible job for the programmers so they don't have to worry about packets being lost, about packets arriving out of order.  They set up a connection, and then the operating systems at each end deal with all of the Internet dynamics so that they know they're going to send data, and it's going to be received reliably, even if things arrive out of order or are lost in transit.  It's just a beautiful system.



LEO:  TCP/IP is what?



STEVE:  Well, the acronym, of course, is Transmission Control Protocol/Internet Protocol.



LEO:  How does that relate to TCP?



STEVE:  Well, it's sort of the same thing.  TCP is carried over the IP protocol, or within an IP packet.



LEO:  So when we're talking about TCP, we're talking about TCP/IP.



STEVE:  Right.



LEO:  Really.  Same thing.  Okay.



STEVE:  Same thing.



LEO:  Got it.  Great, Steve.  Once again, you've done it again, my friend.  Explained it all in very clear ways.



STEVE:  Yeah, I'm glad to have this technology in place because we'll be able now to refer to these things a little more casually, with the presumption that the people who have been following along and listening understand what we're talking about and have this background.



LEO:  Go back and listen to 25 and 26, if you don't.



STEVE:  They're going to be core episodes, How the Internet Works.



LEO:  Great.  Of course, more information about this, and maybe even this time some illustrations, available at GRC.com/securitynow.htm.



STEVE:  Check the show notes.



LEO:  His show notes will be there.  So will a 16-kilobit version for the bandwidth impaired.



STEVE:  And of course our transcripts that people love to read.



LEO:  Yes.  Thanks, Elaine.



STEVE:  Especially, I think, for these two episodes.



LEO:  Yeah.  This is one where you might want to...



STEVE:  You probably want to read along, yup.



LEO:  Follow along in the home version.  We do thank the folks at AOL Radio for providing us with the bandwidth and for broadcasting the show on their podcast channel at AOLmusic.com.  I'll be back from my cruise next week.  And we will be back next Thursday with yet another fabulous episode of Security Now!.



Oh, let's not forget, folks.  I want to give you a little plug, Steve.  SpinRite, which is the ultimate in disk, file, and recovery tools, and a must-have for everybody, should be in your toolkit, and of course makes it possible for Steve to do these because that's his day job.



STEVE:  It pays the bills, exactly, it's my day job.  And, you know...



LEO:  Although this has become your day job, actually.  I know the truth.



STEVE:  Yup.  Just to plant the idea in people's minds that, you know, if they end up with a problem, SpinRite is probably the best thing ever written that can recover from hard disk trouble.



LEO:  Yeah.  If you've got hard drive troubles, SpinRite's the cure.  All right, Steve.  We'll see you next week.



STEVE:  Always a pleasure, Leo.



LEO:  I'll bring you back a huarache or something.



STEVE:  I just want to hear how the book went.



LEO:  Oh, I'll tell you.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#27

DATE:		February 16, 2006

TITLE:		How Local Area Networks Work, Part 1

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-027.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Having covered the operation of the Internet's WAN (Wide Area Network) technology over the last two weeks, this week Leo and Steve turn to discussing the way Local Area Networks (LANs) operate and how they interface with the Internet WAN.  They address the configuration of subnet masks, default gateways, and DHCP to explain how packets are routed among machines and gateways within a LAN.



LEO LAPORTE:  This is Security Now! with Steve Gibson for Thursday, February 16, 2006, Episode 27:  How LANs Work.  Steve Gibson, hello.  Leo Laporte here.  Steve's in beautiful Irvine, California, via actually Google Talk because Skype wasn't working for us for some reason.



STEVE GIBSON:  Yeah.  Let's hope this comes out okay.



LEO:  So this is a couple of days after Patch Tuesday, Microsoft.  I know because when I turned on my PC it said, "You have updates."



STEVE:  Right.  Yeah, Microsoft released seven patches.  Two they marked as "critical," and five were just "important."  We know, of course, from our coverage of the Windows MetaFile, where we really looked carefully at what these designations mean, we know that "critical" technically has to be worm-able, you know, an exploit that really could damage the Internet on the scale of a worm getting loose.  And anything that isn't that, they're calling "important."  So there was actually some follow-on Windows MetaFile stuff, and something to deal with the Media Player able to be tricked into showing an image or something.  So anyway, they're, you know, important.  And anybody who's keeping their Windows machines up-to-date will definitely want to take a look at that.



LEO:  Now, here's the question.  When you have Automatic Updates turned on, will it only download the critical, or will it download the important, as well?



STEVE:  Oh, it gets them all.



LEO:  Okay.  It does say "Check for important updates and install them."  So, and that's what you'd want to do, it sounds like, since they've kind of changed what "critical"  means, is you want to get everything that's important.



STEVE:  Oh, yeah.  I mean, it blew my mind that they weren't considering the Windows MetaFile problem an important problem - or a critical problem.  They were only calling it important.  So you definitely want all of the updates.



LEO:  Given that naming, we definitely want to get the important files, as well.



STEVE:  Well, so you're back from your cruise.



LEO:  Yeah, and thank you for "Dragon Fall."  What a wonderful...



STEVE:  "Fallen Dragon."



LEO:  "Fallen Dragon," sorry.  Can never get that name right.  That's the Peter Hamilton book that you sent me.  And I am loving it.



STEVE:  Good.



LEO:  He's  - great sci-fi.  Good, hard sci-fi.  Had just read Stephen Baxter's "Ring," which is very hard sci-fi.  It's all about string theory.  So this is a little breath of fresh air because it's written - the characters are really deep and rich, and the worlds are very rich.  He's a great writer.



STEVE:  I love his work, yeah.



LEO:  And you just saw "Firewall."  Now, let me ask you - this is the new Harrison Ford movie.  Does it have any firewalls in it?



STEVE:  No.



LEO:  Oh, rats.



STEVE:  I don't know why, I guess they used the word just because it's kind of a cool word.



LEO:  It's hot right now.



STEVE:  Maybe, you know, it is about banking security and computer networks.  They've got sort of some quasi-believable technology in there, you know, it's hokey, you know, borrows his daughter's iPod to download some account numbers and things.  Like, oh, okay.  But Leo, it's a fantastic movie.  I loved it.  I guess the critics didn't like it that much.  But, I mean, I was on the edge of my seat.  So, I don't know.  I recommend it.  It was really good.



LEO:  And no big technical mistakes in there, huh?



STEVE:  Ah, they sort of avoided all the technology stuff.  There was some stuff that, I mean, you know, you just sort of allow it in a movie like that.



LEO:  Yeah, yeah.



STEVE:  If anyone wants to get their technology, I think they have to keep listening to Security Now!.  They're not going to get it from a Harrison Ford movie.



LEO:  Willing suspension of disbelief, I think they call it.



STEVE:  It was great, though.



LEO:  So let's cover any issues from previous podcasts before we get into this week's subject, which is - we've talked about how the Internet works.  Now we're going to talk about your network, how your home network works.



STEVE:  Yeah, we had a couple people sort of took me to task on the issue of UDP versus TCP.  You know, I was talking about, essentially, what a nice protocol UDP is.  And they were saying, hey, wait a minute, you know, TCP is so useful.  And just a little bit of a clarification.  You know, like I've mentioned how DNS uses UDP because the responsibility for making sure a reply comes back is the application's.  The real way to think of UDP versus TCP is in terms of overhead.  For example, a DNS query is one packet that goes to the server.  And the DNS reply is one packet that comes back.  So the entire transaction for making a DNS query over UDP is just two packets.  By comparison, if you were to use TCP to make the query, and in fact DNS does support TCP also, you'd have to send one over - well, instead of enumerating them, because we did that last week, you'd have to do the TCP three-way handshake, so that's three packets; then the query and the response, so now we're up to five; then two packets to shut the connection down.  So that's seven packets to make a query over TCP which you can do in two packets with DNS.



LEO:  With UDP.  With DNS?  UDP.



STEVE:  I'm sorry, with UDP, exactly.  So probably the best way to characterize it is saying, you know, for short things or for real-time things, UDP makes more sense.  For longer, persistent connections where you want the network underlying layers to worry about getting the stuff there, getting the packets in the right sequence, and all the things that TCP does, it definitely makes more sense, and all that work is done for you.



LEO:  All right.



STEVE:  And another interesting note is some people have been reporting that GRC's ShieldsUP! system has been showing them some open ports where they used to be all stealth.  Well, in working back and forth with them, we've tracked it down to the growth of UPnP-aware peer-to-peer systems.  And this is something that you and I, Leo, I have to say we were ahead of this by, you know, a year or so.  I knew that Universal Plug and Play enabled in routers was going to be a problem.  And what's happening is the various peer-to-peer systems are now beginning to take advantage of that to open ports through people's routers in order to sort of, you know, solve the interconnection problem.  But at the same time it is lowering their security.



So, for example, BearShare and LimeWire actually have verbiage on their sites that says "UPnP support can now detect enabled routers and automatically configure the router for LimeWire's optimal performance."  Even the BitSpirit, BitTorrent client, it says "BitSpirit is a powerful and easy-to-use BitTorrent client.  It supports simultaneous downloads, download queue, UPnP port mapping, and NAT traversal."  So what we're beginning to see is we're seeing these clients are, behind people's backs, without notifying them, reprogramming their NAT routers to open ports back through the router.  That's something, I mean, sure, if it's what you want, and you know it's what's going on, then hey, that's cool.  But what's happening is this is being done, and people are running ShieldsUP! and saying, wait a minute, why do I have ports open?  So this is happening behind people's backs.



LEO:  They're being opened by these applications.



STEVE:  They're being opened by the applications because the routers have Universal Plug and Play enabled in the router.



LEO:  And this is what we've been warning people against, and saying turn that off.  Of course, it is a convenience, isn't it, when LimeWire automatically turns it on.  Then you don't have to even think about it.



STEVE:  Well, it certainly is a convenience.  And again, this is - we can now expect that trojans are not far away from doing this.



LEO:  That's the problem.  Convenient for LimeWire means convenient for trojans.



STEVE:  So, you know, in terms of progression from a security standpoint, the feature was created which, you know, we quickly identified as a bad idea.  Then the feature got used by good programs.  And we can expect shortly to see the feature being used by bad programs.



LEO:  Great.



STEVE:  So again, you know, it's an early heads-up to people.



LEO:  That's, yeah, wow.  All right.  So it's ShieldsUP! saying, yeah, you do have ports open, you just didn't know it.  Surprise.



STEVE:  Well, exactly.  The other thing I need to talk about, I do want to mention briefly that Mac OS X has had the appearance of its first worm written for it.  It's an iChat propagating worm.  It goes and enumerates all the applications that the user has used in the last month and replaces them with copies of itself that then links to those applications.  So, you know, we are beginning to see, as the Mac popularity increases and as, you know, as it spreads, we're beginning to see, you know, the growth of security issues over on the Mac side, too.



LEO:  Yeah.  Although this is, as you said, it's not a very serious attempt at an exploit.  In fact, I don't think it's available in the wild.  It's supposed to spread itself through iChat, but I don't think anybody has said it has.  And in order to get infected by it, you would have to unzip the file, open the application, which claimed to be - so if you're not paying attention, I guess, but it claimed to be pictures and is an application, okay.  You open it.  And then it asks for your administrator password, which you would have to give it.



STEVE:  Right.



LEO:  So you have to really cooperate if you're going to get infected by this thing.



STEVE:  And lastly, people are wondering where we stand with our promised OpenVPN How To guides.  That's all I'm working on right now.  I've got OpenVPN servers running at our facility at Level 3.  I've got one here.  I just converted one of those, the local FreeBSD box, to diskless operation, so it's running with no moving parts, no fan, it boots off Compact Flash and works perfectly.  And then just yesterday I set up a Windows 2000 machine to work out the final details of OpenVPN on Windows 2000 and XP as the server endpoint.  So I want to assure people that, you know, we lost a month, basically, through the whole Windows MetaFile thing in January.  But I am back working on the OpenVPN How Tos, and we will do one final show to introduce those and talk about those once those are all up and posted.  But they're coming.



LEO:  All right.  There's still a lot of interest in that.  We haven't moved on completely from it.



STEVE:  Oh, there's a ton of interest, Leo, because OpenVPN is such a beautiful solution for allowing people to access networks, you know, from a road warrior profile, when they're on the road.  And it's free.



LEO:  Great.  So, on to LANs.



STEVE:  Yeah.  We've talked of course now two episodes about the WAN side of this networking technology, about packets and ports and IPs, and then the ICMP, UDP, and TCP protocols.  We're going to do two episodes on LAN technology.  Next week, of course, we've got our Mod 4 Q&A episode.  And then the one after that I want to talk about the ARP side of what glues IP and Ethernet together, and specifically the security concerns for that.  But first I want to lay some foundation with sort of like what goes on on your LAN, what is a default gateway, what's a subnet mask, and how does all that work to essentially handle and route packets around the Local Area Network.



LEO:  It's been interesting to see the change that's occurred.  It used to be networking was really the province of one guy at the office who knew this, and nobody else did.  And now everybody who has a computer at home is learning about subnet masks and DHCP.  It's become part of our vocabulary.



STEVE:  Well, yeah.  And of course, you know, the Internet technology itself is just spreading through the lives of everyone who's associated with it.  Now, prior to routers  happening, that is, the whole personal NAT router, people would normally just connect their computer directly to whatever Internet connection they had.  Their modem would dial them into a service provider; or if you had DSL or even a cable modem, your computer would be connected directly to it, and so you'd have less contact with this sort of LAN technology because your machine would be part of a LAN that was extended to you by your provider.



But now, with NAT routers, which we promote so much because they're such great security, essentially the router is creating a network of its own.  And so there's more of this LAN glue that's exposed to the user.  The whole key to a LAN that's connected, essentially, to another network, to a non-directly connected network, is this router that we've talked about.  We saw how Internet routers out on the 'Net are sort of out there in the Internet cloud, moving packets closer to you.  Well, the router that most people have direct interaction with now is their own residential NAT router.



And so essentially what happens is you've got one or more machines that are all connected together by a hub or a switch.  And by connected together, essentially it means that they're on the same network, that they're able to address their packets directly to each other.  The question, though, is how do they know that the packet is on an IP on their own network, or that it needs to go to the router for remote routing?  Well, that's this thing that's called a subnet mask.  It's what the subnet mask does.  And, you know, people who are using normal NAT routers will typically see - the IP of their router will be 192.168.0.1, for example.



LEO:  That's the gateway router.



STEVE:  Well, exactly.



LEO:  Okay.



STEVE:  And that'll also be the IP that their router participates in the Local Area Network from.  Now, the subnet mask of that can vary.  But, for example, it's often 255.255.255.0.  Or it might be 255.255.0.0.  But either way, the idea is that the IP that a packet is destined for, that is, the target IP, is compared against this subnet mask to see if the digits where we've got 255s are the same as the machine's own IP, essentially.  The idea being, for example, that a computer connected in the LAN might be 192.168.0.2, for example.  If it's sending a packet to any IP with the last byte different, so like .2, .3, .4, where the left-hand side of the IP has all the same numbers, 192.168.0, well, it knows that, because of the subnet mask, which is saying, essentially, specifying which IPs are in the local network, it's saying, okay, you know, this machine is directly reachable by me.  So it addresses the packet to that machine that it's sending the data to directly, as opposed to saying, for example, if you were connecting to Microsoft, and you had some completely different IP, you know, 4.79.something else, it would notice that the digits were different where the subnet mask was a 255.255.  That's sort of the whole key to this.  That tells it that this is an IP not on the Local Area Network, but one that is located somewhere else.



LEO:  So 255, if you put it in binary, it's maybe a little easier to understand.  Each of these is eight bits.  And a 255 is all ones.



STEVE:  Correct.



LEO:  And a zero is all zeroes - eight bits of ones, eight bits of zeroes.  So it would be 11111.11111.11111.0, or .00000.  So where it's ones, that's where you pay attention.  Where it's zeroes, it could be changed.



STEVE:  Exactly.  So I'm glad you said it that way because it's - where it's ones, you compare your destination IP to  your own network to see whether they match up.  If they differ, then that says, oh, this is not an IP on our Local Area Network.  We need to send this to the gateway.



LEO:  Maybe another way to understand it is that allowed addresses on the LAN, on the local network, are those that are not masked by ones.



STEVE:  That's another way of saying it, yes.



LEO:  So if it's got zeroes in those places.  Then that would mean that it doesn't always have to be 255 or zero; it could be 254 or some other number.  Yes?



STEVE:  Well, that's actually true.  And it does get complicated.  While I was trying to figure out how to visually describe this, I thought, well, you know, if I get into networks where the mask is sliding to different values, we're really going to get ourselves tangled...



LEO:  It does get complicated.



STEVE:  Tangled up and lost.  But, for example, the 192.168, we've talked about this network before because it's been reserved so that it's only for use in private networks.  Another network, for example, is the 10. network that we've talked about, where it's 10.anything.anything.anything.  Well, the subnet mask for a 10. network would be 255.0.0.0,  meaning that any IP beginning with 10 is going to be part of that same 10. Local Area Network.  And then all the IPs beginning with 10 having anything else fall within that.  But anything that doesn't start with a 10 will be outside of that LAN.



LEO:  So when you put a subnet mask into a router, you're telling the router which places are significant when it comes to routing versus local.  Where to pay attention, essentially.



STEVE:  Well, exactly.  And all of the machines on the same LAN will have the same subnet mask.



LEO:  They'd have to, yeah.



STEVE:  Yes, yes.  There is an agreement among them all that we're all machines in a network that contains this block of IPs and doesn't contain all the other IPs.  And so that's the key.  It's like, is this IP in our LAN, or is it not in our LAN?  Now, if the IP that a packet is being addressed to is not in the LAN, all of the machines will send their packets to the so-called "gateway machine."



LEO:  It must be out there somewhere, so here, you take it.



STEVE:  Well, exactly.  And essentially, what's really interesting - and this is what we're going to cover in two weeks is a little more of the mechanics of that, when we talk about how Ethernet works and what the whole ARP, the Address Resolution Protocol is.  But the idea is that the packet is addressed to a remote IP but sent to the gateway.  So the gateway, for example, a NAT router in most people's experience, will - it'll receive this packet.  So it actually receives it.  But when it looks at it, it says, wait a minute, this is addressed to an IP outside of the LAN.  So that's why the router has the same subnet mask as all the machines do in the LAN.  So it does the same comparison.  It sees that this packet is addressed outside of its LAN, and it says, oh, that means I send this out the WAN interface.



LEO:  There's another side effect because it will also say how many available IP addresses you can use.  For instance, if you have a mask of 255.255.255.0, it means you have a total of 255 addresses you can use in that network.



STEVE:  Yes.  You lose a few.  You lose - the very last address in any LAN is the so-called "broadcast address" because, by agreement, a packet addressed to that is actually heard by everyone on the LAN.  It's a broadcast.  And in fact there have been some early exploits that have taken advantage of that to do all kinds of, you know, wacky things with ping packets.  And then the zero address, that is, the zero IP is also reserved as the so-called "network address," that is, the address for the whole network.  And then, so like you have - so you'd have IPs 1 through 254.  One of those IPs is going to be the gateway.  Unless you, I mean, you could have a LAN with no gateway.  If it was just a LAN not connected to anything else, you could have a bunch of machines all connected just to a hub or a switch that are not connected to the Internet, in which case they wouldn't have a defined gateway because there's no way for them to send traffic outside of the LAN.



LEO:  So you really effectively have 253 addresses.



STEVE:  Exactly.



LEO:  Yeah.



STEVE:  And now many - there are some routers that will allow you to configure all of those.  Other routers will say, well, you know, no one in a residential mode is going to need more than, you know, 100.  And so many routers do restrict you to a lower number overall.



LEO:  And then they talk about Class A, Class B, Class C networks.  That's just how many addresses are available for that network.



STEVE:  Well, yeah.  And in fact, as we talked about two episodes ago, the original concept of this was that networks would either have - would be 255.0.0.0, which is a Class A network, like the whole 10. network is; or a Class B network would be 255.255.0.0 for their subnet mask, in which case you've got 16 bits' worth of machine identifiers down in the right-hand two bytes; or a Class C network would be 255.255.255.0, in which case, as we just said, you've got essentially 255 or 256 possible addresses, but you lose a couple of those to specific defined applications.



LEO:  Ah.  You know, I've been using subnet masks for so long, and now to know what they really mean, it's so nice.



STEVE:  Well, it's an important aspect of our networking.  Now, many people will just use - they'll configure their Windows or their Mac or their Linux client to so-called obtain an IP address automatically.  And essentially what that does is, when the computer is turned on, it will send out a broadcast saying, hi there, I'm new in the neighborhood, literally.  Is there a DHCP server listening that will hand me an IP?  And so they're able to, knowing nothing about the network, to broadcast this DHCP query, saying has this LAN got someone who can give me an IP address.  And in the case of a residential network, that'll be the router that'll be turned on and waiting.  It'll receive this broadcast because a LAN - and we'll be talking about this in two weeks - has the ability to essentially have, like, an all-stations-receive sort of deal.  So not even - knowing nothing about the network at all, whether it's a 10., 192.168, I mean, or any IP, it's able to say, hey there, can somebody help me?



The DHCP server or service process, which is running in the LAN's router or gateway, it will respond to that and say, hi there, I'm responsible for doling out IP addresses.  And so it'll establish a dialogue with the machine that has broadcast the query network-wide.  And so it'll say, here's what you want to use for your DNS servers.  Here's what you need to set your subnet mask for.  And here's my own IP to use as a gateway.  And here's an IP you can use that is unique for yourself.  So it's the DHCP server in a network that's configured dynamically which is responsible for doling out these IPs as machines first appear on the network.



LEO:  So when you set your Windows box to obtain IP address automatically, that's the setting in the network settings, that's what it's doing.  You're saying use the DHCP server and get a number from them.



STEVE:  Right.  And as you might imagine, I mean, if you think about it for a second, since that's a broadcast, and everyone on the network hears it, if somebody malicious were to hear that, they could stand in for the DHCP server and completely fool a machine into essentially trusting it as the gateway instead of the machine.



LEO:  Now, a router can still act as a gateway even if it doesn't do DHCP.  You could easily set up what they call "static IP addresses" where you give each machine its own address - you have to make sure they don't conflict - and turn off that DHCP functionality.  But you'd still have routing; right?



STEVE:  Yeah, I think that most routers do give you the option of shutting down DHCP.  What that then means...



LEO:  Would that be more secure?



STEVE:  It would be, well, I would say yes except that we're going to see in two weeks how there's really no semblance of security on Ethernet networks at all.



LEO:  So forget it.



STEVE:  I mean, it's a disaster, Leo.



LEO:  Oh, okay.



STEVE:  So you wouldn't really gain anything.



LEO:  You don't have to worry about somebody spoofing your DHCP router.



STEVE:  As far as I know, there are other ways to achieve the same things that are even more immediate.  Because spoofing your DHCP would require, I mean, there are all kinds of - basically there's no security at all on an Ethernet network.  It was...



LEO:  And we'll talk about that in a couple of weeks.  I know, it's a broadcast network and everything.



STEVE:  Yeah, it was just - there's just no security at all.   So the reason someone might do that, though, is if, for their own purposes, they didn't want the IPs of their machines to float around.  For example...



LEO:  Or you didn't want somebody to join your network promiscuously.  Right?  If there's no DHCP server, they - oh, I guess they could.  They could just...



STEVE:  Yeah.  All they would have...



LEO:  ...pick a number at random, huh.



STEVE:  Exactly.  Or not at random.  But if they were able to look at the network traffic, they would see what range of IPs you were using and be able to just give themselves an IP that's not currently in use and immediately be able to participate as a peer on the network.  But, for example, say somebody wanted their, like - they had, like, TiVos.  I have a pair of TiVos that are on my LAN.  And I've given them static IPs.  Actually I'm not using DHCP in my own network at all because I know what all the IPs are.  And I sort of have, like, my servers are 10.1.something, and my TiVos are 10.0.0.200 and 10.0.0.201.  I just, you know, I sort of have my network blocked out in large chunks and arranged in a way that makes sense to me.



LEO:  I've run into people working on their networks where it's set up statically.  Is there an advantage to doing it?  Is there less overhead by turning off the DHCP server?  Is there any reason you might want to do that?



STEVE:  I would probably have to qualify that as sort of the propeller head approach.



LEO:  It is, because you have to constantly kind of pay attention.  You can't just give, you know, give somebody an address.  You have to make sure it's not conflicting with another one.



STEVE:  If someone comes over to your house and wants to, you know, plug into your network, you know, certainly their machine, if they are normal, has been just left in the default mode of obtain IP address automatically.  You know, they do that at their house.  They come over, plug their computer into your network, and it doesn't work.



LEO:  That's when I got involved with this guy's network, and I was really sorry, too.  I said, what's going on?  And I figured, oh, you have static IP addresses and blah blah.  So is it an advantage?  It's not really an advantage to do it that way.



STEVE:  No, I really see, I mean, there's really nothing wrong with using DHCP.  It's no less secure, and I hope I didn't scare people away by talking about, like, you know, spoofing a DHCP server.  I didn't intend to.  It's certainly possible.



LEO:  It's not likely.



STEVE:  Well, as far as I know, it isn't a common exploit; and there are far more common exploits against Ethernet networks, you know, against the LAN networks we're talking about, than doing that, that are far more effective.  And we'll be talking about that in two weeks.  So I think DHCP makes a ton of sense.  I'm just, you know, I'm someone who likes to know the IP of every machine I've got.  And I...



LEO:  I bet you - I'm just guessing.  Never been to your house.  I bet you actually have a little DYMO label on each one with the IP address on it.



STEVE:  You know, I did, except that they started getting obsolete.  And the only thing worse than a machine that is not labeled is a machine that is mislabeled.  Because, you know, for some reason you change the IP to something, and now the label is referring to the wrong IP.



LEO:  I can just see all your machines with little addresses on every monitor.  You knew exactly which one was which.



STEVE:  Yeah.  Pretty much I have them all memorized.



LEO:  You know, yeah.



STEVE:  Yeah.



LEO:  Okay.  So we've got subnet masks, we've got DHCP.



STEVE:  We've got the default gateway...



LEO:  Gateways, yeah.



STEVE:  ...where packets are sent.  If they don't match up with the subnet mask, they are sent to the gateway machine at the gateway IP.  It receives them.  It sees the same thing.  It sees, wait a minute, this isn't part of the LAN, because otherwise it just wouldn't do anything with it.  It wouldn't send it on.  But it sees that it doesn't match up with a subnet mask for the digits that are significant, where the subnet is ones, as you put it.  And so it sends it out to the WAN.  Similarly, when packets come into it, it does the same thing again.  It receives the packet and does its NAT translation to translate it into an internal IP and says, oh, look, this does fit within the subnet mask, so it rebroadcasts it out of its LAN side so that the properly addressed machine in the LAN is able to pick up the packet.  And that's how all that works.



LEO:  Ah.  It's really amazing.  It's actually, again, and I said this when we described how the Internet works, it's really kind of a remarkable little thing going on behind the scenes.  Most people don't pay attention to it, don't even have to.  You just plug in your router, and it pretty much just works out of the box.



STEVE:  It's just elegant technology.



LEO:  It is, yeah.



STEVE:  And of course, you know, in terms of DHCP, since most ISPs use the same DHCP to assign IPs to their residential computers, the NAT router itself is a DHCP client.  When it turns on, out on the WAN port, going out toward the Internet, it will say, hey, I need an IP.  And so, again, the ISP will be running its huge DHCP server, which is providing IPs to everybody plugged into its whole network.  And so it will assign the router a unique IP for the WAN connection that the router has, just in the same way that then the router turns around and is the DHCP server for your own local LAN.  So the same thing is going on on both sides.  So your router is a DHCP client for your ISP's WAN side, and it's the DHCP server for your little residential LAN side.  Very cool.



LEO:  Yeah.  And I guess you could go on and on and on.  Who knows?  You might have a - the ISP might have its own DHCP server.



STEVE:  Yup.



LEO:  Well, there we go.  I think that was - that's it, huh?  There's pretty much the story of your home network, your LAN. 



STEVE:  Yes.  It's the first chapter.  We're going to talk about the ARP side and the lack of Ethernet security in two weeks, since next week is our Q&A episode.



LEO:  So Part 2 on Episode 29, but 28...



STEVE:  Is what can go wrong.



LEO:  What can go wrong with this elegant solution that seemed so good at the time?  Steve Gibson, always a pleasure.  I learn so much from every one of these.  And I know that many schools and universities are using them in their classrooms now.  And lots of people like the transcripts, too.  You can get those from Steve's website, GRC.com/securitynow.htm.  You'll find 16KB versions for the bandwidth impaired; transcripts of every show, thanks to Elaine; and of course Steve's show notes, often with diagrams and further information and links.  And that's a good place to go, too, if you ever have hard drive woes, because SpinRite is Steve's day job - although I don't know, he's spending so much time on Security Now!, it might be your late-night job.  I don't know when you find time to do it.  SpinRite is the ultimate disk recovery and maintenance utility.  I've been using it for years.  Version 6 is just out and just fantastic.  In fact, our neighbor boy came over, Stephen came over a couple of days ago and said, "My system's acting flaky."  And I said, "Son" - I hope you don't mind, Steve...



STEVE:  No.



LEO:  "Take this SpinRite and use it."  I felt like such a...



STEVE:  You have an implicit site license, Leo.



LEO:  Well, I'll get it back from him.  Don't worry, he won't keep it.



STEVE:  Ah, good.



LEO:  But I'm hoping it will recover his system.  I'm sure, if anything can, it will.  It's a wonderful program everybody should have.



STEVE:  Does it for lots of people every day.



LEO:  GRC.com.  Steve, enjoy the beautiful Southern California weather.  While we're frying, they're freezing back East.  But that's the way of the world, I'm afraid.



STEVE:  Yeah, this time of year.



LEO:  We'll see you next week, next Thursday.  We'll be in Toronto, and we'll be doing our every four weeks Questions & Answers.  Do people have a place to go on your site where they can ask questions for that?



STEVE:  Oh, I am just swamped with questions, yes.



LEO:  We don't need more.



STEVE:  At the bottom of the SecurityNow.htm page is a form that people can submit questions to.



LEO:  Great.  And we do appreciate them.  They help us, well, they help us a lot, guiding the show and the content of the show, as well as...



STEVE:  It gives me a lot of feedback.  You know, we had just great response from these first two episodes, sort of our technology foundation series that we're doing now.  And we've got a few more things to cover, and it's looking good.



LEO:  Right.  Thanks to our friends at AOL Radio for broadcasting this on their podcast channel, and of course for providing us with the bandwidth so that you can listen to Security Now! each and every week, absolutely free, whether it's on iTunes or with iPodder X or iPodder Lemon or whatever client you use.  We're glad you listen, and we hope we'll see you next time on Security Now!.  Take care, Steve.



STEVE:  Thanks, Leo.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#28

DATE:		February 23, 2006

TITLE:		Listener Feedback Q&A #4

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-028.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world "application notes" for any of the security technologies they have previously discussed.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 28 for Thursday, February 23, 2006, our Listener Questions and Answers No. 4.  Steve Gibson, hello.



STEVE GIBSON:  Hey, Leo.  Good to be with you face to face again.



LEO:  Had a lovely lunch in the beautiful Rogers Cafeteria.  And you had your traditional dual ham sandwiches.



STEVE:  My meal for the day.



LEO:  You're preparing for a big Security Now!.  Now, we decided every fourth episode, unless there's some burning issue, to answer questions.



STEVE:  Right.



LEO:  And that's great because we get a lot of them.



STEVE:  Our Mod 4 episode.



LEO:  Mod 4, yeah.



STEVE:  Yeah, there were a few issues that we - couple things from last week that I want to deal with.  Actually, from the last Q&A, a couple people - more than a couple, actually, many people thought that I had sort of sidestepped one of the questions we answered four weeks ago about which is the most secure operating system.  I sort of summed it up, I guess, and I think I can understood where they would feel that I had sort of wimped out on it.  I said, well, Windows is getting better...



LEO:  Yeah.



STEVE:  ...was sort of the way I...



LEO:  That was accurate.



STEVE:  You know, it certainly is accurate.  One of the things that - I did a little bit of research because I was sort of curious.  And in fact the U.S. CERT, the United States Computer Emergency Readiness Team, they published a rather controversial report recently that showed that, in 2005, Windows and Windows apps had 812 security flaws, whereas UNIX/Linux and its packages had 2,328, like almost three times more.  One of the problems is that in the last, I guess it's, what, three years, Linux code has gone from two million lines to six million lines.  And we all know that change is the enemy of security.  Whenever you're cranking out lots of new code, there's a chance for some problem.



LEO:  Well, I'm going to save you a lot more email, Steve, because there's another issue, which is that Microsoft is relied upon for releasing its security flaws, but the Linux community is a much larger community with a lot more people working on the code because it's open source.  So you'd expect to see many more flaws discovered.  Furthermore, it's not merely those eight million lines of code that's in Linux.  There are thousands of other programs that are part of most Linux distributions that are often included in those security bulletins, as well.



STEVE:  And certainly were included in this case, so you're right.  So it's a problem of apples and oranges comparison.



LEO:  I think - and people often do this with Firefox and Explorer, too - I think counting the number of exploits is not a way of discovering whether one is more secure than the other.



STEVE:  Right.



LEO:  In fact, you could make a very good case that that would mean Linux is more secure because the exploits have been discovered and patched.



STEVE:  Of course.  Of course.



LEO:  You know, maybe there are fewer holes.



STEVE:  So it's 2,328 fewer vulnerabilities now than there were before.



LEO:  And isn't that what you're looking at, is how many vulnerabilities still exist, not how many have been discovered?



STEVE:  Yeah.  The point I wanted to make, basically to sort of get some conclusion to this question, I mean, is to say that security is a process more than it is a product.  I think it's the case that the Mac OS, because of its long-term networking heritage coming from UNIX, is, all things considered, more secure as a platform, as a user-friendly commercial platform, than Windows or any of the open source solutions.  So, you know, if someone wants a simple result, I would say the Mac OS is going to give the average user much more security than Windows.  Which is not...



LEO:  But I wouldn't say that the Mac is the most secure version of UNIX, either.  I mean, there are far more secure versions of UNIX out there.



STEVE:  That are tightly bolted down.



LEO:  Intentionally made secure.  And in fact there is some evidence that Apple has not maybe patched as many of the older programs as they should have.  They haven't kept up, in fact, with the code base.  But I agree with you, if you're looking for a consumer operating system, it's probably the - I mean, you're not going to use, you know, SecureBSD as your consumer operating system.



STEVE:  Right.  Also, it's certainly the case, too, that it's possible for a user to run Windows in a very secure way, or run UNIX, Linux, or Mac in an insecure way.  So again, it's not just the OS or the applications you're using, but it's what you do with it and how you manage your system.  You know, are you opening every attachment that you receive in email?  That'll get you on a Mac as easily as it will - well, not quite as easily as it will...



LEO:  Actually, it won't because there aren't any exploits.   And that's part of the issue, too, is how many exploits are there out there.  And there are certainly far more.



STEVE:  The target of opportunity.



LEO:  Right.



STEVE:  Yup.



LEO:  So I think that's why I didn't call you on it last time is I didn't feel like you were fudging, I feel like there was no really correct answer.  And you said the right thing, which is Windows is getting better.



STEVE:  Exactly.



LEO:  So for those of us who want you to say Mac, we just have to live with it.



STEVE:  You know, we just want to have red, green, or blue.



LEO:  Yeah.



STEVE:  The other comment from last week's episode, where we talked about how LAN technology works, I talked about DHCP, Dynamic Host Configuration Protocol, that assigns IPs automatically.  And we briefly discussed that versus static IPs.  A number of people chimed in with very good instances where static IP assignment was valuable - certainly, for example, if you've got network printers, where different machines need to know what IP address the printer's going to have.  You can't have it getting its IP automatically if that would mean that it would have its IP floating around.



LEO:  Right.



STEVE:  And the other, the very good example, is if you've got your consumer router doing port forwarding, it's going to be forwarding ports to an IP.  So again, you want to make sure that your computer is there at that IP.  The cool thing is, you can have DHCP and static IPs coexisting with no trouble at all.  So normally in your router config it'll show, like, first IP that's available for it to assign and last IP, or sometimes it's first IP and how many it can assign.  So that creates a block which is normally smaller than the size of the subnet.  So, for example, if you had - and we talked about the subnet mask thing, also.  If you had a subnet mask, which most routers do, of 255.255.255.0, it means you've got 253 available IPs.  Most routers will only assign 100, typically, out of that range, giving you plenty of room to give machines and printers a fixed IP that you don't have to worry about floating around.



LEO:  I think some of this is just that some of these technologies just haven't caught up with the DHCP world.  I mean, eventually you should have zero config so you don't need to know what printer IP address you have.  The port forwarding should be kind of more automatic so you don't have to assign a...



STEVE:  And the printers will be discoverable by the machines on the network, no matter what their IP is.



LEO:  Exactly.  They just haven't caught up with it yet.



STEVE:  Right.



LEO:  The automated world we live in.  Shall we get to the questions?



STEVE:  Let's do it.



LEO:  David from the United Kingdom has one for you.  And actually, as we pointed out before, that often these represent many people who've asked the same question.  We're just picking on David.



STEVE:  Right.  And in fact, when I'm going through them, I'll see one that keeps coming up.  And it's like, okay, a bunch of people have, you know, it's like, this is something I want to address.



LEO:  Want to answer that, yup.



STEVE:  Exactly.



LEO:  My question is about what ShieldsUP! shows me when I'm using HotSpotVPN.  Normally my home PC appears totally stealthy.  That's good.  All green lights.



STEVE:  Yup.



LEO:  However, when I use HotSpotVPN, ShieldsUP! shows the SSH, DNS, and HTTPS ports open.  Are these ports from my machine or from HotSpotVPN?  Is the VPN tunneling ports through my firewall and opening up my PC to attack?  What's the deal?



STEVE:  Great question.  The one thing that I would ask anybody to first look at when they're checking things out with ShieldsUP! is what IP are we showing?  Because at the top of any ShieldsUP! page I post the IP, which is the IP that our servers are actually probing.  So when you're using HotSpotVPN, we will certainly be probing, not the IP of your machine, but the public IP through which HotSpot emerges onto the Internet.  Any of the machines behind and that are using HotSpotVPN will have a 10. IP range.  The HotSpot guy allocates IPs for all of their clients in the 10. range.  So it's 10.something.something.something.  I tend to get, like, 10.250.0.22 whenever I'm using HotSpotVPN.  So because that's a private IP, no one outside is able to probe that.  There isn't a way for me to access any sort of private 10. IP address.



Now, it is the case that a VPN tunnel could tunnel everything through to the machine.  But in this case the HotSpot guy is running a NAT system.  And so it's Network Address Translation, which is translating the public IP into the 10. IP.  So the bottom line is, all we're able to test, and all any hacker is able to see, is the machine run by HotSpot where the private addresses emerge onto the Internet.  So it's definitely not your machine.  And you've got all the protection of any NAT router.



LEO:  In fact, you might even have more because you're using VPN, as well.



STEVE:  Yes.



LEO:  I think this is related.  Chad writes from his Yahoo! account:  I tried your suggestion of using the Tor Onion Router network - that's an anonymizer - to anonymize my connection for free.  But when I run the ShieldsUP! port scanner, it shows I have several ports open, and the rest show as closed.  Nothing is stealth.  I'm behind a NAT router.  I should be all stealth.  What's going on?



STEVE:  Right, now, you're right.  This is sort of a related question.  And again, we've seen a lot of this.  The Tor system is an interesting anonymizing system that we've talked about where you make a connection to a so-called "Onion Router."  And Tor is an acronym for The Onion Router.  It then makes a connection to another one, which makes a connection to another one.  And they deliberately don't keep any logs of who they've connected to, so that after a few hops you emerge on the Internet from that final router.  Once again, if you look at the IP that ShieldsUP! is testing, it'll be the IP of that last router because that's where we're seeing your connection to GRC coming from, so that's what I test.  So again, it's not your machine at all.  In this case it's not a VPN.  It's just sort of a chain link of routers, and we're only seeing the final emergence at the last router.



LEO:  So, gang, stop using VPNs and Tor routers when you want to run ShieldsUP!.  You're not testing your system.



STEVE:  That's a very good point.  ShieldsUP! will only be testing the status of the machine that you're entering the Internet from, which in these cases is never your own machine.



LEO:  It's an interesting exercise, but it's nothing useful, the result.  Jan asks:  According to AuditMyPC - which is one of these websites you go to where they scare you - these people are able to acquire the private IP address via JavaScript.  Shocking.  Is this true?  I ran an IP check on my machine and found out that the internal IP they showed me was correct.  If it is true, and not some sort of trick, it's a little disconcerting.  Any suggestions on how to prevent such an acquisition?



STEVE:  I'm glad you said "the site that tries to scare you" because, I mean, obviously you know about AuditMyPC.  I get this question so much.



LEO:  They're in the business of selling you security.  So they're trying to raise your fear factor a little bit.



STEVE:  Well, they really are succeeding, unfortunately.



LEO:  And in this case they're really kind of fudging it because...



STEVE:  Well, okay, yes.  First of all, what's happening, to answer Jan's question, is that JavaScript is running on her browser, and that JavaScript, which is basically scripting code written by and downloaded by AuditMyPC, is running in her browser and reporting back to them information from inside her network.  You know, the other famous instance of this is where you go to a website, and they show you the contents of your hard drive.



LEO:  Right.



STEVE:  It's because your browser that's on your computer...



LEO:  It knows.



STEVE:  ...is showing you your hard drive.



LEO:  Not them.



STEVE:  They can't see it.  Exactly.  So, you know, it's one of these things that...



LEO:  It's a client-side program.  Which means it has client-side information.  So that means AuditMyPC doesn't know your IP, your internal IP address?



STEVE:  Well, no.  It means they do.  But that's the second part of this question.  Jan has nothing to worry about with them knowing her IP is 192.168.0.1.  About a million people have that IP because that's a private IP given to her by her router.  So anyone can and does see the public IP.  For example, that's what ShieldsUP! tests when you go to ShieldsUP!.



LEO:  Hey, if you go to any website, it knows your IP address.



STEVE:  They have to because that's the way they get the traffic back to you, back routed across the Internet, back to your location.  But all of this stuff that shows you the contents of your hard drive or that says, oh, we know what your private IP is, well, I mean, the fact that you have a private IP means that you're secure because you're behind a router.  So that information does them no good, nor does it do anyone with malicious intent any good.



LEO:  Although I have to say it does seem like a flaw in JavaScript that it can discover that kind of information.



STEVE:  Yeah.



LEO:  I don't think it should be - there's no - I don't think there's any compelling reason why it should be...



STEVE:  The whole client-side scripting thing, of course, is a double-edged sword because that gives you lots of functionality, but, boy, at a security cost.



LEO:  Maxwell, whom you call an "avid listener" - what, he listens twice?



STEVE:  Avidly.  We have people who write to us and say they listen two or three times to some of our more, you know, dense propellerhead ones.



LEO:  Sometimes you have to.  He says:  I want to securely share files within my own home.  I have a cable modem and a router with a wired PC and a wireless laptop.  How can I safely and securely use Windows filesharing?  He's worried that, if he turns filesharing on - and we used to say this all the time, oh, don't turn on filesharing, it's insecure, and you're in trouble.  Is that still a problem?



STEVE:  The wisdom has changed because NAT routers happened.  Consumer routers protect you from things going on within your local area network and provide really good security so long as you remember to turn off, if you don't need it, the Universal Plug and Play feature, which we've mentioned many times does represent a security problem.  So the concern about Windows filesharing being used pervasively in a home isn't something that anyone needs to worry about.



LEO:  It's inside the router.



STEVE:  Except he also has wireless.  And so the addition of wireless means that he needs to go back to our earlier episodes talking about WPA and WEP encryption, basically how to make your wireless system safe.  If he uses that technology, if he makes sure that he's using WPA encryption with a really long password, he's safe, and he can use Windows filesharing with no concern at all.



LEO:  Which makes me think now, when we were talking about static IP addresses, if you turn off the DHCP in your router, are you no longer protected by NAT if you're using static IP addresses?



STEVE:  No.  You still have NAT.  The only real difference with no DHCP is that you'll have to manually assign IPs to all of your equipment.



LEO:  But it doesn't turn the router into a hub.  It's still routing, it's still...



STEVE:  Right, because those IPs are still private.  They're still 192.168, and so you'd have to have that whole public/private translation going on.



LEO:  So as long as you have a router, you don't have to worry about filesharing.  Now, if you weren't on a router, if you were just on a hub or somehow otherwise getting on the Internet with all your systems, that could be a potential problem.



STEVE:  Yes.  The router is the thing that protects you from having a concern with Windows filesharing because it gives you private IP addresses.



LEO:  Dean in Cochrane, Alberta, Canada, says:  My question is with regards to Hamachi and UDP.  Hamachi, you may remember, is that great VPN solution that we mentioned...



STEVE:  The peer-to-peer VPN.



LEO:  That allows you essentially to set up a LAN, a local area network with people anywhere on the Internet.



STEVE:  Right.



LEO:  My understanding is that UDP, which is the protocol that Hamachi uses, is less reliable than TCP.  And you mentioned that TCP is preferred for consistent connections.  Is it true that Hamachi uses UDP; and, if so, is it smart enough to handle dropped packets properly?  Does OpenVPN use TCP or UDP?



STEVE:  Okay.  Good question, actually.



LEO:  We did talk about this.



STEVE:  Well, we did, but this is sort of an interesting flavor of that.  The idea is, first of all, to answer the last question first, OpenVPN can run either.  And UDP is a preferred technology for any kind of VPN because it allows you to tunnel any protocol, that is, TCP or UDP, in a good way over UDP.  Hamachi, because it was written by a guy who really does, you know, Alex Pankratov really does understand this stuff, it uses UDP.  It's able to use it well because, if you have a TCP connection which needs reliability, when TCP says, hey, I dropped a packet, send me another one, well, it's able to issue that request within a UDP packet.  You can't issue the request within a TCP packet because TCP gives you connections instead of packets.  What you really want are packets.  So Hamachi is doing the best possible thing, which is to use UDP.  And OpenVPN's preferred means of operating is also to use UDP.  So everybody's got it covered.



LEO:  The point is, I guess, don't confuse the tunnel...



STEVE:  Right.



LEO:  ...with the traffic in the tunnel.



STEVE:  Right.



LEO:  So you build a tunnel.  Let's say it's the Channel Tunnel, the Chunnel.  You build the tunnel...



STEVE:  The carrier.



LEO:  ...the carrier with UDP because that's the right protocol.  But it doesn't mean you can't have reliable connections inside it.  That can still be TCP and all of the issues along with it.



STEVE:  Exactly.



LEO:  Benefits along with it.  Burt Lasarge of Redford, Michigan asks:  The recent revelation of security issues with Google's Search Across Computers desktop search feature - we haven't really talked about that, we should address that - leads me to wonder whether the built-in Windows directory and file encryption security is a sound way of keeping private files private.  Would this solve that problem of having my personal files copied to other computers?



Let's just mention that this new feature that was built into the Google desktop search allows you to search, not only your local computer, but other computers.  And in order for Google to be able to do that, it has to store the contents, effectively the index of what's in your computers, on its own servers.



STEVE:  Right.



LEO:  Which is...



STEVE:  Has caused huge security concerns.  And privacy concerns.



LEO:  And Electronic Frontier Foundation is pointing out that perhaps a police warrant would allow them to then go to  Google and say, give us the contents of this fellow's computer, and they'd have it because you'd turned on this Search Across Computers feature.  So the EFF, anyway, is recommending that you turn that off.  Do you agree?



STEVE:  No, I absolutely agree.  And it's unfortunate, sometimes Google's got great ideas, but they seem to go a little too far.



LEO:  I think they just didn't think about what it meant.  You know, they know they're trustworthy.



STEVE:  Remember when they were caching?



LEO:  Yes.



STEVE:  Remember the...



LEO:  Same thing.  And it didn't work.



STEVE:  They were going to speed up everyone's connection...



LEO:  Terrible idea.



STEVE:  ...by caching the Internet for you.



LEO:  Right.



STEVE:  And it would cause all kinds of problems.



LEO:  Well, because people's passwords were being cached.



STEVE:  Yeah.  You would end up seeing other people's pages by mistake.  Oops.



LEO:  So Google turned that off in about a day.  They still do that Search Across Computers.



STEVE:  In response to Burt's question, Windows protection, file or folder or whatever kind of encryption, would not help him.



LEO:  Because it's unencrypted when you log in.



STEVE:  Exactly.  Basically it's storing it encrypted.  But any view of it that the computer or the user or the network sees, it sees it after it's been decrypted on its way out of the file or out of the drive or directory.



LEO:  So if Google can search it, it can see it.



STEVE:  Right.



LEO:  So you should worry about that.  Now, if you had another program like TruSecure, which we've talked about, encrypting it, if you left it encrypted, you'd be safe.  But the minute you unlocked it, same problem.



STEVE:  Exactly, exactly.



LEO:  Another listener asks:  I recently purchased a piece of software called FolderLock - does something of the same thing - in an attempt to secure my portable USB device.  But I've already been able to bypass the security measures it implements.  Hmm.  Hmm.



STEVE:  Yeah.



LEO:  Are there any good portable security programs for USB drives?



STEVE:  Well, we're going to do an entire episode on TrueCrypt because it's a fantastic solution for this.  It's open source and free, and they've really just - they've nailed the solution.  So let's just say for now, not to preempt ourselves, take a look at TrueCrypt.  Anybody who's interested in encrypting folders, files, USB drives, it handles that stuff and does a beautiful job.  It's going to be what we end up recommending.



LEO:  Yeah, it's really remarkable.  George Walker in Tulsa, Oklahoma is interested in general security and the working of the worldwide web and email system.  Well, I hope you listened to our last two episodes because we talked a lot about the Internet.  What happens once the data leaves my personal network?  For example, how secure and private is my data when it's sent over the Internet and through my Internet service provider?  What does my ISP know and see about my usage?  Can my ISP see my emails?  Having an encrypted wireless home network is great, but isn't it pointless once it gets to my ISP and beyond, when anyone can see the data?  That's a great question.



STEVE:  And unfortunately, the answer is yes.



LEO:  Yeah.  That's why they called WEP "Wired Equivalent Privacy."  They didn't say it's private, they said it's the same privacy as wired.



STEVE:  Right, yeah.



LEO:  Which is not very.



STEVE:  The idea with the issues we've discussed, like locking down a wireless network or using a VPN when you're in a hotspot or in a hotel, we're trying to secure the high risk, the highest risk zone, and keep somebody from being able to exploit that.  But it's absolutely true that, even if you have an encrypted wireless network at home, when it leaves your wireless router, the router is decrypting it to send it out to your ISP.  So your email is in the clear.  And of course this has been a great concern recently with, you know, all the U.S./NSA spying.  And there have been, you know, subpoenas issued to grab people's email.  ISPs have unencrypted email on their email servers.  That's the way the Internet works.  By default, email is not encrypted.  Just like web pages are stored in web caches, by default, unencrypted.  So, I mean, it is the case that the use of the Internet's standard protocols is not encrypted and is only secure as those people who you are trusting to tend it.  And if you did have an ISP that was really misbehaving, they could be spying on their own users.



LEO:  Well, not even just an ISP, but it also has to hop from server to server to get out to where it's going.  And anybody on that server who was untrustworthy could also snoop; right?



STEVE:  Right.



LEO:  It's like sending a postcard.  You trust the mailman's  not reading it.  And the volume of mail is such that probably he's not.  But there's always that risk.



STEVE:  And you put more sensitive stuff...



LEO:  In an envelope.



STEVE:  Exactly, in an envelope, not on a postcard.



LEO:  That's why I use PGP.  Now, I also use FastMail, which is an independent email company.  And I use SSL to FastMail.  So my ISP can't see my mail.  But FastMail can see my mail.



STEVE:  Right.  Right.



LEO:  Somebody's got to store that stuff.



STEVE:  Ultimately, because email was never really defined as an encrypted technology, sooner or later it's going to be decrypted in order to go public.  



LEO:  Has to.  Unless you use PGP Point-to-Point, and then only your recipient can read it.



STEVE:  Right.



LEO:  Karen Wilson of Murrieta, Georgia, asks:  With a VPN, what happens to the initial - Virtual Private Network - what happens to the initial connection I make with my wireless card at a hotel once I've established a VPN?  I have sharing of folders turned on when I'm at work and hardwired into my work's LAN.  Are they visible to others in the hotel when I'm using the VPN?



STEVE:  Correct, a great question.  The answer is she is safe.  The initial connection establishes the tunnel, and no - and this is really important.  This is just like with SSL, where you are creating a secure connection to a remote web server.  That connection creates a tunnel.  It is brought up and encryption is activated before any user application data first moves through it.  So she could be totally comfortable using a VPN in a hotel to connect into her work computer or work network, even though it's got Windows filesharing enabled.  There's no leakage through the VPN.



LEO:  Now, when I first log into my hotel's network, wireless network, I have to give it a password.  I mean, that's kind of part of the deal with a hotel.



STEVE:  Just like everybody does who use the hotel network.



LEO:  Right.  At that point I'm not encrypted.  I haven't turned on my VPN yet.



STEVE:  Correct.



LEO:  So she would be vulnerable for that brief period if she had folders filesharing turned on; yes?



STEVE:  Oh, I think she said that she had them on her work machine.



LEO:  So she's safe, okay.



STEVE:  Yeah, so she's safe.  But you're right.  While your traffic is not going through the VPN, you are not protected by the VPN.



LEO:  So I get to the hotel.  I log onto the hotel's network.  And then I launch HotSpotVPN.  I'm protected from now on.  But there is that brief period of time when I'm not protected.



STEVE:  Right.  The idea would be you would probably be using a personal firewall on your laptop if you're a telecommuter.  That would provide you the protection.  Then the VPN tunnel would pierce the firewall outbound, go to your work.  That way, at no point are you at danger.



LEO:  Got to turn on my firewall.  A wireless TiVo user writes:  Episode 13 convinced me to switch from WEP - which we've pointed out is broken...



STEVE:  Broke.



LEO:  ...to WPA, which we pointed out works.  It's the best way to protect a wireless network.



STEVE:  Yup.



LEO:  Thank you, he says.  My wife and I are using Macs, Tiger.  So the switch was relatively painless.  I did, however, have a follow-up question.  Is there any way to continue using devices like the TiVo and others that, unfortunately, only support WEP?  I'm willing to connect TiVo by wire; but I was curious, is there any bridging technology that won't compromise my network security?



STEVE:  The question's come up before, and I've thought about it a lot.  The only solution that makes sense that I could recommend would be to get an older wireless access point and use two.



LEO:  Bridge it into the network.



STEVE:  Exactly.  You need to have a central access point, I mean, sorry, a central router on whatever connects you to the Internet.  And then you'd have a WPA access point and a WEP access point.  Basically you'd be running two wireless networks.  One is secure, and one is not secure.  And...



LEO:  And it's only minorly not secure because you could still run WEP on that one...



STEVE:  You absolutely could run WEP on it if you wanted to.  And the other advantage is...



LEO:  Nobody's going to crack your TiVo data.



STEVE:  Exactly.  The idea would be, you could just think of your unsecured wireless as, you know, anyone can have access to it.  You might want to turn off the SSID broadcasting, and you could use Mac filtering.  But the advantage then is, if people come over with a wireless laptop, they're able to use your unsecured network, and you're able to keep your WPA just to yourself.



LEO:  Now, if I do that, so I allow them on my unsecured wireless network, the wireless access point getting into my secured network is preventing them access to my secured network; right?  That's acting as a firewall between my friends, who I don't trust, apparently, and my network; right?



STEVE:  It turns out that something we have not covered yet, but we're going to very soon, as soon as we get back to our fundamental technology series, ARP spoofing is a real problem for LANs.  And we'll be talking about why LANs are just not secure.  So it turns out there's no safe way to have two wireless access points plugged into each other.  They need to be plugged into a third router in a Y configuration.  That's safe because ARP never crosses across routers.  And so you get protection from spoofing.  If you really want it to have the best security, you need a Y configuration.



LEO:  We've mentioned that before, and we'll talk about ARP poisoning in greater detail later.



STEVE:  And this time I do have pictures.



LEO:  Oh, good.



STEVE:  Yeah.



LEO:  Too bad it's radio.  Am I on John McFarland of Portland, Oregon?



STEVE:  Yeah.



LEO:  He wonders:  Regarding tunneling and VPNs, wouldn't using a tunnel for email, web surfing, peer-to-peer filesharing and so on, bypass any filtering, content management, port blocking, firewalling, and any other controls that a corporate or ISP bandwidth provider has set up to regulate the network's usage?  For example, I'll give you an example that's very common.  Some ISPs block BitTorrent.



STEVE:  Right.



LEO:  So would using tunneling allow it?



STEVE:  Completely bypass all of that.



LEO:  All right.



STEVE:  Yes.  If your ISP doesn't allow this, or if your corporate network - I mean, now, I've got to say, last time we talked about this, all kinds of people...



LEO:  People got mad.



STEVE:  ...got pissed off.  And it's like, hey, we're not saying to do it.  We're just talking about the technology.



LEO:  We're warning you that it's possible, that your employees could be doing this.



STEVE:  Exactly.  Tunneling technology means that the content in the tunnel is not filterable.  It looks like - literally, it looks like noise.  It's been encrypted.  And anything correctly encrypted looks just like static.  You can't tell the difference between it and random noise because they are random numbers.



LEO:  And that's exactly why BitTorrent's proposing an encryption as part of the protocol, so that...



STEVE:  In order to prevent ISPs from snooping on their users.



LEO:  Sniffing around.



STEVE:  Yeah.



LEO:  Philip Hanson of Wilmington, Delaware, writes:  Last week you talked about how DHCP servers provide IP addresses.  But you also said they provide the computer's DNS server address.  Uh-oh, what's a DNS server?  Uh-oh.



STEVE:  Okay.  We're going to keep this simple.



LEO:  We only have a few minutes left.



STEVE:  We're going to keep this simple.



LEO:  The crew is coming back.



STEVE:  I thought it was an interesting question because, I mean, a lot of people will know what a DNS server is.  But I wanted to answer Philip's question...



LEO:  Well, people know, I think kind of practically, kind of what it does.  But I don't know if people really know what it does.



STEVE:  Well, and we're not going to do the whole deep hierarchy of the Domain Name Service.  Basically, though, Philip, what this does is, it's the thing that converts the human-style, readable Internet addresses...



LEO:  GRC.com.



STEVE:  GRC.com, Microsoft.com, Google.com, whatever, those are - actually each one of those is also represented by one of those Internet dotted quad, you know, like, for example, GRC.com, 4.79.142.200.  If you put into your browser 4.79.200 - I'm sorry.  See, I can't even remember it myself.



LEO:  You don't need to.  That's the beauty of it.



STEVE:  But I never forget GRC.com.



LEO:  Right, that's the beauty of it.



STEVE:  Yep.  So that's what DNS does.



LEO:  That's what it is, is directory information.



STEVE:  Yeah.



LEO:  You may not remember Steve's phone number; but you know his name, you call directory information, they match it up with a number.  Ultimately, that's what the browser needs, though, to surf to that address.



STEVE:  Well, and your whole computer, for other purposes.  So it does make sense that DHCP is giving it, not only its IP address and the various other networking parameters, but also a server that it can use to look up the IP addresses of all the other places you want to go on the 'Net.



LEO:  Basically fills out that form for you that you'd have to do by hand if you didn't have DHCP.  Craig in the U.K. asks:  In your first "How the Internet Works" episode, you explained that packets might be lost, but never explained how or why that could happen.  If most packets make it across the Internet, why is it that some don't?



STEVE:  Good question.  If you've ever watched a dripping faucet, most of the drips go in the same place.  But every so often you get this bizarre one that just kind of - somehow it lands on the other side of the sink.  It's like, wait a minute, you know...



LEO:  You must spend a lot of time watching dripping faucets.



STEVE:  It's chaos theory, actually.  And the Internet is like that.  The idea is that, even though over the whole Internet there's a whole bunch of averaging going out...



LEO:  It's pretty predictable.



STEVE:  Yes, it's very predictable and generally works.  You do have little, sort of like little tsunamis on routers where suddenly everything will pile up.  A router doesn't have tons of buffering.  Basically the packets are coming in, and it's sending them out as soon as it can.  But since it's got a bunch of connections, if a bunch of packets came all into it from three inputs, and they all wanted to go to the one output, for example, out the same path, there just isn't a way that it's able to take and cram three times the data out one output.  So what the router does is just - it shrugs, and it says, oh, well.  It sends what it can, and it drops the others.  And the chances are just sending it again will not cause that same brief collision of not having enough bandwidth for just that instant.  So that's how packets get lost.  It's just little bitty times when there just isn't enough bandwidth on specific linkages.



LEO:  Next week Steve's going to explain where those socks go when you dry them and you only get one back.  Finally, Burt Lasarge from Redford, Michigan asks:  I was just wondering where you guys frequent the 'Net as your favorite sources of tech information.



STEVE:  Good question.



LEO:  Do you, like, browse around on the 'Net and look for information?



STEVE:  You know, I don't.  I put the...



LEO:  You're very goal oriented.



STEVE:  Yes.



LEO:  When you go on the 'Net, you know what you're looking for.



STEVE:  That's exactly - I am Mr. Google.



LEO:  You're not a browser.



STEVE:  Google, I know - exactly.  I know exactly what I want.  I have my Google set to my homepage.  I just come up with a phrase, and it's just amazing how quickly I can find what I want.  So I'm not in a mode where I'm, like, looking for more stuff.  I'm really looking for answers to the problems I've already got.



LEO:  I do, because it's kind of my job, I do kind of surf quite a bit.  And I use a newsreader.  And in fact, I'll tell you what, I'll put my OPML file up, if you want to see what links I use.  That's the easiest way to do it.  You can import it into any news aggregator, and there are about 60 different pages I go to.



STEVE:  Wow.



LEO:  Well, I don't see - that's why an aggregator's nice.  You don't have to actually go to those individual pages.  It just loads the headlines for you, and you can look and scan through them.  But for security information, I think SecurityFocus.com is a very good...



STEVE:  It's a great place.



LEO:  And it's certainly a site that, if you wanted to know more about security on an ongoing basis, it would be worth visiting.  They have a number of newsletters you can subscribe to in a lot of different areas of security so that, if anything big does happen, you'll be alerted by push, you know, you don't even have to go that site.



STEVE:  Right.



LEO:  There's the Bugtraq mailing list, also, is another good mailing list where security exploits are quickly revealed.



STEVE:  Yeah, it's funny, I mean, the way I work, I'll Google for what I want, then I'll see SecurityFocus or Bugtraq or one of the sites I know really well.  It's like, oh, good, now I've got the page...



LEO:  I can trust it, too.



STEVE:  Exactly.  So you bring your knowledge of those sites to the result of the search in order to sort of winnow it down further.



LEO:  There are lots of great sites out there.  I'll tell you what.  I will start a - for those of you who are donors to TWiT.tv, I will start a thread in our message boards.  We have new private message boards.  Have you joined those message boards, Steve?



STEVE:  Yeah, I am, I'm a member.



LEO:  I'll put a thread in there...



STEVE:  I couldn't figure it out.  It was too complicated.



LEO:  He's a Usenet type.  I will put a thread in there of where do you go, because we'd like to hear from you where you go to find out more information, not only about security, but about tech subjects in general.  And I will also put the OPML up in the show notes on TWiT.tv.



We're out of time.  They've turned the lights back on in the studio.  The camera crew's back.  Fortunately the Olympics hockey is keeping them busy, so we don't have to worry for a few minutes.  But I think we'd better wrap this thing up.



STEVE:  We're done anyway.



LEO:  We're done anyway.  All the questions are done.  Well done.  Next week what are we going to cover?



STEVE:  Next week we're going to talk about LAN Insecurity.  We talked about how LANs work.  So next week is how IP and Ethernet are joined together by this Address Resolution Protocol, ARP.  And unfortunately why, since security was never even a consideration back when this was designed, why it's so frighteningly insecure.



LEO:  That'll be great.  Next week.



STEVE:  So cool technology with a real security overtone.



LEO:  That's the March 2nd Security Now!.  We invite you, of course, to visit Steve's website, GRC.com/securitynow.htm.  That's where you'll find the transcripts, the 16KB version for the bandwidth-impaired.  And of course it's where you can read all the show notes, as well.



Steve is the author of the fabulous SpinRite disk maintenance and recovery utility.  I wouldn't leave home without it.  In fact, I have it in my suitcase.  I literally don't leave home without it.  And if you have a hard drive that you want to keep an eye on, or if you just, you know, have something you're losing, maybe some files that you want to recover, this is the way to do it.



STEVE:  Someone wrote an amazing letter to us a couple days ago.  I love to see those.  Someone who just desperately needed something, and they didn't know what to do, and they ran SpinRite, and just it's fun to hear them describe how they just - they can't believe, when they reboot their machine after running SpinRite, it's back.



LEO:  Yeah, it's really neat.  That's GRC.com for SpinRite, and of course the show notes.  And we thank our friends at AOL Radio for broadcasting the show on their podcast channel and providing the bandwidth so that we can give you Security Now! every week:  AOLmusic.com.



TWiT.tv is the headquarters for the entire TWiT network.  If you like what you hear, please feel free to click those donation buttons.  And of course everybody who donates, whether it's a dollar or a hundred, gets access to the TWiT Forums and other cool stuff, which we're still trying...



STEVE:  Working on.



LEO:  Working on.  We'll find something.  We'll see you next week.  Thank you, Steve.  Have a safe trip home.



STEVE:  Always a pleasure.  Good to see you in the flesh this time.



LEO:  Yes, so to speak.  I'll have to put my clothes back on, though, for the show.  This is Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#29

DATE:		March 2, 2006

TITLE:		Ethernet Insecurity

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-029.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve discuss the design, operation, and complete lack of security of Ethernet - the LAN technology that virtually all of the world uses.  They explain how this lack of security enables a wide range of serious attacks to be perpetrated by any other machine sharing the same Ethernet - such as in a wireless hotspot, within a corporate network, or even in a wired hotel where the entire hotel is one big exploitable Ethernet LAN.  GRC's ARP Cache Poisoning page contains a detailed explanation of these problems with diagrams and links to readily available Ethernet ARP exploitation malware.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 29 for Thursday, March 2, 2006:  Ethernet Insecurity.  From his fortress of solitude, deep within Irvine Mountain - are there mountains in Irvine?



STEVE GIBSON:  Yeah, actually, they're Saddleback Mountains, like the big famous mountain range, yeah.



LEO:  Deep within Saddleback Mountain, buried under 3,000 feet of granite:  Steve Gibson.  You don't have, like, this - I just imagine you in this kind of basalt batcave.



STEVE:  I'm surrounded by screens.  That's about it.  I've got monitors showing bandwidth.  And it's funny, too, when you have too many screens, it's hard to find your cursor.  Because it's like, okay, where did this go?  You know, which screen is the mouse cursor on?



LEO:  Oh, so you - the screens, you can move your mouse across the screens and...



STEVE:  Yup.



LEO:  What are you using for that?  Synergy, or what do you use?



STEVE:  No, I mean, I've got three screens on a single system.  But then I also have other systems monitoring other things.  Like I'm keeping a track on the IP turnaround between you and me right now.  We're about 30 milliseconds roundtrip time for our packet, just so we can see, you know, what's going on, packet loss and so forth.  So I've got screens showing, you know, bandwidth monitoring over at Level 3.  I can see how many people are connected and what the CPU utilization is, you know, it's bizarre.



LEO:  You're your personal lab experiment on the dangers of RF radiation on the human biology.



STEVE:  Yes.  Fortunately, I don't think that'll be a problem, so...



LEO:  Hey, he's fit, he's healthy, he's doing great.  It's harmless.  But you have all LCD panels by now, I'm sure, so...



STEVE:  Oh, a long time ago.  And let me tell you, that really cut down on the air conditioning bill.



LEO:  Oh, I bet, yeah.



STEVE:  Because, you know, those big, huge - I used to like large CRTs.  And boy, did they generate heat.



LEO:  Yeah.  And you were getting a bit of radiation in those days.  Those things were bad.  Especially - they fired them out back, apparently, so it was behind the machine that was bad, not the front.



STEVE:  Yeah.  I had some cats for a while, and they loved to curl up on top of the CRT.  It was like a heating pad.



LEO:  And then their hair fell out, and...



STEVE:  Exactly.



LEO:  So do we want to - I don't think we need to.  But let's, I mean, since you answered a lot of questions last week.  But is there anything we need to loop back around for last week?



STEVE:  I think we're all clear to start.



LEO:  Yeah.  I mean, usually when you answer questions you don't get more.  Let's talk, then, about Ethernet Insecurity.  In a way, this is Part 2 of our conversation from Episode 27, yes?



STEVE:  Well, yeah.  We have several episodes we talked about earlier about WAN technology, how the Internet works, how it uses a hierarchical addressing space.  And in fact I did have somebody asking me a question, basically about why Ethernet couldn't be used on a WAN.  If Ethernet's addressing is so cool because you just have unique addresses, why not just use it out on the whole Internet, and then you wouldn't have a problem with, you know, spoofing and NAT and all this.



LEO:  You're talking about using MAC addresses instead of IP addresses?



STEVE:  That's what he was talking about.



LEO:  Hmm.  That's an interesting idea.



STEVE:  Well, because, you know, we know that MAC addresses are unique.  As we know, a MAC address is a 48-bit number which is 24 bits that is assigned uniquely to a manufacturer; and the other 24 bits is, like, the manufacturer's serial number, so that none of its adapters ever have the same MAC address.  And because the manufacturer has 24 bits of the total, and then they have their own serial number within those 24 bits, the concatenation, which is a 48-bit binary number, is guaranteed to be unique in the world.  And so he was thinking, hey, why not just use that?



Well, the problem is, we absolutely depend upon IP addressing being hierarchical, that is, when an IP address, for example, has 68.something.something.something, all the routers in the world know that anything beginning with a 68 needs to kind of go in that direction, to go aim those packets toward that network.  So it's just like the way our U.S. postal system works, where you have, like, a state and then a town and a street and a number, where the first thing that happens is the mail gets sent to the right state.  Then it gets sent to the right town.  Then it gets sent to the right street.  Well, that's a hierarchical system.



MAC addresses are just, you know, a NIC will have any random 48-bit number.  So if you had that on a WAN, that is, on a global network, you'd have no way of knowing from the address any idea of where that particular network interface card was located.  So specifically it's the hierarchical nature of IP that makes the WAN work.  Whereas, you know, Ethernet LAN, because it has what's called a "flat addressing space," that is, just a single 48-bit, you know, it's on your LAN, and you don't need to know where because the whole LAN is one big network, one big sort of solid chunk of wire.  And you just address a packet to this 48-bit address on the LAN, and all of the network cards hear it, and then only the one that has the matching address responds to it.



LEO:  So you couldn't do this because it would be too inefficient to do it globally?



STEVE:  Yeah.  I mean, to do it, every single router would have to have the complete address list of every single Ethernet adapter in the world.  And the fact is...



LEO:  That's not going to make sense at all.



STEVE:  Well, no, it just couldn't work.  I mean...



LEO:  It wouldn't scale well, yeah.



STEVE:  Oh, exactly, exactly.  And his point was, hey, you know, 48 bits is bigger than 32 bits.  Ethernet addresses being 48, they've got, like, a whole lot more addresses; whereas, you know, the IP space on the Internet being 32 is obviously a lot less.  So wouldn't that give us more?  And so the point is, I mean, it's a really cool concept because, yes, from that standpoint that's certainly true.  But it is exactly the fact that the Internet addressing is hierarchical, that is, that the higher bytes, the first bytes in the address give you location.  I mean, that simple fact is the only reason the Internet works is that that way...



LEO:  We'd better not change it, then.



STEVE:  Oh, no.  That way routers, you know, it's like 68.*.*.*.  That is anything beginning with that byte they send in this direction.  And so, since there are only 256 first bytes, you know, possible values for the first byte, 0 through 255 - and actually a lot of those, a chunk of those are not even routable.  They're like, you know, for example, we know that anything starting with 10 is a private address.  So a router, if it receives something with a 10., it just throws it away.  There's, you know, nowhere for it to go. 



LEO:  Right.



STEVE:  So the beauty of the hierarchical addressing is that it tells you where to send it.  Whereas a MAC address is just a 48-bit number that has to be unique on the LAN.  But nothing about it tells you where to send it.



LEO:  The power of hierarchy.



STEVE:  Yeah, it's really a cool concept.



LEO:  It's like ZIP codes.  You don't do individuals - we talked about this a little bit before, but you don't do individual ZIP codes for every locale.  You have a hierarchy:  9 means West Coast and 0 means East Coast and so forth.



STEVE:  Well, a good example of sort of a ZIP code-ish thing, imagine that paper mail was addressed based on your Social Security number, which is, you know, assigned when you get a Social Security number to each person who has one.  And, you know, but the number doesn't tell you anything about where they live itself.  It's just, you know, it's a serial number.  So if you tried to deliver mail based on a serial number, you'd have to look every single one up.



LEO:  Right.  That wouldn't work.



STEVE:  And so anyway, just wouldn't work.  So, okay.  So what's very cool about the Ethernet is - yeah, the Ethernet, or Ethernet technology is probably the proper way to say it.  First of all, it was designed 33 years ago, back in 1972, by Robert Metcalfe.  Bob Metcalfe, when he was - now I don't remember where he was.



LEO:  Was he at SRI or BBN?



STEVE:  Oh, wait, no, he was at PARC, at the Palo Alto - he was at Xerox PARC.



LEO:  Okay.



STEVE:  And they were experimenting with locally networking computers.  And so, you know, computers cost $100,000 back then, and they were all hand wired and built with chips and things.  I mean, these were real expensive machines.  So the concept he had was - and it was brilliant back at the time - was to just put all the computers that they wanted to talk to each other on a single link, that is, on a single wire, essentially.  And you remember that the original Ethernet used coax.  It had the RG whatever it was, 57 or 70, I don't remember now what the number of the coax was.  But it was that big, you know, it looked like the same kind of...



LEO:  TV cable, yeah.



STEVE:  Exactly.



LEO:  Little thinner, but...



STEVE:  The same thing that people's cable modems are connected to, that kind of coax.  Because he needed what's called "transmission line behavior," where you'd have a single run of coax, and you would terminate it resistively at each end.  And then all the computers that wanted to be on this LAN would basically have, like, a T adapter.  They would just, like, have an electrical T connection that would run up to their card.  And you would hook all these machines together.



LEO:  And I remember how fragile that was.  I learned how fragile that was because once I disconnected my computer, and I broke the whole ring, and everybody went down.  By disconnecting the wrong part of the cable.  You want to keep it together.



STEVE:  Yes, exactly.  And you break that, and you could end up with two segments that were unable to talk to each other.  Now, there were some other local area technologies, and IBM had one called Token-Ring, where you literally passed sort of a virtual token, which was your talking permission, around and around this ring.  And so the machine that had the token was the one that was able to send data out.  Bob came up with a different approach, which was substantially simpler.  And as often happens, the simpler ones end up winning, although it does have some failure modes.



LEO:  It's Occam's Razor.



STEVE:  Well, exactly.  And Bob's approach, and actually I mangled this acronym the first time I talked about it months ago, was Collision Sense Multiple Access with Collision Detection - CSMA/CD.  The idea is that, on the LAN, all the computers are connected to the same wire.  So they listen for a time when nobody is sending data, that is, they're not receiving any data from anybody else who's on this single wire.  So when the wire's quiet, they will put a packet onto the wire that is bound for some other machine on the LAN.  There's a chance, though, that two computers that were both listening for silence will, when silence occurs, both put their packets on at the same time.  So you could have a collision of these packets.



What happens is that the voltages that result from two cards talking at the same time is easily sensed.  So they're able to each determine that, whoops, I stomped on somebody else's transmission.  So they back off and wait for a random amount of time and then retransmit the same packet.  Well, since they're waiting for a random amount of time, the chance that they're going to collide a second time is relatively low.  So basically all the NICs - the Network Interface Cards - on the LAN are listening all the time and waiting for a time to talk.  So it turns out that that approach is simple enough to work really, really well.  And that's what all of our LAN technology today uses.  All of this, you know, nobody in their homes has IBM's Token-Ring or any other LAN technology that fell by the wayside.  Everybody's using Ethernet because it ended up just working well enough.



Now, what's interesting is it does have a failure mode when the overall level of traffic on the LAN starts to increase, as you might imagine, since there isn't any, like, formal permission-giving for people to speak on this common, shared wire.  Then what happens is the percentage of collision, the probability of collisions occurring, starts to go up as the amount of traffic on the LAN segment goes up.  And so what happens is, due to collisions being, you know, fatal for the data, the LAN adapters will back off a random amount of time and try again.  Well, there might be another collision for their retry, if not among them, among other cards.



So if you look at a curve of collision rate versus bandwidth for Ethernet, it does, as the segment gets busier, you have a higher rate of collisions, and your overall throughput starts to drop.  And of course, once people are having collisions and retransmitting, that in turn causes more collisions and thus more retransmission.  So it sort of fails badly.  It doesn't survive well when it really gets busy.  But that's never really been a problem because most Ethernets are not that heavily loaded.  And in fact the solution, if you do have an overly loaded Ethernet, is to use a switch.



Now, what I've been talking about, for example, is in the original Ethernet topology was a single coaxial wire that all of the NICs clamped onto.  We went from that so-called 10Base2 technology Ethernet to 10BaseT, which is now what virtually everyone is using - T as in twisted pair.  So we changed from literally a physical coaxial cable that would loop around the building, we switched to the Ethernet wires that everyone is now familiar with, where you click them into a hub.



The first technology we had was a hub technology.  And the idea was that anything that the hub received, it would send out on all of its outputs.  So basically, the way 10BaseT works, instead of having a single, literally a single copper wire surrounded by a shield, which is what the coaxial cable is, with 10BaseT you've got a pair of wires for transmitting and a pair of wires for receiving, a so-called "twisted pair."  Thus the "T."  So an Ethernet connection is a four-wire connection; even though our plugs have eight wires, those RJ45 jacks are eight-connector plugs.  If you look closely and count them, you can see eight.  Only four of them are used, two of them for receiving and two of them for transmitting.



So when we are using a hub, everything that everyone sends into the hub over their transmission wires, the hub simply rebroadcasts brainlessly.  It doesn't do any thinking about it at all.  It just basically, all of the incoming wires are received, and everything is oared together and then sent back out.  Well, naturally you can still have collisions because, again, two cards could be transmitting at the same time.  They would collide in the hub.  The hub would send out this garbled nothing message, and they would both go, oops.  Because they're listening to everything that the hub is sending, they would realize their message had not gotten through, and they do the same back-off and resend.  So switching to the original 10BaseT technology did not help with this Ethernet saturation and collision problem.



However, what then happened was we changed to switches instead of hubs.  A switch is actually an intelligent device, which is the reason they're more expensive than hubs, traditionally, and we're beginning to see hubs going away as the price of switches are coming down just because of manufacturing efficiencies.  A switch actually learned the MAC addresses that are on each one of its segments.  So whereas the original older coax and a hub had, like, a single segment, that is, every NIC in the LAN could directly hear every other one, in a switch it actually segments the LAN into individual pieces represented by its ports.  And so you could have multiple computers on a switch's port because the switch actually has a table of RAM.  And if you look at the specifications for a switch, it'll say something like up to 4,096 MAC addresses it's able to memorize, meaning that in there is a 4K table of MAC addresses.  And it learns which adapter is on which one of its ports.



LEO:  How can it be 4K?  I mean, are you saying that each MAC address - it's more than a byte, isn't it?



STEVE:  Well, 4K would be 12 bits.



LEO:  12 bits.



STEVE:  Yeah.  But the idea would be that you could have 4,000 computers...



LEO:  I got it, I got it.



STEVE:  ...on the switch.



LEO:  Right.



STEVE:  And obviously a switch that's got eight ports normally only has eight computers.



LEO:  Yeah, 4,000 is quite a few.



STEVE:  So they got a lot.



LEO:  Yeah.



STEVE:  But you can chain switches together.  So you could have a switch that's got eight ports going to eight switches that each have eight ports going to eight switches that each have eight ports.  So that switch up at the top, it would have to know the MAC address of all the computers in the hierarchy of switches down below it.  But this the point:  it does.  So now when a computer is transmitting, its data goes to the switch.  The switch actually reads the MAC address that it's addressing its packet to and retransmits it only out of the one port that it knows has that MAC address.  So it does a huge job of dealing with the potential problem of Ethernet congestion, which really is, like, the one Achilles heel of the Ethernet from a fundamental technology standpoint.  We're going to be talking about a much worse problem with Ethernet, but it's not about sort of the fundamental data-carrying ability.  So essentially that's what switches do, is they chop this one LAN into multiple electrical pieces.  And they actually learn which MAC addresses are living down which of their ports, and only send the data to the proper location.



Now, one variation on that, or a further detail on that, is what's known as the "broadcast address."  Most LAN adapters will only respond to their own MAC address or to the broadcast address.  Now, if you've ever looked at the underside of your router or maybe printed on the back of some computers, you'll see the MAC address.  It's always expressed as six pairs, or six sets, of hex-paired digits.  For example, 00:02:05 would be the starting of the MAC address, would be the manufacturer's serial number assigned to that manufacturer.  And then the next three sets, which could be anything, would be the serial number of the adapter from that manufacturer.  So you see, like, six pairs of hex digits, separated by colons.  That's the MAC address.



So an Ethernet NIC will respond to its own address or to the broadcast address, which by universal agreement is all ones, or in that MAC address addressing it's FF:FF:FF and so on, six sets of FFs.  The idea is that that's the way systems are able to find each other on the Ethernet.  If through some technology or by reason of some technology it's necessary for one computer to locate another, it's able to do a broadcast on the Ethernet.  And all the machines that receive that will take a look at the data.  That also means that a switch, which is normally providing some isolation, must rebroadcast out every one of its ports anything that it receives that is addressed to that broadcast address.  So one time that the switch looks like a hub is, if it receives something, a packet, an Ethernet packet, addressed to the broadcast address, it just sends it everywhere.



Okay.  So let's talk now about how the Internet's IP technology that we've been talking about, the hierarchical addressing, how does that work within an Ethernet LAN, and what problems does that create?  The biggest problem with Ethernet - and it's certainly not the fault of its designers 33 years ago because, again, they did this as an experiment at the Palo Alto Research Center run by Xerox just to sort of see if they could.  And this is the technology, that is so often the case, you know, the one that worked, we just kept using, never really intending it for primetime.  There is no notion of authentication.  Essentially, there is absolutely no security with Ethernet.  The assumption always was that it would be used in a LAN setting where you knew and trusted everybody on the network.  You were one big happy company, or, you know, your little network at home, or whatever.  But the idea was that, you know, in a LAN, it's local.  It's inherently local.



The problem is that, as new applications for our technologies have occurred, this Ethernet LAN, which is fundamentally insecure, has been used without really giving this any thought in non-secure and sort of semi-public settings.  For example, when you visit a hotel, and you plug your traveling laptop into the hotel's Ethernet connector, which hotels increasing offer, you're on the hotel's LAN.  And any trouble, any security problems that Ethernet has are now hotel-wide, and you are subjected to them.  Similarly in a hotspot.  When you're using a wireless, you know, we've talked about WiFi extensively.  Well, WiFi is running on top of Ethernet, meaning that it's vulnerable to the underlying insecurity of Ethernet when you're in any kind of a WiFi setting.  And of course the same is true even in a corporate LAN.  Somebody who wanted to do something malicious in a corporate LAN, which is certainly going to be connected by Ethernet today, they have a tremendous amount of latitude for being able to cause mischief by bringing a computer into the network and just clicking it into the company's network because Ethernet has no security.



Now, what I mean is that there is no authentication, meaning that the adapters are addressed just based on this 48-bit MAC address.  Okay, well, we know that everyone today is using IP addressing.  On our own local networks we might have, you know, 192.168.something.something, or 10. or whatever.  Even out on the Internet itself, routers are interconnected very often using Ethernet links from one router to the next.  That's just the way, you know, Ethernet has turned out to work so well and be so inexpensive when you integrate the circuits and all the technology, that it's just sort of the universal glue for all of our computers.



Well, okay.  The way Ethernet works is that packets have to be Ethernet packets in order to travel across the Ethernet.  Which means that the IP data, the IP packets that are coming into the LAN, have to be encapsulated.  They're basically wrapped in an Ethernet packet that contains the MAC address of the originating adapter and the destination adapter.  Inside that is the IP data that shows the source IP and the destination IP.  But the Ethernet LAN doesn't use that at all.  It is all based on MAC addresses.  So what has to happen is that there's this relationship, an association between MAC addresses and IP addresses.  So that, for example, any computer on a LAN, a contemporary Ethernet LAN, will have its IP address that it's been assigned by a DHCP server or manually configured.  And inherently it'll have a MAC address.



So there's basically two addresses.  There's sort of the more global hierarchical Internet IP, and also this, what we talked about, this non-hierarchical, just sort of 48-bit fixed MAC address that is how data gets to it on LAN.  What this means is that the computers on the LAN, in order to send IP data to each other, which is really what they want to do, they need to have a table that says this IP is assigned to the computer with this MAC address, and this IP, another IP, is assigned to such-and-such a computer.  So there's basically an association table that maps the IPs to the MAC addresses.  What happens when a packet comes in from the gateway, say that it's coming in off the Internet, and it's addressed to a certain IP.  The gateway, the router or whatever it is that is the way the LAN connects to any other networks, it'll look at this destination IP and look to see if it knows which MAC address is associated with that IP.  If it does already know because it's sent some data to it in the past, it simply wraps that IP packet in an Ethernet packet and sticks it on the LAN, addressed to its destination.  That machine will hear it and accept the packet, take the Ethernet wrapping off, and there's the IP packet that it has been sent.



If, however, the gateway doesn't know the address, doesn't have the MAC address associated with that IP address, it needs to ask the entire network who has this IP.  Well, that's where this thing called Address Resolution Protocol, ARP, comes in.  ARP protocol is the way MAC addresses and IP addresses are associated and essentially glued together in a LAN.  The router sends what's called an "ARP request," and it sends it to the LAN's broadcast address, that FF:FF:FF, basically all ones, that has been reserved for this purpose.  So it basically says, hey, who out here on the LAN has this IP?  And because it's broadcast, every machine on the LAN will receive that query, will hear it.  The one machine that is assigned to that IP will respond to that.  And since the broadcast was sent to everybody, but it was sent from a specific MAC address, that is, from the router, the ARP reply is just sent right back to the router.  The card who does have that IP sends back, hey, I've got your IP.



So what happens is, that's the way, on a LAN, the gateway is able to learn the IP address - or addresses, because it's possible for one computer to have multiple IPs - of every machine on the LAN.  You know, it's a very slick and cool technology, but it's got one real problem.  And that is, there is absolutely no way to know if this ARP traffic is valid, or if perhaps it's been spoofed.  So imagine, just to reiterate how this works when it's working right, is that the gateway will send an ARP request, broadcast it to every machine, asking who has this IP.  Well, similarly, when any one of the machines on the network wants to send a packet outside of the LAN, or even to another machine on the LAN, individual machines will also generate these ARP requests, saying who has this IP?  The machine that does, responds.



The way the Ethernet works is, when receiving an ARP reply, the receiving machine simply fills out this table entry in what's called the "ARP table," not surprisingly, and puts the information in.  It turns out that a malicious person anywhere on the LAN could send any other computer an ARP reply.  And the computer would believe it was real and change the entry in its ARP table, basically updating the entry with this new information.



LEO:  So there's no attempt to validate the sender at all.



STEVE:  Well, there's no way to validate.  I mean, literally, there's just, like, no way.



LEO:  There's nothing you could ask.



STEVE:  Yeah, exactly.  This was ever considered, never thought about back in the original design of the 'Net.



LEO:  So did they make the assumption that no one who has direct access to your LAN would be malicious, or what?



STEVE:  There was no assumption.



LEO:  They didn't even think about it.  It wasn't...



STEVE:  I mean, this wasn't even on the radar.  Wasn't even considered.



LEO:  We see that a lot with security issues, where just nobody even thought about it because nobody had done it.  There were no exploits to that point.



STEVE:  Well, exactly.  Exactly.  So let me make this clear because this is really important.  If a malicious person sent a computer on the 'Net an ARP reply saying "I am the IP of the gateway," that would replace that entry, the entry for the LAN's gateway IP, with the MAC address of the intruder.   From that moment on, any traffic which that computer wanted to send out to the Internet would be addressed to the MAC address of the intruder.



LEO:  So you've effectively stolen the connection.



STEVE:  Yes.  You have stolen all the traffic that is bound for the gateway.  Similarly...



LEO:  Oh, go ahead.  I just thought of a...



STEVE:  Okay, yeah.



LEO:  ...problem, because if you're stealing it, it's not going to get to the gateway.



STEVE:  Well, exactly.  So part two is, this same intruder then turns around and sends one ARP reply to the gateway...



LEO:  Ah.



STEVE:  ...pretending to be the IP of the other computer that it's intercepting, that will replace the table entry in the gateway.  So anything from the gateway bound for that other computer's IP will instead be sent to the MAC address, that is to say, to the computer that wants to intercept this.  In order to keep the connection alive, the interceptor has to forward any traffic it receives onto the original MAC address.  So basically it's spliced itself in, in what we know is called a "man-in-the-middle" attack.



LEO:  Makes sense.  It's impersonating both ends, one to the other...



STEVE:  Yup.



LEO:  ...and taking all the traffic.



STEVE:  Well, and it is, I mean - get this.  It's as simple as sending one packet to each of the computers whose traffic you want to intercept.  I mean, literally...



LEO:  I'm guessing there's...



STEVE:  ...that's all it takes.



LEO:  I'm guessing there are lots of automated tools that will do this.



STEVE:  Yes.  For example, there's a tool called Cain & Abel.  And it's now at version...



LEO:  Our old friend.



STEVE:  Yeah, Cain & Abel.  It's now at version 2.81.  And if I read from one of their boasting features, they say their latest version is faster - oh, good, so you can intercept traffic even faster than before - and contains a lot of new features like APR.  That's their own acronym, and they say that stands for ARP Poison Routing.  And they go on to say, "which enables sniffing on switched LANs and man-in-the-middle attacks.  The sniffer in this version can also analyze encrypted protocols..."



LEO:  Oh, boy.



STEVE:  ...such as SSH1 and HTTPS and contains filters to capture credentials from a wide range of authentication mechanisms.



LEO:  Wow.



STEVE:  Oh, I know.



LEO:  This is freely available on the 'Net.



STEVE:  Oh, yeah.  Cain & Abel.



LEO:  Everybody has it.  I have a copy.  Everybody has a copy of this.



STEVE:  Okay.  And, I mean, actually, sad to say, it's a beautifully written piece of software.



LEO:  And it's very useful for a lot of things.



STEVE:  Yes.  Well, also on version 2.8 they talk about, you know, we've talked a lot about Windows Remote Desktop Protocol, you know, Terminal Services, RDP.  They say in their features list for 2.8, "RDPv4 Session Sniffer for APR."  And it says, "Cain can now perform man-in-the-middle attacks against the heavily encrypted Windows Remote Desktop Protocol, RDP, the one used to connect the terminal server service of a remote Windows computer.  The entire session to and from the client and server is decrypted and saved to a text file.  Client-side keystrokes are also decoded to provide some kind of password interception.  The attack can be completely invisible because of the use of ARP poison routing and other protocol weaknesses."



LEO:  This is a sideline, and I'm not going to go too far down this rabbit hole.  But I just want to point out, people will say, well, how could this program be legal?  You know, how is there any legitimate reason why you would want to own it, you know, why don't they shut it down?  Well, a lot of security experts use this program.  Right?



STEVE:  Well, for...



LEO:  For testing.



STEVE:  Well, in fact, it does many things other than this.



LEO:  Yeah, it does WEP cracking and, I mean, it does all the bad stuff.  But it does - it's a very useful program.  And just because somebody has it doesn't mean that they're a bad guy.



STEVE:  Right.  There's another free tool called Ettercap.  And from quoting their home page, "Ettercap is a suite for man-in-the-middle attacks on LAN.  It features sniffing of live connections, content filtering on the fly, and many other interesting tricks.  It supports active and passive dissection of many protocols, even ciphered ones, and includes many features for network and host analysis."  And they have screen shots showing it doing all of this.



LEO:  Now, you can't fault these guys, I mean, this is a well-known hole, this ARP poisoning, and it's easy to do.  And so of course somebody's going to write a tool for this.



STEVE:  Well, and so this is the lesson, is that, I mean, you know, we see over and over and over, that which is possible will happen.



LEO:  Yeah.



STEVE:  Now, so once again, I just want to - because I want to make sure people get this.  Anybody on a LAN, any malicious software, can send two packets, one to each other computer, lying about its MAC address to each of them, and receive - basically receive all the traffic they intended to send to each other.  It receives.  It then forwards it on.  It has spliced itself into the connection, and nobody will know.  This can happen at a wireless hotspot.  I mean, one bad person in a hotel could arrange to, without much work, literally intercept all the traffic going to and from the hotel's gateway so that all of the email conversations, all of the traffic of any sort that is being transacted by every other hotel guest, they're able to monitor and intercept.  And in some cases, where you have weekly authenticator protocols, like Windows Remote Desktop that really doesn't provide any kind of authentication, man-in-the-middle and complete decryption attacks are easily performed.  I mean, it is really bad.



LEO:  And trivial to do.  And if I wanted to just check into a hotel and put my system on the Ethernet and just start running these programs, it'd be, you know, it's easy.  It'd take you minutes.  You don't even have...



STEVE:  Well, now, about half - right.  About half of the hotels out there are still using hubs.  As we know, all the traffic a hub receives it sends back out to everyone else.  So if you're on a hub, all you have to do, I mean, you don't              have to do anything active.  There's no active attack you need.  You just plug your computer in and start sniffing.



Now, remember I mentioned that a NIC will respond to something addressed to its own MAC address or to the broadcast address.  That's almost always true.  However, NICs can also be put into something called "promiscuous mode."  Now, all that means is you just switch the adapter into promiscuous mode, and that says just receive everything.  And so that's what these sniffers do.  Any sniffing tool simply puts the NIC into promiscuous mode, and everything on the wire comes in and gets logged and decoded and checked out.



There was someone we quoted a few months ago when we were talking about this briefly that said that, you know, she was a security expert.  Out of curiosity - oh, and she also traveled a lot.  Out of curiosity she plugged her laptop into hotels wherever she goes, turns on some of this, quote, "security software," unquote.  And in the typical evening, she's able to receive several hundred email log-ons and passwords.



LEO:  Wow.



STEVE:  She knows what they're logging onto, who they are, and what their password is.



LEO:  She's probably got mine.



STEVE:  It's just - it's wide open.



LEO:  That's why I use VPN now because of you and learning this.



STEVE:  Yes.  Well, a VPN is the only way to solve this problem because a good, properly implemented VPN will completely defeat, not only passive sniffing, but also any man-in-the-middle attack because the problem is - and we're going to be talking about this, I think next week, where we're going to finally start talking about what is all of this encryption, how does encryption work and what is authentication and signatures and signature authority or certificate authorities and all that, you know, certificates and signing and all that.  We're going to lay all that foundation.



But anytime you don't have authentication, anytime that somebody can come along and pretend to be anyone else participating in the conversation, you've got trouble.  And Windows Remote Desktop Protocol doesn't have strong authentication.  They've got some, obviously not very well working because there's free software that is able to just crack the conversation and log all your keystrokes.  So, you know, Windows doesn't provide substantially and significantly strong authentication, so that the entire dialogue can be monitored, unfortunately.  But a VPN that is designed right does.



LEO:  There's no man-in-the-middle attack for VPNs or SSH or...



STEVE:  Well, what's interesting is that users can be exploited in this.  And we'll be talking about security certificates and verifying security certificates when we're talking about state-of-the-art encryption because what can happen is that, once a connection is being filtered with a man in the middle, if you go, for example, to PayPal, and you try to establish a secure connection, there is no way for a man in the middle to truly spoof the PayPal certificate.  That is, there is no way for them to not raise an alert on your browser.  But many users will incorrectly respond to a fraudulent certificate, not recognizing that it is such, and give it permission to connect.



LEO:  And then...



STEVE:  When that happens - yes.



LEO:  Then they got you.



STEVE:  When that happens, you're in deep trouble.



LEO:  Right.  As long as they can continue to simulate the PayPal experience.  I guess once you've entered the password and log-in, they don't need to anymore.  They could say, well, connection broken.



STEVE:  Yeah, thanks very much, see you later.  So it is really necessary not to give your browser permission to connect when you shouldn't do so.



LEO:  Right.  Now I have a question for you, an ethical issue.  We've talked about Cain & Abel and Ettercap.  Should I put a link to Cain & Abel and Ettercap in the show notes?  Or not?



STEVE:  I have them all over my page, Leo.  I think there is  no reason not to.  Anybody, I mean, I have...



LEO:  Can you use Google?  You can find it.



STEVE:  Of course.  You just put in "ARP spoofing."



LEO:  If you can't use Google, then forget it, you'll never be a hacker.



STEVE:  You put in "ARP spoofing" or "ARP poisoning" or "ARP cache," and all of this stuff comes rolling out.  I have a really great page, which is our show notes page for this episode.  I put it together actually in early December, and I've been waiting till now to really talk about it.  It's GRC.com/nat/arp.htm.  So /nat/arp.htm.  We've got a link to it on our page.  You should link to it, too, Leo.



LEO:  I will.  I'll put the link in show notes.



STEVE:  Basically, I explain all this.  I have some nice diagrams that show how this works.  And because I - the reason I put these links to these tools on the page is it's important for people to recognize, you know, we're not making this up.  You know, I was reading just from the boasting that these tools offer.  And so I think it's important for people to recognize how very prevalent this issue is, and why connecting in a hotel or in a hotspot there is - there's just no security, due to the fact that Ethernet was designed back in an era where it wasn't even on the radar.  No one even thought about it.



LEO:  Right, right.  And it works great, but there are some issues, and now you know what they are, and you know how to handle it.



STEVE:  Right.



LEO:  Because we've talked about VPNs in great detail.



STEVE:  Yes.  And in fact I am at work on the VPN notes.  I just don't know when I'm going to have them done.  I'm doing a really thorough job, and I'm working with a neat German guy who's making some changes to some Ethernet bridging, some free Ethernet bridging technology that's going to make the configuration of OpenVPN even easier.  So we're doing a little software development here in the process.



LEO:  Very cool.  Well, all of this information is, as Steve said, in his show notes, and I'll have a link on our show notes at TWiT.tv to that and to everything you need to know.



Congratulations, by the way, Steve.  We just got stats back from America Online, and we crossed kind of an important threshold, the 100,000 listener...



STEVE:  Yup, I saw that.



LEO:  Yeah, that's really exciting.



STEVE:  Very cool.



LEO:  Security Now! 25 in three weeks had 100,000 listeners.  Generally the way it works is we get about 60, 65,000 in the first week, and it goes half, and half again.  So it takes us about three weeks to get 100,000.  But what's interesting, particularly about Security Now!, is even the first episodes are still being downloaded in the thousands every week.



STEVE:  Yeah.



LEO:  So the number climbs.  And I imagine each of these episodes will be, in the long run, listened to by several hundred thousand people because they, you know, they're valuable.  They form together, as a whole, a complete course in Internet security.



STEVE:  Right.



LEO:  GRC.com/securitynow.htm.  That's the place to go where Steve has everything you'd want to know.  Links to these individual show notes, but also transcripts thanks to Elaine, 16K versions for the bandwidth-impaired, and lots more, of course, security help.  He's been doing this for years, helping people protect their systems with ShieldsUP! and Shoot The Messenger and DCOMbobulator and UnPlug n' Pray and so many other great utilities.  And of course the king of all utilities, the ultimate disk maintenance and recovery tool, I tell everybody to get it, SpinRite.  All at GRC.com.  Are we going to have a birthday cake or something for 100,000?  I think we have to do something to celebrate.  It's great.



STEVE:  It's just - it's really good.



LEO:  Yeah, it's just been fantastic.  And I'm not surprised.  This is something everybody wants to know and needs to know.  And I know sometimes it's a lot of work, but that's where the transcripts come in handy.



STEVE:  Well, and, you know, not to break your flow here.  But, you know, there will be people who will write and say, oh, my God, you know, so, yes, it's possible for ARP cache poisoning to happen, and man-in-the-middle attacks, but how likely is it?  And again, you know, who knows?  We just want people to understand what the reality of their connections are, what the reality of the security is, and let them decide what kind of measures they want to take.



LEO:  Well, I think it's so easy to do.  And, you know, there are a lot of tourists who would do this just for fun, like the woman you quoted.  But it's so easy to do, I think it's only prudent, especially when you're using a hotel or a  WiFi, a public WiFi connection, it's just only prudent.



STEVE:  I'm not plugging my laptop into a hotel without some protection.  Nope.



LEO:  No, no.  And I've started using HotSpotVPN all the time.  And I just, you know, it just makes me feel better.  And I think it's just the prudent thing to do.  Just the right thing to do.



I want to thank the great folks at AOL Radio who always are so generous.  And we really appreciate it now that we've crashed others' servers.  We really know what we're getting from AOL Radio.  They broadcast us on their podcast channel and, of course, provide us with the bandwidth so we can bring this to you.  AOLmusic.com/podcasting for more information about that or to subscribe to, I think, really the best Internet radio out there.



Steve, we'll come back next week, we'll talk about authentication.



STEVE:  Very cool.



LEO:  That'll be fun.



STEVE:  Yeah.



LEO:  Have a wonderful week.



STEVE:  Talk to you then.



LEO:  Okay.  For Steve Gibson, I'm Leo Laporte.  Thanks for joining us on Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#30

DATE:		March 9, 2006

TITLE:		Cryptographic Issues

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-030.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo open their multi-week discussion of the operation and technology of cryptography.  This first week they start by examining the social consequences and ethical implications of common citizens being empowered with freely available cryptographic technology that no force on Earth - no government agency, no corporation, no private individual - can crack within their lifetimes.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 30, for March 9, 2006:  Cryptographic Issues.  Steve Gibson, a good afternoon to you.



STEVE GIBSON:  Hey, Leo.



LEO:  Leo Laporte here.  And today we begin a series on something I think everybody wants to know more about:  cryptography.



STEVE:  Yeah.



LEO:  This is going to be exciting.  Today we're going to cover cryptographic issues, societal issues and so forth.  But over the next three or four episodes, a lot more, including how it works fundamentally.  Any issues we want to cover from previous episodes before we dig in?



STEVE:  No, I think we're pretty clear to start.  I want to - I'm excited about this.  I know that a lot of people are interested in what cryptography is, sort of on the technical side - how it works, you know, what are public keys and private keys and certificate authorities and signing chains and all of that.  And so over the next few weeks I want to really - I want to take our time, explain this stuff very clearly so that we've created a real foundation of understanding how these basic technologies interrelate with each other.  And then of course they're all about how we're using the Internet today, you know, OpenVPN that we've talked about for remote secure access uses certificates.  We know that secure web browsing uses certificates.  You know, what does that mean?  What is a signing authority?  And, I mean, really how does this stuff work?  And I think what's surprising is that it can be explained in a way where people are going to go, wow, I get that.  I mean, they're going to come away with an understanding of it.



But before we really got into the technology side, I wanted to talk this week about sort of the - kind of the ethics of crypto because something has happened that is significant, just in the last decade or so.  And that is that end users, just regular people have, thanks to the academic community really getting involved in crypto, have acquired access to free, simple, usable technology which no government, I mean, not their own government, no one else's government, no corporations, no one can crack.



LEO:  Now, this is no accident because, in fact, Phil Zimmermann of PGP, which was really the first, you know, widely accessible public key cryptography, did have an agenda.  He wanted to create a strong cryptography that the masses could use, not just - I mean, political dissidents, in fact, it's widely used by them, people who are in fear of their life, but also here in the United States who didn't want a government eavesdropping on them.



STEVE:  Well, of course, yeah.  PGP stands for Pretty Good Privacy, which I always appreciated that acronym because, I mean, it is way more than pretty good.



LEO:  It's a little self-deprecating, unnecessarily so.  It's strong crypto.



STEVE:  If you use it, it's all you ever need privacy.



LEO:  Yeah, yeah.



STEVE:  And it's interesting, too, because you know of course there's been all this controversy in the United States recently about this warrantless NSA surveillance of U.S. citizens where, you know, post-9/11 the George W. Bush administration took it upon themselves to change the way they got permission for basically eavesdropping on U.S. citizens, doing so-called "warrantless surveillance," meaning that they wanted the right, and have taken the right, to eavesdrop on any conversations which, basically, which they wanted to, in the interest of United States national security.



LEO:  Well, and that's what's changed since Phil came up with PGP.  This is, you know, all his work was pre-9/11.  Well, it's changed a lot since 9/11.  However you feel about this, there certainly is a legitimate cause for concern that terrorists are now capable of hiding their tracks by using widely available crypto.  I mean, there was a news story recently that said Skype, which is secure, could be used for making phone calls without any possibility of wiretapping.



STEVE:  Yeah.  Well, it's interesting, too, because there are the people who say, hey, I don't care if the government wants to listen to what I do, to my phone calls, to my Internet access and so forth.  You know, and their argument is, I'm not doing anything wrong so I have nothing to hide.



LEO:  Right.



STEVE:  And they argue that, hey, if you're not doing anything wrong, what are you worried about?  And at the same time we know that there are commercial interests that would apparently like to know what we're doing with our computers.  I mean, I guess corporate espionage is a real thing.  And so you could imagine executives in a corporation spread out over the Internet wanting to hold a teleconference where they absolutely are sure that nobody, from a corporate espionage standpoint, nobody can listen in on their conversations.



LEO:  And this is where it gets dicey.  I mean, there is - you know, we're balancing public interest and public safety with a right to privacy and a right to free expression.  You know, it's not for you or me to decide about this, but certainly we should talk about the issues that are raised.



STEVE:  Well, and you were talking about how, okay, terrorists could use cryptographic VoIP, like Skype apparently provides, in order to have conversations in plain sight, so to speak, that no one is able to decrypt.  At the same time there's - and we would all agree that that's, like, a bad thing.  We don't want people plotting against the health and welfare of citizens of other countries, you know, in their midst and being able to do so.  But you also - and I'm not suggesting that that's a good thing by any means.  But if that weren't available, wouldn't these bad people, these bad actors, find some other means for communicating?



LEO:  Perhaps, perhaps.  You know, I've asked Phil Zimmermann this pointblank, specifically.  And he says you've got to take the good with the bad.  And in his opinion - well, first of all, this cryptography's out there.  It's probably too late to even debate this.



STEVE:  The horses have left the barn.



LEO:  Yeah, and had a long time ago.  Even when the United States was trying to classify it as munitions and prevent it from being exported, it was there.  It was out.  So maybe it's a moot conversation.



STEVE:  So the argument there being that, you know, sort of like guns, I guess, you know, it's like...



LEO:  Bad guys have them anyway, so...



STEVE:  Exactly.  Even if it's illegal, bad guys will still use it, breaking the law in order to use it to hide their actions.



LEO:  Right, right, precisely.  It's there.  It's out there.  You can argue back and forth.  But the fact is, everybody has access to it.  I use it all the time.  I sign every email I send with a PGP cryptographic string.  It's not encrypted, but the email is signed so that you know it came from me and that it hasn't been modified.



STEVE:  And that's for authentication of the stuff you send.



LEO:  Right, that's a very valuable thing.



STEVE:  Well, and we're talking about OpenVPN.  Well, an OpenVPN connection, the type that - and I'm still working on the guides, that's coming along, so people are going to get that.  But an OpenVPN connection cannot be cracked by anybody.  I mean, no government will be able to eavesdrop on the traffic over the OpenVPN connection.  Now, we're doing it because we don't want script kiddies and hackers and malicious people who are snooping on the Internet to have access to our traffic.  And so the question will be, I guess, then, well, should the government have a backdoor to these kinds of technologies?



LEO:  No.  Let me think about that or a second.  No.  And the reason is because, while the government's benign now, we can't always be assured of that.  And we know that PGP is used by dissidents in fear of their lives in many totalitarian governments.  In fact, that's why Phil created it, he says, is for countries where you couldn't speak freely and you needed this.



STEVE:  So, well, of course there was that whole Clipper chip during the Clinton administration, where Clipper was going to be a federally mandated and approved technology that would specifically have a backdoor that would allow, you know, "citizens" to communicate with relative security, but anything the government needed to decrypt that was Clipper encrypted, they'd be able to access.



LEO:  Yeah.  And...



STEVE:  And of course it...



LEO:  ...of course that went down in flames.



STEVE:  It died big-time.  Nobody wanted that kind of technology.



LEO:  Now, that was pre-9/11, as I remember.



STEVE:  Oh, yeah.



LEO:  So I wonder what the climate is today.  Let me ask you.  Do we know for sure that there aren't governmental backdoors?  For instance, Skype isn't saying whether there's a governmental backdoor.  They're not asserting that there is not.



STEVE:  Actually, they sort of imply - and this is what makes me nervous about it.  They sort of imply that they will cooperate with anyone that they need to.  Also you'll note that you may have an encrypted Skype connection to Skype.  But when you use SkypeOut, for example, to transit onto the public telephone system in order to use the Skype service to bridge into the normal audio telephony world, you're decrypted, which means that Skype has to be able to decrypt your encrypted connection themselves.  I mean, I have to tell you, Leo, I've actually been, you know, for a while I was thinking about writing my own VoIP system from scratch.  Then it turns out that the Skype that we're using right now and upgrading equipment and things rendered that unnecessary.  But I've been considering maybe doing a little VoIP encryption tool myself, just because it would be nice to be able to have a conversation.  I mean, not that I have anything to hide, but it's just - it's creepy thinking that you might be listened in on, and you'd like to know that that's not happening.



LEO:  Well, now this puts you on the hot seat.  What about  terrorists using it, Steve?



STEVE:  Well, I mean, that's the double-edged sword.  You could argue that people have a valid reason for having a private conversation.  I mean, and the U.S. Constitution is all about this.  I mean, there is protections in the way the United States was formed because the people who wrote the Constitution came from an oppressive government that didn't have these kinds of protections.  And, you know, we're seeing a lot of erosion of those kinds of civil liberties.



LEO:  Mm-hmm.



STEVE:  And I don't mean to get this all political, I mean, because it's about technology.  But it's always the case that technology and the evolution of technology creates these sorts of dilemmas.



LEO:  Absolutely.  And this is right on the hot border between politics and technology right now.  So these things do need to be addressed.  Sounds like you come down, and I think I agree with you, strongly on the side of freely available crypto.  It does make it really hard for police agencies.  And I don't know what the answer is to that, I really don't.



STEVE:  Well, you know, my feeling has always been, the one lesson we learn and we see over and over is you cannot legislate against technology.  You know, technology is a force of nature.  I mean, literally it is.  But it's something you can't say, oh, this exists, but we don't want you to use it or to do it.  I mean, well, sorry, but it exists, and so we're going to.  And you've raised a really interesting point that I think is a great topic for this first podcast on crypto, and that is, how do we know the government can't listen in on things?  We ought to talk about it now, and then we'll talk about the math and the way the stuff works in following weeks.  But what is so cool about contemporary cryptography is that there is no hocus-pocus.  There is nothing unknown about the way it works.  We're not requiring any sort of, like -remember the classic cartoon where there's a blackboard, and a professor is jotting down all these super fancy formulas and equations and things and gets the whole board filled, and it looks like he runs into a dead end or something and gets stuck.  And so he writes down on the blackboard, "...and then a miracle happens."



LEO:  E=MC2.  Amazing.  Exactly.



STEVE:  And so what's so cool about modern cryptography is that we know exactly how it works, and we know why it cannot be cracked.  Now, there are some assumptions that crypto is based on.  For example, it's based on - some crypto, very popular crypto, is on the incredible difficulty of factoring because no one has ever been able to figure out a way to factor really big numbers fast.



LEO:  So if a big number is the product of two primes, it's very difficult to find those two primes; and those, in fact, end up being the keys.  Is that correct? 



STEVE:  Right.  You use two really large prime numbers, and you multiply them.  So now you've got basically a number twice as long as either of those.  And it turns out that it is just mathematically incredibly difficult.  I mean, and the beauty is, now, all these academicians, super powerful mathematicians who we have to presume are as good as anyone the NSA or any other government security agencies have, cannot come up with a way of reversing that process.  So in general, crypto is about some so-called "one-way functions," things that are easy to do in one direction that you just - you can't undo that in any reasonable amount of time.  Now, and so the beauty is that the strength of the crypto is solely the infeasibility of mathematically doing something.  And everybody in the world has pounded on it, trying to come up with a way to, like, you know, test it and see if there's a way of beating it.  So we can presume that unless there's like, for example, the NSA actually did have some means for reversing this process that no one believes they have - and they're probably really pissed off right now that they don't have some way of doing that - then crypto is secure.



LEO:  I can't help but think that there's somebody listening to this deep within the recesses of Fort Meade...



STEVE:  Giggling?



LEO:  Giggling, smiling a big grin, saying, well, what you don't know won't hurt you.



STEVE:  Or kind of looking at his buddy in the other cubicle, giving him a thumbs-up.



LEO:  Do you think?  I mean, there really is no evidence that this has ever been solved.  And it would be - mathematically it would be a big deal.



STEVE:  Well, yes.  It would basically - the prime factorization problem is the foundation of one class of crypto.  It's the way a lot of our public key technology works that we'll be explaining in detail in a couple weeks.  So that would just collapse if this prime factorization problem were solved.



LEO:  It's not that it can't be done, it's just that it takes such a long time that it's not feasible.



STEVE:  Well, it's that no shortcuts have been found.



LEO:  Right, right.  Again, that we know of.



STEVE:  Well, exactly.  No shortcuts have been found that anyone knows of.  And only very clever approaches that still involve lots of brute force processing is the only way that people have been able to deal with this.  So, for example, people have, you know, cryptographers have said, okay, the problem is this hard.  So the NSA would have to have, or a government agency like with government-level funding...



LEO:  The Soviets.



STEVE:  Exactly, well, they would have to have a computer that was able to do this much work in this much time, that would be this big, that would cost this much in, you know, in 1990, and it would cost this much in 2000, and this much in 2010.  So, I mean, the crypto people have got curves and charts that show the rate of processing growth against all the best methods known of cracking this stuff and saying that that means that a key of this length is this secure, that it would take a machine of this much power, this many centuries, in order to crack the key, knowing everything we know now.  And then they extrapolate into the future the rate of processing growth and so forth in order to say, okay, nobody is going to figure out your credit card number.



LEO:  I suppose.  Although, as in "Fallen Dragon," at some point there will be, you know, enough processing power somewhere to crack all this, and we'll have to come up with something new.



STEVE:  Well, it certainly is a matter of processing power.  That is to say, the goal that you're trying to achieve, for example, in this one instance of prime number factorization, the goal is well known.  It's like, here you have this really large number, and you know for sure that it's the product of two primes.  So it's not like you don't know how to crack it, it's just that you can't.  And again, that's the beauty of modern cryptography is it relies not at all on obscurity.



LEO:  Right.



STEVE:  All of this has been published in mathematical journals.  One of the constant background projects is prime number factorization.  The world's best math genius guys, you know, cut their teeth early in their careers on prime number factorization to see if they can come up with some way that no one else has thought of.  And, I mean, it's incredible what amount of science and math has been applied to this, and it isn't budging.  It is holding solid.  No one has made any substantial progress in decades.  So, I mean, it really looks like this is a problem that, no matter how clever you are, can only be attacked with brute force.  And so we know what brute force requires in terms of processing, given all the cracking technologies that have been put together.  And so we can say, okay, if a government-level processing power worked on this thing for a thousand centuries, they would be able to crack it.  But by then it would have zero value.



LEO:  Let's talk a little bit about how crypto is used because, I mean, when you say "crypto," of course you assume that what we're talking about is taking an email message, scrambling it so it can't be read by anybody but the intended recipient.  But it's really used for many, many more things than that.



STEVE:  Well, for example, we were just talking about HotSpotVPN or OpenVPN using crypto just because we want to make sure that no one in the local environment could be sniffing our network connection and know what we're doing.  And as we all know, whenever we're entering our credit card information, crypto is used only between the client browser and the ecommerce server, just as it crosses the Internet.  As soon as it gets to the server it's decrypted back into plain text, as it's called, so that the ecommerce server is able to process our credit information.



LEO:  Does digital rights management also rely on crypto?



STEVE:  Oh, yeah, yeah.  Basically they're trying to do things which a consumer will not have the information to undo.  I mean, I'm skeptical about any form of DRM standing the test of time.  The problem is that you need to, for DRM, you need to put into the end user's home a device which itself is able to decrypt the content.



LEO:  Otherwise you wouldn't be able to play it.



STEVE:  Yeah.



LEO:  Your DVD player knows how to decrypt a DVD.  It has it built in.



STEVE:  It has to in order to give you back the original picture.  And so their solution is, now there's all this, you know, the HDCP technology trying to push the crypto all the way out to the display device so that you can't capture the signal going from the DVD player to your screen.  But still the projector or the TV set, it has to know how to decrypt this.  And there are lots of smart people in the world, and lots of reverse engineers.  And there are people who are going to be annoyed by the entertainment establishment trying to basically protect the entire channel right up to your retinas.



LEO:  Crypto is also used, as I mentioned, in digital signing.  It's not used - in digital signing it's not used to hide text, but it's used to validate text.  Is it the same kind of crypto?



STEVE:  To authenticate, yes.



LEO:  To authenticate, yeah.



STEVE:  Authentication is a really interesting branch and is something we will be talking about here in the next couple weeks because, exactly as you say, the idea is that you want to sign a document.  You can leave it in plain text.  But you want to come up with a way of verifying two things:  You want to verify with signing that no alteration has occurred to the document from the time it was signed by its author; and you want to also verify that it actually was created and signed by the person who you believe it was.  And so it provides that level of sort of an envelope around the document which anyone can read, but nobody can modify, and no one can forge the signature of the document.



LEO:  So it's pretty widely used in a lot of different areas.  Any other areas that we may not know about that crypto is in use?  I'm trying to think.  Copy protection.  Encryption, of course.  Digital signing and authentication.  It's used in Voice Over Internet or any kind of transaction over the Internet like secure transactions on your credit cards or VPNs.



STEVE:  Well, and of course, you know, people who are doing for-pay TV delivery, either cable boxes or satellite, they're also using crypto...



LEO:  Sure.



STEVE:  ...in order to protect their channel so that only users who are paying for their services are able to receive them.



LEO:  Video on your TiVo is encrypted so you can't steal it.



STEVE:  And in fact that's another - the satellite or the cable box is another example of content providers trying and failing, again, to protect their content because there's all kinds of satellite and cable box, you know, decloaking and hacking and content-stealing technology around because it's virtually impossible, I would say, to protect something all the way to the end of the channel.  And in fact, one thing we haven't talked about, Leo, and this is a perfect answer to your question is, as we know, Microsoft Windows and Intel are moving crypto into the platform so that there will be technology in every single next-generation PC which will be involved in giving the operating system and the hosted software a tighter grip over what the end user is going to be able to do.



LEO:  And that's controversial on both sides.  The government doesn't like it because they want a backdoor.  And consumers don't like it because it builds DRM into the system.



STEVE:  Yeah.  I mean, it really is a war of rights.



LEO:  Yeah.  Fascinating stuff.  There have been many great books written on cryptography.  It's a field that has been important in so many ways, from Napoleon's army to the Enigma during World War II. and of course now to PGP and the politics of terrorism.  So this is going to be a great subject.  How many episodes are we going to devote to this?



STEVE:  I think probably about four, actually.  We're going to start with how the not-so-secret decoder rings work next time, which is a perfect intro to symmetric cryptography.  We're going to talk about symmetric ciphers next week, then asymmetric ciphers the week after.  Then probably hashes and how signing works, and then sort of put all these pieces together because what's so cool is these are some very clear and easily understood building blocks that you can then literally assemble in different ways to perform really cool and very different sorts of jobs in crypto.  So it's going to be neat.



LEO:  Good.  Steve Gibson, always a pleasure.  I know there will be great interest in this.  And more and more I'm hearing from people who are saving the shows and sharing them with other people, people who are in the field  who use it for education; people who are not in the field but want to be in the field and are learning more; and a lot of people who understand security but want their friends, family, and co-workers to understand it a little bit better, too.  So you're doing a great job, and we thank you for your hard work.



STEVE:  Glad to do it, and we'll talk to you next week.



LEO:  All right.  Everything is online at GRC.com/securitynow.htm.  That's where Steve keeps the transcripts for this, thanks to Elaine, who types this up with her little fingers as quickly as she can right after we finish the podcast.



STEVE:  By the way, I got a little note from her this morning because the weather is looking pretty bad where she is in California.  She may be - she wasn't sure, if she lost her satellite uplink, whether she'd be able to get the transcripts on time.  But she said she stayed up too late last night almost finishing "Fallen Dragon."



LEO:  Oh, she's reading it.



STEVE:  Yeah, I sent her a copy.



LEO:  I can't stop.  You're a pusher.  I can't stop.  It's getting very exciting right now.



STEVE:  Very cool.



LEO:  It really is, yeah.  If I didn't have so many darn podcasts to do, I'd be finished.  By the way, while you're there, there's also a 16KB version of the show, 16kbps, so that, if it's too big a download for you to get the full-quality version, get the low-quality version, that's fine.  And show notes with lots more information and links in a place where you can give Steve some feedback, great forums. It's all at GRC.com.  That's where you'll find SpinRite, as well.  That's the program that makes this all possible, Steve's disk maintenance and recovery utility, guarantee you the best one in the business.



STEVE:  I think it is.



LEO:  If you can't recover it with SpinRite, you can't recover it with software, that's for sure.  GRC.com.  Hey, thank you so much, Steve, we really appreciate it.  Don't forget, folks, if you like the show - somebody asked me this, and I want to kind of underscore it.  They said, well, I've donated to TWiT.  Does that count donating to Security Now!?  Absolutely.  But if you haven't donated, and you listen to any of the podcasts on TWiT.tv, your donation would very much be appreciated.  It certainly helps us keep doing these kinds of things.  It pays for our bandwidth, our server costs, our site redesign, all the expenses, equipment expenses and so forth.  You can find the Donate buttons at TWiT.tv.  Steve Gibson, we'll see you next week for more on crypto - Crypto 102, I guess we'll call it.



STEVE:  Yeah.  And we want to remember to thank AOL for...



LEO:  I almost didn't, didn't I.  Thank you.  I don't want to get them mad at us because, gosh, they push a lot of bandwidth for us at AOL Podcast Channel.  We broadcast this show, by the way, at AOL.com/podcasting, and that provides us the bandwidth for the show.  Steve, thank you for reminding me.



STEVE:  No problem.



LEO:  Have a great week.



STEVE:  Talk to you next week.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#31

DATE:		March 16, 2006

TITLE:		Symmetric Stream Ciphers

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-031.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve continue their multi-episode tour of cryptographic technology.  This week they analyze the cryptographic operation of secret decoder rings, which they use to develop a solid foundation of cryptographic terminology.  Then they examine the first of two forms of symmetric, private key cryptography known as "symmetric stream ciphers."  Two weeks from now, after next week's Q&A episode, they'll discuss the operation of symmetric block ciphers.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 31 for Thursday, March 16, 2006.  Steve Gibson, it's a great day to talk security.  How are you today?



STEVE GIBSON:  Yeah, I'm just great, Leo.  Great to be back.



LEO:  Yeah.  We embarked on Part 1 of our Crypto series, very popular, last week, although there wasn't really a lot of hard technical facts in it.  It was really mostly about the issues surrounding crypto.



STEVE:  Right, although we really got a lot of good feedback from it.  I think people liked the idea of sort of talking about, okay, the sociological and moral and ethical aspects of this, rather than just plowing directly into, you know, prime number factorization and all of the technology.  And in fact, one thing that we - remember we were, like, brainstorming toward the end there, what different types of applications crypto technology had.  One thing that we failed to mention at that moment - and I just sort of, I thought of it, like, an hour later, and I was like, oooh -

was personal storage encryption.



LEO:  Oh, of course, yeah.



STEVE:  Yeah.  I mean, like, you know, TruCrypt we've talked about before.



LEO:  That's kind of like the original use of it; right?



STEVE:  Exactly.  I mean, and...



LEO:  You're talking about encrypting your files, your data.



STEVE:  Yeah.  Or, exactly, like a partition on a laptop, or you want to encrypt a USB thumb drive so that, you know, if you lost control of it - the idea is not for, like, transporting the information somewhere else, but if you lost control of it, what would you do in order to prevent people from having any access to it.



LEO:  Now, will we talk about applications like that in this series, or is that for another time?



STEVE:  Oh, no.  Well...



LEO:  Maybe the last episode?



STEVE:  My concept is that we're going to talk about sort of the technology and the modules and how they fit together, sort of the fundamentals.  And then, I mean, there's so much stuff that depends upon this.  One of the reasons I want to do this before we come back to and wrap up the OpenVPN stuff is that a lot of the technology that I want to be able to talk about depends upon crypto.  And, for example, when we talk about TruCrypt, which is a fantastic open source technology, I want to build up a vocabulary so that listeners who've been following along know when I talk about how this stuff works really what it means.  I mean, I felt a little uncomfortable, for example, when we were talking about Hamachi earlier on.  I wanted to explain exactly why it was so clear that this was secure.  But I didn't have the underpinning technology that I knew everyone would be able to get what I was talking about.



LEO:  So it's good to come back, yeah.



STEVE:  Oh, yeah.



LEO:  So we'll circle back, and then we'll talk about applications for encryption, and Microsoft's built-in encryption, versus things like TruCrypt and all of that.



STEVE:  Right.



LEO:  But that'll be later on in the series.



STEVE:  Right.



LEO:  Anything else you want to correct or...



STEVE:  Well, a couple things.  I have a couple new pieces of technology on the GRC site.  One of the things that's been happening is, you know that we have a feedback form at the bottom of the SecurityNow.htm page on GRC.  Many people do remember to put their email address in the body of their note.  And I've always had technology that parses the notes to see if there's an embedded email address; and, if so, basically it emails their note to me so that, when I reply, it just goes back to them.  But a lot of people don't remember to do that, and so I get these anonymous postings.  Which is fine with me, but they'll ask a question that I'm dying to respond to, but they didn't give me their email address.



LEO:  Right.



STEVE:  And of course we know for our Q&A episodes that we'd like to be able to say, you know, just sort of call out their name and say where they're from.  And again, some people remember to do that.  Some don't.  And of course if anyone wants to be anonymous, I've got no problem with that.  I mean, I'm Mr. Privacy.  But anyway, so I've redesigned the form at the bottom of the page so that there are now optional fields where I'm specifically saying "name," "email address," and "location."  Which can absolutely be left blank if someone doesn't want to fill them in.  But I think I'm excited because there have been so many responses that have been anonymous, where the person asked me a question I could have easily answered, but I didn't have their email address.



LEO:  So you're not collecting emails, you're not trying to invade their privacy, it's just so you can respond.



STEVE:  And I make that very clear on the page.  I say "totally optional information."  And I specifically say their email address will only be used to address their note to me.  No record of it is being kept.  And that's the case.



LEO:  It's a shame, but nowadays you really always have to say that.  Anytime you start collecting email addresses, people are...



STEVE:  Well, and I appreciate it, too.  Because, you know, when I go to the site and they need all this from me, it's like, oh, now what?  You know, am I going to start getting bombarded with spam?



LEO:  Right, right.



STEVE:  Well, the other thing that I did is we got this really neat note last week.  I forwarded it to you because it was from a Security Now! listener, and I really liked it.  It's short, so I'll read it.  He said, "As a listener of your Security Now! podcast, I had planned to upgrade my old copy of SpinRite just to show my support of the podcast.  But when my boot drive died last night, I knew I needed SpinRite 6 for a different reason.  Since my old copy didn't support my new hardware, I upgraded, then downloaded Version 6 on a different machine.  I burned a boot CD and popped it in the machine with the failed boot drive.  A couple of hours later, I'm writing this on the machine with the previously failed drive..."



LEO:  Wow.



STEVE:  "...and everything works great."



LEO:  That's nice.  That's nice.



STEVE:  "Many thanks for...."  Yeah, I mean, I loved it.  And we've got this page of testimonials like this for SpinRite.  But, you know, me and my URLs, it's, I mean, even the word "testimonials," I have to - it's t-e-s-t-i-m-o-n-i-a-l-s, I mean, it's got as many vowels as it has consonants.



LEO:  Too many letters, yeah.



STEVE:  Anyway, so what I did was I thought, okay, let's make this easier for people to find because I know that we've got Security Now! listeners who are wanting to turn their friends and other people on to SpinRite because we've received email like that.  So SpinRite.info, the domain SpinRite.info takes you directly to that page.  And it doesn't matter how you spell "Rite" - r-i-t-e, r-i-g-h-t, w-r-i-t-e."   So just SpinRite.info.  And that's the URL we can use from now on, Leo.



LEO:  Steve, you're learning, you're learning.



STEVE:  I'm getting there.  I'm a little slow.



LEO:  Well, that's okay.  Nobody, well, actually I shouldn't say nobody's ever accused you of being a marketer.  You have been accused of being a marketer, but anybody who knows you knows that you're not very good at it.



STEVE:  Yeah, well...



LEO:  You're too much of an engineer, I'm afraid.



STEVE:  I love, exactly, I love the technology.



LEO:  Yeah.



STEVE:  Okay, now, another thing that's going on that is worthy of mentioning because this is a hoax that's been around now for about six months, and people keep sending me various links to it.  There's this hoax that all computers and laptops have built-in hardware keystroke monitoring.  And the hoax is, it's one of those things that's good enough to almost be believable.  It includes photos of this little inline keystroke logger, which actually is an inline logger hardware.  But the claims are that all laptop and some desktop machines have this built in.  And the hoax goes on to talk about how this one guy innocently opened up his laptop because he was trying to change something, and he discovered this little lump in the wire between the keyboard, with a wire going to his Ethernet adapter.  And this goes on to say that, you know, it's sending the information out.  And in fact some moderately respectable sites have unfortunately been perpetrating this.  And, you know, I'm looking at the headline on one page here that says "Government and computer manufacturers caught installed hardwired keystroke loggers into all new laptop computers."



LEO:  Oh, please.  Oh, please.



STEVE:  But the problem is, you know, people are sending this information to us, wanting to know, oh my God, what do we do?  Okay, it's a hoax.  It is not going on.



LEO:  It was a poorly crafted hoax because it was pointed out very quickly when people saw the picture.  It was just bogus.



STEVE:  Yeah.  But again, you know, people who aren't so technically oriented are going to say, well, you know, maybe this is possible, you know, could this be really happening.



LEO:  Well, I'm glad we can lay that one flat.  There's a hoax a minute.  I go to Snopes.com whenever I get an email like that, that I even - I mean, most of the time I go, yeah, right.



STEVE:  Yeah.



LEO:  But if I don't - if it doesn't - if it is not obviously a hoax, I will go to Snopes, Snopes.com, and it's a great site for those things and debunking them.



STEVE:  Okay.  Now, following that, we have something that is unfortunately not a hoax.



LEO:  Uh-oh.



STEVE:  Ars Technica reported yesterday, and I've confirmed this, that some researchers in Amsterdam have verified that RFID tags can be viral carriers.



LEO:  Oy-yoy-yoy.



STEVE:  I know.



LEO:  How would you do that?



STEVE:  It turns out, if you have a bad, a deliberately malicious RFID tag, and it's read by an RFID reader, as these things do, you can cause a buffer overrun in the backend database which is collecting data, get code to execute of your choice, and because the RFID tags can also store information, that code is able to then update any other non-infected RFID tags, infecting them with the same virus, so it spreads.



LEO:  Now, that requires a buffer overflow flaw in the RFID reading code.  Do all RFID readers use the same code?



STEVE:  No.  So the point of this, it's not to say that, oh my God, all RFID systems in the world are now bad.  But apparently the RFID people haven't been taking enough concern, paying enough attention to issues of security.



LEO:  They never thought somebody would attempt a buffer overflow exploit, you know, on an RFID tag.



STEVE:  Yeah, I mean, it's...



LEO:  Which of course they would.



STEVE:  Exactly.  If it's there, somebody will hack it.



LEO:  Didn't you know that?



STEVE:  And so, you know, this goes back to what we've said over and over and over.  I mean, new things are scary because they haven't had time to be proven.  It's impossible to claim that something new is secure because that's something that only history can judge.  And of course security is a hard thing to do.  Clearly the RFID people, you know, didn't do this on purpose.  They just didn't check all their code because this never occurred to them.



LEO:  Well, in fact, if you think about it, I mean, there's very little data in an RFID tag.  And you'd think the software to read it would be very simple.  It's kind of amazing that something as simple as that has such a serious flaw.



STEVE:  I'm glad that it has surfaced this early.



LEO:  Yeah, right.



STEVE:  Before we start seeing RFID-laden passports that are, like, infecting each other and all this.  So it's a good thing.  Okay.



LEO:  All right.  On with the show, ladies and gentlemen.   Crypto 20 - is it 102 or 201?  It's been a long time since college.



STEVE:  I don't know.  It's...



LEO:  Our second edition.



STEVE:  Because we're going to talk about secret decoder rings, I think it's maybe 102.



LEO:  Okay.



STEVE:  It's starting crypto.



LEO:  Yeah.



STEVE:  Now, it turns out that - I mean, and literally I want to talk about a secret decoder ring because it's a perfect, easily visualizable model of simple crypto.  And we're going to talk about how you can take that and extend it to make it unbreakable.  And this is essentially what so-called "symmetric crypto," or private key cryptography, is about.  Now, it turns out that the original - I did some research on this, believe it or not, on secret decoder rings.  The original rings would use concentric rings.  The outer ring was alphabetic, A through Z.  And the inner ring was numeric.  They would actually use numbers 1 through 26.  And so you would set this to some position, the inner versus the outer ring, and then look up the message you wanted to encrypt by looking for the alphabetic character on the outer ring and then look in to the number immediately adjacent to it on the inner ring.  That's how those things actually worked.



We're going to modify, for the sake of discussion, that traditional secret decoder ring because the way normal crypto works is that it translates the encryption alphabet into other characters of that alphabet.  Now, when I say "alphabet," I mean the entire set of possible characters.  So not just, for example, A through Z.  For example, in our ring we're going to use a 28-character or 28-symbol alphabet because I want to have a period and a space.  So we'll have A through Z and period and space, which are in a ring on the outside.  And we're going to have another A through Z, period and space, which are on a ring on the inside.  So we have this 28-symbol alphabet.  Now, if the rings are aligned so that A is opposite A and B is opposite B, we obviously get no encryption.  So, for example, the term for anything that's unencrypted is, sort of by universal agreement, is "plain text," or sometimes "clear text."



LEO:  Right.



STEVE:  But, I mean, even if it's not textual, it might be unencrypted binary stuff which just looks like, you know, gibberish of hex junk.  But we still call it "plain text" as sort of a term of art in cryptography.  And similarly, after we do something to the plain text to obscure it, to encrypt it, it's then called "cipher text," again by agreement.  So if our inner and our outer secret decoder ring, or modified secret decoder rings, are aligned, we get no encryption.  So in order to use this very simplistic encoder, you would twist the rings so that they're no longer aligned by some amount.  Now, another characteristic of this is that there are only 28 possible combinations, that is, 28 possible keys, essentially, for this algorithm because, as soon as you go 28 times, you're back around to the beginning.  But that turns out to be useful, as we'll see in a minute also.  And we already know that one of those 28 provides no encryption at all.  So if we rotate our secret decoder ring off to some angle, some number of steps, then the process of encoding is looking up, you know, we write down our message that we want to send.  And then, for every character, including periods and spaces, since we have a 28-symbol alphabet on ours, we look up from the outer ring, we find the clear text character, and we look down into the inner ring for the matching cipher text.



LEO:  And you don't move it during that - for that message.  You leave it that way.



STEVE:  Exactly.  Oh, exactly.  For the entire message you do not rotate the rings relative to each other.  You then run through the whole message, and you end up with this encrypted character stream.  Now, you give it to a friend who - and you have to give them one other piece of information.  You need to tell them how many places, we'll just say clockwise, to rotate the rings, the inner ring from its normal alignment, in order to decrypt this message.  So your friend basically sets his secret decoder ring identical to the way yours was set and then performs the reverse operation, that is, you know, for every character on the inner ring, he looks at the character adjacent on the outer ring and writes that down and is able to, obviously, reverse the process you used and get back the original message.



LEO:  Simple enough.



STEVE:  Simple enough.  Well, it suffers from a couple things.  First of all, it obviously suffers from not having many possible keys, that is, as we saw, one of them that is no rotation of the inner ring produces exactly the same cipher text as plain text, so that's not very good encryption.



LEO:  Right.



STEVE:  Then we only have 27 other settings before we repeat.  So it's feasible, even if someone got a hold of your message at school, for example, and they weren't a really fancy cryptographer, they could just put the ring in the first notch away from its normal synchronized position and try a few characters of the cipher text to see if it starts to look like English.  And then, if that doesn't, they click it to the next position and try it again, and click it in the next position.  They've only got 27 positions total.  So in a relatively short period of time they're going to stumble upon the "key" that you used for this encryption and be able to decrypt the entire message.  So it's not very good from that standpoint.  There aren't a lot of possible keys.  And we'll be coming back to that because that's where the so-called 128-bit encryption comes in.  The 128-bit or 256-bit or so forth, that's the length of the key in binary bits which specifies how many possible keys there are.  And of course that needs to be a bit number for the sake of brute force testing, that is, basically rotating our decoder ring through all of its possible positions.  And in this case there aren't very many of them.



Okay, now, the analysis, say that you wanted to attack the cipher that we've generated with our secret decoder ring not using brute force for whatever reason.  You know, you want to do more of a sort of a standard cryptanalysis of the process.  Well, that turns out to be not very hard.  If you knew that this was English, for example, or whatever language it was probably encoded in, you could look at a table of the occurrence of different letters in the language.  For example, we know that A, E, T, and S occur very frequently.  And so with a large enough source message you count up the number of occurrences of each of the cipher text symbols, and you can, you know, any kind of a cryptographer would look at this and immediately be able to identify what the vowels were and probably what S and T is.



LEO:  In fact, it's so easy that even some daily newspapers have cryptography, cryptanalysis problems, you know, challenges like this.  They're very easy to do.  They're like a crossword puzzle.



STEVE:  Right.



LEO:  E-t-a-i-o-n-s-h-r-d-l-u, etaionshrdlu.  That's how I know it.



STEVE:  And that's the sequence of English characters from the most frequent down towards lesser frequent.



LEO:  Right.



STEVE:  Now, the second clue are character pairs because there's strong association in most languages with pairs of characters, things that either rarely occur or occur very often.  And that gives you another clue.  It turns out, as you go to longer sequences of characters, you begin to get a little bit lost.  There's not that much statistical weight, if you look at eight-character sequences, for example, because there are so many possibilities, and not many of them tend to occur that often.  But the use of single-character and character pairs completely cracks our simple little code.  Okay.  So.



LEO:  Yeah.  So that wasn't such a good encryption.  Were decoder rings used for anything else but Captain Midnight and old-time radio serials?  I mean, do they go back to Roman times?  How long have they been used?



STEVE:  Good question.  I didn't go that far back.  I don't think they were ever taken very seriously because they're so easy.  I think they were...



LEO:  So obvious.



STEVE:  Yeah, they're just so easy to crack.  Now, let's dispense with the inner ring and just look at the outer ring.  So imagine now that we have a next-generation encoder/decoder system.  And all we're going to use is just a single ring of A through Z with period and space.  Now, in fact, what we know of the prior design was that all we were really doing was finding a character and moving a certain distance, a certain number of character spaces, for example, clockwise.  And we were wrapping around the end of the sequence back to the beginning.  So, for example, if you had A and you went three characters forward, you'd be B-C-D would be your ciphered version.  Or if you were Z, you'd go three spaces forward, you know, dot-space-A would be your ciphered version of that symbol.



So imagine that instead we just have a single ring.  And again, our key is just how many spaces we go forward.  Well, it turns out that there is a simple thing that can be done to create an absolutely unbreakable code system using this approach.  And that is, if the number of spaces we go forward for any given symbol we're encrypting is a random number.  And...



LEO:  As we've learned before, randomness is really kind of key to creating difficult-to-decipher things.



STEVE:  Yes.  Randomness comes in all over the place.  And in fact we'll be talking about the uses for and the need for what are called "cryptographic quality" random numbers.  So imagine now that someone had maybe ping-pong balls and drew a number 1 through 28 for how far you could go.  Actually, we wouldn't want 28 because that puts you right back in the beginning.  1 through 27 or 1 through 28?  That's a good question.  I didn't think this all the way through.  But so you've got - for me, I think we want 28 ping-pong balls.  So you have a basket of these, and you swoosh them around and pull a ball out and write down the number.  Put that back in, stir it around again, pull another ball out, write down that number.  Put that ball back in, stir it around again, pull a ball out, and so forth.  So what you're doing is you're using mechanical randomness to create a string of really very high-quality random numbers.  And in fact, this approach was used in early wartime to create unbreakable ciphers.  So...



LEO:  There's one problem, though.  How do you communicate this random number to the person who's going to read the cipher?



STEVE:  Well, that absolutely is a problem.  So let's go through the process first.



LEO:  Okay.



STEVE:  And because all the things that have happened...



LEO:  I mean, if you have a ring, and you've got two rings, you can give the guy the ring, and he can do it.  But as soon as we start this random process, how does he know what ping-pong balls you've pulled?



STEVE:  Well, what this is called, it's called a "one-time pad," is this technology.  And so the idea would be literally an implementation.  You'd get a pad of paper, and you would sit there, or maybe get an assistant to sit there, and pull out balls one at a time, write down the number of the ball that you got, put it back in, stir it around again, and pull out the next one.  So basically you create an entire pad of random, I mean, truly random numbers, numbered 1 through 28.



LEO:  All right.



STEVE:  Okay.  Now, to use this, we take our existing ring, that is, our A through Z plus dot and space, we take the ring and find the symbol that we want to encrypt, and take the first number written down on the pad and move that far clockwise around the ring and write down the corresponding symbol.  Then we go to the next symbol that we want to encrypt, take the next number on the pad, go that number forward, and write down the symbol that we find at the ring that many spaces clockwise around, and proceed for the entire message.  Now, what's...



LEO:  Now we've got a great and impossible-to-decode message, even by the recipient.



STEVE:  Well, but that's the point that is so critical and what I wanted to draw this illustration for.  It is impossible for anyone to decrypt this message.  I mean, it turns out that what we've done is we've taken very, very non-random text - we already know that the source text can be analyzed all kinds of ways in order to determine, you know, frequency distributions and characteristics and all that.  It turns out, though, and this is a critical component of cryptography, is that if you mix your clear text message with truly random data, there is no force on earth - and I don't mean like what we're talking about normal crypto where it will take X number of machines a certain length of time to get this done.  I mean it cannot be done.  When you mix a message with randomness, and this just counting around a ring is a completely valid form of mixing, where you mix content with something random, no analysis can reverse that process.  And that's what's so cool.  I mean, none.



It's a key concept for people to kind of get their minds around is that it just, even though your message has affected these random numbers, because they were random in the beginning, pulled from these ping-pong balls, the result is every bit as random, even though there is a way, if you knew the original pad, to reverse the process.  And so, for example, in order to decode this, of course, the decoding process is pretty clear.  Somebody who had the pad that was originally used, or I should say a copy of the pad that was originally used to encrypt this message, would take one of the cipher text symbols and look at the first value on the pad and go counterclockwise back to the original symbol that was used and write that down, and then take the second cipher text symbol, look up the second number on the pad, go counterclockwise, and get back to the original text.



LEO:  So they need a copy of your pad, is what they need.



STEVE:  Yes.  And in fact this approach, for example, was used in submarines and to encrypt the most important data that the government has ever produced back in the old days.



LEO:  And it would still work even with high-tech computer analysis today.  It would still be undecipherable.  Am I right?



STEVE:  It is more unbreakable than anything else.  I mean, absolutely, completely unbreakable.  And that's the key.



LEO:  So this is a good system.  Who don't we use it anymore?



STEVE:  Well, because of the point you brought up very early on here, is the key to decrypting it is having a copy of that original one-time pad.  Now, the term "one-time" talks about one of the two great weaknesses.  First of all, you've got to get the pad to the person decrypting it.  Now, back in wartime, what would happen is literally there were people with bingo machines or ping-pong ball machines or whatever, reaching into them, pulling out numbers, creating pads.  I mean, this is, you know, in the early days of the NSA.  Actually it's probably pre-NSA.  But the idea, I mean, this was actually done.



LEO:  Right.



STEVE:  And so submarine captains would go to sea with a briefcase full of these sheets of paper.



LEO:  They had a pad.  They had the duplicate.



STEVE:  Exactly.  They had a copy.  I mean, it was, you know, the whole courier with the handcuffed-to-his-wrist case thing because, if this got away, this would completely allow the code to be broken.



LEO:  Right.



STEVE:  So the idea would be you needed what we call a "secure channel."  You need a secure channel to get the one-time pad to its destination.  But once there, you are then able to, I mean, literally during the middle of the day, just say the numbers out in the air for anyone, I mean, you could publish them on the front page of The New York Times.  Doesn't matter at all what you do because nobody can crack this code who doesn't have a copy of the pad that was used to produce it.  No analysis.



LEO:  But that's the weak link is that you have to share.  It's a shared key system.



STEVE:  Yes.  Well, it is a shared key, also known as a private key.  And in this case it's also a symmetric key, meaning that the same key, in this case a pad, which is used to encrypt the message, is used to decrypt it.  That's what a symmetric key means.  It means that the operation, even though you may do something different technically for decryption, for example, in this case we went counterclockwise around the wheel to decrypt and clockwise around the wheel to encrypt.  So you might do something different, but you're using the same key.  So it's considered symmetric cryptography.



Now, I said there were two weaknesses, one being that, again, that you need to have a so-called "secure channel," in this case, you know, a courier who you trust, and you make sure there's no way for these documents to fall into enemy hands.  The second weakness is you absolutely cannot ever re-use the pad a second time.



LEO:  Why is that?



STEVE:  Any pages you use have to be torn up and burned, I mean, securely destroyed.  The reason is that, as soon as you have two encrypted messages which were encoded or ciphered using the same pad, cryptanalysis will allow you to basically separate the messages from each other and decode the message.  There are ways you're able to slide two messages against each other and non-random peaks occur which cryptanalysis is able to then determine what was really going on prior to the cryptography.  And it turns out that some of our enemies who were using one-time pads didn't recognize - and this is, you know, decades ago - didn't recognize the vulnerability of the system, and we cracked their codes because they were using pads more than one time.



LEO:  Wow.



STEVE:  And so our analysis would check for that happening, we found it was happening, and we were able to determine what the original pad's contents were.  Once we had that, we could then easily decrypt all the messages that were encrypted with that same pad.



LEO:  Wow.  That's pretty amazing.



STEVE:  So, I mean, it's really neat.  And it's interesting, too, because you go from absolutely no force on earth can decrypt this to it's trivial to decrypt it if you make the mistake of using it twice.  So it absolutely has to be only used once.



Okay, now let's go the next step in our development of this.  Rather than using a ping-pong ball machine and true random numbers, we're going to use a mathematical algorithm to generate random numbers.  And in this case, terminology gets a little tricky.  I mean, I really have to call them "pseudorandom numbers," although I dislike the term because it implies that they're not good enough, or, you know, pseudorandom isn't as good as random.  Well, in fact, really good pseudorandom numbers are so good that it can take an analysis of millions of them in order to determine that they're not random.



LEO:  The problem in general with these is that they repeat after some period of time.



STEVE:  Well, really cheesy ones do.



LEO:  Oh, not all of them do?



STEVE:  No, no, no.  There are some...



LEO:  Do they reseed it, is that how they change it, or...



STEVE:  Well, if you think about it, if we have, for example, 128 bits, and if the entire state of our random number generator were 128 bits, we know that 128 bits gives us a certain number of numbers.  And if we ever hit on one of those again, we'd be stuck in a loop.  But it turns out that really good random number generators use a huge pool of entropy, essentially, is one of the terms that they use, is they have a big pool of randomness.  And the generator is constantly churning this big entropic pool.  And so, for example, it might generate the number 5 five times in a row and then go off and never do it again.



LEO:  Right.



STEVE:  So, I mean, really good pseudorandom number generators exist now.  And, I mean, they're so good they can be used without concern.  And what's cool about them is essentially you start them at a known state, and you give them a key which determines the sequence of randomness.  Well, now, we've seen this before, and we talked about it very early on in the Security Now! podcast because RC4 was the random, sorry, the pseudorandom number generator used in the original WEP {Wired Equivalent Privacy) Wi-Fi encryption, which we know was so poorly implemented.



LEO:  And it was that seed that was the problem.



STEVE:  Well, it was that the people who used it didn't appreciate the limitations.  And one of the things that was really the Achilles heel is that the same number, that is, the same sequence, got used multiple times.



LEO:  Like using a one-time pad more than once.



STEVE:  Exactly.  I mean, that's exactly what it was.  And so they created some technology that wouldn't have this happening all the time, but the number of total different sequences was not large enough that, if you listened for a while, you couldn't pick up some reuse.  And as soon as you pick up reuse of the same sequence, you're in trouble.



LEO:  Interesting.



STEVE:  Okay, so let's go back.  We have RC4, which is a very nice pseudorandom number generator.  What you need to do is you need to avoid what are now known as some weak keys that just don't initialize it very well.  Because basically it starts out with an array, a 256-byte array that's filled with the values 0 through 255.  The key is used to sort of pre-scramble that.  And then, as you generate numbers with it, it continues to churn within that array additionally.  Well, it turns out that all you have to do is throw away the first maybe 256 bytes that it generates because those tend to not be very random.  It sort of takes a while to get going.  And again, using these tools correctly is certainly important.  And, you know, the horrors of original Wi-Fi show us all the ways in which you can go wrong and make mistakes in not using these properly.  But given that you had this, basically you could take a key and use RC4, throw away the first 256 bytes that it emits, then take the balance and simply use that as your pad.  So, I mean, and it's really good encryption.  Now you've got a pseudorandom sequence which is being used to spin our encryption around the wheel until we go the number of steps around, for example, clockwise of the pseudorandom number that's been emitted, and that's our symbol.  And because the pseudorandom sequence generator is so random and so good, it is also incredibly difficult to decrypt.  Now, we need to back off a little bit from impossible.  True randomness that is mixed with a message cannot be decrypted.  But because an algorithm was generated - I'm sorry, because an algorithm was used to generate the sequence, it's not absolutely truly random random random.



LEO:  Right.



STEVE:  You know, it's really good random, but it's not - it is, okay, pseudorandom.



LEO:  Right.



STEVE:  So there's that tiny weakness.  But with really good pseudorandom number generators, encrypting a message with virtually state-of-the-art technology is just that simple.  You use an algorithm to produce random numbers, and you spin around the wheel.



Now, I want to talk about one last thing here for this first, you know, into the technology of cryptography.  And that's an operation which is performed all the time known as an Exclusive OR.  In math, you know, there's like the basic functions OR and AND.  For example, if you had two bits, and you run them through an AND function, you only get a 1-bit out when all of the inputs are true, or you're feeding 1 in.  With an OR, you get a true value out, or a 1 out, if any one or more of the inputs is true.  Then the OR function says, okay, I'm going to be true.  An Exclusive OR is an interesting animal.  It has two inputs.  And the output is true if either input is true, but not both.  So if you make a little chart for yourself where you say, okay, you've got two inputs that are going to be 0 and 0, so the output is 0.  Now, the first input is 1, the second input is 0...



LEO:  True.



STEVE:  ...and the output is true, exactly, 1.  And the reverse.  The first one is 0, the second one is 1, or true, then the output is true.



LEO:  So it's only false if both are false.



STEVE:  Or if both are true.



LEO:  Oh, it's false if both are true.



STEVE:  Yes, that's the key.  So if the first input is 1 and the second input is 1, then the output is 0.  So that's why it's called an "Exclusive OR."  It's not...



LEO:  Exclusive OR as opposed to a regular old OR.



STEVE:  Exactly.  Well, what's very cool about this is, if you look at this chart, you'll realize that if you had, like, a signal coming in the first input that was going through the output.  Now, let's say that the second input is 0.  So we have our signal coming through.  If the signal is 0, the output is 0.  If the input signal is 1, the output is 1 because our other input is 0.  So this is having no effect.  But if our second input is a 1, look what happens.  We put a 0 in, and because the other input is a 1, we get a 1 out.  We put a 1 in, and because both of them are 1, we get a 0 out.  In other words, this is inverting.  It's sort of a conditional inverter.  If our second input is 0, there's no inversion of the data.  But if our second input is 1, anything we put in the input is flipped over.  We put in a 1, we get out a 0.  We put in a 0, we get out a 1.  So that's what an ExOR operation does.



LEO:  Got it.



STEVE:  Okay.  So the reason that's cool is that it's reversible.  That is to say, if you - say that you had your clear text, and you ran it through this ExOR, and it may or may not have inverted it.  Okay, then you run it through the ExOR again.  Well, if it had inverted it before, it will invert it now.  And if it didn't before, it won't now.  So the idea is it reverses the process.  And that ends up being a key function in cryptography.



So now, instead of talking about our symbols, let's get away now from our little 28-symbol wheel and talk about bytes.  Because bytes is the way everything works in, you know, everything that we're doing today.  So we have an eight-bit byte of clear text.  That could be, you know, the whole ASCII character, it could be a byte of computer data, any eight-bit pattern.  We then ExOR that byte with an eight-bit pseudorandom value that came from our RC4 generator or whatever pseudorandom generator we're using.  And that's going to produce this cipher text. And so we're done, basically.  By just taking our clear text byte and ExORing all the bits with the pseudorandom bits from our generator, we now have encrypted our byte.  And literally, that's all that is being done today.



LEO:  And it's reversible.



STEVE:  And that's the beauty because, if you then take that and you send it somewhere, you store it somewhere, you do whatever you want to with it, doesn't matter because, I mean, it is, at this point, after running it through that ExOR operation, ExORing it, and that is to say, mixing it with a pseudorandom value, it is now ciphered.  That's all there is to it.  You then, if you want to decipher it or decrypt it, someone wants to read your message, all they do is they do need to have the key for the pseudorandom sequence generator so that they're going to be spitting out the same random bytes.  But they take your byte, ExOR it with the byte which will have been the same one you used, and because this ExOR process is reversible, out drops your original byte.



LEO:  Isn't that slick.  I've always liked ExOR.  Always been one of my favorites.  It's so elegant.



STEVE:  Well, it's just - it's clean.  And what I love about this is this is so simple.  I mean, what I'm describing is exactly how many systems work today.  And as I promised you, Leo, that's all there is to it.  I mean, everyone can understand this.



LEO:  Yeah.



STEVE:  This is not, I mean, on some level I guess it's rocket science, but, you know - and in fact, the details of the pseudorandom sequence generator that's spitting out these really good random bytes, that's pretty hairy, you know, cryptomath stuff.  But if you have a stream of pseudorandom bytes, you simply ExOR them with your data, and you get something out nothing in any reasonable time can crack.



LEO:  It's really remarkable.  Now, I wish we had illustrations on this one because this is a tough one to do in audio.  I mean, I am impressed that you were able to explain this.  And I followed it, but it is tough.



STEVE:  Well, I want to try to do this because we're doing an audio podcast...



LEO:  Right.



STEVE:  ...and draw the examples.  I think that falling back to the decoder ring in order to sort of build up some vocabulary, and then moving into bytes, I would imagine we've probably held everyone here.



LEO:  Yeah.



STEVE:  And so essentially what we've just described is, I mean, absolutely symmetric key encryption as it is used today.  We have a key that must be kept private because that key allows someone to generate the same stream of pseudorandom bytes which are then ExORed against the cipher text in order to recreate the original plain text.  So, and that's one of the keys.



Now, you know, you mentioned early on, of course, the problem with the one-time pad was that the person on the receiving end had to somehow get that ahead of time.  Well, we've reduced the problem's size, but we have not at all reduced the nature of the problem because the key still must be kept private.  In the same way that the suitcase with the one-time pad had to be kept out of enemy hands, even though we now have a key that lets us easily generate as much data as we want to, which is very cool, the secrecy of that key is every bit as important.  And now we're going to - next time we're going to talk about...



LEO:  Shh, don't tell them how we're going to solve this problem.



STEVE:  It turns out there are very cool technologies that solve that so that it's possible to establish a communication with another party where somebody eavesdropping can't gain the information they need to decode the conversation.



LEO:  And that was the real revolution in cryptography really.



STEVE:  It's a very cool thing.  So here I just want to make sure people get it, that this key that generates the random numbers - now, notice not the key itself, or not the key alone, but also all of the machinery for generating the random numbers, that has to be known, too.  So somebody who was going to decrypt it basically needs to recreate the same stream of pseudorandom data to ExOR against the cipher text to create the clear text.  So they have to know what algorithm you're using, the details of that, and the key.  So more than just the key is necessary.  But the problem is, all that stuff has to be kept secret.  And we know that, you know, there is some security in obscurity, but it's not nearly as good as any security technology where you can just be completely open and say, here's what we're doing, give it your best shot.



LEO:  Wouldn't it be neat if we could just give our keys out and still have security.  Hmm.



STEVE:  And we'll be talking about how that works in the coming weeks.



LEO:  Now, we won't do it next week because next week is a question-and-answer week, our 32nd episode.  Every fourth episode Steve sits down and answers the mailbag, and there's a bunch of great questions for you, I know.



STEVE:  And now, thanks to this updated form on the page, we'll have a better sense for who and where people are, and I'll be able to answer people's questions, and we'll go from there.



LEO:  Don't forget to go to his website, GRC.com/securitynow.htm, for transcripts and 16KB versions of the show, all his show notes and links and so forth.  And of course, while you're there, check out SpinRite, which is the ultimate disk recovery and maintenance utility.  I use it, and I encourage everybody to get a copy of SpinRite, Steve Gibson's incredible program.



STEVE:  Well, and now we've got SpinRite.info...



LEO:  Makes it easy.



STEVE:  ...for anyone who wants to see some listener feedback, yup.



LEO:  Just go to SpinRite.info.  I can't believe you, Steve.  This is a revolution.  A revolution.  Have you ever had anything besides GRC.com?



STEVE:  Actually I own SpinRite.com.  And that brings you to my site also.  And I've got various other little domains that I use here and there.  But, you know, GRC.com, of course, is the flagship.



LEO:  That's the one.  That's the one.  Well, we thank our flagship, AOL Radio.  They broadcast us on their podcast channel and of course provide us the bandwidth so we can get this to you via podcasting.  That's AOL.com/podcasting for more information.  They've got some great programs on there.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#32

DATE:		March 23, 2006

TITLE:		Listener Feedback Q&A #5

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-032.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo briefly review last week's topic of symmetric stream ciphers, then pose the first Security Now! Puzzler/BrainTeaser which proposes a secure means for sending encrypted messages where neither party knows the other's key.  The Puzzler/BrainTeaser will be answered and resolved at the start of next week's episode.  Then, as always in their Q&A episodes, they answer questions and discuss issues raised by listeners.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 32 for Thursday, March 23, 2006.  Your questions, Steve's answers.  Hello, Steve Gibson.



STEVE GIBSON:  Hey, Leo.



LEO:  Leo Laporte in Northern California, Steve Gibson in Southern California, and we meet in the middle via Skype.



STEVE:  Which is really working well for us.



LEO:  It is.  It's remarkable.  Has something to do with the fact that you have spent some money on a good Heil PR-40 mic and an M-Audio interface.



STEVE:  Oh, I have a very nice microphone, yes.



LEO:  Bob Heil says hello, by the way.  He's going to be at NAB, and they're throwing a big party this week, or I guess it's next week.



STEVE:  It's so funny, I watch Letterman, and he's got the Heil PR-40 there.  And he's banging it with his pencil all the time.  And it just bugs me to see him, like, whacking on it with his pencil.  It's like, David, stop that.



LEO:  That's the way David is.  He has a mic - they use a Shure mic for his audience warm-up.  Because, you know, he comes out before the show.



STEVE:  Right.



LEO:  He does an audience warm-up, and it's on a long cable.  And it's all dented up.  You know, it has the round ball, the wire cage on the top of it.



STEVE:  Right.



LEO:  It is messed up.  And I thought, why is his mic all dented up?  And then I saw.  He hits things with it.  He bangs it around.  But that's part of his act is, like, banging on this stuff.



STEVE:  Right, right.



LEO:  It's pretty funny.  So we talked about crypto last week, and I know we want to tie up some loose ends before we head into questions and answers.



STEVE:  Well, yeah, there's a couple things.  First of all, people are wondering whatever happened to the OpenVPN guide that I have promised.  It's on the way.  I haven't forgotten it.  I mean, it's like my number one thing to be working on.  I had a bunch of, you know, year-end tax stuff to deal with, you know, financial, over on my GRC business side.  But also I'm working with a very talented developer in Russia who's got a bridging driver.  And we're basically coming up with a custom solution for OpenVPN which solves a number of problems that dramatically improve the robustness of its use and make it much easier to configure.  So I haven't been sure how that was going to proceed.  You know, he's got other consulting he's doing.  I've got, like, an 18-page template laid out.  I'm fleshing them out.  You've, in fact, seen a couple of the graphics that I sent you, Leo.



LEO:  Yeah, they look good, yeah.



STEVE:  Anyway, I just want to let people know I haven't forgotten about it.  It's going to happen.  And it's going to be just a tremendous reference once it comes together.  But anyway, it's on the way.



LEO:  He's working on it, folks.



STEVE:  I'm working on it.



LEO:  Patience.



STEVE:  We had a guy referring to last week's discussion of - remember you asked me, Leo, when was that secret decoder ring kind of idea first used, you know, who did it first?  And I don't know that this is accurate.  But someone said that Julius Caesar...



LEO:  That's right.



STEVE:  ...did use it to communicate, you know, basically used a simple transposition cipher where letters were shifted some number of places, which is exactly what two concentric rings do, in order to communicate with his generals.



LEO:  That's why they sometimes call it a "Caesarian cipher."



STEVE:  Right.



LEO:  Yeah, yeah.  So it's pretty old.  In fact, I bet it predates that, even.  I mean, we know he used it.  But I bet it predates that.  It's kind of an obvious thing once you have an alphabet.



STEVE:  Yeah, or if you asked your gurus to come up with a way of, you know, easily encrypting data that a general who's not too clueful would be able to decrypt.  I mean, it couldn't be too complicated or some guy on horseback wouldn't be able to figure it out, so...



LEO:  Some barely literate guy on horseback.



STEVE:  Yeah, exactly.



LEO:  All right.



STEVE:  Well, now, we're going to announce today the very first - and I'm very excited about this - Security Now! Puzzler/BrainTeaser that relates to cryptography that comes from something last week.  A guy wrote from the United Kingdom, Roger Cuthbert.  He said, "Hey, Steve, I had an idea about one-time pads."  He said there's an old, I don't know if it's a riddle or a trick or what, where you want to send somebody something securely using a padlock that he doesn't have the key to.  So you put it in a box, and you lock it with your own padlock.  You send it to him.  He adds his padlock to that, so now the box is doubly locked.  He sends it back to you.  You take off your padlock, so now it is still locked only with his.  And then you send it back to him, he takes off his padlock and is now able to open the box.



So what was so clever about Roger thinking about this is he says, you know, why couldn't you do this with one-time pads?  You have a one-time pad.  He has a different one-time pad.  So you encrypt your message using your one-time pad, send it to him.  He encrypts that encrypted message with his one-time pad and sends it back to you.



LEO:  So only he could - go ahead.



STEVE:  Well, okay.  So now you decrypt the one-time pad that he encrypted with your one-time pad.  Now the message is only encrypted with his.



LEO:  It's half-encrypted, right, yeah.



STEVE:  Then you send it back to him.  He decrypts it with his one-time pad, and now it's back into plain text.  So essentially, every transport of the message was encrypted,  either by yours, by both of yours, or by only his.  And neither of you had to share your one-time pads with each other.  And what's wrong with that?  Isn't that, like, a really cool solution for sending an encrypted message?



LEO:  This eliminates the problem of exchanging one-time pads, which is the weak link in a one-time pad system.



STEVE:  Exactly.  So...



LEO:  If you draw a picture of this, it will become clearer.



STEVE:  Well, yeah.  Or if you think of it using that lockbox analogy, you know, the idea.  And what's cool about this, the encryption that we've talked about - and I'm going to run back real briefly a little summary of last week.  You know, we talked about Exclusive OR where you take a byte of data, and you Exclusive OR it with a random byte.  Another way to think about that that I didn't specifically say, but it sort of makes it clear, is that you have sort of a - think of having a stream of bits of your message.  What the Exclusive OR does is it conditionally or optionally or maybe inverts a bit of your message.  So basically you are - when you XOR your message with a stream of random bits, basically you are randomly inverting your message bits.  And what's cool is that you can do the same thing again.  If you re-XOR with the same random bits, then you're going to flip the ones that were flipped before back to where they were, restoring the original message.



LEO:  Right.



STEVE:  Now, that's why this idea of being able to double-encode a message works, because your pad [glitch] bunch of random bits.  Then you send it to the other guy.  He uses his different pad to flip a different set of bits.  He sends it back to you.  You use your pad to again flip your specific set of bits.  And then, when it goes back to him, and he does it a second time, it flips everything back the way they actually all really were.  So you could sort of see how it might work.



Now, if someone's confused about this XOR thing, we could fall back to this notion of a ring.  Remember we initiated this whole dialogue talking about the secret decoder ring, where from a given letter you go some number of letters or symbols forward to encode, and then you go that same number of symbols backwards to decode.  So in the same way that an XOR can be used reversibly, you could also just use addition and subtraction on the ring, where you take the random number and add it to the symbol to get a new one.  And then, for example, if he did the same thing, then you've sort of both added your own random numbers.  Then when it comes back to you, you subtract your random number, the same random number that you had added before.  And then when you send this back to him, he subtracts his same random number, which will bring you back to the original symbol.  So anyway, that's what we're going to leave people with for one week.



LEO:  So you're saying it doesn't work.  There's a flaw.



STEVE:  No, I'm not saying - I'm saying maybe this is really cool.



LEO:  Oh, okay.



STEVE:  So maybe it works, maybe not.  People should think about it...



LEO:  Well, what do you think?  All right.



STEVE:  ...and decide what they think, and we'll have the answer at the beginning of next week's show.



LEO:  You are sneaky.



STEVE:  Okay.  Q&A time.



LEO:  Well, I've got the questions.  Do you have the answers?



STEVE:  I hope so.



LEO:  Let's go.  First, two related questions touching on the same very important conceptual issue.  You mentioned that 128-bit website encryption is safe to use and near impossible to crack.  But if that's the case, why is it copy-protection is so easily broken?  What's the difference between that and website encryption?  Is TruCrypt or any other crypto program open to easy cracking?  And before you answer that, let me just mention that, in your introduction to the cryptography episode a couple of weeks ago, you said that DRM was doomed.  And I agreed with you, it could always be cracked.  But then, you know, you keep saying "uncrackable Voice Over Internet" or "uncrackable email."  Well, huh?



STEVE:  Yeah, yeah.  That's a really good point.  And the reason I wanted to present these questions is that there's a fundamental concept here which is crucial for people to get.  And that is that the reason DRM can be cracked is that the device which knows how to decrypt the encrypted data is right there, and it's doing it in front of you in order for you to get the content which is being displayed or listened to or whatever.  And similarly...



LEO:  So it has the private key somewhere...



STEVE:  Well, it has...



LEO:  ...stored away.



STEVE:  It has whatever.  I mean, whatever it is, it knows how to bring it back into usable form.  And copy-protection is the same way.  If something is copy-protected, it's got to be unprotected for the computer to run it.  So when it's running in your machine, it's in a run-able state.  That is, whatever it is that's been done has been undone to it in order for it to be usable.  And that's the key.  So what's different with website encryption is - and we'll get into this in the coming weeks here when we explain how symmetric key and asymmetric key and public key and all this stuff all interrelate.  But the idea is that you're encrypting information which is going somewhere else.  And nowhere in between, in the middle, no eavesdropper has sufficient information to do the decryption.  But when it's coming to a device which is going to run copy-protected software or display DRM data, that device has to know how to display it.  And so the point is, anything can be reverse-engineered.  So it's, you know, anything, I mean, this is how DVD encryption just got cracked immediately was a very clever engineer figured out what the DVD players were doing in order to do the decryption.  He said, oh, here's how it's done.



LEO:  A very clever 16-year-old engineer.



STEVE:  Yeah.



LEO:  So they didn't have to be that clever.  Because they're doing, and so he wrote DCSS, which reverses that process.  It allows you to kind of do the same thing as a DVD player would do.



STEVE:  Right.  But, for example, if you're just exchanging a - like you have an opaque token that someone has given you.  It's like, here, hold onto this and give it back to me, sort of like a web browser cookie.  You have nothing to go on to decrypt that.  You have no traction.  You know, you don't have in your computer the code which is going to turn that into something that makes sense.  Instead you're just giving it back, if it's been given to you...



LEO:  Right, makes sense.



STEVE:  ...and you just have no traction.



LEO:  Yeah.  Eric Bolt writes from Hotmail, a Hotmail account:  "I have a wireless connection enabled, but it isn't connected to a wireless access point or another computer.  For example, I'm at work with my laptop."  He's hardwired into the LAN, you know, RJ45 plugged in there.  His wireless connection is still enabled, but he's not using it.  Is there a security threat there?  Could somebody get on his computer through that connection?



STEVE:  Yes.  Yes yes yes.  And in fact there is a known - there are several known hacks.  Wireless can work in two different modes.  In infrastructure mode, where you have the traditional type of access we've been talking about where the infrastructure is a wireless access point or base station, the alternative way to operate is called "ad hoc," where, for example, two laptops are able just to talk to each other without using a - instead of talking through the access point, they are able to connect directly.  Windows XP's default mode is both, to allow both infrastructure and ad hoc.  And there have been reports that are confirmed of people on airplanes whose laptops are being used getting hacked on the fly, if you'll pardon the pun.



LEO:  Even though they're not on the Internet, just because their AirPort is still on.



STEVE:  Yes.  Because they're...



LEO:  AirPort, that's a very Apple-specific thing.  Their Wi-Fi is still on.



STEVE:  Exactly.  So it is the case that a computer, even as it was in Eric's case here hooked into a LAN with an RJ45 hardwire, if his radio is on and the computer is configured to allow ad hoc operation - and that's something you can change in Windows.  But it's really better, and this is what I always do, is just to turn that off when you're not really using it.  I mean, it saves battery power, for one thing.  And it's just sort of a good, secure practice to shut down any radios that you don't actually need to be using at any time because it's an exposure.



LEO:  If you had WPA turned on on your client-side, would that...



STEVE:  You are going to be safe.



LEO:  You are safe then, okay.



STEVE:  Yes.



LEO:  So if you don't want to turn it off, if you're using - you should just be using WPA.  Well, wait a minute, though, because you can't have it turned on all the time because otherwise you wouldn't [glitch] on to, oh, I don't know.  It's too confusing for me.  I mean, in other words, I don't turn it on, you can't turn it on for all connections because otherwise you wouldn't be able to get on when you got to Starbucks.  So it's only when you're connecting with a wireless access point...



STEVE:  That's a good point.  And it may be that, for example, someone has had to turn their security off when they were doing something else, when they were, like, away from their home, in order to use an open connection.



LEO:  Security isn't really blanket for any connection into your card.  It's just saying, when you connect with this access point, use security.  But your card is kind of promiscuous, if you want to use that term.



Jason in Orlando writes:  "I just ran into something I've never noticed before.  I'm a college student in Orlando, and I'm on a school PC, still using Internet Explorer.  They're slowly making Firefox available, but not here in mine.  I logged into Gmail, checked my mail, then went to another site.  After browsing for a few minutes, I headed back to Gmail" - you know, mail.google.com - "to see if I had a response.  And it went right there.  I didn't have to pass muster.  I didn't have to give it a log-in or a password or anything.  It just opened my inbox.  I closed the window, opened a new one, headed back to Gmail, and then I had to log in again."  He said, "I simulated the thing a few more times and realized that, if I didn't close the window, I could always just go right back in without a password.  I can't remember how times I've left a terminal at school and just clicked the home page button for the next user."  And he said, "I'm going to try this at home."  Is this something to be aware of?



STEVE:  Well, actually, yeah, I think that's a very useful bit of caution for anyone using web browser-based email.  What he's seeing is that he's got this Google mail account configured to, by default, just sort of stay open.  He wasn't explicitly clicking Logout.  And on any of those pages, when you're in Google mail and many other web-based  mail systems, you can explicitly log out.  That invalidates your login for that session.



LEO:  It's using what's called a "session cookie."  So it checks the session cookie, says, oh, he's still here.



STEVE:  Well, exactly.  And in fact we will be talking about cookies also in the future because there are session cookies and much more persistent cookies.  And you can tell Google mail that you want to stay logged in on the current machine unless you log out.  But even if you don't have that option set, unless you explicitly log out, and you keep that browser session, which is what was happening in this case, you're still logged in.



LEO:  Right.



STEVE:  So it's a useful cautionary note that people should explicitly log out whenever they're using a public terminal.



LEO:  Many sites, I think Google mail included, have a little checkmark under the box saying "public terminal log-in or not."



STEVE:  Oh.



LEO:  I'm not sure if what that's saying is don't save any session cookies, or if it's saying don't save any long-term cookies.



STEVE:  Yeah, Google mail doesn't have that, that I've seen.



LEO:  Doesn't do that?  Oh, okay.



STEVE:  You know - yeah.



LEO:  I've seen it before on many sites where it's saying, is this a private machine?  In which case, just for convenience we'll maintain your log-in.



STEVE:  It sounds like, yeah, it does sound like they may have taken extra measures.  Like, for example, maybe it times out after a much shorter period of time.



LEO:  Yeah, yeah.  I have that on my FastMail account.  Let me just - I thought for sure that Google would do that.  I mean, it would seem to be sensible.  Anyway, that's a good thing.  So your recommendation is close the browser; or, better yet, just sign out.



STEVE:  Explicitly click the...



LEO:  Sign out.



STEVE:  ...yeah, the log-off or log-out link before you close the browser window because you just, you know, you want to make sure your logon credentials have [glitch] with that remote server.



LEO:  Very, very important.  All right.  And I'm just looking through the Google settings, and I don't see anywhere that you can - there must be somewhere where you can say, look, don't save anything.  But maybe not.  It is a convenience.



Alan Aykings [ph] asks:  "Are there any issues with using PPTP" - that's Point-to-Point Tunneling Protocol, which Windows uses as its VPN protocol.  "I currently use DDWRT with a PPTP server enabled, and I was wondering if there are any security issues with it.  Is it also okay to open the PPTP port, which is 1753 to a Windows computer, and set up the Windows computer to accept incoming connections for a VPN?"



STEVE:  Well, he asks are there any security issues.  That's a huge question, of course.



LEO:  There's no right answer, either.



STEVE:  Okay.  Opening a port to Windows means that it will accept incoming traffic, incoming connections.  And we've seen, I mean, time after time after time, buffer overruns in Windows machines.  And so anytime you open a port to a Windows machine, you are hoping and praying that there isn't some known or unknown exploit that would allow that buffer overrun, if there was one, to be taken advantage of.  I mean, as we know, you put an unprotected Windows machine on the Internet, and it's just hosed in a matter of minutes.  It's the really good thing that Service Pack 2 for XP did for us is that they've got their own little firewall running all the time.  So, for example, for him to open this port he'd have to explicitly allow traffic through the firewall.  It's that firewall which is responsible for, you know, making Service Pack 2 of Windows XP a much better machine.



Now, the one architectural security problem is that Point-to-Point Tunneling Protocol does not have strong authentication.  That is, it's very possible for, if somebody was determined and wanted to, for someone else to be able to log on to his machine remotely, which is certainly not what he wants.  Microsoft has tried several times, they've strengthened their algorithms, but they just don't want to take the step to provide strong authentication because it's not as simple as not having strong authentication.  It's one of the things, for example, that makes OpenVPN a little trickier to configure because OpenVPN, you know, our chosen solution has industrial-strength, military-strength authentication.  Nobody who doesn't have your credentials will be able to log onto your system.  That's not true of point tunneling protocol.



LEO:  So your recommendation would be not to open that port  and, what, not accept incoming connections?



STEVE:  I would call that a security issue.



LEO:  Yeah.



STEVE:  You know, he was saying are there any security issues.



LEO:  Yes.  You created one.



STEVE:  Yeah.  I mean, if he really wants to use Point-to-Point Tunneling Protocol, see, he's got a router.  And I guess it's maybe a little safer if he uses his router as his endpoint, that is, connects using PPTP to his router.  That would get him into his network, as opposed to trusting the Point-to-Point Tunneling Protocol server on Windows, which just, you know, always makes me think twice.



LEO:  Right.  Are there any particular flaws you know of right now, or are we in between...



STEVE:  No.



LEO:  We're in between flaws.



STEVE:  Yup.  And of course no one knows about a flaw until we all know about it.



LEO:  Right.



STEVE:  So who knows.



LEO:  And you can almost, I mean, I think with any software you can pretty much say - I don't think you can ever say that a software is guaranteed flawless.  You write software.  You know.  It's just - it's too complex.



STEVE:  It's very, very hard.



LEO:  Yeah, yeah.  Unless we're writing in Ada or something, which nobody does.  Does anybody write in Ada anymore?



STEVE:  I think it's gone.



LEO:  That was something, a language the Department of Defense proposed, based on Pascal, that was intended to be a secure language, you know, much harder to create bugs in.



STEVE:  And support big projects and team building and all these other things, yeah.  It was just a big goof.



LEO:  It was fashionable.  Nobody uses it.  Of course, I'm talking to the guy who programs in Assembly language.  Which probably is a good, secure way to do it.  At least you know what's going on.



Alan in Des Moines writes:  "If the limiting factor for crypto security is computing power, how about distributed processing?  Things like, you know, SETI@home or the Folding@home.  Couldn't some Trojan horse virus infect millions of PCs and have them all act as processing units for a crypto...."  Wait a minute, this is too good an idea.  I'm not sure I want to read this question.  "...acting as processing units for a crypto cracker and get around the processing power requirement?"  You could create a pretty massive supercomputer, couldn't you.



STEVE:  Yeah, well, in fact, that's what the SETI@home project does, of course, is they're borrowing everyone's screensaver time while their machines are on, doing all this number crunching, signal processing of signals received from outer space.  You know, basically a massive, distributed computer whose overall computing power is extremely high.



LEO:  Right.



STEVE:  A number of people suggested this idea, that is, you know, because one of the things we talked about last week was that it's only a function of computing power.  If you had long enough or fast enough, brute force attacks can function.  The thing that renders that infeasible is the scale of difficulty as the number of bits that are used in the key increase.  I've got a table here, and I'll just give you a sense for how quickly these numbers get big.  And the point is that, for example, we glibly talk about 128-bit key.  But it's not, for example, twice as hard as a 64-bit key.  It's the squared as hard.  It's the total number of combinations squared more difficult.  So, for example, if a given computer at a given speed took two seconds to crack a 40-bit key, that same computer would take 35 hours to crack a 56-bit key...



LEO:  Wow.



STEVE:  ...one year to crack a 64-bit key, 70,000 years to crack [glitch] key, 10 to the 14th years to crack a 112-bit key, and 10 to the 19 years to crack a 128-bit key.



LEO:  So you'd have to get a lot of computers in your little cluster to solve that one.



STEVE:  There aren't that many computers.  I mean, so my point is, that's the rate at which the computing burden for brute-force cryptographic cracking, that's the rate at which it scales as key length goes up.  And, for example, just for the hell of it, I'm using 256-bit keys...



LEO:  Yeah, me, too.



STEVE:  ...in my OpenVPN system.



LEO:  Right.



STEVE:  Because why not?



LEO:  Why not?



STEVE:  I mean, now we have computers that can handle that length with no trouble at all.  And, I mean, lord knows how  many years, I mean, it's to the point where, you know, your home will be attacked and ripped apart by someone...



LEO:  By the explosion of the sun.



STEVE:  Exactly.



LEO:  You can stop worrying about your encryption, your message being stolen.  Worry about the sun exploding because that's only a few billion years off.



STEVE:  Yes.



LEO:  I just created a new key for my PGP signing.  And I use a 4,096-bit key.



STEVE:  Well, now, that'll be the public key, which is different than the bulk crypto.



LEO:  Right.



STEVE:  But that's way big, Leo.



LEO:  And it used to be that you would choose a smaller one because of the computational penalty.  But you don't have that anymore.



STEVE:  Right.



LEO:  These things are - computers are so fast.  So is the default key still 128-bit, or...



STEVE:  128-bit is really safe.  And that's what SSL is using for its crypto.  And, I mean, it's, you know, 10 to the 14 years.  We're safe.



LEO:  Right, right.



STEVE:  No matter how many, you know, SETI computers we commandeer for crypto.  And notice that all that work would only crack one key.  If you did all that, you would crack one key.  As we're going to be learning in coming weeks, the new technologies, which use public key technology, sort of piggyback per session symmetric keys like we've been talking about.  So they're changing all the time.  And in fact, I've got OpenVPN set up, and this is what I'll be explaining to people, how it's changing the key automatically periodically, even during a connection.



LEO:  Wow.



STEVE:  So it's just - give up.  I mean, you just no longer have to worry about the security of this stuff.



LEO:  And if you update your key every year, you're probably safe.



Andy from Chicago, Illinois writes - boy, we've got quite a few here.  We're going to start moving a little faster.  "My ISP, Cyberonic, recently switched backbones and issued new IP addresses to subscribers.  What I've learned since is that the range of IPs I'm now in was recently in the 'bogon' address space," which is, he says, a new vocabulary word for him.  "This is causing big issues with anything going upstream - webmail, FTP, WebDAV, and some sites have trouble loading images.  I've contacted the admins of some of the sites and come to the conclusion the packets are being blocked somewhere en route.  I'm not certain where to even start looking for solutions.  Any ideas?"



STEVE:  Well, this is really an interesting question.  I thought it was really fun.  First of all, a bogon - he was talking about this being a new vocabulary word - a bogon is the measurement of bogosity, or bogusness.  So it's like it's the quantum.  You can have so many bogons' worth of bogosity, you know, technically.  I have said before that we're not running out of IPs on the Internet, and that there's even a lot of IP space still not being used.  Remember that we've talked about how, for example, anything beginning with a 10, you know, 10.anything is - we know is reserved for private networks.



LEO:  So that's a bogon.



STEVE:  So, yes, that is one of the bogons.  What happens is, Internet routers are configured to drop any traffic which is destined for the so-called "bogon space," which is a term that the network engineers use.  Get this:  40 percent of our current Internet IP space is bogon.



LEO:  Wow.



STEVE:  40 percent is non-routable, unused space.



LEO:  So that's the 10., the 192.168, 5.



STEVE:  In fact, even looking at just - yes, exactly.  Even looking at just the first byte, anything beginning with a 0, a 1, a 2, a 5, a 7, 23, 27, 31, 36, 37, 39, 42, 48, 50, 77, 78, 79, 89 through 123, 127 - which of course is the local host range - and then 173 through 187 and 197, all of those are just - they don't exist.  They're bogons.



LEO:  How did Andy get a bogon IP address?



STEVE:  Well, what happened was someone somehow convinced ICANN to give up one of these big networks.  The problem is, all over the Internet there are routers configured with this bogon space, and firewalls and all kinds of equipment that just have these, like, hard blocked.



LEO:  Yeah, don't let anything in from that address because it's not a real address, so...



STEVE:  Exactly.  So essentially the problem is that a recently allocated IP region is no longer bogon space, but it's taking the rest of the Internet some length of time to get the message, to get the news.  Meanwhile, equipment will just be dropping his traffic, and there's nothing he can do about it.



LEO:  Wow.



STEVE:  I mean, it's annoying.



LEO:  Wow.  So does this happen frequently, that bogon IP addresses are reassigned to the real world?



STEVE:  No, not frequently at all.  I mean...



LEO:  I can see why.



STEVE:  The people who keep these things allocated and assigned, I mean, these IPs are just precious treasure on the Internet.  And of course, as we know, the emergence of NAT technology that allows corporations to run many computers on few public IPs, and even individuals, you know, I've got one public IP on my cable modem, and I can run a whole network, as do all of our listeners.  So, you know, of many computers.  So the pressure has been hugely reduced thanks to NAT routers.  And so, you know, there's, like, 40 percent of the 'Net is still unallocated.



LEO:  So you can appeal to ICANN and the RIRs and say, look, you know, we're using this, and please...



STEVE:  You've got to make a, yes, you have to make a really good case.  And if you make a really good case...



LEO:  But you still have all this legacy hardware that's not going to be updated, and...



STEVE:  You're going to have some pain for a while, while  network administrators all over the 'Net go, oh, look, you know, this is no longer a bogon address in the IP space.



LEO:  We have our first question from the Amish country.  We don't get a lot of questions from the Amish country, I'm not sure why.  Just a joke.



STEVE:  Do they have computers?  I know.



LEO:  Dave Solan [ph] in Amish country, Mannheim, PA writes:  "I have a question for you regarding hotel LANs.  I was recently at a hotel where you could hook up to their cable modems for free access.  The cable coax line from its TV was split so one line went to the TV, one to the cable modem.  They actually had a cable modem in each room."



STEVE:  Isn't that neat?



LEO:  I'm guessing this hotel didn't have their own LAN, and this might be a little safer than plugging into a hotel where you simply plug into their network.  Is that true?



STEVE:  Yes, it is true.  I had never heard of a hotel giving every room its own cable modem.



LEO:  Now, I should say that I have heard of hotels doing this, but they aren't actually doing that.  They have their own private network which provides both TV and data, and they're putting decoders in the room.



STEVE:  Ah, okay.



LEO:  I think it's more likely what was happening.



STEVE:  Even so, if they're using traditional DOCSIS-style cable modems, that is, you know, the universal standard for cable modem technology, that is an encrypted signal over the coax.



LEO:  So that modem would be kind of a barrier to anybody trying to look at you.



STEVE:  Exactly.  So the things we've talked about, the dangers we've talked about before of people easily, for example, sniffing your traffic and playing games, I can't say for sure that they would be defeated because you'd have to really look at the network to see, for example, how ARP traffic was being handled within that network.  It might be that these cable modem-like things are just really bridges, which are bridging the LAN through the coax segment.  That's a possibility.  But it is potentially more secure than just a regular, you know, 10BaseT-style LAN that we see in most hotels.



LEO:  That's an interesting...



STEVE:  Yeah, I thought it was cool.



LEO:  ...point.  In fact, staying on that subject, another listener has asked:  "If I want a secure connection in a hotel, can't I just carry my NAT router with me?"



STEVE:  I like that one too, a lot.  Because it was like, well, we've talked so much about how secure NAT routers are, that is, what security they provide.  So someone thinking about, okay, hotels are a problem, how about if I just use my own NAT router?  The problem is, that would secure you sort of within your own room, where you're already secure.  But your traffic then would still be communal on the public side of the NAT router.  So you would - unfortunately it provides no security from, like, interroom eavesdropping sorts of things, which is the problem in a hotel setting.  One thing it does give you, though, of course, is a very good firewall, in the same way that a NAT router always blocks unsolicited incoming traffic.  So it would potentially firewall your computer if you didn't already have a software firewall.  It would be useful for that.  But it wouldn't completely protect you from, you know, the types of interroom LAN problems that we've talked about in recent weeks.



LEO:  In fact, I do that because I carry my AirPort Express when I'm in a hardwired hotel to give myself kind of my in-room AirPort.  And I use...



STEVE:  So you can sit on the bed with your laptop and so forth.  Yeah.



LEO:  Yeah, exactly.  And I use WPA.  But it's important to remember that, once it gets on the other side of that router, it's just unencrypted plain old traffic, just like anywhere else.



STEVE:  Right, right.



LEO:  And that's why I use HotSpotVPN, thanks to you.



STEVE:  Exactly.



LEO:  Pat Deery [ph] and many other sharp-eared listeners have mentioned, during Episode 29 that was our Ethernet Insecurity episode you said - you said, Steve...



STEVE:  I did.



LEO:  ...I'm pointing at you, that "...ARP cache poisoning occurs when a malicious computer sends out a false ARP response to two other computers, making the malicious computer the man in the middle.  My question is, do the two computers just accept the responses blindly, even if they didn't send out a request?  Couldn't this be avoided if the two computers in question only accept responses for requests they send?"



STEVE:  That was a neat idea, and many listeners had it.  That is, the idea being that the way ARP is implemented today it's trivial for a malicious machine to send unsolicited responses, ARP responses, to computers to cause them to change the MAC address with the IP that it was previously associated with in order for them to send their traffic through it.  And so people said, hey, wait a minute, what if computers just ignored responses that they didn't send?  Well, that kind of could work, but then you get a problem of the bad guy responding first, before the good guy, to a valid ARP request with their response.  So, and then you would ignore the second one.  But then you've got the problem of not being able to detect IP collisions on a LAN.  You want to be able to detect when two machines have the same IP.  I'm sure, Leo, with all the networking you've done over time, you have seen the little Windows dialogue box that comes up and says, wait a minute, there's another machine with the same IP somewhere.



LEO:  Right.



STEVE:  So the problem is really not tinkering with the protocol, but the problem is a lack of authentication.  And the right way to solve it, we'll be talking about it downstream.  There are some forthcoming specs, I think it's 802.1x begins to do this, where we get authentication of endpoints on a LAN which will begin to solve this problem.  And that's, like, the right way of doing it, instead of sort of trying to play with the protocol.  Then you get all kinds of weird side effects, and things break in bad ways.



LEO:  Okay.  But it would kind of be like a router rejecting stuff that it didn't initiate; right?



STEVE:  It's very much the same sort of concept, yeah.



LEO:  Yeah.  But there are issues with it.



STEVE:  The problem in this case is, because there's no authentication, you don't know that the first answer you get is not the bad guy.



LEO:  Oh, that's right, of course.  So it could just interrupt, say excuse me, I'll take this from here.  I got it.  I got it.



STEVE:  Yup.



LEO:  Let's see.  Kevin Hooper writes from his Hotmail account:  "I had some suspicious activity yesterday when I loaded drivers for a USB video capture device, and then Microsoft AntiSpyware flashed a LSP, Layered Service Provider warning."  That sounds pretty dire.  "Subsequent behavior of ZoneAlarm only increased my anxiety.  It disabled it spontaneously.  What's that?  What's an LSP, particularly when you're talking about a USB video capture device, and what should a user look for when using a layer inspector like the add-on from Ad-Aware?"  I don't even know what he's talking about, but you're the spyware king, so I'll let you...



STEVE:  Well, a Layered Service Provider is a feature that's unique to Microsoft Windows' implementation of a layer that runs up in the user's space.  There's, you know, there's user space and kernel space.  And so there are kernel drivers that run down there that interface with the hardware.  Up in where the programs themselves run, in so-called "user space," there are DLLs that get loaded in order for user applications to talk to the network.  Microsoft, in their infinite wisdom...



LEO:  Infinite wisdom, yes.



STEVE:  ...created something called a Layered Service Provider as a feature of Windows.  What it allows you to do, essentially, is it allows any software - and of course there's no protection for this, no authentication, no notification, nothing - it allows any software to insert itself as a shim in the networking traffic, sort of up in the user space.  It's sort of a poor man's network interface ability.  The bad news is, spyware is using this in order to intercept browser and email traffic and to insert its own and basically play all kinds of games.  So people like the Ad-Aware guys have - they're, like, aware of this being another vector of attack for spyware.  And they're now keeping an eye on sort of the chain of processes in the so-called Layered Service Provider stack because you're able to have multiple service providers that, like, sort of link to each other, and bad stuff inserts itself in there.  So essentially it's sort of one more...



LEO:  One more vector.



STEVE:  ...one more vector of vulnerability that Windows has.  And so apparently, in this case, maybe the software was buggy that this guy installed, or he just has a lot of software like Ad-Aware and ZoneAlarm and Microsoft AntiSpyware that are all now watching the Layered Service Provider stack for any changes and alerting him if something changes.  He apparently installed something benign, so he should say, oh, okay, this thing is a Layered Service Provider shim-installing piece of software, now I know.  So that's what it means.



LEO:  Wow.  You know, there's a pattern here in the way Microsoft works.  I mean, essentially they're enabling, without really thinking about it, just putting things in that let people do anything they want.



STEVE:  Yes.  I mean, it's just the way they operate, the way they implement.  Now, in fairness, this is old stuff.  It's still around, like so much other of Microsoft's old stuff, for the sake of forward compatibility.  So this stuff has been around since before security was really an issue, which we could argue for Microsoft has only been in the last couple of years.  So, you know, I don't know that they would do it this way now.  One would hope they wouldn't.  But we are stuck with it.  And the malware has found it, and it's just a simple way for malware to get itself running, basically in every process that the user uses that communicates with the Internet.  This LSP stuff is potentially really bad.



LEO:  Wow.  Anthony from Albuquerque asks:  "I recently...."  Did you have to look up Albuquerque when you typed that, by the way?



STEVE:  I think I probably did.  I just put it into Google, and Google says, "Did you mean this?"  Oh, yeah.



LEO:  You mean Albuquerque?  That is probably the single hardest city to spell.  "I recently relocated, and at my new place I have a DSL connection with an ISP that is issuing private IP addresses."  We're going to have to start limiting people to three or four acronyms per message here.  "I have a DSL connection with an ISP that is issuing private IP addresses."  This is that 192.168.1 to me.  "I had to change my router configuration to issue 192.168.0.something in order to get online.  Everything's working okay except BitTorrent.  I'm thinking the ISP is either actively throttling BitTorrent traffic" - which is very common now - "or preventing a good connection by not having the BitTorrent ports forwarded the way I have to on my own router.  I'm using Azureus, but my ISP is not on their list of so-called 'bad ISPs.'  I changed my BitTorrent port, as also recommended by Azureus.  That hasn't helped.  In my troubleshooting I also discovered my dynamic DNS is no longer working properly, as the IP it receives is an external IP in a router somewhere."  Probably another 192.168.  "Is there another way around this ISP's shenanigans to get DynDNS and BitTorrent working?"



STEVE:  Okay.



LEO:  How does this even work?



STEVE:  This guy is hosed.



LEO:  Because the ISP is using a router to connect these other - they're not giving you a real IP address.



STEVE:  That's exactly right, Leo.  And I've seen this before, and it's beginning to happen.  ISPs, maybe who can't get a large enough public IP space for all of their customers, they're beginning to run NAT themselves and then issue private space 192.168.x.y IPs to their customers.  Now, this guy was able to get his router to work because he was smart enough to know that you have to have different networks on either side of the NAT router so that it's able to know which traffic to route across.  So, for example, his ISP in this case was issuing 192.168.1.something, and that was the default subnet inside of his router.  So he had to change that.  Then he was able to work.  But he still has the problem that his traffic from his own use is not going public until after it crosses his ISP's router.



LEO:  I can see a lot of issues coming out of something like that.



STEVE:  Well, you can't run servers.



LEO:  Right.



STEVE:  You see, his BitTorrent client is trying to be a server.



LEO:  Is a server, right.



STEVE:  Exactly.  And there's no way to run a server without explicit port forwarding.  And the ISP can't forward ports to everyone.  They would only be able to go to one particular user.



LEO:  He wouldn't be able to use Videochat either; right?  I mean, there's a lot of things that would break.



STEVE:  Nope.  As I said, this guy is seriously hosed.  I mean, this is...



LEO:  Well, I mean, this is why ISPs don't do this very - I mean, you'd think this would be in their advantage to do it, but it would cause so many problems.



STEVE:  It's convenient for the ISP.  But basically you end up being a client only to the Internet, and all kinds of stuff will no longer work.



LEO:  So complain to the ISP.  And if they don't fix it, you're going to have to go somewhere else.



STEVE:  I would go somewhere else.  If there's any way he can change ISPs, that's the first - I'd just, you know, don't even consider complaining.  Just get out of there.



LEO:  I could see a small, rural ISP doing this because, you know, they're small, they don't have a big enough pool.  Essentially, you know, they become kind of a, you know, in-house, like, renter of access.  But you can't do, I mean, a lot of things break.  A lot of things.



STEVE:  Yeah.



LEO:  Yeah, all right.  Chris Peterson - our last question.  Chris Peterson of Billings, Montana asks:  "Can anyone's machine just be hacked?  During an argument online the other day a belligerent kid said he was just going to hack into my machine, and he was going to get what he wanted from it, and so there.  I assumed he was bluffing.  He didn't seem that smart.  But could a really talented hacker crack into anyone's machines?"  In other words, is any machine vulnerable?



STEVE:  The good news is, no.



LEO:  No.



STEVE:  It's not like in the movies, where, you know, you just decide, okay, we're going to go hack into this computer system somewhere and get whatever we want to from it.  I mean, the bad news is, many systems are so complex that there are ways in.  But, you know, in some cases that requires social engineering, where you get the secretary, if the boss is out of town, to flip his keyboard upside down and read you his password on the bottom of his keyboard or something like that.  I mean, there can be ways in.  But fundamentally, it's not as if all computers have sort of, like, have a soft boundary, and if you just poke at them hard enough you'll be able to, you know, stick your spike all the way through their crust.  I mean, it just doesn't work that way.



LEO:  Good.



STEVE:  So that's the good news.



LEO:  On the other hand, there are so many holes and exploits in operating systems these days that there's no guarantee that you're safe, either.



STEVE:  You've been watching, of course, OS X has been having its share of trouble, and Safari and so forth.



LEO:  Although, you know, it's funny, they're talking about OS X having problems because it has a lot of old UNIX programs, and Apple hasn't been assiduous about making sure the patches are applied.  But I haven't seen any widespread exploits.  I mean, it seems more theoretical.



STEVE:  Yeah.



LEO:  But it's something to keep in mind always, that, you know, unless you are actively hardening a system, there's always the chance that you're hackable.  And if you're a good hacker, you probably have in your toolkit a few of these well-known exploits that are out there.



STEVE:  Well, and I would say, if nothing else...



LEO:  Or not so well known.



STEVE:  Yeah.  I would say, if nothing else, the notion of needing to keep your software patched and current has now arrived for Mac users the way it arrived years before for Microsoft Windows users.



LEO:  Although I think most Mac users, just kind of by default, turned on that there's a software update feature.  They did it before Microsoft did it, and it's automatic.  And I think most Mac users have it turned on.  I think there's a bigger issue - and I was guilty of this.  You know, we kind of tend to run as administrator, which, of course, if you've ever used a UNIX system, you know, is verboten.  You never run as root.  But both Windows and Mac users tend to run as administrator.  On Windows you almost have to because there's so many programs that won't run otherwise.  On the Mac, you can in fact very conveniently, very easily run as a limited user.



STEVE:  Well, and in fact from the UNIX world the idea of being "root," as it's called, is so powerful that from day one programs have all assumed they would not be running as root.  They would create their own, like a GNUS account or an Apache account or whatever that would run with limited resources.  So the heritage of UNIX has that fundamental security awareness advantage...



LEO:  Right.



STEVE:  ...where, you know, things really do work just fine not being root, and you only briefly have to do that from time to time for, like, special, you know, true maintenance things.  Whereas, as you say, Leo, under Windows all kinds of stuff is just, you know, broken.



LEO:  But heritage is the opposite, assuming that you have all power.



STEVE:  Exactly.



LEO:  And that's exactly the difference.  It's just, you know, how people are used to working, or programs are used to working.



Steve, we are through the questions.  Well done.



STEVE:  I think we will resume then next week.  We'll come back with our answer to this week's Puzzler/BrainTeaser, why can't you send messages back and forth using that double lock approach with a one-time pad, or can you send them back and forth, does that work, in order to give you a really cool encryption system.



LEO:  It seems to me that, if that worked, that it would be more widely used.  So I'm thinking there's got to be something wrong with that.



STEVE:  And so the question is what, you know?  People can think about it for a week, and we'll give them the answer at the beginning of the show next week.  And I'll talk to you then, Leo.  And...



LEO:  Don't forget - go ahead.



STEVE:  No, I was going to say that we're going to talk about the second family of symmetric ciphers.  We ran out of time last time, and all we were talking about so far is what's called "stream ciphers," that is, the idea being that you have a message, and, for example, you use a pseudorandom number generator or even a one-time pad to generate a stream of randomness that you mix in with your message to create a stream that cannot be decrypted, and then you reverse the process to get it back.  That's one family of encryption.  The alternative is called a "symmetric block cipher."  And that's really, I mean, there we're going to see, when I quickly run through a list of them, like 2fish and Blowfish and AES and Rijndael and those things, those are things people have heard of.  And those are really today's workhorse encryption.  So that's for next week.



LEO:  That's for Episode 33.  Meanwhile, reminding everybody that they can get 16KB versions of this and all our other Security Now! podcasts, plus transcripts thanks to Elaine, on Steve's site, GRC.com/securitynow.htm.  This program and all of Steve's labors are brought to you by his fabulous program SpinRite, which is the ultimate disk maintenance and recovery utility.  I just recommended this the other day to somebody.



STEVE:  Oh, cool.



LEO:  It's a must-have if you work with hard drives.  And you can find out more about that now at SpinRite.info, a brand new site just for you.  SpinRite.info.  We also want to thank our good friends at AOL for providing us with the bandwidth and for broadcasting this show on their podcast channel on AOL Radio.  That's AOL.com/podcasting.  And thank our donors who make this show possible.  Without you we couldn't produce Security Now! and all the other fine TWiT.tv podcasts.  If you're not yet a regular contributor, we encourage you to visit the site, TWiT.tv, and press one of those Donation buttons.  A donation as little as $2 a month really makes a big difference in keeping us running.  And frankly, now is a good time.  Our expenses are high, and I'd sure appreciate a little help here.  So that's TWiT.tv, and you'll see those PayPal Donate buttons right there on the front page.  Steve Gibson, we'll see you next week.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#33

DATE:		March 30, 2006

TITLE:		Symmetric Block Ciphers

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-033.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve answer last week's Puzzler/BrainTeaser which explored the idea of using two private one-time pad "keys," like two padlocks, to securely convey a message between two parties, neither of whom would have the other's key.  They then continue their ongoing tour of fundamental crypto technology by describing the operation of Symmetric Block Ciphers.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 33 for March 30, 2006:  Symmetric Block Ciphers.  Hello, Steve Gibson.



STEVE GIBSON:  Hey, Leo.  Great to be back with you.



LEO:  Are you swamped with answers to your stumper from last week?



STEVE:  Oh.  Oh.  I thought I was getting a lot of postings on the Security Now! page before.  I mean, it's - well, the really cool thing is that people have had a lot of fun with this.  I mean, I've received things that look like Ph.D. theses with pages covered in mathematical expressions with XORs and proofs of why, you know, it does work that you can communicate, but why it's not secure.  We had a housewife who wrote, said she's out walking her dog, listening to our podcasts, and either we're doing too good a job teaching or these puzzles are not hard enough, and then she completely explained why this is not secure.  I mean, and people have had a...



LEO:  And she got it right.



STEVE:  Oh, yeah.  And, in fact, many people pointed out that one of the problems is that this is an abuse of the idea of a one-time pad.  Essentially, it's been used as a two-time pad because people are using that pad twice.



LEO:  Well, let me re-pose the stumper so people know what we're talking about, in case they missed Episode 32.  And then you can explain why it doesn't work.



STEVE:  In fact, if they missed Episode 32 they ought to go back and listen to the beginning of it because - you know, like, stop now, go listen to the beginning of it, and you can have a puzzle all over again.



LEO:  Yes, that's true.  Then you won't know the answer.  That's fun.  In fact, I think we should do this more.  I think people really like it.



So the premise was we were talking about one-time pads a couple of episodes ago and how they really work.  But the issue was you have to get the pad to the recipient, so that he - or get a copy to the recipient.  And there's a vulnerability because, in that transmission of the one-time pad, somebody could get it.  So somebody suggested, well, here's a clever idea.  Why don't you double encrypt?  So you have two individuals with independent one-time pads.  Individual A encrypts using his one-time pad, sends it to Individual B, who encrypts it using his one-time pad, sends it back to Individual A - am I right so far?



STEVE:  Yep.



LEO:  And then Individual A...



STEVE:  Decrypts.



LEO:  ...decrypts his portion, sending it - now, it's still encrypted - sending it back to Individual B, who then decrypts it with his portion.



STEVE:  Right.



LEO:  And at no point was clear text sent back and forth, nor was the one-time pad exchanged.  And you didn't even say that there was something wrong with this.  You just said, would this work?



STEVE:  Well, because that was the question posed to me by a listener after our previous episode.  So it's like, okay, let's let this open to question, you know, does it work.  And several people commented that yes, it works, that is, it does always transmit an encrypted message.  And because of the nature of the simple XOR encryption or adding and subtracting, you are able to do these out of order.



Now, normally if you encrypted something and then you encrypted it again, you would not be able to decrypt it with the first key.  That is, you always have to back yourself out in the same sequence, like in the reverse order of sequence of decryptions from encryptions, in order to completely reverse the process.  But because this is a simple XOR, or an adding and subtracting, like going back to our secret decoder ring, those operations are commutative, and you are able to do them out of order.  So, you know, Person A encrypts, then B encrypts, then A decrypts, which still leaves B's encryption, which is then the final process that decrypts.  So in this simple case it does work to do the encryption and decryption out of order.



LEO:  So the flaw isn't in that respect.



STEVE:  Right.



LEO:  It does work.



STEVE:  Right.  Yeah.  Here's the problem.  We have to presume that there's an eavesdropper.  I mean, that's the whole point of encryption anyway is that we want to send an encrypted messages that, if somebody were to intercept it, it wouldn't help them.  So an eavesdropper sees the message going from Person A to B, which has been encrypted with Person A's one-time pad.  They also then see the message going back from B to A after B has encrypted it.  Well, there's the problem.  Because if you see the message before B encrypts it with his and after, the encryption is so simple that essentially you just - so you XOR those two messages, or you subtract one from the other.  And that gives you B's one-time pad.



LEO:  So as our dog walker pointed out, your flaw here is that you're using a one-time pad twice.



STEVE:  Well, yeah, and you're able to see the information.  So by seeing the first and the second exchange, you're able to get the one-time pad used by the second person.  Then, when the first person removes their encryption, the message is now only encrypted with the second person's one-time pad, which you have.  So now you simply decrypt it with that pad, and you've decrypted the message by seeing it in transit.  So this is clearly, I mean, it works, but it's anything but secure.



LEO:  You know, I think we have some very brilliant, mathematically-inclined listeners, because I wouldn't have gotten that.  That's very impressive.



STEVE:  People had a lot of fun with it.  In fact, a poster named Steve in Chicago also pointed out - and I thought this was really cool - that the original concept that introduced this, the idea of a double lock-box where, instead of using encryption - and this was what the original poster suggested - instead of using encryption, you'd put a lock on a box, send it to a friend, like, okay, I lock a box, send it to you, Leo.  You add your lock to it, send it back to me.  I take my lock...



LEO:  I can't open the box, but I can put another lock on it.



STEVE:  Exactly.  Then you send it back to me, I remove my lock, leaving it now only locked with yours, which I send to you, and you unlock.



LEO:  So it's locked the whole way, and I don't need your key, and you don't need my key.



STEVE:  Yeah.  And so anyway, a listener pointed out that is subject to a man-in-the-middle attack, which I thought was really cool.  Someone intercepts my sending it to you and pretends to be you.  And that's the problem with man-in-the-middle attacks is a lack of authentication.  I mean, that is the thing that is necessary in order to prevent this type of attack.



LEO:  So he puts his lock on it and pretends to be me.



STEVE:  He puts his lock on, yup, sends it back to me.  I remove mine, send it back to him, he removes his.  Now he opens it, takes a look at the inside, changes it, does whatever evil thing he wants to to it.  Now he pretends to be me, sending it on to you.  So he basically does the same three-way handshake from him in the middle to you, and you don't know you didn't get the contents from me.



LEO:  Right.



STEVE:  So I thought it was just another very clever, real world analogy to this kind of stuff.



LEO:  That's exactly how a man-in-the-middle attack works.  Interesting.



STEVE:  Yeah.



LEO:  So we're going to continue on now.  We have crypto to talk about.  We've done 101 and 102.



STEVE:  Oh, we've got crypto for weeks.  There's so much cool stuff in crypto.  And what I think people are going to find is it's surprisingly straightforward.  I mean, it seems like rocket science, you know, mumbo-jumbo, confusing stuff.  But essentially there are a series of simple building blocks which each block is clear and easy to understand.  And then, once we have those, we're going to look at all the different ways they can be put together to do real work.  And it's just so cool.



LEO:  I want to add one little note.  A couple of people sent me - and I'm sure you got the same emails - recommendations for books along this line, two of which I've read and really can agree with are excellent:  Simon Singh's "The Code Book," which is a very good description of how crypto works and crypto through the ages; and then, if you really want to know everything about how it's been used, David Kahn's classic "[The] Codebreakers" is quite amazing.



STEVE:  Well, those are good sort of literature-oriented books.  My bible is Bruce Schneier's "Applied Cryptography."



LEO:  Yeah, Bruce is the king, isn't he, yeah.



STEVE:  Oh, he just is.  And "Applied Cryptography" is, I don't know what, like, fourth edition or fifth or sixth?  I mean, I've got it in hardback and softback.  I love it.  Basically it's the bible of this stuff.  I mean, it's heavy-duty technology.  But if someone really wanted to understand without any simplification, Bruce lays it out.  And it's a fantastic reference.



LEO:  Tell you what, I'll put links to all three books in the show notes, and you can look at the Amazon reviews and decide which one is right for you.  I'm not ready for "Codebreakers" - I mean, for Bruce's book.



STEVE:  "Applied Cryptography," yeah.



LEO:  But "[The] Codebreakers" and "The Code Book" were right for me.  Shall we - what are we going to talk about this week?



STEVE:  Okay.  This week is the second type of symmetric cryptography, or symmetric ciphers, or symmetric encryption/decryption, known as "block ciphers."  What we covered last week are known as "stream ciphers" because - wait, no, it was week before last, I'm sorry, before our Q&A episode, two weeks ago.  Those were stream ciphers, you know, taking a look at RC4, which of course is the famous one that was used in WEP - which, because it was not used correctly, even though RC4 itself is a very good source for encryption, it was not applied correctly.  The most important thing that the people who are applying this technology have to be aware of is using them correctly.  You can have a really strong tool which you don't use correctly and get yourself in trouble.  So...



LEO:  So you've digressed a little bit.  But what's the difference between a block cipher and a stream cipher?



STEVE:  Well, that's where we're going to go right now.



LEO:  Okay.



STEVE:  The idea was, you'll remember we had basically a stream of bytes, and if we had a one-time pad, then we had a true source of random numbers or symbols that we were mixing with our message in order to produce a truly random result.  So that was like the pad represented a stream of randomness.  If we didn't have a one-time pad, we could instead use a cryptographically strong pseudorandom number generator.  So this again, just every time you ask this generator for a new random number, it hands you one, the idea being that a very good mathematical algorithm is producing these so that no analysis of them can find a pattern.  And we know how to do that now.  Our modern cryptography - in fact, RC4 for its simplicity, and it's a very simple random number generator, which is why it was originally adopted by the WEP guys in the beginning was they wanted to be able to run this on very inexpensive, low-power hardware and low-power machines.  So it's very good.  It turns out you have to look at millions and millions of random numbers produced by it to even be able to tell it's not ping-pong ball random.  I mean, it's not truly, absolutely random.  It's that good.



So the idea is you have a pseudorandom number generator that just spits out this stream of random bits, which you mix in with your message, turning your message into cipher text - into, essentially, random bits.  And then at the other end, of course, somebody with the same pseudorandom number generator and the same key, because these are keyed so that the specific sequence of pseudorandom bytes or bits that it generates is dependent upon the key.  So they generate the same stream of pseudorandomness.  They unmix it with the cipher text, returning it to plain text.  So that's stream ciphers.



There's an entirely different way, which has actually become recently the dominant approach for cryptography for, like, bulk encryption.  That's what SSL and OpenVPN, it's what the new WPA encryption uses.  Basically, stream ciphers are kind of old school.  They still have a place, and they were a nice place for us to start.  But now we're going to talk about what are called "block ciphers."



We'll start by going back to our decoder ring.  Now, with the decoder ring, we set our wheels on the concentric circles of the ring to some position and basically just had a simple transposition, that is, from any character you'd move a certain number over to the other one.  And that was encryption.  And to decrypt, you just went in the opposite direction.  Now imagine an entirely different approach.  You have a table of every possible symbol in the alphabet.  So you just write down A through Z down one column.  Now on the other side you just fill in the second column in a completely random sequence.  So, for example, somewhere on the second column you put A.  Somewhere else you put B.  Somewhere else you put C.  Somewhere else you put D.  So basically you create a mapping between your clear text or plain text data and your cipher text.  But in this case, there is no relationship between the columns.  If we compare this to the previous approach, one column would just be shifted down or transposed from the other, making it very simple to, like, you know, Caesar's generals were able to decode this, apparently.  But here we just create an arbitrary mapping between our input symbols and our output symbols, so that the result is completely scrambled.  Now, that's a perfect example of a very simple block cipher.



LEO:  Okay.



STEVE:  So again, obviously the process of encrypting this is you find the symbol on the left, and you simply do a table lookup.  You just look up the corresponding arbitrarily assigned symbol.  But it's statically assigned.  That is, every time you ask for the same symbol on the left, you're going to get the same symbol on the right.  And so you produce your message.  Now we have the same problem we've had before, that is, to decrypt you need to get - the person who's going to decode it has to have the same, basically a copy of that table.



Okay.  So we go to the first step, which is, rather than creating - well, okay.  We have to talk about the weaknesses of this first.  Obviously this is not a very strong cipher, if you know anything about the language, because as we talked about before, even with the transposition cipher, if you did an analysis of the frequency of occurrences of these symbols, and you know, for example, that the message was probably going to be enciphered English text, you just look at it, and you say, oh, look at the - based on the frequency analysis, this symbol, you know, which might be Q, for example, is obviously E in English because it's occurring so often.  So it would be very simple to crack this simple mapping cipher, this very simple...



LEO:  Substitution cipher.



STEVE:  ...substitution cipher, exactly, or block cipher, by just doing an analysis of the frequency.  Now, so we have the idea of a random assignment.  Well, now we have algorithms which are becoming very popular and work very well, where a key automatically creates this mapping.  So instead of sitting down and just, like, randomly assigned these letters, we can use an algorithm to map from the plain text to the clear text.  And that algorithm is driven by a key with a certain number of bits.  And that, of course, is where we get our strength.



Now, in order to solve this problem of the frequency analysis of the result being so simple, two things are done.  The first is we don't use a single symbol block.  That is, in this first example, the so-called block length of our cipher was one symbol, one character, maybe eight bits.  Or actually, you know, if we were just using an alphabet, we could get away with 32 bits to hold the whole alphabet.  I'm sorry, five bits, because that's 32 possibilities, and that would be enough for A through Z, space and dot and so forth.  So the way we solve the frequency analysis problem is we encode many more symbols at a time.  Contemporary block ciphers are 64 bits long.  So that's, for example, in terms of eight-bit bytes, that's obviously eight characters.  So when you take eight characters or eight symbols in a block, what you're doing - and this is what's fascinating about these algorithms is, I mean, 64 bits is a huge number of possibilities.  We know that 32 bits is 4 gig.  So that means that 64 bits will be 16 billion billion possible combinations.



LEO:  That seems like enough.



STEVE:  Yes.  And here's what's so cool, is any 64-bit combination you put into one of these block enciphering algorithms produces exactly one other, that is, one matching 64-bit combination.  So, I mean, this is phenomenally strong.  You put in - I'll say it again.  You put in eight bytes at a time, or 64 bits, and a completely different, sort of like mapping to a different 64 bits, comes out.  And what's so cool is, if you just changed one bit on the input, just changed one of those 64 bits from a 0 to a 1 or a 1 to a 0, what comes out is completely different.  It's not like one bit over on the other side changes.  Everything changes.  It's just a completely different mapping.  And that's what...



LEO:  That's cool.



STEVE:  Oh, it's such cool technology.  And that's what makes this so strong is, even if you tried to do an analysis of the frequency, you would just, you know, eight characters in English don't occur with specific probabilities, you're not going to know where word boundaries are.  Even if you had, like, lots of E's and T's and S's, they're going to be watered down by lesser occurring characters in their neighborhood, so that there's just no way to analyze the frequency strength of what's coming out and figure out what went in.  Basically...



LEO:  That explains a lot to me because I'll look at an encrypted PGP message, and the length doesn't even seem to correspond with the length of the clear text message.



STEVE:  Well, and in fact it won't because everything has to be done in blocks.  So the size of the message will be rounded up to at least the next even block size in order to finish off the message.  You have, like, three characters after you're done chopping it up into sets of eight.  And then you just have to pad it with an additional five in order for it to be an even number of blocks.  So that's one thing that's different about the use of a block cipher versus a stream cipher.  As we've seen, a stream cipher can be exactly as long as the message because you're just done when you're done.



LEO:  And even that gives you some information that could be useful, is the length of the message.



STEVE:  Sure.



LEO:  Yeah.



STEVE:  Sure.  So what's so cool about these algorithms is it's a virtual impossible to figure out mapping between a  huge number of possible input combinations, you know, 16 billion billion, and the same number of outputs.  And of course this is reversible, that is, these algorithms, you have an encryption algorithm that goes one way, driven by a key, and the decrypter is typically a different algorithm because it's done so much to this data inside.  But still you use the same key.  Thus it's a symmetric key cipher, that is, the same key drives a different algorithm in order to reverse this process.  So it takes any one of this huge number of 64-bit inputs and unwraps it, unwinds it, and returns it to what was originally put in.



Now, the last thing that is done in order to further strengthen this is there would still be some weakness if you had these eight-bit blocks all standing by themselves.  I mean, the problem has been made extremely difficult.  But, you know, it's like, well, okay, maybe if you did analyze this you could, you know, if you had enough cipher text and enough time you could still do a frequency domain analysis of the result in order to see what was going on.  So what they do is something called "cipher block chaining," or CBC for short.  And essentially what they do is they take the prior block and XOR that - here we go with our favorite XOR operation again.  You XOR it with the data for the next block before encrypting it.  What that does is that creates an interblock dependency so that no longer does each eight-bit block stand alone, which would potentially render it vulnerable to some sort of cryptographic analysis.  Now you have to know what the one before was in order to XOR that with the one that follows.  So it's a reversible process; but basically it means that, if anything changes in the message, the entire message is destroyed.  Whereas, if we had eight-byte blocks standing alone, something could change there, and the rest of the message would not be hurt.  So this strengthens the enciphering of the message, and it makes it, you know, way harder for someone to cryptanalyze because they don't know what came before, so these individuals blocks are not standing alone.



Now, let's look a little bit at the history of this.  The most famous block cipher is DES, the Data Encryption Standard that was adopted by the U.S. government and has been used widely for a long time.  DES is a very good and strong block cipher, but it suffers from a key length which is too short.  The DES algorithm uses only a 56-bit key.  Now, once upon a time that was a lot.  But, you know, over the last decade computers have gotten so much faster that 56 bits is no longer enough.  And if somebody wanted to, if a government, like government-level funding produced a DES-cracking machine hardware - and, by the way, several have been produced - then it's possible in a relatively short time to brute-force attack the DES block cipher, just because 56 bits of key doesn't give you enough possible combinations.  You can just try them all, and you're going to be able to get there sooner or later.



So what was done, as sort of one of the many improvements in general for block ciphering, something called "triple DES," or 3DES, was created.  3DES uses two 56-bit keys and three DES operations.  So it takes the same basic 56-bit encryption algorithm, but it uses it three times with two different keys.  Well, these two different keys, essentially the two 56-bit keys form an effective single 112-bit key.  And 112 bits is enough to give you, in today's world and for the foreseeable future, very strong encryption.  So many people have gone to 3DES as a nice way of strengthening DES and for bringing it up to current standards.



LEO:  So they wanted to preserve the DES standard, but they wanted to make it more.  So the strength of DES is that it's very easy to implement.



STEVE:  Yeah, exactly.  DES was chosen because it was fast and easy to implement.  And it has been pounded on so much.  See, it's like any brand new cipher might have a problem.  This is the same thing we run into with security.  It's like any brand new software, any brand new operating system, any brand new anything in security, you know, a brand new lock might have some way that the lock makers didn't think of for it to be cracked or hacked.  You just don't know.  It's really - it's only history and experience that allows us to prove the security of these technologies.  So...



LEO:  So it's sometimes better to go with a tried-and-true  method, even if it has some flaws.  Just fix the flaw and continue to use it.



STEVE:  Oh, absolutely.  In fact, you know, every so often you'll see some website that's bragging about their own hyper-triple-duty, super-triple-scoop encryption.  And it's like, what are you people thinking?  You know, this problem has been solved already.



LEO:  Right.



STEVE:  And that's what I love about this is there is a new standard.  It's known as AES, or the Advanced Encryption Standard.  It's actually a cipher called "Rijndael."  Rijndael was chosen from among a long list of ciphers in an international competition.  So all these cryptographers who had their own favorite ciphers - and there are many block ciphers.  You know, people have probably heard of Blowfish.



LEO:  Right.



STEVE:  And actually Blowfish was invented by Bruce Schneier, and he put it in the public domain.  I mean, it's a very good, very strong block cipher.  There's something called CAST, Crypton, DEAL, DES of course we talked about, DFC, E2, FROG, HPC.  IDEA is the International Data Encryption Algorithm.  And in fact, that's the bulk encryption used by PGP.



LEO:  By the commercial PGP.  It's licensed, so it can't be used by the open source one, yeah.



STEVE:  Exactly.  LOKI97, Magenta, MARS.  Then there's RC2, which is a block cipher, RC5 and RC6.  And actually RC6 was one of the ones in the running for the AES.  And Safer and Serpent and 2fish, I mean, so the point is there's a whole pot of really good block ciphers.  And what WPA uses, it can use, as we've talked about before, when it's running on older hardware it can use what users see as TKIP, the Temporal Key Integrity Protocol.  That's actually still RC4 running in the background.  But they fixed the way it's being used so it's completely secure.  But the alternative, and you'll see this sometimes in your user interface on your routers and maybe, you know, XP or something, depending upon what your Wi-Fi stuff is, you may see AES as an alternative cipher.  It's more compute intensive, so you will technically get a slower connection.  And since it's sort of overkill, I don't use it, and I don't even recommend it.  But it is there, and it's a block cipher.  It was like the next generation sort of beyond DES as the formal, world-wide standard.  And boy, I mean, it has been pounded on extensively.



LEO:  So we know we shouldn't use DES, but 3DES is fine.



STEVE:  Right.



LEO:  Blowfish is fine, IDEA.  Are they all roughly equally strong?



STEVE:  Well, there are various differences between them.  They're generally all regarded as strong.  Really, given a strong block cipher algorithm, the idea is that the only thing that should matter are the block length and the key length, that is, the block length, a longer block length is generally better because it defeats any kind of frequency analysis by just muddying up any interrelationships and frequencies of the input bytes.  It just mixes them up so much you can't see much statistical value in what comes out.  Basically it's turning what you put in into just random bits.  You know, once again, that's the idea.  And in fact, it's really interesting, a good measure of the quality of encryption is the compressibility of the output.  Your output should not be compressible because...



LEO:  The more random it is, the less you can compress it.



STEVE:  Exactly.  And so you want encryption to basically create a completely random output that isn't compressible because there's no patterns for a compressor to find in order to leverage in order to squeeze down the result.  So a modern block cipher like the AES-chosen Rijndael, for example, it allows you to use a key length of 128, I mean, it doesn't even have anything shorter than 128.  It's like, okay, we're not doing less than 128 these days.  So you can run it at 128, 192, or 256.



LEO:  Wow.



STEVE:  And so 256, I mean, that is just so beyond reason.  But it works, and so why not?



LEO:  Is it highly compute intensive?  I mean, is it so compute intensive that you wouldn't want to use it?  Or nowadays should we just go ahead and use it?



STEVE:  I guess it depends upon your application.  For example, our SSL connections are currently being encrypted with 128-bit security.  And that's really sufficient because they're not static keys.



LEO:  Right.



STEVE:  That is, every time I create a connection to a server, the handshaking that goes back and forth - which is so cool, and we'll be talking about it in a couple weeks - both ends agree on a random 128-bit key just for that connection.  And then it's scrapped and thrown away, and another one is chosen for the next connection.  So the lifetime of these keys relative to their strength really renders them, I mean, 128 bits is really strong.  So, yeah, a longer key length will generally require more processing, more hardware, more software, whatever.  But our machines are so fast now that, if you really wanted to use them, it's why, you know, why not?  And in fact, that's what I've done with our OpenVPN configuration is I'm using 256-bit symmetric block encryption.



Now, it's worth mentioning that these ciphers, these block ciphers are extremely fast relative to what we're going to be talking about next week, which are the so-called "public key" or "asymmetric" ciphers, where you use one key to encrypt and a different matching key to decrypt.  When these algorithms are implemented in hardware on the order of 1,000 times faster, that is, the block ciphers are 1,000 times faster than the public key systems.  So these are - that's why they're also called "bulk encryption ciphers."  For example, it's the bulk - IDEA is the chosen bulk encryption, as you mentioned, used for the commercial version of PGP because they're very, very fast.  You wouldn't want to transfer lots of data using asymmetric ciphers that we'll be talking about next week because they're on the order of a thousand times slower.  And so we'll talk about how these all work together, as I was talking about with building blocks, in order to give us a really cool set of possible functions.



LEO:  So there isn't any blanket recommendation that you would make for a particular technology.  It really depends what you're doing.



STEVE:  Well, it does.  And, for example, a perfect example was Schneier's Blowfish, that is a very strong block cipher that he put in the public domain.  It's available to everyone.  Only recently did the patents on RSA's ciphers expire.  So, for example, you couldn't legally use RC4 or RC2 or RC5, which they had patents on.



LEO:  Right.



STEVE:  You couldn't use them without licensing them from them.  Only now can you.  And in fact...



LEO:  And it's the same issue now with IDEA, which is patent encumbered, so...



STEVE:  Yes, exactly.  So...



LEO:  But in time you'll be able to use that, as well.



STEVE:  Yeah.  And in fact, of course one of the requirements for any cipher that was adopted to be the AES, the Advanced Encryption Standard, it had to be released into the public domain.  And this RC6 cipher that RSA put up for adoption, it is not publicly available.  And they said, if our cipher, RC6, is adopted, then we will release it into the public domain, but otherwise not.  So certainly one of the issues for choosing a block cipher, or any cipher, stream or block cipher, is what are the licensing constraints, what are the, for example, the key lengths, the block size, and so forth.  So they have personalities and characteristics that, when you are sitting down to choose what you want to do, you know, those things would come into play.



LEO:  I always just take the default.  I presume that whoever wrote G or PGP is picking the right one for me.



STEVE:  Right.  And I think that's probably a safe thing to do.



LEO:  And so that really gets back to my fundamental question, which is they're all secure, they're all relatively secure; right?



STEVE:  Well, generally, none of these have been cracked.  You know, you'll see people posting things saying that a cipher has been cracked.  Well, what that would really mean is that you could trivially determine the key, or you could trivially reverse the encryption process.  What's normally done is that, and what they mean when they say "cracked" is that, once upon a time, through a tremendous effort, one key was determined in some sort of a challenge.  And, for example, companies like RSA create public challenges, saying we'll offer prizes, we'll offer recognition to academic establishments and anyone who wants to try to come up with the key.  So they'll say, here's the cipher we're using, here's the plain text, here's the cipher text.  What is the key that we used in order to produce this?  And it's one of the ways that these ciphers are strengthened is just by giving some incentive for people to pound on them and see if there's some way to break them or crack them.



None of these have been cracked, although "cracked" meaning that basically it's rendered worthless.  What has happened is that the shorter key lengths have been brute-force attacked.  And that's the idea.  You want an algorithm where there is no choice other than to try every single key.  And then all you need to do is have a bit length on your key that is so long that every single key becomes virtually impractical in the lifetime of the universe.  I mean, we're at, what was it, 10 to the 19 years.



LEO:  Right.  You're right about people coming up with kind of crazy schemes.  In his book "Cryptonomicon," Neal Stephenson claims to come up with a very strong encryption technique involving a pack of cards.  And the point is, yeah, there are lots of different algorithms.  But if you stick to these half-dozen well-known, strong algorithms, chances are they are strong because so many people are attacking them and trying to break them.



STEVE:  Well, and anytime you wander off the trail and try something cute, you really open yourself to vulnerability.  I mean...



LEO:  As the engineers who designed WEP learned, to their dismay.



STEVE:  Yeah.  I mean, there just isn't a reason not to use these.  I mean, it's like this problem is solved.  You know, it's like no one needs to do new crypto because really, really strong algorithms with long bit lengths which have been well proven are in the public domain.  They're free to use.  Why not use them?



LEO:  Always a pleasure, Steve.  This is a fascinating subject.  And I think we could do many, many more episodes on crypto.  I think people are very interested in it.  It's something that both captures the kind of imagination of the layman and also has some real practical import for any of us who use digital technology.



STEVE:  Oh, well, in a digital world, Leo, we are dependent upon the privacy and the security of the data we store and the messages we send.  And more and more, as people are, for example, configuring Wi-Fi, they're checking their SSL certificates to make sure that the site they're connecting to is what they think it is, you know, these cryptographic concepts are entering and impinging on people's lives.  So it's important.  And in the coming weeks we're going to move through this exactly as we have been.  And by the time we're done, people who've been following along, they are going to get all this stuff.  They're going to, I mean, it's what's so cool about is it's not hard to understand.  Here we've just explained, in a very useful fashion, symmetric block ciphers.  Everyone who's been listening gets it now.  And then we're going to talk about how...



LEO:  To one degree or another.



STEVE:  ...how you use these.  Well, I mean, no one's writing one of these algorithms, but that's the point.  That's not necessary.



LEO:  It's not necessary, right.



STEVE:  Yup.



LEO:  Right, we don't need to.  In fact, it also inspires us to, as you said, check and make sure and upgrade.  Because of this, I went out and I looked at my - I've always used some form of digital signing on my emails, and I upgraded it to the latest version of GPG, the GNU Privacy Guard, because I want to make sure I have the latest version.  And I sign all my emails digitally, and encrypt many of them if people give me their key.  So I think it's a nice thing to have available to you.



STEVE:  Yeah.



LEO:  Hey, thank you, Steve.  Next week what do we want to talk about?



STEVE:  Next week is asymmetric ciphers, so-called "public key cryptography."



LEO:  That's what I'm using, of course, yeah.



STEVE:  Well, actually you're using symmetric.  You don't know it, but you are.



LEO:  Oh.



STEVE:  Anyone who is using public key is also using...



LEO:  Both.



STEVE:  ...private key, or symmetric, for reasons we will cover next week.



LEO:  Ah.  All will become clear.  And Steve, we've got to do more stumpers.  People obviously like them.



STEVE:  Well, when I can think of something, or when someone presents something.  I agree, it was a...



LEO:  Send us your stumpers.



STEVE:  It was a fun thing.



LEO:  Stump Steve, and we'll offer it to the group as a whole.  Of course you can get more information on all of these subjects at Steve's website, GRC.com/securitynow.htm.  That's also the home of SpinRite, Steve's fantastic disk recovery and maintenance utility, a must-have for every user.  Anybody who's got a PC should have SpinRite.  And you can find out more about it at SpinRite.info.  And if you're looking for transcripts or 16KB versions of this show or show notes, again, GRC.com/securitynow.htm.



We thank our good friends at America Online for broadcasting this show on their podcast channel on AOL Radio.  And you can find out more about that at AOL.com/podcasting.  And we'll see you next week on Security Now!.



STEVE:  Looking forward to it, Leo.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#34

DATE:		April 6, 2006

TITLE:		Public Key Cryptography

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-034.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Having discussed symmetric (private) key ciphers during the last two weeks, this week Leo and Steve examine asymmetric key cryptography, commonly known as �Public Key Cryptography.�� They begin by examining the first public key cryptosystem, known as the Diffie-Hellman Key Exchange, invented in 1976.  Then they describe the operation of general purpose public key cryptosystems such as the one invented by RSA.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 34 for April 6, 2006:  Public Key Cryptography.  Bandwidth for the TWiT Network is provided by AOL Radio at AOL.com/podcasting.  Financial support is provided by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com, Astaro.



Well, now we get to the meat of the matter.  Hello, Steve�Gibson.



STEVE GIBSON:  Hey, Leo.  Great to be back.



LEO:  We�ve been covering cryptography.  This is, what, our fourth podcast on the subject?



STEVE:  I think it�s our fourth.  We talked about first sort of the overall social implications, what does it mean for citizens to be able to encrypt things that even their own governments would not be able to decrypt.  Then we�ve had two episodes so far talking about two sort of basic early forms:; first. symmetric stream cryptography and symmetric stream ciphers; and then last week was block ciphers, talking about how those things work, symmetric block ciphers.  And today we talk about public key cryptography.



LEO:  And really this is kind of where I come in because while I�ve done, you know, secret decoder rings and everything, of course, I really didn�t start using crypto � and I think this is probably true of most of us � until public key cryptography was widely available.



STEVE:  Well, actually it was a revelation which occurred in 1976 when two researchers, Whit Diffie and Martin Hellman, were working at Stanford University in the math department.  And they first really conceived of this concept of a cipher where one key would be used for encrypting and a different key would be used for decrypting.  And they understood what that meant.  What was really interesting was when they introduced the technology the NSA said, oh, we had that ten years ago.  Literally, they said, oh, we�ve known about this since 1966, which was a decade before this was all made publicly available and public knowledge.



LEO:  The NSA is the super secret spy agency, and of course it would make sense that, if anybody would know it ahead of time, they would.



STEVE:  Yup.  But before we get into...



LEO:  And would not tell anybody.  That was the other side of it.



STEVE:  Well, exactly.  So, you know, and so it has raised some concern.  They were never able to prove that they had it before because of course there was no documentation for that.  They didn�t talk about whatever else they may have had.  But it�s like, okay, fine, well, we�ll presume.



LEO:  I don�t think they would be boasting.  I mean, but it does raise the issue what else they might have in the lab there, yeah.



STEVE:  Yes.



LEO:  They may have cracked it, for all we know, but they wouldn�t tell us.



STEVE:  Well, what these guys came up with is actually different than what I want to talk about.  I want to talk about what are called �asymmetric ciphers,� which is sort of the fancy term for public key cryptography.  But first I want to talk about what it was that Diffie and Hellman did because, in the same way that we like to talk about sort of conceptual things that people can visualize through an audio podcast, what�s called Diffie-Hellman Key Exchange is the concept they came up with.  And it�s perfect for us to talk about because it follows on what we�ve been talking about with the one-time pads and locking the box and sending it back and forth.  You know, you�ve mentioned many times � and this is very appropriate � you�ve mentioned the problem of being able to communicate securely, but needing to exchange a key between two parties.  And, you know, that being the real problem with cryptography is how do you initially communicate that key.



LEO:  Yes, because we have unbreakable cryptography with one-time pads, but they have this little flaw that you have to pass it along.



STEVE:  Well, and of course we also have virtually unbreakable cryptography with a symmetric block cipher, where we use a long key, like maybe 256 bits.  And we know that, as far as we know, there�s just no way to reverse engineer that.  So that if you use symmetric cryptography to encrypt your message and send it to somebody else, if they have the same key they can easily reverse that process.  The problem is that key is gold, and you want to be able to somehow get it to them without anybody being able to intercept it because, if it�s intercepted, then you�ve got no protection at all.



LEO:  Right.



STEVE:  So in general these crypto systems involve sort of one-way functions.  They involve doing something which is easy to do in the forward direction, but is difficult to do in the reverse direction.  Of course we�ve glanced on the concept of factoring primes.  And that�s the way the most famous crypto system, the most famous public key system, RSA, that�s sort of its trick is you take two really big primes, and it�s easy to multiply them together to get a huge result, but it�s virtually impractical, I mean, it�s impractical in any given length of time to determine which two primes made up that result.  That is, it turns out there�s no � we�ve never found a fast way to do a prime factorization.  And so that�s the so-called �one-way function� that RSA uses.



But that actually came later than the so-called �Diffie-Hellman Key Exchange.�  They used a different one-way function, which is interesting.  They used simple exponentiation, that is, when you raise one value to the power of a second value, so, like, A to the power of B.  That, it turns out, is very simple to do, that is, to do an exact exponentiation is simple because you just multiple A by itself B number of times.  That�s raising A to the power of B.  It turns out that getting the reverse process, that is, an exact logarithm, is incredibly difficult.  And it turns out that, if you define that operation properly, there�s something called in number theory a �finite field,� which is sort of a fancy term for a field of a given size.  If you pick your numbers correctly, and you do an exponentiation with a modulus � you know how we talk about our Mod 4 episodes is every four � the idea being that you raise one number to a power, and you only keep the lower digits, basically, of the result.  Well, that prevents you from being able to divide backwards and do an exact logarithm of the result.



Okay.  So here�s how this all works.  Say that two people want to communicate.  They agree upon the base number that they�re going to raise to a certain power.  And that doesn�t have to be private.  I mean, they could publish it on their website.  They can communicate that easily.  They say, here�s a big number, this is going to be what we�re both going to use as our base.  Okay, now, one other cool thing about exponentiation is, say that we take 2 to the power of 3, and then we take the result to the power of 4.  You get the same answer if you take 2 to the power of 4 and then take that result to the power of 3.



LEO:  It�s commutative.



STEVE:  Exactly.  It�s commutative.  And in fact it�s the same as 2 to the power of 12.  That is, if we said A to the power of B, all of that to the power of C, that�s the same as A to the power of B times C.



LEO:  Right.  I remember that from eighth grade.



STEVE:  Exactly.



LEO:  That much I can follow.



STEVE:  Well, get a load of this.  This is the key.  It�s such a simple and beautiful idea.  So we both agree upon A, and we share it publicly.  It doesn�t have to be private.  We each have this number that we�ve chosen to be A.  And there are some, actually, when you get down to the details, there are some requirements on primeness and what the number has to be to be secure.  But then I choose a big random number for my B.  You choose, separately, your own big random number, which we�ll call your B.  And we both raise this agreed-upon number to that big power.  Now, we send that intermediate result to each other.  And now I take your intermediate result and raise that to my big power.  You take my intermediate result and raise that to your big power.  We both end up with the same answer.



LEO:  Because those raises are commutative.



STEVE:  Exactly.  But nobody listening, nobody eavesdropping who sees that can do anything about it.  They see both of our intermediate results.  But because they cannot do what�s called a �discrete logarithm in a finite field,� technically, because they�re not able to reverse that process that we did simply, that simple exponentiation, they can�t get a logarithm that is discrete in any reasonable amount of time.  They can�t figure out what our powers were that we made up.  So we end up being able to choose random numbers, use those to raise a common value to that power, exchange those results, do it again, and we both end up with exactly the same value, which we can then use as a key.



LEO:  So we�re not exchanging the message, we�re merely determining our keys at this point.



STEVE:  Exactly.  And in fact that�s why it�s called the �Diffie-Hellman Key Exchange,� is it�s a way for us to basically create what�s called a �session key.�  We don�t even have to keep that key around for long.  We could do it easily every time we want to have a secure communication.  We�d just say, okay, let�s generate an agreed-upon key.  So this is how we agree upon a key, which we will then use for securely encrypting our actual conversation.  And nobody listening in who sees any of that transaction is able to figure out what our final result is.



LEO:  Professor Gibson, can I ask a dumb question?  This sounds a lot like this double padlock thing that we did a while ago.  What makes this different from the stumper that we talked about?



STEVE:  Well, the real reason is that the XOR was not hard to undo.



LEO:  Ah.



STEVE:  Because it�s symmetrical, it was trivial for someone to re-XOR the message versus, you know, the unencrypted versus the encrypted to get back the pad.  So there was an example of a process that was as easy to undo or reverse as it was to go forward.



LEO:  So this is very similar, though.  I mean, it�s a commutative process.  In other words, it can be done in different directions, and it still works, like the XOR.  But unlike the XOR, it�s not easily reversed.  And that�s the key, if you will, to the whole thing.



STEVE:  Yes.  It involves what we�re going to be seeing a lot of in the future, in the next couple of weeks, as we�re talking about more of this crypto, a so-called �one-way function,� something you can easily do in a forward direction that there just is no practical way that anyone has found � and a lot of people have pounded on it for years�� there�s no practical way to undo it, to reverse the�process.



LEO:  Now, did Whit Diffie discover these non-reversible things, or are these well known by mathematicians for some�time?



STEVE:  Those kind of functions, yes, those kind of functions were well known.  They just realized, hey, we can do something really cool and useful with these properties.  And, you know, they are heavy-duty math guys.  And so they knew that doing an exponentiation in a so-called �finite field� is simple to do, but they were smart enough to recognize that taking the discrete logarithm in a finite field, you just can�t do.



LEO:  This is where the beauty and elegance of math really shines.  Unfortunately, you have to like math to even get far enough to appreciate the beauty and elegance of it.  Because I�d love to turn on my kids to math with stuff like this.  I mean, this is very elegant, very beautiful.



STEVE:  Yeah.  I just wanted to sort of describe that first because it�s an easily visualizable � I can�t even say the�word.



LEO:  Easy to visualize, hard to say, apparently.



STEVE:  Exactly.  Example of how we could have a public communication that somebody could listen in on and still not get the key.  So, and it�s just a very cool thing.



So now, with that said, let�s talk about asymmetric ciphers.  We�ve talked about symmetric ciphers so far, where the symmetry is that the same key is used to encrypt as decrypt.  And we�ve looked carefully at how those work.  Now, I�m not going to go into the math because it does get hairy.  And in fact, we don�t even really need the math in order to understand all the cool things we can do.  But an asymmetric cipher is � basically it�s a cryptographic process where you have separate keys for encrypting and decrypting.  And, importantly, there is no way to figure out one key from the other.  And it�s sort of a misnomer to call this �public key cryptography.�  I mean, it�s what we do call it, but that sort of implies that one of the keys is public and the other is private.  Well, there�s nothing to differentiate these two keys from each other except that they�re different from each other.  In other words, if you had an agreed-upon cipher, for example RSA�s famous public key cipher, you could encrypt something with one key, and it can only be decrypted with the other.  But you could also encrypt it with that other key, and then that message can only be decrypted with the other key from the one you encrypted.  But it�s not like one of the keys has to be used for encryption and the other has to be used for decryption.  You�just have to use the other key, no matter which one you�used.



LEO:  So that�s why it�s symmetric.



STEVE:  Well, actually that�s why it�s asymmetric.



LEO:  I�m sorry, asymmetric, right.



STEVE:  Exactly.  Because you don�t use the same key, as we have been using when we looked at the previous symmetric ciphers before.



LEO:  Right.



STEVE:  Okay, now it turns out that this is a huge win because it means a few things.  For example, say that I wanted to send you a message, and again over a channel which might be eavesdropped on.  Well, you�re able to publish publicly one of your keys.  So you go through a process to generate what�s called a �key pair.�  This is the first time we�ve ever used the phrase �key pair� because with asymmetric ciphers keys are generated in pairs.  One can be used to encrypt, the other to decrypt, and vice versa.  Doesn�t matter which one you use.  But a pair of keys are generated at once, and they�re sort of like the mirror images of each other.



LEO:  So I have an A key and a B key, and I can use the A key to encrypt and the B key to decrypt.  If I reverse it, and I use the B key to encrypt, will the A key decrypt?



STEVE:  Exactly, yes.



LEO:  How interesting.  Okay.  That�s why it doesn�t matter which is public or which is private.



STEVE:  Exactly.  So you generate a pair of keys, and you publish one on your website.  And you say, this is my public key.  What it really says is this is the one of the two keys which I have chosen to make public.  I�m keeping the other one private.  So what this allows is, it allows me to get a copy of your public key, that is, the one of those two keys that you have made public.  I can encrypt a message using your public key and send you the result.  Now, anybody else can, too.  So we begin to get a little tricky with things like authentication, which we�ll be talking about.  We�ll be talking about how those mechanisms work in upcoming weeks.  But the concept is I can encrypt something using your public key, and nobody other than you, that is, nobody other than the person who has the matching private key can decrypt it.  So I get your public key, which is right there out in the open for anyone to use, encrypt something using it, and send it to you.  I know that it can be intercepted, it could be interfered with in any way.  If it were changed, it would not decrypt properly.  So when you receive it and apply your key to decrypt it, the only way it will properly decrypt is if, first, it was encrypted with your public key, that is, the other key; and second, if it has not been modified because that would cause it not to be decrypted correctly.



LEO:  Got it.



STEVE:  So it�s interesting, that�s sort of the fundamental concept here that can be used in many kinds of ways.  For example, now, if you received this message, you�d have to take it on faith that I sent it to you because anybody could receive your published public key.  Anybody could send you a message.  But look how we can add one step to this in order to begin to provide some authentication.  I have my own pair of keys.  I have my own private key and also a published public key.  So now I want to send you a message which I know that only you will be able to read.  And I also want to be able to prove that I�m the one who sent it to you.



LEO:  Yeah, because I do that.  I sign all my emails, you�ve probably noticed.



STEVE:  Well, and signing, we talk about signing, and that�s what we�re coming to, essentially, is I take my message, and I encrypt it with my private key.  And here again, this is why it�s so cool that it doesn�t matter which key you use, as long as you do the reverse process with the other key.



LEO:  Ah.



STEVE:  So I encrypt my own message to you with my private key that nobody else has.  Then I encrypt that result with your public key.



LEO:  Or decrypt it.  No, encrypt it.



STEVE:  No, no, I encrypt, yeah, exactly.



LEO:  A second time.  Okay.



STEVE:  I encrypt it a second time.  And now I send it to you.  You receive it, and you have to know what it was that was done to it in order to reverse the process.  So the first thing you do is you decrypt it with your public key.



LEO:  Right.



STEVE:  Because the last thing I did was to encrypt it with your � I�m sorry.  You decrypt it with your private key that only you know because the last thing I did to it was to encrypt it with your public key.



LEO:  Encrypt it with a public key, right.



STEVE:  Yes.  So you receive it.  You decrypt it with your private key.  Then you decrypt it with my public key.



LEO:  Which you have because it�s public.



STEVE:  Exactly.  Which you�re able to get from me.  So the only way the message is going to completely decrypt properly is if the first thing that was done to it was it was encrypted with my private key, because your decrypting it with my public key will only work if that�s the case.



LEO:  Right.



STEVE:  And so what�s so cool about this is, by double encrypting with various combinations of public and private�keys, we�re able to basically create an authenticatable transfer.



LEO:  Because only I could have sent it because it�s encrypted with my private key, and only I have access to that.  And only you can read it because I encrypted it with your public key, and only you can decrypt that because only you have your private key.



STEVE:  Exactly.



LEO:  So you�ve verified that I sent it, and only you can read it.



STEVE:  Exactly.



LEO:  Wow.



STEVE:  Now, there are still some problems with this.  For example, the biggest problem is that public key cryptography, due to its nature, it requires much longer keys than symmetric.  If the keys are too short, that basically means that the prime numbers that they are composed of are too low in value.  So it�s feasible for them to be cracked.  Consequently, the way to think of it is that the public key system requires much longer keys to get the same level of security that symmetric algorithms give us with a much shorter key.  So, for example, 128 bits is considered very good security for a symmetric algorithm; but 1,024 bits, you know, eight times more, is considered sort of the minimum now for strong public key.  And you probably even want longer public keys in the future.



LEO:  And the good news is bandwidth is so cheap, disk space is so cheap, and processor power is so great that you can have a 4,096-bit key.



STEVE:  Ah, but one thing that happens is, not only do the keys have to be longer, but this asymmetric technology, the asymmetric ciphers are about 1,000 times slower.



LEO:  So decryption takes a while.



STEVE:  Well, that�s the problem.  In fact, it takes so long that the asymmetric ciphers, the so-called �public key ciphers,� are not used to encrypt messages.  They�re used to encrypt keys.



LEO:  Ah.  Interesting.



STEVE:  And so what I�m actually doing when I�m encrypting a message to you is I use a cryptographically strong random number to give me a key, like 128-bit or maybe 256-bit, that is, a relatively short key, which I use as my symmetric cipher because symmetric ciphers that we�ve talked about in the last two weeks are extremely fast.



LEO:  Right.



STEVE:  So I choose a random number to get that key, that is, to generate the key.  Then I encrypt the bulk of my message very quickly with the key.  Then I use the public key technology to only encrypt the key, not the message.  So then what I�m sending you is sort of an envelope that contains the public key-encrypted symmetric key, and then the bulk of the message, which has been encrypted with a symmetric key.



LEO:  That is so cool.



STEVE:  Yeah, it is so cool.  When you receive it, you then use the public key technology only to decrypt the symmetric key, which restores the 128-bit or 256, whatever it is, bit random number, which I just generated out of the air just for this one particular transmission.  That allows you to recover the symmetric key, which you then use with a symmetric key algorithm to decrypt the bulk of the message.



LEO:  So basically it�s I�m sending you a one-time pad.  That symmetric key is like a one-time pad.



STEVE:  Well, yes, exactly.  You�re sending me a key that is very long and very random that nobody can figure out.



LEO:  Right.  And I�m protecting it using public key cryptography because otherwise it would be dangerous to send it to you.



STEVE:  Well, you would need some sort of a secure channel to send the key.



LEO:  Right.



STEVE:  And the beauty of this public key technology, because separate keys are used to encrypt and decrypt, that�s really all public key cryptography is.  Separate keys are used to encrypt and decrypt.  As a consequence of that, you�re able to keep one of them private.  You�re able to let anyone who wants to know the other one.  They can either use that to encrypt something to you or to decrypt something that you sent.  And the only way that works is if it matches, the two keys match, whether one is private or public or vice versa.



LEO:  And this whole system allows things like key servers, where people can go and say, look up Steve Gibson or look up Leo Laporte and get your public key � it�s published, it�s widely available � so that they can send you a private message.



STEVE:  Exactly.  And in fact the use of this so-called, you know, the 128-bit or 256-bit key, that�s called a �session key,� which is normally generated on the fly just for that session.  So it�s a random number created just for the purpose of encrypting the message.  It�s used once, and then it�s thrown away and never used again.  So it�s extremely strong because you�re not stuck using the same key over a long period of time.



LEO:  Very interesting.  Very elegant.



STEVE:  Now, one last thing to talk about is that there is an attack on any public key system, which is another sort of a cool thing.  If you know what someone�s public key is, then you would be able to generate messages, your own messages, encrypt them with that person�s public key to see what the encrypted result is.  The point is that, if you tried all possible plain text messages, encrypted it with the person�s public key, you could look for a collision between the encrypted result and what they actually sent.



LEO:  And that would give you a clue as to what the key was.



STEVE:  Well, it would give you...



LEO:  It would give you the key.



STEVE:  It would not give you their private key, but it would tell you what the plain text was.  This is called...



LEO:  Oh.



STEVE:  It�s called a �chosen plain text attack.�  Because think about it, in symmetric encryption this is not a problem because the symmetric key is never known.  There�s no way for you to, like, try all possible combinations of input to get an output because you don�t know what the key is.  But in public key cryptography, you do know what was used to encrypt.  So you can use it yourself to encrypt a whole bunch of different things to see if the result matches with the encrypted result.  Isn�t that neat?



LEO:  Yeah, another kind of brute-force attack, really.



STEVE:  Well, it is.  And in fact it�s easily defeated.  All you have to do, first of all, anyone using public key technology needs to obviously be aware of this.  You just mix in some random stuff.  You put some random stuff, like padding, at the end of your message.  And then there�s no way anyone could ever figure out what the random stuff was, I mean, because all they�re doing is they�re trying to guess at all possible input combinations to see if they�re able to get the same output.  But they, you know, they�d be using common words and phrases and starting with A and B and C, doing, as we�ve talked about before, a brute-force attack.  But by padding it with random stuff, they�re never going to get a collision.  I mean, and it�s so commonly done now because it�s an obvious weakness of public key cryptography when anyone can use the public key to perform the same kind of encryption you did in order to see if they get the same�result.



LEO:  Yeah, that would be a bad thing.  How much random data has to be included at the beginning to be secure?



STEVE:  Actually, the blocks that are encrypted with public key technology are so much bigger than the keys they�re normally actually being used to encrypt that you just fill the result, I mean, typically...



LEO:  You pad it.



STEVE:  You pad it.  But normally it�s like three quarters random and one quarter is the key.  So it�s, like, way impossible to get any kind of a collision.



LEO:  Because you don�t know where the real data begins and�ends.



STEVE:  Right.



LEO:  Well, do you want to talk about signing in this context, or should we wait to another episode?



STEVE:  We need a little more � we need to talk about cryptographic hashing in order to talk about signing.



LEO:  Okay.



STEVE:  And that happens to be next week.



LEO:  Good, good.  And here�s another question for you.  Do�you want to give out your public key?  Do you have a public�key?



STEVE:  I�ve never been a PGP user.



LEO:  Well, I�ll tell you what.  I�ll put my public key in the show notes.



STEVE:  Oh, cool.



LEO:  A link to it, anyway.  And if anybody wants it, then they can send me a private message, and I�ll just read it to�you over an encrypted VoIP line or something.  How about�that?



STEVE:  That sounds perfect.



LEO:  You know, every time somebody sends me an encrypted message I go, ooh, there must be something really juicy in here.  And there never is.  It�s fun, though.  You feel like you�re a spy.  So I do have a public key because I don�t use PGP anymore, I use the GNU Privacy Guard, which is essentially a PGP, open-source PGP.



STEVE:  Very cool.



LEO:  Fascinating stuff.  I had no idea really that there was that much going on.  I had a kind of more simplistic understanding of it.  So it was really great to hear how that actually works.



STEVE:  Well, we�re going to add another piece to the puzzle, probably next week.  And I think that�ll pretty much�� oh, no, there�s also certificate signing chains.  We�ll probably...



LEO:  Oh, we�ll never run out here, right?  Crypto goes on and on and on.  You know, at some point we should talk about DRM in this context, too...



STEVE:  Yup.



LEO:  ...the copy protection, because it uses crypto, too, of course.



STEVE:  Well, and in fact it�s why I wanted to start out the year with laying this kind of foundation because these concepts are key to all the things we�re going to be talking about coming down the line.



LEO:  If you want to know more about this, and I know you do, and maybe you�d like to read the transcript so you can get all of that, plus a 16KB version for the bandwidth impaired at Steve�s site, GRC.com/securitynow.htm.  It�s also the home of Steve�s fantastic SpinRite program, the ultimate disk maintenance and recovery utility.  Steve�s even made a special URL just for you, SpinRite.info, for more information about SpinRite.



STEVE:  Yeah, in fact that�s the URL that takes people basically to our customer feedback page for the testimonials because it�s so effective for people to look at, you know, what other people think about the product and what their experiences have been.



LEO:  Steve�s so cute.  He comes in with these letters every once in a while, look at this, look at this.  You really � I think that that really almost in a way is your payment for this stuff.  You just love reading how people are using your�program.



STEVE:  Well, yeah.  In fact, you know how I have a WAV file that plays whenever a copy of SpinRite sells on my server?  What I love is that sometimes I�ll hear three of them in a row.  And the reason is we have a site license for SpinRite.  And the deal is, you know, we tried to figure out how we could be fair to people.  So what we decided was, if somebody wanted to be able to use SpinRite like on anyone�s computer that they wanted to fix, not only just all of their own machines, but like, you know, in a small business or maybe somebody who�s, like, a consultant, how could we do that fairly?  So we decided, okay, if you own four copies of SpinRite, that is, you own licenses for four copies, then you have a site license, and you can use it, you know, don�t leave it anywhere, but you can use it wherever you want to.  So what I love is when I hear three being purchased.  Because I�ll hear, you know, the WAV file, the WAV file, the WAV file, three times in a row.  Because what that means to me is somebody bought one, and they tried it out, and they saw what it did, and they came back and said, I want a site license for this, so they bought three more.



LEO:  Three more.  That�s nice.



STEVE:  And it just makes me feel great because it means, you know, they proved it to themselves.



LEO:  So let me ask you a question.  You don�t have to answer.  What sound does it make?  Does it go ka-ching?



STEVE:  No, actually I have a ka-ching sound as people are filling out the form and moving through my ecommerce system.  When all that�s done and everything clears, I have a WAV file of Fred Flintstone saying �Yabba dabba do.�



LEO:  That�s really cute.



STEVE:  That just makes me smile every time I hear it.



LEO:  I don�t know why, but that�s what I exactly was picturing.  That�s hysterical.



Hey, we�re out of time.  But before we go I really do want to thank our brand-new sponsor.  You might have heard it at the beginning of the show.  Yeah, we have a sponsor for the show.  You know, people have been very generous all along, supporting the TWiT Network, and of course AOL providing bandwidth and everything.  But we actually have somebody who�s giving us cash money to do this show, which is pretty neat.  And it�s Astaro.  They invite you to protect your business network against spam and hackers and viruses quickly and easily with Astaro Security Gateway Appliances.  Open source-based, they�re really a good company, making great products.  In fact, home users are invited to download a free trial version of the Astaro Gateway software, ASG software at www.astaro.com.  Thanks, guys, for your support of Security Now!.



And that�s it for another edition of Security Now!.  Steve Gibson will talk more about crypto next week.  We didn�t talk anything about the Internet Explorer problems and everything.  But, you know, I think people have had enough of that.



STEVE:  And they�re going to go � it�ll all be fixed next Tuesday anyway.



LEO:  Well, we hope.  There�s a new one, you know, there�s a new phishing exploit that just came out today.  So, you know, don�t use Internet Explorer.  Are you still using it?



STEVE:  Uh, yes.  I am because I have it completely locked down.  And once we get through talking about crypto, it�s on the top of my list because many people have written, they�ve seen the list of things we�re going to be talking about on the SecurityNow.htm page.  And it�s like, I want to find out how to lock down IE.  It�s like, okay, we�ll be telling you�soon.



LEO:  Or just use Firefox, for crying out loud.  I don�t know what�s so hard about that.  Steve, thanks a lot.  We�ll talk again next week.  Have a great day.



STEVE:  Thanks, Leo.



LEO:  That�s it for Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#35

DATE:		April 13, 2006

TITLE:		Cryptographic Hashes

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-035.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Having covered stream and block symmetric ciphers and asymmetric ciphers, this week Leo and Steve describe and discuss �cryptographic hashes,� the final component to comprise a complete fundamental cryptographic function suite.  They discuss the roles of, and attacks against, many common and familiar cryptographic hashes including MD5 and SHA1.



LEO LAPORTE:  This is Security Now!, with Steve Gibson, Episode 35 for April 13, 2006:  Cryptographic Hashes.  Bandwidth for the TWiT Network is provided by AOL Radio at AOL.com/podcasting.  Security Now! is brought to you by Astaro, makes of the Astaro Security Gateway, on the web at www.astaro.com.



Time once again for our Crypto Primer with Steve Gibson.  I have to say, Steve � welcome, first of all.



STEVE GIBSON:  Hey, Leo.



LEO:  I have to say I just have been really enjoying, and I know the listeners, too � the cryptography has been fun.



STEVE:  Been getting really good feedback, yeah.



LEO:  Yeah.  You know, and what�s neat is I�m getting � you know, I published my public key on the show notes on TWiT.tv.  And I�ve been getting a lot of people sending me encrypted email.  They�re, you know, �My first encrypted email, it�s so cool.�  It�s just really fun.



STEVE:  Well, and in fact I�ve been preparing the questions for next week�s Q&A, our Mod 4 Q&A.  And there have been some great questions and feedback that�ll be appearing in next week�s podcast, with people writing in with some questions they�ve had.



LEO:  Good.



STEVE:  So we�re on a roll.



LEO:  Every fourth podcast we answer your listener questions, so get them in so we can talk about them next week.  Meanwhile, this week we continue with something called �hashing.�



STEVE:  Yeah.  This is another one of sort of our basic components of a comprehensive cryptographic suite.  In the prior weeks, of course, to review very quickly, we�ve discussed the two types of symmetric cryptography, stream ciphers and then block ciphers, where you use relatively short keys, that is to say, 128 bits is typical, sometimes 256.  And you use a single key to very quickly encrypt or decrypt some content, where the same key is used to go both�directions.



Then in last week�s episode we talked about asymmetric cryptography, also known as or popularly known as public key cryptography, the idea there being that you have different keys, one which you can let the world know about if you want to, and one which you keep private.  The cool thing there is that many very powerful concepts become possible where you�re able to say, okay, anyone who wants to send me something, use my public key.  Only I, who have my private key and keep it private, will be able to decrypt it.  And the reverse is true.  I could encrypt something that I wanted to send someone, and they would know it was from me if they used my public key to decrypt it.



LEO:  That�s what we�ve been doing.  In fact, that�s what people have been doing.  They�ve been sending me encrypted email because they have my public key, and I decrypt it and read it.  And then, you know, what�s fun is, because these key exchange servers, PGP and many other institutions and universities run these servers, I can go out, search for their key, and encrypt it back to them.  And then once we�ve exchanged encrypted email, it�ll be encrypted from then on, which is great.  It�s just very transparent and easy to do.



STEVE:  Very cool.



LEO:  Yeah, I really like it.  You don�t use this, though.



STEVE:  I just haven�t the need.  It�s funny because there was some discussion in our newsgroups about the fact that I had said, yeah, I�ve never been a PGP or other user.  And some people were saying, wow, I find that really strange for, you know, a big security guy like me.  But the fact is, I don�t know why, but I just haven�t had electronic conversations.  I mean, I have a corporate attorney, but I go to his office, and I sign paper documents.  I�m not doing this stuff over the air.



LEO:  Well, I don�t, either.  I have really no practical use for this.  But it�s just � well, there is one practical use, and that�s the cryptographic signing, which we haven�t really talked about yet.  But, you know, because people will spoof my name � and it�s very easy to spoof email...



STEVE:  Oh, yeah.



LEO:  ...and as a public figure sometimes people will spoof your name, I sign all my mail.  So if you get mail from me that�s not signed, it�s not from me.



STEVE:  Okay.



LEO:  So there�s a good reason to do it.



STEVE:  And in fact signing is one of the things that we cover today because signing uses hashes, so-called �cryptographic hashes.�



LEO:  Right.



STEVE:  Okay.  So getting on to today�s topic, cryptographic hashes.  They�re known by many different names, sometimes called a �compression function� or a �contraction function,� popularly known as a �message digest,� sometimes called a �fingerprint� or a �cryptographic checksum,� also known as �message integrity checks� or sometimes �manipulation detection codes.�  Many different names.



LEO:  These things have more pseudonyms than Mata Hari.  I mean, this is very � but it�s all the same.



STEVE:  Well, yes.  Those are all sort of the same.  Some of the terminology, like �fingerprint� or �manipulation detection code,� sort of talks a little bit about � it implies the application that you�re going to be using.  But in every case these are reducing the amount of information typically to a much smaller size, which is really why �message digest� is one of the more common terms.  A digest, as we know, like �Reader�s Digest,� that takes a long book and reduces it to a shorter form, or a digest that appears at the beginning of a lengthy paper that just explains what it�s about, sort of, you know, a capsule summary.



The idea is that a cryptographic hash takes a long, typically long object in plain text � and in this case actually the term is �pre-image.�  In hashing terminology it is normally the same as the plain text, but technically it�s called the �pre-image� versus the �hash value.�  So you take this pre-image that, for example, is email that you�re sending to someone, and you run it through an algorithm, much as we�ve been talking, I mean, this is all about algorithms, of course.  We had symmetric algorithms and asymmetric algorithms.  Those were ciphers.  And in all of the cases so far they�ve been reversible, that is, the only point to encrypting something is to decrypt it later.



Well, now we�re running across something that is not reversible, and it�s specifically the non-reversibility of it that is key.  So we take our plain text or so-called �pre-image.�  We pump it through this cryptographic hash, and we get out something smaller, basically a token.  And these are normally 128 bits, in some cases 160 bits, and even more recently longer tokens, 256 or 512 bits or more.  But the idea is that that represents a fingerprint of what you fed in.  That is to say that, if you change anything about the source text or the source content that is fed into the hash, you get a completely different output.  And in fact, well-designed hashes, if you change � say that you had a 10K blob that you were going to hash.  If you change one bit of that input anywhere, one bit, on average about half of the bits will change in the result.  So, I mean, it basically takes a really large object, much larger than the result, and scrunches it down.  And the point of this is, this is not reversible.  Now...



LEO:  Is this somewhat like a CRC?



STEVE:  Well, it�s a CRC except � CRC, by the way, stands for Cyclic Redundancy Check.  The problem with...



LEO:  It�s a way of generating a number, a fairly large number, but a number that represents the data that you�re looking at.



STEVE:  It is, but it�s a special number.  And a CRC is a good example of what a hash is not because it�s very easy to deliberately create some input which will result in a deliberately chosen CRC, that is, a CRC is not cryptographically strong because you�re able to say this input will give me this output.  So if you wanted, for example, to create a different input that will produce the same output, that would be easy to do.



LEO:  Okay.  So you could change a message in such a way that it would give you the same CRC, but of course would be�different.



STEVE:  Exactly.  And that�s where a cryptographic hash is special.  A cryptographic hash has three main focuses.  First is, it is very easy algorithmically to come up with a hash of an input text.  It is very hard � and by hard we mean in cryptographic terms, you know, millions of millennia kind of hard � to go the other direction, that is, to design an input that will give you a chosen output.  That is, I mean, basically it�s like it�s a random number, but it�s really not.  I mean, it�s a deterministic function.  You put in the same text; you�re going to get the same hashed value.  But it is cryptographically difficult � meaning really, really, really, really difficult � to design a text input that will give you an output that you have deliberately chosen.  It�s just you put stuff in, and you get out this magic token, but there�s no way to design what you�re going to put in to get a specific token.



LEO:  Right.



STEVE:  And then the third principle of a hash is that there is no collision, that is, given two inputs, the probability of them hashing to the same result is really, really low.  You�re not going to get what�s called a �hash collision� with, like, a trivial change to an input is going to give you a huge output change.  So...



LEO:  I mean, hashing is well known, has been around in computer science for a long time.  How is a cryptographic hash � or maybe you�re going to get to this � different from just a regular hash?



STEVE:  Well, okay, here�s a perfect example.  Say that I wanted to take everybody�s IP address � we know that IP addresses are four bytes, and we�ve talked about the XOR function before.  Say that I wanted to hash an IP address from four bytes down to one byte so that, for example, I wanted to, like, sort users to my website into 256 categories based on their IP.  I could simply take the four bytes of their IP and XOR them together to give me a hash.  And that would actually be a very nice hash because it would generally spread all the 4 billion IPs equally across just 256 results.  So simply XORing the four bytes together.  But it�s not a cryptographic hash because I could look at someone�s IP and trivially see what it�s going to be.  And I could easily design or choose IPs that would hash into a given result.



So hashes normally take some larger value and reduce them to fewer number.  And good hashes will evenly distribute that reduction across their smaller space.  What�s special about a cryptographic hash is that you can�t choose what you�re going to send it in order to get a known result.  And you can�t go backwards.  For example, if I hashed � just using the little XOR example I gave, if I were to hash that from an IP address down to a result, I could easily spit out all kinds of IP addresses.  That is, I could easily reverse that process and come up with IPs that are going to give me my final resulting hash.  You cannot do that, that�s specifically what you cannot do with a cryptographic hash.



LEO:  Okay.  Okay.



STEVE:  Okay.  Now, one of the ways this is used is signing documents.  And this is what we�ve talked about before is you take a piece of email.  Now, we know that we could encrypt the document in order to make it secure and send it somewhere.  But say that we didn�t want to encrypt it, we just wanted to say, you know, as in the example you�ve given earlier, you know, I�m Leo Laporte, I really wrote this piece of email.



LEO:  And it hasn�t been changed since I wrote it.



STEVE:  Well, exactly.



LEO:  This is very important.



STEVE:  Exactly.  So what you do is, the PGP system you�re using, for example, it will literally do � it will take a hashing function exactly like we�ve talked about, run your email through it, and produce basically a fingerprint of the document.  So it says this is the result of hashing this longer email down.  And it�ll be 128 bits or 160 bits, depending upon what the hash is.  And it says, you know, this is the fingerprint.  Now, the problem is, if you just put the fingerprint at the end, somebody else could, in fact, change your document in some way, do a hash and change the fingerprint.



LEO:  Just paste a new one in.



STEVE:  Just paste, exactly, replace the fingerprint as they have changed the document.  So the final key here is, this is where our public key cryptography comes in again.  You encrypt just the fingerprint, using your private key that nobody else has.



LEO:  So not only does this say this is the hash for the message, but only I could create it.



STEVE:  Only you, using your private key, would have been able to encrypt that fingerprint.  That�s what gets appended to the message.  Now the message gets sent to somebody else.  And anyone who wants to can read it because the message itself was not encrypted.  But to prove the authentic signer of the message, they would take your public key and decrypt the appended fingerprint using your public key.  And that would give them the hash for the message.  Then they perform the same hashing function you did and compare the hash they get with the hash that they decrypted from what you provided.  Only if these documents are identical, that is, the one you originally signed and the one they received, only if they are absolutely identical will the hashes match.



LEO:  Just so people understand from a practical point of view, if you get email from me or anybody who�s using this, it�ll be plain text email.  You could encrypt it, but that would be another thing to do.  This is just signed.  You�d get a plain text email, but at the beginning and the end it says, you know, �PGP signed� at the beginning, and at the end it says �Begin PGP signature,� and there�s this gobbledygook which is the cryptographic hash.  Now, you could just see that and say, okay, fine.  But in order to really verify that that came from me you would need to have PGP or what I use, which is the GNU Privacy Guard, an open source free one, installed.  And then you�d need to get my public key to verify.  Right?



STEVE:  Correct.



LEO:  And it does that automatically.  But if you don�t have my public key, you can�t verify it.



STEVE:  Right.  So I don�t mean to imply that these are complex things that the user has to manually do.



LEO:  You know, the software�s very good at this, yeah.



STEVE:  Exactly.  If they were all set up to be doing this automatically, then it would just be, you know, it might just say �authenticated,� you know, automatically in their�system.



LEO:  Well, I mean, I have to say it is automatic, but that�s one of the complaints people have about this whole thing is it is so � it�s not as easy as it ought to be, you�know.



STEVE:  Right.



LEO:  Mom�s not doing it.  It does require a little geekiness.  You have to install the software, which is not always easy.  You have to know about keys and know that you have to get a key, and you have to be able to search the key server and all of that stuff.



STEVE:  Well, and my complaint, frankly, is that I�m not worried that somebody�s sending me stuff that you haven�t sent me, yet every piece of email from you has all this extra crud in it, you know...



LEO:  Well, it�s not that much crud.



STEVE:  ...that�s visible in your email.  So...



LEO:  Right.  Well, there�s another way.  If you certificate sign, then it would just send an attached certificate.  Same idea, but it�s not visible in the body of the email.



STEVE:  Right.



LEO:  I prefer to use the text method because it�s more�universal.



STEVE:  Well, now, one place that many people who are Internet users may have seen a cryptographic hash is in download sites, which will often post the MD5 and/or the SHA hash for the files that are being downloaded.  And this is sort of an interesting, you know, real-world practical example that people may have run across before because the idea being that � and a lot of open source sites will also do this.  They will say, here�s our files, and here�s the MD5 of it, or the MD5 hash, or whatever they�re going to call it specifically.  The idea being then that this is them saying that this is � basically it�s the fingerprint for the file.  You download the file and then, using your own MD5 or SHA-1 hashing tool � and all operating systems have these as freeware, they�re easy to find on the �Net � you then give your own hashing tool that file, which will quickly produce, basically, the fingerprint.  And there you just do a visual comparison.  You look at the website, and it says, you know, 5A30FE1...



LEO:  It�s long, yeah.



STEVE:  ...and you just visually compare that the result these people got when they produced the fingerprint is the same thing that you got when you produced it.  And that tells you beyond, you know, with absolute certainty at a cryptographic level that that is, bit-for-bit, the identical file that they intended you to receive.



LEO:  Now, you know, a lot of programs do it.  But I�ll tell you, the time when it really is important is when you are first installing PGP or GNU Privacy Guard, to make sure that you�re not installing some Trojan horse that�s posing as those.  Because that would then compromise your security from then on.



STEVE:  Sure.



LEO:  Yeah.



STEVE:  Well, now, there is one really interesting trick to this whole thing, and that is about the bit-length because, you know, these hashes are long in terms of bits.  I mean, obviously we�re used to talking about long bits.  But there is an interesting and, I think, really sort of fun and fascinating attack on signed documents.  If the person generating the document has no control over what they�re signing, then they�re not vulnerable to something that�s known as the �birthday attack� on hashing.  But say, for example, that somebody wanted to trick somebody into signing a contract that was not in their favor.  It turns out that it�s easier to do than you might expect.



First of all, let�s step back a little bit.  There�s a well-known sort of statistical surprise known as the, what is it, the birthday puzzle or...



LEO:  Oh, yeah, yeah.



STEVE:  ...birthday � the idea is, the question is, how many people would have to be in a room for one of them to have the same birthday as you?



LEO:  No, two people to have the same birthday.  Not necessarily as you.



STEVE:  I know, I know.



LEO:  Okay, okay.



STEVE:  I�m doing this on purpose.



LEO:  Oh, all right.



STEVE:  So how many people have to be in the room to have the same birthday as you?  Turns out that�s a lot of people.  And remember, of course, we have 365 days in the year.  So it turns out that you need 253 people in the room for the chance to be greater than 50/50 that one of them will share your birthday.



LEO:  That makes sense.  That makes sense.



STEVE:  It does.  It sounds about right.



LEO:  And if it were 365 people, it would be almost a certainty.  Well, maybe not.



STEVE:  Well, no, because they might have a common birthday.



LEO:  They might have duplicates; right.  That�s right,�yeah.



STEVE:  But it turns out that 253 is the magic number of people where it�s more than 50/50 that they�re going to have the same birthday as you.  The surprise is when you ask the question, how many people do you have to have in the room for any two of them to share the same birthday, and there the number is 23.  And the reason is, if you have 23 people, you have 253 pairs.  So it�s the same 253, but instead of me insisting that someone have my birthday, it�s, okay, what�s the chance of a birthday collision?



LEO:  Right.



STEVE:  And that�s the key, the birthday collision between any two people.  It turns out that the same kind of thing can be used in order to create fraudulent fingerprints using one-way hashes, using cryptographic hashes.  The way that would work is, say that I was hashing, and I had a hash that only produced a 64-bit key.  Well, I�m saying �only.�  But, I mean, 64 bits, that�s a lot of keys.  Since 32 bits is 4�billion, which is to say four with nine zeroes, 64 bits is that many squared.  So that�s going to be 16 billion billion possible hashes, which is to say 16 followed by 18 zeroes.  Okay, I mean, that�s just a lot.  So the chance � say that you only had a hash with 64 bits.  The chance of two different contracts having the same fingerprint, the same cryptographic hash, would be one in 16 with 18 zeroes.  I mean, just diminishingly small.  There�s just no chance you�re going to have, like, a good contract and an evil contract that are going to have the same hash.



But if you�re able to prepare both contracts, you could make small changes to each of them, like adding a space at the end of a line or putting two spaces after a period.  That is, you make tiny changes to both of them, checking to see whether they have the same keys.  That is, it�s very much like the birthday attack, where you�re not saying I want my evil contract to match the fingerprint of my good contract.  Instead you�re saying I�m going to make a bunch of different evil contracts and a bunch of different good contracts.  And I�m going to look for any collision of the hashes between them.  And it turns out that is far more probable.



LEO:  Really.



STEVE:  Just like having many people in the room comparing their birthdays, where anyone who has a birthday collision gives you success.  What this allows you to do, for the same reason of much lower probability � I�m sorry, much higher probability of the collision occurring, this allows you to prepare two contracts, a good one and a bad one, where they�re going to have the same fingerprint.  So say that I produce two contracts like this.  I then get someone to cryptographically sign it.  Later I can come along and claim that they signed the evil contract because it has the same fingerprint.  And any judge who understood cryptography would have to accept the fact that the evil one was signed.



LEO:  Wow.



STEVE:  And it turns out that the number you need is half of the bit length, that is, 2 to the 32.



LEO:  That still seems a lot.



STEVE:  That�s 4 billion.  But it turns out that, since you�re just doing a forward hash, and you�re making small changes each time, it doesn�t take that long to produce that many different contracts.  And the chance is greater than 50/50, if you do that with both of them, you�re going to find a collision and be able to produce basically a fraudulent hash.  And that�s why hashes are much longer than that.  That�s why they�re 128 bits or 160 bits and even more now because it turns out, if you have control of both sources, then there is this chance for being fraudulent.  Now, this is, for example, not a problem downloading a file because no hacker will have produced the good file and a bad file unless, you know, they were really, really clever.  But in any case these hashes, even the smallest hash in common use today is 128 bits, which means you would have to produce 2 to the 64 sets of hashes of the good file and the bad file, 2 to the 64.  Now we�re back up at, you know, 24 zeroes on the end of the number.  So we�re really safe.



LEO:  People might say, well, even the 4 billion sounds like a lot.  But with computers � it�s not 4 billion, first of all.  But with computers you can do this quite quickly, I would imagine.



STEVE:  Right.



LEO:  It�s a form of brute-force attack.



STEVE:  Right.



LEO:  Wow, that�s interesting.  I didn�t know that.



STEVE:  So, yeah, it�s an interesting way that what looks like a very secure hash can be defeated, if you have control over generating both the good and the bad.  There is, you know, because of this birthday collision there is a chance to, I mean, still it�s a huge amount of work.  But if the hash is too short, you end up needing less work than you would expect.  So you just need to make sure you�re using long hashes.  And everything today does.



LEO:  So, Steve, that�s why there�s so much gobbledygook at the end of my messages.  And I don�t want to hear any more complaints about it.  It�s for security.  Does it really bug you that all that stuff�s in my messages?



STEVE:  No, no.  I tune it out.



LEO:  You tune it out.



STEVE:  I tune it out.



LEO:  But fortunately, if you have the right software on your computer, it doesn�t tune it out, and it says �Verified.  This came from Leo.�



STEVE:  So this is the final piece of our puzzle.  There�s really no need to spend a whole episode talking about cryptographic random numbers.  We�ve talked about the idea of the need for generating really random numbers.  For example, we mentioned it last week when we were talking about choosing a really good random number or pseudorandom number, unpredictable, unguessable at least, and then using that as your symmetric key for your bulk encryption, and then using public key cryptography to encrypt it, in order to allow a non-secure channel to deliver that encrypted symmetric key and then decrypt it.  So basically we�ve got symmetric block ciphers.  We�ve got asymmetric block � I�m sorry.  Symmetric block ciphers, symmetric stream ciphers, asymmetric ciphers which are block ciphers, cryptographic hashes, and cryptographic random number generation.  That�s sort of the suite of our fundamental algorithms that allow us to do all kinds of cool stuff.  And week after next we�re going to look at all the different ways these five building blocks can be pieced together in order to solve all the common problems of cryptography.



LEO:  It�s really fascinating.  You know, it�s kind of spy stuff, and yet it�s very practical.  And it�s kind of elegant and mathematical, too.  It�s really been fun.



STEVE:  And anybody who uses the web, you know, now you know what the MD5 is when you see them on download sites.  And anyone who establishes a secure connection to a server is using symmetric and asymmetric ciphers.  In fact, those certificates are signed � and we�re going to talk about certificate signing week after next, after next week�s Q&A episode.  And, you know, it�s using hashing in order to put all this stuff together.



LEO:  So cool.  So neat.  Wow.  And so next week we will do the question-and-answer session.



STEVE:  Yup.  Number 36.



LEO:  And then we�ll be back and talk a little bit about practical applications, which is always fascinating, too.  But now you have the fundamentals.



STEVE:  We have all the building blocks in place.



LEO:  I want to thank our good friends at Astaro for � and I mispronounced their name last week, and I apologize.  Astaro.com, Astaro Internet Security, their hardware and software solutions.  And by the way, don�t forget there is a free version for home use to protect up to 10 IP addresses.  And this is very cool.  Basically it�s open source.  You can add it to an old PC, put a second Ethernet card in, and you�ve got an industrial-strength, stateful packet firewall.  You�ve got VPN for both PPTP, the Windows VPN, but also IPSec.  You get intrusion detection and protection.  And you can even add a very powerful AV and content and spam filtering for as little as 79 euros a year.  It�s all free, but then the antivirus on top of that.  For more information, www.astaro.com.  And thanks to our friends at America Online for providing us with the bandwidth for this podcast, of course AOL.com/podcasting.  For more information about the topics we cover on Security Now!, visit Steve�s site, GRC.com/securitynow.htm.



Somebody said, �I�m confused, there�s two show notes.�  I put some links sometimes on my page.  But really the main show notes are on your page, Steve.  That�s where you�ll find also transcripts, 16KB versions for the bandwidth-impaired, and let�s not forget SpinRite, which really is Steve�s sponsor.



STEVE:  It is.  It is the sponsor of GRC and my website and our bandwidth and all my time, yeah.



LEO:  Keeps him in ham sandwiches.  So if you have a problem with your hard drive, it�s the ultimate disk maintenance and recovery tool.  SpinRite.info for testimonials.  GRC.com is the other place to go.  And that�s a good place for ShieldsUP!.  And you�re still developing, I know, your freeware, your security freeware like DCOMbobulator, UnPlug n' Pray.  You�ve got a new one in the works, don�t you?



STEVE:  Actually I�m working right now, I�ve been coding all week.  GRC will shortly have a brand new feature, the first brand new feature sort of service that we�ve offered in years.  It�s something I�ve wanted to do.  And in fact, Leo, I�m getting it ready because I want to introduce it on the �Call for Help� show up in Toronto next week.



LEO:  Oh, cool.



STEVE:  Or week after next, rather.



LEO:  Good.  So watch �Call for Help,� if you�re lucky enough to be able to get it.  Otherwise we�ll mention it.



STEVE:  We definitely will in two weeks, yeah.



LEO:  Yeah, yeah.  Thanks, Steve.  We�ll see you next week for our Q&A segment.



STEVE:  Great.



LEO:  I�m Leo Laporte.  Thanks for joining us.  We�ll see you next Thursday on Security Now!.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#36

DATE:		April 20, 2006

TITLE:		Listener Feedback Q&A #6

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-036.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and Steve discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous�installments, and present real world �application notes� for any of the security technologies they have previously discussed.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 36 for April 20, 2006:  One Dozen Questions.  Bandwidth for the TWiT Network is provided by AOL Radio at AOL.com/podcasting.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at�www.astaro.com.



Yes, it�s time once again to plumb the depths of the dark side of the �Net � security, viruses, spyware � with the man who invented the term �spyware,� coined it or first discovered it, Mr. Steve Gibson.  Hello, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be back.



LEO:  We�ve been having so much fun.  And here we are in our 36th episode.



STEVE:  Wow.



LEO:  I know.  It�s been more than half a year of talking about security issues.  Sometimes timely, but a lot of times really kind of education.  We�ve just completed a big series on crypto, which has been great.



STEVE:  Yup.  And in fact next week we�re going to talk about the applications, all of the ways those five basic building blocks of cryptography can be assembled in order to achieve the things that people really need to get done with security on the �Net.



LEO:  But as usual every fourth episode � our modulus 4 episodes, as we call them, since this is 36 � we answer your questions.  And Steve�s got a lot.  We�ve got a dozen, an even dozen questions today.  Actually really a baker�s dozen because, like most good programmers, you start with question zero.  And that�s James from Auckland, New Zealand, who wrote to us with a real-world WPA cracking experience.  WPA is the encryption technology you recommend for Wi-Fi base stations.



STEVE:  Yup.



LEO:  In fact, you said it�s the only safe way to protect your Wi-Fi.  But James said:  This morning � I won�t do this in a Kiwi accent.  I�ll leave that to your imagination.  This morning at a security seminar I attended there was a demonstration on cracking a WPA preshared key, which took me a bit by surprise.  I remember you were talking about WPA and how it was virtually unbreakable, provided a strong key was used.  What I didn�t know was how easy it was, with the right knowledge, to brute-force a weak PSK � pre-shared key.  For this demonstration the presenter used Linux and a few freeware tools like Kismet, Aireplay, Ethereal, and coWPAtty.  I love that name.  He showed us how it�s possible to capture data from the four-way handshake at the start of a session by sending 12 packets masquerading as originating from the access point to a station that basically blips the connection for a fraction of a second, causing the station to reinitiate � and this is the key, the four-way handshake.  The exchanged EAPOL packets were captured by Ethereal, analyzed in another program, where the preshared key � in this case a really dumb one, 12345678 � was found in about, get this, 60 seconds.  The whole process took less than five minutes.  I just thought that was interesting, an extension and practical demonstration as to what you were talking about regarding WPA and the need for really actually good random passwords.



STEVE:  Well, you know, James posted this, and I was delighted to see it because it basically says everything we talked about when we were covering our Wi-Fi stuff, that is, even mentioning that an existing connection could be induced to reestablish, reauthenticate itself to the access point that would allow somebody who wasn�t there at the beginning to capture the credentials; and then also how WPA, the best encryption you can get for Wi-Fi right now, how WPA is prone to an offline attack.  And that�s exactly what James described, where Ethereal was used to capture that transaction, and then offline the machine cranked on it.  And because it was such a dumb password � I mean, they used 12345678 � it didn�t take it long to try 12345678 offline and see that the resulting credentials matched up.  And that allowed them then to access, basically decrypt all of the conversation that they had been recording in the past and in the future.



LEO:  And really 22345768 wouldn�t have been that much harder.  Besides being nonrandom, it�s really short.



STEVE:  Yeah.  And again, it�s why I�ve got my passwords page at GRC.com.  If people just go to GRC.com/passwords, my server generates really, really good WPA-qualified passwords.  And, I mean, you can�t type them in.  You�ve just got to cut and copy and paste them.  But, you know, nobody will ever get them.



LEO:  They�re, what, 64 characters long?



STEVE:  63, actually.



LEO:  63.  So that�s as long as you can be.  And if you have�totally random 63 characters, brute-forcing that is next to impossible.



STEVE:  It�s just not going to happen.



LEO:  Nathan Clark of Allendale, Michigan, has been pondering public key cryptography and asks:  After listening to Security Now! 34, Steve, couple of episodes ago, I don�t understand why it�s not possible for the private key to be inferred from the public key.  I mean, why is it someone couldn�t encrypt something with a public key, then try to decrypt it with every possible option?  I realize it would take a long time, but is the reason it�s impossible because it would take an unrealistic amount of time, or is it impossible for some other reason?



STEVE:  No...



LEO:  That�s a good question.



STEVE:  I really like that question.  It is absolutely possible to do that.  But these public and private keys are, like, 1,024 bits long.  I mean, they are really, really long.  And it�s necessary, I mean, you know, we�re used to as a society now talking about the existence of galaxies and, you know, how long the universe has existed.  I mean, you know, we�ve sort of become inured to really, really large quantities.  But 2 to the 1,024 bits is an insanely large number of possible combinations.  And so yes, it would be possible, as Nathan suggests, to try every possible private key, making up private keys.  But you just, you know, you would be dead before you made much headway at all.



LEO:  This is pretty closely related to the previous question, then.  Its randomness, of course, is important.  But really length combined with randomness is what gives you an imperviable key.



STEVE:  Well, but I think we�ve got a question here today that talks a little bit about that.  So we�re on our way toward that.



LEO:  Good.  Doug from New York writes:  Since both of you, myself included, use Skype � we�re using Skype right now...



STEVE:  Yup.



LEO:  ...after several failed experiments with other clients.



STEVE:  We keep coming back, Leo.



LEO:  Skype seems to work the best.  We�ve tried a number of different things, including � Ventrilo sounded really good, but the lag was killing us.  Skype is just � it sounds pretty good, and there�s just no lag.  Anyway, he says, is there any truth to the fact that our bandwidth is being stolen, stolen by Skype, even when we�re disconnected?  I�ve read reports that this is not uncommon if you�re not behind a NAT.  What about when we�re behind a NAT?  Personally, I have not noticed any slowdown in my day-to-day activities.  But would I notice anything unusual?  He�s talking about the fact that Skype is a peer-to-peer application.



STEVE:  Well, actually it�s a little worse than that.  Skype is peer-to-peer, so that, for example, you and I have UDP Internet traffic going directly between us.  But actually that�s because I have given Skype a fixed port that it can use to forward traffic through.  Otherwise...



LEO:  Oh, should I do that, too?



STEVE:  Well, no, because you�ve got a more well-behaved NAT router.



LEO:  Oh.



STEVE:  I�ve got a misbehaving NAT router which technically is a little more secure, but it doesn�t make a big difference one way or the other.  But the only reason you and I are able to go direct is that I have established a fixed port for Skype to use.  What happens for most users is�� and this is an annoyance with Skype.  If they�re behind some older routers, for example, if I hadn�t done this, then Skype will use someone else�s copy that happens to be running and is logged into the Skype network as a forwarder.  That is, they...



LEO:  This is the so-called �supernode.�



STEVE:  The supernode, yes.  And there�s no way to turn it off.  There�s no way to tell it in the options not to do this.  It simply, if you�ve got a computer not behind a NAT router � well, of course, in that case you pretty much deserve what you�re going to get � or also not behind a firewall, then, that is, if you�ve got a machine which is able to accept unsolicited connections into Skype, the Skype network determines that, and it will use your computer and your bandwidth to forward other people�s conversations.



LEO:  Does the whole conversation go through you, or just a�handshake?



STEVE:  No, the entire conversation.



LEO:  Oh.



STEVE:  And so the reason it doesn�t work for you and me, Leo, is suddenly then we get quality degradation.  And basically, instead of going point-to-point, we�re going through that third party, they didn�t give us permission, and the latency of our packets is increased also.  So, you know, what I liked about Google Talk was that they used their own servers in the case that they were unable to do a direct peer-to-peer connection.  Skype doesn�t.  They use unsuspecting users� computer.



LEO:  But again, only if you don�t have a firewall or you�re not behind a router because they can�t � that�s the whole point.  They�re kind of fixing a problem with people behind routers and firewalls.



STEVE:  Right.  So the idea would be that both of us would make an outbound connection to that third party, and that would allow our traffic in order to go back and forth instead of doing NAT traversal.



LEO:  So when I configure � when I set people up for TWiT or some of the other podcasts, I should ask them if they�re behind a router.  And if they�re not, I should say turn on your firewall?



STEVE:  You really, yeah, you ought to make sure they�re behind a router.  Now, one thing you could do, Leo, that hadn�t occurred to me, you might not, you know, because you and I have been talking about Skype, and you were saying that it works well with us, but you�ve had some...



LEO:  Not with everybody.



STEVE:  ...problems using it with everybody else, if you did establish static port-forwarding and assigned a port to Skype, much as I have � see, I�ve done it in order for you and me...



LEO:  Right.



STEVE:  ...to have a direct connection.  That would guarantee that you had a direct connection with anybody else who you were Skyping with.



LEO:  So I should probably do � and it�s something I can do locally that would fix everything generally.



STEVE:  For everybody else, yeah.



LEO:  Is that in the advanced � where is that?



STEVE:  It�s in there.



LEO:  I�ll have to find it.  So I can � probably under �connection.�  Yeah, there it is.  So by default it uses port 42868, it looks like, but I could change that.



STEVE:  You definitely don�t want to use the default.



LEO:  Right.



STEVE:  You never want to...



LEO:  It says here use port 80 and 443 as alternatives for incoming connections.



STEVE:  That�s something different.



LEO:  That�s for secure � that�s...



STEVE:  Yeah.  So for what it�s worth, if we do have people who are using Skype who are finding that the quality is less than, for example, you and I get, Leo, they could establish static port-forwarding, but they�re not going to want to leave Skype running all the time...



LEO:  Right.



STEVE:  ...or they�ll find that it ends up being a server for other people.



LEO:  Oh.  So if you use � okay.  But that�s only because they don�t have a router.  If you use static port-forwarding as you are, Steve, that doesn�t mean you�re getting used.



STEVE:  I don�t know because I never leave it running.  I start it...



LEO:  You�ll never find out.



STEVE:  Yup.



LEO:  Well, that�s good.  I mean, it�s not a security issue as long as Skype is secure.  But it�s something good to know.



STEVE:  Yeah.



LEO:  And I think I�m going to change � so is there a port you recommend?  I guess it doesn�t really matter.  I could use 428 something.



STEVE:  We can�t say it on the air.



LEO:  Right, we won�t say what you�re using.



STEVE:  The whole point is you just generate some random number greater than 1,024, less than 65535, pick it, and set up port-forwarding.  And I�ll bet you that really solves your Skype problem with other people.



LEO:  And I don�t have to tell you ahead of time.



STEVE:  I don�t ever want to know.



LEO:  And I don�t want to know yours, either, so there.



STEVE:  I mean, I could sniff our traffic, and I could see which port it was going to.



LEO:  Well, how do we then make a connection?



STEVE:  Same way.  It just figures it all out.



LEO:  It does � that goes through some server, the Skype central server.



STEVE:  Yes.  Yeah, there is the, you know, we�re both logged onto a server...



LEO:  Yes.



STEVE:  ...in order for this thing to all work.



LEO:  And the central server knows our unique weirdo ports, and it handles that.



STEVE:  Yup.



LEO:  Very interesting.  Jay Martin, Florence, Alabama, asks:  I have a question about the time it takes to decrypt various bit encryptions.  You give a certain amount of time for how long it would take to brute-force decrypt a password.  My question is, would your estimation of time consider the actual successful password decryption is the last one tried?  I mean, what if by chance the brute-force decryption utility chose the correct password in the first short period into the process?  Which is why you don�t use 1111111 as a password.  I understand this is still real strong security, but should this not be considered?  What is he asking?  I�m not sure what he�s asking.



STEVE:  Well, it�s really interesting, and it�s a very good point.  It�s that, you know, we�re dealing with statistics.  And the idea was, when we have a certain bit length, then we�re going to be trying different � for example, using symmetric encryption.  We have a 128-bit key.  Well, one of those 128-bit combinations is the right key.  Only one of them.  So he was saying, what if you hit that right off the�bat?



LEO:  What if you guessed it?



STEVE:  What if you guessed right?  And he�s exactly right.  You would crack it in a heartbeat.



LEO:  But people don�t try because they figure, well, chances are it�s not going to be the first one or the second or the third or the hundred-thousandth or the millionth.



STEVE:  And again there are, even though we talk very glibly about 128 bits, if you raise 2 to the 128 power, that�s how many possible combinations there are.  The proper key is, in fact, hiding amid all of those.  So it is there somewhere.  But it�s the fact that the chance of guessing it is so vanishingly small that everyone considers this to be safe.



LEO:  People don�t spend time looking for needles in haystacks, even though they might just happen to look right at it the minute...



STEVE:  Very small needle or very large haystack.



LEO:  ...they look.  I suppose, though, it means you probably wouldn�t want 0000 � 128 zeroes would not be a good password.  But you don�t get to choose that.



STEVE:  I don�t think anyone would start � I don�t know, like, what algorithm you would choose.  Okay, I just did the math here.  We�re talking 3.4 times 10 to the 38.



LEO:  Wow.



STEVE:  I mean, 3,4 and then 37 zeroes.  That�s how many there are.  So assuming that we�ve just chosen one at random, you know, good luck brute-forcing all of those.



LEO:  Although, as you pointed out last week in the birthday thing, I mean, the chances are that it�s not the last number you�d try.  It�s somewhere in the middle of there; right?



STEVE:  Right.  You don�t have to try them all.  You would normally have to try half of them.



LEO:  Right.



STEVE:  In order to get there.



LEO:  John Whiting of Rotherham, Yorkshire � let�s just say Yorkshire, U.K. � asks:  I started to research digital IDs, ready to experiment with email signing and encryption between my friends and me.  Trouble is...



STEVE:  See, Leo, you�ve got people doing this now.



LEO:  Good, good.



STEVE:  Yeah.



LEO:  Trouble is, you have to register and pay for most IDs.  Hmm.  Well, okay, I�ll address that.  Seems Komodo is free for one year.  Can I just manufacture my own keys to share and use with friends and relatives?  Ooh, this brings up a really � this brings up a whole issue of trust.  That�s fascinating.   Would I use...



STEVE:  I put this in here for you, Leo.



LEO:  Yeah.  Would I use a key generator, like your perfect password generator?  Are there are free, reliable digital ID services out there?



STEVE:  This one�s yours.



LEO:  Well, when you install programs like PGP, which is free � there�s a free version.  I recommend the GNU Privacy Guard, which is gnupg.org.  That�s absolutely free and open source.  It generates a key.  But he raises a very important issue, which is only you at this point have asserted that this is your key.



STEVE:  Right.



LEO:  And, you know, I could create a key that said Steve Gibson and assert that that�s your key.  So the way that they make these keys reliable is through something called �signing,� or �trust.�  It�s the chain of trust.  In fact, there are people who have, and from time to time you might go to one of these, PGP key signing parties, where they�ll go, and you�ll be there with your driver�s license or your passport or some ID, and they�ll sign your keys.  And of course the more people who have signed your key to say, yes, I know this is John, and this is his key, the more trusted your key will be.



STEVE:  And of course in this mode it�s called a �web of trust.�



LEO:  Web of trust, that�s right, yeah.



STEVE:  Because we have a whole bunch of people.  And the idea being that, you know, we build up a web of trust because everyone has proven their identity to each other in a large network, and so that, as a network, it carries some weight.  As opposed to, for example, buying a credential from Komodo, for example, as he cites, where then you are going through some process to prove that you are who you�are.



LEO:  That�s what they call �third-party signing,� or �trusted third-party signing.�



STEVE:  Exactly.  And that�s what we�ll be talking about next week.



LEO:  And that does cost you generally, although Thawte for a while, until Thawte was bought by VeriSign, offered free email certificates.



STEVE:  Yup.



LEO:  And I imagine you can still get free email certificates somewhere.  And that one is verified in the sense that they mail you the certificate, and you have to validate that, you know, you have to say, yes, I got this mail, I got it at this address.  That at least validates that that address is yours, although, I mean, it�s still conceivable that somebody could spoof it, do some sort of man-in-the-middle attack, intercept your email and say, yes, I got that at that address.  So really, I mean, it�s only slightly more trusted.  If you get a key from the key servers, there�ll be a degree of trust in there.  And you can, by the way, if you correspond with somebody and you know it�s them, you�re pretty sure it�s them, you can sign their key.  You can go online and sign their key and say, yes, I want to validate that I know this is who it says it is.  And so that�s...



STEVE:  Right.



LEO:  There�s a trust database.  You know, I think it�s a really beautiful system, but that is a flaw, isn�t it.



STEVE:  Yes.  Somewhere, ultimately, no matter how far back you go, somewhere there is something you are relying on.



LEO:  Right.



STEVE:  So, you know, even, for example, web certificates, when we get SSL certificates in order to establish secure web communications � and I have to do this every two years for, for example, GRC, in order to allow people to connect securely to my server � I�m going through some hoops.  They check my Dun & Bradstreet, phone, fax, address, you know, I mean, there is some process that I go through to assert that I am Steve Gibson, Gibson Research Corporation, GRC.com.  Then I get this certificate.  But, you know, it�s not an absolutely foolproof process.  So at some level, something needs to be trusted.



LEO:  Yeah.  This is why I don�t update my key or change my key frequently, because if somebody, you know, by now I�ve been using my key long enough, it�s signed by a lot of people, so you know it�s...



STEVE:  Right.



LEO:  You know it�s fairly trusted.  Vincent Ragosta, writing from Pittsburgh, PA, wonders:  Why are there nonroutable IP addresses, why, why, why, in the middle of my traceroute output?  In fact, how could it get there?  Does this indicate my ISP is performing NAT routing?  If the ISP is performing NAT routing, how am I routing?  How am I able to run servers that are accessible from the Internet?  So I guess he�s doing a traceroute, and he�s seeing things like 10. or 192.168 addresses.



STEVE:  Right, right.  And in fact I�ve seen that myself.  If I�ve done tracerouting through my Cox cable modem connection, I�ll see a few IPs that are public, and suddenly it, like, falls into this 10. space where it goes, you know, maybe five or six hops into 10., and then it comes back out into the public space.  This is commonly done by large ISPs because they don�t want to burn up or consume their public IP space.  Those public IPs are the only way that they�re able to offer those IPs.  So if an ISP�s got lots of network gear internally, they may use nonroutable IPs, you know, the 10. or 172 or 192.168 space, just in order to, like, identify their routers internally to each other, so they�re able to move traffic among them.  But once the traffic then crosses back out into the public space, of course, it returns to a well-known public IP.  So this does not mean that the ISP is necessarily using NAT routing.  It doesn�t mean that they�re not for sure.  But what it really is is just a way for the ISP to be conserving their use of what is a relatively scarce resource, namely public IPs.



LEO:  Yeah.



STEVE:  They don�t want to burn them up on their own equipment.  They want to make them available to their customers.



LEO:  But how does it route if it�s this private address?



STEVE:  Well, the idea is that the equipment inside has routing tables...



LEO:  Oh, it knows.



STEVE:  Exactly.  It knows, hey, we�re sending this off to our Albany office or off to our San Francisco office.  And, you know, that�s a 10. something, and San Francisco is a 10. something else.  So the internal routing tables know how to get the packets within their internal space back toward their destination, and at which point the packets then cross into the outside world.



LEO:  Okay, that makes sense.  He asks, how am I able to run servers?  Well, that�s not an issue because the traffic just�� their local routers are doing the handoff.



STEVE:  Right.  And in fact we may remember that four weeks ago we did answer a question similar to this.  Some guy had his ISP delivering private IP space to him, 192.168.



LEO:  Right, right.



STEVE:  And he wanted to run a router � I mean a server, excuse me � but he couldn�t because he didn�t have a public IP from his ISP.  His ISP actually had him behind their own big NAT router.  And I have seen this before.  But that is not the case if an ISP is simply using private IP space internally, and many do.



LEO:  Robin Robertson of Roanoke, Virginia, asks:  I�m curious about LogMeIn.com.  If I�m at a public Wi-Fi hotspot and use my laptop to access my home desktop via LogMeIn, which is a remote-access solution, then surf the Internet through my desktop, am I safe?  I�m probably confused, but I think their take on UDP is the opposite of what I heard you discuss on Security Now!.



STEVE:  Okay.  Well, LogMeIn is a little bit like GoToMyPC in that it establishes a secure connection to their servers, and then they will connect to something that you�ve got running at home.  So essentially you�re securely connecting to them, and your home system is also connecting to them.  And so the LogMeIn server, very much like GoToMyPC, creates this bridge that allows you from, for example, a public WiFi spot to connect to your home desktop.  So the question, am I secure, well, you�re secure in your traffic out of the danger zone, which is the public Wi-Fi hotspot, or, for example, if you were using LogMeIn in a hotel to get to the LogMeIn servers.  And that�s really what you�re trying to achieve with this.  You�re trying to get your traffic out of an area where it is in danger.



Now, if you then connect to your home system and use the Internet from there, well, then, your traffic is unencrypted as normal Internet traffic is, for example, you know, standard POP or IMAP mail and web surfing and so forth, unless you are using an SSL connection.  So it�s sort of a combination answer.  The area of greatest danger, where you�re in Wi-Fi or hotel, in any kind of a public setting, that�s encrypted, and so you�re safe.  But in general, once you�ve left that encrypted tunnel, then your traffic is available just like everyone�s is on the Internet.



LEO:  So you�re exactly as safe as you would be at home.



STEVE:  That says it in, what, five words, yes.



LEO:  No more, no less.  John in Australia believes that his SSL connections are not safe.  Uh-oh.  He says:  I had the misfortune to be hijacked through crypto.  My details were grabbed.  And when I see an encrypted page, the hackers also see what I am seeing.  Any suggestions on how they�re doing it?  I�ve tried using XP and Linux, and it still happens.  Perplexed, since you say it can�t be done.  Now, I get variations of this question all the time on my radio show.  And I think it�s just people who are confused.



STEVE:  I put this in here because I, too, have seen the question.  And I�m confused by the question.  He says he�s used both XP and Linux, and it still happens.  Unfortunately, we don�t know exactly what �it� is.  He says that hackers are able to see what he sees.  So...



LEO:  I don�t know how he would know that.



STEVE:  Exactly.



LEO:  So what we would really ask is what are the symptoms of this.



STEVE:  Yeah.  My first thought was that, if there were something evil installed on his machine...



LEO:  Right.



STEVE:  ...then, for example, a keystroke sniffer or something running on the machine, then that would be a way of there being a problem.  The fact that he says he�s tried it with Windows and Linux, though, because he�s got this cross-platform addition, that makes me more skeptical about something evil going on.  The fact is, as far as anyone knows, SSL connections are themselves really secure.



LEO:  If you�re being spied upon, it�s not because they�re cracking into that connection.



STEVE:  Now, there is an exception, though, which is the other reason I put this question in here today, because when you connect to a remote server you are accepting the credentials of the server, which has been signed by someone who signed their certificate, like we were talking about briefly before, about VeriSign, for example, signing GRC�s certificate.  Some corporations do want to proxy and filter and literally basically decrypt and be able to read their employees� encrypted traffic.  So what they do is they run a proxy server in their corporate environment, which has a certificate.  And every browser in the company has been told to trust that certificate.  So essentially the encrypted traffic is decrypted at the corporate border.



LEO:  Ooh.



STEVE:  Yes.



LEO:  That�s sneaky.



STEVE:  It�s decrypted at the corporate border and then, essentially, filtered, proxied, checked for spyware, or even for naughty content.  I mean, they could do anything they want to once they�ve got your connection decrypted.  Then it is reencrypted using a certificate that every corporate browser has been deliberately installed with in order for the browser not to complain.  So employees may believe they have encrypted and secure SSL connections, when in fact it is being decrypted in, you know, en route, essentially, you know, by their corporate firewall or IT staff or proxy server for whatever corporate reasons.



LEO:  Wow, is that sneaky.  Oh, wow.  You know, it�s hard to tell what he�s talking about.  He may have been phished.  And in that case, you know, you�re not on the site you think you�re on.



STEVE:  Right.



LEO:  So that could be what�s going on, too.



STEVE:  Right.



LEO:  We can�t really tell from the question what�s going on.  But the bottom line is SSL, real SSL, is secure.



STEVE:  Exactly.  If the endpoints are authenticated � and, you know, I keep using the A word, authentication, authentication, authentication.  That�s the key for so much of what glues this together.



LEO:  Mike Smith writes from nearby Los Angeles:  Steve has indicated several times he doesn�t have a virus scanner installed in his Windows-based computer.  Why is that?  Is the performance improvement that much significant over running with virus scanning on?  Or is it just because you�re a macho tech guy who can spot dangerous email attachments from a mile away?  Or have virus scanners essentially become obsolete since the days of everybody sharing floppy disks?  Besides email attachments and Outlook email scripts, how do most viruses get on PCs nowadays?



STEVE:  Well, I...



LEO:  I should, by the way, say I don�t run � in general I don�t run an antivirus either.  Or a firewall.



STEVE:  I know, Leo, neither you or I do.  And I...



LEO:  And most security experts I know don�t.



STEVE:  I know.  And so here we are telling everyone run antivirus, yet we don�t do it ourselves.  No force on earth could make me open an attachment I receive in email.



LEO:  Period.



STEVE:  I mean, period.  Really.  It just doesn�t happen.  I just � I know who�s writing me email.  I know when I�m expecting something.  You know, you and I will talk, Leo, and I�ll, like, send you a DOC file, you know it came from me, you know...



LEO:  You know, I did, I opened this Microsoft Word document that you just sent me.  Boy, I trust you.



STEVE:  Yeah.  And so, I mean, that�s what it�s about.  But other stuff, I mean, I�ve never had a virus infection on my machine except once when I was doing some virus research, and I was sloppy, and it happened to me.  But in that case I was running on, you know, on a red machine, on a deliberate viral research machine, not connected to anything else.  So I was prepared for that happening.  But I recommend people run antivirus if they want to run antivirus because certainly they�re useful, they can catch bad things.  And Lord knows, I mean, I�m seeing email that is full of this junk all the time.  I just don�t touch it.



LEO:  Steve�s a trained professional.  Don�t try this at home.  By the way, there�s another vector.  You mentioned attachments, but there�s another vector for viruses that, in fact, is very common.  But you�re not susceptible to that, either:  HTML email.



STEVE:  Right.



LEO:  So if you�re using Outlook or Outlook Express, or Thunderbird, or any email program that does HTML, displays a web page in the preview pane, depending on how patched your Windows is and what exploits there are out there, that�s also a vector of infection and has been in the past.  But Steve rejects, actually rejects HTML email.  I don�t do that, but I just turn off the preview panes.



STEVE:  Well, and I also have my email reader.  I�m still using Eudora.  And one of the options is use the Windows viewer or use a text viewer.  And I just use a text viewer because, again, I don�t need web pages being emailed to me.



LEO:  There�s a third vector, which is less common, of virus infection, and that�s worms, network worms.  How do you avoid those?



STEVE:  Essentially I�m behind a very, very strong firewall.  You know, you and I don�t run personal firewalls, but we�re both behind routers.  I�m behind multiple layers of routers.  And so there�s just no exposed open ports.



LEO:  Right.  In fact, if you ran Windows built-in firewall, even that would be adequate to prevent Sasser and Blaster and Zotob and all these network worms.



STEVE:  Well, and that�s why Windows XP after Service Pack 2 was released has really been doing a much better job.  I mean, the exploits and the security problems we�re seeing now with Windows are coding errors, buffer overflows that are, you know, seem to be in a never-ending stream.  I mean, I�m not that unhappy that Vista has been delayed because it�ll just be a whole new fiesta of security problems.



LEO:  Let�s get it right.



STEVE:  Just like XP was in the beginning.



LEO:  And of course there�s another way that you can get viruses, and that is via floppy.  This is how we used to get, you know, the Michelangelo.



STEVE:  Sneakernet.



LEO:  Yeah, where somebody would accidentally boot to a floppy.  But those days are gone.  I don�t think you see those anymore.  You know, what I would recommend, and I think that � I know you probably don�t do this, Steve.  We don�t run � what we�re saying � what I�m saying, anyway, is I don�t run an email scanner in the background all the time because I do feel that that slows me down, and I know I�m not going to open an attachment.  But I think it�s prudent once a week or once every few weeks to scan with a good antivirus to make sure you haven�t accidentally caught something.



STEVE:  Sure.



LEO:  Do you ever do that?



STEVE:  I have done it in the past when my system has gone a little strange.  I mean, that�s...



LEO:  Just in case.



STEVE:  That�s the key for me is, if something seems weird, then it can cause me to just do a static scan of my system.  The thing that is troubling is that now email has attachments saying �this email scanned by such-and-such,� you know.  It�s like, okay, well, anything that was going to be a virus would just stick that on there.



LEO:  It�s completely meaningless.



STEVE:  Ugh.



LEO:  Just don�t open attachments.  I mean, even if you have an antivirus, it�s just a bad idea.  I mean, what if it�s a virus that just came out, and your antivirus hasn�t got the signatures yet?  And that�s often the case.



STEVE:  Now, I have a friend who runs an embroidery shop that uses computerized embroidery.  And they�re constantly receiving pictures and patterns and data from people they don�t know.  Now, there�s an example of a high-risk environment where it�s reasonable to say, okay, we have to, for our business, open attachments from people we don�t know.  You can imagine, like, you know, any sort of a graphics service is going to have to be doing this, too.  So there they want an isolated computer and do the best job they can of making sure that what they open isn�t able to spread through the network.  And as a matter of fact, these friends of mine are constantly rebuilding their machines because they�re just overrun with viruses.



LEO:  Wow.  You know what I liken it to is the kind of public health recommendations you get.  For instance, there�s a general public health recommendation to not eat too much sodium, to reduce the sodium in your diet.  Well, in fact, the truth is that some people are genetically predisposed to high blood pressure due to salts, and some aren�t.  Some people don�t have to worry about it.  But you�re never going to hear the health experts say some people have to worry and some don�t.  It�s not prudent to say that.  It�s much more prudent to say just avoid salt...



STEVE:  Wherever you can.



LEO:  ...wherever you can.  Because you don�t know, I guess, if you�re susceptible.  So we�re kind of � I would say we�re like health professionals, Steve.  Avoid salt, folks, even if you�re not susceptible.  Mike Smith � I�m sorry, that was Mike.  This is Willem from the Netherlands.  And I do say, by the way, that we have some great listeners in the Netherlands, in Sweden, in the U.K., all over the world, and we just love that.  Willem says:  I just listened to your podcasts about symmetric and asymmetric cryptography.  I�m employed in the field of PKI, SSL, and end-user certificates.  What does PKI stand for?



STEVE:  Public Key Infrastructure.



LEO:  Okay.  So most of the items were quite familiar.  Note:  I�m not an expert on theoretical crypto itself, but I�m more into the usage of PKI in corporate environments.  The kind of things we talked about last week with the signing and things like that, applied crypto.



STEVE:  Yeah, exactly, applied cryptography.



LEO:  There was a part where you talked about SSL, and that for every SSL session a new symmetric key exchange is being done.  Five or six years ago I overheard something about the way Microsoft handles SSL connections.  It seemed that Microsoft, well, IE in particular, does not renegotiate for every session, but caches the session key for a period of time.  That way new sessions establish more quickly from your PC.  On older hardware, of course, this would speed up your browser, but it might impose some security risks.  Comments?



STEVE:  Well, that�s interesting, and it�s a really great question.  It turns out that this so-called �SSL session caching� is part of the spec, and it�s happening to all of us all the time, and it�s not a problem.  To back up a little bit, just to review, the way SSL � Secure Sockets Layer, now called TLS, Transport Layer Security � the way this operates is it uses a public key system to exchange a randomly generated so-called �session key.�  So when your computer, through your browser, wants to connect to a remote web server, they negotiate a random number securely using public key systems, like we talked about last week, and then this creates a so-called �session key,� which they then use for their symmetric encryption, which can be done very quickly.  The problem is that this happens every time an SSL connection is established, that is, the endpoints go through this whole process.



Well, as we talked about before, public key negotiation, the whole asymmetric key system, is a thousand times slower than the bulk symmetric key technology.  So if connections are being set up on a server with, you know, hundreds of thousands of clients, this can be a real problem.  It�s been a problem, in fact, so much that there are hardware accelerators which commercial web systems can employ to move some of this brute-force public key technology into hardware just to accelerate it.



LEO:  So it�s really not to speed up the client computer, it�s to speed up the server.



STEVE:  Well, yes.  It�s because, you know, both ends are doing a lot of work, but the real burden is on the server that is accepting web connections, you know, at tens of thousands per minute from tens of thousands of end users.  But it still is a lot of work.  So in the SSL spec they specifically have this idea of a session ID, which is different from the session key.  And both ends will cache their keys.



So the idea is that, if I�m, for example, contacting Microsoft, and I establish a secure connection to them, we will go through the labor-intensive, time-intensive, public key system to establish a random secure session key.  And we associate that with a session ID.  That is known; the session key is kept private at each end.  So then, if we drop the connection and then soon after reconnect, for example, I click on another link on their secure site, we don�t go through building a whole new session key because we both have the one we obtained before in our own caches.  So we say, hey, how about if we reestablish this session ID?  But since no one else monitoring the connection would have known what that is because we each have it privately, each endpoint is able to say, oh, yeah, sure, let�s keep using that one.  And so, for example, the typical session key expiration is ten hours.  Which may seem like a long time...



LEO:  Yeah, no kidding.



STEVE:  But it�s completely secret to each endpoint.



LEO:  So there�s no security risk at all.



STEVE:  There really is no security risk.  I mean, these keys are long.  They�re 128 bits.  And as we know, that�s 3.4 times 10 to the 38 different combinations.  So, I mean, there�s plenty of combinations, and no one is going to crack that in a short period of time.  And then the keys are always expired after that maximum length of time, and a new key is renegotiated.



LEO:  Matthew in Normal, Illinois, is worried:  I recently heard that the Mozilla Firefox browser plants spyware on your system.  I�m a loyal user of Firefox and was wondering if there�s any truth in this.  I would prefer not to have to switch back to Internet Explorer, but I cannot continue to do this is if it plants spyware on my system.



STEVE:  Well...



LEO:  No.



STEVE:  That was a bit of an urban myth that went around�recently.



LEO:  No, yeah.  I think spread by Microsoft.  I don�t � that�s ridiculous.



STEVE:  Well, actually there was � it was some sort of a weekly spyware newsletter that unfortunately had this as, like, a big, bold headline.  Then the �Register,� that outfit in the U.K., picked it up.



LEO:  Known for their journalistic integrity.



STEVE:  Exactly.  And anyway, it scared a lot of people.  So I wanted to, because I saw this a number of times, I wanted to make sure people knew that this was not the case.  It was just a complete mistaken, you know, basically completely false story.



LEO:  You will get spyware checkers from time to time who�ll report false positives.  Microsoft�s Defender says, for example, that Spybot was � or at least for a while said that Spybot was a piece of spyware.  Of course, it�s not.  It�s a very good anti-spyware program.  And I think that that�s just, you know, false positives.



STEVE:  Well, in fact, one of the reasons that anti-spyware programs often claim that each other are anti-spyware is not any kind of an anti-competitive thing, it�s that sometimes they have to contain the patterns themselves that they�re looking for...



LEO:  So that�s what it�s seeing.



STEVE:  ...in their own code, exactly.  So it�ll see a pattern that it�s looking for and say, wait a minute, this might be spyware, when in fact it is anti-spyware.



LEO:  Now, Matthew might say, well, how can you be sure?  This is how you can be sure.  Firefox is what we call �open source.�  All of the source code, every bit of what Firefox is doing, is available for your download and perusal.  You can look at it.  You can see exactly what it�s doing.  There is no part of it that is not completely exposed and visible.  Now, you may not be able to read the code, but there are plenty of people who can.  And I assure you there are thousands of eyes looking at this.  And if there were the slightest hint of spyware in there, you would know about it.



STEVE:  Yeah.  It would never happen.



LEO:  That�s actually the beauty of an open source program.  You can�t really assert the same thing of a closed-source�program.



STEVE:  Although that does speak to making sure you get your programs from an authoritative source.  For example, if you downloaded your copy of Firefox Mozilla, or Mozilla Firefox, from, you know, some random website somewhere...



LEO:  Oh, that�s a good point.



STEVE:  ...you really then have no knowledge what it really is.  You want to make sure you always return to the source.



LEO:  That�s where those MD5 hashes we were talking about last week come in handy.  You can really validate that that�s real.



STEVE:  Well, exactly.  But again, only if you�re validating against a real MD5.  You could have a bad guy would create the bad MD5 and say, hey, here�s my copy of Firefox.



LEO:  See?



STEVE:  Download it and make sure.



LEO:  Right.



STEVE:  Yeah.



LEO:  In fact, because it�s open source, it would be fairly easy for somebody who was a bad guy to take Mozilla and add spyware code to it.



STEVE:  As a matter of fact, Leo, many people through the years have asked me why I don�t publish the source code for all of my freeware security utilities, and it�s specifically for that reason.  Even though somebody could certainly recreate the look and feel of my stuff � because it�s really pretty simple, they could do it from scratch � I�m certainly not going to help anybody by giving them the source code and then, you know, have fraudulent copies of GRC stuff floating�around.



LEO:  That�s a very good point.  A very attentive listener, Dave Chismon in the U.K., asks:  I have a slight confusion from the episode on asymmetric crypto.  You mentioned that a vulnerability with public key crypto was the chosen text attack, that is, encrypting text with a public key in an attempt to work out the text.  I�m confused.  I thought you said the public key crypto was only used to encrypt the key for a symmetric crypto scheme.  If that�s the case, then the chosen text attack is surely as difficult as brute-forcing the symmetric key, if not harder, as you have to guess every possible key that encrypted.  Well, that�s a good point.



STEVE:  I loved his point.  That�s why I put it in here.  He is absolutely right.  So this is � and so just to restate what he said again, remember that what I stated was that asymmetric crypto had a problem.  Since one of the keys was public, you could potentially use the public key to feed in your own plain text and see what the public key encrypted that to, and then compare that to what somebody�s unknown key had encrypted it to.  I�m sorry, I said that wrong.  You were trying to guess, I�m sorry, you were trying to guess a private key.  And you knew what the private key had encrypted something to, so you would be able to use what�s known as this �chosen plain text attack� in order to feed your own stuff through.  He makes the point that, as we know, we only use asymmetric cryptography to encrypt a symmetric key.  So essentially, where we get confused here is I was talking, not about the dual use of asymmetric and symmetric crypto, which does solve this problem, exactly as David has suggested.  I was sort of stepping back further, earlier in my discussion of just pure asymmetric cryptography, noting that that�s a problem that asymmetric crypto has because one of the keys is known, whereas symmetric cryptography doesn�t have this problem because the symmetric key is always kept private.  I mean, that�s the only way it makes any sense.



LEO:  So really this is an explanation of why PGP and these other crypto techniques use both symmetric and asymmetric.



STEVE:  Well, actually they use both because asymmetric is a thousand times slower.



LEO:  Oh, it�s also speed, yeah, yeah, yeah, right.



STEVE:  So you just can�t afford to use asymmetric crypto on your whole message.  It�s so much faster.



LEO:  Even if you could, it would be open to this plain text cipher cracking method.



STEVE:  Yes, that�s a very good point.  And so the way that�s resolved � and I�ve talked about this also in our asymmetric session � is you add some random stuff to what you�re encrypting.  That way nobody else can encrypt the same thing because they�ll only know, like, the part of what it might be that you are encrypting, not a bunch of other random bits.  And that�ll just completely throw them off the�track.



LEO:  But it�s kind of unnecessary because it is symmetric key we�re using; right?  I mean...



STEVE:  Right.



LEO:  So that even there, there�s no � you cannot use this plain text crack on symmetric encryption.



STEVE:  Because you...



LEO:  Or can you?



STEVE:  You can�t because you don�t ever have the symmetric�key.



LEO:  And that was David�s point.  You needed to have...



STEVE:  Right.



LEO:  Yeah, okay.  Our last question.  Theodore Phillips from Chicago, Illinois, asks:  I now feel like I kind of understand public key cryptography.  Well, except for one thing.  I thought it was also very hard to determine what numbers were prime.  Where does RSA get these two giant prime numbers that it uses?  How does it know if they�re prime?  How does it calculate them on the fly?  I thought that was hard.  Does it have a table with a lot of prime numbers?  Does it go to a prime number warehouse on the web?  While I know there are an infinite number of prime numbers, seems like you�d need a lot of them handy to make this work.  If RSA only had a small pool, well, that would be a security�issue.



STEVE:  Yup, a really good point.  And a lot of people have wondered the same thing.  They�ve wondered, okay, why couldn�t you just, for example, pre-compute a whole bunch of prime numbers?  And if you�re relying on prime numbers being hard to factor, just try factoring with a whole bunch of prime numbers that you�ve figured out ahead of time.  And the reason is there are too many prime numbers to do that.  I mean, it turns out that prime...



LEO:  But how does it find these base prime numbers to make this product of primes?



STEVE:  It actually does compute them.



LEO:  It figures one out, okay.



STEVE:  Yes.  And in fact, when I was � part of the process of setting up OpenVPN, that we will be returning to when we talk about GRC�s OpenVPN Guide, part of the process is you build your own keys.  And you can see it, I mean, I�m using a 3GHz P4 with a gig of RAM, I mean, a really fast machine.  It sits here putting dots on the screen, dot dot dot dot dot�dot...



LEO:  That�s what it�s doing.



STEVE:  ...line after line after line, while it does all the math to come up with its own primes.



LEO:  Right.



STEVE:  So it turns out that, I mean, it�s hard to create primes, but �hard� in this case is a relative term.  You know, it�s harder than adding numbers together, but it�s a problem that has been solved by the crypto guys so that machines are able to generate their own primes.



LEO:  And you�d only have to, you know, you only have to do it once when you�re creating the key.  You don�t do it over and over again.



STEVE:  Exactly.  It�s a one-time thing.  Now, it�s interesting, I also created what�s called a �Diffie-Hellman key pair� as part of this, and there I wanted it to be � I wanted a 2,048-bit key pair.  That�s also part of what OpenVPN uses.  I don�t know how long it took.



LEO:  You went to bed.



STEVE:  It was, like, a day, Leo.



LEO:  Wow.



STEVE:  I mean, it cranked and cranked and cranked.



LEO:  Wow.



STEVE:  So, as you tell it you want longer primes, you�ve got to be prepared to let that computer sit there and cook for a while for it to come up with, you know, its own unique set of prime numbers.



LEO:  I wonder, I mean, you may remember in the early days�of computing we would benchmark with the Eratosthenes�Sieve...



STEVE:  The Sieve of Eratosthenes, yup.



LEO:  Yeah, with the prime number generator.  But, you know,�I doubt � there must be other algorithms for generating primes.



STEVE:  Well, in fact the Wikipedia has a really great page on prime numbers.  So if anyone�s curious about this, go to Wikipedia; or just put �generate prime numbers� into Google, and one of the first links is the link to Wikipedia�s page, where there�s just a ton of really good information about prime numbers.



LEO:  In fact, in general, Wikipedia�s a very good source on�crypto and all of these subjects.  There are a lot of crypto experts who contribute to Wikipedia, and there�s some great material.



STEVE:  Yeah.  I�m very impressed with their pages.



LEO:  Yeah.  They�ve really done a good job.  It�s a very definitive and, I think, reliable encyclopedia, at least in that area, on crypto.  That brings back some memories, the old Sieve of Eratosthenes.  Wow.



STEVE:  And remember the way you do it is you take a big grid that is all full, and then you punch out every other one, then every third one, then every fourth one � well, actually every fourth would have already been punched out by every second.



LEO:  It�s really a brute-force method of finding primes.  You eliminate non-primes.



STEVE:  Yup.  And when you�re all done, you end up with the ones that have not been punched out, or, you know, the ones that weren�t evenly divisible by any of the numbers that came before.



LEO:  Right.  So I guess you�d make, what, a pool of, like, you know, 32,000 numbers and then eliminate them.



STEVE:  Yeah, but we�re dealing � remember that when we�re dealing with, like, 1,024-bit primes...



LEO:  That�s a big prime.



STEVE:  ...and this again, here, well, we know how big it is.  We did the math earlier:  3.4 times 10 to the 38.  So that, I mean, we�re talking, okay, 38 digits, 38 decimal�digits. 



LEO:  Wow.



STEVE:  And there are, I mean, there are that many primes.  So these are really, really big prime numbers, and our technology today has the ability to generate primes that are that size and know that they are primes.



LEO:  Eratosthenes would be proud.  Proud, I tell you.



STEVE:  He�d have a sore finger from punching out all the little holes in his sieve.



LEO:  Steve, we�ve had fun.  This has been great.  I love doing this.  Every fourth episode we answer your questions.  Keep them coming, and keep coming back because another Security Now! next week.  We�re going to continue with crypto.  But this is applied crypto.



STEVE:  This is taking all the components that we�ve discussed in the last four weeks and putting them together in all kinds of neat ways.



LEO:  For more information about our topic, for transcripts, and of course a 16KB version for the bandwidth impaired, visit GRC.com/securitynow.htm � also the home, of course, of Steve�s wonderful SpinRite, the ultimate disk maintenance and recovery utility, pays Steve�s bills.  Visit SpinRite.info for more information.



STEVE:  Well, and more importantly, if you�ve got a computer which is hiccupping, really I would encourage people just to take a look at some of the testimonials...



LEO:  Oh, yeah.



STEVE:  ...at SpinRite.info.  That�ll give people a sense for what SpinRite can do for them.  And then, you know, if�at any time in the future they�re in trouble, consider�SpinRite.



LEO:  Call Steve, GRC.com.  And that�s it for this edition of Security Now!.  We�ll be back next week; I hope you will, too.  For Steve Gibson, I�m Leo Laporte.  We�ll see you next Thursday for Security Now!.



Security Now is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#37

DATE:		April 27, 2006

TITLE:		Crypto Series Wrap-up

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-037.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo conclude their multi-week coverage of the fundamental technologies underlying modern cryptographic systems.� They discuss the number of 512-bit primes (two of which are used to form 1024-bit public keys) and the relative difficulty of performing prime factorizations at various bit lengths.� They discuss the importance of, and solutions to, private key recovery using varying numbers of trustees; and conclude by explaining the need for, and the operation of, security certificates.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 37 for April 27, 2006:  Our Crypto Wrap-up.  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.  Security Now! is brought to you by Astaro Corporation, makers of the Astaro Security Gateway, on the web at Astaro.com.



Hello, Steve Gibson!



STEVE GIBSON:  Leo.  Good to be back.



LEO:  Good � weird to see you.  Actually, I�m sitting across from you.  I never get to do it that way.



STEVE:  Yup, not so often now.



LEO:  It�s fun, though.  I�m glad you�re up here in Toronto.  We�re recording Call for Help and, as usual, taking a lunch break in the studio to do Security Now!.



STEVE:  Yup.



LEO:  And we�ve been � it�s been, I think, one of the top subjects we�ve covered.  We�ve been covering crypto for the last four or five episodes, and it�s been really great.



STEVE:  Well, I love it because these are technologies that we�re all now using, literally in our daily lives, on the web.  And even though the deep math side is, you know, deep, the basic concepts, as we�ve been showing, are really easy to understand.



So it�s funny, I got a really neat piece of email from someone who actually works at the CIA, who said people were looking at him funny when he was giggling, listening to the podcast � this is a few weeks ago when we were explaining about the Diffie-Hellman key exchange and how people could use exponentiation as the one-way function.  It was easy to exponentiate; the reverse is to do an exact or a discrete logarithm.  And what he loved was he had that ah-ha, like, you know, he got it.  And he was giggling, walking through security at CIA Headquarters, because he was listening to Security Now!.



LEO:  I don�t know if you saw this, but apparently there was a mystery kind of solved on the grounds of the CIA this week.  There is a sculpture that was kind of in the grounds of this headquarters at Langley, Virginia.  And it�s been there for some time.  For 16 years people have been puzzling over the last part of it.  Most of it, the first three � there are four sections.  The first three sections had been deciphered in 1999.  But ever since, the last 16 years, this fourth section has remained a mystery.  Well, the sculptor announced, Jim Gillogly, that he � or actually Jim Gillogly had solved it.  The sculptor�s name is Jim Sanborn.  He actually devised this with a retired chairman of the CIA crypto center, Edward Scheidt � announced, oh, I made a mistake, a booboo, there�s an extra X.



STEVE:  Oh, my God.



LEO:  So the puzzle, the �Kryptos� puzzle, I mean, there�s websites devoted to it, everybody has been working on this for years...



STEVE:  So it had an error in it.



LEO:  ...had an error in it.  And it actually changes � he put it in for aesthetic reasons.  It actually changes the message in the third section by just a few words.  And now they�re going back to work on the fourth section.  It�s actually kind of a neat little thing that has turned into a bit of a game at Langley, so that�s kind of fun.



STEVE:  That�s very cool.



LEO:  Yeah.  So there�s a little crypto going on there.



STEVE:  Yeah.



LEO:  So we were talking � we�ve talked about pretty much�everything.



STEVE:  We�ve really covered...



LEO:  Is there anything left?



STEVE:  Well, there are some interesting details and sort of loose ends that I want to talk about.  You know, we started off talking about symmetric stream ciphers like RC4 used in WEP, and talked about the problems and the benefits of it.  It�s very fast.  The problem is you can�t ever use � you can�t ever safely reuse the same key because we know what happens if you use a one-time pad more than once.



LEO:  Right.



STEVE:  Then we talked about block ciphers and how much stronger they are, that they�re a little slower than stream ciphers but still much faster than asymmetric crypto, which is what we then talked about, the whole public key technology.  And then finally we talked most recently about cryptographic hashes, the idea of taking a document and distilling it down, whether, you know, whatever kind of message it is, distilling it down into a cryptographically strong, essentially sort of a token that is a signature or a fingerprint of that document.  So those are sort of the foundations for a lot of this.



Now, people that have been following along have been writing in lots of stuff.  And some of the questions that people have had have been common.  So I wanted to talk a little bit, follow up a little bit on the asymmetric crypto side and talk about primes.  Because there were people that suggested, well, okay, in terms of sort of like brute-forcing prime factorization, why couldn�t you just have a table of all the primes?  Of course, we were talking about the Sieve of Eratosthenes a couple weeks ago that is basically a table of primes.  So I wanted to address this issue because a lot of people have wondered about it, just talking in terms of, like, how many primes there are.  The sense that I think people have is that primes are rare.



LEO:  It seems like they are.  If you looked at a table, a ten-by-ten table, a hundred numbers, there were only, you know, a few primes in there.  There are maybe 30 primes.



STEVE:  Exactly.  And so I think that�s what led people to believe, well, if there aren�t that many of them, then why not just precompute them, do a table of them, and try them�all?



LEO:  Right.  And in fact there are books of prime numbers that you can find these days.



STEVE:  Well, yes.  They don�t go up that high.  The thing that we lose track of is that, again, and I�ve talked about this many times in the last few weeks, the notion of magnitudes.  You know, we talk about 128 bits, 256 bits, 512�bits.  But these magnitudes that this many bits represent are phenomenal.  So a couple things.  There�s this Pierre de Fermat, the Fermat test, that back in the 1600s he showed how to find primes.  And there�s also something called the �prime number theorem� that talks about how many primes there are.  Okay.  Given 512 bits for a prime, there are fewer atoms in the known universe than there are prime numbers of 512 bits and fewer.



LEO:  So there are quite a few.



STEVE:  Yes.



LEO:  Wow.



STEVE:  So that�s the point is that...



LEO:  You can�t make a book that big.



STEVE:  Exactly.  No one is going to do a table.  More�atoms...



LEO:  And even if you could, you couldn�t search it fast enough or test it fast enough.



STEVE:  Well, exactly.  More atoms in the universe � I mean, I�m sorry, there are more primes...



LEO:  Than there are atoms.



STEVE:  ...512 bits or lower than there are atoms in the�universe.



LEO:  So that�s why you use long numbers for this.



STEVE:  And it turns out it�s not hard.  We were talking about the computational burden of creating those.  Now, when we talk about an RSA key that is 1024 bits long, what that actually refers to is the two prime numbers.  When you multiple two 512-bit quantities, you get a 1024-bit quantity, that is, you sum the bit lengths when you multiple two binary numbers.



LEO:  Well, that�s interesting, okay.



STEVE:  So the 1024-bit asymmetric key...



LEO:  Which is a pretty typical key size..



STEVE:  ...which is a very secure key size...



LEO:  I use 4096.  So, I mean...



STEVE:  Oooh.



LEO:  ...you can get bigger.



STEVE:  Well, let�s talk about this...



LEO:  Let�s stay with 1024.



STEVE:  Let�s talk about this.  First of all, what�s really interesting is, you know how we talked about the Diffie-Hellman key exchange and how the one-way function there is exponentiation because it�s easy to exponentiate; it�s incredible difficult to reverse that and do a logarithm, that is, an exact or a discrete logarithm.  Well, what�s fun about the RSA public key technology is the one-way function is multiplication.



LEO:  That�s pretty simple.



STEVE:  It�s just multiplication, exactly.



LEO:  You�re really good at that, yeah.



STEVE:  And the reason is that � so the reverse process...



LEO:  Is factoring.



STEVE:  Well, it�s factoring, but really it�s just division.



LEO:  Right.



STEVE:  You want to take this one large number.  You need to determine what the two primes were.



LEO:  And then you divide them.



STEVE:  And exactly.  If you knew one, you would divide that by the total, and you�ve got the other. 



LEO:  The key is knowing the one.



STEVE:  Well, exactly, or knowing either one of them.



LEO:  And now we know it�s a 512-bit pool of data, so that�s a lot of possibilities.



STEVE:  Well, it�s a lot of possibilities.  I did some research because I thought it would be fun to get some sense for the difficulty of doing prime factorizations right now.  Okay.  A recent record for factoring just 512 bits, that is, a 512-bit number that was composed of two primes � and this is just a couple years ago.  So each of the primes was 256 bits long.  A team used 292, so almost 300, off-the-shelf PCs, and it took them five months to do a prime factorization of 512 bits.  Now, we know with a brute-force attack on symmetric keys, okay, where you have, like, 128�bits, a symmetric key, we know that every time you add a bit, the difficulty doubles because, if all you can do is brute force, you have to try them all, or try until you get lucky.  But every bit you add doubles the number of possibilities because you had all the ones before with that new bit off, and all the ones before with the new bit on.



LEO:  That makes sense, okay.



STEVE:  So each bit doubles.  It turns out that factorization doesn�t double when you add bits, just because of the nature of the space that we�re trying to explore.  Every bit you add increases the difficulty or the length of time to find a prime factorization between 1.035 and 1.036.  So not that much harder.  Okay?  1.035 or...



LEO:  Let�s say it�s one.



STEVE:  Somewhere between one � well, no.  Well, no.  It needs to be more than one.



LEO:  Oh, yeah, one is not hard at all.



STEVE:  That wouldn�t get any harder.



LEO:  I get it.



STEVE:  So it is getting harder...



LEO:  But just a little bit harder.



STEVE:  ...but not that quickly.  It turns out, though, if you � now we know how hard it was to factor 512 bits.  If you multiply that amount of hardness by 1.035 512 times, when you add another 512 bits, so now we�re up to a 1024 bit...



LEO:  Right.



STEVE:  ...now we�re at somewhere between 3 and 30 million�years.



LEO:  Based on the fact that it took five months to do the�256.



STEVE:  Exactly.



LEO:  Holy cow.  Holy cow.



STEVE:  So we know very clearly how quickly it gets harder.



LEO:  Right.



STEVE:  And we know how hard it is for the one we�ve done.



LEO:  Right.



STEVE:  So we know that factoring a 1024 bit, which is sort of standard strength � yours is 4096.  Now, knowing now how much harder it gets, you could compute how many millennia it would take.



LEO:  Longer than the life of the universe remaining, I guarantee you.  Yeah.



STEVE:  So people should just know that a 1024-bit number will take between 3 and 30 million years using state-of-the-art technology to factor.



LEO:  What this underscores is, if it�s going to be cracked, it�s not going to be cracked by brute force.  It�s going to be cracked because somebody discovers a new way to find primes, there�s some mathematical discovery that changes this.  That�s the only way.



STEVE:  And you know, in terms of difficulty, it�s going to be cracked because somebody found the slip of paper you wrote it down on.  I mean...



LEO:  That�s much more likely, frankly.



STEVE:  Exactly.  I mean, it�s like this technology just simply works.



LEO:  Yeah.  I mean, it�s theoretically possible, though, isn�t it, Steve, that some mathematician somewhere laboring in obscurity could � maybe even somebody at Fort Meade and at the NSA could have found a better way to factor primes that makes it infinitely easier.



STEVE:  That�s why people that do crypto as a career, they are always careful with their language.  They say �this is believed to be secure.�



LEO:  �Believed to be.�



STEVE:  Yes.  And they say...



LEO:  That�s the weasel word.



STEVE:  ...�as far as we know the difficulty is.�  But they say �as far as we know.�



LEO:  Right.



STEVE:  Because they always allow the possibility that something could be discovered.



LEO:  But on the other hand, this is a branch of mathematics that is pretty well known, has been worked on since the time of Eratosthenes.  It�s not a new mysterious area.



STEVE:  Yes.  It�s, I mean, as we�ve said earlier, you know, grad students have cut their teeth in math trying to come up with new, fancy ways to do this.



LEO:  Right.



STEVE:  Now, one thing we haven�t talked about with public key technology is this notion of key recovery.  That is, you create a key pair that�s got a public key and a private key.  We know that, because of the way this is typically used, you want to publish your public key.  You want to put it out there so people can encrypt things to you, or so that you can encrypt things, and they can decrypt it using your public key...



LEO:  Right.



STEVE:  ...knowing � proving that it was from you.  Or, like, decrypt something that you signed to prove that it was you who signed it.



LEO:  Right.



STEVE:  So in every case, the idea is that the private key is kept private, that is, you don�t disclose it.  What happens if you lose it?  Because, I mean, that�s a concern.



LEO:  That�s an avenue of attack.



STEVE:  People�s hard drives.



LEO:  Right, it�s on my hard drive.



STEVE:  Well, if it�s on your hard drive or...



LEO:  It�s on a USB key that I use to transport it around.  I mean, it�s all over the place.



STEVE:  That you might lose.  Or your hard drive could crash.  So it�s not so much a matter of losing control of it as, say that for example a corporation had issued certificates � and we�ll talk about certificates here later in this episode.  We�re going to talk about what a certificate is.  But the idea, they had issued public keys for every one of their employees.



LEO:  Right.



STEVE:  And the employees were signing their documents.  They were using these extensively.  Now, an employee loses, for whatever reason, their hard drive crashes, they lose their token or something...



LEO:  Hey, I�ll put myself in that group.  I�ve made over my lifetime about eight different keys, and I�ve lost all but the last couple.  I can�t revoke those old keys.  That�s�gone.



STEVE:  Well.  So imagine that a company wants to sort of store all of these keys somewhere safe.



LEO:  Safe, yeah.



STEVE:  But remember like in the Cold War-era movies, or like the captain and the first mate on the submarine...



LEO:  Strategic Air Command.



STEVE:  Yeah, Strategic Air Command, exactly.



LEO:  You have two different keys, yeah.



STEVE:  They have, you know, around their neck, underneath their shirt is the lanyard...



LEO:  And they both have to turn them at the same time.



STEVE:  Exactly.  So the idea being you don�t want to allow one person who might go crazy or, you know, or be compromised by a foreign government, to be able to launch the missiles.



LEO:  Right.



STEVE:  You want to require two.  Okay.  So similarly, in a big organization where you�ve got lots of public keys, you want to somehow put in a database the private keys in case somebody truly does lose theirs, you want to do what�s called �key recovery.�  How do we recover the key?



LEO:  You know, I should point out that, if a bad guy gets my private key, he still needs to know a passphrase to be able to use it.  So it isn�t sufficient for him just to have the key.



STEVE:  Well, but the concern is not that you lost control of it.  The concern is that you...



LEO:  I lost it.



STEVE:  You lost it.



LEO:  Right.  But I�m just pointing out that losing control of it isn�t necessarily the end of the world...



STEVE:  Correct.



LEO:  ...because you need a passphrase to use it.



STEVE:  But losing it completely is the...



LEO:  Well, it�s bad news.



STEVE:  ...is the end of the world.



LEO:  And I have, in fact, lost my...



STEVE:  Yes.



LEO:  You could send me messages I can�t decrypt because I no longer have the private key.



STEVE:  Or you�re no longer able to sign your messages because you use your private key for signing messages.



LEO:  Right, right.



STEVE:  So we need a way to allow those keys to be�recovered.



LEO:  Yes.



STEVE:  Now, say that we took the private key and chose a big random number.  Well, chose a symmetric key size random number, which we know is, like, 128 bits.  So we choose a random number.  We symmetrically encrypt the private key with that, and we store it in our big database.  Okay, well, we�ve only kind of shifted the problem because now we have a symmetric key...



LEO:  We can�t lose.



STEVE:  ...which we can�t lose...



LEO:  Right.



STEVE:  ...which we need to use in order to decrypt...



LEO:  Right.



STEVE:  ...the private key that we�re trying to store.  Now, okay.  Say that we had two people, and we needed them both.  Well, you could take the 128 bits...



LEO:  Split it in half.



STEVE:  ...and split it in half...



LEO:  That�s good.



STEVE:  ...and give them each 64 bits.



LEO:  Yeah.  I need you and you need me.  We can�t decrypt without it.



STEVE:  Exactly.  The problem is, now each of them have 64�bits of the key, that is, now they only need another 64�bits.



LEO:  Oh.



STEVE:  And that�s no longer strong.



LEO:  Right.



STEVE:  Because we know that 64 bits can be brute-force attacked.



LEO:  Right, right.



STEVE:  Not soon, but it�s still possible.  It gets worse.  Say that, okay, now we have another problem.  Say that we�ve split the key in half, and one of the people we need is on vacation.  We can�t get a hold of them.  They�re in Tahiti.



LEO:  Right.



STEVE:  Okay.  So now what we want is we want a more sophisticated system where, say for example, we need two out of three people who can be present in order to decrypt our database in order to get back the keys.  Well, that would require that we take our 128 bits and split it into three pieces and give each of the three people two different chunks of three.  Okay?  So, like, the first person gets pieces one and two; the second person gets pieces two and three; the third person gets pieces one and three.  Now, that means any pair of them have all the bits.  But now we�ve made that prior problem even worse.



LEO:  Because now it�s only, like, 43 bits, and it�s really insecure.



STEVE:  Exactly.



LEO:  Now you actually are getting to a level where it�s been cracked.  40 bits has been cracked.



STEVE:  Yes.  So we�ve got to scrap this whole idea.



LEO:  Bad idea.



STEVE:  Now, here is a concept, Leo.  This is one of those, I mean, our friend who works at the CIA is going to be giggling as he goes through security.  This is just a toe-curling concept.



LEO:  Okay.



STEVE:  Okay.  So imagine a sys- we want a system where any number of people can be given information such that any group of them that we decide are necessary to � almost like voting.  They all � they get � and we would call them our �key trustees.�



LEO:  Yes.



STEVE:  So we�re going to make them the trustees of the database.  We don�t want to allow any few of them to be able to access the data.  We need a majority of some sort...



LEO:  A quorum, okay.



STEVE:  ...in order to access it.  Okay.  Let�s just take the case of two people . We already saw that we can�t just give them each half the key.



LEO:  Yeah, that�s not going to work, right.



STEVE:  Because that�s no longer secure.  Okay.  We know from geometry that...



LEO:  Uh-oh.  That�s when I go south.



STEVE:  No no no, this is good.



LEO:  We know from geom- okay.



STEVE:  And you�re going to be able to visualize this.



LEO:  I�m closing my eyes now.



STEVE:  Okay.



LEO:  Okay.



STEVE:  We know from geometry that a line is defined by two�points.



LEO:  Yes.



STEVE:  That is, any two points, and you draw a straight line through it.  Okay.  Now, imagine we have an x,y grid of Cartesian coordinates, and the line � we just draw a line.  It crosses the y-axis at the key.  That is, the value where it crosses is the key.



LEO:  Right, got it.



STEVE:  Okay.  Now, if a single point is on the grid, we know that there�s an infinite number of lines.



LEO:  That can just rotate around that point.



STEVE:  It could rotate around that point.  Two points define the line.



LEO:  That�s one and only.



STEVE:  And we choose � so we draw a line that crosses through the y-axis at the key.



LEO:  Yeah.



STEVE:  Now we assign as the secret points on the line, so that two people each get a point.



LEO:  But nobody has two points.



STEVE:  Nobody has two points.



LEO:  So nobody can decrypt it.



STEVE:  And what�s cool is you could assign as many different people points on that line...



LEO:  It�s an infinite line.



STEVE:  ...as you want to.  And so what this means is any two � so you...



LEO:  But the point is a pair; right?  It�s...



STEVE:  A point is a pair.



LEO:  ...an x and a y.



STEVE:  So an x and a y coordinate.  But that, the coordinate by itself, provides no information about the key.



LEO:  Because it also has an infinite number of possible crossings of the y-axis.



STEVE:  Exactly.  One point, and then there�s...



LEO:  Tells you nothing.



STEVE:  ...an infinite number of lines.  But any two points, now you can compute...



LEO:  We draw a line to the y-axis.



STEVE:  You could draw a line...



LEO:  Wow.



STEVE:  ...and get the key.  Isn�t that neat?



LEO:  That�s really slick.



STEVE:  Okay, so now, say that you wanted...



LEO:  So we give out a bunch of these points.



STEVE:  So you just give out points on the line.



LEO:  And any two people...



STEVE:  Any two people who�ve received...



LEO:  ...can give you the key.



STEVE:  ...points are able to recover it.



LEO:  Oh, that is so cool.



STEVE:  Now, say we want to make it a little more fancy.  We want to require three people.



LEO:  Yeah, how do you do that?  Slope.



STEVE:  Three points define a parabola.  �Cause, think about it.  If you have a curved line, as we know, the two points is now a family of parabolas...



LEO:  Yeah.



STEVE:  ...but a third point nails the parabola.



LEO:  It�s a unique parabola.



STEVE:  Three points define a parabola.  So all we do is we create a parabola that passes through...



LEO:  The y is the...



STEVE:  ...the y axis.



LEO:  ...peak or the trough of the parabola.



STEVE:  It just passes through.  And then all we need to do is pick points.  We can assign as many points as we want on the parabola, giving those coordinates to people.  And three of them have to get together...



LEO:  Perfect.



STEVE:  ...in order to recover the key.



LEO:  So here�s our stumper for the week.



STEVE:  Isn�t that cool?



LEO:  What if you want four people to have a key?



STEVE:  Well, it turns out that this is completely generalizable.  A parabola is a curve of second order.  And you are able to do nth...



LEO:  An infinite number of curves.



STEVE:  ...nth order curves.  So it�s simple polynomial�math.



LEO:  I love it.



STEVE:  And it allows people � it allows you to distribute the knowledge such that you can completely define your policy � how many people have points, how many of those people have to share their points in order to unlock a key.



LEO:  And so this is how key recovery works.



STEVE:  This is one of the predominant key recovery�techniques.



LEO:  What a cool idea.



STEVE:  Isn�t it?  I just love that.



LEO:  That is really slick.



STEVE:  Well, the final thing to talk about in this whole series is certificates.  We�ve glanced on certificates.  We�ve talked about web server certificates and in PGP land.  We�ve talked about personal certificates.  Someone did write saying that Thawte is still making available free personal�certificates. 



LEO:  Yeah.  They reduced the amount of time you can use it for and so forth.



STEVE:  Ah.



LEO:  They were purchased by VeriSign...



STEVE:  Right.



LEO:  ...and of course they�ve changed.  Thawte used to be really almost a nonprofit.  They really were supporting�free...



STEVE:  Right.



LEO:  ...email certificates.  There�s sort of, you know, there�s pros and cons to the way PGP does it and the way certificates do it.  And I have both, but I like PGP.  I do.



STEVE:  One thing I didn�t realize, but again I�ve been sort of extending my reach recently, and that is that S/MIME, Secure MIME, is there, and it�s in all of our email readers�now.



LEO:  Yes.  And PGP uses S/MIME.



STEVE:  Okay.



LEO:  It can use S/MIME.  It doesn�t...



STEVE:  Well, because it is a...



LEO:  So what is S/MIME?



STEVE:  S/MIME, MIME stands for...



LEO:  Multipurpose...



STEVE:  Multipurpose Internet Mail Exchange.



LEO:  Right.



STEVE:  Which is a well-defined format for creating non-textual content in messages, you know.  So a plain...



LEO:  Binary files...



STEVE:  Exactly.  If you have an attachment, that�s actually a so-called MIME type that is defined, and there is an encoding that moves the binary into text so that it�s able to move through the email system.  Anyway, we�re going to do an entire podcast on S/MIME in the future.



LEO:  Oh, good.  Because I�ve wondered, you know, that�s an option in my PGP, use S/MIME, and I�ve never known why or should I.



STEVE:  And it�s in everyone�s copy of Outlook Express.



LEO:  Built in.



STEVE:  And so you�re able to get a certificate and add that certificate to Windows and then turn on S/MIME.  And in fact you can add the public certificates of people you correspond with, and your client will automatically encrypt the mail if you�re sending it to someone whose certificate you have.



LEO:  Very cool.



STEVE:  So it�s very cool.  We�re going to explore it in detail.  But what is all this certificate?  Okay.  The problem with public keys is that they�re public.  I mean, the benefit is they�re public.  But what if somebody claimed that, you know, what if Joe claimed that Alice�s public key was his?



LEO:  Right.



STEVE:  I mean, he could make the claim because Alice published her key.  I mean, the value of it is that it�s�public.



LEO:  Or worse, Joe could create a key that says he�s Alice, and you�d have no way really of knowing that it wasn�t Alice�s key.



STEVE:  Well, yes, that�s a very good point.  The problem is that keys themselves have no identity.



LEO:  Right.



STEVE:  Keys are just a blob of bits.  As we know, they�re...



LEO:  I can assert that it�s mine, but you have no way of proving it.



STEVE:  Exactly.  So here is what a certificate is, and I love it for its simplicity.  A certificate is nothing but the binding � and we�ll describe what that means � the binding of identity information to a public key.  That�s what it is.



LEO:  And using a trusted third party.



STEVE:  Well, that�s where this binding comes from.  But even stepping back from that, because you don�t need a trusted third party to have a certificate.



LEO:  No, I can make my own certificate.  But it has the same issue.  I can make my own certificate.



STEVE:  Right.



LEO:  It�s not really a binding.



STEVE:  So what a certificate is, it�s the binding or the association of identity information of some sort.



LEO:  Right.



STEVE:  You know, your name, your address, your company, whatever it is, to a public key...



LEO:  Yes.



STEVE:  ...to give the public key some identity.  Now, the veracity of that binding, that is, what people consider that information to be worth, is who is standing behind the representation.



LEO:  So, for instance, in OS X and many other operating systems, I can create a public key, I can create a certificate, both of which have really no authentication because I�m asserting that they�re mine, but anybody else could do that.  You could create one that says that you�re me.  There�d be the same value.



STEVE:  Exactly.



LEO:  So that�s where the trusted third-party...



STEVE:  So in order to give a certificate value, you need somebody to vouch for it.



LEO:  Yeah.



STEVE:  You need somebody to say, I know this person, this person has proven that they�re who they say they are, and this is their public key.



LEO:  It�s kind of like a notary public.  When you sign a document and you go to a notary, this notary is entrusted by the state to look for your driver�s license or whatever�and...



STEVE:  To do due diligence.



LEO:  They have to do the due diligence.



STEVE:  Right.



LEO:  They have a stamp and so forth.



STEVE:  So here�s the process.  An individual produces a key, a public key pair that of course as we know has a public key and a private key, and they produce their own identity information and whatever they need to do to prove that this identity information is valid within the constraints of their application.  They sign what�s called a �certificate request� with their private key.  Now, we know that that can only be verified with their public key.  So they sign the certificate request with their private key, never giving it out, but they sign it.  The reason they do that is so that the so-called �certificate authority� can verify that the public key they�re providing is matched with the private key they used to sign the certificate.  Therefore they are proving when they sign this that they actually own the private key...



LEO:  Both sides of the key pair.



STEVE:  Both sides, exactly.  So the certificate authority takes the identity information and this user�s public key; creates a message, like we�ve talked about before; makes a hash, using hashing; and then the certificate authority signs that with their private key.  So basically you�re having a third party sign your assertion that this is your public key and your identity.



LEO:  That�s the equivalent of the notary�s stamp saying, yes, this matches.



STEVE:  Right.  Now, the next part of this is � so, okay.  What we�ve done is we�ve created a certificate.  That is the certificate.  Now, to verify that, we need � since the certificate was signed with the certificate authority�s private key, we need their public key in order to check it.  Well, our browsers and our operating systems come with, like, 30 or 40 public keys with long expirations, like 2020, 2040, I mean, way in the future.  So they�re saying this certificate is valid through this length of time, and it contains the public key of the signing authority who verified.



LEO:  And these are people like VeriSign and Thawte.



STEVE:  And Thawte.  Even the U.S. Postal Service has a certificate that is available...



LEO:  See, I�d trust them.



STEVE:  Yes.



LEO:  I know they�re going to be around for a while.



STEVE:  Yes.  And so that�s really the way this functions.



LEO:  Now, I should mention that, as complicated as that process sounds, it�s actually automated by most email programs.  It�s pretty straightforward.  They send you an email, and you get it back, and...



STEVE:  Exactly.  And in fact a dialogue box pops up, you...



LEO:  ...accept it.



STEVE:  ...you fill out the form, and, you know, the public key gets made, and it all happens just easily.



LEO:  The free ones, generally the only thing they verify is the return email, is your email address, because they send it to your email address.  The paid ones may get more information from you.



STEVE:  Well, and for example, as someone who has a bunch of web server SSL certificates...



LEO:  Same idea; right?  A server certificate�s the same as an email certificate.



STEVE:  Because, exactly, someone�s connecting up to GRC over a secure connection.  And somebody is asserting that this is really GRC they�re connected to.  And so when I get my certificates from VeriSign, they look me up in Dun & Bradstreet.  There�s a fax and a phone call and an email loop.  They go through some trouble to verify that this is really who I�m claiming it is.



LEO:  Right, right.  Now, PGP, which doesn�t use a certificate system, has a little kind of less reliable system called the �web of trust�.



STEVE:  The web of trust; right.



LEO:  And if you use a PGP key, the first time you use it it�s kind of untrusted.  And what you hope is that people will, as they get your key and know, oh, yes, I know this was an email from Leo, will go to the server and sign your key and say, yes, this is Leo�s key.  And eventually your key will be signed by enough people that the level of trust will be quite high.



STEVE:  And that�s a cool system.  I mean, it�s sort of the way Google works by, you know, ranking sites based on the ranking of sites that link to you.



LEO:  It�s a recursive system, but it works.



STEVE:  They�re sort of a, yeah, there�s a web of link quality endorsement as opposed to, like, a web of trust.



LEO:  In fact, as we mentioned, people often have PGP key signing parties, where they all get together and sign each other�s keys.



STEVE:  Right.



LEO:  Which I think is a great idea.



STEVE:  In order to create an immediate veracity behind the�key.



LEO:  Right.  Somebody suggested � because I�m actually using a new key because I lost some of my old keys, and I don�t think it�s signed yet.  And somebody suggested, oh, well, you should do a podcast key signing party.  I haven�t figured out quite the logistics of how we would do that. I don�t think we could.



STEVE:  Yeah, yeah.



LEO:  I was thinking maybe I could give out a code word on the podcast, and they could send me stuff.  But I haven�t figured that out yet.  I do get, now, thanks to this, though, a lot of encrypted mail because people know I use�PGP.



STEVE:  Right.



LEO:  And I have quite a few email buddies.  And I�m sure�the NSA is looking carefully at all of this encrypted�traffic.



STEVE:  What�s all this encrypted traffic coming and going to and from Leo?



LEO:  Well, and that�s one of the arguments for more people using PGP and other encryption technologies is because, right now if you use it, it�s a red flag.



STEVE:  Then you don�t stand out; right.



LEO:  But if everybody�s using it, then it�s just � it�s like using an envelope in your mail.  You know, if everybody sent postcards, and suddenly you started sending mail with�envelopes...



STEVE:  Oh, what�s he trying to hide from us; right.



LEO:  So let�s all please start using envelopes, if you don�t mind.



STEVE:  So that really wraps up all of the fundamental technology of crypto.  There are some cool things we will be talking about in the future, although we�re going to change topics now and go on in different directions.  But we will in the future talk about how SSL works in detail, how PGP works, how Secure MIME works.  And, you know, other things, because after all we�re here talking about security.  Now with this set of fundamental tools we can talk about symmetric keys and private keys and hashes, and people will know where we�re coming from.



LEO:  Isn�t that great.  Isn�t that great.  Steve�s, of course, the guy behind SpinRite, a fantastic program for disk maintenance and recovery.  We encourage you to visit GRC.com and get your copy of SpinRite.  If you�ve got a hard drive, you need SpinRite.  And of course show notes for Security Now! are available at GRC.com/securitynow.htm.



STEVE:  And transcripts.



LEO:  Thanks to Elaine, we�ve got transcripts, and 16KB versions for the bandwidth impaired, all at GRC.com/securitynow.htm.  We also invite you to visit our fine sponsors, Astaro, makers of the Astaro Internet Gateway, their great Astaro security software.  I just got my 120.



STEVE:  Oh, cool.



LEO:  And I�m setting it up, and it is � I just feel � it just gives you this sense of security that�s just fantastic.



STEVE:  Well, because it is a managed system; right?



LEO:  Right, yeah.



STEVE:  Yeah.  And so...



LEO:  So it�s a router, but it�s a router running open source software with � and, you know, these are by subscription, but you can get anti-virus, you get anti-spam, and it�s really great.



STEVE:  And it�s being updated transparently as their database grows.



LEO:  You could try a free version.  In fact, there�s a home version that�s absolutely free at Astaro.com.  But I might mention, somebody pointed this out, that you can get the free version, put it on an old box.  But for 79 euros a year, subscribe and you get ClamAV, you get two anti-viruses, anti-spam, automatically updated.  I mean, frankly, compared with the other anti-virus/anti-spam solutions, that is very economical.  That is probably the way to go if you�ve got an old PC.



STEVE:  And it protects your entire network.



LEO:  Your whole network.



STEVE:  Without needing something then on every one of your�machines.



LEO:  Yeah.  Stateful inspection firewall, I mean, this is topnotch security.  Astaro.com.  So I guess we�ll be back next week with more fun security information?



STEVE:  I�m sure we will.  We�ve got lots more to do.



LEO:  It�s great to see you in Toronto.



STEVE:  Likewise, Leo.



LEO:  All right.  And we�ll see you all next week, next Thursday, for Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#38

DATE:		May 4, 2006

TITLE:		Browser Security

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-038.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss the broad topic of web browser security.  They examine the implications of running "client-side" code in the form of interpreted scripting languages such as Java, JavaScript, and VBScript, and also the native object code contained within browser "plug-ins"�including Microsoft�s ActiveX.  Steve outlines the "zone-based" security model used by IE and explains how he surfs with high security under IE, only "lowering his shields" to a website after he�s had the chance to look around and decide that the site is trustworthy.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 38 for May�4, 2006:  Browser Security.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



So finally the sun is shining in beautiful California.  We have summer, or at least spring finally arrived.  And, look, Steve Gibson�s wearing a tank top and shorts.  No, he�s not.



STEVE GIBSON:  Well, it�s dry in Toronto, Leo.  You were all chapped; I was all, like, chapped just after one day.



LEO:  I am.  And, you know, they complain in Toronto that it�s too humid because they have the lake effect.  But I guess it gets humid some other time because I � chapped is the word, exactly.  My cheeks are bright red.



STEVE:  Yeah, my face was all, like...



LEO:  Yeah.



STEVE:  ...tight feeling.



LEO:  Yeah.  Isn�t that funny?



STEVE:  It�s like, ah, what�s going on, yeah.  We�re just wusses down here in Southern Cal, in California.



LEO:  When you have a perfect climate.  Oh, now, I shouldn�t rub it in.  We have listeners all over the world, many of whom actually live in perfect climates, so I won�t bug them.  And those of you who don�t, you already know.



So our topic today is something, I think, near and dear to everybody�s heart.  No matter who you are, you use a browser.  And it seems that browsers are one of two really prime vectors for security flaws, the other being email.



STEVE:  Yeah.  I think probably maybe browsers more than anything because the design of browsing on the web, the way it�s evolved, is part of the problem.  Whereas you could argue that email viruses were sort of a side effect of email security problems, I mean, the idea, for example, that Microsoft�s design for ActiveX was to allow a website that you visited to, I mean, on purpose, to download what is basically a DLL and run it, just by visiting the page, without any asking for permission or anything.  I mean, things have tightened up since this was originally created and this original concept.  But, you know, that was the�idea.



So one of the things that I want to draw a very clear distinction between are problems due to policy versus problems due to mistakes.  And, I mean, this has sort of been a long-running theme because, for example, over in a different era, you know, over in Windows with open ports, my argument with Microsoft was that they were running servers and services that were opening ports and windows by policy.  I mean, they were deliberate- they deliberately had filesharing running.  They deliberately had DCOM and RPC and all these ports open, not mistakenly, but on purpose.  And it was not until they finally got the clue and had XP�s firewall running by default in Service Pack 2 that those open ports were then hidden behind the firewall, so they were essentially closed to the outside world.  So, you know, anyone can make a mistake, and of course Microsoft is famous for making mistakes.  But it was the fact that they had this policy that essentially exposed their mistakes to the world.  And this is very much the same problem we see over on the browser side.



LEO:  So it really goes hand in hand.  I guess you could claim that the policy was a mistake, but it was such a global mistake that we�re still suffering years later, and it makes it difficult to fix.  Whereas a security hole you can usually patch and fix and it goes away.



STEVE:  Well, let�s � okay.  Exactly.  Let�s stand back now a little bit and sort of, like, turn back the clock and remember that the original concept of the web were static, unchanging HTML text pages that browsers would download from the server, and those pages would then go fetch other images which would populate the page if it was, you know, a graphic web browser.  And that was the � that was Tim Berners-Lee, you know, original concept for the web, was this distributed database called the Internet of servers that would serve pages, and then these pages would be linked to each other and so people could click on links to go to other pages.  But the page itself was just static.  It was a textual, read-only page that users would browse, and then they�d click on links to go to something else.



LEO:  Actually, I think Tim in his original conception wanted them to be editable.  But you�re right, I mean, it very quickly became just these static pages.  I think his original plan was to have pages be collaborated on; and of course the immediate security issues became obvious, and everybody said, oh, no, maybe they�d better just be static.



STEVE:  Well, we didn�t have collaboration technology.  Maybe the idea was, like, to FTP to the server.



LEO:  No, the original, believe it or not, the original web browser that he wrote on the NeXT box, that was the idea, he wanted other physicists to be able to modify pages and collaborate on documents.  But you�re right, I mean, that wasn�t � that never left CERN, I don�t think.



STEVE:  Right.  Well, and in fact the original concept was from the server to the browser only, and the addition of forms that allowed web pages to send information back, you could tell by the nature of the way it was implemented, it was kind of a kluge that was stuck on afterwards.



LEO:  You�re talking about the Get and the Put and all of�that?



STEVE:  Exactly, where for example you make a query to the server, and then you put a question mark in the URL and then show the parameters right there, which is, you know, how most search systems work today, where you�re able to create a URL which contains the search parameters in the link text.  This whole notion of getting data back to the server was sort of an afterthought and not something that was originally conceived.



So, moving forward, I�m not clear on the timing of where Netscape was with their scripting and where Microsoft was.  You know, Microsoft tried to give us, you know, VBScript in the browsers.  But then ultimately Microsoft came along and said, hey, let�s not limit users to running JavaScript in browsers.  We want this to be more powerful, more feature packed.  So they took this whole notion of OLE, which is their Object Linking and Embedding technology which sort of had been limping along for a number of years, and somewhere along the way they renamed it.  It�s the same thing, they just renamed it ActiveX because that sounds fancy, you know, sort of like DirectX and Xbox and all that.  And what ActiveX is, is it�s just a DLL, you know, a compiled program which, in the case of a browser application, is able to download this code into the user�s system and run it.  And, I mean, it�s very powerful.  But of course it�s horribly insecure.



LEO:  I think you can blame Microsoft for this because the original scripting implementation by Netscape, which later became JavaScript, really wasn�t very powerful.  I mean, the browser could do things, but it couldn�t actively access your computer, your hard drive.  It wasn�t really a full-blown programming language.  It wasn�t till Microsoft came along that you really had that.



STEVE:  Right, right.  And that, of course, was by design.  And in fact we know that the related language, Java itself, real Java, from day one it was created with the notion of a sandbox, that is, an enclosure.  And so Java code was also � the idea was you would be able to download Java code and have a so-called �Java runtime,� which would interpret the code so that you weren�t actually running object code on the processor.  You were running in an interpreted environment that could constrain what Java was able to do.



LEO:  And that�s still the case today.  I mean, there are malicious Java applets, but nothing on the order of the ActiveX applets.



STEVE:  Well, exactly.  And so the distinction here to draw is that Sun and Netscape, who did Java and JavaScript, I mean, they always understood the need for constraint around what it was that a remote web server would be able to give the user.  Microsoft didn�t.  I mean, Microsoft said, wow, this will be really powerful if we allow websites to download code.  I mean, this is object code.  This is unrestrained code that can do anything on the user�s�machine.



LEO:  Anything any other program could do.  And of course the success of Microsoft�s approach was that everybody immediately started using ActiveX and said, forget Java, forget JavaScript, look how much more we can do with ActiveX.



STEVE:  Well, and in fact the classic example of the exploitation of this is the user experience of getting spyware installed on their machine, or various kinds of malware, just by visiting a website.  You know, how many people were having problems with Gator and with weird sort of third-party search things that suddenly just appeared in their browser.  They didn�t do anything to install them.  They didn�t give permission.  They just were out surfing around the web and were picking up this stuff because they were using IE, which was leveraging this ActiveX technology, which is, you know, very powerful.  I mean, it�s the way Flash is able to provide very sophisticated animations and substantial power is through this whole ActiveX plug-in system that Microsoft has.  But the problem is, it was not designed with any sort of restraint built in.



LEO:  Now, of course Flash works without ActiveX.  But is Flash as dangerous as active scripting and ActiveX?



STEVE:  Well, Flash can do a lot with your system.



LEO:  But it�s more sandboxed, I think.



STEVE:  Yes.



LEO:  Yeah.  Can you describe a little bit about what Active Scripting, which was this former VBScript that you talked about, and ActiveX, the difference between the two, and the different capabilities of the two?



STEVE:  Well, the idea, in any kind of a scripting mode, whether it�s VBScript that�s Active Script or JavaScript, which was what Netscape�s scripting language ended up being named, even though it really bears no relation to the Java language itself that...



LEO:  Just a clever marketing ploy on Netscape�s part.



STEVE:  Exactly.  Java was sort of like the cool acronym about, what, eight or nine years ago.  Any of these scripting things, the idea is that the textual content of the page is itself, within sort of some specified constraints on the page, is code which is read by your browser and executed.  And so, you know, many things are made possible.  I mean, the positive side benefit of scripting is that pages can be intelligent themselves.  For example, you could fill in a zip code, and the page would know what state that was in, so it would populate the state field for you if it knew � because it could, in the page, it could have code that knew the zip code ranges by state and just filled that in for you.  And...



LEO:  Although it would be good here to kind of make the distinction between server-side scripting and client-side scripting.  So when you visit, for instance, ThisWeekInTech.com, or many pages, including your own page, Steve, because you use server-side scripts, programs are running on the server, and oftentimes there are zip code programs running on the server.  But you can also have code that runs on my computer as a visitor, and that would be JavaScript or Active Script.  Or Active X.  Those are running on my side.



STEVE:  I think that�s a really good distinction to make.  For example, you know, my own ShieldsUP! facility is � it�s code running on the server.  And all I�m delivering to the user, despite the fact that they�re getting a customized page showing which ports they have open and closed, all I�m delivering is absolutely generic HTML, you know, like dead code, or dead text that the browser renders.  So that�s..



LEO:  That�s really important because there�s really no security implications on a server-side script, at least not to you.  To me running the server there might be, but from a user�s point of view it�s safe.



STEVE:  Right.  Server-side, as it sounds, is code running on the server, not on the client, not on the user�s browser.  So it�s client-side code, or browser-side code, which is where we have problems because, in that model, the page that�s delivered that contains textual content also contains interpreted script, meaning that it is literally � it�s code that you can, if you view the source of the page and focus your eyes after looking at what some of this gobbledygook looks like, I mean, it is actual code which your browser reads and runs there on your computer.  And again, that�s where many of these cool features that we�re used to seeing now on modern websites come from is � well, I mean, for example, many of the menu navigation systems where you float your mouse around and things pop up and open, and you�re able to have a really nice navigational experience, that�s done because you�ve got a bunch of code running in your browser right there without needing to go back and get updates and new stuff from the server all the time.  So it�s very real-time, it�s very quick to operate.  And even somebody over a slow modem, once they get that code loaded into their browser, then that page is able to do all this stuff locally by itself.  And of course the disadvantage of that is security because we�re constantly running across problems.  Now, these are not policy problems.  These are implementation problems.



And so that�s the distinction I want to make is that, in general, it�s scary to accept code from a remote server, whether it�s script code or, even worse, an ActiveX object that could be � is literally running native code with no restraint at all.  I mean, you really need to trust the source of ActiveX because it�s, you know, you�re literally running code that you�ve just received from the server.  In the scripting side there�s been an attempt to constrain what the scripts can do.  But here we have the problem of mistakes being made.



In fact, you may have heard recently, Leo, there was a remote code execution vulnerability found in Firefox.  You know, Firefox is a browser that I know you prefer because, due to its policies, it�s substantially more secure than IE, for example, not running ActiveX controls that we�ve been talking about by default.  But still, even so, these mistakes in the code still create vulnerabilities that people find from time to time and are able to exploit.  And in fact there�s exploit code on the �Net now for this Firefox vulnerability.  So far it�s not running code, but it�ll crash your browser if you just click this link because it takes advantage of a coding error in the scripting stuff.



LEO:  Yeah, and that really is kind of a leak in the way that Firefox was designed, so that this stuff leaks into the actual application Firefox and then does things.



STEVE:  Well, and in fact, what we�re going to talk about next week in detail is what are buffer overruns.  Because anyone who�s involved in security, I mean, even very peripherally as a user who�s concerned, is hearing �buffer overrun, buffer overrun, buffer overrun� all the time.  That�s like the � it�s the golden goose for the malicious hacker.  And I want to talk in detail about what exactly a buffer overrun is, what is it that�s overrun, why does it seem to be such a problem to control, and why is it, like, the continual vector for all the problems people are having.



LEO:  But again, that�s different.  That�s taking advantage of or exploiting a flaw in the programming.  And the stuff we�re talking about today is stuff that actually takes advantage of something that was intentionally done...



STEVE:  Right.



LEO:  ...in the browser.  This is, as you say, a policy mistake, not a programming mistake.



STEVE:  Right.  So, I mean, in general the idea of accepting code, whether it�s script code or it�s an actual executable file, which is what ActiveX is, the idea of accepting code is dangerous.  And so it�s an unfortunate fact of modern life using the web that, in order to have the kind of experience that many websites want to give their visitors, code and the risk of code is what comes along.



LEO:  Sure.  Well, if you think about it, creating a web-based antivirus is pretty difficult to do unless the program can run on your system and can access your hard drive and examine your files.



STEVE:  You mean like a web-based AV scanner.



LEO:  Like HouseCall, yeah, like HouseCall.



STEVE:  Right.



LEO:  In fact, I understand they�ve been trying to write a Java version of HouseCall, but I haven�t seen it yet, and I think it�s because it�s very, very difficult to do.



STEVE:  Well, it�s probably hard to get out of the Java sandbox onto the machine.



LEO:  Exactly.



STEVE:  And, you know, something like GoToMyPC, a browser-based remote access system, I mean, that�s a very powerful concept.  But there your browser is the client, which is running code on your machine in order to provide substantial features.  So in every case we have this tradeoff between the power to do what we want to do and the inherent lack of security that using that power brings along.



Now, Microsoft did something interesting in IE which, as you know, Leo, I take great advantage of, and that�s this notion of zones.  They have security setting controls, like all browsers do, for things you want to turn on and turn off.  But what Microsoft�s done, in order to try to create some sort of control around this otherwise arguably too powerful facility called ActiveX, is they�ve created this notion of security zones.  If a web domain like GRC.com or Microsoft.com or TWiT or whatever is not otherwise defined as, like, good or bad, it�s in the default Internet zone, meaning that it�s treated just like any other site on the Internet.  So you�re able...



LEO:  So your settings that you have set to general settings apply to all of those sites.



STEVE:  Exactly.



LEO:  Whatever your security setting is for that.



STEVE:  Exactly.  And so the way I actually surf the �Net is I�ve got my Internet zone cranked to the highest security possible in IE.  What that does is it basically just...



LEO:  Breaks everything.



STEVE:  Yes, it does.  It shuts down everything.  I will not run scripting of any sort.  I will not run ActiveX controls.  Basically, you know, nothing is working.



LEO:  Just out of curiosity, what percentage of sites that you go to with those settings work?



STEVE:  About 99 percent.



LEO:  Really.



STEVE:  It�s really the case, Leo, that a lot of sites, I mean, some of them aren�t as fancy as they might be.  You know, well-designed sites know when you�re not running their script.  And so they�ll, like, fall back to something that still works.  One advantage is that I don�t have Flash ads, you know, jumping around, flying across the screen, you know, running through their animation cycle, because Flash doesn�t run if security is cranked all the way up.  So most sites will work.  But there are, I mean, for example, I can use Amazon because Amazon doesn�t use client-side technology.  All of its stuff is server-side.  So they�re just providing static pages to browsers.  I think eBay also works just fine.



You know, many things do work with security cranked all the way up.  But every so often you�ll run across a site that does need security.  For example, many times when I�m doing ecommerce, if I have some ecommerce, they�re using script to do something like populate forms for you, where, for example, you�ll have a shipping address and a billing address.  And so you�ll fill the shipping in first, and then you�ll click a button to say the shipping and the billing are the same.  And when you do that, the form...



LEO:  It fills in the form, yeah.



STEVE:  Exactly.  So that�s all happening on the client�side.



LEO:  That�s usually JavaScript when that happens.



STEVE:  Well, exactly.  And it won�t work if, for example, in IE, if the security is set all the way to the max.  So when I...



LEO:  But then there are other things, like Windows Update, that won�t work.



STEVE:  Absolutely.



LEO:  Or that antivirus, they won�t work either.



STEVE:  Absolutely. 



LEO:  So there�s a broad range of stuff that doesn�t work.  What happens then?



STEVE:  So what I do is, IE has not only the default zone, which is the so-called �Internet Zone,� but it�s got this notion of a trusted zone.  So you can have separate and completely different security settings for the trusted zone.  And then you�re able to, by URL, you�re able to put any sites that you trust not to hurt you into your trusted zone.  So, for example, I�ve got in there *.microsoft.com, *.ecommercerus.com, you know, whatever sites that I�ve decided, essentially, to lower my security for.



LEO:  And that uses certificates, right, for identity.  So you don�t...



STEVE:  No no no.



LEO:  ...have to worry about somebody spoofing that � well, what if you got a phishing email, and they spoofed Microsoft.com?



STEVE:  That�s certainly a concern.  The browser � I�m not�sure...



LEO:  It must be certificate based.



STEVE:  No, I�m sure it�s not, Leo, because it�s...



LEO:  It�s just the address, then.



STEVE:  It�s just a URL.  So the browser knows if it pulls the domain name and then has looked up, using DNS, looked up the IP and gone there.



LEO:  I guess it�d be hard to fake that.



STEVE:  I think it would be difficult to fake that.  I mean, I�m not going to say it�s not possible.  But in general I think it�s done pretty securely.  So essentially...



LEO:  It would take some sort of man-in-the-middle thing to do that.



STEVE:  So essentially what this does is it allows you to have different security settings when you�re just roaming about the Internet, which is where you want very high security; and then, for the sites that you visit from time to time, that you trust, you have security that has been lowered if it turns out that you need to.  And so, I mean, it�s really, frankly, it�s the optimal way to be secure on the Internet is to be running nothing, I mean, no JavaScript, nothing.  You know, many times when these alerts come out, their workaround until patches are available is turn off scripting.  Well, I�ve already got mine turned off.  I mean, it�s off for all the sites that I don�t already know I care about and I either need to or I want to enable those advanced features.  So, I mean, I�m a real fan of this approach.



LEO:  And if you do do it, you�re very secure.  I�m a little more cynical.  I would say this is just Microsoft�s way of deferring responsibility.  Now they can say, well, if you get bit, it�s only because you didn�t use security properly.  And I would say � I would bet 99 percent of Internet Explorer users don�t even know they have this capability, let alone use it.



STEVE:  Right.  It�s built in to versions of IE for the last three or four major versions.  It�s certainly been in 5 and is in 6 now.



LEO:  And in fact works better in Service Pack 2.  They beefed up the local � they changed how the Local Zone is handled to be even more secure.  So in theory it�s a good idea.  Do you think this solves the issue, this solves the security problem?



STEVE:  Well, certainly it transfers responsibility to the user, which is a burdensome thing to do.



LEO:  My point exactly.



STEVE:  Yeah, I mean, it does.  But certainly � okay.  The best possible solution would be that you would never have a website that would try to give you a malicious ActiveX control, and that the scripting technology would have no workarounds or mistakes or glitches that malicious websites could take advantage of in order to get control of your browser.  Unfortunately, neither of those are anything that a security-conscious user could rely on.



LEO:  And in fact, if you�ve got code, you�ve got insecurity.  So you�re just going to have � this is never going to happen.



STEVE:  Well, yeah.  And it�s not really fair to blame the browser because, I mean, look at all the problems we have just with the OS itself.



LEO:  Right.



STEVE:  So I guess my point is that the reason the browser is a focus point is it�s out there on the frontline.  I mean, you�re literally, when you click a link, you are sending your browser off to somewhere it has never been before, maybe you�ve never been before.  And it�s like, good�luck!



LEO:  Cross your fingers.  Hope you�re okay.



STEVE:  Hold your breath.  Yeah, I mean, in reality � that analogy is fun.  But of course what you�re really doing when you click the link is you are asking a server Lord knows where to send you a blob of stuff which your browser, running on your computer � I mean, maybe this is even more scary, it�s the actual truth of what�s happening, is you�re saying, you know, let me have it.  And so this blob of code comes down into your computer, and your browser says, okay, here we go.  And with the best of intentions and in good faith it starts reading this page, displaying things and running scripts which may be included in that code.  And who knows what�s going to happen?  And so it�s not that the browser is worse code than any other code we have.  It�s just that it�s the frontline.  It�s right out there as you surf the �Net, getting pounded with the stuff from any website that you visit.  So from my way of thinking, I want my shields up.  I mean...



LEO:  So to speak.



STEVE:  Yeah.  I want my shields up while I�m up poking around the �Net.  And so nothing ever infects me.  When I�m going to sites I haven�t been before, mostly they work.  If I decide that, okay, I want a better relationship with this site, you know, I�m on eVitamins.com or something, and I decide, okay, I want to buy some stuff.  Well, then I will go over and I will put *.evitamins.com into my trusted sites list because this is, like, the real, legitimate site.  But I have been able to sort of � I�ve been able to interview it first.  I went there with my shields up; I poked around.  If I decide I don�t want to go there, then, you know, it�s had no chance to affect me in any way because my browser won�t do anything for this website.



LEO:  That�s a good way to do it.



STEVE:  Yeah, again, it�s more burdensome for the user because your shields are up by default, and then you lower them only where you need to.  So it�s proven to be a fantastic way to work for me.  And again, as you say, Leo, unfortunately there�s this substantial power in IE, but most people don�t understand it or know what it�s about.



LEO:  Right.  Hey, I want to give you a little bit of credit.  You won�t get the credit probably elsewhere, but you deserve it.  It was not so many years ago that you banged the gong about raw sockets in Windows XP.  And of course about a year ago Microsoft finally disabled that raw socket capability.  And one of the reasons you didn�t like raw sockets is it made that possible for anybody who co-opted an XP computer to spoof their attacks, to use the raw sockets capability to put a random, nonexistent IP address in the packet that they were sending out.



STEVE:  Right.



LEO:  Well, there is a project going on, I just saw this on Slashdot, called the Spoofer Project, that�s attempting to measure how many ISPs or providers of any kind allow spoofing to occur.  As you�ve pointed out, all it takes is a little bit of due diligence on the part of the Internet Service Provider, and spoof packets aren�t really a problem.  And apparently, according to the Spoofer Project, they�ve only done a few thousand measurements, about 80 percent of the IP addresses they�ve measured don�t support spoofing anymore.  The ISPs have sat up, taken note, and prevented IP address spoofing.



STEVE:  Very nice.



LEO:  That�s really good news.  And I think you deserve credit for it because I don�t think anybody would have thought of this as a security issue, would have known about it, if you hadn�t raised a ruckus about raw sockets those years ago.



STEVE:  Well, the big problem, of course, are not individual end-users who are doing this, but there are people whose computers are affected by these remote-control IRC bots.



LEO:  Right.  We�re not worrying about Granny using raw sockets.  But we�re worried about her computer being used by a bad guy and raw sockets.



STEVE:  Exactly.  And then attacks being launched from her computer.  And having the advantage of raw sockets means that it�s easier to produce a denial-of-service attack on other machines, which is virtually impossible, I mean, practically impossible to trace back.  So I was really...



LEO:  I think it�s good news.



STEVE:  Yeah, I was really glad to see that Microsoft, you know, finally woke up with Service Pack 2 and removed raw sockets.  And it�s very cool that Slashdot�s doing this.  I had a plan that I never got back to.  The idea was going to be a little gismo called Spoofarino, was a piece of freeware that I was going to do that would allow people to determine for themselves whether their ISP allowed spoofing outbound.  That, of course, became much more difficult once XP Service Pack 2 happened because it would be much harder to generate such a packet.



LEO:  So because I can run as root as my OS X system, and Linux users can, as well � in fact, you can even do this on Windows if you run this little software � it�s actually not Slashdot.  They have the story.  But it�s from MIT.  It�s called the Spoofer Project:  spoofer.csail.mit.edu.  I�ll put a link in the show notes.  But I think what�s encouraging, whether you run it or not, is that so many ISPs have heard the call and are blocking spoofed packets.



STEVE:  Well, and I think they don�t want to be hosts for these bots, either.



LEO:  Yes, right.



STEVE:  So if they block � I mean, it�s so easy for an ISP to know if the apparent source IP of a packet that�s leaving their network could have originated in their network.  I mean, is it one of their IPs or not?  And if it�s not, just drop it.



LEO:  Right.



STEVE:  And so suddenly no machines in their network, within their entire network, can be used to generate spoofed attacks, and they stop being a useful source for those bots.



LEO:  So one little small victory, anyway.



STEVE:  That�s neat.



LEO:  Many more battles to fight.  Next week we�ll talk about really a bigger battle.  You can talk about securing your browser, and you can talk about better security policies from operating system companies.  But one thing we�ll never be rid of is bugs.  And we�ll talk about common�bugs...



STEVE:  Buffer overruns.



LEO:  Buffer overruns.  This is the big one.  How they happen and what they mean.



STEVE:  And why they�re so darn hard to fix and to prevent,�yup.



LEO:  And as you know, security is important to us.  That�s why we are very happy to have Astaro Corporation as our partner on this podcast.  They�re our great sponsor at Astaro.com.  Make sure you check out the Astaro Security Gateway, a free software for home users that you can run to protect yourself.  And of course for businesses and people like me who want to be extra careful and extra protected for a very reasonable cost, the open source Astaro gateways are really the way to go.  I love my 120.  I�m really happy I�ve got it.



So, Steve, we�ll be back next week, talking about browser and buffer overflows and all those nasty bugs.  I hope you have a wonderful week and enjoy the sunshine.



STEVE:  Talk to you then, Leo.



LEO:  Next Thursday, Security Now!.







Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/


GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#39

DATE:			May 11, 2006

TITLE:		Buffer Overruns

SPEAKERS:		Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-039.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  In one of their more "aggressively technical" episodes, Steve and Leo discuss the pernicious nature of software security bugs from the programmer's perspective.  They explain how "the system stack" functions, then provide a detailed look at exactly how a small programming mistake can allow executable code to be remotely injected into a computer system despite the best intentions of security-conscious programmers.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 39 for May�11, 2006:  Buffer Overruns.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



Steve Gibson is on the line, and we are ready to talk about one of the number one, in fact I think the prime cause of security flaws in software today.  Hello, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be with you.



LEO:  It�s great to talk to you.  Things are going very well.  Summer has come, and the sun is shining, and I�m moving offices.  And if you only saw how everything is teetering on chairs and tabletops.  I�ve kludged together a little recording setup so we can get this done, and then...



STEVE:  Well, we�re on Episode 39.



LEO:  Can you believe it?



STEVE:  And 52 is within sight, you know?



LEO:  That�s amazing.



STEVE:  Our first full year of Security Now!, yeah.



LEO:  Are you running out of topics?



STEVE:  No.  Actually, the user feedback is fantastic because it keeps me thinking about things.  And if I don�t take the topic directly, it gives me an idea for something else.  So I�ve got an outline that I maintain.  Like whenever something occurs to me, I write it down because I don�t want it to get away from me.



LEO:  Great.



STEVE:  And I think we�ve got lots of things to talk about.  And, you know, from the feedback I�m seeing, people are really enjoying this, Leo.  So I�m so glad we�re doing it.



LEO:  Great news.  Well, today we talk about buffer � you can either call them �overflows� or �overruns.�



STEVE:  Yeah, I guess �overrun� is technically a little more accurate.  As you mentioned, this buffer overrun is this pernicious problem that is the way so many of contemporary security flaws are exploited, essentially.  And this is going to be one of our heavier-duty episodes.  It�s one of those, okay, now, focus.



LEO:  Have a cup of coffee now.



STEVE:  But I promise, as we have achieved before, that if people listen carefully and get what I�m talking about, there�s another one of those a-ha experiences here.  People by the end of this are going to understand why it seems so difficult to write secure software with exactly how these sorts of exploits occur.  So I�m really excited about this No.�39.



LEO:  So what is a buffer overrun?



STEVE:  Well, we need to start and lay a little bit of foundation here.  One of the things that is happening is programming in general is becoming incredibly complex.  And programming is moving towards sort of a component model where programmers are no longer writing everything themselves from scratch.  They�re inherently, in order to develop the kinds of programs that are interesting to people, they have to use other people�s work.  You know, it�s like standing on the shoulders of giants and reaching higher than you could by yourself.  The problem is, those giants may not have been concerned about security.  So more and more, as we move forward, people are using other people�s code, code written by, you know, like whether it�s libraries or it�s an increasingly all-encompassing operating system underneath you, I mean, we all know just from our own experience that, for example, XP is huge.  Even Linux is growing.  I think it�s grown four times larger in the last five years, that is, Linux has.  I mean, and the reason is all these new services and features and facilities are being added that programs running on top of them can use.  And then of course in the Windows world we have this whole new .NET thing that has come along recently.  And so there�s a whole �nother programming environment.



And so essentially what happens is a programmer ends up relying upon the function of many subsystems that they themselves did not write.  And so they�re having to assume and presume � I mean, they have to � that those things are working correctly.  So in many cases it�s not even their fault, although their application, which relies on these subsystems, ends up bearing the brunt of responsibility because, you know, it was their application that had the problem, even though the actual flaw may have been sort of somewhere else or in their communication with these other subsystems.  So this component programming model that we see more and more often is part of the problem.



You know, my programs, the stuff I write, are pretty simple.  And I happen to be sort of a dinosaur, as we know, writing these things in Assembly language.  To a much lesser degree I depend upon other things because I�m writing simple programs, and I�m sort of staying away from, you know, these really huge projects which are really no longer feasible for one person.  We�re talking in modern corporations producing programs they�ve got teams of programmers.  And there�s another problem is, when it�s just me writing a program, I know all aspects of what I�m writing.  I�ve got it outlined, I�ve got it in my head, you know, I wrote it all.  So there�s no communication problem between me and myself.  But in team efforts you do have sort of, you know, this person will be writing this chunk of the system, and somebody else will be writing another chunk which is very different.  And these separately written chunks have to interact.  Well, they�ll produce specifications typically for the way their parts fit together.  But mistakes in that communication, it�s like, oh, I thought you were going to this.  And the problem, of course, is when these mistakes are not found, there�s presumptions that people made and, again, these boundaries between separate pieces of work, whether it�s a commercial component library or it�s something that somebody else in your own organization working on the same project wrote.  Any kind of misunderstandings can cause sort of a�mismatch.



And what we�re going to look at here in detail is exactly, I mean, really exactly how that happens.  But so it really does � it does sort of blur the lines of responsibility.  And it explains why, even with the best of intentions, I mean, even people now focused on security, if other portions of the system were written without a focus on security, which really does require a special sort of mindset, or if they were written before security was an issue and they�re still being used, this is a problem.



So, I mean, a perfect example is, you know, at the beginning of the year we all tumbled around on that Windows Metafile issue.  And assuming, you know, Microsoft�s stance, they understood now that what they were doing before should absolutely no longer have still been done, but it was still being done.  So there was old code that had been moved along from Windows 98 and NT up into modern times, where security is a much bigger issue today than it was before.  And there was a gotcha, you know, in the process.



The other thing that goes on with programming, and I want to discuss this just before I get into the details of how the stack and buffers and things work, is the programmer�s mindset.  I know as a programmer that what I�m trying to do is get my code to work.  That�s a completely different mindset than somebody who is attacking my code, trying to find a way for it not to work.  And I know, for example, you know, when I�m writing text � I wrote, for example, the Tech Talk column every week for eight years for InfoWorld magazine, years and years ago.  I would write a column, and I would hand it to a couple of friends of mine, or actually they were employees, and have them proof it.  The point is, I can�t proof my own column because I know what I meant, and my eyes won�t see the words that are wrong.  You know, they just won�t.  I can read it three times really carefully and not see the mistake.  Someone reading it who doesn�t have sort of an emotional buy-in will read it and say, oh, Steve, you meant this word.  And I look at it, I go, oh, how did I not see it?



LEO:  Right, right.



STEVE:  But it�s ego buy-in.  I want it to be accurate.  I know what I meant.  And so my brain just sees it as I meant, not as I wrote.  Well, exactly the same thing happens with code, maybe even to a greater degree, due to the nature of how complex the practice is.  And of course it�s the complexity that is what intrigues programmers.  It�s why many, so many of us really enjoy programming is it�s an intellectually engaging thing.  But what I find when I�m debugging a program that isn�t working is I can stare at the code, it looks just fine to me.  I mean, no matter how much I look at it, it looks fine.  So it�s when a debugger � you single-step through the code, and you see it do the wrong thing.  I mean, you stare at it, and you go, oh.  I mean, suddenly, I mean, you have to have your face rubbed in the problem before you get it.  There�s that level of sort of like assumption of correctness.  It�s an interesting experience for a programmer to have where, when the debugger just says, look, moron, this is wrong, and it�s like, oh, why, you know, how did it write it that way?  Why didn�t I see it that way?  It just � it�s the kind of thing that happens all the time.



So my point is that anyone writing code is trying to get it to work.  In most situations they�re in a team, they�re under deadline pressure, these programs always take longer to write than anyone expects, just because that�s the nature of the beast.  People are putting in long hours, and they�re desperate to check that code in and say, okay, I�m done with my part, or this is now working.  And so everything about that process is getting it to work as opposed to looking at how to break it, which is a fundamentally different, I mean, radically different way of looking at the same code.  And that, of course, is the perspective of the malicious hacker who is trying to find a way into a system, trying to find a way to break code, is the hacker is looking at it not thinking how wonderful it is that it works.  They�re specifically looking for ways to get it not to work, ways where assumptions which the programmer had, or the team, or the programmer communicating to something they didn�t write, a third-party object or module or component, where those assumptions have broken down.  And in those little interstices you can get a foothold and cause security problems.  That�s literally what it�s about.



[Phone ringing]



LEO:  That�s a programmer calling, saying thank you for making all these excuses for me, Steve.  I can tell you�re a programmer.  But really, it also is a mistake, and a fairly serious mistake.  And sometimes I wonder why they�re still making these mistakes.



STEVE:  Well, it�s funny because Steve Ballmer, apparently, who�s now the president of Microsoft...



LEO:  Oh, makes him crazy.



STEVE:  Oh, it does.  And there was one famous outburst, I don�t remember exactly when it was, I think it was after XP�� remember Microsoft claimed that XP was going to be the most secure version of Windows that had ever been created.  And I objected as a security person to that statement because you can�t claim that something is going to be more secure.  History has to judge that retrospectively and decide whether or not it was true.  And of course until Service Pack 2, which really, really made some major changes to XP, Windows XP was the least secure Windows that had ever been created.  I mean, all kinds of problems arose from all the new code that had been added to XP.  I mean, it�s�inevitable.  So anyway, so apparently Steve Ballmer once went in to a group of programmers and screamed out loud, you know, �Why can�t we fix these buffer overruns?�



And so let�s talk about exactly what this is, how it�s possible for hackers outside of a system to basically inject their code into the system.  To understand this it�s necessary, I mean, at the level of detail that I think people will really be fascinated by, it�s necessary to understand something known as �the stack.�  You know, computers have memory.  And it�s possible to ask the computer to give you a block of memory, sort of borrow it from the system for your own uses, for whatever purpose, like to store data in, to accept input from a user, to assemble something that you�re going to send out, for whatever reason, a so-called buffer of memory.  And then when you�re done with it you free it, or release it back to the system.



Well, there�s an architecture that has developed in our contemporary computers which is known as �the stack.�  And what the stack is, I don�t find it actually useful to use sort of the stack of plates in the cafeteria model, the idea being that you put plates in this little spring-loaded thing, and the plates go down, and then you take them off, and they pop back up.  I mean, that�s sort of the analogy that is used sort of in a crude way, but it doesn�t give us what we need in order to understand what happens with buffer overruns.  So...



LEO:  Well, it is important, though, just so you understand that it�s a last-in, first-out stack.  I mean, that�s how data goes in and goes out.



STEVE:  Kinda.



LEO:  It�s not in order.



STEVE:  But actually, I mean � well, okay.  The way it really works is the reason there�s really a problem.



LEO:  Oh, I see, all right, okay, I know where you�re going.  All right.



STEVE:  So what the stack is, it�s a large region of sort of uncommitted memory.  So think of when a program is started up, the system, the operating system, gives this running program its own stack, which is � and so just call it a �stack� as sort of an abstract term.  What it actually is is a long buffer, actually almost a bottomless buffer that you don�t need to worry about running out of.  If people want to picture this, think of like maybe, I don�t know, an unwound, long roll of toilet paper, or just a really long banner, for example, oriented vertically from the top down.  And for reasons that we�ll see in a second, memory is allocated in this stack from the top downwards.  So when the stack is empty, that is, it doesn�t contain anything, there�s a pointer to the very top of the stack.  It�s at the top because there�s nothing above it.  And if the program wants to allocate some memory from the stack, it�s very simply done.  The �stack pointer,� as it�s called, is moved downwards by the amount of memory that the program wants to allocate for its use.



LEO:  The pointer is pointing to the next available space.



STEVE:  Right.  And so if the pointer is moved downwards by a certain amount, then what the pointer is now pointing at is the beginning of that amount of space that was just allocated on the stack.  So if you visualize this pointer being moved down like by a thousand bytes, then from that point upwards there is now a thousand bytes, the beginning of which is pointed to by this pointer.  So the way this system works is many different things use this stack, sort of all at the same time.  It�s sort of a general purpose scratchpad.  So the program might move it down to allocate some space, then move it down a different amount to allocate some more, and down a little more to allocate, you know, like three different regions of buffer.  And then, as these things are no longer needed, the pointer is moved back upwards, back up toward the very top, where the stack would then again be empty.  So it�s a very convenient system from a programming standpoint, and it�s inexpensive in terms of the technology being used.  That is to say, it�s virtually instantaneous to move � just to change the value of this pointer by a certain amount.  And because it�s so efficient, it�s the system which has come into virtually universal practice in modern computers.



LEO:  It�s used very heavily in subroutine calls.  You save a context, you jump into the subroutine, and then you could pop the context back out, and...



STEVE:  Well, in fact, that�s a perfect segue to explaining how a subroutine is essentially called or invoked, which is where this becomes a critical problem.



LEO:  Now, you manage it by hand because you�re an Assembly�language programmer.  But compilers do this all automatically.  The C programmer doesn�t see the stack particularly.



STEVE:  Right.  They�re not at all aware of it.  But it�s still happening in the background and is the source of vulnerability.  What happens when a program is running along and wants to call a subroutine, a subroutine sort of just being sort of a chunk of code which has been written and is standing by to perform a certain function.  And that code might be called by many different other locations in the program.   For example, say that it was a little piece of code to turn everything into uppercase.  And you might want to do that if you�re searching for something, and it�s much faster to search all uppercase or all of a known case than it is to do a mixed case search.  So you might want to just turn a buffer of text into all uppercase.  And many places in your program you would have the occasion to do that.  So you only write this code to do the uppercase conversion once, and then you call that function, that subroutine, whenever you want that to be done for you.  So that�s sort of an example of the power of a subroutine or a function call is it provides resources that the program can use wherever it is.



Well, when you call this code to execute the function, the code somehow needs to return control to you.  It needs to come back to where you called it from.  And since you might be calling it from many different places in the program, that return to you can�t be sort of fixed.  It can�t be hard coded.  It has to be dynamic.  So the way the system handles a so-called subroutine call, or a function call, is when you call the subroutine, the address of the next instruction below that call is put on the stack.  It�s pushed on the stack, as we say, meaning that that stack pointer is moved down just by 4 bytes, by 32 bits.  And at that location the address of the next instruction below where the call was made is stored.



LEO:  It�s called the �return address.�



STEVE:  The return address, exactly.  And so then the computer jumps to the location you have called this subroutine and begins to execute the code.  Now, the subroutine will use the same stack you�re using.  That is, say that the subroutine for its work, for example, it�s going to take the text buffer you give it and create a new buffer that�s going to be uppercased, for example.  So it could take the stack pointer and move it down by however much memory it needs and then use that region of the stack from where the stack pointer now is upwards, as long as it wants.  When it�s done using it, it puts the stack pointer back where it was.  And in order for the subroutine to return to you, it literally executes an instruction called �return.�  And that instruction pops that return address off the stack, meaning it moves the pointer back up.  Now it has those 32 bits that were saved there, which is the instruction address of the location below where this subroutine was called from.  So the processor jumps from that address and continues executing sort of seamlessly.



So in the main flow of the code you call the subroutine to, for example, uppercase a buffer.  It does whatever work it needs, maybe borrowing some of the memory from the program�s stack as a scratchpad for doing whatever it�s doing.  It then releases that memory, which puts the stack pointer back where it was when it first got control.  Then the subroutine returns, using the value stored on the stack, returns to where it was called from.  So that�s the whole mechanism.



Now, how does this break?  How does it fail?  A really interesting example is where some programmers are paying attention to the sign of their data and others are not.



LEO:  Positive or negative, whether the number is positive or negative.



STEVE:  Exactly.  In binary � let�s talk a little bit about how sign is handled because that will factor into this.  And then people are going to have one of those a-ha experiences here pretty quickly.  In binary numbering, all bits being 0 means 0.  And as you begin turn the bits on in the binary sequence, by sort of universal agreement that represents increasing values.  In 32 bits � which is what most of our processors still are, those who haven�t moved up to 64 bits, but we�ll take the 32-bit case in this instance � in 32 bits you have from basically 0 to a value a little bigger than 4�billion.  And then you get to all ones.  And then if you add one more to that, sort of it overflows, or wraps around back to 0.  Well, that�s a so-called �unsigned value.�  And it�s regarded, for example, in C it�s called a UINT, an unsigned integer.



LEO:  And it�s always positive.  It can�t be negative.



STEVE:  Well, exactly, because every bit combination between 0 and that maximum 4 billion, that represents a positive value from 0 up to that 4 billion quantity.  But in many instances in programming it is useful to have a signed value, that is, where you do have negative � you�re able to represent negative quantities as well as positive ones.  So the way this is handled in the actual storage in the computer is that this 4 billion space that 32 bits gives us is chopped in half.  Half of them are the positive, from 0 to 2 billion, and the second half are negative.  And it actually goes from -2 billion back down towards 0.  So, for example, if we count up towards � with a signed counter we count up towards larger values, we�ll get to something above 2�billion.  And if we go one more, what happens is � and actually that maximum value has the top bit being 0 and all the rest are ones.  We then add one more to that, which all these ones overflow, making the top bit a 1.  And actually that�s called the �sign bit� in a signed number.  And so when that top bit is a 1, that means that the rest of the bits represent a negative quantity.



So, okay.  So imagine that some code, a program, wants to accept some data from another program, from a user, from a script running on a web page, from wherever.  It wants to make sure, though, that the data that it�s receiving will fit within the buffer that it�s allocated.  And so say the programmer says, okay � say that it�s a URL that is going to be accepted at this part of the code.  The programmer thinks, okay, how long can a URL probably be?  Well, maybe a thousand characters.  You know, that�s a really long URL, even by today�s standards.  So the programmer allocates a thousand-character buffer by moving the stack pointer down, as we�ve seen, and then has access to the thousand characters from where the stack pointer is upwards.  So that�s sort of the programmer�s scratchpad area.



Now the programmer � say that this URL has a length, it�s provided with a length, and then the data.  Well, the programmer checks the length that is declared to make sure that it�s less than a thousand characters long to make sure that the data will fit within this buffer.  And if so, then the programmer might call another subroutine to copy the provided data into the buffer.  Well, if the programmer made a mistake, and just not even thinking about it was thinking that the value being provided was a signed value, which really doesn�t make any sense because it makes no sense to have a negative length on data.  Data is always going to be an unsigned length.  So, but just because the programmer�s used to typing INT, INT, INT, which stands for integer, which is inherently a signed value, instead of UINT, which is unsigned integer, if the programmer declared this value, suspected � or, sorry, expected that the value were going to be signed, or just didn�t think about it, then if somebody malicious declared the value to be -5, then when the programmer compares the length to the length that�s being declared for this URL to the buffer size he�s allocated, 1,000, you know, is -5 less than 1,000?  Well, yes, it is, if it�s a signed value, because -5 is less than 1,000.



So the programmer says, okay, this URL I am about to store will fit within my thousand-byte buffer.  So he hands � the programmer now calls a subroutine to copy the data from wherever it�s coming into its buffer.  So he provides the -5 and the address of the buffer to a subroutine.  Well, now the subroutine, which somebody else has written, knows that lengths cannot be negative.  I mean, that makes no sense.  So in the subroutine the length is handled as it really should be, as an unsigned value.  Well, we know because we just looked at how values are stored in binary, a negative value, if it�s treated unsigned, is actually a very huge positive value.  So the subroutine which has been asked to copy the URL sees a really large value as the amount of data it�s supposed to copy.  Which it says, okay, if that�s what the guy who called me wants me to do, that�s what I�ll do.  So the subroutine copies this URL that might be, for example, 4K, because the � or say that the value is shown as -4K, but the original program did the comparison, said is 4K less than 1K, the buffer size?  Yup, that�s less, no problem.  Well, the subroutine which is doing the copying realizes this is unsigned, I mean, treats it as an unsigned value, which means it�s a really huge value.  That program copies the data way more than the program that called it expected, for example, 4K worth of data, trying to fit it into this programmer�s provided 1K buffer.  Well...



LEO:  So the problem is because they�re thinking of it as a signed value, but it really is an unsigned value.  It�s too big for them.



STEVE:  Exactly.  And some clever hacker somewhere realized that the code that was calling this copying subroutine was written inaccurately and that, for example, telling it it was -4K would slip by its guard.  It would get under...



LEO:  Actually, the way they find this out is by trial and error.  They just try it until they find something that breaks, really.



STEVE:  Very often.  So now in our model we�ve called a subroutine, and it has written more than the 1K that we expected.  Now, remember that to create this 1K buffer we moved our stack pointer down, making a region above the stack pointer that is a thousand bytes� worth available.  Well, if this more than 1K is copied, if, like, 4K were copied, it would fill up the 1K and continue on upwards, overwriting all kinds of, I mean, whatever else was on the stack above that location.  Really, I mean, wiping things out.  So at that point control is returned to the program that called it, which doesn�t realize anything really bad has just happened.  It finishes up its work and releases that 1K buffer it allocated, which moves the stack pointer back up by a thousand bytes.  But now, instead of the next thing on the stack being the return instruction, remember that if this is going to then return to whoever called it, it�s going to � the stack is popped, and the value on the stack is the address to be returned.  Well, that�s been overwritten maliciously on the stack so that the return value is no longer accurate.  If a programmer who was trying to exploit this did his job correctly, what�s there is instead the address of other code right there on the stack, which will then get executed.



LEO:  Oh, very clever.



STEVE:  And that�s exactly the way somebody from outside a computer system could take advantage of a little mistake, you know, just literally the letter �U� for unsigned was left off of a variable declaration in C.  And since C, as you mentioned, Leo, C handles these things for programmers, when C sees that it�s an INT comparison as opposed to an  unsigned integer comparison, that�s the way C compiles the code, which causes this negative value to slip under the radar of a programmer who was really trying to do the right thing.  They were trying to say don�t copy more than a K, making sure that a URL is a K byte or shorter.  But in fact, because of this missing unsignedness, a subroutine that did the copying thought it had permission to copy 4K.  And�then...



LEO:  Sometimes it�s even worse.  I mean, sometimes the programmer uses an unchecked string copy without a range on it and just kind of blasts data in there by accident.  So�there...



STEVE:  Well, you�re right.  It�s certainly the case that maybe the programmer wasn�t checking it all.



LEO:  Right.



STEVE:  As you said, that can happen.  But even when you�re, like, trying to do the right thing, it�s possible to end up with code which is insecure in a very weird way.  Because think about it.  As long as you provide a positive length, it�s going to work.  You could try to give him 4K, a positive 4K...



LEO:  And he�ll reject it.  He�ll say...



STEVE:  His code would say, nope.



LEO:  What do you think, I�m stupid?



STEVE:  Exactly.  That�s too big.



LEO:  Right.



STEVE:  But because of this mistake of just sort of handing responsibility off between different parts of the system, it�s possible to find these.  And so, literally, code was written onto the stack, which is then executed.  And at that point your computer is in the hands of a hacker.  It is potentially taken over.  And this is the way all those worms that we used to be having, Code Red and Nimda and all these things, where no � I mean, and those, for example, were mistakes in Microsoft�s Windows server that had these kinds of vulnerabilities that allowed worms to just literally inject their own code without the system�s knowledge or permission into the operating stack of the server, and then run that code and take it over.



LEO:  It�s pretty impressive, though, accomplishment, even on the hacker�s part, because it isn�t just kind of randomly sticking code in there.  They�ve got to figure out where to put it.  They�ve got to figure out where the return address would be and make sure it jumps into another area where it�s their code.  I mean, I imagine there�s a lot of trial and error in there, and they�re very clever at doing this.



STEVE:  Oh, Leo, I mean, this is advanced programming to be a hacker like this.  There�s no doubt about it.  I mean, to do this you have to know the system at a level below � certainly below the so-called �script kiddies,� and even really below the level of most C-style programmers who are taking advantage of the convenience of the C language being an abstraction of the machine.  And it�s that abstraction that allows their code to be portable among different architectures, where the compiler is doing all of the detailed work.  Well, hackers, in order to exploit this level of flaw, I mean, they�re absolutely operating down at the machine level and, I mean, truly knowing what they�re�doing.



LEO:  It�s very impressive.  And amazing that it happens so often, given all of the things that have to go wrong and all the things that have to go right to make it work.



STEVE:  Well, it�s again, you know, harkening back to the beginning of this podcast where I really wanted to give people, I mean, not to make excuses, but honestly to explain why these problems keep happening.



LEO:  Right.



STEVE:  It�s just this is a, you know, programming is a complex task which is becoming increasingly complex.  And we�re relying on many more subsystems that we didn�t ourselves write.  So inherently you make assumptions about how something you�re going to use, some subroutine library, you know, the operating system, whatever, you make assumptions about what it�s going to do.  And when those don�t quite match up, that creates a little opportunity for error.  And, you know, programs literally have to be perfect in order not to have any bugs like this.  And it just � it�s incredibly difficult to make them so.



LEO:  It is.  It�s remarkable.  Well, once again you�ve explained the inexplicable.



STEVE:  Well, one bit of good news I want to talk about just briefly to wrap up this topic is something which was introduced in Windows XP Service Pack 2, which is � the acronym is DEP, stands for Data Execution Prevention.  And it�s one of the things sort of in answer to Steve Ballmer�s war cry or frustration cry about why they can�t solve this problem.  Because one of the things that�s interesting is the stack that we�ve been talking about is really only for storing data.  It�s not for storing code.



Now, back in the dawn of Windows, literally Windows 3.1, way back, you know, the early Windows, before we had graphics accelerator chips, the very clever guys who wrote GDI, the Graphics Device Interface portion of Windows, they, in order to make the display work quickly, they would put code on the stack, that is, literally, Windows would write a program to move data quickly from one place on the screen to another, back before the hardware in the display adapter would do that for them.  So there is some history of code running, I mean good code, deliberate code, running on the stack.  But in general, and certainly much more so in modern times, the stack should really only contain data.  It ought to be temporary variables.  It ought to be subroutine return addresses, as we were talking about, or buffers that are being allocated by the program for its temporary use, which it then releases.  So there really isn�t a reason to allow the stack to be executable.



Well, a very cool feature in the latest processor hardware from AMD and Intel is available to essentially mark the stack as non-executable code � wait a minute, sorry, non-executable memory.  So that if a buffer overrun occurred, and the processor attempted to jump into the data on the stack, they would immediately throw up a system exception and not allow that to continue, thus completely shutting down the whole buffer overrun problem.



Now, this Data Execution Prevention has been available since Service Pack 2.  Only the newer Intel and AMD hardware supports it.  There�s a sort of a weaker, software-only version which can be turned on, which provides some protection.  The other problem is that there are some programs that won�t run if their stack is locked down and not allowed to execute because of some of the tricks that the programmers or the compiler are playing.  So there�s a little bit of a transition phase here where � and Windows handles that because, if you�ve got one of these DEP-enabled processors, and you�ve got it turned on, you are able to make exceptions for known programs that have a problem with�this.



Anybody who wants to know more about it can just Google �Data Execution Prevention,� or �DEP,� and learn about it.  It�ll take you right to Microsoft�s pages where you can see how to turn this on if you haven�t messed around with it.  It�s a really nice step forward which is going to, you know, reasonably help, you know, this whole class of security troubles.  And, you know, if we�d had it years ago, things would be a lot better than they have been.  But at least, you know, future hardware will support this.  Future software can be expected to be compatible with it.  And I�m not making excuses for programmers again.  I mean, we do make mistakes.  They�re just so hard to prevent, especially when it�s not even in our code, it�s some code that we�re relying on that somebody else wrote.  So this is a really nice sort of prophylactic measure to protect your system from remote code injection exploits.



LEO:  Yeah.  Also, by the way, there are versions of this for Linux and some versions of BSD.  And it�s built into the hardware of the processor, although the operating system has to enable it.



STEVE:  Exactly.



LEO:  Well, great stuff, Steve.  I really appreciate your taking the time to make this clear.  It�s something that, you know, I�ve tried to talk about in the past.  We�ve had experts on the shows trying to explain it.  But you did the best.  Very, very clear.  Thank you.



STEVE:  Well, you know, as a programmer, and because I�m down at the Assembly language level, I�m dealing with the stack on an intimate basis, so...



LEO:  You make your own stacks.



STEVE:  Exactly.



LEO:  Your own stack frames.  Well, hey, by the way, I don�t know if you saw it in the show notes or the comments to our show notes from last episode, but there was a great � did you read � UnlivedPhalanx wrote a really nice � I guess you did because you responded to it � a really nice comment about SpinRite.  He said, �I just wanted to write in here about how amazing SpinRite really is.  I had a hard disk with a tax refund and a recent insurance claim go completely bonkers to the point where the moment you turned on the computer it would crash.  It was no longer accessible by any other means.  In under four hours SpinRite restored the drive to full working order and allowed me to save every single bit of information on the drive.�  Whoo.  �So when you hear Leo talk about SpinRite, he isn�t just plugging a friend, he�s telling the honest truth.�  And I am.  SpinRite is the single best disk recovery tool ever written.



STEVE:  I saw that.  I mean, obviously SpinRite supports me, so I love it, and I depend upon it.  But, you know, we get this email from people like the posting that you just read from last week where they really needed their stuff saved.  And I just � it just really warms my heart when...



LEO:  I bet it does, yeah.



STEVE:  Yeah.  When I�m able to help people like that.



LEO:  You can see more of these testimonials at SpinRite.info.  And of course you can get your copy of SpinRite � everybody should have one � from GRC.com.  That�s where Steve hangs his hat.  You�ll also find at GRC.com the show notes for this show and all the past Security Nows, including 16KB versions for the bandwidth impaired and Elaine�s great transcripts.  She came back from her trip safe and sound, I hope.



STEVE:  Yup, and she�s ready to make a transcript of this�one.



LEO:  Transcribe some more.  Welcome home, Elaine, glad you made it back.  [Thanks, Leo.]  And that again is GRC.com/securitynow.htm.  And of course I want to thank our wonderful sponsor, the Astaro Corporation, the makers of the Astaro Security Gateway software.  You can get it at Astaro.com.  There�s a free version for home users which is fantastic.  If you�ve got an old machine, put it on there, and it turns your system into a firewall that is, bar none, the best.  They support open source.  It�s open source, so it�s great.  They also sell hardware.  I have their Astaro�120, their gateway, and it is really great.  Highly recommended.  Astaro.com.  I said �Astaero,� and they want me to say �Astaro.�  So I�m going to say �Astaro.�



STEVE:  I think as long as people go there, they probably won�t be complaining much.



LEO:  Astaro.  Hey, Steve, thank you so much.  What are we going to do next week?



STEVE:  I haven�t even looked at my notes, but I�m sure we�ll have something good.



LEO:  Well, you know, folks, keep posting comments and suggestions and questions for Steve because, as always, I think he�s inspired by the things you ask and suggest to him.  Actually next week will be Episode 40, so it�ll be your questions and answers next week.



STEVE:  Oh, that�s right.  Perfect.  Well, there�s the answer to that question, Leo.



LEO:  It was a simple one.  Thank you, Steve.  Have a great day, and let the brain cool down a little bit now.  I think an ice bath would be a good thing.  I know I need one.



Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#40

DATE:		May 18, 2006

TITLE:		Listener Feedback Q&A #7

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-040.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world �application notes" for any of the security technologies and issues they have previously discussed.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 40 for May�18, 2006:  Listener Questions and Answers #7.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



I look forward to Thursdays every week because I know I�m going to learn so much about security.  Ladies and gentlemen, Steve Gibson, security guru.



STEVE GIBSON:  Hey, Leo, good to be back with you.



LEO:  It�s good to have you.  This is Episode 40, so it means it�s one of our Mod 4 episodes.  We�re going to do questions and answers.  But there�s some big � a lot of big security news, and I know you wanted to cover some of that.



STEVE:  Yeah, a couple things.  For one thing, Apple announced 31 vulnerabilities this week.  Yeah.  With, you know, the OS X version 10.4.6 and previous.  And those, you know, there are local and remote code execution problems, information disclosure, denial of service, and local privilege escalation problems.  I mean, basically just a whole collection of the typical kinds of problems that, you know, exactly like what we were talking about last week and the week before with the � this is the fundamental problem of writing secure software.  And as we all know, Apple has for a long time enjoyed a history of much fewer problems than Windows has been exposed to.  In fact, you�ve probably seen these commercials that they�re running now, Leo, you know, the guy who�s standing in for Apple and one who represents the PC.



LEO:  Yeah.



STEVE:  And how the PC gets viruses so quickly, but there aren�t any for the Mac.



LEO:  I have some problems with those ads.  But they�re ads.  They�re marketing, you know.



STEVE:  Yeah, and they�re getting the message across.  What I�m noticing is that these are coming out just as it�s beginning to be no longer true.



LEO:  Right, right.  Well, it�s interesting because Apple never wanted to play that virus card.  And I think that they�� one of their resistances was they didn�t want to antagonize virus authors.  It was the best kept secret in the computing world was there�s no viruses, and don�t tell�anybody.



STEVE:  Well, and historically, as we have said before, people who write viruses write them for the computers they own.  And Macs have, again, you know, years ago not been in the mainstream.  They�ve been, you know, in schools to some degree.  But what kids had to play with were PCs, and so that�s what they wrote viruses for.  Increasingly now, of course, Macs are affordable, and they�re an increasing�target.



LEO:  You watch, though.  I don�t think we�re going to see the same degree of virus problems on the Mac platform, just because many of the things that make viruses possible that we�ve talked about on Windows, things like ActiveX, ActiveScripting, the fact that every user is really running as admin, those things aren�t as prevalent or even possible on the Mac side.



STEVE:  And population size.  I mean, a virus author who wants a well-propagated virus...



LEO:  True.



STEVE:  ...will still write it for Windows, just due to the population size.



LEO:  Right.  I mean, nowadays, the reason people write viruses is to co-opt computers.



STEVE:  Right.



LEO:  And you�re going to go where you can get the most�computers.



STEVE:  Exactly.  Well, another...



LEO:  So that�s one issue.  Yes?



STEVE:  Yeah.  Another really biggie is that a flaw has been found in the RealVNC remote authentication.  RealVNC is a very popular open source remote desktop system that allows people to, you know, basically connect to a remote machine and then get access to its desktop.  It�s super well used.  This is a really bad vulnerability because it defeats, completely defeats the authentication, meaning that anyone who can find a RealVNC server, or that is to say service port, exposed, until this patch is applied and RealVNC is updated, can connect to it and basically log in immediately.



LEO:  Ooh, boy.



STEVE:  Now, I got a kick out of the what to do in the meantime.  People were saying, well, you know, close any ports that you have exposed to the Internet.  And this comes back to something that I�ve said before, and I want to keep reminding people, which is never leave default ports alone.  People who, for example, are running web servers, you pretty much have to have the server running on port 80 because that�s where everyone�s browser is going to expect to see it.  Now, if you were running your own web server, for example, from home, just for remote access for you, for example, if you wanted to access your documents or something remotely, then by all means move that web server to some funky port of your own imagination.  The only time you really need to leave ports in their default is if you need people who don�t know what port you�ve chosen to access your service remotely.



So in the case of RealVNC, someone running a RealVNC server at home, so that, for example, they�re able to access their home desktop remotely, by all means change the default port to some random number between 1024 and less than 65535 because what happens is, when a vulnerability like this is discovered, the bad guys start scanning the Internet for connections on the default RealVNC port.  When they get one, knowing what the vulnerability is, they can log on to your desktop, and you�re theirs.



LEO:  There�s another way you could secure it.  We use RealVNC for the radio show for call screening.  But what we do is we establish a VPN link first and then open the RealVNC.  So it�s within a VPN tunnel, which until VPN is � which could be, but until it�s compromised, that�s safe.��Right?



STEVE:  Well, as long as the RealVNC server itself is not�exposed...



LEO:  No.



STEVE:  ...that is, the RealVNC port is not exposed to the�Internet...



LEO:  It�s internal.  It�s internal.



STEVE:  Then you�re absolutely right, that�s a great�solution.



LEO:  Yeah.  So in other words, I have to get on the Local Area Network by using VPN...



STEVE:  Right.



LEO:  ...before I can get access to the VNC server.



STEVE:  Right.



LEO:  It�s not exposed.  It�s not naked to the world.



STEVE:  That�s a great way to fly.  So for anyone listening to this who is using RealVNC, immediately update your RealVNC to the latest version that you can get from their website.  They�ve fixed the problem, but we want to get the message out.  And while you�re doing that, if you are not running it on just some non-default random port that you�ve chosen, make that move now.  Write the port down or use something memorable, but that�s not leaving it at the standard service port.  Because you always want to run services on non-default ports when you can.  This is a perfect example of why that�s a really good lesson.



LEO:  Of course it�s not fully secure to do that because some of the sniffing software will just attempt to make a connection across all ports.  But it�s a lot slower to do that.  And so I would imagine most people just stick with the default ports.  And there are enough open ports that they can just use those.



STEVE:  Right.



LEO:  But if they really wanted to attack you, they could test every port for a VNC connection.



STEVE:  Well, yes.  For example, another approach is, instead of scanning the Internet, if somebody knew your IP, for example, from it being posted in a bulletin board, blog, or in email that was made public, or in a newsgroup forum where the email was available...



LEO:  On IRC, on BitTorrent, I mean, people know your IP address in many cases.



STEVE:  Exactly.  It�s not something that it�s easy to keep quiet.  If someone knew your IP, and they knew somewhere on that IP, at some port on that IP, there was a RealVNC server, you know, for example, you�d bragged about it in the past or talked about it or something...



LEO:  They could find it.



STEVE:  They could, exactly.  Then, you know, the fact that they know what IP it�s on narrows their search dramatically.



LEO:  Right, right.  Ah.  If you used Hamachi to establish the connection and then had RealVNC running locally...



STEVE:  That�s a great application for Hamachi, and you�d be completely safe.



LEO:  Good, all right.



STEVE:  Another interesting tidbit, though, I just wanted to mention, is there�s sort of a boiling controversy over the purpose and the future of the Whois database that ICANN is trying to decide what to do with.



LEO:  Now, this is of great interest to me.  I�m sure it is to you, Steve.  But when I have a website, and I do have quite a few, my address, my phone number, those are made public in the Whois database.



STEVE:  Well, for example, one of our listeners created or grabbed the domain SecurityNow.info.



LEO:  Oh, dear.



STEVE:  Well, I know.  SecurityNow.info brings up a little page that redirects people to my SecurityNow.htm page.



LEO:  Well, that was nice of him.



STEVE:  Very nice of him.  But I didn�t want to sort of formally endorse that because he has control of the domain and I don�t.  So I tried, I used the Whois database to try to find him.  I got an email address.  I don�t remember now, it was maybe at GoDaddy or something, and sent him a note saying, hey, I notice you registered SecurityNow.info.  Would you be willing to transfer that to me?  I�d be happy to pay your expenses, blah blah blah.  I never got any reply.  Chances are it went into some bit bucket somewhere, and he never saw it.



LEO:  So he�s listening now.  Yes, we�re looking for you.



STEVE:  That would be � I�d really love to have the domain and be happy to, again, cover his expenses.  But, again, I can�t endorse it because we don�t have control of it.  So, you know, so that�s a problem.  But, for example, both sides of this is interesting because, on one hand, people, for example, political dissidents or bloggers may want the option of retaining some anonymity.  And of course the anonymity is something that the Internet to varying degrees has always offered people.



LEO:  You know, television show hosts might want some anonymity.  Don�t forget that.



STEVE:  Sure, sure.  And so on one hand you can say that the Whois database needs to not necessarily identify someone to the degree that would potentially compromise their own personal safety.  The flipside is that, in the post-Katrina disaster relief stuff, we know that many fake �donate to Katrina victims� websites were created, and the Red Cross was very upset with those sites.  And they were able to use sort of the soft and fuzzy, doesn�t necessarily have to be accurateness of the Whois database to hide themselves, and also to, like, put non-verifiable obscure records in.  So ICANN, and in general the Internet community, are really at odds right now over what to do about the problem.



LEO:  There is a simple solution, by the way, I think, is a third party involved.  And in fact that�s what I do with GoDaddy.  There�s a company that offers its service, for a fee, at GoDaddy.  I think it�s Domains By Proxy.  And everything � they hold the information.  And everything in my � if you go and do a Whois on TWiT.tv, you�ll see Domains By Proxy.  And then I can go through Domains By Proxy, and presumably a police agency or ICANN could go to Domains By Proxy and say, hey, look, you know, this is a spurious site, we need that information.



STEVE:  Right.



LEO:  I think that would be the way to do it, and I hope that they find a solution.  Have they come up with anything,�or...



STEVE:  No, it�s really interesting.  I spent some time the other day reading through the, I mean, just the incredible bureaucracy of this kind of process with, you know, opening the forum to the public, allowing people to give their pros and cons.  And, I mean, as with any complex issue, it isn�t clear that there�s a cut-and-dry solution.  And in fact the notion of running through a third party, as you suggest, is discussed there.  And, again, there�s like the pros and cons of needing to do that.  So...



LEO:  Well, it�s government.  And whenever � I mean, it�s a quasi-governmental organization.  And whenever government gets involved � I was briefly on the technology committee for my small town here.  And it was so frustrating because the laws of California � and they�re good laws that require, you know, the public to be informed about everything you do, things like the Brown Act � made it very difficult.  We couldn�t have, for instance, a private message board or even a mailing list among the group members because the Brown Act prohibits that.  So it�s both good and bad.  And this is � that�s the way things are.  But I do think the third party ultimately will be the way to go.  I�m happy with it.  Nobody can get my information, but it is available to, you know, somebody if they absolutely needed it.



STEVE:  If they can demonstrate a real need.



LEO:  Yeah, exactly.  You know, they�d go to court or�whatever.



STEVE:  Yeah, I think, I guess, the issue for me is that I can see validity to both sides of the argument.  So I think you�re right, Leo, that...



LEO:  Oh, there is, yeah.



STEVE:  ...that having some intermediary who acts as a buffer for the information probably is the way it�s going to wind up being handled.



LEO:  And you and I are on both sides of it, really, because on the one hand I don�t want somebody to have my phone number, my home address, or even my office address.  But at the same time I don�t want anybody impersonating me on the��Net.



STEVE:  Exactly.



LEO:  So of course we can see both sides of the equation,�yeah.



STEVE:  Exactly.  And then one last thing.  A listener named Weaver wrote from the U.K.  He loved this notion that I talked about a couple weeks ago of browsing the �Net with basically, in my case, with IE locked down tight, and then specifically whitelisting sites where I wanted scripting and more features to be available so that � in fact, the way he put it, he said:  �I loved your idea of interviewing a website and then deciding if it was worthy of trust and then giving it trust.�  He wanted to make sure that, for people who are Firefox users, that they knew about a plug-in called NoScript.  It�s just � the URL is www.noscript.net.  And it�s apparently a highly regarded plug-in.  I did a little browsing around, and it�s got five out of five ratings, and it�s been recommended by lots of people.  The idea being that, similarly, JavaScript and Java are prevented in Firefox until you decide that you want to or need to enable those for a site that you trust.  And just a single click on a little block icon down in the status bar will enable, then basically whitelist the site.  And this thing works in Mozilla and Firefox.



LEO:  Important to make the distinction, though, between the kind of scripting that can be in Internet Explorer with ActiveScripting and ActiveX and what�s available in Firefox.  I mean, JavaScript, as far as I know, doesn�t have anywhere near the risks inherent in ActiveScripting.



STEVE:  Some people did comment, in fact I think it was on your TWiT board, Leo, that, you know, plug-in code in Firefox is as vulnerable as ActiveX code is.



LEO:  Absolutely, sure.  Because it�s running on your�system.



STEVE:  Exactly.  It�s client-side code that you�re inherently trusting if you use those plug-ins.



LEO:  Although most plug-ins are written in JavaScript.  They�re written in XUL, which is basically JavaScript.  And so the plug-ins, they�re user interface.  But they don�t have, again, they often don�t have that kind of capability.



STEVE:  And, I mean, they don�t have that level of power.



LEO:  Right.  I mean, they could.  And that�s the point.  You should always be careful when you install any kind of�plug-in.



STEVE:  And I guess that is to say the bad ones would.



LEO:  Right.  One other point I wanted to bring up, we got an email from a fellow who said, you know, Steve�s method of locking down IE is great as long as the bad guy hasn�t modified your hosts file.  But as soon as somebody modifies the hosts file, he can change where that apparent script is coming from and breach the security.



STEVE:  It�s a very, very good point.



LEO:  So if somebody has access to your system or has gotten a Trojan on your system, it could modify your hosts file, and then it�d be all over.



STEVE:  But flipside...



LEO:  By that time it�s too late.



STEVE:  Yeah, I was going to say, the flipside of that is, if they�re already in your system to the level that would allow them to modify your hosts file, then you�re pretty much hosed anyway.



LEO:  And a lot of spyware does that, by the way.



STEVE:  Yeah.  We have not talked about the hosts file, and we�re definitely going to because it�s ubiquitous.  It�s an interesting sort of not well known, unless you�ve really dealt with this stuff before, sort of way station for DNS lookup that is powerful and vulnerable, both at the same�time.



LEO:  And people can use it to protect themselves.  And I�think...



STEVE:  Yeah.



LEO:  ...I would love to have you talk about that sometime.



STEVE:  We�ll do it.



LEO:  We�ll save that for another one.  Right now, though, we�ve got dozen questions from listeners, a dozen out of the 5,000 you collected.



STEVE:  Actually I did the math.  I have two folders, one for people who submit things anonymously and one where I could reply to them because they�ve given me an email address.  The sum of the email in those two folders is 6,010 messages at the moment.



LEO:  Which is why you�re not getting a personal reply from Mr.�Gibson.  Or from me, either.



STEVE:  Well, I do when I can.



LEO:  Yeah.  As do I.  First, from Jason in Atlanta, Georgia, he actually has two questions.  So he�s � double your money, Jason.  He says:  I have Microsoft Small Business Server 2003 at our office, and I�m curious if the SSL certificate that our server created itself is as secure as if I�d bought one from VeriSign.  That�s a good question.



STEVE:  It�s a great question.  And the answer is yes.  The SSL certificates, which any contemporary system will generate, are absolutely as secure as what you buy from�VeriSign.



LEO:  However...



STEVE:  The only difference is that VeriSign is standing behind the identity that that certificate represents.  Which really, if you�ve made one yourself for your own users to access your server, that�s really not an issue.  You just have to make sure you don�t lose control of it.



LEO:  Would it be seen by browsers as trusted, though, since it�s not � they can�t relate that certificate, as you�ve talked about before, back to those handful of trusted third�parties?



STEVE:  Well, that�s correct.  So the idea would be that, if you�re using a certificate that your own small business server has generated, then everyone who needs to trust that would also have to import into their browser or into their system the matching key for the server so that it�s able � so your browser is able to verify the certificate.  Because, as we know, web browsers come pre-built with a huge array of certificate � certificates is what I�m try to say � with a huge array of existing certificates that allow them to automatically check the security of anyone who�s trying to�connect.



LEO:  Right, right.  He also says:  If I�m at a secure site, and I go to a web page on that site that has another page embedded in it, like as in a frame or an iframe, would the information be encrypted between my machine and that embedded page in the secure page?



STEVE:  Ah, that was a good question, so I wanted...



LEO:  That�s a great question.



STEVE:  Yeah, I wanted to include that.  The answer is no.  The level of encryption is at the level of the connection, that is, the asset or the resource which is being pulled from a remote server.  So if you had a frame, and the frame loaded a non-secure URL, your browser would make a non-secure connection, so that the security on the outer frame, or the outer page, does not necessarily imply anything about the security of content inside.



LEO:  That�s why I get that error message from my browser sometimes that says �Part of this page is encrypted, and part of it is not encrypted�?  Is that what that�s talking�about?



STEVE:  That�s just what I was going to mention, exactly.  For example, in IE and other browsers, sometimes it�s called �mixed content,� the idea being that not all the assets on the page are secure.  Some � and it might just be images, for example, that are going to a third-party server that is not a secure connection.  And so it�s saying, hey, you know, you should know that some stuff on this page is not secure.  So it may be that your browser will alert you, but it�s not necessarily the case unless you�re sure that it�s going to be a secure asset.



LEO:  I think some browsers have a modified key icon, or lock icon, when you�re on a mixed site like that.  It�s funny, I don�t remember for sure, but I think I�ve seen�that.



Two people asked questions relating to President Bush�s proposal for tamperproof ID cards.  Steve Gilliam of Pinehurst, North Carolina, wrote:  President Bush recently said he wants to give tamperproof digital fingerprint IDs to legal guest workers.  How could public and private key encryption be used to generate these IDs?  And after it goes into effect, how would counterfeiters try to defeat it?  That�s one of the problems right now is that illegals often in fact have papers that look real because counterfeiters have gotten very good at forging birth certificates, Social Security numbers, and that kind of thing.



STEVE:  Sure.  Go ahead and read Ben�s question, too?



LEO:  Ben also asked:  The President suggested we needed a document that includes biometric info to make a tamperproof ID card so that it�d check your fingerprint or your iris or whatever for every legal foreign worker.  Do you think this can be done to a reliable degree?  He says:  I tend to think this would require a federal database so the information on the ID card can be validated and probably so the card could be used as a kind of token.  I would imagine that a fingerprint could be used like a key to unlock the encrypted info.  But I wonder about the likelihood of a standard electronic fingerprint reading the same thumb each way each time.  I know when you come into the U.S. from a number of nations, you do, in fact, get fingerprinted.  In some cases they also do iris recognition.  I mean, this kind of system does exist.



STEVE:  Well, I liked this question, or both of these questions, because it plays perfectly into the foundation in crypto that we�ve laid before.  Now, biometrics, of course, is sort of valuable but scary, depending upon how it�s employed.  But our crypto side gives us enough of an understanding of how something like this could work.  Imagine that you had an ID card, and on the card was a picture of the person who had applied for the card and some printed textual information, you know, name, address, whatever textual ID that they want to have.  Then on a, for example, on a mag stripe like we have on our credit cards, on a mag stripe the same information, that is, a JPG of the person�s face and the same information printed on the front of the card would be on the stripe.  All that we have to do is take that information and hash it, as we�ve seen before, that is, create a digital signature of that information.  Then somewhere there would be a master government public key which would � well, public and private key.  The people generating these cards would use the private key to encrypt that digital signature.  And that�s basically all we need to�do.



What that means, then, is that anybody carrying the card who wanted to have its authenticity verified could present it to anyone�s reader anywhere.  The reader would read the mag stripe, put the information up, that is, basically redisplay the photo and the textual information, so that the operator could compare it to the person standing there.  So in this sense, you know, the biometrics is a photo.  And, of course, people are pretty good about comparing pictures to people�s faces and deciding, oh, that was you two years ago kind of�thing.



But the key is, because this information had been digitally signed by the government, all of the readers would only need to have the government�s matching public key.  So any reader could verify that this information, the information on the mag stripe, not necessarily the visible information on the front of the card, but the information on the mag stripe had not been changed by a single bit.  And there�s nothing, then, in terms of intellectual property, that could be stolen from these readers.  I mean, it could just be freeware that you load into a PC that has a little add-on mag stripe reader.  Anybody could then verify that the digitally signed information on the mag stripe was originally signed by a government agency.



LEO:  So it�s really just like me using my PGP key to sign my email.  You can verify that I sent you that email, that that was my key and that the email has been untampered with, just by going to the PGP site and matching the keys.



STEVE:  Exactly.  It�s an absolutely analogous application.



LEO:  Yeah, yeah.



STEVE:  And crypto solves the problem for us.



LEO:  It�s really amazing.  Public key crypto.  And that�s what�s so great about public key.



STEVE:  Right.



LEO:  Ryan from Ontario, Canada writes:  I know you�ve never had an episode specifically about key loggers.  I�m sure we�ll rectify that at some point.  But can a key logger be fooled if you use a program like RoboForm � which, by the way, is a great program.  I recommend it.  It fills out forms for you.



STEVE:  Right.



LEO:  To fill in your passwords.  What are the ways to fool key loggers if � a big if � a key logger manages to get on my system?  I know software firewalls can warn you if a key logger phones home.  But viruses and spyware maybe disable your software firewall.  Or, frankly, there are hardware keystroke loggers that you�d never see.



STEVE:  Right.  Yeah, I wanted to address this because we actually did discuss key logging stuff early in our podcasts when we were talking about passwords and entering passwords.  And many people came up with clever ideas for defeating key loggers, like...



LEO:  Oh, yeah, I do remember that, yeah.



STEVE:  ...typing a couple characters, then clicking the mouse into, like, a notepad...



LEO:  Cutting and pasting.



STEVE:  ...type in a few more, cutting and pasting, scrambling things up, I mean, there�s all kinds of things you can do if you were concerned about that.  So it certainly is the case.  First of all, RoboForm, which is down at the API of Windows, is not necessarily going to be proof from a key logger because, in order to fill in these forms, most of these utilities � and in order to be like a universal form filler, many of them literally simulate the keyboard, typing into the field, so that the same hooks into the system which allow a key logger to see keystrokes will similarly see something like RoboForm basically typing that information in for you.



LEO:  And I guess it really depends on the key logger, too, because some are lower level than others, and some are higher level.  I mean...



STEVE:  True.



LEO:  ...if a keystroke logger�s just looking for scan codes, well, it probably would miss it.  But if it�s working at the API level it would probably see it, so...



STEVE:  So actually, some of the things that people suggested, some of the clever ideas in the brainstorming back at the beginning of our podcast series, I thought were very workable, where nothing that was just looking at the keyboard would be able to tell where you were typing these things.  So change your keyboard focus a few times, putting characters in different places, so that the end result of the string you want to have correct is correct, but nothing passively watching would be able to figure out what you had�done.



LEO:  Unless it�s smart enough to be watching those fields and looking at the input in those fields.  I mean, in other words, it depends on the keystroke logger.



STEVE:  Yeah.  Bottom line is you really don�t want to get anything bad in your system.



LEO:  No.  And it�s possible to put a keystroke logger on your keyboard that memorizes stuff.  If you use a public�terminal...



STEVE:  Public access terminal, yes.



LEO:  ...very likely � or not very likely, but very possible that all your keystrokes are being logged.  But RoboForm would avoid it in that case.  Of course, it would probably leave enough traces behind that it wouldn�t make any�difference.



Brian of Everett, Washington is concerned about MD5 hashes.  In one of your cryptography podcasts you talked about the MD5 cryptographic hash as a way to verify downloaded files.  However, I just read on the Internet the MD5 algorithm has recently been found to be unreliable, and hashes generated with it can be cracked.  I think we talked a little bit about this.



STEVE:  Yup.



LEO:  He says:  Is it true?  A different Internet site talking about MD5 said you could salt an MD5 hash to prevent it from being broken.  What exactly does �salting a hash� mean?  Sounds like something they did in the Navy.  But does�this fix the problem, or is the MD5 algorithm truly�unreliable?



STEVE:  Okay, there are a couple things.  MD5 generates a 128-bit hash, which is beginning to be not long enough.  So there are now 256-bit hashes and 512-bit hashes which are arguably way overkill.  But, you know, with computers being as fast as they are and storage being as big as it is, there just isn�t really a reason not to use a larger hash to prevent hash collisions, which is what adding more bit length to the hash does.  So on one side it�s worth mentioning that this 128-bit is a little short.



But what the sites are talking about are something we�ve discussed in the context of hashing before, which is brute forcing a hash.  If you use an unsalted MD5, what sites are doing are they�re precomputing for many common passwords and pass phrases, that is, up to a certain length.  You start getting too many of them as the length grows.  They precompute the hash.  So you end up with a huge table of hashes, and the password that, if you hashed it, would result in that hash.



So what salting does, salting adds some extra fluff, some extra stuff to the input in order to completely change the output.  So, for example, if you put in the word �dog� into an MD5 hash, you�re always going to get the same 128 bits out, no matter how many times you put the word �dog� in.  So in a precomputation dictionary attack on MD5, the hash for �dog� would probably be there.  If somebody tried it, then they�d be able to figure out what your password was because you�d chosen a really bad password.  I mean, there�s no way that �dog� is a good password to have.



On the other hand, if you just added, for example, a minus sign or an underscore or some sort of what�s called �salt� to the hash, then that would completely change the output so that you�d get, I mean, with any good hashing algorithm, a completely different set of 128 bits.  So adding any other debris to the algorithm will completely change the result and render it basically uncrackable to this kind of brute force attack.



LEO:  But you can�t just add it to the hash.  It has to be � the coding program has to know about this underscore.  You can�t just make up something and put it in the hash.



STEVE:  Well, the idea would be, for example, UNIX systems use a salted MD5.  They�ve got some junk that is unique to the system which they always add when anyone types in a�password.



LEO:  Ah.



STEVE:  So that nobody who sees the resulting hash is able�to, you know, basically have a universal crack for the�system.



LEO:  Ah, very clever.



STEVE:  Yeah, that�s very nice.



LEO:  Very clever.  Carl Schweitzer of Hilbert, Wisconsin managed to untangle last week�s discussion of the stack and buffer overruns.  Actually a surprisingly large number of people wrote to us thanking us for it...



STEVE:  Yeah.



LEO:  ...and saying they got it.  And that�s great.  I mean, that was one of the more complicated things we�ve discussed in the podcast.



STEVE:  I think I used...



LEO:  You did an admirable job, but...



STEVE:  I think I used the term �aggressively technical��as...



LEO:  But he did have a question.  He said:  When it comes to the stack, why did it have to write up?  Wouldn�t it be more secure to write down?  Or is there something more complicated going on with that?



STEVE:  Okay, now, I didn�t quite get his question.



LEO:  He�s talking about why does it go up in memory instead of down in memory.  But I don�t think it makes any difference, does it?



STEVE:  Well, actually there�s something brilliant about�this.



LEO:  Oh.



STEVE:  Which I really liked.  First of all, he says, why does it write up, meaning why does your � when you�re overflowing the buffer, you�re going from lower memory to higher memory.



LEO:  Right.



STEVE:  And that�s writing up the stack, and that�s overwriting the stuff that�s higher in the stack, which is critical information from previous programs or previous subroutines.  Because as we remember from last week, the stack grows downwards.  Well, his point was, if buffers overflowed the other direction, then they wouldn�t be overwriting the previous information, they�d just be writing�� they�d be overwriting stuff that wasn�t allocated yet on the stack.  Well, he�s completely correct.  Now, of�course...



LEO:  So why don�t they do it that way?



STEVE:  Exactly.  I mean, they should.  I mean, I love the question.  It�s brilliant.



LEO:  Wait a minute.  Wait a minute.  Now, come on.  You�re turning years of computer science on its head.  Literally.



STEVE:  Well, okay, now.  First of all, it�s not easy from a practical standpoint to fill buffers downward.  That is, you know, just everything about the way we think has a buffer being filled from lower memory to higher memory.



LEO:  But even if you did that, you would still overwrite � you could overwrite in the negative numbers.



STEVE:  Well, but hold on.  But if the stack instead started at the bottom and grew upwards...



LEO:  Yeah.



STEVE:  ...and there�s no reason it can�t, if the stack started at the bottom and grew upwards...



LEO:  So you�re saying if it started at memory location�zero...



STEVE:  Or, well, zero, not everybody can start at zero.



LEO:  Not really zero.



STEVE:  Yeah.



LEO:  Let�s say whatever zero is, some arbitrary zero.



STEVE:  Yes.  And then allocating memory on the stack you do by moving your stack pointer up to, like, a certain amount.  Now, what�s happened is you�ve reserved all of that memory below that point for your own use.  Anybody else who wants some, they move the pointer up, and now they have � they�ve reserved that region that they just moved the pointer across for their own purpose.  And the beauty of this is, the person who is currently using the stack, so-called is like on the top of the stack.  And if stacks grew from the bottom up instead of from the top down, then buffer overruns would overrun out into unused stack space, not already used stack space.  It�s brilliant.  I mean, it would really work.  And it would solve the problem.



LEO:  Somehow I think there�s more to it than that, but all�right.  If it were that simple, wouldn�t somebody have done�this?



STEVE:  No.  Because, again � no, I mean, I...



LEO:  All of this was set up long before this ever became a�problem.



STEVE:  Exactly.  That�s exactly it, Leo, is that it�s a little more elegant from an architectural standpoint to have, for reasons that are sort of complicated and deal with the way pointers are handled, to have the stack growing down from the top of memory is architecturally simpler.  But it was just done that way basically as an arbitrary choice.  Someone said, shall we have it come down from the top or up from the bottom?  And it�s a little simpler to have it come down from the top.  But in terms of the problems that it creates, the idea that overrunning the allocation, if you�re coming down from the top, you�re inherently overwriting the information of someone who�s already allocated information on the stack before you.



LEO:  Right.  Somebody else�s stack frame.



STEVE:  Somebody else�s stack, exactly.  But literally, if you allocate instead from the bottom up, you don�t overrun.  It�s wonderful.



LEO:  Okay.  I know we�re going to hear from Randal Schwartz, or one of our other programmers is going to say something.  But I can�t think of what it could be.  Maybe you�re right, and maybe this is a way to design a whole new�architecture.



Garrett of Rochester, Minnesota is wondering about Skype security.  That�s what we use, of course, to do the show.  He says:  How could I properly configure Skype for the best security?  I�m sitting behind a NAT router with Universal Plug and Play turned off and all the security settings on high.  Anything else I need to do for a Skype connection?



STEVE:  No.



LEO:  Yeah, we don�t � I don�t do anything particular.



STEVE:  Exactly.  Now, the one...



LEO:  You�re going to give away our secret.



STEVE:  Well, the one gotcha is that it can be useful to allow incoming connections to Skype in situations where both people who want to connect a conversation are behind NAT routers.  But in this case, Garrett was asking about SkypeOut connections, where he�s using Skype to connect to the Skype servers in order to use Skype sort of as his telephone system.



LEO:  But that�s � isn�t that � that�s how Skype avoids NAT issues is we�re always going through a server to make the connection; right?



STEVE:  Well, no.  Between two users there is a server to rendezvous the two users.



LEO:  Yeah, so we don�t have to worry about the incoming connection because I�ve already established a connection with a Skype server.  Right?  Right.



STEVE:  Exactly.  So Garrett is completely secure.  He�s behind a NAT router which is giving him the inherent stateful firewall action that NAT does.  He�s got Universal Plug and Play turned off.



LEO:  Good.



STEVE:  So nothing nasty is able to reconfigure his router behind his back to open ports.  And he�s calling out, he�s connecting out to the Skype servers for his SkypeOut service.  And so nothing is able to connect back in.



LEO:  But I wouldn�t have an issue, I mean, and I don�t have an issue, if you call me on Skype.  Right?  I mean, once I�ve logged into Skype, anybody can call in, as well.



STEVE:  Correct.



LEO:  So, again, because it has a third-party server.  I thought you were going to reveal our secret, which I don�t want anybody to know, about how we get these Skype calls to sound so good, which is that we use a dedicated Skype port.  You told me to do this, and I have to say it has improved the quality of the Skype calls.  Why?



STEVE:  Well, because I�ve configured my Skype so that I�m able to � I have basically, of course, a non-default random port where incoming Skype connections are able to reach me.



LEO:  You can do that in the Skype preferences.  It�s in the advanced preferences.  It�s easy to...



STEVE:  Yes.  And the reason � I have a NAT-hostile network configuration.  As you can imagine, Leo, my security here is pretty strong.  And you and I, when we were connecting, were not able to get a direct connection because my NAT router wouldn�t allow it.  So that our dialogue was going through a so-called �supernode.�  It was being relayed by a third party.  And when you were telling me that you and I were having such great success with Skype but you were having some trouble with other uses of Skype when you were talking to people, that�s when I suggested, well, if you did the same thing, if you allowed a fixed port to come all the way in from the Internet to your Skype, then basically, you know, if you � then it�s like you�re only behind a single NAT router.  That is, the person you�re connecting to is only behind a single NAT router.  They are always able to initiate a connection through to you, so a supernode is never used, and you get this kind of Skype quality every�time.



LEO:  The supernodes are a clever hack that the Skype folks did so that you don�t have router problems, NAT router problems.  But you can avoid it by using a dedicated port.  Now, I do that unilaterally, right, I don�t have to tell them what port I�m using.  I just choose a dedicated port in my connection options.



STEVE:  Exactly.  And suddenly you�re just a higher quality Skype connector location.



LEO:  Do I have to open that port in my router or anything like that?



STEVE:  Yes, you have � yes, yes, yes.  You do need to have that port mapped through so that somebody � the idea is that, if both people at each end of a Skype conversation are behind NAT routers, then they may not be able to negotiate to connect to each other directly on the fly, for complex reasons of the way NAT works.  But if either of the people will create a statically mapped port through their NAT router, then the other person can always send a packet directly to that port, and the whole Skype protocol manages making sure that everyone knows what the port is.



LEO:  Heh heh heh. 



STEVE:  It works.



LEO:  Now you know our secret.  It really does work.  It makes a huge difference.  Not for everybody, but it does on those people who have � and do you map just TCP, or is it UDP?  What do you have to map?



STEVE:  It�s just UDP.



LEO:  Just UDP.  Okay.  Now I�ve given away our secret.  We have no advantage whatsoever anymore.  That�s all right.  Except our great good looks.



Kim White of Secunda, South Africa wonders about securing mobile laptops:  I have a question pertaining to security of notebooks.  Could you guys do an episode on securing of notebooks so that when, not if, it gets stolen, the data should be safe?  I�ve seen some ideas that use USB keys and so forth that are used as tokens, but these only protect from log-in.  What about from boot?  If the drive is locked from boot then there�s almost no way that the data can be stolen.  My concern is that most of my laptop users have IPs from large corporations here in South Africa.  Not IP addresses, intellectual property I should say.



STEVE:  Right.



LEO:  It�s worth hundreds of millions of dollars in the open�market.  He�s concerned, and this happens all the time,�in fact, it happened very famously to the British Secret Service whose laptops were stolen and secrets were��escaped.



STEVE:  Well, of course, you know, in the news from time to time you hear about exactly this kind of problem.  A laptop, you know, is left unattended briefly at an airport, and it disappears.  Some corporation has a ton of valuable data on their laptop.  Okay.  There are a couple things going on.  Some IBM ThinkPads actually work with the drive�s serial number to lock the laptop drive so that it will not boot unless a password is given at boot time to unlock the drive.  That�s very good security, but it has caused problems because it is such good security that, if that password is ever lost, you�re hosed.  I mean, there is no way, short of returning the drive to the manufacturer, to unlock the drive.  And the problem, of course, is that this is not generally available on most laptops.  So a solution that is laptop specific may not be a good one, either.



LEO:  It�s often said that if somebody has physical access to a machine, eventually they can get the data.



STEVE:  That�s not true.



LEO:  No?



STEVE:  No.  Because � and this is going to be the topic of next week�s Security Now! podcast.  We�re going to talk about TrueCrypt.



LEO:  Yeah, we love TrueCrypt.



STEVE:  It is a fantastic open source encryption solution.  Now, what Kim�s company would have to do would be, I mean, and this is not just trivial to do, but the idea would be that most laptops are configured with everything sitting in one single huge C partition, you know, from a Windows drive designation standpoint.  What you need to do is do some preparation for this, the idea being that you create another drive where all of the intellectual property resides.  And you just have the discipline to keep everything that you need to have safe in this second drive.  And then a program like TrueCrypt, which we�ll be talking about next week, is able to provide unbreakable, I mean, truly state-of-the-art, you know, past the end of the time of the universe-style encryption to prevent anyone from accessing that inadvertently.  And it can be configured so that, if the drive is turned off, if it goes into standby, if it�s unattended for a certain length of time, that you must reenter a password in order to access that content.  And it works for laptops; it works, well, you know, for PC, desktops, anything.  TrueCrypt is a fantastic solution, which is why we�re going to be covering it in detail next�week.



LEO:  Generally people set TrueCrypt so that it automatically unlocks once you log in.  So you might want to put on the BIOS passwords and the log-in passwords and all of that stuff, just to, you know, keep it a little more difficult to log in to the computer.



STEVE:  Well, yeah.  Certainly, if what you�re suggesting is that they have TrueCrypt configured so that you don�t need to enter a password...



LEO:  Which for convenience is good.



STEVE:  Well, you�ve basically defeated the whole purpose.



LEO:  Unless, well, yeah, I understand.  But if you turn on the � you haven�t really because as long as you trust Windows�s log-in, XP�s log-in to be secure...



STEVE:  Right.



LEO:  Because if they remove the hard drive, they�re not going to be able to log in without your password.



STEVE:  Yeah, unfortunately...



LEO:  By the way, Macs have the similar � built into the operating system a similar strong encryption called FileVault.  Does the same thing as TrueCrypt does.  But it also is set to, when you log in, unlock.  And in that case you want to modify your firmware so that nobody can change the master password.



STEVE:  Right.



LEO:  But a good system.  We like TrueCrypt.  You can even put it on a USB key.



Ben, writing anonymously from his Gmail account, asks:  The question is probably really dumb.  Maybe that�s why he wanted to be anonymous.  But I have looked everyplace for somewhere to download PGP, and every site I try leads me to the same place, PGP.com.  And he doesn�t want PGP Desktop 9.0, which isn�t free.  Can you please send me a link to a site where you can download a free PGP program?



STEVE:  Well, and Leo, we know what that is.



LEO:  Yes.



STEVE:  And you talk about it, and it�s what you use.



LEO:  That�s what I use, which is the open source version of PGP.  The story is long and tangled.  I mean, Phil Zimmerman originally made PGP open source.  But the assets of PGP and intellectual property was sold to a corporation, which still, if you search at PGP.com long enough, offers a free version.  But it�s a long, hard search, and not worth it when you can just go to GNU Privacy Guard, gnupg.org, and download an open source free version of PGP.  And that�s what I use on the Mac and what I � everybody should just use�that.



STEVE:  Right.  Well, when I saw this question from Ben, I just went to Google and put in �GNU PGP�...



LEO:  Right.



STEVE:  ...and took me right there.



LEO:  Yeah.



STEVE:  So that�s how anybody can find it.



LEO:  They call it GNU Privacy Guard to avoid the...



STEVE:  Copyright, trademark.



LEO:  ...probably a copyright issue with PGP.



STEVE:  Yeah.



LEO:  But so gnupg.org will do the job.  And it�s great.  I mean, it works on all machines.  It uses PGP-style keys.  In fact, I�m reusing PGP keys that I made.  It�s completely�interoperable.



STEVE:  Well, and PGP is now an RFC standard.  There�s an RFC associated with it.



LEO:  Good, yeah.



STEVE:  So it�s been well defined.



LEO:  So you don�t have to go to the PGP Corporation to get�PGP.



STEVE:  To get real PGP.



LEO:  Yes, it�s real PGP even without it.



Jason in Madison, Wisconsin received a nastygram from his corporate IT department.  Oh, I hate those.  He writes:  I just received a nastygram essentially stating that I must remove Skype from my laptop because it is P2P, or peer-to-peer software, that lets viruses in.  Their words, not mine.  What are the security risks posed by Skype?  I realize my company may have a bandwidth issue regarding the supernode feature in Skype.  But is there something else Skype users should be aware of?  That�s a great question.



STEVE:  Well, it is.  And I wanted to first say that, if this is a corporate laptop, and it�s their property, then you want to make sure this doesn�t get escalated beyond a�nastygram.



LEO:  Because they can do anything they want.



STEVE:  Yes.  Certainly you could argue that this is their computer you�re using, I mean, if that�s the case, and that they have a right to specify what software is used on it and not and so forth.



LEO:  Well, even if you bring your computer into the corporate network, they can tell you what programs you may and may not use.



STEVE:  Sure.



LEO:  I mean, that�s their right.  It�s their resource.



STEVE:  Exactly.  So he brings up the issue of supernode, which we were just talking about, and about the bandwidth being consumed, and it sounds like his corporate IT department somehow discovered that he was using Skype on his laptop.  All of that sounds like he does not have a firewall running on his laptop.



LEO:  Because you can�t be supernode if you have a router or a firewall.



STEVE:  Exactly.  You wouldn�t � supernodes are random Skype�users who are not behind a NAT router or a firewall, who suddenly discover that they�re being used as a relay point for other people that Skype cannot otherwise connect�between.



LEO:  And we should point out that that should be a small number of people, getting smaller all the time.  I mean, who�s on the Internet without a firewall or a router?  Come�on.



STEVE:  Well, and it is an annoyance that Skype provides no user interface option for...



LEO:  You can�t turn it off.



STEVE:  Exactly, for disallowing supernode usage of your own client.  So I would tell Jason that, if he wants to continue using Skype, and I would imagine he�s behind Windows XP, or he�s using Windows XP, that if he turns on the Service Pack�2 firewall that ought to be built in, or uses any third-party firewall so that inbound connections are not allowed, he should be able to use Skype without any trouble, and there�s no way his IT department could ever determine that that�s what he was doing.  But again, I�m not suggesting that he goes against the wishes of his corporate IT people.  But, you know, their argument that Skype is peer-to-peer and therefore is � and for that reason should not be used, I think that doesn�t hold much water.  But I can certainly understand them not wanting to get into all�this.



LEO:  And it�s their right not to.  But I think they�re somehow conflating it with Napster or Morpheus or, you know, one of those peer-to-peer � it�s not peer-to-peer that way.



STEVE:  Right.



LEO:  Yeah.  Although I think there is some kind of tenuous connection with Kazaa, I seem to remember.  But that�s not the peer-to-peer, that�s...



STEVE:  Well, in fact, it was the Skype � it was the Kazaa guys who figured out NAT traversal...



LEO:  Right.



STEVE:  ...who then started Skype and used that NAT traversal technology from their peer-to-peer experience in order to create a system that just works behind NAT routers so easily.



LEO:  But it�s not sharing music.  You�re not allowing virus�� I don�t think there�s any way, I mean, it�s not allowing viruses in, is it?  No, of course not.



STEVE:  No.



LEO:  No.  Not unless, you know, somebody sends you a file, and you accept it.



STEVE:  Well, in fact, at the beginning of this podcast, Leo, I sent you a PDF.  And we used Skype in order to do a file transfer because it worked just beautifully.



LEO:  And you can do that in chat clients and instant messenger clients and so forth.



STEVE:  Right.



LEO:  In fact, the truth is, if they allow any instant messenger at all, it�s no different from Skype.  I mean, AIM, Yahoo!, all of these offer voice over the Internet in very much the same way as Skype does.



STEVE:  Right.



LEO:  Russell of Salt Lake City asks:  We all know that chat�clients...



LEO & STEVE:  Speak of the devil.



LEO:  Chat clients like MSN, AIM, and Yahoo! Messenger are about as insecure as it gets as far as a channel of communication goes.  My question is regarding Google Chat.  I�m not talking about the standalone Google Chat client.  But when you log into your Gmail account � this is something new they just added � using HTTPS://gmail.google.com, in that web interface you�re able to conduct chats.  So my question is, I�m inside the secure server, HTTPS.  I�m encrypted and secure.  Am I � or is it using a different port?  I mean, is my chat secure?



STEVE:  Right.  Well, this is really interesting, and I thought this was a great question.  You have security guaranteed by HTTPS, that is, by an SSL connection, which we know is really good security, from your browser to Google.  The problem is, everything that you are chatting with then goes through Google�s servers.  And who�s to say that next year Google�s not going to announce, hey, by the way, you can search for everything you ever chatted about.



LEO:  Which they might.



STEVE:  Because we�ve been sucking it all in and keeping it forever.  You know?  And...



LEO:  It�s a possibility.



STEVE:  ...Google tends to do that.  So, you know, with our government becoming increasingly concerned about, you know, terrorist activities within our borders and all of this NSA eavesdropping, and, you know, now all of our phone records being sucked up and analyzed, I would be concerned using any third-party server to be the relay point for my chats.  There is a very good, very secure chat client called BitWise�IM.



LEO:  Oh, yeah, we like that.



STEVE:  Yes.  In fact, you and I, Leo, use it because it also offers VoIP services, although the quality still wasn�t up to � oh, in fact it uses the Speex codec, which is why we gave it a try.  But it still wasn�t up to what the GIPS, the Global IP Sound technology that Skype is using is able to give us.  So we backed away from it for our podcast recordings.  But BitWise IM, if you just go to Google and put in �BitWise IM� for instant messenger, I know the author, I�ve interacted with him, in fact I�ve worked with him to improve his NAT traversal technology so that it works a lot better than it did before.  It really � this guy�s a neat guy.  It�s cross-platform Mac, Linux, and Windows.  And it just looked, you know, if you�re looking for something that isn�t a huge bulls-eye, that isn�t the same sort of target that MSN and AIM and Yahoo! and Google are, where you want to do point-to-point chat and not run through a third-party server � oh, and everything is encrypted.  So it�s very strongly encrypted chat.  It�s what I would recommend.



LEO:  There are corporate versions available of AIM and MSN that provide encryption, as well.  But this is just, you know, you just download it, it�s free, and it�s easy to use.



STEVE:  Yup.



LEO:  It�s great.  David from Bossier City, Louisiana discovered Security Now! two weeks ago.  Welcome, David.  And he just � he says he just finished listening to all 39 episodes.  Whoa.  Okay.  He must be little exhausted right now.  He had a question...



STEVE:  I love that.



LEO:  Yeah, I think that�s great.  He had a question about Linux, open source, and buffer overruns.  He says:  Unless I�m misunderstanding something, I would think there would be more exploits from buffer overruns with Linux, since it�s open source and a programmer could see all the problems in the code easier than Windows � in other words, could find these holes.  Or does that make it less likely to have problems with things like buffer overruns because of the number of eyes looking at the code in the open source community?  I ask because I would think this may be one of the great concepts that comes from the open source community and wondered your thoughts.  This is actually a common area of discussion among open source folks.



STEVE:  I would say that it is the big, unresolved issue.  That�s why I thought this was a great question that David had posed.  And, I mean, it�s a religious battle in the same way that, you know, Mac versus Windows is sort of a religious thing.  It�s, you know...



LEO:  Closed versus open source.



STEVE:  Exactly, closed versus open, what is more secure?  You made a comment that I didn�t react to last week when we were talking about buffer overruns, which was that many of these are discovered by people just pounding on the code.  And in fact the guys at EI down in Aliso Viejo, they�ve got a roomful of machines that just throw junk at software.  And when one of those machines crashes, it�s because they�ve just found some new buffer overrun.



LEO:  So they basically have a million monkeys in a room, trying to crack it.  But that�s closed source software.



STEVE:  Yeah, and the EI guys are finding stuff all the�time...



LEO:  Right.



STEVE:  ...in exactly this fashion. 



LEO:  Whereas you could look at a source listing of a program, if you were really an accomplished programmer or accomplished hacker, and perhaps find buffer overflows.  I guess, you know, it comes down to the choice of security through obscurity, that is, you�re secure because it�s kind of hidden, or true security, which is that it�s open, it�s exposed.  And, you know, people, yes, will find it; but people will also fix it right away.  I bet on open source, to be honest with you, but that is a religious battle, you�re right.



STEVE:  My sense is that, from a programmer�s standpoint, if there were backdoors deliberately programmed into code, those would be found immediately...



LEO:  Right.



STEVE:  ...in an open source environment.



LEO:  Which is why PGP was open � I wouldn�t trust any encryption program that wasn�t open source because you need to know what they�ve put in there.



STEVE:  And so that�s the advantage of open source.  But the nature of buffer overruns is that it wasn�t clear to the programmer who wrote it.  And when you look at the source code, there�s this inherent tendency to adopt that same mindset and to sort of follow along with the code.  It�s just so hard to see the mistakes that somebody has made, even when you�re looking at it.  So I don�t think that open source would be more secure because people would tend to find other people�s mistakes.  People tend to just read along and, you know, get through the job that they�re doing.  It�s more the case that you find these things sort of just by pounding on the code, exactly as you had said last week,�Leo.



LEO:  And there�s certainly, I mean, the truth is there have been plenty of buffer overflow exploits in open source software.  Certainly no programmer is immune from it.



STEVE:  That�s a very good point.



LEO:  And, you know, here�s the question.  I mean, if you write a module or a part of a major open source program, is anybody going to rewrite it or check it for security?  Maybe, maybe not.  I don�t know.



STEVE:  Well, and that�s � actually that�s a very good point, too.  It�s cool that this source is open.  But many people wonder if anyone else ever looks at the source code�again.



LEO:  Right.  I mean, in theory they do.  I mean, there�s somebody with commit access to an open source project who�s supposed to review all this stuff.  But it�s, you know, I mean, yeah, I think there�s no guarantee it�s been highly�reviewed.



STEVE:  Well, yeah.  A perfect example is my use of a news server.  GRC runs a very active, wonderful set of newsgroups relating to security and privacy.  Anyone who�s got a newsreader, and in fact everybody who is using a contemporary browser probably has a newsreader built in, you can just go � you can aim your newsreader at news.grc.com, and we�ve got a news server with a bunch of fantastic newsgroups there.  Well, I�ve got all kinds of extra features that, over the years, I�ve built into our news server.  Like we have secure authentication, and people who post notices are able to delete theirs, but nobody else can delete theirs.  And I�ve taken the open source standard INN news server, and thanks to it being open source, I�ve gone in and made a whole bunch of custom enhancements for, you know, basically turning it into a hybrid, adding a bunch of GRC stuff, which I would never have been able to do if it were just some news server I had bought in executable code fashion and then inherently been unable to modify.  So it�s a boon for a programmer.  But it�s not clear to me, from a standpoint of tons of people going over the source code, if problems are going to be found that way.



LEO:  We�ll win you over yet, Steve.  You�re starting to sound like an open source kind of guy, I have to say.  You know, and it also depends on how low level the code is.  I think if it�s a PHP, you know, message board system, a lot more people are looking at the code than if it�s an Assembly language kernel module.  So...



STEVE:  Well, and that�s a perfect example, too, of something that is very vulnerable.  A PHP-based message board system is inherently, you know, it�s like sticking its face out there on the �Net...



LEO:  Come and get me.



STEVE:  ...looking for someone to find a way to exploit it.  And of course we know that there�s just PHP exploits by the hundreds a month.



LEO:  Right, right.  Our last question.  Paul Winters, nestled in the Colorado Rockies, asks:  I�d love to hear your comments, Steve, on recent legislative proposals to have ISPs maintain logs of all activity.  What good would this be if a user is using VPN or encryption of any kind?



STEVE:  He is completely correct.  I mean, it is disturbing when we see legislation � I mean, and the ISPs are as disturbed as their users.



LEO:  Oh, they don�t want to do this.



STEVE:  No, it�s a huge burden.  The idea being that they�ve got to maintain logs for law enforcement to use in order to track down illicit activity.  I mean, it�s a good thing if it works.  It�s hugely burdensome for ISPs.  And then you end, you know, with people feeling like their ISPs are spying on them, much as we do now with, you know, all of our phone records going to the government for processing and analysis.  And so the question was, does running all this traffic through a VPN solve the problem?  And the answer is yes.  There is, again, contemporary VPN technology cannot be broken.  And all an ISP would have is, I mean, literally random bits of data.  Because as we know from our security podcasts, once you have true security, the data that results from good encryption is indistinguishable from random noise.



LEO:  Yeah.



STEVE:  And so that�s all an ISP would be able to see.



LEO:  Yeah.  I mean, I have to say I�m using encryption more and more.  Although, you know, in Britain the House of Commons, I guess, just proposed a bill � I�m not sure where the bill came from.  The government...



STEVE:  To legislate against encryption?



LEO:  No, to make it illegal � actually, no, I take it back.  This has always been the law, but they�ve never enforced it, and now they�re talking about enforcing it, that you must reveal your password or decrypt if requested to by law enforcement.  And if you don�t, you just go straight to�jail.



STEVE:  Wow.



LEO:  And I think that that�s going to be a concomitant of any kind of move like this.  If they�re starting to log all the information, and encryption is widely available, well, you�ve got to pass a law saying that you have to hand over the keys.



STEVE:  So that�s interesting.  So the idea being that, if�they capture a bunch of this random noise we�re talking�about...



LEO:  They can go to the guy.



STEVE:  And they say to you, you must tell us...



LEO:  Decrypt.



STEVE:  Yeah, exactly.  Basically we are legally compelling you to decrypt this data so that we can see it.  You have to or suffer the consequences.



LEO:  And go to jail anyway.



STEVE:  Wow.



LEO:  Whether you�ve done anything wrong or not.  So, and I think that every � I have a feeling that every major industrial nation will pass laws like this because that�s the only way to deal with encryption and crime, especially�as encryption becomes more well known and commonly available.



STEVE:  Yeah.  Well, I mean, here we�ve been talking about the NSA literally eavesdropping on the content of calls where they have reason to suspect that there�s something bad going on.  And it�s like, well, okay, all you have to do is use VoIP and encrypt it because we know no one, as far as we know, not even the NSA is able to decrypt deeply encrypted, you know, state-of-the-art encryption.  On the flipside, if this legislation passes, then all they do is collect the data and compel you to decrypt it for them.



LEO:  That�s right.  Wow.



STEVE:  I mean, it makes sense; but, you know, it�s not easy to feel so smug now about encryption.



LEO:  Yeah.  In fact, there�s even some move that the U.K. may actually, ahead of time, ask businesses to hand over the cryptographic keys, just in case.  Just in case.



STEVE:  Hmm.



LEO:  I tell you.  I don�t want to get you upset.  I know how you feel about these things.



STEVE:  Where can we move to, Leo?



LEO:  Nowhere, that�s the problem.  Now, that�s why � one of the things we like about TrueCrypt is its plausible deniability.  It doesn�t even look like encrypted data.  It just looks like noise.



STEVE:  Yup.



LEO:  But if you�ve got noise � I guess you could say, if you were on your Internet service provider and sending something that sounded like noise, you could say, oh, what are you talking about, that must have just been a burst of�noise.



STEVE:  Prove that it�s not.



LEO:  Encryption?  What encryption?



STEVE:  Yeah.  Yeah, exactly.  I mean, and in fact it is not possible to prove that encrypted data is not random noise.



LEO:  Right.  So maybe that�s our defense.



STEVE:  There we go.  We solved the problem.



LEO:  I hope.  Good luck.  Do we have a plan for next week, or are we going to wing it?



STEVE:  Well, if you�re not going to make me prove that a stack is much better...



LEO:  I guarantee you, I�m going to hear from Randal Schwartz, and he�s going to explain why there�s no other way to do it.  But anyway, we�ll see.  Maybe, you know, he could very well send me an email saying, you�re right, why didn�t I think of that?  But other than that, do you have any other�ideas?



STEVE:  Next week is TrueCrypt.



LEO:  Oh, we�ll do TrueCrypt.  Great.



STEVE:  Yup.



LEO:  Can�t wait.  That�ll be a lot of fun.  We do thank you for joining us.  Thanking our friends, of course, at Astaro Corporation for making this possible.  We couldn�t do it without them, and they�ve just been so generous, our great sponsor.  If you are interested in security, you should know the name Astaro.  If you�re interested in open source, you should know the name Astaro.  They make great open source security solutions like the Astaro Security Gateway for your business, or even, if you�re a home user, for you, absolutely free.  You download it and put it on a PC, and you�ve got all sorts of great security.  You can pay a little bit more and even get antispam and antivirus and spyware filtering, too.



STEVE:  Well, and thanks to the fact that it is using, you know, lean and mean open source OS and solutions, you can take that old cranky machine from the garage that, you know, will no longer play games anymore, and turn it into a really nice Internet firewall appliance.



LEO:  Download your free copy today at Astaro.com.  And of course it�s not exactly a sponsor, but we do give a lot of credit to SpinRite because that is Steve�s day job.  And without it, well, we�d have to find a way to pay him or�something.



STEVE:  It keeps the lights on, and it helps people all the�time.



LEO:  Yeah, it�s wonderful.  If you want to read some testimonials for how people have used SpinRite to recover their data, to save their drives, to save their lives, go to SpinRite.info.  Go to GRC.com/securitynow.htm.  I guess you can go to SecurityNow.info for a while, anyway, to get the show notes, 16KB versions of the show for the bandwidth impaired, and full transcripts, thanks to Elaine, of each and every show.  And of course, Steve�s notes about the topics we talk about.  It�s also a good place to read the security newsgroups that he has going there at GRC.com, and even submit your questions for future editions of Security Now!.  GRC.com, that�s the home of SpinRite and Security Now!.  Thanks to our friends at AOL Radio for providing the bandwidth for this podcast, AOL.com/podcasting.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#41

DATE:		May 25, 2006

TITLE:		TrueCrypt

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-041.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  This week Steve and Leo explain why they love "TrueCrypt," a fabulous, free, open source, on-the-fly storage encryption tool that is fast, flexible, super-well-engineered, feature packed, and able to provide advanced state-of-the-art encryption services for many applications.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode #41 for May�25, 2006:  TrueCrypt.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



Steve seems to have hidden today.  In fact, there�s some plausible deniability that he was ever here.  Ladies and gentlemen, it�s time for Security Now! with Steve Gibson.  And I�m making a joke because today we�re going to cover our favorite encryption program.



STEVE GIBSON:  It really is.  It�s like a bunch of guys over a long period of time who were not in a big hurry just worked out the most perfectly feature-packed, like, right set of things with no agenda.  They were not trying to force anything on anyone.  It�s just, I mean, as I browse the manual, as I was doing this morning, preparing to sit down and sort of, like, fresh myself up on the whole thing, I just had this wonderful feeling, like, okay, this is what open source and the whole open source community can produce when it really works well.



LEO:  So this is a traditional open source � we�re talking about TrueCrypt.  This is a traditional open source project.



STEVE:  Yes.  It is...



LEO:  There�s not just one guy.  It�s a bunch of people working on it?



STEVE:  It�s clearly a bunch of people.  And you can feel the influence of a team, which is really what you want in an open source mode where, you know, people were using it and someone said, hey, what about this, and now it�s a feature.



LEO:  Yeah, yeah.



STEVE:  And, I mean, it just � TrueCrypt is spelled T-r-u�e-C-r-y-p-t, and the site is www.truecrypt.org.  It is now running on Windows 2000 and XP.  The very old version, only 1.0, ran on the 95/98/ME group of machines.  And a lot of things have been fixed in it since then.  So you really shouldn�t be using it on a really old machine.  But it runs on the newer Windows platforms.  It�s now running on the 64bit platforms under Windows.  And they�ve got it running under Linux.  In fact, all of the recent work has been in adding features to it over on the Linux side, although Windows has also benefited in some ways.  And their plans are to also move it to OS X.



LEO:  Wow.  That�s great.  Great news.  Now, when you�re talking about encryption software, it seems to me � and I�d like you to let me know what you think � that open source is really the only way to go.  It�s the only way to be sure there�s no backdoor, that it works as advertised, that it actually uses those algorithms properly.  You almost have to go open source, don�t you?



STEVE:  I agree.  I mean, for this kind of project, the last thing you would want to do would be to download something from whitehouse.gov.



LEO:  Or nsa.com.



STEVE:  Or NSA.  Trust us.



LEO:  But of course now we know they have a huge influence with private industry, as well, so SBC or Verizon.



STEVE:  Exactly.



LEO:  I mean, frankly, I think it�s safe to assume that any commercial enterprise in the United States, large commercial enterprise in the United States, any encryption it offers may well have a backdoor.



STEVE:  Well, and the beauty is, there is nothing this is missing.  Not only is it all open source, but I guess the point is that there�s no reason that you need anything more than this.  This is open source.  This is using well-proven, academically-pounded-on encryption algorithms, exactly like the stuff we were talking about in our crypto series.  I mean, here�s just a beautiful application of those concepts that, I mean, there wouldn�t be � I can�t imagine a reason to go buy something from Symantec or � not that they have anything like this.  But, I mean, this is like � this is done now.  This problem has been...



LEO:  This gets the job done.



STEVE:  This has been solved.



LEO:  So tell me a little bit about how it works and what you can do with it.



STEVE:  Yeah, let�s talk about what TrueCrypt is.  The idea is, it is for storing powerfully encrypted data on computer media.  Typically, for example � this came up in last week�s Q&A.  We had � one person asked � I think the name was Kim.  I don�t know if that was him or her.  But Kim asked � he or she had a corporate laptop and was worried about the laptop being stolen and was wondering what about BIOS passwords and hard drive locking and so forth.  The problem is that even a locked hard drive can be unlocked by the drive�s manufacturer.  The drive�s contents, even when the drive is locked, is not encrypted.  You know, the Xbox was, I think, the first commercial place, other than the IBM ThinkPads, that we saw drives being locked and the fact that it�s possible to get around that in various ways.  So what you really want is the data that you care to protect to be powerfully encrypted.



What TrueCrypt is, and what makes it special, is that it�s an on-the-fly disk encryption system.  It installs a device driver into your OS which basically creates a virtual drive out of either a source file or a source partition.  So, for example, you then have a drive where anything you write to the drive, as it goes into the drive through this TrueCrypt device driver, uses state-of-the-art, symmetric, very fast encryption to turn that data into noise.  It is never not encrypted when it�s on the drive.  So there�s no way that anything can, like, catch it part way done or not finished or, you know, like where you walk away from your computer and you forgot to encrypt whatever it was you just did.  Everything ever written to a TrueCrypt volume is always encrypted.  And then, of course, this process is reversed in the other direction.  Anything you read from it is, again, symmetrically decrypted and returned back into the clear.  So from your computer�s standpoint, you�re just looking at a drive letter.  And you can�t tell that it�s an encrypted volume.  It�s just, you know, it looks to your computer like any other drive.



And, in fact, I�ll give you an example of how I myself use this.  I created a TrueCrypt volume that is a little bit smaller than a CD.  So, for example � or a CD-R.  A CD-R can store 700MB.  So my TrueCrypt volume is 680MB.  So what I have is I have a file on my system which is a TrueCrypt volume.  And I actually have it, you know, in my Windows directory.  It could be anywhere.



LEO:  It�s a visible file.



STEVE:  It�s a visible file.  And whenever I start my system, there�s all kinds of autorun and autostart things.  You�re able to, like, permanently mount volumes to require passwords, to make them optional, to make them required the first time but then TrueCrypt can be asked to cache them so when you try to remount the volume, it�ll try mounting the volume with all the passwords it�s seen.  And in case any of them work, then it mounts.  I mean, again, it�s got so many features that sort of just give you this feeling that this is a really mature solution.  This is, you know, a lot of the stuff that you find on SourceForge and is open source is just kind of like, it�s still at v0.0296 or something, you know, and it feels like they�re not ready yet to call it 1.0.  Well, this is currently v4.1  And, I mean, it feels that way.



So anyway, in my application I�ve created sort of a virtual CD volume, that is, I�ve created � I have a file which is 680MB in size.  TrueCrypt mounts it as a drive letter.  Anytime I want to store stuff archivally that I want, like, an extra copy of, I just store it on that drive.  Well, over time, of course, it fills up.  The stuff I�m storing is not big.  I�m not needing to archive, you know, huge stuff.  Mostly it�s source code.  So what I�m doing is I�m maintaining a source code archive of the things I work on, the projects I have that I absolutely want to make sure I don�t lose, but I also don�t want to lose control of that code.



So finally this thing fills up.  And from time to time I�m checking to see how full it is.  Well, what I end up with is a TrueCrypt volume, where that file which is living on my main drive, on my C drive, is seen by TrueCrypt as a drive letter.  It�s actually still just a file, but it�s a file of noise.  I mean, because it is encrypted there is no value to it unless you know what the password is that decrypts it.  So what I do is, I then burn that to a couple CD-Rs.  And I send one to my attorney, and I send one home to Mom.



LEO:  It�s half and half.  Is it the same file on two, or is�it...



STEVE:  No, they are redundant copies.



LEO:  Oh, okay.



STEVE:  Because...



LEO:  I thought you might be splitting it in half and making it really hard to figure out.



STEVE:  No.  Well, because I wouldn�t want anything � so the idea is that...



LEO:  You have multiple copies.  Yeah.



STEVE:  I have multiple copies.



LEO:  Yeah.



STEVE:  They�re in geographically different locations.



LEO:  Right.



STEVE:  And I don�t have to worry about, you know, Mom sticking it in her CD player by mistake or leaving it on the coffee table or...



LEO:  Because your attorney has a copy.



STEVE:  Well, because it is a TrueCrypt volume burned on a CD, it is absolutely useless...



LEO:  It�s noise.



STEVE:  It is noise.  I mean, as we know from...



LEO:  Now, here�s a question.



STEVE:  ...our talking about cryptography.



LEO:  Do you give the attorney and your mom the passkey or�not?



STEVE:  No.



LEO:  They can�t use it.  They can�t look at it.



STEVE:  It�s of no use to them.  From their standpoint it�s just an opaque disk that they�re saving for me...



LEO:  That�s nice.



STEVE:  ...in case I ever need, for whatever reason, to come and get it from them or ask them to send it back to me.  So it�s remote, it is absolutely secure, and I don�t have to at all worry about anyone getting their hands on it.  It�s only of value to me when I then apply my password.



So let�s talk a little bit more about TrueCrypt and some of the features.  First of all, one of the nicest ways, sort of convenient ways, is to create a file container, that is, a file of a certain size which contains the volume.  It�s just nice because you can create them on the fly.  You can create ad hoc TrueCrypt volumes out of files, store stuff in there, and do whatever you want to with them.  The other reason that�s nice is that it supports its use on a USB key.  So, for example, you would create a USB key.  You would create probably one large file that is not using the entire key because you want to leave room for TrueCrypt itself.  The TrueCrypt EXE is not super big.  You�re able to specify what features you want to include.  And then the balance of the USB key is this one big file.  Well, the advantage of that is that gives you portability, which TrueCrypt specifically supports in what they call �traveller mode,� where all the various settings are kept on an XML file.



And here�s another example of them doing things right.  TrueCrypt never keeps any of its own settings in the registry.  It deliberately keeps all of its settings in an XML file which is inherently portable and will be version compatible.  So again, they�ve just done things right.  They don�t want to leave anything in the registry.  They want you to have � throughout the design of this is this notion of plausible deniability that we�ll talk about a little bit more in a second.  But in traveller mode, you move the TrueCrypt program to a USB key, fill the rest with a large file which you then format as a TrueCrypt volume.  Now you�ve got the ability to carry a USB dongle around with you which you can stick into any machine you want.  And, in fact, the traveller mode creates an autorun.inf file on the root of that.  And it�ll also do the same thing for a self-running CD if you want to use CDs in this way.  So that you stick this in.  It�ll run TrueCrypt; mount your TrueCrypt volume as a drive letter; and then, of course, prompt you for your secret password, which you need to supply in order to unlock it, presuming � and I imagine you would � want to require human intervention.  But again, all of these things are user configurable.



LEO:  Sometimes for convenience people make it so that it automatically logs in when they log into Windows, kind of like the Windows encryption.  But that does seem a little bit less secure.  It is certainly more convenient.  So you�d recommend having it ask for a password, a separate passphrase each time.



STEVE:  Well, again, I think it�s really a function of how you�re using it and what you�re doing this for.  But I think most people would require that.  And here again we come back to our discussion of passwords because a strong password is required.  TrueCrypt, in standard, you know, good crypto mode, allows you to use completely random gibberish of up to 64 characters.  So, for example, going to my passwords page at GRC is a perfect way to get a super strong password that you would use and store somewhere.



Now, I mean, again, there�s so much to talk about here because, for example, not only does TrueCrypt base your password on what you give it, but you can even use other files as password material.  That is...



LEO:  Oh.



STEVE:  For example, you might have an MP3 sitting in your media directory of Windows.  Well, TrueCrypt knows that that�s a file which is providing keying material.



LEO:  Wow.



STEVE:  And so it uses  � basically it creates a fingerprint of the file.  It hashes the file to create some password material, which it then merges with what you provide.  So it�s not even just like � oh, and this can be multiple files in whatever order you want.  It never writes to them; it only reads to them.  There is no way for anyone who analyzes your volume to determine what it is that you�re using as seed material.  So even if someone had a password, unless they knew which files you also had tied the decryption to, even then the password would be useless to them.



LEO:  But don�t lose those files.  You could be in trouble.



STEVE:  Oh, absolutely.  You would be in serious trouble.



LEO:  There�s no way of reversing this in any way.  So there�s no backdoor.  If you lose the password, you lose the files.  You�ve lost the data.



STEVE:  That�s exactly right.  Now, there are some things they�ve done.  The way to think of these TrueCrypt volumes is that there�s a master key which encrypts the entire volume.  That master key is stored in a header, but at no point does anything look anything different from noise.  That is, these guys have gone nuts in terms of plausible deniability, so that there�s nothing stored in a TrueCrypt volume file or a TrueCrypt partition that doesn�t look like purely random data.  There�s, like, no � you know how most file headers will talk about what type of file they are, and you can tell by looking at the header what the rest of it is.  There�s nothing like that here.  And in fact...



LEO:  Would you want to not use a � I mean, a file�s kind of a flag that here�s some secret stuff.  If you used the partition, it could look like an empty partition, right, just an unused partition?



STEVE:  Yes, it would look like an unused partition.  Although, you know, you could bury the file somewhere and name it something that looks � I mean, you could name your TrueCrypt volume BestofSecurityNow.mp3.



LEO:  Yeah, but if somebody looked at it and realized it wasn�t, they might then � the reason I ask is because � and we talked about this on TWiT.  The British government is now proposing that, if they demand of a criminal or a suspect in a criminal investigation that he decrypt it or give you the password, and if he doesn�t, you go to jail,  They�re proposing that that be implemented in Britain.  And I imagine the U.S. and other countries will try such a thing.  If they know it�s � they say, well, look, here�s some data, it must be secret.  But if they look at a partition, and it just looks like an empty partition, they�re not even going to know to ask for a password; right?



STEVE:  Well, believe it or not, the TrueCrypt guys even have that covered.



LEO:  I�m not surprised.



STEVE:  Yeah, I mean, it�s just so well done.  What they have is they have the notion of a hidden partition within a TrueCrypt volume.  So you�re able to take a TrueCrypt volume and only use half of it.



LEO:  And maybe put some real data in the half, you know, just like your grocery list.



STEVE:  No, you would want to have something that looked like stuff you wouldn�t want someone to have.



LEO:  Ah, yes.



STEVE:  Thus the reason...



LEO:  Why it�s encrypted.



STEVE:  ...for looking like you had encrypted it.



LEO:  Right.



STEVE:  But the fact is, you�re able to have another encrypted volume using the unused space of the main one.  And once again, there is no way to prove that the unused space does contain another encrypted volume because TrueCrypt always fills the entire volume with random data when it formats it.  So the...



LEO:  So clever.  That is so clever.



STEVE:  Oh, it�s just, I mean, just from one end to the other, these guys have thought of everything.  So your entire TrueCrypt volume is filled with random data.  And as we know, strongly encrypted data is indecipherable � which is probably the wrong choice of words in this case � from random data.  It looks exactly the same as random data.  So if someone came to you and said, you know, we know you have encrypted data on this computer, we demand you give us your key � so you hem and haw and, you know, put up a good fight and then give it to them.  What they get when they decrypt it is something that makes them think, oh, well, maybe we got the wrong guy here.  Or, I mean, I don�t want to sound like we�re encrypting criminal...



LEO:  Would not encourage criminals, but the whole...



STEVE:  No.



LEO:  ...point of this is, if you are a freedom fighter, if you�re not a criminal, but let�s say the government decides it doesn�t like you for whatever reason, by refusing to decrypt whatever that data is, they can throw you in jail.  And so...



STEVE:  Or maybe your ex-wife�s attorneys don�t like you that much.



LEO:  So this way you have more than plausible deniability.  You can be cooperative and say...



STEVE:  Exactly.



LEO:  ...oh, yes, it�s all my Social Security numbers in there, and please, feel free.



STEVE:  You know, I�m a fanatic about keeping my phone bills, you know, just like the NSA.  So I keep mine...



LEO:  Well, you have to forgive us for being a little bit paranoid.  But there is perhaps cause for paranoia.  And, you know, if you talk about the right to bear arms, I think there should be a right to bear encryption.  And it�s part of the right to privacy, and that�s all we�re talking about.



STEVE:  And so the beauty of this approach is you�re able to divulge the information, let the authorities have the data, yet still within that same container have a secondary encrypted volume that uses a different password and is, again, completely secure.



LEO:  Wow.  I mean, that�s really amazing.



STEVE:  They really did a great job.  Now, with the newest version you don�t have to pre-assign the maximum size of a file-based volume.  It is able to grow dynamically using something that the NTFS file system calls �sparse files,� where you�re able to sort of like pre-allocate a large container, but it doesn�t actually use space on your disk until you actually require it, which is a new feature that TrueCrypt is now supporting.  I ought to mention, though, that if anyone wants to, like, try the CD archiving approach, which I love, you do need to use a FAT 32 container, not an NTFS container, because if you ever wanted to mount one of those CDs, Windows will not mount an NTFS file on read-only media.  It�ll only mount a FAT 32 file on read-only media.  But of course, since the thing�s only going to be 680MB anyway, FAT 32 is fine for that.  And�then...



LEO:  Right.  And there�s no limit for sizes on drives.  It�s just the limit would be on CDs.



STEVE:  Exactly, if you were wanting to spool it out there.  And you could also instead go to DVD format instead of CD, I mean, if you really wanted to store, you know, 4.7GB per disk of encrypted stuff and you had that much that you really needed to encrypt.  And there again you need to use the UDF format when you burn this to DVD because you�ll end up with a 2GB file size limit otherwise.  So that�s something to keep in mind.



But in terms of features, you might be concerned, okay, I�ve got my TrueCrypt volume mounted, and I�m using my computer.  And for whatever reason, somebody approaches me in a coffee shop, you know, the boss at work, your kids, I mean, who knows, whatever the situation is.  The presumption is that you want to be able to close that quickly.  All the technology is there to do that.  If you don�t use it for a certain amount of time, it will auto-dismount the drive so that it is then � it typically would require a password in order to regain access.  So, for example, you could just, if it�s something you wanted to make sure stayed secure, you could just say, I only want this to remain available for two minutes.  Which, of course, would be an inconvenience if it were something you were using all the time.  But it would be a lifesaving thing or a crypto-saving thing if it were something you just needed access to from time to time, but you worried you might forget to dismount it.



LEO:  Mm-hmm.



STEVE:  Similarly, when you log out, you can have TrueCrypt dismount the volumes.  When your screensaver kicks in, so that, you know, you�re at work, and you get up from your desk, screensaver kicks in.  Or, for example, you could use my little Wizmo utility to start the screensaver on a single button click, and that automatically dismounts any TrueCrypt volumes that you have said you want dismounted at that time.



LEO:  This is a particularly good idea, I think, for those of us who use laptops, to TrueCrypt our data drives on the laptop, because laptops get stolen.



STEVE:  Well, that was exactly the advice that I gave to our questioner last week...



LEO:  Oh, yeah, that�s right, yeah.



STEVE:  ...was, for example, set up a laptop � now, one thing TrueCrypt cannot do is it cannot encrypt an existing partition.  There actually are very good security reasons for it refusing to do so.  Because having a snapshot of the partition before encryption and after encryption could give a crypto analyst a lot of material.  So TrueCrypt refuses to encrypt an existing partition.  If you wanted to do this, for example, you would have to back up the partition to some other drive, basically move that data off of your laptop.  You�d want to make sure you really had it safely off, you know, maybe burn a couple copies of DVD, or just move it to another drive and make sure you�ve got it safe.  Then you would create from that existing partition, like your D partition � D for data � you would create a TrueCrypt volume in that which inherently, as we said, fills it with random data.  Now it is ready to receive its contents.



So now you simply restore that backed up drive, that backed up content, over into the D drive, which is a TrueCrypt partition, and now you�re good to go.  You�ve got your C, which is, you know, a minimal size Windows, just enough to hold your apps and to boot.  And then all the precious stuff that you care about � oh, and you are able to run applications from a TrueCrypt drive.  It looks just like any other Windows drive.  So you could install apps over there if you wanted to, or run things from there that you didn�t want, for security reasons, to put over on your C drive.  And it all works correctly.



LEO:  You know, Windows XP Professional has similar kind of hard drive encryption built into it.  Is there a reason to use TrueCrypt over XP Professional�s built-in encryption?



STEVE:  I just feel more comfortable with this.  I mean, I know what it is, the source code is there, it has features coming out its ears, the ability to, for example, put CD volumes and USB volumes.  And for my way of thinking, you know, this is a nice multiplatform solution.  Oh, and the volumes are transportable across OS versions.



LEO:  Oh.



STEVE:  So, for example, so this is one thing, for�example...



LEO:  That�s a good reason, yeah.



STEVE:  ...if you ever needed to move or to view something created under Windows, under OS X, once TrueCrypt supports OS X, or under Linux, you have that.  And you don�t have to worry about, you know, forward compatibility.  They�ve just got that nailed.



LEO:  There�s another issue with Windows encryption that I come across a lot helping people.  The way it works is it stores certificates into the encrypted directory, which people sometimes forget to copy.  It�s not enough merely to have the passphrase.  You also need the certificate.  It�s kind of like that file hash system that TrueCrypt uses.  And if you don�t have the certificates, even if you know the password, you will not be able to decrypt that volume.  And I think people frequently lose their data in Windows because they don�t know about these certificates they have to copy, as well.



STEVE:  Well, yes.  And you�ve just demonstrated that there is no plausible deniability...



LEO:  Right, there�s a certificate.



STEVE:  ...using Windows crypto in that sort of mode.  You know, the world knows, anyone who cares to look at your machine, knows you�ve got an encrypted volume.  You�re not able to say, oh, no, that�s just a bunch of junk...



LEO:  No.



STEVE:  ...or it used to hold data, but now it doesn�t�anymore.



LEO:  Right.  Those certificates, I misspoke, are not stored�in the encrypted volume but stored in the Windows directory,�so...



STEVE:  Oh, okay.



LEO:  Yeah, all you�d have to do is look in their Windows directory, and they can see the certificates and say, oh, hmm, I guess he�s got something he�s hiding.



STEVE:  Right.



LEO:  Let�s go see.



STEVE:  Right.  So anyway, I encourage anyone who has, you know, a need for storing data, either on their own machine, in a laptop environment where there�s a chance it could get stolen, and where you�ve got any kind of sensitive data, TrueCrypt � oh, it�s got a � the EXE that you download has a beautiful user�s manual.  They have got � their manual is in web page form online.  And I wasn�t able to find a PDF on their site.  But when you download the EXE and install TrueCrypt, it does bring with it a nice PDF.  You know, print it out, sit down, read through the manual once.  You�ll end up with a really secure, really useful tool for, you know, just any kind of application where � I mean, for example, you could even create a small TrueCrypt file, put a bunch of files in it, and mail them to someone.  I mean, and again, you�d need to give them the password over a secure channel.  But you could also use it for secure file transport or temporary storage on an FTP server or on a web server or wherever.  I mean, you know, really it�s so flexible.  And again, that�s one of the reasons I like it better than the solutions tied to Windows XP is that anything you can think of in the application space, you can apply TrueCrypt on.



LEO:  Although I�d say because it�s not public key crypto, it�s not public/private key, it�s probably not as good as, say, PGP for encrypting and emailing things or encrypting emails.  But it�s, you know, I mean, it�s really for a different purpose.



STEVE:  Right.  It�s not something that is as convenient for, like, on-the-fly crypto.  But if you wanted some way to�store or archive or, again, even to send data, it�s�possible.



Now, one last thing I�ll mention is that there is a header that I started to talk about in any TrueCrypt volume � although the header is not like we think of, as I was saying before, it�s not something that you can see is a header.  But think of it as private TrueCrypt header data.  That contains the master key for the rest of the volume.  And that�s what you are decrypting when you provide the raw material files or your password.



LEO:  Clever.  So you only decrypt the header, and then the header decrypts the rest.



STEVE:  Exactly.  And in fact, what�s really cool is you�re able to choose among many different algorithms.  I mean, it�s just a whole pile of hashing and crypto algorithms.  And for people who are super security conscious, you can even chain algorithms, so use Blowfish followed by AES followed by Twofish or something.  I mean, it�s just, if you really wanted to go overboard, which is what I think that would be, you�re able to do that.



LEO:  I presume the defaults are acceptable.



STEVE:  I really think they are.



LEO:  Yeah, okay.



STEVE:  I mean, which is � would just be to use AES.  And it�s also going to be faster that way.  Again, there�s going to be a speed versus overkill crypto tradeoff.  But what�s cool is that the system doesn�t know what crypto format you chose.  And one of the � I loved it.  One of the questions in the FAQ is, why can�t I choose whatever sequence of crypto I want?  Why do I have to choose from among the list they provide?  Well, the reason is, the way TrueCrypt determines the algorithm is by trying them all because it doesn�t know.  Nowhere does it � because if it stored it in the file, then you lose plausible deniability.



LEO:  Right.



STEVE:  If it�s stored anywhere.  So what it does is, it takes the files you�ve provided it, if you used file-based keying or just your password.  And it tries � it uses your password against all of the various flavors that it offers until one of them works.



LEO:  I love it.



STEVE:  It�s just beautiful.  And finally, in a corporate mode, say for example � the question was asked last week about, you know, the sense I got was this person had lots of employees who needed by their job to store sensitive corporate data or client data on their laptops.  There�s a problem if corporate IT set up the D drive, you know, the encrypted partition or drive, with an existing set of keys, and then the employee were to change the key and forget it, because there is no backdoor.  There is no way � if you lose this key, you are seriously hosed.  So anyway, what�s very cool is even that�s been considered.  Once you set up a partition, you�re able to back up the header.  That is, you can separately store � it�s like about a 1K file.  You back up the header and store it somewhere safe.  Then the employee could come along and change their password...



LEO:  Oh, this is great.



STEVE:  ...but you are never able to change the master key or the crypto used because once that�s been laid down the entire partition is encrypted that way.



LEO:  So it�s almost like having a PKI.  You now have a second key that will always work.



STEVE:  Exactly.  If the employee forgot their key after changing it from what corporate IT set up...



LEO:  I love this.



STEVE:  And of course, as we know, prudent security policy says you should change your keys from time to time.  Or maybe, for example, you were at a client site, and they may have seen you enter your key to unlock your drive.  In that case you certainly would want to change it afterwards.  So the point is the user, separate from IT department, could be free to change it all the time.  And if they ever forgot it, IT is able to restore the original header, which brings back with it the original password.



LEO:  You�ve got a key storer, that�s great.



STEVE:  And then you could hand it back to the employee and say, okay, now, don�t forget it next time.



LEO:  It�s really impressive.  I mean, this is really exactly what�s needed.  I�m thinking probably a good thing for me to do, even though I don�t have any application for it right now, would be to take one of my many USB keys and make it a TrueCrypt volume and just have it lying around in case I ever needed to put something on there.



STEVE:  Yeah.  I mean, for people who are security conscious, this problem is solved.  I mean, many people wonder about how to carry dongles, you know, USB keys around that are going to be secure.  What if someone, you know, if they left it behind or forgot it?  TrueCrypt�s traveller mode does that.  For any kind of long-term archiving, which is what I use it for, you know, I absolutely want to keep long-term archives.  I need them to be physically removed, you know, in case my office burned down or I was burglared or something happened.  So I need to physically move them somewhere, yet I don�t want to lose control of the security of that.  TrueCrypt does this for you.  I mean, what I like about it is that it�s a toolkit that you can apply in just all kinds of different ways.



LEO:  Very slick.  Very slick.  Speaking of great toolkits, I want to thank Astaro for supporting the show and providing a great security toolkit for people who have to protect themselves online, the Astaro Security Gateway, Astaro.com.  Really useful.  Free distribution for home users, and for corporate there�s hardware, as well.  It�s a really great way to protect yourself.



I also want to say that the gateway offers easy migration for Novell BorderManager users.  Lot of folks still using it, particularly, I think, in universities.  ASG v6.2 features a new single sign-on capability for eDirectory clients, an eDirectory browser, and a generic proxy server.  So you�re not stuck.  Check out Astaro�s BorderManager migration Wiki at Astaro.com/bordermanager.



And of course, if you have hard drive problems, there�s no better place to go than GRC.com for SpinRite.  SpinRite�s the ultimate disk maintenance and recovery utility.  You want to see some testimonials, SpinRite.info is a great place to go, SpinRite.info.  I think everybody who has hard drives ought to have SpinRite.  Just my personal feeling.



STEVE:  It helps.  It helps so many people constantly, Leo.



LEO:  Yeah.



STEVE:  I�m just glad to do it.



LEO:  Yeah.  Makes Steve feel good, too.  And of course, if you head to GRC.com/securitynow.htm, you�ll find transcripts of each and every show, thanks to Elaine; and a 16KB version for the bandwidth impaired; and show notes, as well.  That�s GRC.com/securitynow.htm.



What are we going to talk about next week?  Have we run out of topics?



STEVE:  Oh, no.  Next week � you know, last week, in answering Q&A, we talked about Skype several times, and we were talking about that relay node and about how NAT routers sometimes need help to find each other.  Next week we�re going to talk about what it means to be peer-to-peer friendly, what is a peer-to-peer friendly NAT router, and what is the technology that allows two people, both behind NAT routers, to create a connection.  Because traditionally that�s been impossible.  But that problem has been solved.



LEO:  And not with Universal Plug and Play, I might add.



STEVE:  Not by opening ports, exactly.



LEO:  No, a safe way to do it.  That�s next week.  Every Thursday, another great episode of Security Now! with Steve Gibson.  We�re glad you joined us this week, and we�ll see you next time on Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#42

DATE:		June 1, 2006

TITLE:		NAT Traversal

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-042.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo delve into the inner workings of NAT routers.  They examine the trouble NAT routers present to peer-to-peer networks where users are behind NAT routers that block incoming connections, and they explain how a third-party server can be briefly used to help each router get its packets through to the other, thus allowing them to directly connect.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 42 for June 1, 2006:  NAT Traversal.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



The month of June heralds in graduation, brides, Father�s Day, and of course every Thursday in every month is time for Security Now!.  Steve Gibson is here to talk about more security issues.  Hello, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be back.



LEO:  Happy June.



STEVE:  And barbecuing in June, too; right?



LEO:  Barbecuing, yeah.  June is one of my favorite months, I think because of all of those things.



STEVE:  Yeah.



LEO:  My daughter graduates from eighth grade in a few days.  And just the sun is shining, it�s summery, I like it.



So you promised us last week that we will talk about getting your router to behave.



STEVE:  Well, or � yes.  What it is about routers which may or may not allow them to behave, and specifically how it is that that security that we�ve talked about � I mean, you know, we�ve talked about NAT routers because we�re both so bullish on NAT routers from a security standpoint.  The fact that a NAT router makes sort of a natural hardware firewall which prevents unsolicited packets, �unsolicited� meaning they�re unexpected, you know, the random, as I call it, IBR, Internet Background Radiation.  Just this noise, I mean, if you ever put a packet capture on a raw interface, directly on a cable modem or a DSL line or something, it�s just amazing how much debris is, for one reason or another, aimed at your IP.  Sometimes it�s people scanning, you know, for the exploit du jour, whatever it is that has been recently found out.  Sometimes it�s people still trying to send you messenger pop-ups, spam.  It�s just incredible how much junk is out there.



So people who have a personal firewall, a software firewall running on their computer, they�re typically being harassed all the time until they finally get tired of that and tell their personal software firewall not to tell them every time one of these pieces of junk hits their computer.  Actually it�s sort of a feature of Windows XP Service Pack 2�s built-in firewall is that it�s not telling you that, oh, I just blocked something you don�t care about.  It�s silent.  And of course all the normal personal firewalls, the traditional Symantec, McAfee, ZoneAlarm, Kerio, Tiny, and so forth, all of those typically have the option of not notifying you every time something comes in.  You know, for people for whom a firewall is a new thing, it�s sort of fun to say, oh, look, something just hit me.  It�s like, okay.  Stand outside in the rain and you�ll have the same phenomenon.



LEO:  Yeah.  I don�t really need anything to hit me, and I don�t even know about it if it does.  So...



STEVE:  Exactly.  So the beauty of having a NAT router up in front of your computer is that it blocks stuff which is trying to come in your connection which is just from some IP, some random location that you�re not expecting anything from.  And suddenly your software firewall, if you still had one, that was alerting you all the time, it just goes silent because nothing gets in.



LEO:  But the advantage of the router is also its disadvantage when there is incoming traffic that you want.



STEVE:  Well, exactly.  And this has been the great problem,�which was � I�m not sure really where the pioneering was done on this.  It may well have been the Kazaa people because...



LEO:  They had to.



STEVE:  Well, exactly, because they were running their filesharing clients on people�s computers who more and more often were behind NAT routers.



LEO:  Now, we should make it clear that incoming traffic�s okay.  It will always get through if you request it.  It�s�only incoming traffic you didn�t request that becomes an issue.



STEVE:  Well, and then if we�re going to say the word �request,� we need to explain what that means.



LEO:  Okay.



STEVE:  What a request is, well, I guess there are two ways you could request traffic.  You could manually open a port, which is the traditional way of saying I want to run a server.  For example, I want to run a web server or, well, I was going to say email server, but that�s almost impossible these days because ISPs are blocking port 25, which is what you normally use for email.  And even web servers are now being looked askance at by ISPs.  But if you wanted to explicitly allow traffic to come into your system, you would need to, in the first case, to open what�s called a �static port,� that is, create a static port so that packets coming to your IP at that destination port will not be discarded out of hand, which your router would normally do, but instead will be permitted through and sent to a specific computer behind the router in your network which you have designated as the recipient for incoming traffic on that�port.



The implicit way of so-called �requesting� traffic is just that you have recently sent your own traffic outwards through the NAT router to some remote location.  What that does is that creates a mapping in the router, in the router�s RAM � not something that you have to do manually, it�s done automatically for you, which is how NAT routing works � so that, when data passes outwards through the NAT router to some remote destination, it implicitly allows return traffic from that remote destination to come back in through the router, and it will automatically be sent back to the computer behind the router that originally sent that outbound.  So it essentially allows you to use the Internet seamlessly, connect outwards to any services and servers that you need to use, and anything that they send you will be sent back.



LEO:  But as anybody who�s tried to put up a web server or an email server or any server of any kind inside his network has found, it�s not enough to just have outbound requests.  Sometimes you want to have people coming into your system.



STEVE:  Well, and a perfect instance of this is in a situation where, for example, you wanted to use VoIP or, frankly, if you wanted to just send a file to someone else, and you had some sort of a file transfer protocol.  So in the case of, for example, two people who want to have a VoIP connection, what they really want is a connection.  That is, we know from our talking about Skype, for example, that, you know, in VoIP the latency between packets, the length of time it takes for the packets to go from one Skype user to another, really affects the call quality and just the feeling of being connected.  So what these people want, these two VoIP users, is they want to be able to send data back and forth between themselves.



Well, here�s the problem.  They�re both behind a NAT router.  The NAT router will allow data outbound but not inbound without being reconfigured.  And what we specifically want to do is we want to avoid that reconfiguration because what that really means is it means opening a port so that traffic can come in from anywhere, not just from the person you�re trying to connect to.  So, for example, imagine that the first person tries to send some data to the second.  Well, that data will leave their NAT router easily.  That�s no problem.  That�s what NAT routers do.  But the data is going to travel across the Internet to the other person and hit their NAT router and die completely.  It�s unexpected data.  It�s unsolicited, so there�s no way for it to get in.



Well, what the clever guys, I think probably first at Kazaa, came up with was this notion of both people doing the same thing at the same time.  That is, each person sends data at the other person�s NAT router.  And they send it from the same port that the other person�s data came from.  So in fact it might stumble a little bit at the beginning, depending upon, you know, whose packet arrives at the other person first.  But the beauty is that the outgoing traffic from or through each NAT router creates an expectation of return traffic.  If the other person is able to design their outgoing traffic so that it looks like the expected incoming traffic for the other person�s NAT router, it�ll get�through.



LEO:  This sounds like hacking.



STEVE:  Well, I mean, it�s some really cool stuff.



LEO:  I mean, we�ve seen people use other systems like a third-party centralized server, like Hamachi users, where the transaction�s initiated as an outbound transaction for both ends, and then they kind of get handshaked.  But this eliminates � there�s no third-party server at all.  This is a way to do peer-to-peer transactions without having any third party involved.



STEVE:  Well, kind of.



LEO:  Yeah?



STEVE:  Actually there�s no third-party server involved once the connection is initiated.



LEO:  Ah.



STEVE:  That is, that the third party is not a relay that is relaying all the traffic between the two endpoints.  But it is necessary to briefly use a third party, some server, like, located out on the Internet that both of the people who want to connect are able to connect to.  The reason is that, until the NAT routers have allowed each other�s traffic in, they can�t see the traffic that is trying to get�in.



LEO:  Ah, okay.



STEVE:  So here�s what is really going on.  And this is the whole point of what makes a NAT router peer friendly or not, and how it�s possible to knit together a conversation between two people both behind NAT routers.  Both of their applications, for example, their VoI application, send data from their computer to this third party.  We�ll call it a �rendezvous� server, or maybe a �liaison� server.  There�s no real official designation because this is just all kind of stuff that�s been created.  So both people send data from themselves to this third party.  The rendezvous server sees the external port number, and that�s the critical information.  The parties may know each other�s public IP, which is the only way they would have of sending the data to each other in the first place.  But normally you cannot know what port your NAT router is going to assign to the outgoing data because that�s done just sort of automatically and algorithmically, and it�s changing all the time.



LEO:  So it�s not like web traffic where it always uses port 80.  It uses a random port each time?



STEVE:  Well, see, and that�s what NAT does.  NAT uses a � it rewrites the packet so that it changes, not only the source IP...



LEO:  Ah.



STEVE:  ...so that instead of coming back to your computer behind the router, it comes back to the router.  It also changes the source port so that, when the packet comes back to that port, the router knows, ah, this port is � at the moment it�s assigned to this conversation on this computer behind the NAT router.  That�s the whole way NAT is able to disambiguate all the traffic...



LEO:  Got it, got it.



STEVE:  ...coming to it among multiple machines that are all behind NAT.



LEO:  But, now, that�s only for internal use.  I mean, for external use you�re using the public IP address and the standard canonical port, like port 80.  Once it�s past � once it�s outside the router.



STEVE:  Well, okay.  But port 80 would be the destination port.  It�s...



LEO:  Oh, the return traffic has its own port.



STEVE:  Exactly.



LEO:  Even when you � okay.  So this is something I didn�t understand about the �Net.  So when I�m surfing to a website without a router, I go out and ask for something at port 80, but it will come in on a different port?



STEVE:  Yes.  In fact, that�s where we have this notion of service ports are typically numbered 1 through 1023, and application ports, or client ports, start at 1024 and go up to 65535.



LEO:  And they�re assigned randomly in each session.



STEVE:  Well, actually they tend to be assigned sequentially.



LEO:  Sequentially, okay.



STEVE:  Because there�s really no security problem with allocating them sequentially.  But so, for example, as your web browser is making connections to external servers, it�ll ask the OS for a port connection.  The OS will normally just assign the next numerical higher port, starting from 1024 and going upwards.



LEO:  Got it, okay.



STEVE:  And then, so the packets that leave will contain that port number as their return.  Actually it�s the source port because it�s the port that sourced the packet.



LEO:  Right.



STEVE:  And then they�ll use port 80 as the destination.  And so the remote...



LEO:  That�s true for all protocols.  Pretty much.



STEVE:  Well, I can�t make � I can�t say that.



LEO:  Many.  Most.



STEVE:  For example, DNS.  DNS generally sources its packets from port 53 and sends them to 53 so they come back to 53.



LEO:  Ah.



STEVE:  And there are other protocols like, for example, service protocols, like Windows will generally source ports from 445, and they come back to 445.  So, no, it�s not true for all protocols.  But for typical computer client protocols, you know, like web and an email client that is connecting out to port 25 to send mail or to port 110 to receive mail, it�ll use high-numbered ports.



LEO:  I don�t think you can give Kazaa credit for this because I think Microsoft had to create a directory service for its Messenger.  ICQ probably had to do something similar, didn�t it, for chat?  All of these predate Kazaa.  This problem must have been solved by them as well, yes?



STEVE:  Actually, they all had this problem and did not have solutions for it.



LEO:  Didn�t have a good one.



STEVE:  Right.



LEO:  Well, I know Microsoft used its directory servers at first, and I think that that�s how they tried to get around it, yeah.



STEVE:  So NAT would just normally have shut down those�early...



LEO:  Couldn�t do it.



STEVE:  ...those early adopters.  I mean, and remember that, in the beginning, having a NAT router really was a lot of trouble.  I mean, it caused problems...



LEO:  Oh, yeah.  Oh, yeah.



STEVE:  ...for people who wanted these kinds of things.  Okay, so in order to close this topic, both people send packets to this liaison, or this rendezvous server.  It sees what port those packets came from on each NAT router, and it exchanges that information, sending it back to each other, that is, to the other person.  And then they subsequently send their data to each other using the proper port number because they�ve sent data outbound to the other IP, and they�ve aimed it at the port that now they know, thanks to the third party�s intervention, brief intervention, now they know what port the other person�s data is coming from.  Their packets are regarded as solicited, even though they technically aren�t the returning traffic.  To each other they look like the returning traffic, and it works.



LEO:  And at that point you�ve got a handshake, and the rendezvous server can get out of the way.



STEVE:  Yes.  And in fact, the other thing the rendezvous server does is it also provides the public IP.  Because, I mean, generally, you know, you could look at the email headers; or, you know, each person could check their routers to, like, look at the configuration of the router to see what its current public IP was; or, for example, you could do something like use ShieldsUP! at GRC, which will show you your public-facing IP, even if your own computer is in a private network, because that�s what it is that ShieldsUP! is testing.  So there are ways you could find out what your public IP is, but they�re pretty tech-y and hairy.



So the beauty of this rendezvous server is, when two people send their traffic both to it, it sees the IP from which their traffic came and the port from which their traffic came.  That information it swaps and provides to the other party, that then sends their traffic to that port and IP a couple times.  And what�ll happen is the NAT router sees it, thinks it�s expected, and lets it right back through.



LEO:  Amazing.



STEVE:  It�s just cool.  Now, the problem is � so now we�ve laid down how it�s possible to connect two people, both behind NAT routers.  Well, what if a NAT router is hostile to that?  That is to say, what this requires � think about it for a second.  It requires that the port from which the traffic was sent when you sent data to the rendezvous server will not change, even when data is now sent to a different IP, that is, it is sent to the guy you�re trying to connect to, not to the rendezvous server.  That is to say, the NAT router has to deliberately re-use that same external port, even when the IP you�re sending the data to is different.  Not all NAT routers do.



LEO:  Oh.



STEVE:  Mine, for example, doesn�t.



LEO:  Is that nominally a good thing?  I mean, obviously it�s a problem here.  But is there a reason it doesn�t?



STEVE:  No.  And in fact, because this is causing problems, manufacturers are moving towards peer-to-peer-friendly NAT technology.  And in fact, even the formal RFC for Network Address Translation, i.e., NAT, suggests that it is better if the public port is kept static, as long as the internal IP and source port remains the same.



LEO:  And that�s totally for this peer-to-peer sharing.



STEVE:  It�s specifically to enable this kind of peer-compatible operation.



LEO:  Interesting.



STEVE:  So what�s happening is we�re seeing newer firmware versions of routers are fixing this because their customers are complaining that, you know, they can�t get good Skype quality or good whatever because of these problems.  So firmware upgrades are subtly changing the NAT logic so that the same outside port will be used.  Now, again, this doesn�t represent a security flaw because the mapping is still dynamic.  That is to say, even though the same port is being used at the moment, the public side port is chosen because the VoIP application is running on a certain machine, and Windows assigned it a certain port which it uses for all of its dialogue.  So if it used a different internal port, the NAT router could and would give it a different external port.  So it�s not like there�s any security compromise at all.  The NAT is still assigning these port mappings dynamically.  And only traffic coming back from an expected port and IP would be able to get back in.  But it�s just � it�s elegant, and it�s beautiful.  It does require the brief services of this rendezvous server, something out on the �Net that can see both parties and able to accept the data and exchange it so they�re able to connect to each other.



LEO:  I�m wondering if there�s any way to tell if your router is compatible or not.



STEVE:  Well, it�s funny you ask.



LEO:  Huh.



STEVE:  Because there used to be.  But I found out when I was preparing to talk about this, and I wanted to get some URLs handy, that the only service that used to be available that I knew of apparently is gone.



LEO:  Oh.



STEVE:  There was a multiplatform program called NAT Check, and it was a project living over at SourceForge.net, the open source home ground.  And it was running on some servers at MIT.  And there are apologies now on that page that it�s no longer possible to pull up the tables that used to be there.  It was, what, it was like last summer that you and I talked about this on Call for Help, Leo, and this NAT Check program worked, and the tables were there.  It�s all gone.  Now, I already have a bunch of stuff on my plate.  I�m working on some new...



LEO:  We don�t want to add anything more.



STEVE:  ...technology for GRC.  I still have to get the OpenVPN docs done that many people are waiting for.



LEO:  Yes.



STEVE:  That�s the next thing I�m going to do, as soon as I get this other project finished.  But doing a NAT checking service is, I mean, it was made for GRC.  It�s the kind of thing I should do.



LEO:  Yeah.



STEVE:  So we will talk about it again when I�ve got that done.  But as far as I know at the moment, there is no good way to determine whether your own particular NAT router is peer-to-peer friendly and allows this peer-friendly NAT�mapping.



LEO:  Can you assume that, if your router is less than a couple of years old, that it will?



STEVE:  No.  In fact, what I remember from that table when it was online was that even recent routers were still not doing that.  The only, I mean, this is a horrible, I mean, a burdensome suggestion.  But if you had a packet capture capability, that is, if you were running CommView or Ethereal or something and were using Skype � in fact, this is how, Leo, you and I verified that we had a direct connection and were not going through a third party, was I saw that my packets, my VoIP packets, were going directly to you out on the public side of my NAT to your IP, rather than through some third party.  So if you had the ability to look at your public traffic, and you were using two NAT routers, you could tell that you had a direct connection just by seeing that the actual IP was that of the other person and not some third party that it was bouncing through.



LEO:  And if you don�t, you could always check to see if there�s new firmware for your router.



STEVE:  Certainly, if you�re seeing this kind of problem, always keeping your router firmware up to date is just always a good policy.  But I definitely saw in this original table that they were showing � they had a table, a very comprehensive table of routers by make and model and version of firmware, and you could see the differences in this behavior based on firmware version.  So it�s certainly something that is tending to migrate towards offering this�capability.



LEO:  And you might look in the release notes for various firmware releases or your current firmware release for your router to see if it mentions that.  How would it describe such a thing?



STEVE:  Actually, I don�t recall, when I was looking at routers back when we were talking about VPN stuff, I was studying routers extensively to understand...



LEO:  They don�t tell you, do they.



STEVE:  ...exactly which features � I never saw anything about this.



LEO:  They don�t mention it.



STEVE:  Which was really annoying.  On the other hand, it means there�s really a need for something that will tell�people.



LEO:  That�s probably why MIT stopped doing its thing, because it was so hard to find the information.



STEVE:  Yeah.



LEO:  Okay.  So you won�t really know if you don�t have it unless you�re willing to get a packet sniffer out and kind of hack at the thing.  And you can�t...



STEVE:  It is something that I think I need to do, though, so keep an eye on Security Now!, and...



LEO:  And would you notice an improved performance?  I mean, would you notice a difference?



STEVE:  Well, look at the difference we had with Skype.



LEO:  Yeah, that�s true.  As soon as I started using a dedicated port, it really did make a difference, yeah.



STEVE:  Yeah.  And so there what you were doing is you were�compensating for the non-peer-to-peer friendliness of somebody else�s NAT router.  See, they both have to be compatible in order for this kind of connection to work.



LEO:  Right.  Oh, fascinating stuff.  Now, how does this relate to NAT traversal?



STEVE:  Well, this is NAT traversal.



LEO:  This is NAT traversal, okay.



STEVE:  You know, that�s sort of the formal jargon for the notion of how to solve the problem that the statefulness of NAT and the inherent firewallness of NAT brings along.  And the idea is you open simultaneous � you do, like, simultaneous connections outbound through each NAT router, having chosen the proper ports to send where the packet is going to be coming from.  One interesting thing that has been suggested is that, if NAT routers were logging the incoming denied traffic, and if your applications could each read the log, they would see the packets hitting the outside of the router and be able to adjust their outbound traffic so that suddenly it was expected.



LEO:  Would that have the same dangers as Universal Plug and�Play?



STEVE:  It wouldn�t, and it�s sort of an interesting hack.  But it�s not something that, as far as I know, has ever been done or is supported now.



LEO:  So in other words, this concept of a rendezvous server works on many routers, but not all routers.  And those routers it does not work on are not going to � it�s going to be difficult to use, or you may not get good quality on some of these services.



STEVE:  True.  And what it really means is that there will always be some third-party service that you�re using.  For example, you know, Google Talk uses their servers to solve the problem.  Skype uses their servers.  Peer-to-peer networks use nodes that are open in order to help people find each other.  So one way or another you are using a third party in order to provide that brief glue connection that allows each router to get the information from the other one.



LEO:  So if you had � if NAT traversal were enabled on both sides, you wouldn�t need the third-party route at all.



STEVE:  Oh, no, you still do because...



LEO:  You still do, yeah, okay.



STEVE:  Because of NAT, they�re blind to each other until somebody tells them how to see each other.  And then they�re able to knit a connection directly through.



LEO:  Very interesting stuff.



STEVE:  It is, really, I mean, it�s a cool kludge that has been sort of � it�s a consequence of the fact that most routers will behave themselves this way.  And it does, you know, it allows you and me to talk as well as we can.



LEO:  It�s only frustrating because we can�t tell our listeners whether they have a compliant router and how to fix it or how to find out.



STEVE:  At this point, what we�ve explained to them is why it doesn�t work...



LEO:  Not how to fix it.



STEVE:  ...if it doesn�t.  Exactly.



LEO:  Steve Gibson, you�re the greatest.  Always fun, always fascinating.  We will see you next Thursday with another exciting edition.



And of course I do want to remind folks that we have a great sponsor, and we�re really happy to have them along for the ride.  It�s, of course, Astaro Corporation, makers of the Astaro Security Gateway, which is a fantastic piece of software, free for download for home users.  You might want to get an old computer and put it on there because it gives you great firewalling.  You know, and I will bet that it does NAT traversal pretty darn well.  I haven�t asked.  You know what?  I�m going to ask.



STEVE:  I think it�s open source based, and so...



LEO:  If it didn�t, somebody would have fixed it by now.



STEVE:  ...I think all of the open source NATs do this correctly.



LEO:  Yeah, I�m sure it does.  And of course, if you�re stuck with Novell BorderManager, you might be interested in ASG because they offer easy migration for Novell BorderManager users.  ASG v6.2 features a new single sign-on capability for eDirectory clients, an eDirectory browser, and a generic proxy server.  Check out Astaro�s BorderManager migration Wiki.  It�s online at Astaro.com/bordermanager.  Or just visit www.astaro.com.



While you�re on the Internet, make sure you check out Steve�s site, GRC.com.  Not only a great place for security information, like ShieldsUP!, the notes to our show, securitynow.htm.  Actually we can give you a new address in a second.  But also a great place to find SpinRite, which is Steve�s day job, in fact, a fantastic program.  I�ve used it for so long.  Current version, v6.0, is fantastic.



STEVE:  Maybe for about 18 years, Leo.



LEO:  Yeah, you know, I�m thinking, when is the first time I used it?  And it�s probably when John and I had you on the radio show, probably � wouldn�t be 18 years ago, but it�d probably be �91 or �92.



STEVE:  Yeah.



LEO:  So it�s been quite a while.  Quite a while.  And it�s a fantastic program, and check it out if you have a problem with your hard drive or you just want to maintain, make your hard drive, you know, run as efficiently as possible.  SpinRite.com.



STEVE:  Whoops.



LEO:  I�m sorry, .info is for the...



STEVE:  SpinRite.com will take you there, too, but it takes you to the normal SpinRite page.



LEO:  Okay.



STEVE:  SpinRite.info takes you to our testimonials page.



LEO:  Got it.  And we�ve always said GRC/securitynow.htm for our show notes, but we don�t have to do that anymore.



STEVE:  Yeah, I added some technology to the server.  I noticed that people were not putting .htm, or some were putting .html.  And I know, Leo, you have a penchant for short URLs.



LEO:  Yes.  You know, like my radio show is Leo.am, you know?  Nothing more.



STEVE:  Right.



LEO:  And never .htm or .html.  So you fixed that?



STEVE:  Yeah, well, I added the ability for URLs that don�t include a file extension to be accepted, and the server fixes them.



LEO:  Yay.



STEVE:  That is, you know, our web server really runs at www.grc.com.  So if someone goes to GRC.com, they�ll get the www added for them.



LEO:  Right.



STEVE:  And now, if they leave off the .html or .htm, they�ll get that added.  So you could just do GRC.com/securitynow...



LEO:  Hallelujah.  How long have I been on you for this?



STEVE:  Well, let�s see, this is Episode No. what, 42?



LEO:  Even before then I always � you�ve been known for your obscure URLs, so I�m glad to hear that.  That�s great news.  And it was an easy thing to do, wasn�t it.



STEVE:  Oh, I�m glad it�s done.



LEO:  He�s an old-fashioned guy, and that�s what we love about him.  Steve, we�ll see you next week for some great information and security news and so forth.  It�s a must every Thursday.  Make sure you point your podcast client, whether it�s iTunes or whatever you�re using, to Security Now!�s feed, which is Leo.am/podcasts/sn.  That�s all you�need.



STEVE:  What is it, we�re about 100,000 listeners now.



LEO:  We are, every single week.



STEVE:  Yup.



LEO:  And I think it�s fantastic.  Thank you, Steve.



STEVE:  Always a pleasure, Leo.



LEO:  See you next time.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:		#43

DATE:			June 8, 2006

TITLE:		Open Ports

SPEAKERS:		Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-043.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  This week Leo and Steve cover the broad subject of �open ports� on Internet-connected machines.  They define ports, and what it means for them to be open, closed, and stealth.  They discuss what opens them, what it means to have ports �open" from both a functional and security standpoint, how open ports can be detected, whether stealth ports are really more secure than closed ports, and differences between TCP and UDP port detection.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 43 for June 8, 2006:  Ports.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



Steve Gibson is ready to talk about your ports.



STEVE GIBSON:  I�m so excited.



LEO:  You really, I mean, I think probably for many people the first kind of introduction to the concept of ports came from ShieldsUP! and Steve Gibson.



STEVE:  Well, and as far as I know I coined the term �stealth.�  That was one that I sort of, you know, in the whole ShieldsUP! Star Trek theme thing, I thought, okay, what are we going to call a TCP port which is neither open nor closed?  And I thought, oh, stealth, like, you know, the cloaking field and all that stuff from Star Trek.



LEO:  And of course, as usual, all of this stuff really was the bailiwick of business and enterprise computing, networking and all that stuff.  But as more and more people have multiple computers in their home, suddenly we�re all becoming networking experts, and the topic of ports becomes very important.  Now, it�s a little bit of a confusion because we�ve always had ports with PCs, but they used to be serial ports and printer ports.  And that�s not the kind of ports we�re talking about.



STEVE:  You�re right.  And in fact you mentioned enterprise.  And I remember the day, or the era, rather, where � and this was just � it demonstrates such an evolution in what�s going on on the Internet, where it used to be, in the early days of the Internet, when there was some mischief going on, then the IT guys would block a certain port that this mischief was coming into the network on.  In other words, there was sort of this presumption of everything being benign, but the exceptions were things being bad.  So in terms of, like, a firewall methodology, and the way people were thinking, you had a default �allow traffic in,� and then your exceptions were denying traffic.



LEO:  Boy, that�s changed.



STEVE:  And, I mean, oh my God, talk about getting fired quickly.  If you were an IT guy these days who did that, you know, it�d be like, what are you thinking?  Because of course today the world is completely inverted, where by default you deny everything, and you only allow traffic into your border that you know you want because, you know, the Internet�s just crawling with junk.  For example, we�ve got this legacy of Windows worms still crawling around the �Net, probing old vulnerabilities that have long since been removed.  But, you know, they�re still out there trying to infect machines.  And as we know, if you did stick a � if you took a computer you had just installed XP on, before doing any Windows update, before installing any service packs, that Windows XP that we were told was going to be the most secure operating system Microsoft ever created, you put one of those on the Internet and start your stopwatch to see how long it takes to just be just taken over by the junk that�s crawling around the �Net.  I mean, it�s...



LEO:  Sasser and MSBlast and all those.



STEVE:  Oh, yeah.  I mean, it�s like a matter of minutes, and stuff is crawling in your machine.



LEO:  I liken it almost to herpes or � it�s an infection that�s endemic.  It�s everywhere on the �Net and will continue to be there.  Nobody�s sending it out anymore, it�s just there are infected machines who continue to do it�and...



STEVE:  Yup.



LEO:  ...probably won�t go away until Windows goes away.



STEVE:  I think we will probably never get rid of those things.  You�re right, they�re old, unmanaged computers that are just sitting on the �Net in Lord knows where, I mean...



LEO:  Right, in corners.



STEVE:  ...in strange places, like long forgotten, and they�ve got this junk in them now.  And, you know, the whole point of a worm is that it�s self-replicating.  So once it crawled into this machine and set up shop, it then began scanning for others.  And, I mean, they�re just always going to be there.



LEO:  And what they�re scanning for is, in fact, open ports.  Maybe we should define what a port is.  And I think the terminology�s not great.  I think a word like �channel� might be better.



STEVE:  Well, �channel� would be a great term because, I mean, as we�ve talked about what we�ve talked about about the issue of ports in general, what I wanted to do this week is really just focus on this issue of open ports because a lot of people are concerned about them.  We get questions all the time, like I have to have this port open, is that a problem?  How do I close this port?  What does it mean to have a port open?  So, yeah, I really wanted to just focus on this issue of open ports and sort of really cover that well to resolve a lot of these questions.



But you�re completely right.  As we talked about when we were talking about the basic protocols of the Internet � ICMP, UDP, and TCP � we glanced on this before, the idea that, unfortunately, a port, people associate that with a physical thing, you know, like a serial port, a parallel port, a USB port, a Firewire port or whatever.  But in fact a port is nothing but a 16-bit number which is carried along at the front in the header of Internet packets which sort of specifies, exactly as you said, Leo, which channel or many channels of 65,535 possible channels this packet is aimed at.



LEO:  So there�s no physicality to this kind of port.  It�s not � there�s no, like, electronic � 65,000-channel electronic switcher or changer or anything like that.  I mean, there�s no physical thing.



STEVE:  Right.  Well, the physical manifestation, of course, would be your Ethernet port.  And there again we�ve got that collision of naming.  So, you know, your Ethernet connection is the way that this Ethernet traffic, of course, travels into and out of your machine.  And it�s often doing so through these so-called �open ports.�



LEO:  But it�s not like a part of the cable is port 1024.  I mean, it�s all coming through the same electrical signal.



STEVE:  Exactly.  Exactly.



LEO:  And I guess it helps if you understand that all of the data is sent in little discrete chunks called packets; and that each packet has, as you mentioned, a header.  And inside this header is information about where that packet�s going, where it came from, and what port, what channel, its surfing number.



STEVE:  Well, yes.  And that, of course, was the great breakthrough of the Internet, was instead of having a switched circuit system where actual physical circuits were being switched, we stepped back from it, and we have a switched packet system, where packet switching is the way machines talk to each other across a network of fixed�circuits.



LEO:  So the line�s always open, and data�s always going, but it�s routed according to the packeting.  Is that Bob Metcalfe�s invention?  I know he invented Ethernet.  Was that kind of the part of that invention, or did that predate�that?



STEVE:  No, that actually predates the actual � the Ethernet is just one of a number of electrical technologies that can be used to carry packets.  But, for example, Token Ring was IBM�s network.



LEO:  And they used packets, too.



STEVE:  Exactly.  So you can...



LEO:  I think Vint Cerf might have, I mean, certainly he gets credit for IP.  I wonder if � well, maybe not, though.



STEVE:  Yeah.  Well, it was all done, you know...



LEO:  A long time ago.



STEVE:  ...at the beginning of the �Net, when it was all being put together.



LEO:  The beginning of time.  I guess Paul Baran is the guy who invented packet switching, or one of the guys who invented packet switching.



STEVE:  So fundamentally we have sort of like the core for a machine which is on the Internet is the operating system.  But the operating system doesn�t itself natively have any ports.  That is, it supports the protocol and the ability for the OS to communicate by providing services, you know, like the so-called TCP/IP stack and IP services.  The operating system will support IP addresses which allow it to accept these packets.  But something then after the operating system, something running in the operating system is the actual entity which creates and opens these ports.



Now, for example, in the case of Windows, it may not be a separate application.  It might be a service, which really is part of the operating system, but it�s a separable part.  I mean, for example, you can stop the service or remove the service in order to close the ports that that service opened.  And then the next level of distance from the operating system are actual applications which are running in the operating system, like you and I are using Skype right now.  It�s running as a program on top of the operating system, using the operating system�s lower level networking facilities to allow it to communicate out on the Internet so that our two Skype clients are able to connect to each other.



LEO:  And Skype is kind of independent of what port you�re using.  In fact, you can in Skype say, no, use this port or use that port.  It works exactly the same.  It�s not tied to the port.



STEVE:  It doesn�t care, exactly.  So there are � also as we talked about before there are sort of what�s called �well-known port numbers,� where, for example, DNS, the domain name system that allows web names to be looked up and matched to their IP addresses, by agreement it uses port 53.  And so the DNS server is listening for packets coming into port 53 of any computer that it�s running on.  And your own clients are sending their data out of port 53, bound for whatever DNS service they�ve been configured to operate with.  And of course we know the web uses port 80, and 443 for SSL-secure connections, and on and on.  So there�s a large array of well-known ports, the idea being that systems will by default have services running in them, listening for incoming traffic on those ports.



So if we remember what we were talking about when we were talking about TCP before, the Transmission Control Protocol, the idea is that the operating system is doing the work for the application of establishing and sort of getting the connection going.  And this is where this notion really of an open port comes from because, when a connection wants to be established with a machine, a SYN � which is short for �synchronize� � packet is sent to that IP address that the computer is listening on.  If it�s a TCP port which is open, which is to say there�s something that has said �I want to accept connections that are coming into this port,� or as we�ve said, really sort of a virtual port, more like a channel, then the operating system will send back what�s called a SYN/ACK, its own SYN and an acknowledge of the receipt of that incoming SYN.  Well, that�s sort of this whole key of what makes the port be open is that anybody, literally on the planet, can send one of these SYN packets at someone�s machine.  And if it responds with a SYN/ACK, then we know that something is there at that IP address, even if it�s across the planet, which is ready to accept a connection and have some sort of transaction with us.



LEO:  So cool.  Every time you describe these things I just am impressed with how they thought this stuff up.



STEVE:  Well, and that has survived the test of time, I mean, so well.  And so that�s really what it was that got me thinking about ShieldsUP!.  Back then � and we�re talking years ago � I was setting up an ISDN connection for my�computer.



LEO:  There you go.  That�ll tell you how long it was.



STEVE:  Exactly.



LEO:  Pre-DSL, pre-cable modem, you know, ISDN.



STEVE:  Exactly.  It was an ISDN connection.  And I was aware of this whole issue of ports and security.  And so I got one of the � I just downloaded one of the free online scanners that were available on the Internet, and still are.  And I just � I was curious, like, what was going on in the neighborhood of the IP address that we�d been assigned.  So I just set the scanner up to, like, scan, I don�t know, you know, the hundred IPs plus or minus where the IP that we�d been assigned was.  And there were all these computers that had � and in fact this particular scanner was scanning for Windows filesharing.  And, I mean, literally the names of machines and the C and D drives, wide open, exposed on the�Internet.



LEO:  That must have been a shock.  Wow.



STEVE:  Well, yeah.  And it was enough of a shock that it was � I thought, you know, nobody knows about this.  This needs to receive attention because people were putting their Windows machines, hooking them directly to the Internet � this was before personal firewalls, before NAT routers � just literally plugging them into the Internet.  And by default, Windows machines all had this filesharing port open.  Meaning that, even if the user hadn�t shared any files, they still � Windows had all these services that were running in the machine by default, accepting incoming connections from anyone on the planet.



And so it was finally, I mean, it was that, the recognition that this really needed attention, that caused me to just say, okay, I�m going to do this thing that�s going to make it very easy for people to check their systems to see if they�re in this kind of danger.  So, you know, the very first version of ShieldsUP! primarily checked for Windows filesharing.  And then I expanded it in several follow-on generations to do � like, for example, now it does a full 1056 port scan to check from ports actually even including 0, which is not a legal port, but it turns out there are some vulnerabilities in routers that will accept traffic on port 0...



LEO:  Oh, wow, interesting.



STEVE:  ...all the way up through 1056, in order to look at 

even the low client ports under Windows.  But anyway, the idea was that � or is of TCP � that software running in the system will instruct the operating system to open a port.  What that means, then, is that that port will affirmatively respond to incoming traffic.  Well, now, an open port responds affirmatively.  But it turns out that even a closed port, that is, a port for which there is no listening software associated with it, there is no program that has told the operating system, I want you to accept on my behalf traffic coming in and do the low-level housekeeping work for me of setting up a connection.  In that case, a packet coming in and hitting a standard TCP/IP stack will generate an affirmative denial of a connection attempt.  Normally it�ll get back a reset, or sometimes an ICMP message saying there is no service available on this port at this IP.  So although you haven�t confirmed that you�ve found something potentially vulnerable, for example, a service that you may be able to exploit by virtue of the fact that it�s going to accept a connection from you, and you�re able to mess with it, what you have confirmed is there�s a computer of some sort listening for incoming traffic on that IP.  So those ports are considered to be closed, but they�re still known to exist.



And of course then the next stage of this is a so-called �stealth port,� where incoming traffic hits the machine.  If the port is not open and would normally respond in some affirmative fashion, saying no traffic is being accepted on that port, instead the machine is completely mute.  It just says nothing.  So, and that�s, of course, exactly the response that you generally get for a dead connection, where there�s just nothing on the IP at all.



LEO:  And that�s your so-called �stealth mode.�



STEVE:  Which of course has now become, like, the way to be on the Internet.  It�s interesting, I mean, there are people who argue that stealth is bogus.



LEO:  What?  Really?



STEVE:  Oh, yeah.  You know, it�s the old UNIX guys.  And they also dislike the idea that stealthing a machine technically breaks the IP or the TCP...



LEO:  Oh, I get it.  It�s out of spec.



STEVE:  It�s out of spec, exactly, because...



LEO:  Well, that�s a purist point of view.  But frankly, if you think about it, if bad guys come a knocking, what�s the best response?  We don�t have any money in here, or nothing?



STEVE:  Yes, or, exactly, there is no �in here.�



LEO:  There is no �in here.�  Nothing exists at this address.  Move on.



STEVE:  Right.



LEO:  So, I mean, you can be a purist about it, but frankly I think it�s pretty obvious what the best choice is.



STEVE:  Well, yes.  And the fact is, since it costs nothing to be stealth, why not be stealth?  I mean, since it costs nothing to be invisible, it seems to me it�s better, exactly as you said, to be completely invisible on the �Net than to say, I�m here, but all the ports you�ve checked so far are�closed.



LEO:  Now, it does come up from time to time that, well, this happened with the identd port, where a router manufacturer decided it wasn�t a good idea to stealth that port because some services were still using it, and an invisible port wouldn�t be an appropriate response.



STEVE:  Well, it�s a very good point.  The example you cite, the ident port, what happens is, when a user is trying to connect to a server � and this is generally, I mean, just ancient servers.  I mean, there are some IRC servers, some really old web servers, sometimes some FTP servers.  Part of the connection protocol is when a request comes in to the server, it sends back an ident packet to the ident port at that user�s IP, because in the old days people would have these things called ident servers where they would list a whole bunch of information about themselves.  I mean, who�s going to do that today?  I mean, nobody, because basically you�re sort of saying, here, here�s everything you want to know about me.



LEO:  Come on in.



STEVE:  Exactly.



LEO:  Yeah, yeah.



STEVE:  So it had been forever since anyone actually ran an ident service.  But what the server that makes the query wants is at least to get an affirm...



LEO:  An acknowledgement.



STEVE:  Yes, some sort of affirmative statement that, yes, there�s a machine here, but nobody�s home.  So what normally happens is the ident uses TCP protocol.  So the server will send a SYN packet, trying to establish a connection in the reverse direction, back to the client.  Well, as we know, TCP is very patient about getting a connection established.  It�ll send a SYN packet.  If it doesn�t hear anything else, it�ll send another one.  Then it waits twice as long and sends another one.  Then it waits twice as long again and sends another one.  Some machines will send up to five packets, and you can end up waiting a minute before the thing finally decides, okay, there�s nobody here.  The problem is that all of that suspends your main connection to the server, that is, the server, everything just stops on the server while it�s trying to establish this painfully slow process of getting a TCP connection.  If the far end did say no, I have no ident service, by sending back an ICMP or by sending a TCP reset packet, then at least the server would know, oh, okay, no service, but there�s somebody here.  And it would typically just then � it doesn�t really care about the ident, it�s just old technology that is still in some servers on the Internet.



LEO:  So what is the harm in doing that, then?  I mean, now I�m going to play devil�s advocate and say, well, in that case, why do we bother stealthing that port?



STEVE:  It�s just that, well, actually I think probably GRC is at fault.  I mean...



LEO:  It�s your fault.



STEVE:  I�m not kidding.  I mean, I was showing everybody that their ident port was not stealthed, and stealth became a cool thing to do, and people began asking their router manufacturers and their personal firewall manufacturers, �Hey, Gibson says my ident port is not stealth.  I want to be stealth.�  And so just really due to popular demand the router manufacturers said, okay, fine, we�ll stealth the port.  Well, the problem then is that some connections will stall when you are going out through a router or out through a personal firewall which stealths the ident port.



So then the next generation of this came along, and that was adaptive stealthing, or adaptive ident stealthing, where the router would be smart, and it would stealth the ident port from any source IP, that is, the remote server trying to open an ident connection back to you.  It would stealth it unless it saw that you had an outgoing connection to that IP.  Which is a perfect solution.



LEO:  There you go.



STEVE:  So if you�ve established a connection, and it asks back, well, you got an ident server, you can respond to that.  Then you say no, I don�t.  But at least the far end server is happy that you exist.  You acknowledge that immediately, and then you get on with your main connection�establishment.



LEO:  Ah.  But here�s the thing.  Would you mark that as a stealthed port?



STEVE:  Yes, in fact, I do it on purpose.  ShieldsUP!, it checks the user�s machine from an IP different than they are connecting to us from.



LEO:  To avoid this thing.



STEVE:  Exactly.  So I do it on purpose in order to give them credit for and to show that their router is stealthing ident for random sources of IP addresses out on the Internet, not the ones that they�re actually trying to connect to.  So it ends up being a very useful thing.��Now...



LEO:  We should just mention that the reason that you want it to be stealth is any indicator, even on a completely safe port like the ident port, any indicator that you exist could be a message to a hacker, well, at least there�s something here you might want to keep investigating.



STEVE:  Well, here�s a perfect example, Leo, and that is denial-of-service attacks.  If you piss off somebody on the Internet who�s got control of even a small botnet, and they decide they�re just going to DDoS you into oblivion, well, they�ll blast you for a while, and then typically stop the attack so that they can see if you�re still there.  Well, you know, you�d very much like them not to be able to tell that you�re still there.



LEO:  Yes, yeah.



STEVE:  Only if you�re stealth can you pull that off.  If they�re able to ping you or to bounce packets off you or try to open a connection and get back an affirmative closed state from you, then they�ll know you�re still there.



LEO:  And it�s fairly trivial to actually test each and every of the 65,000 ports.  I mean, computers are fast.  So even if there�s but one open, or not even open, closed but not stealth, they�ll know you�re there.



STEVE:  Well, yeah.  And in fact, if you�re running a system that is not stealthing you, every port will at least say either it�s open or it�s closed.  So in order to be completely off the �Net in appearance, you really do need the technology which is going to stealth you.  And as a matter of fact, I�ve seen dialogues where hackers know that ident is often not stealthed.  So they�re specifically trying to open an ident connection because, unless it�s adaptively stealthed, as all the latest firmware and personal firewalls are generally now able to do, it will look like it�s closed, and they�ll know you�re still there.



LEO:  So thanks to GRC.com and ShieldsUP!, all routers, all consumer-grade routers that ship these days, ship with stealth turned on.



STEVE:  Yeah.  Yeah.  It�s, I mean, it�s the right way to go.  There�s just no good reason not to be stealth where you can be.



LEO:  Now, am I throwing all the value of stealth out, though, by having some open ports?



STEVE:  Probably not because you don�t know what it is that might be looking for you.  You might have, you know, a hacker might specifically be scanning for a new vulnerability which has just been found, like in MySQL.  And so it might be looking to see whether you have a SQL database server port open, so it would be specifically checking for that port.



LEO:  And if you look at the hacker tools, they usually will say, what port do you want to hit, and what range of IP addresses do you want to test?



STEVE:  Right.



LEO:  And you could test a range of ports.  But for efficiency�s sake they may just be going after that one�port.



STEVE:  Well, now, it�s also necessary, since we really want to cover the topic of open ports well in this particular episode, it�s necessary to talk about the fact that UDP protocol is every bit as viable as TCP.  But because it doesn�t have this whole introductory handshaking going on, where you send the SYN and the SYN/ACK comes back, or you send the SYN and a reset comes back, UDP ports will generally operate or may operate differently.  That is to say that, as we know, UDP doesn�t have this connection establishment handshake, which is really the benefit for very short-term connections.  For example, the DNS protocol for domain name services, generally you just send a single packet off to a DNS server, and it sends you a single-packet reply.  So it�s extremely efficient.  Since DNS is going to be transacting such small amounts of information, you wouldn�t want to go through all the trouble of having a three-way packet handshake, then send your request, then get the reply, then have to shut down that existing or established connection through another series of packets.



LEO:  So DNS uses UDP.



STEVE:  Exactly.  Well, DNS...



LEO:  I didn�t know that.



STEVE:  It actually uses both.  It�ll use UDP.  But there�s a limit.  One of the reasons that UDP actually isn�t convenient is if you need to send a lot of data because generally UDP is sort of packet oriented.  Now, again, all of these things sort of have caveats.  For example, you and I are using UDP right now for streaming substantial amounts of data between each other during this podcast.  But what�s happened is a protocol on top of it, well, I mean, the typical VoIP protocol is called SIP [Session Initiation Protocol], which is used on top of UDP to sort of give it the ability to do more.  But in the case of DNS it is possible to connect with TCP to a DNS server and then make your queries that way if you needed to for some reason.  And for example there�s something in DNS called a �zone transfer,� where you basically say tell me everything there is to know about GRC.com, for example.  And if zone transfers are allowed, which for many security purposes nowadays they are not, but in the old days you only could use TCP for one of these so-called �zone transfers,� where you�re saying I want to know about all the machines within the GRC.com domain, the MX or, you know, the email servers, and everything going on.  Give it all to me.  And you cannot do that over UDP.



So in general, UDP is a much more quick, simple, lightweight protocol.  It also means that you might have a UDP server with an open UDP port, as opposed to an open TCP port.  And you would not really be able to tell that it was there unless you asked it in its own particular protocol.  For example, if you wanted to find out if someone was running a DNS server, you�d have to send a DNS query to port 53 and see if you got a response.  Whereas the whole opening connection dance with TCP is generic.  You do the same three-way handshake no matter what service, whether it�s web or, for example, DNS over TCP or FTP or any other TCP-based�protocol.



LEO:  So if you�re a hacker sniffing TCP ports, you could just send a SYN to every port, one after the other.



STEVE:  Exactly.



LEO:  And say hello.  And that�ll tell you that port�s there.  But if you want to sniff UDP ports, you�d actually have to use the appropriate protocol on each port.



STEVE:  Exactly, in order to satisfy the server that may or may not be listening.  Now...



LEO:  So it�s much more complicated to sniff UDP ports,�then.



STEVE:  It�s a lot more complicated.  Although, again, the original spec for the UNIX machines, you know, where all this originated, does say that if a UDP packet arrives where there is no service listening and that has told the operating system that it wants it to forward packets that arrive on a certain port to it, then the operating system should send back an ICMP, a specific ICMP message saying there�s nothing listening to this port.  So UDP ports can, by default, show themselves as being closed, that is, you get back something saying there�s nobody here.  So again, you�d like to stealth that behavior.  And of course that�s what personal firewalls and routers do.



LEO:  I think this is great.  You know, when you � we deal with this all the time.  When you go into your router, for instance, to port forward, to make some port work, let�s say you�ve got a router that�s, you know, rightly so, blocking all ports, but you want to use a, you know, you want to set up a server for World of Warcraft, you�ll see all this.  You�ll see UDP versus TCP, and which port number, and all sorts of stuff.  But now you know what it means.  Now you know what you�re doing.



STEVE:  Well, it�s interesting, too.  You were talking about port forwarding.  And I remembered that that also bears on the ident port because there are still some older routers whose firmware does � it will not stealth the ident port.  It will respond that there�s nobody here.  But a really fun workaround is to forward that ident port � which, by the way, is 113 � you forward that to a nonexistent IP address behind the router, that is, on your own network.  So, for example, if your IP address was 192.168.0., you know, 1 to 100, you could tell the router, forward that to .0.200, a machine that you know will never exist.  And what the router does is dutifully accept that incoming ICMP packet and sticks it on your network, aimed at an IP that doesn�t exist.  Well, since it doesn�t exist, there�s nobody there to answer the call, and you end up stealthing your ident port if your router otherwise would not do so for you.  So, I mean � and of course that works for anything that you want it to.  You could name any ports that you wanted to stealth, if the router wasn�t, just off into the twilight zone, to an IP inside your network that doesn�t have a machine listening on it, and those packets are just going to go nowhere.  They just end up being dropped.



LEO:  Well, I think you � have we covered the subject?  Do we know everything we need to know about ports?



STEVE:  The one thing that I think is worth mentioning to people is that all of this problem � which has been lots of history, you know, we talked first about this notion of firewalls by default allowing traffic and then IT guys blocking only the mischief and how that�s completely flipped around.  Well, the old days of Microsoft Windows, and for that matter other operating systems, generally had lots of things listening because there wasn�t a compelling reason not to.  And of course in Microsoft�s case, Microsoft always wanted to default towards allowing traffic because they just wanted things to work.  I mean, and they sure did, boy.  You know, you stuck your Windows machine on the Internet, and you could share your files with everybody in the world.



LEO:  Worked a little too well.



STEVE:  Whether that�s what you had in mind or not.  And they want, you know, they wanted Windows so that, when you click your machines together into a network, they can all see each other, and they can all happily share files.  Unfortunately, putting Windows onto the Internet was the same as putting it on your network.



LEO:  Right.



STEVE:  So it�s really worth mentioning that this is all changed now, finally.  I mean, and it took � I don�t know why it took so long, but it did.  It�s changed with Service Pack 2 of Windows XP, where there is a built-in firewall, and it is on by default.  And, you know, there are people who are still downloading my DCOMbobulator and my UnPlug n� Pray utilities.  Those are things which I created in a day, immediately after a new vulnerability had come out and well before, in some cases months before, Microsoft did anything to deal with it.  And those things I created to, like, kill off those ports or shut down those problems because we still didn�t � many people did not have personal firewalls.  XP didn�t have a personal firewall in the beginning that was turned on all the time.  Earlier versions of Windows never did.  I mean, back then people were still using, you know, 95 and 98.



But it�s really the case that these problems have been solved just by, first of all, by people having NAT routers.  I mean, if you�ve got a NAT router in front of your system, it matters to a far lesser degree what ports are open on your machine itself.  And you can see that because, if you use ShieldsUP! at GRC, it�ll show you everything is stealth, even if you�ve got open ports on the computers in your own network.  The reason being, nothing gets through your NAT router.  We�re testing your public IP, not those private IPs that no one can access anyway because they�re not routable on the Internet.  There�s no way I can send traffic to 192.168.0.1 in order to test it because that IP won�t go anywhere.  I can�t, you know, tens of thousands of people have that IP on their machines behind their routers.



LEO:  Probably millions by now.



STEVE:  Millions, I�m sure it is, yes.  So, you know, many, many tens of thousands.  So it really is the case that this problem with computers having open ports has really been mitigated, first by the advent of routers, and secondly, for those who are not behind a router, certainly with a personal firewall which is on and doing its job as, you know, the built-in firewall in Windows XP does.  Which really means, then, that the frontier for the concern for open ports is ports opened in routers.



And so the last thing worth talking about is the people who are worried that, for whatever reason, they have to have exposed open ports.  You know, what does that mean, to have an exposed open port?  Something, you know, where they�re just not able to be stealth because they need to have services that are available out on the public Internet.  And this is interesting because it factors exactly into the discussion we�ve had about buffer overruns.  Because unfortunately the exposure of an open port is that traffic is going to be flowing back in through your router, then to whatever machine you have designated on the router will receive that traffic.  And presumably you have something there on that machine, some application which is then going to be accepting the traffic.



The problem is, as we know, it is very difficult to write perfect software.  You know, the classic boondoggle of an open port was pcAnywhere, which many people were using in the early days of the Internet because it allowed them to connect to their machines at home and do whatever they wanted to.  That�s why it was called pcAnywhere.  The problem was...



LEO:  Anything anywhere.



STEVE:  ...it had, yeah, it had serious security problems that were being found one after another after another.  Many people didn�t even take the trouble to put a strong password on pcAnywhere.  So everyone knew what the default password was.  And people, you know, bad guys would scan the �Net for the standard pcAnywhere port and connect to people�s machines who never took the time to change the default password.  So the problem is, if you�ve got ports exposed, if you�ve got ports open, it is something you need to recognize as a potential problem, and that is that you are then depending upon the security of and the proper functioning of whatever software package it is which is listening to those ports.  And in fact, when I fired up Skype just now, Leo, in order to establish our connection, I got a message telling me that there was a new version available because a security problem had been found and fixed in Skype.  So it�s like, okay, I�m going to update myself right now.



LEO:  Right, right, right.  Any time you�re running a service of any kind, in order for that service to work you have to open a port.  And that opens up your system to trouble if the service has a bug.  And as you point out, it�s inevitable.  There�s always bugs.



STEVE:  Yeah.  It�s just so difficult not, I mean, this was the huge problem that Microsoft had with all of their services.  I mean, virtually every single one of them...



LEO:  Something was wrong with them.



STEVE:  ...had multiple problems that were found and exploited.  And, I mean, that�s where the worms came from that we were talking about before is specifically from these kinds of problems.  So, you know, the good news is, security is on everyone�s mind.  Certainly security is foremost in the minds of anyone writing applications.  I would say the only piece of advice, if you have to have ports open, is try to use robust, well-tested services that you have every reason possible to believe are not going to have problems.  And in fact, you know, if you really wanted to go a step further, and you had the ability to, I would say run those machines separately.  That is, you know, it may be the case that you�ve got an old computer.  Let it be the one on the front line in the so-called �DMZ,� where it�s going to be receiving that traffic, and not run those services on your main machine, where you really have much more valuable data, and you want to make sure nothing is able to crawl into it.



LEO:  And it�s another reason why people should go out and get routers, if they don�t already have them, and use them.  And the minute you do, in fact every time I install a router, and as soon as I�ve changed the password and turned off Universal Plug and Play, I�ll go to GRC.com and run ShieldsUP! and make sure that I don�t have any unstealthed ports.  And that�s what a great service that is.



STEVE:  You also want to make sure when you�re setting up a new router that you remember to turn off anything that�s, like, WAN-side stuff.  Many routers have, like, WAN-side administration where...



LEO:  Unh-unh.  That means the other guy can administrate your router.



STEVE:  Exactly.  Anyone on the Internet.



LEO:  Bad idea.



STEVE:  That�s not a good thing to have.



LEO:  Not a good thing to have.



STEVE:  I mean, again, if you have to use it for whatever reason, then you want to take the time to do a really good � to choose a really strong password that no one is going to be able to guess because, if your router is accepting a connection on its standard WAN-port, then somebody out there could just sit there pounding away on it, doing a brute-force password attack, trying to get control of your router.  It�s certainly better, first of all, not to run it on the standard port.  Move it, always move those things to a different port, if you have to have them at all, and then run a really strong password.



LEO:  Yeah.  And you could be sure that, if it�s out there, somebody�s banging on it.  That�s the other thing we�ve learned on the �Net is that you can�t just kind of skate anymore.  People are out there all the time.



STEVE:  Well, for example, the way I�ve got my equipment at Level 3 configured for the GRC network, I need to be able, if the worst happened and I needed to reboot a machine, I need to be able to power cycle the machine or get console access remotely.  So I�ve got some equipment which are neat little rack-mounted boxes.  But all they have is telnet.  They don�t have any provision for stronger authentication.  I can�t do SSH or SSL.



LEO:  Ooh, that�s not good.



STEVE:  No, it�s horrible.  And there�s no provision for changing from the default telnet port of 23.  So I�ve got these three boxes sitting there that I have to have access to from the outside.  I mean, that�s the whole point of them is I�m able to get to them from my home network or when I�m on the road.  So the problem is, they will only listen to port 23.  They do provide a password, but it�s just eight�characters.



LEO:  Oh, man.



STEVE:  And, I mean, and it�s my network.  It�s the GRC�network.



LEO:  That�s terrible.



STEVE:  And if someone accessed it, you know, they could turn off the equipment at GRC.



LEO:  Yeah, yeah.



STEVE:  So obviously the only reason I�m saying this on a podcast is I�ve solved the problem.



LEO:  I was going to say, you�re asking for trouble here.  What did you do?



STEVE:  What I did was, I found a really nice managed switch.  I have a Dell managed switch, which is surprisingly inexpensive, which allows me to filter those ports and only allow specific IP ranges to see them at all.  So only...



LEO:  So only somebody from your IP address can log in at port 23.



STEVE:  Exactly.  And in fact that equipment, it doesn�t exist for anyone outside of specific networks which I have pre-designated as being allowed to send traffic in.



LEO:  That�s a good way to do it.  That�s super stealth.



STEVE:  Well, and, I mean, you have to.  Because you just can�t have a service exposed on the Internet, especially a well-known service, especially from a well-known company.  It�s just going to get attacked.  Someone�s going to write something that sits there and starts with A and then B and then C...



LEO:  It�s not going to take long.  Eight letters?



STEVE:  Exactly, and does a brute-force attack.



LEO:  Well, I just want to circle back and say that we can thank in particular two different people for packets, the notion of packets.  I did say Paul Baran.  He did this research in the early �60s at Rand Corporation and wrote a paper on the idea of a packet-switch network.  And a Brit named Donald Watts-Davis who simultaneously, but independent of Baran, wrote some papers on � in fact, he�s the one who coined the term �packet switching� and describing that idea.  And it really does go back to one of the great pioneers of the Internet, Len Kleinrock, who wrote some papers theorizing that the best way to do this would be with packets and, in fact, created the idea of a notion of data blocks to solve that issue of data flow.  So it�s been around for a long time.  And I have a poem I want to read.



STEVE:  Okay.



LEO:  Do you mind?



STEVE:  No.



LEO:  This is � I�m going to tell you the story about this poem in a little bit.  But it�s been going around the Internet for years.  I�m just going to read one of the verses:  �If a packet hits a pocket on a socket on a port, and the bus is interrupted as a very last resort, and the address of the memory makes your floppy disk abort, then the socket packet pocket has an error to report.�  Just thought I�d pass that along to you.



STEVE:  That�s pretty good.  I like that.



LEO:  Actually it�s quite a bit longer.  It�s written by a guy named Gene Ziegler, who is at Cornell.  Wrote it in �64, and it�s been going � or �94, I should say.  But it�s been going around the Internet as written by Anonymous.  But it�s a long parody of Dr. Seuss that is really quite funny.  And I�ll put a link in the show notes.



STEVE:  I was just going to say, put a link in the show notes, yeah.



LEO:  Maybe what I�ll do is I�ll read it, giving credit to Gene Ziegler, and put a copy of the recording up.  I read it years ago on �The Site� as Dev Null, the virtual character.  And it goes on, I mean, I�ll just read the last verse.  �When a copy of your floppy�s getting sloppy on the disk, and the microcode instructions cause unnecessary risk, then you�ll have to flash your memory, and you�ll want to RAM your ROM.  Quickly, turn off your computer and be sure to tell your mom.�  And the page is �A Grandchild�s Guide to Using Grandpa�s Computer.�  He wrote it after his grandkids messed up his Mac.



STEVE:  That�s very cool.



LEO:  And we also, of course, want to remind people that GRC.com is available 24 hours a day to check your ports, baby.  ShieldsUP! is one of the many resources, valuable security resources, Steve makes available for free.  But it�s all supported by his great program, SpinRite, the ultimate disk recovery and maintenance utility, which everyone should have a copy of in this entire world.  And if you don�t, go to GRC.com and get yourself one.  And also, if you want 16KB versions of the show, thanks to our transcriptionist, Elaine, those are also available at GRC.com/ � I�m going to do this � securitynow.



STEVE:  Yup.



LEO:  They�re waiting for the htm.  No htm necessary.



STEVE:  Yup.  No www, no http, anything.



LEO:  Hey, I want to � we got a note from Alex Neihaus who is at Astaro, our great sponsor.  And you remember that last episode we were talking about NAT traversal, maybe two episodes � no, I guess it was last episode.



STEVE:  Yeah, it was last episode.  We talked about how NAT traversal works and then the notion of friendly versus non-friendly routers.



LEO:  Right.



STEVE:  That would behave or not, depending upon how they mapped the ports through the router.



LEO:  And of course Astaro makes, you know, the Security  Gateway software.  So he actually sent a note to his engineers saying do we do this, and they actually do it, it sounds like quite right.  Now, I didn�t fully understand that.  But...



STEVE:  Actually they do it so right that, I mean, it�s like the best way you could.  What they do is � and this is the Astaro Security Gateway.  When it�s running in a NAT mode, they will leave the source port unchanged as it moves across the NAT.



LEO:  Most routers do not do that; right?  They change the�port.



STEVE:  Correct.  Most routers just make up a random port and assign it in a table, so they�re always changing the source port.  And what you�re hoping for is that the source port will be the same, even if the destination IP is different.  That�s the critical feature that you need for peer-to-peer-friendly NAT.  Well, the Astaro NAT is, like, the best it can be because it will leave the source port alone as it crosses through the NAT translation, only changing the source IP from the machine behind the NAT to the NAT address itself, so that the packet is able to come back.  And what�s very cool is that the only time when it will change the source port is if you happen to have two different machines, both communicating on the same source port, both to the same remote IP, because there it�s very clear you would need...



LEO:  You could have a collision.



STEVE:  ...you would have to change the source port in order to disambiguate those two machines from the outside.  But unless that�s necessary, the source port is not changed, which means that the Astaro NAT is like, I mean, it�s going to be the friendliest NAT you could ever have.



LEO:  That�s slick.  That�s real � and by the way...



STEVE:  And it�s free.



LEO:  ...I�m using one.  Yeah, it�s free.  You can get the software for free.  I�m using one right now, and I�m really happy with it.  I feel kind of powerful.  I do want to mention Astaro is, of course, our sponsor.  And we�ve mentioned before that you can get the Astaro Security Gateway software for home users absolutely free.  For a little bit more you can upgrade it to spam, antivirus protection, and it really is powerful stuff.  But I also want to mention that there is a new managed system, the Astaro Command Center.  I�ve been looking at the screenshots of this.  It is so slick-looking.  ACC v1.  It is free for users of Astaro Security Gateway, so I�m going to download it.  And it�s really designed for network administrators who have multiple gateways.  It allows you to manage and control those gateways from a single slick-looking dashboard.  I mean, this thing is gorgeous, really looks good.  Includes a world map so you can see where your gateways are all over the world.  You can, you know, it has this monitoring so you can see what the threat levels are, I mean, I don�t know about threat levels, but resource usage.  You can�t see the threat levels, but let�s hope you don�t have any threat levels.  But the resource usage for all the gateways in the network, and you can coordinate them and manage them, you know, startup, shutdown, and maintenance and all of that�stuff.



STEVE:  Well, you know, I�ve got some friends that manage the security for, like, a bunch of small networks.  And this sounds like it�d be just the thing for them.



LEO:  Exactly.  Exactly.  So if you�re already using ASG, just go to Astaro.com, and you can download the Astaro Command Center v1 from the Products section.  Which, you know, I mean, I think it�s one of the nice things about using software like this, open source software like this, is it gets better all the time.  And it�s just wonderful.  I mean, you really get a real benefit from it.



STEVE:  It�s the future.



LEO:  I almost wish I had a big managed network.  It wouldn�t be any good for me.  I just use the home version.  Astaro.com.  And we thank them for their support.  And of course we thank the folks at AOL for supporting the show with bandwidth, which is always an issue with a show like this, with hundreds of thousands of listeners.  That bill can add up, but AOL�s been very generous.  And we encourage you to find out more about podcasting at AOL on the AOL Radio Channel by going to AOL.com/podcasting.



Steve, I�m so glad you did this.  I think ports are, you know, probably the single most confusing and interesting topic, and certainly the thing that we all have to deal with all the time.



STEVE:  Well, yes.  And I think it�s that they�re so visible.  I mean, it�s the thing people can see, and it causes concern.  So I just really wanted to cover that really well.



LEO:  And it�s one of those things in the computer world that really I don�t think anybody ever intended end-users would have to deal with.  It wasn�t designed for end-users.  But we do.



STEVE:  Oh, I mean, neither was http://.



LEO:  Exactly.  Exactly.  Tim Berners-Lee is embarrassed that anybody has to see that.  But that�s how things evolve, and that�s the way it is.



Great, Steve, we�ll see you next week.  You have any idea what we�ll be talking about, or...



STEVE:  Absolutely.  It�s Episode 44.



LEO:  I was going to say, it must be a Mod 4.



STEVE:  Yup.  So we�ll do Q&A.  Anybody who�s got any questions, they can go to GRC.com/securitynow.  Down at the bottom of the page is a form.  Send your questions to us.  I�ll read them, and we�ll pick from them and answer 12.



LEO:  All right.  And of course that�s also a good place to go to the discussion groups, the security discussion groups at GRC.com.  And you can get your questions answered by Steve and other experts.  It�s really a really wonderful resource:  GRC.com.  Thanks, Steve.



STEVE:  Always a pleasure, Leo.  Talk to you next week.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#44

DATE:		June 15, 2006

TITLE:		Listener Feedback Q&A #8

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-044.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world �application notes" for any of the security technologies and issues they have previously discussed.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 44 for June�15, 2006:  Your questions, Steve�s answers.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



I smell a mod 4 episode.  I do indeed.  Leo Laporte here, Steve Gibson in Irvine, and it�s Episode 44.  And as far as I can tell, that�s divisible by 4.



STEVE GIBSON:  That�s like a double mod 4.



LEO:  That�s a double mod 4.



STEVE:  Yeah.



LEO:  So we get our usual 20 questions.



STEVE:  It�s even mod 11.



LEO:  Mod 11, mod 4, mod 2, mod 0...



STEVE:  Mod 22.  Yeah.



LEO:  All right.  You math showoff.  Let�s get to the questions, unless there�s anything we want to cover from our last episode, where we talked all about ports.  People really appreciated that, by the way.  Got a lot of positive�feedback.



STEVE:  Yup.  And in fact, some of the questions that we�re going to deal with today are follow-ons from that.  So we�ve got 12.



LEO:  12 of them, starting with Nick from New Jersey, who says he hasn�t caught up with all the past episodes, so apologizes if he�s asking something we�ve already answered.



STEVE:  As a matter of fact, yes.  He asks:



LEO:  I was wondering about this program called Hamachi.  He really is far behind.  It promises virtual LAN functions over the Internet, all encrypted.  I�m wondering how you and Leo feel about the technologies behind it and the features included.  I thought it might make a good show topic.  It�might.



STEVE:  Well, exactly.  I put it in here.  I got a kick out of it because he�s excited about the show.  I want to tell you, Nick, that there�s an episode titled �Hamachi Rocks.�  And I love the title.  Apparently Hamachi�s author�s wife has been giving him, back when we did the show, a hard time about us doing a podcast called �Hamachi Rocks.�  We absolutely love Hamachi.  So Nick, if you go to GRC.com/securitynow, you�ll find the archive of all past shows.  Just scroll down.  I don�t even know what number it was [Episode 18].  But it was, you know, probably in the 20s somewhere, where I thoroughly researched, checked out Hamachi, had a whole bunch of great email with its author, Alex Pankratov, and really did a complete expos� on how it works.  And we love it.  It rocks.



LEO:  It literally rocks.  Let me see here.  I think it was���no.  Keep going back through the episodes trying to find which episode it was.



STEVE:  Yeah.  How far back was that?



LEO:  It goes away, away, away back.  Was it 22?  Let me see here.  I�m looking at all of our���no.  It goes back to where we were talking about VPNs, doesn�t it.



STEVE:  Yes, it was in our whole, you know, how to securely connect yourself to other machines.  And I have to say, I mean, we haven�t talked about it a lot since, but there�s a constant flux of Hamachi questions and accolades.  I mean, people really do like it.  My own tech support guy, Greg, is using���he moved from my area to Phoenix, from where he still does tech support for GRC, answering questions that our customers have who�ve purchased or are considering purchasing SpinRite.  And, you know, he�s online several times a day and gets responses back to people immediately.  He had some clients that he worked with on the side who he�s hooked, who he�s completely Hamachi-ized in order to get into their networks and do remote management of their corporate facility.



LEO:  Isn�t that great.



STEVE:  I mean, it really is super.



LEO:  Yeah.  A lot of gamers use it because it�s a way to create a LAN party without everybody being in the same�location.



STEVE:  Right, and in fact I remember that one of the questions I answered when you and I were together on the Call For Help show in Toronto was a gamer wanted to be able to hook two Xboxes together.  And of course the Xbox direct connection couldn�t understand going across the Internet.



LEO:  Right.



STEVE:  But by using Hamachi, you both are on a five-dot network, so it looks like a LAN to anything that you want to connect locally.  And it is, of course, easy to hook two Xboxes together locally.



LEO:  Right, right.  And don�t feel bad that you haven�t heard all the episodes.  We understand.  There�s lots of good stuff coming up.  In fact, you�re going to hear���if you�re back there, you�ve got a long, long way to go.



STEVE:  Well, but it is worth recommending to people that, you know, they remember that the podcast, at least from our standpoint, because we�ve done so much sort of research and tutorial content, not just current event stuff, there�s this archive of stuff at GRC that, you know, anyone can browse through.  And you�ll find lots of really good stuff there.



LEO:  You have a list at GRC.com/securitynow of every episode, so they can just click through those.



STEVE:  Yeah.  And of course, you know, transcripts, and a complete archive of all the past episodes.



LEO:  And just so people know, I don�t know, I haven�t really publicized it, once we open the new site���by the way, the site redesign will happen in a couple of weeks, the new site will launch, but then it will be fairly easy.  We�ll have a complete episode guide.  But until then you can always enter TWiT.tv/sn and an episode number, so sn1, sn2, all the way up to sn44, and that�ll take you to that episode.  So it�s not widely known, but that is a convention I�ve been using.



STEVE:  It�s funny, too.  I see people, like, trying to get ahead of us, trying to pull content from the next week or the week after.



LEO:  Oh, yeah, because we use the naming convention.



STEVE:  Because it�ll pop up in my logs, and I�ll go, oh, okay, well, we�re not quite there yet.  They must just be anxious and wondering if the content�s already been posted.



LEO:  It happens almost every time.  In fact, I had to start moving things to a staging area before I uploaded���after I uploaded it because people were screwing up the caches, the Akamai caches.  So I had to finally...



STEVE:  Right.



LEO:  ...finally just, you know, put it somewhere hidden until the time comes.  Ray from Irvine, your neck of the�woods...



STEVE:  Yeah.



LEO:  ...says:  When I�m behind a corporate firewall, going through a proxy server to the outside world, how exposed am I to the IT department when I go to a secure site, an SSL encrypted site for banking or online ordering?  Does the IT guy see my password, my credit card info, and so on?



STEVE:  Yeah, that�s a great question because there are situations where corporate IT has deliberately configured their border to decrypt a person�s communications, like for whatever reason.  They might want to be monitoring, they might want to be filtering it, they might want to be, I mean, it might be for a benign and beneficial purpose, for example performing antispam filtering or malware and virus and spyware filtering, because people certainly can get infected over a secure connection if the secure site at the other end is doing something bad.



So what anyone can do when they�re on a secure site is right-click on their page and look at the certificate.  We�ve talked about this in several different contexts, but not exactly this context.  You should see, for example, if you were at PayPal, and you had an https secure connection, or Google, if you were using Google Mail securely, or whatever, if you right-click on the page and look at the certificate, you will see the URL or the name on that certificate.  If it�s www.paypal.com or Google.com, whatever, then that means that you actually have a non-intercepted secure connection directly to that site, and nothing is there interposing itself.



What can happen is that corporations can install their own certificate on their employees� browsers, which will essentially allow them to intercept any other SSL connection and proxy it, meaning decrypt it, do whatever they want to with it, and then re-encrypt it, essentially breaking the security completely at the border.



LEO:  Wow.  I wouldn�t have thought that.  I would have thought that once you�ve established the���that you�re establishing connection with your bank directly.  But�they...



STEVE:  Well, and that�s the problem, is that if a���in the same way that certificate authorities can be installed on browsers, which is what authenticates certificates, it�s possible for a local certificate to be created.  Now, you know, users will generally see some notice of that.  But that can be suppressed in browser configuration also, making this thing pretty transparent.  So it is something that corporations, some corporations, do.  And, you know, if you�re really concerned about not having anyone able to sniff your traffic, you need to make sure that�s not being�done.



LEO:  Wow.  Wow.  But again, you can check the certificate in your browser, and it will tell you whose certificate you�ve got, and that�ll tell you who is...



STEVE:  Exactly.  If you...



LEO:  ...seeing your data.



STEVE:  Precisely.



LEO:  Oh.  I�m going to have to think about that from now on.  Is that still a common technique, is using a proxy server at a corporate environment?



STEVE:  Actually, I think it�s increasingly common as opposed to decreasingly common practice, although not necessarily for secure traffic.  Generally it�s for non-secured stuff.  But we are seeing, as security concerns and spyware and malware concerns increase, there is an interest in filtering all traffic, even that which is secure.



LEO:  Wow.  James from London was wondering:  In your discussion, last discussion, you talked extensively about blocking inbound access to ports using stealth and NAT techniques.  But what about blocking outbound ports?  Is it necessary for personal or business users to block all outbound port access and only open up the ports required?



STEVE:  Well, of course, this is the great question.  This is sort of the issue of do I need an additional personal firewall beyond having just a NAT router or beyond having the personal firewall that�s now built into and turned on by default in Windows XP after installing Service Pack 2.  And, I mean, it�s a good question.  Neither you nor I run with them, Leo.  But on the other hand, it was during beta testing of the very first version of ZoneAlarm which offered outbound port blocking, which is to say application-level port blocking, that I discovered the very first piece of spyware on my machine and coined the term �spyware.�  So...



LEO:  So without it, it wouldn't have seen that.



STEVE:  I would have never known that there was something in my system phoning home.  And of course Microsoft has been in the news recently because their Windows Genuine Advantage program has been caught phoning home daily, despite the fact that they did not acknowledge that that was going on in their EULA.  And they�re now, you know, running backwards a little bit and apologizing and saying they�re going to change it and coming up with strange justifications for doing so.



Many people like the ability to know exactly what programs are communicating over the �Net.  Other people find it makes their computer too noisy.  It�s popping up and asking permission and so forth all the time, although that kind of facility can be trained.  So I think it�s really a matter of personal preference.  Is it better for your security to run that kind of software which is going to give you outbound control?  I think you�d have to say yes, it�s better.  But as always, there�s a tradeoff.  For more security comes more responsibility, more of your involvement in managing what your computer�s doing.  Many people like doing it.



So I would say maybe give it a try.  You know, use, I would say, a lightweight firewall.  You know, the Symantec and McAfee products, even ZoneAlarm, unfortunately, has just become so big and so kitchen sink-oriented, trying to do so much for you, that it imposes a burden on your system.  In fact, it�s funny, I mentioned Greg, who does my tech support, who remotely administers a client here in Orange County.  He upgraded them to a newer version of McAfee which broke the function of one of their systems because it was an older computer that just no longer had enough power to run the antivirus updates in addition to the other stuff it was doing.  So the only change he made was updating to a newer version of McAfee, and finally it was like the final straw.



So, you know, firewalls like Kerio, which is now owned by Alex Eckelberry�s company, Sunbelt Software, Kerio�s a great lightweight firewall.  And really, if I were to recommend one, that�s the one I now recommend because it�s just���it�s smaller and tinier.  And so anyway, the point is, if you�re interested in trying outbound blocking, get a good outbound blocking firewall like Kerio and see how it feels, see what you think.  If you like the control, then it does give you more security.



LEO:  Let me ask you this.  Are there any hardware routers that do this?  I mean, that might be a better way to go.



STEVE:  It�s a difficult thing to do from a hardware router standpoint.  NAT, as we know, by default allows everything outbound.  The problem is that, as soon as you�re outside of the computer, when you�re in an external router, there�s no way for it to know what application generated the traffic.  So you certainly could block all kinds of ports.  But then basically you�re shutting down services.



But on the other hand, Leo, I mean, it�s not a bad idea.  The classic corporate firewall of yesteryear did not allow traffic, for example, to remote servers other than those running on 80 and 443, maybe FTP on port 21.  And then it was smart about handling FTP�s reverse connections.  So you certainly could run a more traditional firewall.



But then all the many other things that most people are now used to using and wanting to use, you know, Skype and peer-to-peer and, you know, many of these fancy servers that we have would not function unless you started then opening ports to their remote servers over the ports they want to use.  And many of these are dynamic and changing and configured on the fly.  So unfortunately, if you were to try that, you�d end up, you know, either having to open up so many ports that you really no longer had any security, or you could still have a case, for example, where malware was deliberately using port 80 in order to pretend to be a web browser.  Thus it would go right out through an external firewall, and you wouldn�t know that it was something not your browser, pretending to be a browser, using your existing Internet connection.



LEO:  All right.  So...



STEVE:  So the real advantage of the program running in the computer is it�s able to backtrack through the computer, figure out which program is doing the communication, and then going���in fact, we have a question sort of about that that we�ll be dealing with a little bit later in this show.



LEO:  Very good.  Very good.  All right.  Mannix of Canberra, Austria�� Australia, I�m sorry, there�s a little difference there���has been thinking about something he calls VM surfing:  I was just listening to the episode of SPYaWAREness [Episode 7], and I was just wondering, is using Virtual PC, something like a VMware workstation���Virtual PC is a Microsoft product, but VM...



STEVE:  Or he says, yeah, a virtual PC...



LEO:  A virtual PC...



STEVE:  You know, any one of them, yeah.



LEO:  Right.  VMware is another one, of course���for browsing high-risk sites any safer?  Actually, I�m interested, too, because I�m using now the Parallels Workstation on my MacBook to run Windows.  Because even if you get infected, he says, it�s just going to infect the virtual PC and not the main system, right?  Or can���and this is the big �can� question���the main system be affected through the virtualized system?



STEVE:  It�s a great question.  And in fact, we will be�� it�s on my slate of things that we�re going to devote an entire episode to.  This notion of VM surfing is a question that comes up from time to time.  VMware was really the first high-profile company to offer this notion of virtualizing your computer.  I am an owner of a current copy of the VMware Workstation system.  And I�ve used it, for example, to set up multiple virtual machines when I wanted to test many different personal firewalls.  You know, I mean, like, I have nine or ten of them, each installed in their own virtual machine, and I can jump around between them much more easily than having to install and uninstall them.  The whole concept is that it creates a truly secure sandbox, basically a virtual computer that cannot modify its external environment.  It actually is a very safe means for surfing.  The problem is, it�s not nearly as quick, easy, and transparent as firing up your web browser and doing something.  So...



LEO:  So it can�t then cross the boundary between the virtualized hard drive and your real hard drive.



STEVE:  When done correctly, and we�re assuming it�s done correctly, that�s true.  It cannot.



LEO:  Now, there are sometimes shared files, or you can write to the other hard drive.



STEVE:  Yes.  And that�s really what I mean about �when done correctly� is that...



LEO:  So if you can do any of that, that�s not good.



STEVE:  For example, VMware specifically supports the notion of a local network among the machines.  And filesharing, you can actually use Windows filesharing to bridge your virtual machines together, in which case you�re able to see each other.  And there are all kinds of ways to break the containment that a virtual machine offers.  But there are some exciting things happening, specifically in the world of VM surfing, where for example VMware now makes a free player.  And people have put together Linuxes that are preconfigured with browsers ready to run where you can run one of these Linux VMs, a virtual machine, in the free VMware download, to go a certain distance towards creating an enclosure that is absolutely safe to surf in.



LEO:  Interesting.



STEVE:  And that�s, I mean, enough of this is happening that we�re going to do at least an episode on this to talk about exactly how these things work and which one we recommend as, like, the easiest to use, most bulletproof solution for people who want to explore this.



LEO:  Well, and in fact, you know, I just started doing this on my MacBook.  Now, of course, in this case I have shared folders.  It can read the drive, local drive, so it�s probably a little risky.  But on the other hand, since it�s a Mac, it�s not likely to cross-pollinate from a PC.  So I probably am pretty secure, yeah.



STEVE:  A good point, yeah.



LEO:  And, you know, it�s funny, given enough memory, it actually runs pretty quickly and launches pretty quickly.  So it might actually be a good solution.



STEVE:  Well, yeah.  Microsoft is promoting this.  And, you know, they...



LEO:  Oh, are they?



STEVE:  They purchased their technology, I can�t remember from whom, but somebody else, and they call it Virtual PC.



LEO:  Right.



STEVE:  They�re suggesting that, for reasons I don�t fully understand, that their normal server software won�t completely use all the resources of a hardware server.  So you�re supposed to now run the server edition of Virtual PC to run multiple virtual servers in a single server.  And it�s like, okay, whatever.  It just seems loony to me.��But...



LEO:  It�s not too much of a burden, though, because it is running on a PC.  At least it doesn�t have to do any translation or anything like that.



STEVE:  Yeah, the purist in me wonders, you know, how you�re not going to have an additional layer of something going on, context switching and virtual machine switching back and forth.  I mean, apparently something about the architecture that they�re normally using doesn�t let them saturate the hardware resources of a server.  And this is supposed to be a way to, like, do a better job of just, you know, really taxing your hardware better.



LEO:  Well, one thing, I guess, is that there is hardware, support for hardware virtualization in the new Intel chip.  So that�s one of the reasons I think people have gotten all excited about this because at least it�s supported in hardware now.



STEVE:  Well, actually it�s been there since the 386.



LEO:  Oh, it has?



STEVE:  Yeah, I mean, there has been this notion of VMs, you know, the old DPMI that we had back in DOS...



LEO:  Well, they�re somehow promoting this, Intel�s somehow promoting this new virtualization technology.  So they must be doing something different.  Maybe not.



STEVE:  They just want���they want a new logo.  They want a new sticker, a sticker they can put on this.



LEO:  So DPMI allowed you to do this before.



STEVE:  It was, yeah, the DOS Protected Mode Interface was a context-switching�� you remember Quarterdeck and their, I�mean...



LEO:  Sure, yeah, that�s right.



STEVE:  ...that was all virtualization, yeah.



LEO:  Yeah, you�re right.  Hmm, interesting.  Dave Matthews of Richmond, VA, wonders about the alternative Linksys firmware.  We�ve all���maybe you haven�t, but I�ve certainly been hearing a lot about this.  He wants to hear your thoughts about the various hacks for Linksys routers, particularly for the WRT54G, which is a very apparently hackable router.  And there�s OpenWrt, there�s a lot of different forms.  Are they more secure than what comes on the Linksys?



STEVE:  Well, that�s a great question.  I wanted to respond to it because, as you say, there is a continual buzz about this idea.  We�ve talked about it, in fact, in the context of OpenVPN, our VPN system of choice, because there are some opportunities to run an OpenVPN server on a Linksys.  Backing up a little bit, the idea is that, you know, as we�re familiar, many of these personal routers, NAT routers, allow you to upgrade their firmware when they�re�� typically when they�re adding features or fixing bugs.  You download the latest firmware and go through some process to update the firmware that�s burned in the router.



Well, Linksys, it turns out, and among other routers, is using Linux as the core OS in the router.  And that brought people to say, hey, what about putting other Linux configurations into the router?  Which turns out to be completely possible and is even sort of quasi-supported by some of the router manufacturers.  They�re not that concerned, long as you don�t call them for support, because you bought their hardware, they�ve got their money from you, and it is sort of a more high-end advanced thing to do.  But there are���it is possible to install firmware in this hardware which is substantially more powerful than the much-watered-down sort of generic feature set that Linux provides, Linux or any of these other routers that allow you to do this.



Now, the question is, are they more secure?  That�s a great question.  When you go off the reservation and use some third-party software or firmware in your router, you�re certainly taking responsibility away from the manufacturer about what this thing�s going to do.  With responsibility comes power, also comes of course the opportunity for something to go wrong, for you to misconfigure something, for you to have these more powerful servers or services running.  If then there was a security vulnerability found in them, you might have hackers scanning the �Net looking for these hacked Linux routers running a vulnerable version of a service that the base Linux router didn�t have.  So, I mean, it�s the standard, okay, you want to do something more fancy, you need to take some responsibility for it.  So...



LEO:  And you�re trusting what others have done.



STEVE:  On the other hand, it�s all open source.  This is all open source technology.  So it�s inherently more trustable.  So I would say, if you�re wanting to do that, make sure you�re paying attention to and are a member and have joined to whatever security lists or bulletin system they have, and that you are keeping that firmware up to date, because you want to stay ahead of any problems that are found because they could be then exploitable, whereas the base generic firmware would be less so.



LEO:  Right, right, right.



STEVE:  But, I mean, you know, for���I have a WRT, is it the�54G?



LEO:  54G, yeah.



STEVE:  And I flashed it because I wanted to play around with SIP, with VoIP.  And you can install a complete SIP system in one of these routers and...



LEO:  That�s pretty cool.



STEVE:  ...create���oh, I mean, it�s amazing.  And, I mean, and they got, I mean, you know...



LEO:  It�s really a little Linux, as you say, a little Linux computer that you can do a lot with.  I mean...



STEVE:  It is absolutely running Linux.  And there are some builds of this that are very feature packed.  I mean, it�s amazing, they�re really building tight little systems with all kinds of cool additional features.  So people could Google OpenWrp...



LEO:  T.



STEVE:  Excuse me?



LEO:  Wrt.



STEVE:  Oh, yeah, yeah, exactly, Wrt.  It�s the open�� what�s it stand for?



LEO:  Well, Wrt is whatever Linux calls that router.  Wireless Router Thingamajig?



STEVE:  Yeah, I thought there was some acronym for it.  Anyway, yes.  Google OpenWrt and...



LEO:  You�ll see a lot of stuff.



STEVE:  There�s a lot of stuff, lot of resources.



LEO:  Yeah, in fact, Wikipedia has an article on it with a good link to the various projects like DD-WRT and HyperWRT�and...



STEVE:  Right.



LEO:  Sveasoft�s was one of the early ones that allowed you to create a wireless access point that you could charge people for and stuff.  That was really cool.  Hamachi user�� back to Hamachi, I see���Darren Govey of Chertsey, Surrey, U.K., writes:  You guys are always saying that Universal Plug and Play is a bad thing���I�m starting to sound Australian, I�m sorry���security-wise.  But the latest beta version of Hamachi includes a feature for automatic UPnP configuration.  They claim it poses zero risk and should be left enabled.  Well, who�s right?  Gibson or Hamachi?



STEVE:  Well, this is a good question.  What they say, what Hamachi says on their changes page, referring to this latest beta, is that they�ve added support for automatically configuring required port-forwarding rules on home routers via Universal Plug and Play.  This feature is transparent in a sense that it requires no configuration and does not manifest itself in any way other than reduced number of, quote, �yellow status peers,� unquote.



LEO:  And it�s a very easy way to do it.



STEVE:  He says the feature���as Alex writes, the features may be turned off completely by using respective option and preferences system.  Note, however, that Hamachi does not depend on infamous SSDP Windows service, and therefore having UPnP feature enabled poses zero risk to your system.  We encourage everyone to keep this feature enabled as it improves overall quality of the communications over Hamachi�networks.



LEO:  Wow.  Hmm.



STEVE:  Okay, now what this���yeah, this is a problem.



LEO:  You�re going to have to call him.



STEVE:  What this really means is that Hamachi is doing what UPnP allows, which is it�s configuring your router behind your back to open a static port inbound into your router.  The reason this is done is that otherwise Alex�s servers have to be a bridge between your connections.  And Alex doesn�t want his servers to be a bridge between your connections.  I mean, and this exactly discusses the NAT traversal issue we were talking about before.  Alex does a great job with Hamachi of doing NAT traversal, bridging two users, both behind NAT, except when they have a non-peer-friendly NAT router, again, exactly as we were talking about in the last couple weeks.  So in order to not need Alex�s servers, he�s opening ports through your routers.



Well, the problem is there�s no security in the router for doing this.  If the router somehow had a way of communicating to you and saying, hey, somebody�s trying to open a port through me, should I allow this to happen, then it would be acceptable because there�d be a dialogue, and you would know what was going on.  In Mark Thompson of AnalogX�s research, on the routers he�s seen, you can�t even tell this is going on in the user interface.  So you can�t bring up the router�s web page and see that there�s been this kind of reconfiguration.  It�s all transparent.  Which is, you know, an additional bad idea.



Now, the security risk is that, in the same way that Hamachi, without asking or being able to, or the router being able to get confirmation from you, in the same way that Hamachi is able to do this, anything else can.  So it�s a perfect example of how software behind your back can be bringing down the security of your router.  So I still say it�s a bad idea.  The good news is, if you disable Universal Plug and Play in your router, then Hamachi, like anybody else, will not be able to do this.  The question would then be, what do you want to do about these yellow flags, the so-called, you know, we�re not able to connect you?  The paid version of Hamachi, as I understand it���unless things have changed, and I haven�t looked at it recently���the paid version does allow you to use Alex�s servers as an intermediary if you�re behind���if you have a problem with your NAT routers not allowing this kind of connection.



The better solution, and this is what I have done with Hamachi���because remember I have a NAT peer-to-peer traversal unfriendly router���is just to establish your own static port forwarding.  You can tell Hamachi in the user interface to use a statically forwarded port.  There�s, like, a great���I think he calls it a magic number or something on the UI.  What that actually is is static port forwarding.  So make up a port���I think it has 1234 or something in the field by default.  Don�t use that.  Make up your own port number.  Choose something between 1024 and 65535.  Put that into Hamachi.  Then, on your router, go there, and instead of turning on Universal Plug and Play, which you should disable for security�s sake, instead simply set up a statically forwarded port using that port into your computer�s IP.  That gives you the same capability of not having Hamachi give you a yellow flag on users, still allows you to connect directly.  There�s the minor security problem which there�s no way to avoid of that port now being opened.  But it�s a high-numbered port.  It�s only going to be coming into Hamachi, and as far as we know there are no security problems with doing so.



LEO:  Moving along to question 7.  A sharp listener, Brian Hogan in Budapest�� wow, we have listeners everywhere, it�s so great���had this tip to share regarding NAT traversal.  Brian says:  You were saying that it�s not easy for a person using Skype to determine if they have a direct connection to the party they�re calling.  So here�s how he suggests doing it.  Both parties check their, you know, public IP address by going to a site like whatismyipaddress.com, or my�favorite...



STEVE:  Or actually GRC.com will do that for you, too.



LEO:  GRC will do it.  IPChicken.com will do it.  Using the chat feature of Skype, both parties tell each other what their own real IP address is.  Then you open a command prompt���okay, you�re starting to lose me here���and you run netstat-nb.  In Linux it�d be np.  Netstat command is available in Windows, Linux, pretty much any operating system.  This�ll show the IP addresses you�re connected to and the programs using these connections, and so you�ll see if Skype is in fact using the real IP address.  If it is, you have a direct connection.  Comments.



STEVE:  Unfortunately, that doesn�t work.



LEO:  No.



STEVE:  It would work if we were using TCP connections.  But Skype uses UDP.



LEO:  Oh.  So something like IP Chicken or WhatIsMyIPAddress or even GRC�s not going to tell you what the UDP address is�using.



STEVE:  Precisely.  In fact, you know, you and I have a Skype connection right now directly between us.  And just for the heck of it I did a netstat and looked.  And there is no sign anywhere that I�m directly connected to you over UDP.  We do have a TCP connection, but that�s a whole different kettle of fish.



LEO:  That�s not where the audio is going over.



STEVE:  Exactly.



LEO:  So but netstat can show UDP connections.  You�re just saying it doesn�t show it up.



STEVE:  Well, the problem is UDP is not connections.  UDP is just packets.



LEO:  Of course.



STEVE:  And that�s the problem.  TCP connections you can see.  And in fact I want to put this in because���I put this question in because we�re going to talk about, and we�ll devote a whole episode to, netstat and other connection-monitoring programs.  There are a number of free ones, and they�re relatively easy to use once you know what the information is.  And they can be very useful for giving you some sense for what�s going on in your computer right at this very moment.



LEO:  Well, that makes a lot of sense.  So it�s a stateless connection; so, you know, you don�t have any information...



STEVE:  Yes.  You�re able to see that something in your computer is listening on a specific UDP port.  And in XP, that nb command will tell you what the application is.  That�s a new feature in XP.  Under Windows 2000, which I�m still using, I use netstat-an to give myself a simplified�list.



LEO:  Right.



STEVE:  But it won�t tell you which application has anchored the endpoint.  There are some freeware that���our friends over at Sysinternals have a great little program, for people who want to go poke around and experiment with this, that will allow you to see what activity you actually have in real-time, and also which programs are the endpoints that are on those communications.  So it is possible to do it.  Netstat won�t do it.  And in fact you would only see that Skype was listening for UDP.  I haven�t looked actually to see what Skype would show us, but we�ll certainly cross that�bridge.



LEO:  Right.  Kay Hayes of Richmond, Kentucky, wants clearer VoIP.  Who doesn�t?  And asks:  I have VoIP service through Packet8, which is actually a very good service.  I�ve had a few blurps, hisses, and dead spots during calls here and there, which may be caused by my network setup.  Some people on Packet8�s forum suggest putting the phone adapter in the DMZ of the router.  Is that safe?



STEVE:  Oh, it�s an interesting idea.  The phone adapter, I guess it�s a piece of hardware...



LEO:  Yeah.



STEVE:  ...which is running.  And in fact...



LEO:  I have a Packet8 phone.  I can fill you in on that.  It�s exactly as you say.  It�s like a Vonage adapter or any other adapter.



STEVE:  And it turns out that because of the problems people have being behind NAT, this is standard advice is that, you know, in fact I�ve run across this several times where people, the support people and the official configuration suggests that you put your VoIP device in your router�s DMZ.  That is to say, any unsolicited packets coming at your router will be forwarded to the IP of your VoIP phone.  That allows it essentially to create or to accept incoming connections from the outside world.  It�s relatively safe.  I mean, it�s a better idea to get a second IP and, if you can, if it�s practical, to put a switch or a hub in front of your router, put your phone outside of your router, that is, upstream of your router, and then leave your router configured tightly without a DMZ.  But it really is...



LEO:  Well, what�s the risk?  I mean, the phone isn�t going to���even if the phone�s attacked, it�s a dumb beast.  There�s not much you can do to it.  Does a DMZ somehow make the network inside protection more vulnerable?



STEVE:  It probably doesn�t.  It does mean that unsolicited traffic is coming into your network.



LEO:  Right.



STEVE:  Although, since there is no ability for any sort of ARP games to be played remotely, ARP won�t cross the router�s boundary, and then, you know, just isn�t being sent by your ISP across from external sources.  I think you�re really pretty safe.



LEO:  Generally Vonage recommends putting its terminal adapter, its voice adapter, outside your router and passing through to your router.  Because all of these have a pass-through.  So, and they say it�s because they can�t do quality���and this is interesting���they can�t do quality-of-service adjustments if the voice adapter�s inside the�router.



STEVE:  Ah, that probably makes sense, yes.



LEO:  [Indiscernible].



STEVE:  Right.



LEO:  So it may be in fact you do get better results.  I don�t know what Packet8�s recommendation is.  In both���I use Vonage and Packet8.  In both cases I put them inside the router.  But you�re right, you do get occasional interruptions, so I don�t know if that would be any better if it were bare on the network.  Al Pitchard of Wildomar California wonders:  Can a virus damage a CPU?



STEVE:  It was an interesting question because there are � well, first of all, it brings up the interesting question about whether the virus would want to damage the CPU.  As we know, the new game is to acquire computers, as opposed to just infect them for the fun of infecting them or to destroy them.  Through the years we�ve always remarked, those of us who are focused on security, that viruses have not been more damaging than they have been.  I mean, you�ve got code running in your machine that could do anything.  Most of the time it just, you know, tries to propagate and replicate itself and tries to live, rather than destroying the machine on which it�s living.



Now, there have been some notable exceptions.  The Chernobyl virus, also known as the CIH virus, was something that was nasty.  It didn�t damage the CPU, but it did two things that were certainly damaging.  It erased the first megabyte of hard drives it had access to, which was certainly disconcerting for people who had data on their drives.  And the other thing it did was it flashed the BIOS with garbage, which destroyed your BIOS.



LEO:  Now, that�s mean.



STEVE:  Yeah.  And so it was really a problem.  BIOSes, you know, which can be reflashed will allow themselves, by software, of course, to be destroyed.  The other possibility is that hard drives can have security features which can be engaged and enabled and locked.  And again, that can cause problems for people.  But we haven�t really seen that problem.  Now, the CPU itself, so far we have no technology that would allow a CPU to be changed inherently.  There�s been some talk about, you know, softer hardware on CPUs.  But that hasn�t happened yet.  So no, there�s no way for a CPU to be damaged.  I mean, you could imagine some strange things like maybe talking to the BIOS and changing the CPU speed or voltage and things, because of course a lot of that is under control of software now.  But that hasn�t been done.  And again, it wouldn�t damage the CPU.  It might just cause your system to hang.  But in general, viruses are not wanting to be destructive that way because they�re wanting to take over people�s computers and use them for sending spam, for launching denial of service attacks on other people.  Basically they�re wanting to use your machine as a resource and an asset, not to destroy it.



LEO:  So if it were Sherlock Holmes talking, he�d say, no, Watson, there is neither means nor motive.  You can rest assured you�re safe.



STEVE:  Well, actually I guess there is means because any virus could be, for example, deleting files.  And in fact, you know...



LEO:  It couldn�t hurt your CPU.



STEVE:  Couldn�t hurt your CPU.



LEO:  We don�t know of any way to do that.



STEVE:  While I�m on the topic, though, it is worth mentioning that we do have these new extortion viruses now which are encrypting your files and then holding you ransom.  I think it�s...



LEO:  Unbelievable.



STEVE:  It�s very clever.  I don�t want to give any credit to the people who came up with this because it�s, you know, it�s certainly...



LEO:  Well, there�s some flaws in the plan.  You have to somehow get the money to these people, and I think that�s a good way to catch them.



STEVE:  Yes.  That, of course, is the glitch.  But what I�� okay, I�ll say �admire.�  What I admire about this from a cleverness standpoint is that, if a virus destroyed the contents of your drive, well, it�s hurt everybody.  If it encrypts your drive � now of course this whole scenario, for those who don�t know, is that the virus encrypts your drive, then tries to extort money from you in order to decrypt it.  And so it�s like, well, that�s, you know, an interesting scam that has surfaced in the last few months.  And but as you say, Leo, it�s difficult for these people not to immediately get caught because they need somehow to receive�money.



LEO:  Raphael Wolfe of Warsaw, Indiana, has just heard about firewalking.  Can you talk about firewalking, please, he says.  I�ve just stumbled onto this.  Apparently the term has been around for ten years or so.  As I understand it, although I�m not sure I do, the idea is to keep pinging IP addresses until you reach a firewall, then use different tools to ping through the firewall.  Is it still possible today with NAT?  In other words, you look for firewalls and then exploit the holes in them.



STEVE:  Yeah, it�s an interesting idea.  We�ve talked about, when we covered how the Internet works, we talked about the notion of using a traceroute to determine the path your packets take.  And the way traceroute works is it deliberately sets short TTLs, that is to say, the time to live in the packet.  And as we�ll remember from that podcast [Episode 25]���those who haven�t heard that may want to listen to it because it was actually a fun series, we talked about how the Internet works���the time to live is not measured in time.  It�s actually measured in hops.  As you move from one router to the next, each router decrements the TTL, the time to live in the packet.  When that hits zero, the router will not forward the packet further.  Instead, it sends back a message to the sender saying, sorry, for whatever reason this packet expired on the Internet prior to reaching its destination.



So what firewalking does, it�s an attempt to find some location on, well, on the Internet or in your path between you and a remote location, anywhere between you and a remote machine, find where there�s a filtering going on.  And what happens is, rather than using ICMP packets, those standard sort of plumbing packets of the Internet, which is what a ping is, rather than using an ICMP packet with short TTLs, firewalking uses protocol-carrying packets like TCP or UDP and emits them with shorter TTLs in order to find the location where something is blocking that protocol.  So, for example, if you were able to get the protocol past a firewall by using a longer TTL, you would then walk that TTL backwards until you found something that was blocking it.



And so, for example, by sending packets aimed at different ports with long TTLs, you might find that they were both being blocked at some point.  And then you�re able to, by adjusting the time to live, you can determine where there�s a difference in their being sent back, which allows you to determine where along the path something is blocking it.  That gives you���essentially it gives you the IP address of the device which is doing the filtering, which you can then presumably use other tools to attack.



So it�s something that, you know, it�s like deep hacker firewall technology that isn�t really apropos today because NAT routers are not vulnerable to any of these kinds of exploits.  They�re more in the older days where devices, for example, might have a known vulnerability.  You might be running an old Cisco firewall that had a known vulnerability, and there was a way to, like, locate that, and then exploit it once you were able to get its IP.



LEO:  Interesting.  So you just don�t see it very often�anymore.



STEVE:  Yeah.



LEO:  Yeah.  Theoretically possible, I guess.



STEVE:  Well, yes, still there.  And, you know, I liked it, and I wanted to answer the question because it�s sort of cool leveraging of the way the Internet works, and it represents that very cleverness that we�ve seen from hackers of yesteryear.



LEO:  Marcus Kasmeric in Kenai, Alaska, wants better Skype�connections.



STEVE:  Doesn�t it���here we are again.



LEO:  Okay.  Now that I�ve been listening from the beginning, you say that you made Skype operate over a certain port.  I have it on a specific port.  But is there anything more I need to do to make it work like you guys on the podcast?  We get such great audio on Skype.



STEVE:  Yeah, we do.  And the reason is we have done one thing more.  I wanted to answer Marcus�s question because lots of people are writing, asking how to get quality like you and I have with Skype, Leo.  And so you have to do two things.  He�s done one.  He�s told Skype to use a specific port.  The second thing you have to do is, and we referred to this earlier, is called port forwarding.  There�s tons of information on the �Net about port forwarding.  So there�s�� and I�m sure even on the Skype site.  If you looked at something about how to configure Skype for port forwarding, and also your NAT router, what you have to do is log on to your NAT router, typically through a web page, and set it up so that it forwards that port which you have told Skype to use through to the IP address, the private IP address that that computer running Skype is on.  It�ll probably be 192.168.0.1 or .1.1 or something like that.  And the idea being then that that allows Skype to make the same kind of direct machine-to-machine connection that Leo and I use.  And that�s all there is to it.  So tell Skype to use a static port, a fixed port number, and then send that port number through your NAT router to your machine.  That�s the�key.



LEO:  It can be any number above 1024.  And in my case I have, let�s say���this is actually not the port I use, but let�s say I use 11111, easy to remember, five ones.  I�ve gone into port forwarding in my Linksys.  I say Skype 11111 to 11111, and protocol is UDP.  Right?



STEVE:  Yup.



LEO:  And then I just say the IP address of my machine that we use.  Which, oh, it looks like I have it wrong, come to think of it.  So I may���but does it now have to be done on both sides, or just one side?



STEVE:  It really only needs to be done on one side, but both sides is better.  I mean, basically you�ve got somebody you�re Skyping to.  You�d like to both set yourselves up this way.  You�re going to get a super clean connection.  And you�d also get the advantage that anyone else you connect to who is not all configuration happy, they�d get�� you�d be able to get a direct connection with them, as well.



LEO:  Yeah.  So I�m going to now port forward it to the proper machine, which is 205.



STEVE:  And as you found, when you did this experiment before, Leo, it really did make a difference for you.



LEO:  Yeah.  We were having trouble with���you know, the other thing that you don�t have any control over is how much upstream bandwidth you have.  And Steve�s got a lot of upstream bandwidth.  And I have a business-class DSL.  So we�re dealing with, I don�t know, I think mine�s at least 386, up to the 384 upstream.



STEVE:  And I�ve got a pair of T1s.



LEO:  You�ve got symmetric, so you�ve got a lot.  You�ve got a megabit and more.  So, and that�s what matters, right, not the downstream so much as the upstream.



STEVE:  Well, of course...



LEO:  Both, you know, my...



STEVE:  My upstream is your downstream.



LEO:  Right.  So your upstream and my downstream are what�matter.



STEVE:  Exactly.  And...



LEO:  So there�s not much people can do about that,�necessarily.



STEVE:  Right.



LEO:  For instance, with Dick DeBartolo, who has a standard DSL, simply by doing what we just described, I�ve really improved the quality of the calls to his system.



STEVE:  That is cool.  And see, I had already done it on my end, demonstrating the fact that your router was not being peer-to-peer friendly, but mine was by virtue of static port forwarding.  So now you�ve made yours so.  So only one router in a connection between two needs to do this.  So it doesn�t have to be done at each end.  Only one end will allow you to have a direction connection.



LEO:  It can be done unilaterally.



STEVE:  If you�re doing it, you know, just in general you�re going to get better Skype connections with people if you take the time to do this.  And again, it�s better to do it manually than to turn on Universal Plug and Play and have anything do it for you because you�re then opening yourself up to anything else that gets into your system.



LEO:  One more question.  Steve Gilliam of Pinehurst, North Carolina, wonders about email reliability.  He says:  You�ve explained that plain text email can be intercepted, read, and altered nefariously in transit.  In fact, trivially done, so...



STEVE:  Yeah.



LEO:  ...I�m wondering what percentage of email is delivered successfully, in a timely manner, assuming that both email addresses are valid.  In principle, well, it should be 100�percent.  In practice, how much email is dropped by the�Internet.



STEVE:  Uh-huh.



LEO:  Do we know?



STEVE:  Well, I liked this because it opens the discussion about the protocol reliability and other things.  For example, Leo, when I sent these questions to you, you didn�t see them at first.



LEO:  No, because it went to...



STEVE:  Because...



LEO:  ...the spam folder.



STEVE:  Exactly.



LEO:  That�s the real���I think maybe the most are dropped by spam filters.



STEVE:  Yes.  In fact, that�s really the number one cause now.  I do a lot of e-commerce shopping.  And I�m seeing more and more a warning and a caution about making sure, you know, they�re wanting to send me a receipt, and they don�t want my receipt, the receipt bound for me, to get blocked by anything I may have defending my borders against spam.  So, you know, you�ll see more and more e-commerce sites saying please make sure to allow email from, you know, boughtmycookieshere.com, whatever.



LEO:  It�s a real problem.  I think, frankly, the reliability of email has gone way downhill, and thanks mostly to spam.



STEVE:  Well, in fact, thanks entirely to spam.  The cool thing is that the protocol itself, and this is what I really wanted to address, was the protocol itself is absolutely reliable.  If it weren�t for things that are deliberately blocking email, the POP and IMAP and SMTP protocols�-- basically it�s SMTP that is the mail server to mail server system���it is an affirmative delivery technology.  There is technology for retrying extensively, for finding another server that can accept your mail.  If your inbox is full it�ll fall back to a secondary server; and that server, called, you know, backup MX servers, will try to forward the mail.  Basically, I mean, it�s a phenomenally reliable system which, as we�ve just said, has been unfortunately now badly broken by the fact that spam actually has used that reliability or abused that reliability to such a degree.



LEO:  Sad, isn�t it.



STEVE:  Yeah.



LEO:  I just read an article in Security Focus saying email�s dead.  It�s not reliable; it�s not usable.  Spam�s killed it.



STEVE:  Well, I can�t use it myself.  You know, I�ve got a mailing list.  We�re still accepting subscribers because I�ve got���and I�ve talked to you about this, Leo, I want to do one last mailing when I announce a replacement technology myself.  But we�ve got���I�m just looking at the number here�� 786,000 subscribers.



LEO:  You can�t send out a mailing that big.



STEVE:  And that�s the point.  What I�m going to do is I�m going to sort the list by recency, and so, you know, so send mail to the people until it just bogs down too much.  But there�s no way, I mean, that�s more than three quarters of a million email addresses from people who�ve signed up at GRC over the years.  And I know that the older ones are going to be dead.  But the problem is, the moment I start generating email at any appreciable rate, all kinds of red flags and alarms are going to go off all over the �Net, and I will be shut out of AOL and EarthLink and, I mean, you know, major ISPs who will immediately flag me as a spammer.  And so I�m just going to have to trickle this mail out at a very slow pace and take my lumps.  I want to do one final mailing to people.  So anyway, that�s my plan.  It�ll be an interesting experiment to see how well I�m able to do.



LEO:  Steve is banned forever.



STEVE:  Oh, and I�m not doing it from GRC.  I�m going to�� I�m doing it from a completely disjoint IP range, and I have the domain GRCmail.com because I don�t want to in any way contaminate my ability to send email receipts to SpinRite�s�customers.



LEO:  And unfortunately that IP address will then be contaminated for years to come.  I don�t know what the half-life is of black holes, but it�s going to be useless for a long time to come.



STEVE:  It really will be.



LEO:  That�s too bad.  That really is too bad.  Steve, we�ve answered all 12.



STEVE:  Perfect.  And we had a nice hour show.



LEO:  Good job.  And, you know, speaking of spam filtering and security, I do want to mention our sponsor, Astaro Corporation, makers of the great Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, from viruses, from hackers, as well as a complete VPN and intrusion protection and content filtering and an industrial-strength firewall, I mean, this really does it all in a single, easy-to-use, high-performance appliance, you want to contact Astaro.  It�s www.astaro.com, or you can call 877-4AS-TARO, toll free, to schedule a free trial of an Astaro Security Gateway appliance in your business.  And of course the home version is still available for download for free at Astaro.com.



STEVE:  You know, Leo, it is worth mentioning, probably, that this thing is not just a static box that sits there, but that what you get when you subscribe, whether you�re a home user or a corporate user, is you get them remotely managing and updating this with latest virus and spyware signatures and everything.  So, I mean, it�s���the rough equivalent is running some anti-spyware stuff on your own computer, where you�ve got it continually phoning home in order to check for updates and new stuff.  And of course what this thing does is it�s an appliance that protects your entire network, but it�s not just���it doesn�t sit there and get old.  It�s being continually renewed and being maintained current.  I mean, it�s a great solution.



LEO:  We�re going to start having you do the commercials,�Steve.



STEVE:  Well...



LEO:  We are very happy.  It�s really nice to have a sponsor that we really can get behind.



STEVE:  It�s cool technology, and I�ve been wanting to explain for some months now that, you know, that that�s what this is.  I mean, that it is remotely managed...



LEO:  It�s very sophisticated.



STEVE:  ...and updated and continually maintained for you.



LEO:  Very good.  Steve, we�ve wrapped this guy up, this puppy, with a string and a bow and everything.  But we�ll be back next week to talk more about security, the Internet, your computer.  I love doing this show, and I�m so glad that we�ve found such a big audience, such a great bunch of people.  We do thank our friends at America Online for providing us with the bandwidth, as always.  And if you want to know more about the things we talked about, go to Steve�s website, GRC.com/securitynow.  That�s where you�ll find 16KB versions for the bandwidth impaired and, of course, thanks to Elaine, transcriptions of every episode so you can read them as well as listen to them.  And sometimes with the more complicated subjects that�s a real boon.  I don�t know how Elaine does it.



We also want to remind you that GRC.com is the home to SpinRite, which is the world�s best hard drive maintenance and recovery utility.  There is nothing better.  You can find out more about SpinRite by visiting SpinRiteInfo.com.  That�s where you�ll find a whole bunch of great testimonials.



STEVE:  Actually SpinRite.info.



LEO:  I�m sorry, SpinRite.info.  Don�t go���I don�t know what you�d get if you go to the other place.



STEVE:  Well, yeah.  And you know, Leo, I was thinking about this, it really is���it is SpinRite�s users and owners that support GRC and this podcast.



LEO:  That�s true.



STEVE:  I mean, it�s the people who are buying SpinRite and using it to keep their drives in good health and to repair damage, I mean, they�re my sponsors.



LEO:  Yeah.  Steve would have to have a job if it weren�t for SpinRite.  So we�re glad that you have the time to do both SpinRite and this podcast.  We really appreciate it.  And all the great stuff you�re doing.  I know your third-party cookie stuff is coming along.  I just looked at a beta page of that.  That�s exciting.



STEVE:  Yup.  And I�m adding menuing to the GRC site so people will be able to find...



LEO:  No.



STEVE:  ...all the stuff, so...



LEO:  Steve.  How 21st century.  You�re amazing.



STEVE:  Yeah, it�s, well, and because I want to do the whole new third-party cookie stuff, and of course I�ve still got the OpenVPN project to get wrapped up, and...



LEO:  That is not���we have not given up on that.



STEVE:  Nope.  It�s going to happen.  But it�s funny, as I think about adding this content, it�s like, okay, how�s anyone going to find it?  Because my home page is kind of a mess, and...



LEO:  You need some navigation.



STEVE:  Yeah, we need navigation.



LEO:  If you want, I�ll get Amber and her team to help you, if you need some help.



STEVE:  No, you know me, I want to row it myself.  I want no JavaScript, no scripting at all.  I�m, you know, I�m learning how CSS works.  And, boy, what a nightmare that is,�but...



LEO:  Oh, Steve, Steve, Steve.  Maybe we�ll do a story on�that.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#45

DATE:		June 22, 2006

TITLE:		The 'Hosts' File

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-045.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo reveal and describe the HOSTS file which is hidden away within every Internet-capable machine.  They explain how, because it is always the first place a machine looks for the IP address associated with any other machine name, it can be used to easily and conveniently intercept your computer's silent communication with any questionable web sites you�d rather have it not talking to.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 45 for June 22, 2006:  The Hosts File.  Security Now! is brought to you by Astaro, makers of the Security Gateway, on the web at www.astaro.com.



Well, now I�m feeling guilty.  I pressed Steve into service a day early.  I�m taking a little much-needed break this week, off at the beach house.



STEVE GIBSON:  It�s funny because you said you were on vacation.  I said, �Vacation from what?�



LEO:  Like I don�t do nothing.  Oh, yeah, you working stiffs don�t understand, I have a complicated life.



STEVE:  I guess those of us who don�t have a boss are sort of, you know, actually we�re never on vacation because we...



LEO:  Well, I was going to say, you don�t get � do you ever take vacations?



STEVE:  No, I don�t.



LEO:  You just don�t even need a vacation.



STEVE:  I�m just bored.  I love what I�m doing.  And, you know, if ever I go somewhere, it�s like I�m just spending all my time thinking, hmm, just to think all the things I could be getting done if I was still home.



LEO:  Here�s a man who loves his work, doesn�t even consider it work.



STEVE:  I really do.



LEO:  Yeah.  Well, when you came up to Canada, that was kind of a two-day vacation.  I can�t get him on a geek cruise, folks.  I�ve tried and tried, and he says, �I�m not going on any boat.�



STEVE:  Actually, I really liked the two-day Canada turns because I had a whole day going, you know, across the country to the other side of the world to read and to do research and things that normally I just don�t give myself the opportunity to.  So it was like little forced breaks.



LEO:  See?  See?  See?



STEVE:  Yeah.  It was good.



LEO:  Actually, it�s one of the things I like to go to Canada, same reasons I like to go to Canada.  I pretend that it�s the other side of the world, and I tell people, oh, I won�t be able to do anything for the whole next week because I�m going to be out of the country.  Of course it�s not really out of the country exactly.  It�s pretty easy to reach me in Canada.  But I pretend.  Uh-oh, now my secret�s out.  I�m going to have to get a job in Alaska.  I�m going to have to get a job in Timbuktu.



So today we�re going to talk about something that people � everybody has.  Everybody�s got one.  Many people don�t know they have one.



STEVE:  It�s free.



LEO:  It�s free.  It�s on your system.



STEVE:  It can be very effective.



LEO:  It can be a very useful tool in fighting bad guys.  We�re talking about the hosts file.



STEVE:  Yeah.



LEO:  What is the hosts file?



STEVE:  Well, it�s interesting.  It�s been around from the dawn of TCP.  As far as I know, the hosts file, as it�s called, h-o-s-t-s, is present in any system which is connecting to the Internet that has a TCP/IP stack.  That is, you know, the standard Internet protocol glue that we all use for hooking things up.



LEO:  UNIX uses it, Linux uses it, Windows uses it, Mac uses it, OS 2 used it.  I mean, it�s pretty universal.



STEVE:  Yeah.  And essentially what it is, it�s sort of like a first DNS lookup which any TCP-equipped system will reference � and here�s the key � before it goes and uses the official DNS system to map a domain name to an IP address.



LEO:  Oh, interesting.  So when you type in www.grc.com, normally, I mean, we normally think of it as going out to the DNS server of your Internet host, or maybe of the main domain servers, and saying, well, where is GRC.com?  But you�re saying it checks this hosts file before it even does�that.



STEVE:  Well, a few things happen.  When you enter a domain name into your browser, systems are now maintaining a local cache of these names.  So, for example, it knows it just recently looked up, one way or another, it looked up the address for a domain name, and it doesn�t have to go and make another query because it would be crazy to have your computer constantly asking your ISPs or whatever DNS server you had configured what the IP address was for a domain name.  So certainly it makes sense to cache those locally, that is, keep a record of them.  In fact, these are timed so that the system knows how long it�s been since it last updated its own local cache, so that it can, if the IP address were to change, it would know that, hey, I�ve had this for three days, I ought to make sure that this is still the same IP address.



LEO:  Now, actually there have been problems with the � I remember the XP cache because it didn�t handle it properly, didn�t flush it properly.  So does the cache persist across a reboot, or...



STEVE:  No, it won�t persist across a reboot.  There have been problems, in fact, one of the annoyances is called �negative caching.�  And what that means is that, if your computer asks a remote server for the IP address of a domain name or a remote machine, and for whatever reason the request fails, the system will � it�s called �negative cache.�  It�ll say there is no IP for this domain.  So it essentially remembers a negative.  And that�s a problem because you might have a momentary glitch somewhere, or something on the Internet might have failed that would cause you to get a false negative domain name.  And then your system won�t go out and try it again.  It thinks it knows better.  There actually is a command that you�re able to execute from the command line to flush your local DNS cache.  And in some cases doing that restores connectivity.  But it�s nuts that that�s what you have to do.



LEO:  I thought they�d fixed that, but � so it wasn�t a bug.  It was actually � or was it a bug?



STEVE:  It�s, oh, it�s a feature.



LEO:  It�s a feature.



STEVE:  That�s not a bug, it�s a feature.  So anyway, the idea is that, you know, there�s a lot of plumbing going on in just in DNS on our own systems.  The really interesting thing is that, prior to any of this remote access, a simple text file is checked that exists on all of our systems.  I mean, it�s even there by default.  It�s installed when you install Windows.  Most people never, who are not into all this kind of stuff, never go any further, never pursue it, never even know about it.  But it�s there.  It�s under your Windows directory.  That might be, you know, WinNT or Windows, depending on whatever your system calls it.  Then all of our systems in Windows have a subdirectory called �system32.�  Under that directory, strangely enough, it�s under a subdirectory called �drivers,� and then �etc,� that is to say, e-t-c.  So it�s even in an obscure location.



LEO:  The etc location is actually where UNIX and Linux stores it, in /etc.



STEVE:  Right.  And in fact it makes sense, I mean, it�s sort of like, you know, extra little stuff to go along with TCP, or rather with the IP protocol.  So what this is, this text file � and anyone listening to this who doesn�t know about this who�s curious can look at their own hosts file under their system32/drivers/etc, if they�re in Windows...



LEO:  Of course Windows is going to warn you, well, you shouldn�t be looking in here, what are you looking in here for, don�t be going in there.



STEVE:  Oh, yeah.



LEO:  And all sorts of other stuff.



STEVE:  Yeah.



LEO:  But just so you know that�s what�s going on.  It�s�okay.



STEVE:  All it is, is it�s a simple table that is very much like DNS.  It matches IP addresses to domain names.  So, for example, a very commonly used name is �localhost.�  Localhost, by sort of IP gods, is used to refer to your own machine that also has an IP address of 127.0.0.1.  We�ve never talked about this before, and we probably ought to spend some time at some point talking about some of the, you know, these things related to the localhost and the local network.  But 127, the IP address 127.0.0.1 is in all IP stacks a self-reference.  It�s another way of talking to you about your own local IP.  So the hosts file will have an entry there that just says 127.0.0.1 is the same as localhost.  So if you use the word �localhost� just like a domain name, that relationship between localhost and 127.0.0.1 comes from the hosts file.  And the way this was used initially was within a LAN, that is, within a local network this is a nice way of associating machine names and their IPs.



For example, I use it myself, or actually I did in the past.  Now I have full-blown DNS locally.  But I used to have all of my machines named.  And then they had fixed IP addresses.  So I had a hosts file which I installed in all of these machines � and by �installed� I mean just, you know, copied one hosts file to all of them.  And that allowed me to refer to the machines, for example, for filesharing and things, not needing to use IP addresses, not even needing to use Windows browser technology, which can be sort of flaky and has some version dependencies, but it would use the hosts file.  Basically I was providing my machines with names and allowing them to determine that the IP addresses were for each of the machines in my network.  So it�s a cool thing.��Now...



LEO:  So you don�t need to mess with this.  It�s handled kind of automatically.  In fact, by default it only has one line, which is the localhost.  But you decided to use it.



STEVE:  Well, I decided to use it.  And it works great for that purpose.



LEO:  Do you recommend people do that?



STEVE:  Well, I mean, I wouldn�t recommend someone who�s not into networking and stuff to do it.  But doing it really does work.  And in fact, if someone gets into it more, it turns out that there�s a way you can put an entry in a hosts file to refer to another hosts file, sort of an include facility, where you say include a file from somewhere else in my hosts file.  What that allows you to do is actually have a single master hosts file that all the machines in your network will automatically pull theirs from.  So I didn�t want to get too complicated here.  But in fact I had one copy of a hosts file on my network.  All the machines knew where to get theirs from, that is, in their hosts file I had a reference to this, sort of an included file.  And so as I added or moved machines around, I made one change.  And what was convenient was it is a really robust solution for�machines.



Now, again, the problem is, most people are using DHCP behind their own NAT routers.  So the IP addresses of their machines may be floating around.  That�s one thing I�m not doing in my network.  I don�t use DHCP.  All of my machines are known IPs.  So this is only really applicable in a case like that.  But the reason we�re really talking about this is from a security and a privacy standpoint because very clever people have figured out how the hosts file can be used to prevent machines from accessing domains you don�t want them to.  And, I mean, having said that, a lot of people who are listening to this are now going, oh, I know how to do that.  I mean, essentially you edit your hosts file to � for example, I�m just looking at mine right now.  And for example, I�ve got an entry that says 127.0.0.1.



LEO:  That�s your localhost.  That�s your local machine.



STEVE:  My localhost.  And then tab, and it says fastclick.net, or mediaplex.com, or focallink...



LEO:  So these are online advertising sites.



STEVE:  These are, exactly, these are the people we would rather not have our computer contact.  For whatever reason, we don�t want cookies, we don�t want ads, we don�t want our computer for any reason to go touch doubleclick.net or linkexchange.com or valueclick.com.  I mean, I�ve got a whole list of these.  And the beauty of this is it is solid and robust.  And my machine, anytime I go to a site that has references to those domains, the browser is going to say, oh, what�s the IP, so it can go get an ad or get whatever it, you know, who knows, a web bug or spyware or anything that it might be pulling from those domains.  The first thing the computer does is look up in the hosts file to see if that domain has been defined.  If so, that�s the address it uses, in other words, 127.0.0.1, meaning itself.  So that request goes nowhere.  It�s immediately canceled, and the browser goes about trying to do, you know, load the rest of its web page.  So it�s a very clever, simple, and very efficient means for preventing your machine from ever going elsewhere, or, I mean, to an expanding, evolving, or growing list of, like, bad or banned domains.



LEO:  Now, just as you�ve used it to block bad guys, bad guys also use it.  There is spyware that modifies the hosts�file.



STEVE:  Yes.



LEO:  Mean.



STEVE:  Of course, we could expect that anything valuable like this that could be used for good would also be grabbed and used for bad.  You�re able to � there are ways you can protect your hosts file from modification.  For example, you could write-protect it or remove write privileges from the file so that only the administrator of your system, which you should not normally be running under, would be able to modify the hosts file.  Then, if some spyware got into your system that was not running as an administrator, it would not be able to change the file.  Sometimes just clicking the write-protection flag is enough to defeat these things.



We should say, though, that what has evolved is sort of an interesting � it�s not really a subculture, but it�s a bunch of people who manage public hosts files.  That is, there are lists of hosts files on the �Net that you can download that are being maintained by people and contain a huge directory of places you probably don�t want your computer to go.  That�s where I got my list from some time ago.  And those domain names don�t tend to be changing very often.  So if anyone was curious about this approach, they could just put �hosts file� into Google.  I think you mentioned that Wikipedia has a great discussion about the hosts file.



LEO:  They do, yeah, yeah.  And if you use Spybot Search & Destroy, or I�m sure other spyware programs, it also will do that.  In fact, there�s a command in Spybot that just says �populate my hosts file,� and it will add a whole, you know, changed hosts file that blocks all of those well-known sites.  Really hundreds of names.  And I think it then locks it down, as well.



STEVE:  It would make sense that it would because, again, there have been exploits that modify the hosts file.  On the other hand, remember that, once something bad gets into your system, you�re pretty much hosed anyway.  I mean, you can, you know, you can never really know what was done to your machine.  So it�s certainly the case that something nasty getting into your system could modify your hosts file. On the other hand, it could modify anything that it wanted to if it�s able to modify your hosts file.  The power of the hosts file is not so much that it�s an absolutely perfect solution, but that it�s � I mean, because none exist in the Windows environment, or in fact in any but an ultra secure system, which sort of becomes no fun to use, depending upon how tight the security is.  The beauty of it is that it is an extremely reliable, very efficient means to prevent a computer from going places you don�t want it to.  And it�s simple to manage and maintain.  Its format is just IP address and then a tab character or a space or something.  Mine�s all lined up nicely because I have 127.0.0.1, tab, and then the domain name.  So it�s very easy to add or remove items.  And it just simply prevents your system from asking the Internet for the actual IP address of any domains that are listed there.  So you can just neuter these things.  And, I mean, it�s a tremendous little tip. 



LEO:  One little word of warning.  If you are running a web server on your local system, as I do sometimes for test purposes, mapping to localhost will have an unpredictable result because your web server may attempt to fulfill that request.  So in that case you might want to use 0.0.0.0, or I understand you can just use 0, and it�ll still have the same effect of...



STEVE:  Yeah, it�ll just, exactly, just goes nowhere.



LEO:  I don�t know where it�s at.



STEVE:  It just stops the � it stops the search.  It nips it in the bud, saying there�s no reason I want anybody, you know, I ever want this system going to DoubleClick.  And it just � it can�t get there because it�s given a bogus IP�address.



LEO:  I think Windows Defender also will monitor your host files.  That�s the new Microsoft anti-spyware program.  And I�m just looking at the Wikipedia article, and they mentioned that that was how Mydoom worked, to block your access to Symantec and other antivirus sites.  You may remember, if you got that bad virus, you couldn�t then do any research on how to get rid of it because you couldn�t get to any antivirus sites.  And that�s exactly how it did it, it just modified the hosts file.



STEVE:  It just puts a bunch of entries in there for the anti-spyware and antiviral vendors and prevents your computer from going there, too.  And in fact, you know, it�s probably worth having people take a look at the hosts file, just to make sure that it still looks benign.



LEO:  Absolutely.  That would be a sign of tampering, wouldn�t it.



STEVE:  Yeah.



LEO:  Yeah.  All right.  Well, there it is, everything you ever wanted to know about hosts files.  And if you want to know more, we�ll put a link to the Wikipedia article in our show notes.  But you might also check there because there are additional links in there to a lot of other good resources, including somebody who says, you know, it�s a myth that changing your hosts file will protect you from malware.  Obviously it won�t, but it�ll help, you know, it�ll help reduce your impact of malware.



STEVE:  Well, yes.  And again, I want to make that point because I think it�s a good one.  It�s that the hosts file being set up to block a whole bunch of malicious domains can prevent you from getting that malware in the first place.  So, and it�s � and a non-compromised system.  I mean, there are a lot of places that are not malware, they�re just, you know, they�re heavy-duty marketing, Internet marketing companies that are using cookies and technologies to track you around the �Net that you�d rather not have any contact with.  They�re just, you know, sort of gray zones.  They�re not black, they�re just gray.  So the hosts file just prevents your machine from touching those.  And again, it can be abused.  But, you know, so can everything.



LEO:  Right.  It�s a process.  There�s no one silver bullet in security.  I wish there were.



STEVE:  Yeah, I mean, it�s sort of like the argument we touched on when we were talking about open ports about, you know, there are people who say that stealthing your system doesn�t provide you any security.  It�s like, well, okay, I mean, I�ve heard the argument a lot.  It�s better to be invisible, I think.  Why not be?  It doesn�t cost anything to be invisible.



LEO:  Right.  As long as you just don�t fool yourself that you�ve done everything you can do at that point.



STEVE:  Well, or that everything that you�ve done is going to make you absolutely invincible because...



LEO:  Right, because there�s no such thing.



STEVE:  ...you know, that we can�t achieve.  I�ll also mention that my own Security Now! page, I�m going to put a whole bunch of hosts file references on that page of stuff that I use and that I have found over time.  So anybody who�s interested in pursuing this independently can not only check Wikipedia and the link you�re going to have, Leo, but it�s been a long time actually since I�ve put together some notes for a show because most of what we�ve been doing hasn�t involved off-show resources.  But here, in the case of the hosts file, I think we really have � there�s just so much that�s been done.  It�s a tremendous resource.



LEO:  And once you understand it, I mean, I think this is something people don�t even know they have.  So once you know you�ve got it, this is worth kind of learning more about.  And we�ll put all that in the show notes.  Of course show notes are at GRC.com/securitynow.  That�s where you�ll also find a transcript of this and every show, thanks to Elaine, our wonderful transcriptionist, and 16KB versions for the bandwidth-impaired.  You know, you�ve started something, Steve, because I�ve started doing 16KB versions of TWiT, as well, and my radio shows, because people like � if you�re on dialup, people like to be able to download it and still listen, even though...



STEVE:  I�m really glad to hear that, Leo.  I mean, I know how popular they are.



LEO:  They are.



STEVE:  Oh, they�re incredibly popular.  I mean, I think maybe it�s easy to be a bit of a bandwidth snob and to say, oh, well, you don�t have cable, you don�t have DSL?  But there�s a lot of people still using a modem.



LEO:  You bet.  And I�m not so much a bandwidth snob as an audio snob.  I listen to those 16KB versions, and I go, ooh,�gosh.



STEVE:  Oh, I know.



LEO:  Ooh.



STEVE:  I know.



LEO:  But you get the content, and that�s the most important�thing.



STEVE:  Yeah.



LEO:  So we do put those up.  We also thank our great friends at Astaro for providing the support, the sponsorship for this podcast.  We mentioned a couple of weeks ago the Astaro Command Center, v1.  It�s out now, free for users of Astaro�s great Security Gateway.  If you�re a network administrator you should see this thing.  It is a great way to manage and control multiple gateways from just one dashboard, and a beautiful world map, and, oh, I mean, it just looks great.  It�s free in the Products section at Astaro.com.  And of course Astaro is a great solution for any small or medium business network that needs superior protection from spam, from viruses, from hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, in an easy-to-use, high-performance appliance.  Contact them at 1-877-4AS-TARO, or, again, Astaro.com.  And don�t forget that there is a solution for home users, too, that�s absolutely free.  Let�s see, what else?  I guess that�s it.  I guess...



STEVE:  Security Now!, and...



LEO:  Security Now! � oh, I forgot the most important thing.  SpinRite, ladies and gentlemen.  Yeah, Steve never takes a vacation.  That�s because his product is always being improved.  SpinRite is free � is not free but is available from GRC.com.  It is SpinRite, and you can read more about all the testimonials on SpinRite at SpinRite.info.  I think anybody who has a hard drive � I think that means everybody�� should have a copy of SpinRite, the ultimate disk recovery and maintenance utility, from SpinRite.info.  Have I mentioned everybody?  I think so.



STEVE:  I think it�s covered.



LEO:  The time has come, I hate to say it, to say goodbye.  But we�ll see you next week.  Thank you, Steve.



STEVE:  Absolutely.  And in the meantime, people can check out their hosts file.  It�s just such a neat little perfect solution for keeping your machine where you don�t want it to�go.



LEO:  Yes.  Yes.  You�re a good host.  Take care, Steve.  We�ll see you next Thursday.



STEVE:  Right.



LEO:  On Security Now!.



Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#46

DATE:		June 29, 2006

TITLE:		Router Logs

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-046.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo clarify the confusion surrounding consumer NAT router logging.  They explain why routers tend to overreact to Internet �noise" by �crying wolf" too often, why the logs produced by consumer routers are unfortunately not very useful, and when paying attention to logs does and does not make sense.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 46 for June 29, 2006:  Router Logs.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at�www.astaro.com.



It�s time for another Security Now!.  That means another foray into the fascinating world of computer Internet security, protecting your system, how encryption works, how ports work, how VPNs work, all of that, thanks to our great teacher and master, the guru of high-tech security, Mr.�Steve Gibson.  Hey, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be back with you this�week.



LEO:  I think more and more people think of you now as a teacher.  You�ve been so great on these past 45 episodes, 46�now, teaching us about all the basics of this subject.  I think it�s great.



STEVE:  Well, I just love the technology.  And I�ve never understood why people seem to think that this stuff is so difficult.  I mean...



LEO:  Well, now, wait, now, some of it is.  And when you�ve done your darnedest to explain public key cryptography, and even a dunce like me gets it, it�s really more a testament to you than the simplicity of the subject.  This stuff can be pretty complicated.



STEVE:  Yeah.  Well, I guess it�s that there is an easy way to see the concepts.  One of the things I�ve noticed, you�re reading an academic paper, and the language is so obtuse and so confusing. 



LEO:  Yeah.



STEVE:  And you look at it over and over and over, or read it all the way through.  And then it�s like, wait a minute, all they�re really saying is this?



LEO:  That�s all?



STEVE:  It�s like they�re trying to justify their third Ph.D. or something.  It�s like, wait a minute, I could have said that in one paragraph and made it so that my mother could understand it instead of, like, four pages of bizarre arcania which really seems intended to confuse rather than explain.  And so I think even, no matter how complex something is, if the goal is to explain it, it�s possible to make it clear.



LEO:  You�re good � I think that�s really your skill is reading all this arcane and confusing stuff and boiling it down.  So what are you going to boil in your pot today?



STEVE:  You know, one of the things that I get questions about, I mean, I have for years, and the form at the bottom of the Security Now! page at GRC is constantly getting questions about router logs.  People are worried about what their logs are telling them.



LEO:  Now, do all routers keep logs?  Not all of them.



STEVE:  I think all contemporary routers now offer the option, at least.  You know, you might have some off-market junior routers that don�t.  But logging is just something that�s, you know, it�s now on the bullet feature list of any router that�s going to be competing with all the others.



LEO:  Right.



STEVE:  And, you know, they want to give you the option of�logging.



LEO:  So what�s in that log?



STEVE:  Well, mostly nothing.  I mean, and...



LEO:  A lot of nothing.



STEVE:  And that really is the problem.  Now, you know, we�ve talked before about the junk on the Internet.  And I�ve talked about how I coined the acronym �IBR,� Internet Background Radiation.  I mean, it�s really what this is, this packet noise, is just Internet Background Radiation.  The router log is exactly equivalent to the personal firewalls which pop up an announcement anytime anything unsolicited hits your computer.  Well, it�s always seemed to me that personal firewalls were doing this because they wanted to prove themselves useful.



LEO:  I�m important.  I�m doing something.



STEVE:  You know?



LEO:  I�m busy, busy, busy.



STEVE:  And of course, exactly, and of course the problem is that in crying wolf as much as personal firewalls do, until you finally uncheck that box that says, you know, notify me when anything wrong happens, you finally � it�s like, okay, I trust that the firewall is on.  I don�t want to know about it every five seconds.



LEO:  Right.



STEVE:  But, I mean, it really is the case that there is just this junk on the Internet.  Now, the routers have gone a little bit further, I think, because they�re trying to alert users, you know, they�re saying that they�re firewall-enabled, they�re stateful packet inspection, they�re doing all this fancy stuff to protect their users.  I mean, some routers even say they will protect you from a denial of service attack.  Well, I�ve never...



LEO:  How?



STEVE:  Exactly, I�ve never understood that claim because the problem, of course, is a denial of service attack is flooding your bandwidth with garbage, and the router could attempt some sort of filtering except that the problem is there�s too much data, malicious data, coming to you for the good data to get to you.  So the router can�t filter what it doesn�t receive.  And the problem is...



LEO:  The denial of service is blocking access, basically.  And how�s the router going to stop that?



STEVE:  Exactly.  And in fact, all any router can do that says it�s going to do denial of service protection is to block traffic from getting through.  The problem is, no good traffic is able to get through anyway.  And just blacklisting an IP in your network doesn�t help because even the machines that are not under attack all share the same IP, that is, your router�s public IP.  Which, you know, which is being swamped by traffic to the extent that no valid packets are able to reach it.  So, you know, I mean, these claims that the router manufacturers, I mean, lord knows you and I preach the security and value of NAT routers almost constantly because it�s such a tremendous security tool.  But, you know, them saying that, oh, we�re going to protect you from a denial of service attack is just nonsense, unfortunately.



LEO:  On the other hand, they certainly could log it, and you�d see it happening, I guess.



STEVE:  Well, and that�s the problem is � and that brings us back to logs � is that what the routers are doing is trying to make sense of noise.  You know, it�s literally like tuning your AM radio in between stations and hearing the shhhh and trying to find something of value in the static.



LEO:  So there�s so much going on that it�s not obvious what�s really going on?



STEVE:  Well, actually there�s so much going on that there�s nothing going on.  I mean, that�s exactly what�s happening is that, you know, we�ve talked before about how the Internet will never be cleansed of worms, of our old past-generation worms, Code Red and Nimda and so on, and MSBlast, that copies of these worms are on machines randomly out scanning the Internet, sending � basically creating Internet Background Radiation on an ongoing basis.  So every IP on the �Net is going to get some of these packets sooner or later from these machines.  And there�s even misconfiguration of systems where packets that have no business being on the �Net, strange protocols and broken things, just sort of wander into a machine from time to time.  I mean, it�s really instructive to put a packet sniffer on, just like on a cable � on a raw, unfiltered cable modem line and just look at the junk that is coming in.  Now, the problem is the routers don�t understand, or they don�t want to understand, that nobody needs to be advised about this.  I mean, the point, I guess, is, if somebody is under denial of service attack, they know it.



LEO:  Yeah.



STEVE:  And in fact, what I�ve seen...



LEO:  If you can�t get online.



STEVE:  Exactly.



LEO:  You may not know why.  I mean, it would be nice if a log said, oh, look, you�re getting all of these packets pointed at you from this bad guy, because then you would know, well, that�s why I can�t get online.



STEVE:  What I have seen, however, is that, based on the logs that people send me saying what do you think of this, there�ll be a router that says they�re in a denial of service attack.  And I look at the log, and it shows that they�re getting one packet about every five seconds from somewhere.  Well...



LEO:  That�s not a denial of service attack.



STEVE:  No.  I mean, that wouldn�t deny anybody service.  But the router, again, in trying to justify itself and prove its value, is aggregating this information and seeing, oh, look at all these SYN packets that are coming in.  Well, yeah, if you wait an hour, and you�ve got, you know, 26 of them, well, that�s not a denial of service attack.



LEO:  Right.



STEVE:  And so what�s happening is people are really being needlessly alarmed.  I mean, some people, I guess, who want to watch their router logs, after a while it must be the case that they become inured to these kinds of reports and just go, well, okay, I think my router�s a little log-happy here.  Because I don�t feel like I�m under denial of service attack, and everything�s just fine, even though the router assures me that I�m being attacked by somebody in China somewhere, or who knows where.  So it just...



LEO:  It�s advertising.  It�s advertising for what a good job it�s doing.



STEVE:  Yeah.  And I wanted to � I just wanted to take some time, give it a podcast, and talk about, you know, these NAT router logs because...



LEO:  Is there anything you can glean from them at all?  No.  It sounds like that�s a no.



STEVE:  I really don�t think so.  Sometimes you will get, if your IP changes, you will start getting, like � in fact, I remember seeing this myself.  Your IP will change, and suddenly you�ll start getting a lot more logging, for example, because the IP you just inherited belonged to somebody on the Kazaa filesharing network, or on Morpheus or�something.



LEO:  So there�s all these people trying to log in to get�files.



STEVE:  Exactly.  And so suddenly all these peers that were hooked up to this IP that belonged to somebody else are now trying, you know, still, I mean, as I remember, because I saw this often back when I was looking at this stuff closely, suddenly you�d have all this traffic, and it takes a long time for that traffic to subside, for the peer-to-peer network to decide that, okay, you really are gone, and you�re not coming back anytime soon.



LEO:  Right.



STEVE:  So, you know, I was never...



LEO:  It�s funny because we had a BitTorrent server once on�my website, and now I continue to get hundreds of hits a�minute from other BitTorrent clients looking for the�tracker.



STEVE:  Exactly.



LEO:  So I can vouch for that, absolutely.



STEVE:  Exactly.  That�s a perfect example.  So if people wonder why their traffic as being logged by their NAT router sometimes is in huge dose and sometimes much lesser dose, if in fact they had their router unplugged or turned off and then turned it back on, there�s a chance they got a new IP that might have belonged to somebody who was much more active doing things in a peer-to-peer network.  And so, again, you�ll get a ton of traffic, and then it�ll subside over time.  So the log might be useful for that.



LEO:  You look at your router logs.  Is there something quantitatively different you get from your router than the standard Linksys router will give you?



STEVE:  Actually the only times I look at my logs are if there�s something happening that I do need to know about.  If something seems off or wrong...



LEO:  So there�s something you�re looking for, then, in the�log.



STEVE:  Exactly.  I�m trying to figure out specifically what�s going on, but down at the traffic level.  Now, the other real problem with the logs is that they�re incomplete.  It�s sort of like a junior log that you get with most of these NAT routers.  And so often, for example, people will send me a chunk of log saying, hey, Steve, you know, what do you think this is?  And the problem is, I can�t tell.  Nobody can tell because the router is sort of saying just enough to raise the question of what�s going on, but for example it isn�t telling you what the TCP flags are of the packet coming in.  It�s just claiming that it�s an attack of some kind.  And so, for example, many times it�s got nothing to do with being an attack, and only if we had a complete log entry could we then say for sure, ah, this is what this�is.



So one of the differences between sort of a junior consumer log and, you know, real professional network gear logging is professional network gear logging often tells you much more than you want to know, but at least you have what you need to know.  Whereas NAT routers are often not providing you sufficient information to actually perform any useful diagnosis.  And that�s my complaint is they�re just sort of bubblegum logs.  I mean, they�re just, you know, they�re just there to sort of add a feature to the router.



LEO:  Right.  This one logs.



STEVE:  It could be interesting.  But actually it�s one of the reasons, it�s one of the benefits to going to, like, a real UNIX or Linux system, you know, an inexpensive PC running NAT routing software.  And we�ve talked about many of the standard, off-the-shelf, easy-to-configure, like SmoothWall and Monowall systems, where those systems have real logging facilities.  And there you�re � first of all, one of the things they don�t do typically is bother you with trying to interpret their logs.  The logs are there, if something arises where you need to go look at them, and they�re complete.  So that�s the kind of logging that makes sense.  You know, log traffic if you want to.  But if you�re going to log it, log it completely so that something is useful and can be really determined from the log.  But, you know, sort of this half measure of NAT router logging in a standard consumer NAT router, it just makes no sense to me at all.  It, I mean, it is falsely positive alarming people, and the information it contains is insufficient to provide any useful diagnosis if you wanted to.



LEO:  Is it essentially the same kind of thing you get when you run a software firewall and it�s popping up alerts every five seconds?



STEVE:  Yeah, it�s exactly that.  And in fact, in some cases it�s weird.  I�ve seen situations where a NAT router will alert somebody hours after they�ve been doing something on the �Net that causes the alarm.  What must be happening is that the router is aggregating traffic, trying not to produce multiple alarms.  So it�s like it�s seeing some things going on, then it�s deliberately waiting some length of time to see whether any more junk comes in that�s associated with that same remote IP so that it can associate all of that into a single event report.  The problem is, that event report is then popping up at a time, or presenting itself at a time which is disconnected from the user�s actions which may have caused that event.



LEO:  So it makes it even more baffling.



STEVE:  And that�s another thing that confuses people.



LEO:  What is this?



STEVE:  And so someone will say, hey, look at this log, and here�s what happened.  And it�s like, okay, well, there�s nothing in the log you�ve shown me that�s about what happened.  So they�ll go back several more hours, and there�s the traffic, hours before, that caused this report.  So I can understand the logic in the router manufacturer�s mind.  I mean, some router programmer thought it would be really cool, you know, to wait a while so that multiple events for the same activity were not being reported.  The problem is, that induces confusion in the consumer�s mind, who doesn�t understand why something happened now, you know, an hour after they haven�t been using their computer.  And the fact is, that leads them to believe now they�re under attack, when in fact it�s something they were doing hours before, where if the report occurred then, they�d go, oh, yeah, I know, I�m doing that.



LEO:  Right, I�ve got BitTorrent running or whatever.



STEVE:  Yeah, exactly, you know, or a peer-to-peer system or something which is causing these sorts of reports.



LEO:  Well, can we talk a little bit about this Internet Background Radiation and what it is?  You mentioned, and we�ve talked about before, things like worms like Sasser and MSBlast that just continue to float around as long as there are unpatched Windows 98 machines on the �Net, they�ll just continue to float around.



STEVE:  Right.



LEO:  Is some of it from hackers also?  I mean, I get the impression that they�re kind of going around looking for vulnerabilities all the time.  Is that true?



STEVE:  You know, I think that is still the case.  It seems it�s getting less attention now, I think because there�s so much noise on the �Net.  I mean, it used to be, for example,�that...



LEO:  This is so-called �port sniffing,� right?



STEVE:  Exactly, or port scanning.



LEO:  Right.



STEVE:  It used to be that people who were watching their router logs and who were, like, took it upon themselves to police the Internet, I mean, I�m not kidding, they would be�� when random packets from somewhere hit their machine,  they would look up the ISP that owned that block of IP addresses and send abuse report email saying, somebody in your network just scanned my computer.  How dare they?



LEO:  I remember getting callers like that, yeah, yeah.



STEVE:  Oh, yeah.  And, I mean, thank God at least that has tended to subside.  And the reason is, no one could keep up with that anymore.  I mean, there�s just so much stuff on the �Net.  But it is the case that there are malicious people, now and still, scanning the Internet, looking for specific vulnerable ports.  You know, we�ve talked about, for example, my network, I just couldn�t have telnet, the standard telnet port 23 open and exposed on my own network because the appliances that I could telnet to didn�t have sufficient and adequate security.  So the idea would be that there are scanners running right now somewhere, many of them in the world, that are just slowly, methodically sweeping the IP space of the �Net, looking for anyone who will accept a TCP connection on port 23.  That means...



LEO:  You know � oh, go ahead, I�m sorry.



STEVE:  No, no.



LEO:  I�m just saying, I�ve seen these hacker tools.  Whenever there�s an exploit that comes out, the hacker tool comes out.  And they�re very simple.  I mean, any script kiddie � and that�s the problem is that most of these aren�t really proficient hackers � can run a little program that says, okay, what IP addresses do you want to scan?  Let�s see, one to one million.  And what ports do you want to�attack?



STEVE:  Yup.



LEO:  You know, here�s a few.  And they press a button, and they walk away, and all of a sudden they�ve created a huge amount of chatter going on.



STEVE:  Now...



LEO:  Even if they got in, they probably wouldn�t know what to do.  I mean, I don�t know what they�re going to do with that result, but...



STEVE:  Well, and of course the very same tools, the famous one is Nmap.



LEO:  Right, which is actually a very powerful tool.



STEVE:  A very powerful scanner.  I mean, if you put �port scanner� into Google, you know, stand back because, you know, it�s a type of tool that many people have written.  And Fyodor�s Nmap is a very powerful scanner which I�m sure is being employed for malicious purposes.  And in fact the exact scenario you mentioned, where you put in an IP range and a port range, I was talking a couple weeks ago about how it was Windows�s open filesharing dilemma that years ago induced me to create ShieldsUP!.  Well, I used a scanner just like that, and I said find port 139, TCP port 139, and I put in the range of IP addresses surrounding the IP I had received from our ISP for our ISDN line.  And up popped all these computers that were accepting connections on port 139.



LEO:  Right.



STEVE:  I mean, they had Windows filesharing open and exposed, and many of them had drives C and D and E and F and G, all freely available on the Internet.  So the good news is, these sorts of problems have diminished.  But, for example, filesharing, my ISP for my cable modem provider, Cox, they�re blocking now 137 through 139, and 445, and a few other commonly attacked Microsoft ports, which is really a service for their users, so they�re automatically preventing anyone from the outside being able to get in.  However, you�re still able to, from within the Cox network, you�re able to provide or to create scans because they�re only protecting at their border.



LEO:  Yeah.  So these...



STEVE:  But at the same � I�m sorry.  But at the same time, to really get back to answer your question, some of the traffic that�s Internet Background Radiation is coming from, essentially, automated non-sentient worms that are just out there scanning around, that we�re never going to get rid of.  But it is the case that other traffic, well, some other is Windows Messenger pop-ups.  I still see a lot of that happening.  That�s junk on port 135.



LEO:  Right.



STEVE:  You know, trying to spam people who have a naked machine with no firewall who have Windows Messenger running.  And that must mean that they�re not up to Service Pack 2 of XP because that finally, you know, XP�s firewall blocks that.  And the Messenger service is finally not running by�default...



LEO:  It would be really interesting to...



STEVE:  ...[indiscernible] running before.



LEO:  ...to run Ethereal or some sort of network packet analyzer to just watch kind of this background noise and kind of break it down.  I wonder � I�m sure some security group has done this �  you know, what percentage is, you know, Sasser, what percentage is this, what percentage is�that.



STEVE:  Oh, it really is interesting, Leo.  I mean, it is absolutely interesting.  I remember from the last time I was doing it, when I was, you know, focusing on my cable modem traffic.  And I think it�s when I was dealing with Wicked after � the 13-year-old kid who�d attacked GRC years ago.  I spent a lot of time looking at the traffic and having just a constant log running, showing me what was coming in.  And it�s a mixture.  Now we have worms.  We do have advertisers trying to send you, you know, Windows pop-up Messenger.  And then you�ve got the occasional clear port scan.  In fact, I�ve got several different IP ranges.  And I remember when I was watching those ranges, you could see packets arriving, for example, SYN packets on port 23, that would just sequentially arrive at successive IP addresses.  So it�s literally a linear scan through a range of IPs, something looking for an open server on a given port.  And it�s going on all the time.



LEO:  It�s really kind of amazing.  I suppose, you know, five years from now you�ll still see a Sasser on the �Net and this stuff.  You know, it�d be kind of senescent since there won�t be anything for it to attack anymore.  But as long as there�s one infected Windows 98 machine out there, it�ll continue to bang on the door.



STEVE:  Well, it�s funny, too, because in the old days, you know, meaning six years ago, you could look at your cable modem light, and you could use that light to determine when you had traffic with your computer.  Now that light is�never...



LEO:  It�s always on.



STEVE:  Yes, exactly, it is never not flashing because there�s just all this junk out there on the cable modem, and even on a DSL line, which is just, you know, it�s just, again, it�s IBR.  It�s Internet Background Radiation.  So I guess my message would be, for people who are concerned about their NAT router logging, telling me � if it�s too noisy, if you�re worried that there�s some valuable information there, I would suggest that it probably is more the router trying to justify its existence than it is�useful.



The logging can be useful if you are forensically trying to figure out why something doesn�t seem to be working in your network.  For example, if you were looking for incoming traffic because you had believed that you�d opened a port that was going to allow traffic from, like, a friend of yours who was trying to connect into your system, well, the log there might tell you that it was blocking and dropping packets from a certain IP.  And in fact, we briefly  mentioned this idea, which I think is actually kind of clever, of allowing two routers to connect to each other by sending traffic to each other and having each router look at its own log to determine what port and IP that traffic is coming from, and then have the computer that�s reading the log send traffic outbound to that IP and port, which would allow you to do a NAT traversal without needing a third party.  I�ve never seen that written or heard of it before, but it would be kind of a cool way, using the router�s logs, to perform a non-third-party NAT traversal.



LEO:  Hmm.  Well, that�s an interesting idea.



STEVE:  So it can have applications.  But again, I think it�s mostly useful for forensic or diagnostic purposes, not useful for alerting you to attacks.  The fact is, technically we are all under attack all the time.  I mean,�truly.



LEO:  So stop sending us your logs.



STEVE:  And that�s why, you know, any Windows machine, recently created Windows machine that isn�t patched fully, stuck on the Internet with no firewall protecting it, will be � I mean, tests have been done.  It is taken over within minutes, literally, of being stuck on the �Net.  Every IP is constantly under, quote, �attack,� unquote.  So that�s why stick a NAT router on your network and just ignore it.  It is protecting you.  Or just make sure you�ve got your firewall running on your PC, if you�re not behind a NAT router.  And again, ignore all that nonsense.  It�s one of the reasons that Microsoft�s Service Pack 2 XP firewall is so quiet, and it has no option for pop-ups.  I mean, they don�t offer that as an option, as far as I know.  I guess there�s a log that you can turn on in XP�s firewall.  I think I remember seeing some logging that, again, for diagnostic purposes is useful; for warning you of attacks is not.  Because, again, we�re all under attack.



LEO:  Steve, you�ve done it again.  And mainly I think, because both of us handle questions from people, you know, what does that mean, what does this mean, it�s really mainly just to calm people down.  It�s okay.  It�s normal.  It�s just noise.



STEVE:  It�s Internet Background Radiation.



LEO:  More information always on the website at GRC.com/securitynow.  That�s where you�ll find transcripts of this show and every show.  We�ve done all 45, 46 episodes now.  And also, of course, 16KB versions for the bandwidth impaired, still on modems, or people who just don�t have the time to download a higher quality version.



We also remind you that that�s the home for SpinRite, which is everybody�s favorite, my favorite disk maintenance and recovery utility.  The stories keep coming in.  If you want to read some amazing testimonials, visit SpinRite.info.  Steve puts new ones up all the time, and it just � they�re heartwarming stories.  It must make you feel very good�that...



STEVE:  Yeah, actually I need � I keep saying that I�m going to catch up.  I�ve got a whole bunch more.  I think the last one is a couple months ago that, you know, somebody�s system wouldn�t boot anymore.  And...



LEO:  Well, they�re constant, though.  You get them every day, so...



STEVE:  Yeah, exactly.



LEO:  Yeah.  So SpinRite is available at GRC.com.  And if you deal with drives, you need SpinRite.  You know, I think a lot of people go to very fancy, expensive � and I mean thousands of dollars � disk recovery places.  When in fact, if it�s just a soft error, if it�s just a formatting error or a software error or an operating system error, it�s almost, you know, they can�t do anything that SpinRite�can�t.



STEVE:  Well, the other thing, too, is with drives being so big, there are many areas of drives that aren�t visited very often.  And one of the nice things that SpinRite does is, when you turn it loose on your system and let it run overnight or, you know, however long it takes, depending upon the speed of the whole system, it�s reading and writing every single sector of your drive several times.  It reads it, it inverts the data, writes it back, reads that, inverts it again, writes it back, and reads it again.  So it...



LEO:  Kind of exercises it.



STEVE:  So it really exercises it.  And that�s important because drives are now handling their own defects.  But if a sector defect gets too big to be corrected, then you�ve got a problem.  The cool thing is that SpinRite essentially lets the drive inspect itself by asking it to read and rewrite and reread the entire surface.  So any trouble which is beginning to occur, SpinRite essentially shows the drive that, hey, you�ve got a problem with this sector.  And...



LEO:  Map it out, get rid of it.



STEVE:  Exactly.  Map it out.  It removes it from service, and it swaps a spare in.  So as a preventive maintenance tool, and as a means just to check to see what condition your drives are in, I mean, there really is nothing like it.



LEO:  With these big 500-gigabyte drives now, I run SpinRite on every new drive just because I don�t � proactively, I want to make sure that there�s nothing wrong with that drive before I start, you know, committing important things to it.



STEVE:  It�s funny, in the old days we got in, well, we didn�t get in trouble, but there were some manufacturers that would over-order the � and we�re talking,�like, well,�okay, Compaq.  I mean, you know, major computer�manufacturers.



LEO:  They�re gone now.  We can talk about them.



STEVE:  Right.  In fact, I just realized that.  They would over-order the number of drives they needed, use SpinRite to qualify them at the loading dock, essentially an incoming QA, and then return the excess drives that were the least good as determined by SpinRite.  So, I mean, it really has that sort of like, you know, diagnostic and long-term preventive maintenance capability.



LEO:  Well, I wish drive manufacturers would just do that before they leave the factory.  I would buy � I would pay a premium for a drive if it said �SpinRite tested before shipping.�  I would buy � I would pay a premium for that.



STEVE:  Maybe someday.



LEO:  Hey, you know, we were talking about all of this router activity and monitoring and so forth.  If you are administrator of a big network, you certainly need to do this kind of thing.  You need to constantly keep an eye on things.  And you need a router that�s a little smarter than the average Linksys.  You need the Astaro Security Gateway.  Astaro is, of course, the sponsor of Security Now!.  We�re really glad to have them.  All open source, they make great�stuff.



They�ve just released a brand new product, the Astaro Command Center Version 1 � ACC, they call it.  It�s free for all users of the Astaro Security Gateway.  So if you�re a network administrator with multiple gateways, you can manage them, you can control them, you can monitor them, you can look at threat levels, all from one central command post that�s got a beautiful map of the world.  It�s just really slick.  ACC is one of the many reasons to look at the Astaro Security Gateway.



If you�re a small or medium business, and you need superior protection from spam, from viruses, from hackers, plus complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall at an easy-to-use, high-performance appliance, contact Astaro, Astaro.com, or call 877-4AS-TARO for a free trial of an Astaro Security Gateway appliance in your business.  I use the 120, and it�s really neat.  You can, by the way, download it for home users.  There is a free version.  The software is available.  So if you�ve got an old PC lying around you�d like to turn into a super bulletproof, super extra-powerful gateway, download the software for free.  Astaro.com.  I thank them for their support of this podcast.



And as always, I thank Steve Gibson for his tireless work protecting us, educating us, and helping us get the most out of our technology:  GRC.com.  I�ll see you next week, Steve.



STEVE:  Okay, Leo.



Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#47

DATE:		July 6, 2006

TITLE:		Internet Weaponry

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-047.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo trace the history and rapid growth of Internet Denial of Service (DoS) attack techniques, tools, and motivations over the past eight years.  They discuss many different types of attacks while focusing upon the distributed bandwidth flooding attacks that are the most destructive and difficult to block.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 47 for July�6, 2006:  Internet Weaponry.  Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at�www.astaro.com.



Steve Gibson and his magic moustache are back on Security Now!.  Somebody suggested, you know, we have those little pictures of ourselves next to each posting on the This Week in Tech website.  And I wink, and Alex�s eyebrows go up and down.  And somebody suggested we should get your moustache to go up and down.



STEVE GIBSON:  Well, I�ll tell you what�s happening to it is it�s turning more gray.



LEO:  We could fix that.  We can ungray that.  We have the�technology.



STEVE:  First I was thinking, that might be toothpaste.  But no, it�s definitely not toothpaste.



LEO:  Or one of those milk moustaches.  Well, I will � Nitrozac & Snaggy of the Joy of Tech, wonderful Joy of Tech comic strip, do these for us at JoyofTech.com.  And I�m sure I can get Nitrozac to maybe put a little more black, do a little Grecian Formula in your...



STEVE:  I don�t mind being unretouched.  It�s fine.



LEO:  You�re not as gray as the picture, actually.  So we�ll have to fix that.



STEVE:  Okay.



LEO:  Yeah.  So today we�re going to talk about, I think, a fascinating subject.  You call it �Internet Weaponry.�



STEVE:  Well, yeah.  I want to talk about botnets, as they�re called, and the evolution of true Internet weaponry, which is unfortunately what exists today on the internet.  And it is highly effective.



LEO:  Much more effective than Kim Jong-il�s missiles.  Unlike them, they�re aimed � this Internet weaponry is aimed at you and me and everybody who uses the Internet.



STEVE:  Well, it�s aimed at anyone that the controllers of the weaponry choose to aim it at.  It�s extremely difficult, if not impossible, to hide.  And it has unlimited range, until Kim Jong-il�s missile that lasted for 35 seconds and then sputtered out.



LEO:  So when you say �Internet weaponry,� what are we talking about?



STEVE:  Well, this all began about eight years ago, sort of toward the end of �98 and in 1999, with sort of the general prevalence of the �Net and machines on the �Net.  The very first recorded attacks were UNIX-based machines in a network where � because always the idea was that you needed to generate a lot of bandwidth.  Now, attacks have increased, and we�re talking Denial of Service attacks, using a lot of packets, Internet packets, basically to swamp either the receiving machine or the machine�s connection to the Internet, the idea being that any given Internet connection has a certain speed.  You know, a modem is 56K; DSL might be 384K; cable modems, you know, maybe you�re able to receive, for example, a megabit.  But whatever that rate is, that sets basically the total amount of traffic that is able to fit down that connection at any given time.  So if more than that amount of traffic is being sent into sort of like the front of the connection, and the connection is only able to carry a certain amount, some percentage of packets will be�dropped.



The router that�s trying to saturate and force as much data down the connection, whatever its speed, the router�s own buffers will overflow, and its strategy is simple.  I just drop what I can�t send.  And as we�ve talked about in prior episodes, the Internet�s protocols are robust in the face of dropped packets because it�s understood that this is all very, you know, routers forward what they can in the best direction they know how to, but packets will get lost.  And so the TCP protocol has a whole acknowledgment system and a retransmit logic.  Protocols like UDP that don�t have that built in, their applications, like DNS, know to resend a request if it hasn�t received a response.  So the notion of packets being dropped is something that the Internet can deal with.



The problem is, if somebody, for example, were flooding a DSL connection that can handle 384K, if they were flooding it with 384 megabits, that is, a thousand times more than it can handle, then there�s very little chance, one in a thousand, for your good packets, that is, the valid packets you would like to receive down your DSL connection, there�s very little chance for them to compete against this flood of attacking packets.  And, you know, the attacking packets are nothing really but too many.  There are just too many of them.  And the router has no way of knowing, in a properly designed attack, which packets you want and which ones you don�t.  They all look the same to a router.  So it just, you know, it just sends what it can onward and drops the flood,�basically.



So it�s not that the denial of service attack is all getting through to you and, like, overheating your DSL modem or something.  It�s that you see a denial of service because the valid traffic can�t compete, statistically, against this flood of attacking traffic which is trying to get through.  So backing up a little bit...



LEO:  Essentially it�s a bottleneck, really.



STEVE:  Exactly.  It is a bottleneck happening somewhere.



LEO:  Yeah, okay.



STEVE:  And the other troubling thing about this is that modern denial of service attacks, so-called DDoS, the first �D� standing for �distributed,� the idea is that thousands, and in fact today even tens of thousands, of machines scattered far and wide across the globe are being controlled centrally, and all instructed to launch their traffic, some attacking traffic, towards a certain point.



LEO:  So that�s the key.  Because otherwise, if you just had one machine trying to do this, it wouldn�t have enough bandwidth to really flood the opponent.



STEVE:  Well, that�s a perfect example.  For example, say that somebody on a cable modem was attacking � some one person on a cable modem was trying to directly attack some other person on a cable modem.  Well, as we know, cable modems tend to be asynchronous � asymmetric, rather � bandwidth.  You can download maybe a megabit, but you can only upload maybe 250K, or 256, so like one quarter of that.  So the idea is, if one person were trying as hard as they could to attack another, well, their maximum upstream or outgoing bandwidth would be 256K, or 250K, for example, a quarter of a megabit, which is one quarter of what you�re able to download.  So you could accept that attack down your connection and still have three quarters of a megabit, that is, three quarters of your total bandwidth, available to you for valid traffic.  So you might notice that, boy, you know, my cable modem or my DSL modem light used to be flickering, or normally flickers, now it�s on steady.  But you would still be able to use your Internet connection because it wouldn�t be flooded, and your traffic would be able to get�through.



And even if now, say, four attackers combined their bandwidth, and they were each a quarter megabit, well, now there�d be one megabit of attacking traffic competing with potentially one megabit of your valid traffic.  And you�d probably � it would feel like a slowdown.  It would feel like, okay, something�s wrong somewhere.  We don�t know where or what, but boy, my connection is smoking.  But I�m still sort of still connected to the Internet.  So the idea is it�s a matter of scale.  It�s a matter of how big the flood is that is competing with valid traffic.



LEO:  I�d also like to just point out, because we�ve got a couple of emails about last week, that we�re talking a particular denial of service attack, a flood denial of service.  There are other denial of service attacks...



STEVE:  Yes.



LEO:  ...where you take advantage of exploits or holes.  And that wouldn�t require the same amount of bandwidth.  That would just � in fact, as somebody pointed out, you could do it with an attack every five minutes because it would bring the machine down each time.



STEVE:  Well, I saw those postings over on the TWiT site, also.  There was one, I mean, that posting brought up a very good point, which you�ve just made, which is that there are attacks which are not about floods.  The classic one I just love.  It was called the Ping of Death.  And it was a fault in early versions of Microsoft Windows where, if you sent it a ping, if you sent the machine a single ping packet where you had spoofed the source IP to be the same as the destination IP, that is, you sent a packet that said this is a ping from you to you, the machine exploded.



LEO:  Not literally.



STEVE:  Not literally, of course.  But, I mean...



LEO:  Windows didn�t like it very much.



STEVE:  But it�s so funny, well, because it tried to reply to itself.  



LEO:  Right.



STEVE:  And it didn�t under- and it got in a total loop, and the stack got unhappy, and the processor performance went to 100 percent utilization, and basically the system just ground to a halt completely because, at a very low level in the operating system, it was continually trying to respond to its own ping, essentially.



LEO:  Yeah, there are numerous attacks like that.  But we�re talking about the denial of service that comes from basically a flood.



STEVE:  Well, yes.  And the problem with those other types of attack is they�ve all been resolved over time.



LEO:  People fixed the holes.  They fixed the flaws.



STEVE:  Exactly.  For example, Microsoft realized what was happening, and they fixed the problem in their stack that would cause that to bring the system down when it received one bogus ping packet.  And, I mean, and there are many other types of, I mean, very tricky, sophisticated, very clever attacks in the past.  The original denial of service attacks against servers were not bandwidth attacks per se, they were TCP protocol attacks, the so-called SYN flood.  What happened there was that, as we�ve talked about TCP connections before, the first packet to arrive at a server is a SYN packet, short for synchronize, which is the client saying and requesting a connection with the server.  The server sets up some resources at its end to accept the connection, then sends back a SYN/ACK packet to acknowledge the receipt of the SYN and to send its own synchronization information to the client.  And then the client responds with a final third packet, which is called the three-way TCP�handshake.



Well, the fact that the server receiving the single SYN packet allocates a bunch of resources, that is, memory allocations on its end in order to begin to set up and get ready for the connection, clever hackers figured out, hey, what if we just send a whole bunch of SYN packets to the server?  It�s going to end up expecting a whole bunch of connections which never arrive because we�re not actually establishing a TCP connection.  We�re just saying we are.  And so even with relatively low bandwidth, the early servers, which were not hardened against this kind of attack�� as virtually all servers are now, I mean, Windows XP has this built in.  It turns out that Linux and now UNIX are getting this technology, where they�re much smarter about what resources they allocate upon the initiation of a TCP connection.  So it�s not any longer possible to bring servers down with a relatively small trickle of SYN packets.  So really...



LEO:  Not that some other exploit might not come along.  I mean, there�s plenty of bugs still to be found, no doubt. 



STEVE:  Oh, absolutely.  And so, you know, you�re right,�there...



LEO:  That�s one down, but there may be more.



STEVE:  There could be anything else.



LEO:  Right.



STEVE:  But the evil elegance, if you will, of what happens with a true flood is that they�re just, I mean, it�s fundamentally overloading the Internet�s way of operating.



LEO:  And there�s no way to defend because it�s not a flaw in the Internet.  It�s taking advantage of the way the Internet is supposed to work.



STEVE:  Correct.  In fact, an analogy that I like that I think I�ve used here when we were talking about this briefly before is a magnifying glass.  If you put your hand out in the sunlight, it feels fine.  It feels warm, you know, not a problem.  Hands were designed for the sun.



LEO:  Right.



STEVE:  And so putting it out there�s not a problem.  But if you hold a magnifying glass at the right distance over your hand, the same amount of radiation from the sun that was beforehand covering � well, beforehand � which was previously covering your entire hand, is now focused down to a single point.  And now you�ve got a problem.



LEO:  Yeah.



STEVE:  That hurts a lot.  You�ve got, you know, burned flesh and blisters and other horrors, just from taking that normal amount of sunlight and focusing it on a point.  Well, I love the analogy because it really fits with the Internet.  There�s, you know, 10,000 computers are not causing anyone any problem when they�re all just surfing the web and browsing around and uploading and downloading files.  But if those same 10,000 machines all do the same thing, that is, all focus their attention down to a single spot, that spot is in trouble.  And of course the non-malicious sort of corollary to this is the so-called �slashdot,� where, you know, I don�t know if it�s even still so true, the...



LEO:  Now it�s called the �digg effect.�



STEVE:  The digg effect.



LEO:  But it�s the same idea, yeah.



STEVE:  Exactly.  It�s where, you know, a whole � some highly popular site refers to some other site, and so suddenly that server is overwhelmed by valid users, too many valid users, who all want to bring up the same pages at the same time, and there just isn�t enough power in the server or bandwidth in the connection or whatever.  And so, you know, you�re digged or slashdotted or something.



LEO:  Right, right.  So there�s a legitimate attack.  I mean, not attack, but it�s legitimate traffic, so you can�t say no.



STEVE:  True.  Well, and so back from about �99 is where we began to first see this happening.  There was a youngster, 15 years old, named Mafiaboy, in...



LEO:  Ah, yes.



STEVE:  And remember the name well because it made a lot of press at the time.  And this was really the first indication that the world had that, you know, things were not quite as good on the Internet as we thought.  In February he attacked Yahoo! and brought Yahoo! down, and Dell.  And you remember eBay going offline?  Amazon.com was hit, as was CNN.  And...



LEO:  One kid did this.



STEVE:  One kid.  And it was estimated he caused about $1.7�billion of damage...



LEO:  Wow.



STEVE:  ...overall from bringing these serious ecommerce sites that really depend upon being on the �Net in order to�function.



LEO:  Every minute down costs them money, big bucks.



STEVE:  Yes.



LEO:  Did they catch him?  Did they find out who he was?



STEVE:  Yep.  He was in Montreal.  He ended up pleading guilty to 55 counts of criminal charges and served eight months in a youth detention center.



LEO:  Not enough.



STEVE:  And I don�t know, but I would imagine, very much as was the case with Kevin Mitnick, that he�s probably not allowed to touch a computer these days.



LEO:  Either that or he�s got a very good job with a security firm.



STEVE:  Yeah.  Well, and so...



LEO:  Or both.



STEVE:  So those, of course, were the � and so now we�re talking six and a half years ago that, you know, these really high-profile attacks brought to everyone�s attention, you know, that this could really happen.  The other thing that happened was these attacks brought it to a much wider attention of other young people on the �Net, you know, so-called �script kiddies� or, you know, young hackers who were often using IRC.  IRC Chat was like a place where they hung out and talked and told stories and, you know, swapped software and URLs and things.  And there�s a funny � the way IRC works � IRC stands for Internet Relay Chat.  The way it works is that you can often have a channel operator, an IRC channel operator, who�s sort of like the ruler of the channel.  And that person is able to kick off, just unilaterally kick off or ban anyone that they want to because, you know, they�re in charge of the channel.  Well, that caused fights among teenage...



LEO:  Oh, yeah.



STEVE:  ...hackers...



LEO:  Still does.



STEVE:  ...who were, you know, exactly, who were not appreciating being knocked off of their connection.  So there were little squabbles that would form in IRC.  Well, what ensued was the development of sort of the first personal denial of service attack tools, the so-called �bots,� which these young programmers would develop, often writing them in Visual Basic or sometimes in C, there was source code floating around the �Net that they could use to sort of get started.  And so it was what they did after school was to build these � basically these bots whose purpose was to attack, typically, other people on IRC.  Because if you are disconnected from IRC, you lost your�privileges.



Or the way IRC works, it�s a network of servers.  That�s why it�s called Internet Relay Chat.  The servers will relay messages from one server to the next.  And turns out that, if a server is attacked, it will split the network.  There aren�t redundant connections among servers.  So if one server is attacked, it can fragment the so-called IRC channel, and you can end up with a server that doesn�t have any leader on it.  You then join that server, stop the attack.  And the way the IRC protocol works, when the servers reconnect, they merge the users, and briefly you will have two operators, allowing one to kill the other.



LEO:  Oh, man.



STEVE:  So what happened was, I mean, there really became this culture of blasting each other off the �Net in order to sort of play king of the hill within these IRC domains, which became important social structures for young kids who were, you know, hanging out on IRC in the afternoons after school and in the evenings.



Well, one thing led to another, and then it became, okay, my bots are stronger than your bots.  My, you know, my bots can�� I can blast off anyone off the �Net, and so on.  Well, the problem is that, as we�ve seen before, what you need in order to have a strong attack is more bandwidth.  More bandwidth means more machines.  So the second order phenomenon that then began to happen was that this bot code was then stuck in viruses, actually installed through IRC using very powerful scripting languages.  Na�ve IRC users would ask for help, and somebody would give them instructions that would in fact download a Trojan, which is really what these programs are.  These bots are Trojans.  They would download these Trojans into their machine.  So one way or another, the motivation was to spread one person�s bots out on innocent victims� computers, as widely and with as high a concentration as possible.  So that became the next game was seeing how many bots you could get in a so-called �botnet,� or bot network.



And again, the sole purpose of these things at this time � and this is before these Trojans and bots became spam sending, that happened afterwards � the sole purpose was to generate a bandwidth flood aimed at a single point that would blast typically someone else in IRC off of IRC.  And the other really interesting thing about this is that the bots themselves used the IRC system, and in fact today they still do, in order to receive instructions.  The idea would be that the bots would be built with some domain name in them.  And someone running a botnet would create a � would use a dynamic DNS system in order to � essentially in order to cause all of his bots, using whatever domain name he�d come up with, to connect to a server at a certain IP.



The tricky thing is since � as we saw before, IRC is Internet Relay Chat.  The perpetrator, or the master of this fleet of zombies, doesn�t himself need to connect to the same computer or the same server.  He just connects to Internet Relay Chat and connects to the same channel, and all of his commands will be sent anonymously, relayed from one server to the next.  Well, this is what�s made it so very difficult to track the operators of these networks down because, I mean, it�s very much like email, which is relayed from one email server to the next.  However, in the course of email, of course, each server appends headers, as we�ve seen, in order to allow you to backtrack where your mail came from.  Not so with the Internet Relay protocol.  So it�s extremely difficult to find out who�s behind a fleet of�bots.



LEO:  If you were going to invent, really, a service, an Internet service that was designed for hacking, from everything you�ve told me so far, it�d have to be IRC.  I�mean...



STEVE:  Yes.



LEO:  ...it�s just the perfect test tube for all this stuff.



STEVE:  Yes.  And it�s really phenomenal when you look at it from that light.  I mean, as you said, Leo, it is a perfect�� it�s a perfect medium for, first of all, for creating anger among people.



LEO:  Right.



STEVE:  You know, who are then...



LEO:  And, you know, and everybody knows everybody�s Internet address.



STEVE:  Yup.



LEO:  I mean, it�s really remarkable.



STEVE:  Exactly.  And in fact the protocol, the IRC protocol is documented in some RFCs, although no server really follows it completely.  But then what�s happened is very powerful clients � mIRC is one of the most popular IRC clients � very popular and very powerful clients have arisen, which you�re able to do scripting to.  You can customize it.  You can do all kinds of things.  And in fact there are benign bots within IRC that are used...



LEO:  Oh, yeah.



STEVE:  ...for good purposes.



LEO:  I have a Leo bot.  We use bots frequently in various chatrooms I�ve been part of.



STEVE:  Right.  I mean, it absolutely makes sense to have a presence there and maybe, like, have an autoresponder bot...



LEO:  Exactly.



STEVE:  ...that will send back a message when it receives one.  So what we have now, and what has evolved over time, are very large bot networks.  And, I mean, truly, tens of thousand networks large.  And I have had the privilege, sort of, I guess it�s a privilege, to get involved in this years ago when GRC was originally attacked, the very first denial of service attacks which were launched in exactly this fashion.  I ended up, you know, spending a lot of time reverse-engineering this, figuring out how it works.  I remember surreptitiously joining, after reverse-engineering a bot that I received, surreptitiously joining the channel that this fleet of bots were in, and just watching them.  When someone joins an IRC channel, they�re basically announced as coming.  And when they leave, they leave.  Well, if you just sit here watching one of these private bot network channels...



LEO:  It�s chilling, isn�t it.



STEVE:  ...you constantly, yes, you constantly have new machines announcing themselves, joining the network, and other machines leaving.  And so what�s happening is some...



LEO:  And this is all automated.  I mean, there�s no human involved at all.  This is...



STEVE:  Correct.  Well, exactly.  Somewhere, someone, some innocent person turned their computer on and connected it to the Internet.  And behind their back, this Trojan that had been installed through some actions they took, whether it was surfing to a website, exploiting known security vulnerabilities, opening an email attachment, I mean, every conceivable way of getting software in, I mean, this was sort of the first spyware, or really malware, that was aimed really targeting people�s machines.  I mean, the whole commercial side, the Ad-Aware and adware stuff, the, you know, CoolWebSearch and all those things, those ended up sort of happening around the same time.  But this was purely malicious in intent.  And all the techniques that the young hackers could come up with for getting this stuff installed in people�s machines is what was used.  I mean, so that individual hackers would have tens of thousands of machines that their own customized version of this bot Trojan had infected.  And so at any given time, some percentage of those total number of machines that were carrying that Trojan would be online and automatically logging themselves into this IRC chat channel.  And what�s chilling is they�re reporting for duty.



LEO:  Yeah, yeah.



STEVE:  I mean, they�re logging in saying, okay, I�m ready to receive commands.



LEO:  What is thy will, Master?



STEVE:  And so � exactly.  And so somewhere, if this hacker chose to take pretty much anyone down that they wanted to, knocking them off the �Net and holding them off for whatever period of time they chose, they log into a different server, use a password that only they and their bots know, because you�re able to password protect these channels, and you�re able to hide the channels, log into a hidden...



LEO:  Which raises the issue, I mean, if you saw this channel, can�t the FBI just find them and kill them?



STEVE:  Yes, I mean, and presumably that�s going on all the�time.



LEO:  Right.



STEVE:  But all they have to do is, you know, edit their code, change the channel, and reinfect a bunch of machines.  It is � actually, I remember years ago seeing some statistics about the rate at which a new bot would infiltrate people�s machines, just through common user actions, I mean, you know, the kind of actions you don�t want to have be common, but people not knowing better.  And so somewhere this hacker connects to a different server, joins the hidden channel that his bots are a member of, and issues a command.  The IRC system forwards that � basically it�s a command, but it�s a comment like any other posted into a chatroom, forwards that chat comment through the system, bouncing through any number of servers until it reaches the one where the bots are congregated, that they�re all checked into.  And they don�t even have to all be congregated at the same server.  There are also distributed bot networks that are smart enough to have a number of domains that they�ll randomly choose so that they�re not all congregating at the same server.  I mean, this stuff has become, you know, through a process of successive refinement from the hackers comparing notes and, hey, how are you doing this, oh, that�s a good idea, I think I should try that, too.  I mean, for them it�s a game.  And so what we have today is true destructive force, or as I called it, �Internet weaponry.�



LEO:  Weapons of mass chatbotry.



STEVE:  Well, yes.  And in fact, in July of 2002 you may remember that the RIA was also off the �Net for many days off and on.  In fact, it was very problematic for quite a while because the RIA had, you know, our wonderful recording industry association, had strongly endorsed some very, very strong anti-peer-to-peer filesharing legislation.  And so in retaliation, one or more � we don�t know, you know, to this day as far as I know it was never tracked down � one or more people who objected to that RIAA policy just said, okay, we�ll show you who�s boss of the Internet.



LEO:  Who�s really running the show, yeah.



STEVE:  And just blew the RIAA�s website down and held it down for quite a while.



LEO:  How big are these nets?  How many do you have to have, how many co opted machines to be effective?  And what are the defenses against these things?  That�s three big questions, I know, but...



STEVE:  Well, I know that Mark Thompson has told me � he has a friend with a major bandwidth provider network that has seen attacks of nine gigabits.  So...



LEO:  Jiminy Christmas.



STEVE:  Nine-gigabit attack.  Now...



LEO:  There�s very few pipes that could survive something like that.



STEVE:  Oh, yeah.  I mean, that�s a serious, a serious debilitating attack.  So say for the sake of calculating in our head that a typical bot on a cable modem � oh, and by the way, those are called �cable bots.�  Because you want to�have...



LEO:  You need bandwidth, yeah.



STEVE:  Cable bots are better than modem bots.



LEO:  Right.



STEVE:  You know, modem bots are lame.  No.  First of all, they�re not connected very often, so they�re not often participating in the fleet.



LEO:  You need an always-on high-bandwidth connection.



STEVE:  That�s really what you want.



LEO:  Yeah.



STEVE:  So say that we had upstream bandwidth from an infected machine of, as I was saying before, like 250 kilobits, a quarter megabit, okay?  So four of those would be a megabit.  4,000 of those would be a gigabit.  Which�means...



LEO:  36,000 machines.



STEVE:  Yes.



LEO:  Even if you were more conservative and said half that, it would still be 18,000 machines.



STEVE:  There was one...



LEO:  That�s a huge net.



STEVE:  ...one botnet found of 100,000 machines.



LEO:  Wow.  Wow.



STEVE:  Controlled � a single controlling individual with 100,000 machines.



LEO:  Now, are these always created by a virus?  I mean, is that the only way to effectively create something like this?



STEVE:  No, it�s anything you can do to get, you know, the bots are communicating Trojans.  It�s a Trojan which gets installed into a computer, arranged to automatically start whenever the machine is booted.  And the first thing it does is try to phone home.



LEO:  Okay, you join the net, the IRC channel, yeah.



STEVE:  Join the net, report for duty.  And so the idea is that any techniques which can be used to get code running on someone�s machine has been done.



LEO:  So any security flaw, presumably these bots could then be instructed, well, okay, here�s some code, execute it, try to find more recruits, try to increase the size of the net.



STEVE:  Yeah.  A perfect example, for example, are the Internet worms that we saw, like Code Red and Nimda and so forth, that were very successful at propagating themselves.  Now, their only interest was in their own propagation, although they also in several cases opened backdoors and left backdoors behind that then allowed their machines to be taken over remotely.  But they weren�t bringing along any other, like, remote-controlled bot technology, although of course the famous Code Red did have, and in fact many of them had, time-delay attacks where they would launch attacks on a given website.  Remember there was whitehouse.gov was targeted, Microsoft�s security update service was targeted.  So they had their own malicious intent, but they were not remote-control Trojans that they were disseminating.  So in general, you know, email, email attachments, you know, sort of shady websites that will use known vulnerabilities, or just somebody saying � in fact, this is one of the famous ones � here is a free utility that will speed up your Internet connection five times.  There were...



LEO:  And a lot of people would just jump at that.



STEVE:  Absolutely.  It�s like, whoa, my Internet connection really needs a five-times boost.  So they�ll download it and run it.  And maybe it, like, it says, oh, your connection is already optimized.  Thanks for coming by.  Or, you know, or it might pretend to be doing that.  What it�s really done is install something malicious.  So, you know, we�ve said before, and this is a perfect reason to say again, really only download things from well-known, high-reputation websites, you know, SnapFiles, CNET is going to be, you know, checking the files that they�re offering and making sure, I mean, and they specifically say they�ve checked them for bots and viruses and Trojans, and these files are clean.  But, you know, you really need to be cautious when you download something that seems like it may be too good to be true.  It probably is.



LEO:  Wow.



STEVE:  And so...



LEO:  Okay, so that�s the size that you need.  That�s how they get them.



STEVE:  Yep.  Now, the final...



LEO:  Now, how do you defend?



STEVE:  Well, the final step in this � and we�ll talk about defense in a second � in the evolution of this has been doing this for profit.  And that really changed the complexion of Internet attacks.  Somebody realized, hey, if Mafiaboy was able to do $1.7 billion of damage to those companies, then wouldn�t they have been willing to pay something beforehand not to have suffered that damage?  Even 10 percent of that would be, you know, plenty of money, 170�million.  So what people realized was, due to the evolution of the �Net, and specifically a prime target have been online gambling websites, there are now companies whose, I mean, whose livelihood really depends upon being online, especially, for example, in the case of online gambling sites around the times of major sporting events, which the sites tend to specialize in � horse races, boxing matches, whatever.  And so what has happened and is now happening is there are extortion rings that seem relatively well organized which will contact a website�s owner or owning company and say, hi there, we�d like to sell you our protection services.



LEO:  Oh, my goodness.  This is the traditional protection�scheme.



STEVE:  It�s exactly what it is.



LEO:  Oh, my goodness.



STEVE:  It is exactly that.  And if you pay us $10,000, we will arrange not to have your site attacked during the upcoming, you know, blue chip horse race or who knows what.



LEO:  The truth is, the only people they could protect against were themselves.



STEVE:  Well, yes, exactly.  They...



LEO:  They�re really saying we won�t attack you.



STEVE:  They can not give the order to their bot fleet.  It�s sort of like the way Washington saves us money.  It�s by not giving us the increases they were planning, and they call that a cut.



LEO:  Yeah, don�t charge what we thought we would.



STEVE:  Exactly.  So very often, the first time one of these extortion threats is received, the owners blow it off and, well, this is old news now.  No one blows it off today who�s in the business.  But they would say, ah, you know, I don�t think it�s going to be that bad, or I�ve got big servers, or I�ve got a big pipe, or I�m paying extra for super strong networking, whatever.  And sure enough, the big day comes, and they are off the �Net for 24 hours, just gone.



LEO:  Wow.



STEVE:  They�re black.  No one can get to them.  And they�re losing their customers, who are pissed off that they can�t get to the gambling site they were using.  So those customers just go somewhere else.  I mean, and so they realize there�s a huge cost of not being on the �Net because those customers that they have once lost are going to be very hard to reclaim.  So, you know, the attack ends.  An hour later the phone rings or email arrives saying, gee, we�re really sorry.  We were unable to prevent that.  We see you were off the �Net for the last day while the horses all crossed the finish line.  So, gee, I hope that when that next boxing match comes up, and we contact you again to offer our protective services, you may think twice.  And more often than not, they get paid.  Now...



LEO:  Do we have any idea how often this is happening?  I mean, I imagine it�s quite widespread.



STEVE:  Yes.  The last time I spoke to a whole roomful of FBI guys � I meet with the, I can�t remember what they call�themselves.



LEO:  Secret Service?



STEVE:  It�s like a, well, it�s...



LEO:  It�s a crime division, yeah, yeah.



STEVE:  The electronic crimes guy.  But it�s people from the Secret Service, the FBI and Border Patrol and all kinds of divisions have, you know, a side to them that is concerned with electronic crimes, the Electronic Crimes Task Force. And I was chatting with one of my FBI friends before this, and we were specifically talking about this kind of thing.  And what often happens is that a few months will go by, and there�ll be another request for more payment.



LEO:  Right.



STEVE:  And so...



LEO:  That�s blackmail.  They never stop.  Once they�ve got a mark, they�re going to keep going.



STEVE:  Yeah, I mean, and it is really a problem.  Now, what�s happened is, in response, these sites that really, really have to stay on the �Net or they�re in serious trouble, they�ve realized, okay, I guess I can�t buy my bandwidth from, you know, the cheapest provider in town.  So they�ve ended up hugely strengthening their connections.  There are some commercial services now that deliberately have huge pipes and, like, proxying servers to accept the connections on behalf of one of their clients.  So they�re selling Internet protective services.  These websites then, they�re placed behind these denial of...



LEO:  But these are legitimate vendors here.  We�re not...



STEVE:  Yes.



LEO:  ...talking about, yeah, not the extortionists now.



STEVE:  Yes.  And, I mean, and it�s still the case that the largest attacks are able to cause problems.  But mostly what�s happened is the cost of doing business for these people who are having to now pay a serious true technology, you know, bandwidth provider to insulate them from these floods of packets, you know, their costs have gone up forever.  So it�s not like the Internet is a free ride for them because, you know, there is now true Internet weaponry loose on the Internet.



LEO:  Amazing.  So the defense is what?  I mean, how do they do it?



STEVE:  Well, the problem is that we�re talking about a distributed network, widely distributed, for example, 10,000 machines, or as we did the math for a nine-gigabit attack, 36,000 machines.  You know, they�re not all in one university, they�re not all in one location because of the nature of the way they are spread, through websites, through email, through spam, through, hey, download this free Internet accelerator program.  You know, everybody on the planet is going to be carrying these bots.



LEO:  Right.



STEVE:  And so what happens is, as in my magnifying glass analogy, packet traffic is incoming from every ISP, every major Tier 1 provider, you know, through every network on the Internet.  And at any given point the traffic doesn�t look unusual.  It�s only as it begins to converge down towards its target that, you know, the wires begin blowing, and the network engineers say uh-oh, you know, something�s wrong here because we�re seeing all kinds of spikes, and servers and routers crashing on our network.  So the problem is, you know, there isn�t a way to practically backtrack this.  And it�s certainly the case also that bots could be given instructions ahead of time so they will launch their attack if not told not to.  And you could even have smart bots that are able to figure out, like something posted on a web page somewhere, they could be getting their instructions from the content of a web page.  I mean, so the problem is, it�s a perfect example of the extreme sophistication and power and flexibility of the Internet is being turned against it, and citizens on the Internet.



LEO:  And so because it�s so widespread, you can�t filter�it.



STEVE:  Right.



LEO:  You can only throw bandwidth at it, basically.



STEVE:  Right.  Now, there have been attacks which were filterable.  For example, there was a famous attack, in fact, that we didn�t talk about yet, was in late October of 2002, remember when the DNS system was attacked.



LEO:  Oh, boy.



STEVE:  That was a � it was a one-hour-long massive ping attack.  It was just an ICMP flood.  It was so strong, though, it was directed at all 13 of the main DNS servers, the so-called �root servers,� which maintain the master directories of domain names.  Nine of the 13 DNS servers were brought down.  Only four of the servers managed to stay on the �Net.



LEO:  And they were brought down by pings, by floods.



STEVE:  Yes.  Just an ICMP.  Now, what�s interesting is that DNS doesn�t need ICMP.  It�s nice to be able to ping a DNS server to see if it�s up and if it�s responding.  But technically you don�t need...



LEO:  Not required.



STEVE:  Right.  So what could be done is filters could be put in routers far enough upstream, that is, away from the DNS server, so that the concentration hasn�t yet had a chance to become so extreme that that filter can�t handle the traffic.  And the filters could be set, drop incoming ICMP traffic to this IP address.  And so what would happen is the distributed attack would be � well, that particular distributed attack would be stopped far enough upstream, when it was still dispersed enough that individual filters could stop their portion of the attack that was trying to move through them as it concentrated.



The problem is, DNS does use UDP.  And so the reason we haven�t really bothered filtering ICMP is, first of all, it would be a problem if DNS servers didn�t respond to pings.  You�d like them to do that.  I mean, that would, you know, break who knows what else that is, like, checking on DNS server response times and Lord only knows.  But you could always attack the same protocol that the service or server uses.  In the case of DNS, it�s the UDP protocol.  And famously, in the case of any website, it�s TCP aimed at port 80.  So if an attack, for example, were using UDP � well, say it was like a DNS attack on port 53, but aiming at a web server.  If the web server didn�t need to serve DNS, it could just have that blocked upstream, and the attacks could not get through to it.  But all web servers inherently have to be able to accept TCP packets, typically on port 80.  So if the attack is profiled so that it looks exactly like what your customers are doing, like your valid traffic, there really, truly is no way to filter it.



LEO:  So you�re essentially saying there�s no defense.



STEVE:  There really is no defense.  The only thing that can be done is that � and this is what some of the commercial anti-denial-of-service service providers have done, is they could have servers connected to very large pipes, which accept the connection on behalf of the actual website�s servers and respond to every single incoming attacking packet, assuming that it�s valid.  And now the problem is you have something called �denial of service back scatter.�   Since the source IPs of the incoming packets are spoofed, they�re normally just random numbers, and it�s a SYN packet, the server will respond with a SYN/ACK packet back to the apparent source IP.  Well, if it�s a random source IP, this just sprays these SYN/ACKs all over the Internet.



And in fact, some really brilliant people down at the San Diego Supercomputer Center, they owned a large block of never-used IP space.  They set up a monitoring system to watch the incoming SYN/ACK traffic that just happened to statistically land within their big IP space.  And they were able to track � this is so cool � they were able to track and monitor denial of service attacks occurring all over the Internet from the back scatter generated by servers that were under attack, trying to respond with SYN/ACKs to bogusly addressed packets.  So some percentage of the total traffic from a random IP would happen to have the IP in this net that, you know, network and also net as in a fishing net, that the supercomputer center was watching.  So they could tell when attacks were occurring, how strong the attacks were; and since the server would be sending the SYN/ACK from its own IP, they knew who was being attacked on the Internet at any time.



LEO:  And the conclusion was...



STEVE:  It�s bad.



LEO:  Well, I mean, there is one solution, which is to really � and I certainly think we do this as best we can, I certainly do, and I know you do � tell everyone you know about it so that they don�t fall prey to these bot nets, that they don�t get their computers zombied.



STEVE:  Yeah.



LEO:  Otherwise you�re out of luck.



STEVE:  Yeah.  Well, of course, I famously made a lot of noise when Microsoft was getting ready to put Windows XP out for the first time because there was something they were adding to XP known as �raw sockets,� which for unfortunately complex reasons was a really bad idea, and allowed attacks to be much worse than they would otherwise be.  It�s not that they weren�t happening before, that UNIX didn�t always  have raw sockets, that, you know, there weren�t other ways to generate floods of bandwidth.  All that was true.  But XP was the dominant platform.  I knew that people would be unfortunately installing bots and Trojans into XP.  And, you know, there�s no better place that a denial of service bot wants to be than in a machine with raw socket capability because it makes it so much easier for it to launch an extra strong debilitating attack.  Anyway, as we know, Microsoft didn�t understand what I was trying to say.  And it wasn�t�until...



LEO:  It got attacked.



STEVE:  ...yeah, the MSBlast worm used XP�s raw sockets against Microsoft...



LEO:  Right.



STEVE:  ...that they finally thought, ouch.



LEO:  We�d better do something.



STEVE:  We�ve got to take this out of XP.  And of course, in Service Pack 2, that fixed so many other security problems with XP, Microsoft also removed raw sockets.  And things are better today.



LEO:  Yeah.  So, folks, tell every � I mean, anybody who listens to this podcast isn�t really likely to be a member of a bot net.  But tell your parents, your friends, your less sophisticated acquaintances, don�t open email attachments.  You know, do all the security things we talk about day in, day out, you know, update your system regularly, make sure you apply all the critical updates.  You know, don�t open attachments, don�t � have a good antivirus.  Be careful.  And then I guess if they have been botted, in many cases an antivirus scan will detect it.  But of course if they�ve used a rootkit they may be completely�invisible.



STEVE:  Yeah.  I, you know, I guess bottom line is, I mean, you know, people sometimes believe that I�m an alarmist, that I�m, you know, raising concerns that are above the level that the threat requires.



LEO:  Right.



STEVE:  And, you know, my position is, hey, I�m just explaining what is.  I�m just saying this stuff is happening.  It does exist.  Malicious programs are on the �Net that can be downloaded that will do what this says.��So...



LEO:  It may be too late.  Once, you know, if there really is a massive problem, then it�s too late.  Better to raise the alarm now.



STEVE:  Well, to me it doesn�t seem like this is escalating any further.  I mean, law enforcement has been successful in tracking down a lot of these people.  The one glitch in the extortion racket is that somehow money needs to go from the company that�s been extorted back to the extorters.  And so it�s � and Western Union has been used often in order to sort of try to create some sort of not-easy-to-follow trail.  But the problem is, with more and more governments cooperating now, what is now becoming a widely recognized problem, you know, when it used to be five years ago, you would talk to somebody and say I need help, you know, tracking down an Internet attack.  They�d go, huh?  A what?  Now it�s like, oh, yeah, sorry to hear that, you know, you�ve got a client who�s got a problem.  I mean, you know, now it�s understood.



LEO:  They know about it, yeah.



STEVE:  So, yeah, so there�s a lot more cooperation.  And so certainly it�s difficult for these extortionists to get paid, though apparently there are still ways because, as far as I know, it�s still going on.



LEO:  Well, and I�m actually, as bad as that is, more concerned about the vulnerability you described in the DNS system.  And while nothing bad, really bad, has happened yet, they�ve obviously made some noises indicating they could do it.



STEVE:  Well, it�s absolutely the case that, if DNS were � if all the servers were held down long enough � see, that�s the thing.  This one-hour attack frightened people in the networking community because it was very clear then that DNS could be held offline.  The problem, though, is that DNS servers are also distributed, and they cache all their addresses locally.  So typical, you know, Amazon.com, my own GRC.com, eBay, whatever, those addresses are widespread.  And only when they expire in a local server�s DNS cache is it necessary for that server to go and update itself.  Typically that�s a day.  So you�d have to hold all the DNS servers down and off the �Net for a day in order for the DNS  history, for the DNS caches, widely distributed among the millions of DNS servers that are, like, owned by ISPs, and in some cases individuals, for their caches to drain and for them not to be able to then get themselves refreshed.  So, I�mean...



LEO:  It�s hard to do.



STEVE:  On the other hand, it would bring down the �Net.  The entire �Net would basically come down.  I mean, IP addresses would still work, but who knows anyone�s IP address?  We all use DNS.



LEO:  That�s why, going back to the hosts file, you might want to start making a hosts file of your own of all the sites that you really, really like, just in case.  And of course I hope you�ll include TWiT.tv in that list so you can still get our podcasts should the worst happen.  That�s just a � it�s amazing, really amazing.



STEVE:  Yep.



LEO:  Well, it�s one reason why our sponsor Astaro is doing so well.  People are very aware of security nowadays.  And naturally, when your company�s looking for security, the place to go is Astaro.com, Astaro Corporation, makers of the Astaro Security Gateway.  If your small or medium business network needs superior protection from everything, I mean, spam, viruses, of course hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in an easy-to-use, high-performance appliance like I have � I�m so glad to have it, makes me feel better � contact Astaro, Astaro.com, or 877-4AS-TARO to schedule a free trial of an Astaro Security Gateway appliance in your business.  Of course they do offer the free version for consumer download at their website.  And, boy, if you�re managing a larger network with a bunch of gateways, you want to look at the Astaro Command Center.  What a slick way to keep track of what�s happening on your network.  And let�s pray and hope that you never see all those lights go red with a big denial...



STEVE:  Oh, yeah.



LEO:  ...of service attack.  Ooh, that would be a scary, scary thing.  You know, I think it�s an interesting job now to be a system administrator.



STEVE:  It�s not boring.  There is so much going on.  You�ve got, you know, as we�ve talked before, you�ve got worms scanning around, trying to propagate themselves.  You�ve got, you know, attacks of one sort or another.  You�ve got incoming unsolicited spam.  I mean, there�s a lot going on on the network.



LEO:  Lot of beasties out there.



STEVE:  Yeah.



LEO:  GRC.com is the place to go for more information about many things.  Of course this is where you can get show notes and the 16KB versions of this show.  Transcriptions, too, thanks to Elaine.  GRC.com/security now.  It�s also a good place to go to get the ultimate disk recovery and maintenance utility, the wonderful SpinRite, Steve�s bread and butter during the day.



STEVE:  Yup.



LEO:  Also, for information or testimonials from customers, and there�s some great ones, SpinRite.info.



STEVE:  We got one � I was thinking of you the other day, Leo.  Someone wrote they had a hard drive die, and they sent it to a data recovery company who gave them a quote of, I think it was $1199.



LEO:  Yeah.  Very typical, actually.



STEVE:  With no guarantee of success.



LEO:  Right.



STEVE:  Just that was the quote.  And the guy said, uh, send it back.  So he bought a copy of SpinRite, and three hours later his drive was back online, working perfectly.



LEO:  Ah, yes.



STEVE:  And fixed it.  So...



LEO:  What a nice story.  There�s lots of those at SpinRite.info.  Yeah, you know, more and more I�m telling people, if it�s a physical error, you know, if the disk is gouged, SpinRite won�t fix that, and you might have to spend 1100 bucks.  But anything short of that, SpinRite�s the first thing to try, really is a great tool.



I guess we�re done for the day on our Internet Weaponry segment.  What a fascinating topic, though.



STEVE:  Yeah.  48 next week is a Q&A episode, so we�ll answer questions and catch up with email and then move on from there.



LEO:  All right, Steve.



STEVE:  Approaching one year of Security Now!



LEO:  Yay.  So a happy Fourth of July week to you.  I hope you took a little time off for fireworks.  I bet you didn�t.



STEVE:  Nope.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#48

DATE:		July 13, 2006

TITLE:		Listener Feedback Q&A #9

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-048.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world �application notes" for any of the security technologies and issues they have previously discussed.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 48 for July�13, 2006:  Your questions, Steve�s answers.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



It�s time to take a look at security once again with our security expert and the wizard of ShieldsUP and SpinRite, Steve Gibson.



STEVE GIBSON:  Hey, Leo.



LEO:  Good afternoon, Steve.  How you doing?



STEVE:  Great to be back.  Good.



LEO:  So before we get into our regular � because it�s Episode 48, our Mod 4 episode, so we�re going to do a question-and-answer � before we get into that, a couple of items we want to cover.



STEVE:  Yeah, I did want to mention that anyone who�s got their computer updating its security from Microsoft, anyone using Microsoft Windows, this the other day was the second Tuesday of the month of July.  And Microsoft once again has a little packet of security updates.  Nothing super critical for end-users.  There�s an Excel problem, you know, various obscure things.  However, not accepting those and keeping your system current means that they pile up.  So you might as well do so.  It will require a restart of your machine, so you might want to choose when to do this.  There were a couple server-side things that were a little more of a concern, but nothing, you know, super extreme.  So...



LEO:  You know, I have mine set, and I recommend others do this if you�ve got Service Pack 2, it�s one of the options available to you, you just open the system properties control panel and go to Automatic Updates.  And I�ve set mine to �Automatic (recommended).�  Which says, �Automatically download recommended updates for my computer and install them.�  However, it doesn�t install them.  I just noticed that, as you�re talking, yeah, it downloaded them, and I have little shield in my system tray saying �Updates are ready for your computer.  Click here to install.�



STEVE:  Well, and I�m a little bit more of a control freak, or at least I�m a little more protective of someone else doing things to my machine.  I mean, there are things that I explicitly don�t want installed.  And in fact you can go to Windows Update and say I don�t want these things, and don�t ever try to give them to me again.  Just stuff, you know, I�m not using and don�t need, apps I don�t have installed that they�re doing security updates for.  I�ve got mine set for �Download but don�t install.�



LEO:  Right.



STEVE:  Which actually may be the way yours is set?



LEO:  No, it�s not.  That�s what�s odd.  That�s what I�m getting is a download and then let me know.  Of course, I don�t get � what it�s not doing is saying what the different updates are, just giving � when I click the little shield it says � well, I guess I can do a custom install.  So it is exactly as you say.



STEVE:  Right.  And I do...



LEO:  Even though I�ve said, well, I�ve just got to point out to people that, even if you have it automatic, you might want to check your system tray and see if there�s that little yellow shield there because in my case the automatic doesn�t do it automatically.



STEVE:  Yeah.  And, you know, I do like to sort of peruse the menu, see what it�s going to be doing.  Just sort of I sort of know what�s going on.  I dislike the idea of this stuff all just happening in a completely automatic fashion.��Also...



LEO:  But don�t you always install the critical updates�anyway?



STEVE:  I do.  But the other thing is, unlike some people who power cycle their system constantly, so they�re always rebooting, I am normally not rebooting my system unless there�s a reason.  I mean, I�ll go months, literally, without rebooting my system.  Also I generally have all kinds of stuff going on at once.  I mean, I�ve got lots of apps running.  I�ve got, you know, stuff spread across three screens.  And so just restarting my computer at an arbitrary time is not an option for me.  I need to, you know, deliberately close up loose things, save things that aren�t saved, and, you know, sort of tidy up before I do a reboot.  So I don�t want anything telling me you must reboot now.  And boy, if you install those updates and then aren�t prepared to reboot pretty soon...



LEO:  It�ll bug you.



STEVE:  It pesters you to death.  It�s like, okay, fine already, I�m going to reboot.



LEO:  That�s why I have not yet pressed the little yellow shield for the updates.



STEVE:  Right.



LEO:  And I will as soon as we�re done recording this�podcast.



STEVE:  Well, and the other little pre-issue here is we got a lot of reports last week from people who were having trouble downloading the previous episode.  It cut off after a few minutes.



LEO:  Episode 46, I think it was.



STEVE:  I think that�s two weeks ago, exactly.



LEO:  Yeah, yeah.



STEVE:  And so I wanted to mention that, you know, that AOL is using Akamai�s distribution system.  And every so often � not often...



LEO:  Well, I can give you � let me give you � I can give you the inside story on that.  I screwed up.  So it doesn�t happen if I do it right.  That was a case where I�d uploaded it to CacheFly or some other server � oh, no, I know, I uploaded it to your server, and then I did a cross copy.  And instead of copying it to a staging folder, which I usually do, I copied it to the main folder.  And what happens is, when it�s Thursday, and people know that Security Now�s about to be posted, they start hitting the server, knowing that � because we use a consistent filename and convention � knowing that that�s going to show up.  If you hit the server as I�m uploading, your particular Akamai caching server, and there are many, will cache a partial version of the file.  So those people who share that server with you will from then on, until Akamai updates, get a partial file.



STEVE:  So one guy zaps it for everybody else.



LEO:  Well, not everybody else.  And that�s why what you probably saw, and certainly I saw, was it was a small percentage.  It wasn�t by any means everybody who downloaded�it.



STEVE:  No.



LEO:  And there were couple of different file lengths.  And that�s because two different caching servers had two different partials.  So the trick on that � what I did was, as soon as I figured out that that had happened, is I reseeded the server with a new copy.  Akamai makes a hash, as far as I can tell, makes a hash of the file.  When the hash changes even the slightest bit, it says, oh, there�s a new file, and it will reseed its servers.  So I did that.  Now, if you�ve already, you know, if you�re using iTunes and it�s already downloaded a partial copy, it won�t know to get the full copy.  So unfortunately what you have to do then is remove Security Now! from your podcasts and resubscribe.



STEVE:  Ooh.



LEO:  And at that point it�ll go, oh, and it�ll download a full new version.  But as you said, you can always get a 16KB version from you.  Because you don�t use Akamai.



STEVE:  That�s true.  And so what I wanted to say was for people who are frustrated that they, for whatever reason at the moment, they can�t get the full one, that the lower quality quarter-size is always available from GRC, just as a fallback.  So I just wanted to reiterate that for those people.  And I�m glad for the explanation.  You�ll do it the right way from now on?



LEO:  Well, I can�t promise always.  I mean, I knew that this would happen.  I figured this out the last, you know, when we first started using Akamai this was happening a lot.



STEVE:  Right.



LEO:  And I finally figured out, oh, duh, and this makes sense.  The way I do it is upload it to a hidden folder so that people can�t download a partial.  And then I copy it from the hidden folder to the visible folder.  And presumably that copy happens so quickly, or quickly enough, that nobody is able to kind of start to download a small partial version of the...



STEVE:  Boy, it sort of sounds like an imperfect distribution system, though.



LEO:  I think it�s the way caching servers work.  So, yeah, I can�t promise it won�t happen again because I�m stupid, and occasionally, as I did last on 46, I make mistakes.  But I do know what causes it, I believe, and I know how to avoid it.  And so assuming no operator error it shouldn�t happen.  Shouldn�t happen very often, let�s put it that way.  And I�m sufficiently chastened, and I�ll pay attention.  I just wasn�t paying attention when I transferred it over.  I think it was I had forgotten to upload it, and it was a late night, and agh, I�ll just get it over here.  I got it from you, Steve, and then...



STEVE:  I think you were in Toronto, weren�t you?



LEO:  Yeah, I think that�s what happened.  I was in Canada.  So apologies for that.  But when that happens, yeah, that�s what � you can either get a 16KB version from Steve or wait a little while.  And once I�ve seen enough screams of pain, I�ll fix the thing.



STEVE:  Cool.  Well, we�ve got some great questions.



LEO:  Oh, I�m excited.  I�ve got my list in front of me.  Shall I be your reader again?



STEVE:  Sounds great.



LEO:  Starting with Fred from Mountain Home, Arkansas, who says he�s becoming increasingly comfortable about using online banking.  The same is true for...



STEVE:  Actually uncomfortable.



LEO:  I�m sorry, uncomfortable.  I�m becoming increasingly comfortable.  He�s more uncomfortable.  Same is true for paying for online purchases by PayPal, removing funds directly from my checking account.  Are these practices safe?  My bank account uses a 10-character password.  I use KeePass Password Safe to copy and paste the password into the login page for my bank.  Does this copy-and-paste procedure eliminate keyloggers � boy, this guy is really paranoid � from being able to read the password?



STEVE:  Well, I liked his question because he says he�s becoming increasingly uncomfortable about using online banking.  What I think is happening is he�s becoming increasingly aware of security...



LEO:  Right.



STEVE:  ...and of the problems.  I mean, he�s obviously now sort of aware of what a keylogger can do.  He�s just � he�s uncomfortable with, you know, the possibility of bad things happening.  So I�m glad because this is showing an awareness of, you know, what can go wrong.  At the same time, obviously he wants the convenience that online banking provides.  He also mentioned PayPal removing funds directly from his checking account, which brought up something that I wanted to mention about PayPal.



I use PayPal, and we�ve talked about it on the show several times, because it allows you to transfer funds to a third-party site without giving them all of your credit card or personal details.  They get the money, but PayPal does the transfer.  So, I mean, PayPal could screw up, too, potentially.  But the idea is you�d like, from a security standpoint, you�d like to minimize the dissemination of your personally sensitive information where possible.



The problem I have is that � and maybe you know why, Leo � PayPal really wants a bank transfer and not a credit card transaction.  I have both.  They required that I give them my bank account information in order to, like, verify me, whatever that meant, even though I was using my credit card for a long time before then.  So now they have both.  But I have to manually go in every single time and change this, you know, it�s like, from don�t debit my checking account,  I want you to take it from my credit card.  The reason I want that control is, if something happened, I was buying something online, for example from eBay, and I didn�t receive it, or it wasn�t in the condition that they�ve promised, I want the control of being able to challenge that charge on my card.  If PayPal has sucked it out of my bank account, that money is gone.  And so I prefer manually forcing PayPal to pull the money from my credit card because then, you know, I still have that money because my credit card will stand on my side, and I�m able to, you know, deny that charge.  Maybe that�s why PayPal doesn�t like the idea is that, you know, it�s just more complex for them.



LEO:  I think it�s mostly cost.  I can address this a little bit because we use PayPal for donations.  In fact, it�s the only way you can donate to TWiT.tv.  And that�s easy for us.  We don�t have to take credit cards, and I think it�s more secure.  Some people are nervous about PayPal.  In its early days PayPal was kind of notorious for some security issues.  But they�ve been owned by eBay for a couple of years now.  I think they�re very secure, and I think you do have the advantage of only one provider knowing your credit card�number.



STEVE:  Yup.



LEO:  For instance, when you pay us at TWiT.tv, I don�t see any of your financial information.  The money is transferred into a PayPal account.  I think the reason PayPal would prefer to use checking � and I agree with you, Steve, I don�t use � when I want to make payments I�d far prefer to use a credit card than my checking account.  But of course the fees are lower if they use your checking account, and I think that�s probably the primary reason.



STEVE:  Ah, okay, right.



LEO:  As you know, credit card charges are very expensive.  So for whatever reason, they do really encourage you.  You can, in fact, you can actually run up against a limit of credit card charges.  Eventually they�ll say sorry, you can�t do this anymore, you have to become a verified PayPal account with your checking account.  The way they do it�s kind of interesting.  You give them the checking account number, and they transfer two small, penny-sized deposits into your account.  And then you check your statement and see if they came in, and verify by saying what size, you know, how big the deposit was � you know, it�s two or three cents, a nickel, 12 cents � and by doing so verify that you in fact own the account, you have access to it.  And it seems to work pretty well.  I haven�t heard of any large problems with PayPal.



They do have a dispute resolution service that I think works quite well.  In fact, a number of people have been using it.  I get disputes every few days from people who forgot that they signed up for a yearly subscription to TWiT.  And when their yearly $20 is deducted from their PayPal account, they go, hey, I didn�t get my money.  What�s going on?  And so I�ll give them the money back, and that works very well.  I mean, it�s a very straightforward dispute resolution system.  It doesn�t have the force of law that the credit card dispute resolution system has, though.  So I think you�re probably right that when you�re buying something it probably is better to use a credit card.  Now, I don�t know, since the credit card is with PayPal, the payment goes through PayPal, I�m not sure if you have the same protections against the merchant.



STEVE:  Well, on my side, I mean, it�s my normal regular credit card that�s registered with PayPal.



LEO:  So you could still say to the credit card, don�t pay�this.



STEVE:  Oh, absolutely.  Absolutely.



LEO:  Yeah, yeah, even though it�s through PayPal, not to the merchant directly.



STEVE:  Correct.



LEO:  Yeah.  I think PayPal�s dispute resolution works pretty well.  But I don�t like anybody putting � having access to my checking account.  I have to say, having � I had to do that to become a � to be able to accept PayPal.  And I haven�t had any problems, nor have I heard of any significant problems.



STEVE:  And it�s funny, from a consumer standpoint, on my side, when you mentioned that credit card limit, that is what finally induced me to give them my banking information.  And there was also something about my address being unverified.



LEO:  Right.



STEVE:  I mean, there was a lot of pressure on me to give them my banking information.  And they have it now, and it defaults to using it.  So every single time I make...



LEO:  That�s a pain, yeah.



STEVE:  ...a payment, I have to go in, and I manually override that and say, no, take the money from my card.  Because again, you know, if I�m buying something that may not work out, I want that control.  It�s worth mentioning, too, there was a little news blurb � I haven�t seen lots of attention or press on this.  Google has now started a payment service in competition with PayPal.



LEO:  Yeah.  And in fact I�m looking into using it.  There�s some real advantages.  If you use Google AdWords, the costs are much lower.  In fact, it�s probably free.  So if you�re a merchant that uses Google AdWords to buy your Google ads, there�s a lot of incentive to do it.  Also if you have Google ads, and you accept Google payments, you�ll see a little button in your ad all of a sudden which makes the ad stand out a little bit more.  So I think for anybody who buys Google ads there�s a lot of incentive to do this.



STEVE:  I think it�s called CheckOut, isn�t it, Google�CheckOut?



LEO:  Yeah, yeah.  And eBay doesn�t like it.  eBay, who owns PayPal, has refused to accept Google CheckOut.  So there�s a little battle going on.  You know, I think that we will become more and more comfortable with these kinds of online transfer systems.  And I think that they�ll eventually take over.  They make a lot of sense.  Maybe it�ll be a Microsoft Wallet, maybe it�ll be some other company.  But right now PayPal is in the forefront.  And because they�re owned by eBay, and there�s a lot of scrutiny of them, I think that they�re trustworthy.



STEVE:  Also it�s worth mentioning, there was a credit card transaction system called SET that never got off the ground.  Apparently it�s limping around somewhere.  But it offered exactly this kind of third-party insulation, where you and your credit card company would together pay a third party.  The third party would never have access to your information directly.  And so, you know, again, it�s a variation on this idea.  And I agree, in general, in the long term, I wouldn�t be at all surprised if people who are receiving money don�t end up with your personal information, they just get the money from a third party that is isolating them.  And again, it allows you to control how many individuals you must trust with this, you know, financial information.



LEO:  I think ultimately it�s more secure.



STEVE:  Anyway, to finally...



LEO:  Yeah.



STEVE:  ...to finally answer Fred�s question about if he uses Password Safe to copy and paste his 10-character banking password, yes, copy and pasting would probably bypass keyloggers.  But there are many technologies that it would not bypass that are, like, reading fields or watching the data leaving your computer and so forth.  So, I mean, if your computer � and there are several questions this week that sort of involve this issue of, you know, how safe am I if my computer�s got bad stuff in it?  Well, the answer is you�re not.  I mean, so it is so important to keep the bad stuff out of your machine.  And we will see various takes on that in the Q&A that we answer this week.  But there were a lot of questions that sort of were involved with, okay, if something�s bad in my machine, how bad is it?  It�s like, well, it�s really bad.



LEO:  Kind of the wrong question to ask.  If you think you have a keystroke logger, don�t worry about whether cutting and pasting�s going to work.  You�ve got bigger problems.



STEVE:  Anyway, so Fred is increasingly uncomfortable with online banking.  And so I wanted to address that, you know, the issue is that he�s not wrong to be increasingly aware of the problems.  And so, you know, if you�re using online banking, certainly the security of your machine is more of a concern.  I remember that, you know, years ago people were saying, ah, I don�t worry about computer security.  I don�t use my computer for anything other than, you know, surfing the �Net and, you know, doing some Google research and things.  Well, and my feeling was at the time, well, yes, that�s today.  But, you know, it�s very clear that services are going to be offered over the Internet, and the security of your machine is going to become increasingly important as we�re depending upon them more and not just using them as an Internet surfing toy, but as, you know, more of our life, which of course is what online banking is doing.



LEO:  Indeed.  Matt Jordahl of Laveen, Arizona, says:  You�ve recommended the Kerio Firewall � actually the Kerio Personal Firewall is the one you recommend, the free one from Sunbelt Software � several times on the podcast.  He says: I just downloaded it to try it out, and I thought it was great until I realized it was limiting my speed on network file transfers.  I have a Linux box with several large drives that run Samba, and I�m connected to it over a gigabit switch.  Now, normally I can transfer files either way at around 40 megabytes a second.  And with Kerio installed I was limited to 20 to 30 megabytes a second receiving, 10 megabytes sending.  Have you ever heard of this before?  I have a pretty new motherboard, socket AM2, using the nForce�5 SLI chipset � in other words, he�s got a very, very fast computer.  It�s got a built-inboard gigabit NIC.  Why is it slowing down?



STEVE:  Well, there�s an interesting question that I liked because it raises the specter of do our personal firewalls impede and slow down our transfers in any significant fashion.  It�s something I remember being aware of because the early personal firewalls, if you were transferring data over the �Net, you could see your CPU being a lot busier with the firewall involved than it would be if the firewall weren�t involved.  Now, Matt�s case is really extreme.  I mean, he�s got gigabit Ethernet.  He�s talking about a local transfer among machines.  And he�s, you know, 40 megabytes per second that he�s normally getting is 360 megabits per second.  So, I mean, he�s really got normally super high-speed transfer.



So first of all, in Matt�s case, yes, the firewall being another layer of filtering is having to take a look at every connection, and on some level every packet.  You know, it�s moving it through another layer of software which is slowing things down.  Now, the question would be whether he could change his permissions on the firewall or get it less involved in his LAN traffic than it is in his traffic going out onto the internet.  But for most people who are using a firewall to insulate them from online stuff, they don�t have a gigabit connection.  They�re not transferring, and can�t, 360 megabits of data that, oh, darn, is going to be throttled down to only 160.  I mean, you know, they�ve got maybe a megabit if they�re lucky.  So my point is that, in general, firewalls are going to take a tiny little ding in your per-packet performance.  But it�s, I mean, it�s nothing to worry about because what�s happening is the Internet�s overall delay across the �Net is completely masking any little packet delay with the packets coming in.



In a worst-case scenario, which is what Matt describes, where there�s no effective per-packet delay in the network because he�s got a gigabit network and a fast server just pumping files into his system, there you�re going to see a firewall effect.  But normally, absolutely none.  So for most users who aren�t in exactly Matt�s situation, there would be no problem.



LEO:  True of a router, too?



STEVE:  Yes.  Yes.



LEO:  Anything that�s going to process the traffic is going to slow it down a little bit.  I measured the iPhantom, which is kind of an interesting device.  It goes out over the Internet and uses the Phantom Technologies servers to do the processing.  And that�s about 10 to 20 percent.  Given that it�s traveling out over to the Internet to their servers, where it�s being sanitized, and then out to the real world, that seems like a minor difference.



STEVE:  Yeah, well, and there it�s not quite applicable�because...



LEO:  They�re doing a lot more.



STEVE:  You�re actually running through, yes, through their own servers and doing encryption and decryption and so�forth.



LEO:  They�re doing antivirus and � yeah.



STEVE:  Right.



LEO:  But even then, 10 to 20 percent�s not bad.  What would�you say, it�s 5 percent or less for a normal firewall or�router?



STEVE:  Actually, it�s zero.  And I guess I didn�t describe it too well because I didn�t want to go on about this.  But the delay in, I mean, the Internet is all about...



LEO:  It�s waiting for the Internet anyway.



STEVE:  Exactly.



LEO:  Is what you�re saying.



STEVE:  The Internet is...



LEO:  So while it�s waiting it has time to do what it does.



STEVE:  Well, the Internet�s protocols are designed brilliantly to hide the delay.  For example, computers are able to send packets ahead of time, and the Internet only acknowledges them.  Acknowledgments can come late, and everything still goes.  So the guys who designed this packeting system understood that they had to have protocols that could intelligently anticipate the size of the buffers available at each end and send things in advance of technically receiving permission or acknowledgments.  So zero is the overhead in a typical situation because your firewall is negligible compared to the trans-Internet delays, which are completely masked by the brilliant protocols we have.



LEO:  Now, you did one other thing, and I�m just going to bring this up because I don�t want you to get email saying your math is wrong.



STEVE:  Oh, I...



LEO:  It�s not wrong.  I know why you did it, I just wanted to clarify it.  You said 40 megabytes a second is 360 megabits per second.



STEVE:  Oh, 320.



LEO:  Well, but I was wondering because isn�t there � so it�s normally 8 bits per megabyte.



STEVE:  Right.



LEO:  But isn�t it � or whatever it is, you normally multiply by 8.



STEVE:  8 bits per byte.



LEO:  8 bits per byte, I should say.  But sometimes there�s an overhead byte, a ninth bit.  And I thought maybe you were including that in your calculation.



STEVE:  Nope, I just multiplied wrong.



LEO:  It just � okay.  So I did save you some email.



STEVE:  Yes.



LEO:  Brian in Toronto asks � I thought you were being really clever.  And there you go.  I give you a lot of credit, Steve.  Brian in Toronto asks, again, about Kerio�s personal firewall.  He says it has a network intrusion protection, I�m sorry, prevention system � I like to call it NIPS � and a host intrusion system, HIPS.  Can you explain what intrusion prevention systems are and what type of attacks they prevent?



STEVE:  Yeah, real quickly, without getting into the specific details because I want to focus on the question, he talks about a network intrusion prevention and a host intrusion prevention.  I thought this was a good question because it highlights that personal firewalls are beginning to evolve and take more responsibility for host-side problems, i.e., rootkit-style attacks.  There are many ways in which software running in our computer is able to involve itself with other software in our computer.  A classic instance is, for example, a programmer�s debugger which is able to reach into another program and stop it and single-step it and allow it to be analyzed.  Well, the fact that one program, called the debugger, is able to insert itself into another process, you know, that�s nice, except that it also means that malware is able to do the same sort of thing.  So there isn�t much isolation among processes, not nearly as much as most users would like.



And I�m annoyed that, in fact, that the security is as bad internally as it is.  You know, the people who say, well, but what can you do, once malware is in your computer, anything could happen.  Which is true, and there are other technologies we�ll be talking about in the future.  We�re going to do some episodes on virtual machine technology, Leo, to talk about, you know, what virtual machines are and how they work.  So it is possible to create very good isolation.  But by default, ROSes don�t typically provide that kind of protection.  So what�s happening is that personal firewalls are acquiring features, not just about the incoming network traffic, but about the behavior of the programs in the computer themselves.



And so that�s what this whole difference is between network intrusion prevention, which is just packet stuff on network communications, and a host intrusion prevention.  It deals with behavior and catching malicious conduct of programs, like rootkits, trying to mess around with your computer�internally.



LEO:  Is this related to IDS, which � I�ve never heard of the HIPS and NIPS, but I have heard of IDS, Intrusion Detection Systems.  And many firewalls have those.



STEVE:  Yeah.  IDS is a technology basically that looks at the traffic going by.  So it�s not a firewall from the standpoint of simply blocking or allowing packets.  But an IDS actually interprets the traffic and tries to find bad things going on.  For example, you might have an IDS on front of a server that is looking at, like, bad conduct in the URLs which remote users are submitting.  There have been many problems in, for example, in the past with Microsoft�s IIS server, where you could basically take it over by using a malformed URL.  So an IDS could be in front of that, sort of pruning and purifying the traffic on the way in, and also detecting anything that looked suspicious.



LEO:  Got it.  Doug Dorbuck, writing from his Hotmail account, has a question about rootkits.  He writes:  If you have a secure firewall installed in your system, such as ZoneAlarm or, again, the Kerio firewall � that�s three in a row now � will these be able to detect the traffic generated by a rootkit in the event your system gets infected by one?  You know, he�s talking about the fact that software firewalls watch outbound connections.  He says:  Fortunately I haven�t been infected by a rootkit, but I always closely monitor any communications of outbound programs or services.  I imagine that, unless the rootkit installs its own TCP/IP stack, some of the better software firewalls will detect the traffic.  True?



STEVE:  So here he�s asking, if I�ve got a personal software firewall whose job it is to control the outbound traffic on my system so that I know which applications I�m giving permission, is there a way around it.  And the answer is yes.  The firewall vendors have certainly done everything they can to prevent being circumvented.  And so � and over time they have gotten much better.  The very first version 1.0 software firewalls would have been easy to circumvent if there was malware that was smart enough to do so.  Back then the malware wasn�t that smart.  So it�s been an arms race.  The malware is getting better.  The firewalls are also getting better to keep pace with the malware.  And, I mean, this is what the firewall companies are doing is working to keep their products as secure as possible.  The problem is, as we�ve said, once something is in our computer, all bets are off.



LEO:  It could turn the firewall off.



STEVE:  There are...



LEO:  They frequently do.



STEVE:  There is malware, yes, which has turned off well-known firewalls.  And there has been malware which knows about many firewalls, so it�s able to deal with whatever you happen to be using.  Then the firewall vendors countered by making their firewalls much harder to turn off.  But again, the rule is, if something�s in your machine, you just can�t be sure what�s going on.  So the outbound monitoring is more useful for non-malicious programs that you want to control than � you know, technically � than for something that is absolutely determined to get data out of your machine.  The problem is, it�s just all software, and it�s all pretty much running in the same environment, using the same services.  So, you know, it�s an arms race.



LEO:  They don�t call it malware for nothing.



STEVE:  Right.



LEO:  Lydell Anderson of East Hartford, Connecticut, has listened to all of our podcasts.  He says he�s read the GRC pages on DoS, DDoS, and DRDoS attacks.  DRDoS?  What�s that?



STEVE:  That�s Distributed Reflection Denial of Service.



LEO:  I thought it was the old Digital Research operating system.  Shows what I know.  He still has a question, though:  How can I protect myself from a DDoS that�s aimed at port 80 on my web server?  I can�t, obviously, I can�t block traffic to port 80.  That would defeat the purpose of the website.  So what do I do to protect?



STEVE:  Well, this of course follows on last week�s talk about Internet Weaponry.  And I liked the question because, you know, it sounds like here�s a guy who�s got a web server.  And maybe he�s had problems with denial of service attacks before; maybe not.  But he wonders, what can he himself do?  The answer, which really follows from what we were talking about last week, is unfortunately not much.  I mean, virtually nothing.



LEO:  This is comparable to a DoS attack on your router.



STEVE:  Well, yes.  The idea would be that he needs to offer port 80 to the world so that anybody anywhere is able to send traffic to port 80.  The problem is, that means that botnets everywhere in the world can send traffic to port 80 and flood him.



LEO:  And it�s legitimate traffic.  You can�t distinguish it from illegitimate traffic.  That�s the problem.



STEVE:  Right, right.  Now, if he were hosted by a company which was offering protective services, like we were saying, you know, for example, some gambling sites now are using that technology in order to be more resistant towards � against really large attacks.  If he were there, then he�d be protected by the services offered by his host.  But most servers in the �Net, because that kind of protection is very expensive, are not.  And so denial of service attacks are just something you tolerate.  It�s just, I mean, there isn�t a simple solution for this guy, unfortunately.



LEO:  How do they protect?  What do they do to protect you?



STEVE:  As we talked about last week, they just have really�big pipes that are able to absorb a phenomenal amount�of�traffic.



LEO:  That�s it.  That�s the only thing you can do.



STEVE:  That�s really the only thing you can do.



LEO:  We had talked some years ago about maybe changing the way you respond to the SYN requests by delaying or waiting for a second SYN request.  Any of techniques like that work?



STEVE:  Well, there are many different types of appliances now being sold.  But fundamentally, because of the way packets convene, as we were talking about the analogy of a magnifying glass focusing the sunlight down to a single point on the palm of your hand, similarly, unless you have a really huge pipe in the first place, that pipe is going to get flooded.  And, you know, it sounds like this guy Lydell, you know, just has a web server, and he�d like to be, you know, have protection from denial of service attacks.  And he�s just, you know, like a regular guy.  Problem is, there just isn�t any solution.  Yeah.



LEO:  Typically when you buy a hosting solution, especially if you buy a dedicated server, so you spend some money, you�ll get a 10-megabit pipe.  Now, that�s easily flooded by�a distributed denial of service attack.  10 megabits is�nothing.



STEVE:  Right.



LEO:  A larger pipe that you might pay a little extra for is 100 megabits.  That takes a little bit bigger of an attack.  But last week you talked about attacks that were considerably bigger than that, in the gigabit range, so...



STEVE:  10 megabits is 40 bots, each sending a quarter megabit out of a cable modem.  100 megabits is 400 bots.  Those, by today�s standards, those are small networks.



LEO:  So you�ve got thousands of bots in your IRCBot network.  You can choke pretty much any pipe unless the guy�s got, you know, gigabit pipes.



STEVE:  Yup.



LEO:  And that�s very expensive.  Trust me.  I know.  Let�s see.  We�ll go to Daniel Hummer of Modesto, California, who asks:  Is there a file size limit, or maybe a limit to the number of sites you can block using the hosts file � we talked about that a couple episodes ago � before your system starts really bogging down?



STEVE:  Yeah, we got a bunch of great mail after that.  Some people found large files on the Internet, that we talked about, that are being maintained.  And they said it�s amazing, when they added that large file to their hosts file, all kinds of stuff just stopped, you know, ads and nonsense, because their computer was now looking up in the hosts file before going out onto the Internet to see whether the hosts file provided an IP which, in this case, is a, like, you know, 0.0.0.0 or 127.0.0.1, something other than the real IP address that just prevents your computer from looking any further.  So his question, and I really liked Daniel�s question, is because some of these files are really big, I mean, they�re very comprehensive, they go on and on and on, and in fact it�s an education just to read through.  You see all these weird sites and things.  The answer is no, the hosts file can be very big because Windows is very quick in looking through it.  But more importantly, it�s the speed of that versus the speed of going out across your connection to your ISP�s DNS server and doing a lookup.  It would have�� your computer would have to be incredibly slow in checking the hosts file for that not to be much faster than making an external request.  So there really is no problem with hosts files getting really large in terms of their own�performance.  And they end up really speeding things up�because they offload that traffic from your Internet�connection.



LEO:  Yeah, makes sense.  I mean, even if you had hundreds and hundreds, maybe even thousands of lines, it�ll just still be a small text file, relatively.  And computers are very fast at getting through those.



STEVE:  Especially now compared to, for example, modem, or even a � well, an old analog modem or a cable modem.  And it just � it�s a second of delay versus just milliseconds to check the file.



LEO:  Plus think about what you�re saving in terms of images and so forth you�d be downloading.  I think it�s probably always a net gain in speed.



STEVE:  Right.



LEO:  David Cockrell of Bossier City, Louisiana, wants to monitor his system�s traffic, but he worries:  Will freeware like TCPView and TDIMon always show network traffic related to these tools that the bad guys use?  I was real curious about how those tools would show RDP, for instance, across a Hamachi connection.  That�s the Remote Desktop Protocol Microsoft uses for Windows Remote Desktop.



STEVE:  Right.



LEO:  TDIMon did show the traffic across the Hamachi connection.  But I wonder if there were a way for traffic to�be covered up by the tricks that are used in the bot world.  You�d better explain this question because it�s a little�complicated.



STEVE:  Well, this again relates to, could something in my computer alter the proper behavior of other software in the computer?  And the answer, unfortunately, is yes.  So we�re going to be talking about network monitoring.  Actually I think next week we�re going to talk about these various freeware and built-in ways to see what your computer is doing at any instant in time.  So then the question is, is there a way for that to be fooled?  And unfortunately, yes.  If something is in your computer, it can do anything it wants.  Now, tools like TCPView and TDIMon by the Sysinternals guys are terrific tools, and they�re great.  But there again, you can only really know that they�re going to be doing the right thing for monitoring programs that are sort of playing by the rules.  There are ways that they can be circumvented if somebody wanted to get traffic out of your machine and its software, maliciously trying to do so, it probably can.  Or at least you cannot know that it can�t.



Now, there is an alternative, though, and that is, if you were to run these tools in a separate machine, that is, if your � for example, if you have a router, either a consumer router that shows you what�s going on or a Linux system or a BSD UNIX machine, which is on your network perimeter, it has the ability not to be victim to any software running in your host machines.  So if someone really wanted to know for sure what was going on, the idea would be to get that monitoring software out of the environment that you�re trying to monitor, put it on a separate machine which you are not using as a workstation, it�s not going to be victim to random Windows infestations and malware and things.  And by virtue of being isolated by a network connection, software is not going to have the same access, malicious software is not going to have the same access to your network monitoring tools that it would if those tools were running in the same system.  So there is a way to do this by separating those�functions.



LEO:  And that sounds like it�s always a good idea for security, but of course it requires extra hardware and so�forth.



STEVE:  Right.



LEO:  Shawn Doyle writes from somewhere on Planet Earth � did he say that, or did you?



STEVE:  No, he actually put that down as his address.



LEO:  Somewhere on Planet Earth.  My goal is to run a game server that my friend and I can play together on.  My problem is the game server requires information from port 8080, a standard Internet port.  But as soon as I turn on port forwarding to make that port available, your ShieldsUP service at GRC.com � highly recommended, ShieldsUP, GRC.com�� shows a big red flag indicating I�m open to attack from the whole Internet.  Is there a way for me to do this�safely?



STEVE:  Well, this was a great question because it highlights what we�ve talked about with port forwarding.  Basically it sounds like Shawn�s behind a router, which is good because it gives him protection from any unsolicited inbound traffic.  The problem is, his friend is unable to connect to his server, which is running behind his router.  So he needs to do port forwarding, that is, open up a port on his router so that unsolicited incoming traffic to port 8080 is able to get through into his server.



The problem is, then, if he checks his security with, you know, my ShieldsUP service at GRC, I�m checking incoming traffic on port 8080 because it is a commonly used port for web servers.  The normal port is port 80; but non-high-permission servers, servers that don�t have root permissions, which are not allowed to open ports below 1024, often will run on 8080, just because it�s a higher port that they have access to.  So the cool thing is that Shawn doesn�t want to offer that server to everyone in the world.  If he needed to offer it to everyone in the world, like that prior question asked, where he was just wanting to run a server on port 80 and let everybody in, the problem is everybody could be malicious.  In Shawn�s case, he only wants one friend to be able to connect.  Well, if he knows that friend�s IP address, he can only allow traffic in from that one IP.



Now, if his router allows him to set up basically a firewall rule � many of the newer firewall routers will allow you to say the remote IP needs to be this on port 8080, and send the traffic on.  So in his router he might be able to permit only that, you know, his one friend to have incoming traffic on port 8080.  But even if the router doesn�t do that, his server certainly can.  So because any traffic coming through the router will be forwarded to his server machine, a firewall running there could be instructed, drop everything, don�t bounce anything, don�t respond, be stealthful on port 8080 except for traffic coming from this one remote IP.  So there should be a way he could configure himself.  And of course he can use ShieldsUP to make sure that port 8080 is stealthed for everyone but his one friend.



LEO:  I suspect he, like I have, has a cheap old router that doesn�t do the firewall rules.  So that would be a good reason to upgrade to a newer router. 



STEVE:  Either that or he ought to be able to do the same thing on his server.



LEO:  Right, right, right.  Vericha � Verha � I�m usually good with names.  This one�s eluded me.  It�s probably...



STEVE:  Verachert?



LEO:  It�s in Flemish, which is part of the problem.  Verachert Armand in Antwerp, Belgium, was worried � I hope it�s in Flemish, I hope I�m not making something up � was worried by a website he visited.  He says:  A firewall test revealed that my private address � whether that�s whatever, 192.168 or 10.0.0 � can be seen from the Internet.  Can it be reached from the Internet?



STEVE:  Yeah.  This is so annoying.



LEO:  It happens all the time, though.



STEVE:  It does.  And that�s why I wanted to bring it up, is that there are websites that terrify people by saying �this is your private address.�  And they�ll show 192.168.0.1 or .2 or whatever.  Well, okay, there are two things going on.  First of all, what�s happening is he�s browsing with scripting enabled, which I frown on, but it does allow the �Net to work...



LEO:  You kind of have to, yeah.  I mean, even our own site doesn�t work without a little JavaScript running.  So you can turn JavaScript off, but you�re going to get a very different experience on the web.



STEVE:  Well, yeah.  You know that I�ve talked about Internet zones and how you can get the best of both worlds by locking down, if you�re using Internet Explorer, by locking down your script processing for unknown sites and only selectively enabling it for sites that you trust.



LEO:  The thing I would point out, though, that unlike ActionScript, which really is dangerous, JavaScript is sandboxed.  And it�s pretty difficult.  In fact, I don�t know of many exploits, except where there are browser holes that take advantage of JavaScript.  So...



STEVE:  And that�s the problem, of course, is that scripting is complex, and we have a long...



LEO:  There could be holes.



STEVE:  ...history of browser holes.



LEO:  Yeah, yeah, yeah.



STEVE:  So it�s just, you know, from a security standpoint, if you can, better not to have it enabled.  Anyway, the point is that this site, and there are many of them that are scaring people, is using scripting in the browser to determine the machine�s IP address and then presenting it in a Window.



LEO:  As if they knew it.



STEVE:  As if they knew, exactly.  But they may have been sent it by the script, and then sent it back to his browser, or it could just be displaying it in the script locally, saying this is your IP.  Well, okay.  In the first � so the annoying thing is that he could have full Internet security with a perfectly operating router blocking all traffic, he is not exposed in any way, yet this web page is scaring him because it�s looking at his IP inside his computer and showing it to him on his screen.  Which means nothing from a standpoint of security except, as I said, that he�s got scripting enabled, which he�d be better off without, if he wants to get into that whole battle.



Okay.  The second thing is, it�s a private IP, 192.168.something.something, you know, 10.anything, 172.16 through whatever, I mean, and we�ve talked about this several times historically.  Those IP addresses are nonroutable IPs.  They are specifically set aside for people to have in their own local networks so that they�re able to create networks that don�t conflict with IPs on the public Internet.  So even if this company had his IP address, or anyone had his IP address, you can�t use it at all.  It will go nowhere.  Packets that are stuck on the Internet aimed at those IPs are just dropped immediately by routers.  So he has nothing to worry about.  And he went to a website that was unfortunately working to scare him.



LEO:  Yeah.  And I guess that would be the thing I would say is that I guess you could turn off JavaScript, but better to know that it�s harmless.  There�s nothing they can do with that number, even if they knew it.



STEVE:  Right.



LEO:  And they probably don�t know it because most of the time what this is is client-side, and they don�t send the number back.  They just display it.  Brian Voeller in Ashland, Oregon, has been busy.  He writes:  I would like to�offer you a suggestion on combating phishing.  That�s phishing with a �ph,� those online scams or email scams where they try to get you to give up your private�information.



STEVE:  Yup.



LEO:  In hopes that you�ll popularize this technique.  A few days ago I got a phishing email claiming to be from PayPal.  I decided to respond.  Oh, boy.



STEVE:  I know.



LEO:  Already I don�t like this.



STEVE:  No, just read it.



LEO:  I decided to respond with a fake login and password.  I used �I_AM_A_PHISHER� as the email address and a series of random letters for the password.  I submitted it several times very quickly in hopes that the phishing site was feeding them directly into PayPal instead of saving them for later, in hopes of triggering the PayPal intrusion detection system.  If PayPal looked at the logs, this would be 100�percent proof that it was a phisher trying to get in.  I would like to know if you think this would be effective, especially if many tech-savvy users would do the same thing en masse.  Of course we�d have to submit logs that appeared legit but could be recognized only by the target site as fake.  A bit like injecting radioactive dye in the body to trace a chemical�s path.  I think the best way would be for the users to make up a fake login name or trigger password and enter that, etcetera, etcetera, etcetera.  It�s funny, we get a lot of emails like this from people who think they have conquered spam or phishing or viruses.



STEVE:  Well, yes.



LEO:  This is a common thing.  Everybody always wants some magic bullet.



STEVE:  Well, and the reason I wanted to address this is there are people who � I mean, and I understand the emotional side of this � who are really frustrated and annoyed by all the nonsense going on the �Net.  And they want to take some action themselves to deal with the problem.  It�s like people who historically looked at their logs of Internet traffic and took the time to track down every random IP address that was sending junk at their IP and figure out who to send an email complaint letter to.



LEO:  Or the same thing with spam, tracking it back to the, quote, �originating server� and complaining to the source.



STEVE:  Right.  And phishing is the same sort of thing.  So, I mean, I don�t want to blunt Brian�s enthusiasm for this.  But, you know, my experience has been that you just, you know, you want as little involvement with this junk as possible.  If you get phishing email, just delete it.  You know, how much time do you have?



LEO:  Well, there�s a legitimate security concern here, too.  By clicking on that link in the email, he�s going to a website, and he doesn�t know what malware might also exist on that website.  It�s not merely a form.



STEVE:  That�s a very good point.  In fact, by having any involvement with email that you suspect is not legitimate, I mean, he says he knew it was phishing email.  The only proper thing to do is delete it.



LEO:  Hit the delete key.



STEVE:  It really is the right thing.



LEO:  And just get in the habit of not clicking links in email, period, no matter who they come from.  Don�t click links in email.  That�s a very dangerous thing to do.



STEVE:  Yeah.



LEO:  Eric Stauffer in sunny Malibu has been thinking about Internet weaponry, our last show, and DoS attacks.  He says:  If a website is attacked, as you explained, they cannot track the origin of the traffic because the return IP addresses are often spoofed.  However, since it appears that the ISPs are logging user traffic, couldn�t that � it says �thanks President Bush,� but I�ll leave out the politics here � couldn�t that information be used to help the community get rid of this malware?  Ah, an interesting point.  When a website is attacked, ISPs could be alerted to this fact.  In a sense, local ISPs would have the list of originating computers.  They could send messages to the probably unknown participants in the attack that they may have bots in their system.  Instructions could be provided for removing these bots.  He�s got a hold of something very important, I think.



STEVE:  Well, yeah.  I liked the question because it brings up an issue that we didn�t discuss in the whole Internet weaponry side, and that is the role of the ISP.  You know...



LEO:  You can�t spoof an IP address without, in effect, the collusion of your Internet service provider.



STEVE:  Well, yes.  And the idea being that � and I�ve talked about this, I�ve written about it on my Denial of Service pages.  The idea is that, if you have a bot running in your machine at home, your machine has an IP address which is known to your ISP.  And your ISP essentially is offering a range of public IPs to all of its customers.  So the ISP knows what are valid source IPs for the traffic leaving their network.  That is to say, if there was a bot in your machine using random numbers for the IP of the originating computer sending the packet, that is, the source IP, the source of the packet was just random numbers, those packets egressing, that is, leaving your ISP�s network are clearly invalid if the source IP could not be possible.  That is, if it is not part of the network that the ISP controls, then it can�t be a valid packet leaving the ISP.  So there has been historically a real push for ISPs doing what�s called �egress filtering,� that is, filtering packets egressing, or leaving, their network.  And by filtering we just mean dropping.  Just drop any packets that your network can�t have generated legitimately because the source IP is not one that you own, ISP.  The problem is, this involves more work, more equipment, more trouble.  It involves the ISP in a way that so far, as far as I know, very few if any ISPs are bothering with.



LEO:  That�s too bad because that single-handedly would eliminate IP address spoofing.



STEVE:  Well, and the counterargument is, well, yes, maybe, just for that one ISP.  The thing that users could do, if this became prevalent, then what botnets would do is not randomly generate source IPs, but generate source IPs in the neighborhood of the computer that they�re living on.  And so that would essentially generate IPs as if from other local users in the ISP�s network.  So again, good as this idea is, there are ways around it.  Which is not to say that it doesn�t make sense to do it because it would solve some of the problem but not solve all of the problem.



LEO:  Now, he�s actually proposing that ISPs then use their secret, super-secret powers to prosecute people who are doing this, or at least turn them in.



STEVE:  Or to advise them what�s going on.  Now, it is the case that an ISP would know because on their network you�re part of a LAN.  And so...



LEO:  They know everybody�s name and address.



STEVE:  Well, yes.  And they know your actual IP.  They also probably have your MAC address of your adapter because that�s the way, as we know, traffic within a LAN, over an Ethernet LAN, is actually moved by MAC address, which is not spoofable by a bot running in someone�s computer.  So it would be possible for an ISP to be more involved and, for example, detect that there are bot-infected machines within their network.  I�ve heard of ISPs doing this, but it�s not something that�s done pervasively at this point.



LEO:  You know, it�s funny because when spam became a problem, Internet service providers resisted the notion of blocking port 25 or...



STEVE:  Well, of getting involved.



LEO:  Of getting involved at all.



STEVE:  They just didn�t want to get involved.



LEO:  But eventually we�re compelled to.  And I think maybe the same thing will happen here with...



STEVE:  Well, and we do see things happening.  For example, my own cable modem provider, Cox in Southern California, it�s blocking a whole bunch of different ports where there have been problems in the past.  They are generally the various Microsoft security vulnerability � 135, 137-38-39, 445, things where there have been problems in the past.  The ISP is saying, you know, basically for their own benefit, they don�t want bots infecting their network and causing problems because it does create bandwidth traffic that they have to pay for.  So at some level there is an expense to�this.



LEO:  Although an interesting point is raised in the Net Neutrality controversy here because if there were, for instance � a security researcher in his blog wrote this up, and I thought it was an interesting argument.  I want to thank John [Puit ph] for passing it along to me.  It was from � it�s actually SANS, and I�ll put a link in the show notes to this.  SANS is the Internet Storm Center.  And it�s John Bambenek who says, well, if Net Neutrality were enforced, that would inhibit the ability of Internet service providers to start blocking certain ports or somehow protecting certain ports.  I don�t think so.  I think that a law that prevents ISPs from discriminating against some traffic wouldn�t go so far as to prevent them from doing it for security reasons.  But it might scare Internet service providers to do that kind of thing.



STEVE:  All the ISP would have to do would be to add to their service agreement a waiver from that.



LEO:  Right.



STEVE:  Saying that anyone who wants service from the ISP agrees that they are not enforcing Net Neutrality.  For the benefit of their subscribers they�re going to block the following ports, blah blah blah.



LEO:  Right, yeah.  Our last question.  Let me open the envelope here.  It�s been kept on Funk & Wagnall�s porch for the last two weeks.  Jason Partlow in Maryland has a terrific question about security zones in Internet Explorer.  Terrific because you like security zones.  Suppose, for example, that I have the Internet Zone set to high security�� that�s how Steve does it � and my Trusted Site Zone set to medium security.  If I go to a trusted site, but it has a frame or an advertisement on the page that�s from another site, will Internet Explorer treat that frame or ad like it�s also part of the Trusted Site Zone?  Because it is coming from a different server, isn�t it.



STEVE:  Yeah.



LEO:  If I had my webmail provider, for instance, set it as a trusted site, but I get an email that has a body with a  nasty script in it, will I be safe?  I presume he means he�s on the webmail provider�s site, like Yahoo! Mail or whatever.



STEVE:  Correct.



LEO:  Good questions.



STEVE:  Yeah.  And the answer is, Internet Explorer does the right thing.  To review very briefly what�s going on, Internet Explorer allows you by domain to control the behavior of our browser so that, for example, by default, anything in the so-called Internet Zone could have higher security than domain names that you have decided to trust, like your email provider, your bank, and so forth.  So Internet Explorer essentially is dynamically varying its security based on where you go on the web, which is really � it�s a great concept.  I love the idea because it allows someone to really bolt their security down, and then selectively trust sites where they�re going to lessen their security in order to get the higher level of functionality which many sites increasingly are requiring, like having scripting running.



Anyway, so the question was, if you had a page that was a hybrid, the page was coming from someone you had told Internet Explorer to trust, yet it had components which it was fetching from untrusted sites, does that wrapper of trust extend to anyone that that web provider or the web server or the page trusts?  And the answer is no.  Internet Explorer looks at every single request individually and will restrict, will properly restrict the security of any components that you haven�t told it to trust.



LEO:  There are third-party programs out there that extend Internet Explorer, make it easier to lock down Internet Explorer.  In fact, there�s one, and I�m trying to remember the name of it, that locks down your entire computer, basically says � you can run as administrator, but it basically says that you don�t have permission to do anything unless you specifically open it up.  And I just can�t remember the name of the program, so I�ll have to leave that for the show notes or something like that.  But you just do it by hand, and it seems to work very well.



STEVE:  Right.



LEO:  Yeah.  Well, that�s it.  Twelve down.  Thank you,�Steve.



STEVE:  Absolutely.



LEO:  You�re an amazing fella.  If there are people who listen, and I know that there are many security pros who listen who are concerned with security, they know about Astaro.  I don�t need to tell them Astaro is one of the best known security firms out there, because, of course, of their Astaro Security Gateway software.  Really fantastic stuff.  Astaro is great for your medium or small business network.  If you need protection from spam, from viruses, from hackers, of course you get complete VPN capabilities, intrusion protection, as we were talking about, but the real deal, content filtering, and of course an industrial-strength firewall in a simple, easy-to-use high-performance appliance, Astaro.com.  It�s open source, too.  I really like that.  Or call 877-4AS-TARO to schedule a free trial of an Astaro Security Gateway appliance in your business.  And I also want to point people to the really cool Astaro Command Center v1, which is now free for users of the ASG, that really gives you a neat way of monitoring your entire network.  I use a 120, and I�m very happy with it.  So when you�re talking security, the name Astaro absolutely should come to mind.  And we thank them for their support of Security Now!.



STEVE:  Yeah.



LEO: A reminder that Steve�s site, GRC.com, is the place to go for, as he said, if I screw up, 16KB versions of the show, or anybody who wants an easy, bandwidth-friendly version of Security Now!.  Transcriptions, too, thanks to our great transcriptionist, Elaine, at GRC.com/securitynow.  That�s where you�ll find ShieldsUP, of course, Steve�s great security software.  He does a lot of free, pro bono stuff.  And the bread and butter for Steve Gibson, which is SpinRite, the fantastic file recovery and maintenance utility.  Everybody, if you�ve got a hard drive, you should have SpinRite.  I mean, I�m serious.  It has saved my bacon many a time.  And if you want to see some great testimonials, go to SpinRite.info.  And Steve�s always putting up new letters there.



Ah, let�s see.  Anything else we want to cover?  I think we�re good for the day.  Next week...



STEVE:  Good for the week.



LEO:  Next week we�re going to � well, maybe not next week.��But the next couple of weeks we�re going to talk about virtualization.



STEVE:  Yup.



LEO:  And that will be fun.



STEVE:  Virtual machine technology.  But I want to talk about monitoring communications traffic, how end-users who want to kind of get a sense for what�s going on in their computer can quickly make that determination.



LEO:  Ooh.



STEVE:  And that�s what we�ll do next week.



LEO:  Next week.  Episode 49.  Thank you for being here, Steve Gibson.  Thank you all for listening.  And remember, take a look at the new site, TWiT.tv, and those donation buttons are still there in a beautiful lime green.



Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/


GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#49

DATE:		July 20, 2006

TITLE:		The NETSTAT Command

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-049.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo describe the operation and use of the universally available "Netstat" command � available in every desktop operating system from Unix and Linux through Windows and Macs.  "Netstat" allows anyone to instantly see what current Internet connections and listening ports any system has open and operating.  Mastering the power of this little-known command will greatly empower any security-conscious computer user.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 49 for July�20, 2006:  Netstat.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



It�s time to talk security with Steve Gibson.  Hey, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be back with you.



LEO:  I was in Boston earlier in the week.  Boy, was it hot.  It�s hot everywhere.  It�s hot today.



STEVE:  Oh, yeah.



LEO:  It�s hot.



STEVE:  Yeah.  Well, and I don�t know about Northern California, but down here in the south, I guess because of monsoon season, it is so humid.



LEO:  Oh, that�s unusual.



STEVE:  I mean, it�s not dry heat, which, you know...



LEO:  Oh, that�s not good at all, yeah.



STEVE:  No, because then your own body�s natural perspiration can�t be really used very effectively to cool you off through evaporative cooling, so...



LEO:  And we�re learning something about all kinds of things in this show.  So you�re kind of one of them autodidacts, aren�t you, where you just...



STEVE:  Well, I�m curious about everything, so I spend time hear and there learning what I can.  But I didn�t realize, I mean, and people may not, that, you know, since we�re on the topic, that we are � even though we�re not, like, sweating profusely, we�re constantly perspiring as part of our body�s temperature regulation system.  And we depend upon it being dry in order for perspiration to evaporate, which creates the cooling effect.  Because of course it takes energy to move water into vapor.  So that reduces our temperature.



LEO:  Well, I�m schwitzing right now because it�s very hot out here.  The reason I brought it up was I was approached by a cable guy in Texas.  And he said, you know, I�m a small cable operator in Texas, and we love Security Now!, and we would just like to know if we can kind of, I don�t know, send it to our customers or something so that � because it�s just we want them to know this information.  And I thought, bravo.  And I said, absolutely, please do.  You know, our license prohibits commercial usage without permission, so he was right to ask for permission.  But I think you�d agree that we�re just here to get that information out.  And I think it�s wonderful that an Internet service provider would actually give the podcast to his customers.



STEVE:  Oh, absolutely.



LEO:  Saying, you know, listen to this, you need to know this stuff.



STEVE:  Yeah.  And, you know, I would imagine that some percentage of them might � will hopefully get hooked and think, hey, I want to know about this stuff.



LEO:  Well, it�s good for us, absolutely.  You know, any way we can build the audience, we�re happy to do it.  Although the audience numbers are out, and we�re pretty much over 100,000 every show now.  So that�s very good news.



STEVE:  Very cool.



LEO:  And I also wanted to mention that there�s a big Windows security flaw.  I sent you this link yesterday.  Guess what, the WMF flaw that you�ve been talking about.



STEVE:  Well, that we talked about, you know, very controversially at the beginning of the year.  That was, you know the first big news of 2006 was the Windows Metafile vulnerability that was discovered.  Basically old code, for whatever reason, in Windows, that allowed images, just a standard old image...



LEO:  That�s what a WMF file is, it�s an image file.



STEVE:  Exactly, to execute code that was contained in the image.  And not surprisingly there have been, you know, sort of in the background, relatively quietly, malware and malicious sites have been using this to exploit, to install trojans of various sorts in unpatched computers.  What you found yesterday, Leo, was really sort of alarming because apparently the very popular MySpace domain, as well as several others, have been hosting some ads that contain and use the Windows Metafile vulnerability.  And by backtracking where the ads go and what the malware was doing, some security researchers are of the opinion that more than 100 �I�m sorry, more than a million instances of this malware has been installed using this Windows Metafile vulnerability.  Which, well...



LEO:  That�s amazing.



STEVE:  It�s a big number.  Well, but what�s really puzzling is, you know, who?  What million people?  Because in order to � I mean, this vulnerability was fixed, as you will remember, even out of Microsoft�s normal upgrade cycle because it was such a big problem.  You know, and...



LEO:  They patched it, you know, six months ago.



STEVE:  Well, and we had Ilfak on the show, you know, because he came up with a quick little fix for it in order to � because we didn�t know if Microsoft was going to.  So for someone to be infected by this today, they can�t have updated the security on their machine all year.  I mean, for seven months.



LEO:  Well, now of course MySpace is huge.  These were pushed out in a banner ad which was provided by a provider.  So MySpace didn�t push the ad or even host it.  You know, as with all banner ads, they�re hosted by the agency.



STEVE:  They were using a third party.



LEO:  Right.  And Webshots and a number of other sites also apparently pushed out the ad.  But the point is that so many�� MySpace is so huge, tens of millions of subscribers, that it was possible for them to infect a million computers.



STEVE:  But again, a million...



LEO:  Unpatched.



STEVE:  ...not patched computers.



LEO:  Yeah.



STEVE:  So, you know, certainly nobody listening to this show needs to worry because there�s nobody listening to us that isn�t, you know, updating their machine all the time.



LEO:  And the other thing to point out is that you would get this virus not through any action on your own.  And that�s what really made it deadly.  Just by looking at this MySpace page, if that banner ad happened to come up and you had an unpatched computer and you were using Internet Explorer, you�d be bit.



STEVE:  Yup.



LEO:  You�d have that code.  And they were putting a trojan horse code on people�s computers.  So, wow, a really dramatic example of what can happen if you don�t follow basic security procedures.



Okay.  Any other issues we want to cover before we get to our topic at hand?



STEVE:  I think we�re ready to go.



LEO:  What is the topic at hand?  I didn�t ask.



STEVE:  Network monitoring.  And, you know, of course that phrase or that term has many different meanings.  In this case I want to talk about a tool which is built into, well, that started back with UNIX and is in virtually every machine, whether it�s a UNIX, Mac, Linux, FreeBSD, and even Windows from the beginning.  It�s a command called �Netstat.�  And the issue is, how do you know what your machine is doing; what connections it has to the Internet; what services may be open and running in your machine, wanting to accept connections; and basically sort of, like, what�s going on in your machine.



Now, there�s the Netstat command that I�m going to sort of focus on, and then there�s a GUI-ized version that our friends at Sysinternals, Mark Russinovich, wrote.  Oh, and by the way, there is a bit of news, not really wonderful news from the standpoint of the whole industry.  Sysinternals is now a division of Microsoft.



LEO:  Oh, no.  Oh, no.  Oh, and Sysinternals is � Mark Russinovich, I guess, is the frontman, but I think there�s others involved, but...



STEVE:  Well, yeah.  He and Bryce are the two main guys.  And Mark is the heavy-duty coder who�s written over the last ten years � Sysinternals is ten years old, was founded in 1996.  And it took, you know, they grew it and built it, and it became a serious, you know, wonderful resource.  We�ve talked about Sysinternals utilities all the time.  Mark�is...



LEO:  They discovered the Sony rootkit, most notably, but they�ve done a whole lot of other great stuff.



STEVE:  Well, and it was RootkitRevealer that we�ve talked�about.



LEO:  Which was their program, yeah.



STEVE:  That�s another one of Mark�s pieces of freeware.  I mean, Sysinternals distributes a whole bunch of freeware.  Then they had their commercial side, which is Winternals, and they sell, you know, like in some cases pro versions of their freeware and stuff that they don�t offer in freeware.  But, I mean, just it�s been a tremendous source of super utilities over the last ten years.  And Microsoft decided that they wanted it all.



LEO:  Well, I�m thrilled for Mark and Bryce.  I hope they made a ton of money.



STEVE:  Yes, in fact he and I exchanged some email yesterday because I told him I wanted to talk about TCPView, which is his GUI-ized version of Netstat.  But not surprisingly, the moment the announcement was made you could hardly get to their site.



LEO:  Yeah, I bet.



STEVE:  Because everybody was saying, oh no, before it goes away I want to get everything.



LEO:  And I�m sure that�s not the case.  I�m sure Microsoft will keep all that stuff up.  I would hope.



STEVE:  I wouldn�t be that sure.  Immediately all of the EULAs changed.



LEO:  Oh, dear.



STEVE:  And the terms began to change.  Mark explained what�� the reason I exchanged email a couple times with Mark yesterday was I said, you know, no one can get to your site now.  I mean, it was literally � it was slashdotted, as they say, because so many people were trying to grab the latest state of the site before it went away, if it was going to.  You know, and we�ve had things go away before that we thought would be here forever.  So anyway, Mark explained that he was just in the process then of moving the site to much faster hardware and connection.  And sure enough, it�s now back up and running and just fine.  Because I wanted to ask him whether I could redistribute TCPView.  He said, �I am no longer in control of the site.�



LEO:  Oh, boy.



STEVE:  So that�s no longer his responsibility.  Somebody at Microsoft presumably has taken that over.  I mean, he�s excited.  It is a � certainly I�m sure he and Bryce did really well in being acquired by Microsoft with, you know, probably huge stock trade and so forth.  So...



LEO:  Yeah.  And, you know what, Microsoft can really use their skills and their tools.  So I think it�s � if it gets their stuff out to a broader audience, I�m happy about it.  But we do hope that they�ll continue to offer the stuff for free that they have been offering because it�s so useful.  And they�ll continue to do the work they�ve been doing.



STEVE:  Well, also Mark has really continually been moving the code forward, adding features here and there, you know, I mean, really tending his flock of freeware.



LEO:  He deserves a payday.



STEVE:  That will end.  So, you know, it is pretty much � it�s pretty clear that we�re not going to continually have, you know, a forward motion of those things.  I mean, I think this era is over.  So for what it�s worth, for people listening to the podcast who know...



LEO:  [Indiscernible] now...



STEVE:  Yeah.  Well, and all � you might just go to www.sysinternals.com and just browse around.  There�s OS utilities, network utilities, you know, security stuff, all kinds of good stuff.  I would advise that you go sooner rather than later and just grab the things that look good to�you.



LEO:  I have to point out, this is one of the reasons I am a fan of open source.  Had he open-sourced it and GPLed it, it wouldn�t matter if he was going to continue to develop it because others would.  But we�re not in that position now.  Microsoft owns it.



STEVE:  Right.



LEO:  So it�s, you know, that is one reason why I�m a big fan of open source utilities.  The other reason is that you can look at the source and make sure they do what they say they�re going to do.  He releases some source, I think.  But I don�t think he�s open-sourced any of it, so...



STEVE:  Correct.  He has � he�s sort of � what he�ll do is he�ll have sort of juniorized versions of his utilities in source form, just because he wants to give things away.  And, you know, I mean, he was truly a benefactor to the community.  And then the more fancy things would normally not be available in source.  And as I said, he does also have some commercial for-pay pro versions.  For example, there is a TCPView Pro that offers some additional features beyond what the free one does.



LEO:  Right.  Oh, well.  You hit me with a shock.  But you can still get TCPView.  And so � and actually I�ve always used Netstat.  I didn�t realize TCPView was a GUI front end on that.  So that�s good to know.



STEVE:  Right.



LEO:  Yeah.



STEVE:  Right.  Well, and in fact it�s interesting.  Now, as you know, Leo, I�m becoming a little more of a Mac person recently.  I�ve had to � I�ve been working with some new technology for the GRC site, wanting to do menuing, add some good navigation and menuing to GRC.com which, you know, it sorely needs.  And I wanted to make sure that it would run under Safari and the older IE 5.2 over on the Mac.  So I�ve been over on the Mac.  And I thought, you know, I ought to make sure that the stuff I�m going to talk about today, if there are issues for, like, the Netstat command on the Mac, that I talk about that.  So I�m adding a little more Mac support to my repertoire.



LEO:  Right.  Good.  Well, thank goodness somebody gave you a MacBook.



STEVE:  Yeah, the neat guys at Nerds On Site, they wanted me to participate in their conference at the end of this month via iChat, so they provided me with a MacBook so that I could do that.



LEO:  They�ve done more good than they could know.  The Mac community thanks them.  So Netstat, well, and there is an analog to Netstat, in fact I think it�s called Netstat, in UNIX and on the Macintosh, is there not?



STEVE:  Oh, it started there.  I mean, it was Netstat on UNIX.  The idea is � okay, so let�s rewind things a little bit here.  You�ve got a computer.  We�ve talked many times about how there�s a NIC, a network interface card, a network adapter which is connecting you physically to the �Net.  Then we�ve talked about this, the so-called TCP/IP stack, this essentially a stack of layers � that�s why it�s called a stack � of technology that interfaces the low-level Internet raw data to the operating system.  Well, and we�ve talked about the UDP protocol and TCP and the notion of listening ports and ports being open and connections being established, you know, and SYN packets and ACKs and all�that.



Well, the Netstat command, which originated with all of this technology, which originated in UNIX and was then moved over into Windows and other UNIX-like operating systems, it�s the network status command that allows you to find out what�s going on.  Now, for that reason it�s really useful.  There�s really nothing else that does this.  And that�s why I wanted to give it its own episode of Security Now!, to talk about the Netstat command and to introduce it to people, to invite people � this is the kind of thing you�re probably going to want to listen to this podcast again.  Maybe if you�re listening to it in your car while you�re commuting, you�re going to want to, you know, rewind it, listen to it again sitting in front of your computer and poking at this as I talk about what this command does and how useful it is.  Because it allows you to know exactly what�s going on with this lower level networking in real-time in your computer.  This is the way...



LEO:  I�ll tell you what.  I�ll run the UNIX version on my Mac, and everybody else run the Windows version, and I�ll tell you if there�s any differences on here.



STEVE:  Well, and for that reason over on UNIX you want to fire up your terminal application.



LEO:  I�ve got it up here, yup.



STEVE:  And in UNIX the so-called �sockets,� which is the term that UNIX originated, over in UNIX it�s used much more extensively than it is in Windows.  There are some things called �domain sockets.�  And if you just do the Netstat command on a Mac, you�ll see...



LEO:  Oh, boy.



STEVE:  ...way more stuff, yes, than you want.  So what you need to do on a Mac is you need � there�s an F command line option.  So you�d say netstat, space, then dash, F-I-N-E-T [netstat �finet].  You can put a space between the F and the INET if you want to.  INET�s short for Internet.  So if you do netstat, then space, dash F-I-N-E-T, that says only show the Internet socket activity, not the whole UNIX � don�t include the UNIX sockets, which is not stuff that we really have any interest in at all.



LEO:  Right.



STEVE:  So everything that I�m talking about � well, and also I should say that the command lines � I�m going to focus on the Windows side because we have a, you know, a�huge...



LEO:  That�s where most of our listeners are, yeah.



STEVE:  It�s where most of our listeners are.  Also over on the Mac, if you have the terminal window open, you can say man space netstat.  M-A-N, short for manual, man space netstat [man netstat], that�ll give you a screen of � basically that will help you translate the things I�m talking about specifically over into the UNIX side.  And of course this works for FreeBSD and Linux listeners...



LEO:  As well as Mac, yup.



STEVE:  ...also, right.



LEO:  All right.  So we�ll do the Windows version here.



STEVE:  Yes.



LEO:  Now, first of all, you�ve got to get your command line up by clicking Start, entering Run, and typing �netstat.�  Or actually type command, I�m sorry, CMD, and then you�ll have a command line window, so you can do...



STEVE:  Either that or, in Windows users, all Windows systems start out with an option under the start menu that says MS-DOS Prompt.  And so probably the easiest thing for people to do is just hit Start, go to Programs � I think it�s under Accessories.



LEO:  I don�t have that.  You have that?  MS-DOS Start, really?  Oh, yeah.



STEVE:  No, no, MS-DOS Prompt.



LEO:  I have Command Prompt because it isn�t MS-DOS in XP.



STEVE:  Or Command Prompt.



LEO:  Right, right, right.



STEVE:  Yeah.  They�ve also changed the name from time to�time.



LEO:  There�s no MS-DOS anymore, that�s why.



STEVE:  And so that will bring up a window.  Now, you want to start off also with sizing this correctly.  Sometimes the window is sizable, in which case you want to probably stretch it out so it�s the full height of your screen.  When you are doing these things with Netstat, depending upon how much network activity you have, Netstat will be doing sort of a log of everything happening on your machine, which can get long.



So the first thing you want to do is to stretch the window out.  But you may want to be able to scroll back further if this window scrolls a lot.  So the way you can do that is click on the little icon in Windows on the upper left-hand side of the window, and then choose Properties.  Then there�s a tab there, the Layout tab, shows both a screen buffer and a window size.  If you change your screen buffer�� this is in the number of lines � change that to maybe, I mean, it can be big.  Set it to 1,000 while you�re doing this.  That way you�ll be able to scroll way back as far as you need to if the stuff we�re doing scrolls off the window.  So that will allow you now � so basically you�ve got now a command window opened which allows you to enter commands.  And we�ve got the window, you know, so that it�s tall on your screen.  And if you set your screen buffer size to, like, 1,000, and then clicked okay a few times to make it happy, you should now be able to scroll way back into the�past.



LEO:  Yes.



STEVE:  For people who haven�t used this command window a lot before, you want to know how to clear it in order to � from time to time, like before you issue a command, you might want to just get rid of all of the history that has scrolled by.  The command for that is CLS.  That�s the clear screen command.  So CLS, and then press Enter, will wipe that window clean and get ready for your next command.



So, okay.  If you just type �netstat� now and hit Enter, you�ll get sort of a � begin to get comfortable with what�s going on.  And I will encourage you not, you know, encourage everyone not to freak out.  I mean, it looks complicated, and it�s got all kinds of stuff going on, but we�re going to sort of tackle this step by step and simplify this so that it�s pretty clear what�s happening.



LEO:  Look, I actually � I can see that I�m connected to Irvine, which I presume is you.



STEVE:  Oh, yeah, I�m sure it is.  And, see, that�s what�s so cool is that, say for example that you were going over to a friend�s house because something was wrong with their computer, their modem light was flashing all the time, you know, their cable modem or DSL, or had gotten really slow, I mean, and the first thing you want to know is, okay, what�s happening here with this computer?



LEO:  Should I be concerned that I�m connected to France?  Maybe we�ll get to that a little later on.



STEVE:  Well, I mean, and this is the beauty, is remember that we�re not here to, like, scare people.  We�re here to give people tools that they can use to answer these questions themselves.  I would say, Leo, that if you didn�t expect to be connected to France, then you will want to find out why you are.



LEO:  Why I am.



STEVE:  So, for example, right now you could type �netstat b.�  B stands for binary.  That will add to the display the names of the programs that are responsible for every line in that Netstat display.



LEO:  Ah, okay.



STEVE:  And what that�ll allow you to do is to find out which executable program in your system...



LEO:  Skype.



STEVE:  Oh.  Interesting.



LEO:  Am I a supernode?  Is that what that means?



STEVE:  Well, let�s hope not.  No, I would think you�re behind a router, so...



LEO:  I am.



STEVE:  Or you�ve opened a hole.



LEO:  I�ve opened up a port in order to make this usable.  And I see that somebody in Grenoble, France, is using me, as well as LAX, San Francisco � I think probably these are you, they�re Comcast.net.  I don�t � all of this is on Skype.  This is interesting.



STEVE:  Well, aren�t you glad about Netstat.  I couldn�t ask for a better example, Leo.



LEO:  I will take a screenshot and show people because�that�s...



STEVE:  People are going to think we�re making this up, or we set this up.



LEO:  I�m not.



STEVE:  No, I know.  And in fact I once went to a home of some people who were having some serious problems with their machine.  I think I referred to them before.  There was a machine that was sending traffic to us, located in Irvine.  I went through the FBI to get their name and address, and the FBI contacted them and said, would you mind if one of our friends came over and took a look at your computer?



First thing I did was open a DOS box, type �netstat,� and it was like, oh, my God.  I mean, they had so much crud in their machine, and a whole bunch of connections to 6667, which is the default IRC port.  So, for example, if you say �netstat,� and you see 6667s, there�s a very good chance that � and you�re not knowingly using IRC � there�s a chance that you�ve got an IRC trojan that has connected to a remote IRC server and is connected right now and waiting to receive commands, following, you know, exactly what we were talking about before about the whole bot armies and bot fleets and how all that works.



So the beauty of this is it�s built into the system, it�s always there, and you don�t have to load or install or bring any software with you if you want to find out what some computer is doing.



So in general the Netstat display has four columns.  The leftmost column says Proto, and that�s short for protocol.  We�ve talked about TCP and UDP.  Netstat always sorts the protocols so that all the TCP connections and activities are shown first, followed by UDP.  The second column is the Local Address column.  Now, we�ve talked about how a socket is an IP address and a port.  So what you�ll see there is either an IP address, you know, the standard something.something.something.something.  For example, if we�re looking at the Local column, you might see your machine�s own IP address, 192.168.something, you know, .0.1 or whatever, then a colon and the port number.  So the way the so-called �socket� is displayed, the socket endpoint, to use the full terminology, is an IP address and colon and then the port number that is involved in that.  You may see things that say 127.0.0.1.  We talked about that with regard to the hosts file recently.  That�s called the Localhost IP.  That�s sort of an abbreviation or just another IP that represents your own machine.



LEO:  I see that a lot on the Mac.  I don�t see it on my Windows machine particularly.



STEVE:  Yeah.  Also over on the Local side you might see 0.0.0.0.  That�s actually a wildcard IP.  That means, you know, any IP.  So, for example, if you have some lines that show LISTENING when it displays � actually, if you just type �netstat,� like even ��b,� you won�t see any lines that show LISTENING because the normal Netstat command just all by itself only shows you either existing or recently closed connections.  You need to say ��a.�  �A� stands for all.  Then you�ll see � so if you say �netstat -a,� or over on the Mac you�d say �netstat -finet� and then � -a,� now you will also see any listening sockets.  These are...



LEO:  That�s a lot longer list, too.



STEVE:  Yeah, it is a lot longer list.  And these are so-called �open ports.�  These are ports on your machine due to processes running in your machine which have opened ports and are looking for incoming traffic.  Now, people should not freak out because this, remember, is the machine itself, that�s inside the firewall that might be running on your machine, and hopefully is if you don�t have any other protection, and it�s inside your NAT router.  So the fact that these are open listening ports on your computer does not mean that they are exposed to the public Internet.



LEO:  Let�s mention a couple that you might see a lot of  For instance, svchost.exe.  I see that all the time when I run software firewalls.  They say svchost is trying to connect.  What is that? 



STEVE:  That�s a general sort of a generic hosting process that contains a whole collection of Windows services.



LEO:  Ah.



STEVE:  So it�s an executable that is sort of like a potpourri.  The way Windows works, you�re able to have multiple services in a single executable.  So it might be DNS.  It might be your NetBIOS technology.  It could be any of the services that you see when you enumerate all of the services your system is running.  Many of them are sort of collected inside a single svchost.exe file. 



LEO:  Right.  And there�s also LSASS.  You see a lot of�that.



STEVE:  Yes.  That�s the licensing security service service.



LEO:  And of course Sasser took advantage of that and named itself LSSASS.



STEVE:  Right, right.



LEO:  And that was a sign you had Sasser.  So let�s hope you don�t see that.



STEVE:  In Windows you�ll often see port 135, so you�ll see something that is :135.  I ought to also mention, I mean, I intended to sort of get to the...



LEO:  Oh, I�m sorry, I interrupted you, yeah.  We�re going to do the columns.  We were doing the columns across.



STEVE:  Well, yeah, because then we�ll talk about command line options.



LEO:  Okay.



STEVE:  Because you�re probably seeing things like DNS and NETBIOS dot, you know, various English versions.  If you do �n, �n� stands for �numeric.�  Then you�ll see these things in numeric form rather than having them sort of trans- Windows translating them into something easier.  And I don�t know, I�m just comfortable with port numbers because I know 53 is DNS, and 135 is RPC and so forth.



LEO:  Right, right.



STEVE:  Okay.  So we have the first column is protocols, second column is the local endpoint, and the third column is the remote or the foreign address.  Well, that�s the one that�s really interesting because this � and I�m sure this is where you�ve been seeing France and Irvine and San Francisco and so forth.  These are the IP and port to which your computer is connected at the moment.  You�ll see that if you do a netstat �a for all, which will show you listening, then you�ll see 0.0.0.0: and a port, meaning that it will accept any � it will accept a connection incoming from any IP, 0.0.0.0 being sort of a wildcard, sort of like *.* is in our file system.



And then the final column is called State, which is the state that this connection or potential connection is in.  Most common states are LISTENING, meaning that you have an, I mean, a classic open port listening for any incoming traffic.  If you actually have connections established, that is, you know, I mean, that�s what was � we�ve talked about the TCP three-way handshake that establishes a connection.  And so now you have an agreement between your local machine and some remote machine.  Then the word ESTABLISHED will appear in that column, meaning that that is an actual connection right now that exists between your machine and that remote IP and port that is able to exchange traffic.  And sometimes people will see TIME_WAIT.  TIME_WAIT is a state that TCP goes into at the end of an established connection, as it�s being torn down, that prevents packets coming in late from confusing the system.  So it�s sort of like a delay before those endpoints can be used again.  It sort of holds that connection out of use to allow the packets that might be still floating around the Internet to die or no longer arrive before it will sort of release that for re-use so that a new connection isn�t confused by an old connection�s, you know, similar endpoint packets coming�along.



So generally you�ll see LISTENING, meaning you�ve got open ports and something is listening for incoming packets to accept a connection; ESTABLISHED, for an existing connection; or TIME_WAIT for one that was just connected but is no longer connected.  Then less common are sort of more of the TCP plumbing.  Sometimes you might see SYN_RECEIVED or SYN_SENT that literally refers to the SYN packets we�ve talked about often that are involved in establishing a connection.  So that means that a connection is in the process of being set up.  And normally that happens so quickly that you won�t see it in a Netstat command.  But I�ve seen them, and in fact on a busy server you typically will see them.  You may also...



LEO:  Now, Netstat isn�t always updating itself, though,�right?



STEVE:  Actually Netstat doesn�t.  It takes a snapshot right then.  There is a command line option that � I think it�s �i� for interval � that allows you to say, you know, do�this...



LEO:  Keeping doing it.



STEVE:  Yeah, exactly, do it repetitively.  But that�s one of the cool things about TCPView.  Basically everything I�ve talked about here applies to the GUI version of this that Mark wrote at Sysinternals, TCPView.  And it has a very nice feature where it does automatically update itself, I think it�s about every five seconds.  And you can control that interval.  And even cooler is it will highlight with a green and a red highlight on the line as new things are added and as old things go away, to sort of draw your eye to the changes that are occurring in this list.



So one thing that people could do if they wanted to experiment with this would be to open their web browser and do a little bit of web surfing, maybe jump to a few different sites, and then do a Netstat command over in their DOS box.  And you�ll suddenly see a bunch of stuff that wasn�t there before.  You�ll see established connections and time_wait, that is previously established connections, right there in the display.  And you�ll see the IP address and port, or maybe even the host name, that is the domain name and port, if the system is looking that up for you.



So the final thing you may see, there�s one fifth column called PID, which is the Process ID.  People who have used Task Manager before may have turned on the column that shows you the process ID of the various programs.  This is a sort of a universal token which the system uses to identify and essentially to number all the processes that are running in it at any given time.  There are some command line options to Netstat which produce additional information we�ll talk about next.  And that also causes this PID, the Process ID column, to display, although it�s not particularly useful information unless you have some use for, like, associating that with the Task Manager display.



LEO:  Yeah, it�s more useful to UNIX folks who can then list processes and kill processes and that kind of stuff.



STEVE:  Right.  So in terms of command line options, so now we�ve got a DOS box, we�ve got the window open, we�ve got our scroll so we can scroll back if this thing is long.  You can always, over on the Windows side, you can always say �netstat /?,� sort of the standard tell me, you know, what commands to use, so the way of asking for, like, online help for the Netstat command.  This is important because, for example, Windows 2000 has a different set of commands than Windows XP does.  XP has added some really nice new features.  And since most people are over on XP, that�s where I�m focusing.  And so if this doesn�t work, if some of the things I�m talking about, for example, Windows 2000 does not show you the processes associated with the line items that Netstat has.  There is no �b for binaries, so you�re not able to do that.  So you might want, over on Windows 2000, do �netstat /?,� and that will show you which command line options are available in your version of Netstat.  And this even works on Windows 98.  I mean, Netstat has always been there since the TCP/IP stack arrived over on Windows.��So...



LEO:  It�s interesting because Windows has a number of command line utilities, and always has, like ipconfig and Netstat, that are very useful; but I think people don�t really know they exist unless they have to troubleshoot a network connection or something like that.



STEVE:  Right.  Well, it�s funny, too, because, I mean, I had never given the �man netstat� command to a Mac.



LEO:  Isn�t that great.



STEVE:  And I was thinking, gee, I wonder, you know, does the Mac have the full set of manuals?  And...



LEO:  Well, it doesn�t have the full set, but it has a lot of manuals for a lot of...



STEVE:  Yeah.



LEO:  Yeah, it�s very handy because you can always find out more about a program.



STEVE:  Right.  So over on Netstat we�ve talked about the �a command, �a� stands for �all,� whereas where Netstat normally shows you only established connections, in order to find out what ports are listening and what services are associated with those listening ports, you need to add an �a� to the command line options, �a� for �all,� and then you�ll see a lot more information.  The �b command for over on Windows XP also says show me which binaries, that is, the executables, are responsible on a line-by-line basis for being involved with this particular element of the stack, either something listening or something that has a connection in your machine.  And that�s very valuable because it�ll give you the application name.  It�s good if you at least know what it is.  For example, Leo, I�m sure you saw Skype.exe.



LEO:  Yeah, I mean, that�s pretty obvious.



STEVE:  Yeah, exactly, you know what Skype is.  Now, on the other hand, you�re not sure why it seems to be connecting all over the planet.



LEO:  But that�s a start.  I mean, at least I know who�s connecting.



STEVE:  Exactly.



LEO:  Can you spoof that information?  I mean, I guess you could if you named yourself Skype.exe.



STEVE:  Exactly.  In fact, that was what my original LeakTest program, you know, I wrote the first firewall leak tester that anyone ever created, just called it LeakTest.  And what I realized was the firewalls were � the early firewalls were saying, hey, we�re going to make sure that only applications you permit are able to use your Internet connection.  It�s like, well, that�s good.  But at the time there was only one firewall, that was also at the time my favorite firewall, ZoneAlarm.  Of course that�s no longer true.  Now I�m a Kerio fan.  But only ZoneAlarm was actually checking basically a cryptographic fingerprint of the application.  They were doing a hash to make sure that it really was the same application you had given permission to.  So all malware had to do was call itself Explorer.exe or, you know, or IExplorer.exe, to masquerade as Internet Explorer.  Everyone would have given Internet Explorer through their firewall, or they wouldn�t be able to web�surf.



And so anyway, my little LeakTest became very popular.  And within a very short period of time every firewall manufacturer was virtually forced by their users to add this feature.  And now no firewall doesn�t check to make sure it�s really the application that you gave permission to.



LEO:  So presumably, because of fingerprinting, when Netstat says it�s Skype, it is Skype.



STEVE:  Actually, no.  Fingerprinting wouldn�t prevent that forgery at this level.  It would prevent it from getting out of your firewall if you were running a personal firewall on your machine.



LEO:  So there is no protection that this is actually Skype when I�m looking at it in Netstat.



STEVE:  That is true.



LEO:  Okay.



STEVE:  That is true.  For example, what you could do is, well, for one thing, if you weren�t running Skype and it said Skype is doing this, it�s like, uh, I don�t think so.



LEO:  Yeah, I don�t have it.



STEVE:  And what you could do is � but don�t do it now, Leo, because we are using Skype...



LEO:  Like before, you mean.



STEVE:  You could close Skype and then run Netstat again...



LEO:  And see what happened, right.



STEVE:  Exactly, see if all the Skype entries went away, as you would expect them to.  So, I mean, this is an incredibly powerful tool that I�m really glad we�re talking about because, for people who want to know what their computer is doing, this does it.



So just to finish with these couple last command line options, �a� for all; �b� for showing binaries; �n,� instead of the normal display, it tries to do DNS lookups for the IPs, which is useful by default unless you want to see what the actual IP and port number is.  You can get that by saying �n,� which is short for numeric.  So that says give me this display in just numeric form, numeric IPs and ports, instead of, you know, friendly human domain names and English versions of the port, like DNS instead of 53, for�example.



LEO:  Is there any reason, any time you�d prefer that over the English language?



STEVE:  I actually do.  I always...



LEO:  You do because you know the numbers.



STEVE:  Exactly.  But so anyway, it�s there as an option.



LEO:  Even if you know the numbers, though, you don�t know some of the Internet addresses.  So the reverse lookup that it does on that is very useful.



STEVE:  Very good point, yes.



LEO:  Yeah, yeah.



STEVE:  And the last one is a �v� option.  Now, I couldn�t think of what �v� could possibly stand for, except perhaps very much more than you ever wanted to know.



LEO:  Verbose is what it stands for.



STEVE:  There you go, that�s exactly what it�s for, yes.



LEO:  Yeah.  That�s a lot of UNIX commands.  It�s noisy.  The noisy version.



STEVE:  Oh.  Well, in fact, oh, in Windows XP it is that to an extreme.  What it does is it shows you, not only which executable is behind what�s going on, but then in reverse order it shows you the hierarchy of internal Windows modules which have been invoked in a stack, in a chain essentially, all the way back down to the lowest level it can get.  So, for example, Skype is probably invoking something else, which is invoking something else, which is invoking something else.  So I would imagine � I�m not doing it.  I�m sure you can, Leo, if you were to do...



LEO:  I�m doing it right now, and it�s gone on for quite a�while.



STEVE:  Yeah.  It just � it�s, like I said, very much more than you ever wanted to know.  And I don�t really think that�s very useful, except for real serious computer guys.  If you didn�t recognize what your application was by name, it might be that something it was calling would be more familiar, although you�d still need to know what that main binary was that was, you know, starting up all of this�traffic.



LEO:  Right.



STEVE:  So that would be very useful.  So you can also concatenate these.  For example, you could say �netstat abn,� or �abnv� just all running together, in order to put those together.  Or probably just �ab.�  I would think that�s probably going to be the most popular collection because that�s going to give you all of what�s happening and tell you what the binaries are.  So you�ll be able to see who is doing connections, who is listening to ports, and what�s going on.



LEO:  Yeah, that�s the one I use pretty much exclusively.



STEVE:  Yep, �netstat ab.�



LEO:  Space dash ab.



STEVE:  Yes, exactly.  I think slash or dash, both work.



LEO:  Oh, okay.



STEVE:  So either way.  Anyway, there is a short course on Netstat command, a very useful command which can be used � you know, again, no software needs to be installed.  It�s available in any machine you approach.  You want to know what�s going on, this thing will tell you.  And again, remember that listening ports are ports that are open on your machine internally, but not any which are exposed externally.  If you wanted to find out for sure, you could use ShieldsUP!, you know, at my GRC.com.  You�re able to use the custom port probe feature that GRC has.  You can put in any ports that you want specifically checked, and I will send from GRC servers probes back to your IP at those ports and tell you whether they�re open or closed.  So you�re able to do a custom port probe that way.  Or just do the normal full service port scan, which doesn�t take very long, that tests ports 1 through 1056, I think it is, that I�m testing.



So again, ports that are shown internally are not necessarily exposed, but they do represent something in your machine that would like to have the opportunity to talk on the Internet.  So, for example, you could have a trojan in your machine which is not detected by any external software, like that ShieldsUP! won�t see because you�re being protected by a router or by your software firewall.  Nonetheless, you�ve got a trojan, you might have a trojan which has opened a port, a back door, that is wanting and hoping for someone to connect to it.



LEO:  So it would be listening, then.



STEVE:  So it would be listening.  And so this is still very useful information because it shows you what�s going on that would like to be having a conversation.  Even though it can�t, you may want to get rid of it.  It may be something you don�t want in your computer.  So again, this Netstat command is, like, the way to do that.



I also fired up Kerio, the Kerio firewall, briefly because I was sure that I remembered that it had built in its own very nice connection monitor.  And I wanted just to verify that it did, and indeed it does.  In the Overview there is a Connections tab.  And Kerio itself will show you all of the current connections that it has through itself.  So there�s another way, if you happen to be using Kerio and it�s installed, to see what�s going on.



LEO:  That�s free as well, from Sunbelt-software.com.



STEVE:  Exactly.  But again, it�s something that you have to install, and the Netstat command is sort of a superset of that because it�ll show even things that are listening and haven�t yet been able to establish a connection.



LEO:  Now, here�s a question for you.  If I have a rootkit, like the Sony rootkit, and it�s listening, is it visible in�Netstat?



STEVE:  Well, I don�t think the Sony rootkit was opening a port and listening.  So I wouldn�t say that you could count on Netstat, for example, like to be a comprehensive process list that would show you all the processes running.



LEO:  Well, I know in fact a rootkit would not show up in the process list.  I wonder if it would show up, though, in the Netstat list as making a connection.



STEVE:  Well...



LEO:  I guess it must have had its own stack.  If it had its own stack you wouldn�t see it.



STEVE:  It would be a huge lot of work to circumvent the stack and get down to the adapter, but you certainly could.  For example, there are network monitoring tools which install a low-level driver that allows them � that allow them to sniff the network traffic.  And they don�t show in�Netstat.



LEO:  Right.



STEVE:  So it is really for things that are playing by the rules and behaving themselves.  And I think I see why you�ve raised the point, Leo, and it�s a very good one.  This is not a guaranteed display of absolutely everything going on.  Because it�s running in � and this is, you know, one of our standard laws of security � because it�s running in the same computer that you�re questioning whether something malicious might also be sharing.  There�s just � there�s no way you can ever trust anything in the same machine as the one that might be hosting something malicious.  There just isn�t a�way.



LEO:  And that�s why people will use programs like Nmap from outside the machine to check those kinds of connections.



STEVE:  Well, yes.  And in fact we talked last week about the idea of � and this was one of the questions raised in last week�s Q&A.  Someone was asking, you know, how can I be really sure about what�s going on?  And the answer was, well, you can use a program like Netstat, a command like Netstat, to probably see what�s going on.  And it�s certainly super useful in 99.999 percent of the cases.  But to really know, you would have to be running your machine�s traffic through another machine and be watching the traffic there.  Or perhaps have a an external firewall or router which is showing you what connections and traffic it has alive and open at any given time.  But you lose then, as soon as you step outside the machine, you lose the ability to know which programs are running inside your machine.



LEO:  Right.



STEVE:  And so I�ll say lastly that Sysinternals has this program, TCPView, which is freeware.  There�s a Pro version which is not free but not very expensive.  If you love TCPView you can look and see what the additional features of TCPView Pro are.  One of them, for example, is that in earlier versions of the OSes � 95, 98, I think in 2000 � there is � the TCPView won�t show you the processes running.  TCPView Pro does.  Which is, you know, as we�ve said, is very useful to see who is listening, who is opening ports and established connections.  TCPView Pro will do that for all versions of Windows operating systems.  And again, it�s, you know, if you get comfortable with Netstat, the actual command line that we�ve been talking about, and then run TCPView, even the freeware version, you�ll see it�s exactly the same sort of display.  It�s very comfortable.  And it allows you just to kind of keep an eye on what�s going on in your computer from moment to moment.  And very handy.



LEO:  If you want to keep an eye on what�s going on in your computer all the time, may I recommend our lovely sponsor, the Astaro Corporation, makers of the Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, viruses, hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in a very easy-to-use, high-performance appliance, I want you to contact Astaro, Astaro.com, or call 877-4AS-TARO.  You can schedule a free trial of the Astaro Security Gateway appliance in your business.  And of course if you�re a noncommercial user you can download the software, ASG for home use, at the same site, Astaro.com.  We thank them for their support.



And as long as we�re giving plugs out, we can�t forget to plug our good friends at GRC.com.  That�s Steve�s site.  You know, you were talking about how Mark and Sysinternals have been giving away all this great software, and everybody loves it.  I was just thinking you�ve done much the same thing.  You have a lot of very useful free utilities that you�ve put out there.



STEVE:  Yeah, well, you know, I�ve written things that there�s been a need for.  There was, you know, when firewalls weren�t checking, as we were talking before, that the real program was what was happening, the program might be masquerading as a different filename, I wrote LeakTest.



LEO:  Right.



STEVE:  When I discovered that Aureate spyware, I wrote OptOut to be, you know, the very first spyware eliminator, detector and eliminator.  And then of course through the years I�ve continued to write freeware...



LEO:  Just more and more, yeah.



STEVE:  Exactly.



LEO:  DCOMbobulator, Shoot The Messenger, UnPlug n' Pray...



STEVE:  Well, in fact, you and I first met at TechTV when I had TIP, Trouble In Paradise.



LEO:  Yeah, the Click of Death.



STEVE:  The Click of Death for the Iomega cartridges.



LEO:  You�ve always been a boon.  Anybody who wants to know more and should � everybody who�s testing their security should be trying it through ShieldsUP!.  It�s GRC.com, you�ll see a link there for Shields UP!.  And of course Steve�s bread and butter, the fabulous SpinRite, which is everybody, including me personally, my favorite disk recovery and maintenance utility.  You know, if you�re interested in information, you know, it�s fun to look at Netstat; but you want to find out more about what your hard drive�s doing, just run SpinRite.  Unbelievable.  You...



STEVE:  There�s a lot of information there.



LEO:  You showed me, and this is something everybody should try out, just watch how many error corrections a second your hard drive is doing.



STEVE:  Yes.



LEO:  It�s a lot.



STEVE:  Well, and actually it�s fun because the ECC used to be something that was only being done in the event of, like, a problem with a sector that needed to be relocated.  Now drives� density has gotten so high that ECC is happening on the fly all the time.



LEO:  All the time.



STEVE:  But what�s neat is that it creates a very useful early warning system.  If the rate, that is, the level of ECC started to increase over what it was when the drive was new, that would be an early red flag that the drive was having more trouble.



LEO:  Certainly something, yeah...



STEVE:  And SpinRite will show that to you.



LEO:  It�s interesting, but it�s a great diagnostic.  SpinRite is really, I mean, anybody who works with hard drives knows, I don�t have to tell them.  But for those of you who are new to this or have a problem hard drive that you want to recover or just want to know more, SpinRite.info.  That�s all the testimonials and a link to where you can get a copy of SpinRite for yourself from GRC.com.



We have come to the end of, I think, one of the most interesting shows.  I think Netstat is such a useful tool.  And I love tools where you can investigate your system.  I know users do, too.



STEVE:  Well, it�s a little daunting when you first give the command.  But if people will not run away from the screen, just sort of sit there and go, okay, now, wait � well, and in fact, I think if people do �netstat �ab,� they�re going to see a bunch of stuff.  And just like you did, Leo, it�s like, okay...



LEO:  Whoa, what�s France?



STEVE:  ...what�s going on?



LEO:  Why is France connecting with me?  No, but exactly.  And you know, that�s what we�re all about.  This show and, in fact, all of the shows on TWiT.tv are not aimed at people who just want to use their computer and not curious about it, not interested in how it�s working or what it�s doing.  But we�re aimed at people who are curious.  And if you�re interested in your machine, this is just a great little tool.  I think everybody who listens will want to know more.



Thank you, Steve.  Reminder, we�ve got a brand new site, TWiT.tv, all new, fresh, and shiny, just for you.  The paint is dry.



STEVE:  It looks really nice.  Really nice, Leo.



LEO:  Yeah, and it�s much easier, I think, now to find the podcasts.  And listen to them right on the site with a great Flash player that was designed by Mike Hogue.  So thank you, Mike, for that.  And there�s also the donation buttons, and we certainly do appreciate your donations.  They are what keeps this podcast afloat.  Just to make it clear, you know, we do have advertising.  That money goes to the podcasters, the contributors, as salaries.  The money that you donate goes to infrastructure, things like the web design, the bandwidth, the web hosting, the rental for the offices, the equipment, all of that stuff.  And those expenses are not minuscule, trust me.  We really � your contribution has made this network possible, and we really do thank you for that.  TWiT.tv.



And now, my friends, the time has come to say goodnight to l little Stevie Gibson.



STEVE:  For one week.



LEO:  For one week.  Next week?



STEVE:  Next week is we�re going to plow into a really interesting topic, which is virtual machine technology.



LEO:  Oh, I�m excited, we�re going to begin that.  That�s going to be a two-parter, isn�t it.



STEVE:  It�s going to be a multi-parter because it�s extremely useful, and I want to lay down some foundation.  Again, I want to approach this and really fully cover it because, for the growing concern of security, virtual machine technology allows true sandboxing and encapsulation of potentially dangerous Internet experiences in a way that won�t allow anything that happens to affect anything outside the sandbox.  Nothing can get to your machine.  So some really cool stuff there.  And we�ll start talking about it next week.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#50

DATE:		July 27, 2006

TITLE:		Virtual Machine History & Technology

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-050.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss the historical beginnings of Virtual Machine technology, from the 40-year-old IBM VM/360 operating system through virtual machine language emulators and today�s VMware and Virtual PC solutions.  This kicks off a multi-episode discussion of the tremendous security benefits and practical uses of modern day Virtual Machine technology.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 50 for July�27, 2006:  Introduction to Virtualization.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



We�re hitting the half-century mark, ladies and gentlemen, Episode 50 of Security Now!.  Steve Gibson, it�s good to have you on again.



STEVE GIBSON:  Hey, Leo.



LEO:  Can you believe it?  We�ve made it to 50 episodes.



STEVE:  Yeah.  I mean, it doesn�t feel like a year ago that we began.



LEO:  No.  Is it exactly � have we taken any time off?



STEVE:  No.



LEO:  No.  So we still have two weeks to go for our anniversary.



STEVE:  Yup.



LEO:  It is hard to believe.  And as you mentioned several times, we weren�t sure there was enough material.  Little did we know.  There�s plenty of material.



STEVE:  Yeah, there is.  Well, and we get so many great feedback from our users.  I�ve got, you know, questions coming out my ears.  So in fact at some point I�m feeling like we�re falling behind with our Q&A stuff.  We may just switch to a � you know, and we get such great feedback from the Q&A episodes.  People really enjoy the breadth of topics that we cover in one hour, or however long it ends up being.  So we may end up just do, you know, maybe switch from mod 4 to mod 1 for a while, and do a...



LEO:  Catch up.



STEVE:  And do some catch-up, yeah.



LEO:  Yeah, that�s a great idea.  Speaking of emails, we got one from Randal Schwartz, who is a good friend, the author of �Learning Perl,� the geek cruise guy.  And he listens to the show avidly.  And because he�s very active in the security community, he�s kind of a great guy to have listen and get his notes to us.  And he made a note, which is something I had never heard of, but he just wanted to point it out, is that, you know, I was saying that ports above 1024 were, you know, non-canonical, and the 1024 and below were the kind of traditionally accepted ports.  He said actually it�s from 1000 to 1024 is also considered � what did he say?  It�s because some people use decimal and some people use binary that you have to be careful.



STEVE:  It�s interesting.  It did sound like...



LEO:  I had never thought of that.



STEVE:  It sounded like it was the classic difference between a K.  Is a K actually 1000, or is it, you know, a binary K at 1024?



LEO:  So if you want to use a canonical port, if you want to use an official port, the safest procedure is not to use something between 1000 and 1024 but to use something below�1000.



STEVE:  Well, I can...



LEO:  Then you�re sure that everybody will see that as a canonical port.



STEVE:  Yeah, I can definitely, I mean, definitely tell you that my experience has been 1024.  That�s where � it�s at 1024 that machines begin to assign ephemeral ports, the ones that clients are generally being given.  So...



LEO:  It may be some older or oddball software, but it�s just something to be aware of.  And we just � I�m glad Randal�s listening because he keeps us honest.



STEVE:  Yeah.



LEO:  So what are we covering this week, Mr. G?



STEVE:  Well, this is the beginning of a multi-week series on virtual machine technology, VM, virtual machines.



LEO:  That�s very hot right now because Intel�s touting it.  All their new core chips support it in hardware.  And of course but there�s programs, software like VMware has been around for a while.  Microsoft�s own Virtual PC uses it;�right?



STEVE:  Yeah, well, I want to clarify and demystify that.  What�s really interesting is that VM began 40 years ago.  In 1960 IBM had VM/360, which was a virtual machine technology for the original IBM 360 machine.  So this notion of virtual machines is not new.  In fact, it�s old.  And...



LEO:  It was something that the big mainframes always could�do.



STEVE:  Well, exactly.  And then it sort of went away in the �80s and �90s.  Now we�re seeing a resurgence of the technology for very different reasons.  And as often happens, you know, the capability of our hardware has grown so much that things that weren�t possible or practical before have now become possible and practical.  You know, so we�ve got super fast machines.  We�ve got much more RAM than we used to have in machines.  And we�ve got massive hard drives which have enabled this notion of sort of a machine within a machine.



LEO:  Why don�t you explain what virtualization is?  And then we can talk about � there�s a real � there is a reason�we�re talking about this on Security Now!.  There�s a�real security use for this.  But first of all, what is�virtualization?



STEVE:  Yes.  And for that reason I wanted to really lay, as I always like to do, a firm foundation of definitions and understanding so that we have some jargon that we can refer to, and that later when I say, you know, this really works for security, there�ll be a reason for understanding why it is that it really works for security, rather than just going, oh, okay, I hope that works.



The whole notion of virtualization is the idea of some sort of a layer.  Layers come in many shapes and sizes.  The most common, perhaps, notion of virtualization is one flavor of it called �emulation,� where you�ve got a, for example, a computer running an emulator, which is inherently pretending to be something else.  In other words, say that you had � well, in fact I guess the Mac has done this when they moved from one chip to another.  Wasn�t there an emulation of...



LEO:  That�s right.



STEVE:  ...of one family of chips on another?



LEO:  That�s exactly right.  They were able to run the old � well, they�re doing it right now, of course, with the Rosetta technology, which...



STEVE:  Over on the Intel platform.



LEO:  On the Intel platform.



STEVE:  They�re emulating the PowerPC chip.



LEO:  Yeah.



STEVE:  And so that�s actually a virtual machine.  I mean, by definition it is like a virtual chip.  The software running, the older Mac, you know, G4, G5 PowerPC software, doesn�t know that it�s not being executed by a PowerPC.  In�fact...



LEO:  Now, they�ve also in a way done this with operating systems.  When they went from OS 9 to OS X, they were able to continue to support OS 9 software by running OS 9 in a machine.  So it doesn�t have to just be emulating another chip.  It could be emulating another environment; right?



STEVE:  Well, absolutely.  And in fact, you may remember the very � one of the very earlier popularizations in the PC industry, you know, stepping way forward from IBM doing this with VM/360 back in the early �60s, there was something called �UCSD Pascal.�



LEO:  Oh, yeah.



STEVE:  UCSD Pascal was based on what was called a �pmachine,� �P� as in �pseudo,� a pseudomachine.  UCSD Pascal compiled its � it was a Pascal compiler that accepted a Pascal source code.  It compiled it into a virtual machine that never existed.  They literally � they wrote up a specification for, like, okay, if we had a computer, sort of a pseudo chip that executed these instructions, it would be really good for just implementing this language, this Pascal language.  And actually there was even a Fortran compiler that compiled to the same pseudomachine, the same p-code.



LEO:  Same machine, yeah, yeah.



STEVE:  The same p-machine.  And so the idea was, if you wanted to run UCSD Pascal on, like, on an Apple II, you would create a p-machine interpreter.  You would create an interpreter, an emulator, for this virtual chip that no one ever actually made.  And then all the software, I mean, suddenly all the software that had been written for this UCSD Pascal was running all at once on this new chip, only by creating this emulation layer, or this virtualization layer, this virtual machine.



LEO:  That�s how Java works.



STEVE:  Well, yes, exactly.  I was just going to say that then there was also Forth.  Forth was a wacky language which was based on the same sort of pseudomachine, or p-machine, technology, which made it very easy to port from one chip to another.  Sun Microsystems, the Java Virtual Machine is the same thing.  You have a Java runtime.  What the Java runtime does is it is basically a virtual machine that compiled Java code is run against.  So in that case it�s the Java Virtual Machine is interpreting the instructions that have been compiled down into the compiled Java to do the actual work.



LEO:  Unless you think this is old hat, in fact, that�s how Perl 6, the next generation of Perl, is being developed.  They�re developing first a virtual machine called �Parrot,� which will run not only Perl 6 but a variety of other languages.  And it even goes back to � and I know you remember this, Steve, but you�d have to be an oldster to remember � DeskView under DOS, which allowed you to run multiple environments at the same time.  Remember DeskView?



STEVE:  Oh, yeah.  And in fact we talked about it briefly when we were talking about memory management.



LEO:  That�s right.



STEVE:  And we�re going to be talking about that in a few minutes, as a matter of fact.



LEO:  Yeah.



STEVE:  And then, but one last example of contemporary virtual machine, which certainly Windows users are beginning to see, Microsoft initiated a strong move that they called .NET.  This whole Microsoft .NET framework is a � they created what they call a CLI specification, a Common Language Infrastructure.  And then there�s something called the CLR, which is the Common Language Runtime.  And Microsoft succeeded, along with Hewlett-Packard and Intel, in getting ECMA and ISO standardization.  So even now there is still new technology that is just based on software virtualization, software virtual machines that are being used for, like, hosting multiple languages.  And exactly as you said, Leo, the future of Perl is moving in this direction, as well.



LEO:  I think it�s just fascinating.  So and in the past, I think the rap against things like p-code, and even Java to some extent, was that that virtualization slowed it down.  But I think because of hardware support it�s really not much of a penalty anymore.



STEVE:  Well, actually there are two different � two very different types of virtualization.  There is emulation, like we were talking about.  And then there is, exactly as you were saying, a hardware-assisted virtualization.  And that�s the key for security because, well, I guess I shouldn�t say that completely because, of course, Java was created to create a secure sandbox so that Java applications, because they were being emulated, the code itself is not running on the actual hardware.  It�s not actually being executed by the Intel chip.



We�ve talked, for example, about how stack overruns are able to allow a program�s code to be executed by the chip itself.  Well, in an interpreted environment you�re not running on the hardware.  You�re, like, one level removed, and your code is being interpreted by some other software.  If it�s written correctly � and that�s the Achilles heel in any software-based scheme � if it�s written correctly, we know how difficult it is for that simple phrase, if it�s written correctly, to end up being actually true in the real world.  Because in theory, then, the emulator could prevent any sandboxed code from ever having the ability to do anything dangerous.  In reality, it�s very hard to write these things correctly; and we end up with software layers and, as we�ve seen before, the opportunity for some sort of trouble.



LEO:  So when you say �emulation,� you were talking about, for instance, the Apple emulation of the old G5 processor in Intel.  That�s...



STEVE:  Yeah.  Or, well...



LEO:  That�s one way.



STEVE:  And, for example, one of the things that killed off the UCSD Pascal � UCSD Pascal was going strong.  It was a great solution.  It was multiplatform.  I mean, I remember using it on the Apple II.  What came along?  Some guy named Philippe Kahn.



LEO:  And native...



STEVE:  Philippe Kahn had Turbo � Borland International released Turbo Pascal, and it just blew UCSD Pascal into history almost overnight.  First of all, it was less expensive.  But it was...



LEO:  40 bucks.



STEVE:  It was blindingly fast.



LEO:  Yeah.



STEVE:  Well, actually that�s the thing that started the big war between Philippe and Bill Gates was, you know, Bill was selling languages for, I think, like, 499, $500 at the time.  And Philippe came along and thumbed his nose at Microsoft and said here�s a really good Pascal compiler for 40 bucks.



LEO:  I loved Turbo Pascal.  Oh, great program.



STEVE:  And it was screamingly fast because...



LEO:  It compiled instantly.  Instantly.



STEVE:  It compiled to native machine language, not to pcode, which then had to run through a layer of emulation.  And the reason we�re spending so much time talking about this is it is critical to understand where the costs of virtual machine technology comes in, and virtualization.  Inherently there�s something added, something extra added to the system to create this layer of protection, the sandbox, the virtualization.



LEO:  It has to do more work.



STEVE:  Yes.  Well, and it depends upon whether it�s really being done in and by the hardware, or in and by the software.  What we�ve talked about so far is all software emulation and software virtualization, which is very expensive in terms of performance.  Now, with chips getting faster and memory becoming abundant, that�s less of a problem.  On the other hand, when you don�t have virtualization, you�re faster.  Who doesn�t want to be faster?  No matter how fast your chip is, not having something slowing you down is always a better thing.  Which of course is why, you know, the Mac apps are rapidly being recompiled into native Intel code as the Macintosh switches from the PowerPC platform over to the Intel platform.  And you�re going to get, you know, much better performance that�way.



LEO:  Right, right.



STEVE:  So historically what happened is Intel made some advances to their chipset.  Of course, the original PC was hosted on the 8086, which was sort of a 8-bit/16-bit hybrid chip.  It had a 16-bit instruction set, but an 8-bit bus.  And whereas the 8088 was 8-bit all the way.  The change came for the first time with the Intel 8286, which added something in the hardware which radically complicated the chip.  I mean, it went from a small chip and instruction set that anyone could understand to something that began to be really complicated.  It added the so-called �protected mode.�  Protected mode, as opposed to real mode, which was actually named after the fact because that�s what chips always were before, so they had no mode, they were just there.  Protected mode adds a whole bunch of hardware to the chip which begins to create this notion of interprocess isolation.  Rather than all of the programs running in the system sort of sharing memory at once, protected mode protected programs from each other.  It really began to create the notion of a real operating system.  Remember that DOS was sometimes criticized for just how lame it was, I mean, that it was basically just sort of a program loader.



LEO:  It was a pile, with all these programs running against each other.



STEVE:  Yeah, I�m just pissed off that the slashes go the wrong way in DOS.  Because I�m still...



LEO:  That�s another problem.



STEVE:  I�m still doing it wrong.  I�m never going to shake that bad habit.



LEO:  UNIX uses forward slashes, and DOS wants backwards slashes for reasons no one understood.



STEVE:  Yeah, well, just to be different, or who knows.  Anyway, so we really didn�t get the hardware we needed from the 286.  And it wasn�t until the 386 came along that Intel added enough features to basically create virtual machine technology in the hardware.  And this was a huge jump for the industry.  And in fact that�s where we got the memory managers, EMM386...



LEO:  QEMM, yeah.



STEVE:  Exactly, QEMM.  These things � and in fact my favorite was Qualitas.  I can�t remember what that one was called.  It was...



LEO:  Wasn�t that QEMM?



STEVE:  No, that was Quarterdeck.



LEO:  Quarterdeck, that�s right.



STEVE:  Quarterdeck was QEMM.



LEO:  And they did DeskView also.



STEVE:  Yeah.



LEO:  Qualitas.  Oh, yeah...



STEVE:  I think it was EMM386.



LEO:  Yeah, and these would let you use more than 640 kilobytes of memory, in fact even more than a megabyte of�memory.



STEVE:  Well, yeah.  What happened was, machines at the time were having a real problem with the 640-meg limit, which is what the PC had.  You know, it shipped originally with � I think you could get it, actually, with 16 megabytes.  Sometimes you would expand it to 64 megabytes.  But there was a physical limitation.  In fact, Bill Gates famously said � and we can�t really fault him for this because it was so long ago � that no one could ever possibly need more than 640 megabytes...



LEO:  I have that recording somewhere.



STEVE:  ...of memory.  You know.  And in fact, you know, that was...



LEO:  In his defense, I thought the same thing.  It seemed like a lot at the time.



STEVE:  Well, you know, and here I am, still programming in Assembly language, it is a lot.



LEO:  If they would write lean, mean code like you write, it would be.  But nobody does.



STEVE:  Well, of course what happened was machines began to be used for things no one ever envisioned them for � huge�spread...



LEO:  Like graphics.  Yeah, yeah.



STEVE:  Graphics.  And of course media.  And huge spreadsheets that just needed more memory.



LEO:  The splash screen on most applications takes up more than 640K.



STEVE:  It does today, right.  So there were several intermediate stages along the way.  There was this thing called expanded memory, and extended memory, which used a bank-swapping approach, where you�d have a card with extra chips on it, and then you�d programmatically, like, swap that memory in so that it was accessible, and then you�d swap it out.



Well, what happened with the 386 was that the hardware was so advanced that literally different profiles, different configurations of memory could be shown to applications at any given time.  So the first memory managers were emulators of this EMM, the expanded memory and extended memory systems.  And then they began to grow.  And as you said before, Leo, it was � there was TopView that IBM was working on, and then there was DeskView that Quarterdeck created.  And basically they were the first people to begin to move toward using the 386 chip hardware to create hardware virtual machines.



LEO:  386MAX.



STEVE:  That�s the name.  Yay.  That�s...



LEO:  It just came back to me.



STEVE:  Yes.  Bob Smith at Qualitas did 386MAX.



LEO:  That was the best program.  I used � we were all QEMM users until 386MAX came out.  And it was, like, wow.



STEVE:  Well, you�re so right.  In fact, a little bit of a segue � or not segue, an anecdote.  When Microsoft first came out with Windows � I guess it was 3.1, maybe 3.0, because we had Windows 2.0, and then 3.0.  The problem was it only ran with Microsoft�s own memory manager.



LEO:  Which was built in.  You�d run it in configsys.



STEVE:  Well, and back then it was just crappy.  I mean, it had no good options.  With 386-to-the-Max, you were able to fill in from high memory into low.  There were all these extra features that Bob Smith had put into 386-to-the-Max.  I mean, and the world loved them.  Well, so here comes Windows.  And it�s like, no, you have to use ours.  And it just didn�t, I mean, as I said, it just didn�t have any of the features that we all wanted.



So I was writing my weekly TechTalk column for InfoWorld at the time.  And I loved what Microsoft had done for Windows 3.0.  But at the, like, the last paragraph in the column where I raved about it, I said, but I can�t use it.  Because it�s not compatible with 386-to-the-Max, and...



LEO:  And that�s all I�m ever going to use.



STEVE:  So, exactly, so who cares?  The colors are pretty, but oh well.  And so then, but I said, but next week I�m going to talk about Windows 3.0 some more.  So next week I talked about other features and talked about how, you know, other cool things, blah blah blah.  But I said at the end of the column...



LEO:  But I�m not going to use it.



STEVE:  ...but who cares.  You know, no one can really use this thing, this new Windows, because it won�t run on any good memory manager.  So I got a call after the second column came out from a wonderful guy at Microsoft, Brad�Silverberg.



LEO:  Oh, yeah.  He�s still around.



STEVE:  In fact, well, he left Microsoft quite a while ago.  He was originally at Borland and moved over...



LEO:  Right, right.



STEVE:  ...to Microsoft.  And we had a good relationship.  And so he calls me up, and he says, Steve, would you stop writing that, you know, Windows is junk unless it runs on some other memory manager.  And I said, well, but Brad, it is junk unless it�ll run on, you know, on, like, a real memory manager.  And he said, well, I have Bob Smith here with me in the office.



LEO:  Oh.



STEVE:  And he was on speakerphone.  He said, �Say hello, Bob.�  And I heard Bob say, �Hey, hi, Steve.�  I said, �Oh my goodness.  Bob, are you there because of why I think you�re there?  Why I hope you�re there?�  And he said, �Yup,� he said.  And I said, �Have they given you everything you need?�  Because it was, you know, it�s proprietary�information.



LEO:  Right, right.



STEVE:  They wouldn�t tell Bob how to get 386-to-the-Max to run under Windows.  And he said, �Yup, I have everything I need.�  And I said, oh.  I said, �Okay, Brad.  Look.  There�s one more column in the pipeline already that you�re really not going to like.�  But I said, �Then I will tell people...�



LEO:  I�ll fix it after that.



STEVE:  �...that you�ve given Bob Smith what he needs, and that 386-to-the-Max will soon be Windows 3.0 compatible.�



LEO:  Oh, that�s great.



STEVE:  So, I mean, those were painful times back then as we were figuring out, you know, what mattered and what was important and how to make all this stuff work.



LEO:  Ah, but they were good days for geeks because it was something you had to figure out.  And we shared the information.  Now it�s just any � anybody can use a computer�now.



STEVE:  Okay.  So what is it...



LEO:  I sounded like Dvorak.



STEVE:  What is it in the hardware that makes this possible?  What Intel added with the 386 was the ability to basically set up a supervisory code somewhere in RAM that could get notified under virtually any condition that was important.  Specifically, computers � or software running in a computer has two fundamental things it can do.  It can read and write to memory, and it can read and write to I/O devices.  So it�s got I/O, and it�s got memory.  And what Intel�s architecture that began in full with the 386 and has continued on � and in fact the thing you mentioned, Leo, about them talking about, like, next-generation stuff, they�re going further with this x86 virtualization technology, even beyond what we have today, in order to sort of go to the last step.  Because Intel has recognized that virtualization is hot and is coming back, you know, gangbusters.  And so that, you know, they�re also looking for some way to make some more money because, I don�t know if you heard, they�re really getting beat up by AMD.



LEO:  Yeah, they sure are, yeah.



STEVE:  Anyway, what they added was the ability to trap any attempt by software to access I/O and to trap any attempt by software to read and write memory.  Well, that�s, I mean, that�s a phenomenal thing.  I mean, it�s a huge change in the architecture because, you know, the software is supposed to be able to read and write memory.  I mean, in order to do what it does, it has to be able to do this.  And, you know, what good is it unless it can communicate with the outside world, which means it needs to be able to access and talk to I/O devices.



So there is a very sophisticated set of interception hardware, essentially.  There�s literally a bitmap that represents the I/O addresses so that individual I/O addresses can be protected and others can be deprotected.  The way memory is managed is that there are, again, complete protections and tables, called �page tables,� that allow some supervisory process to literally control what a less privileged process is able to do.  And this is all supported by the hardware, meaning that there is virtually � pardon the pun � virtually zero overhead with a program running within this contained or protected mode environment.  It�is...



LEO:  How, I mean, zero?  I mean, how, really, come on, there�s some overhead.



STEVE:  Well...



LEO:  You�re saying there�s very little overhead.



STEVE:  Well, there�s zero overhead for a program running in that mode.  There�s some overhead when you change programs,�change...



LEO:  Overall system-wide, though, okay.  Right.



STEVE:  ...modes, yes.  And in fact there is also some overhead by, if the program in protected mode needs to call down for services that are running in the operating system, they�re called �ring transitions.�  In the Intel architecture there are four rings, 0 through 3, and 0 being the most highly privileged, ring 3 being the least privileged.  And so there were mechanisms that had to be created to allow the operating system, you know, the supervisor basically that has responsibility for everything else, it needs to be able to access all of memory and access all of the I/O and to contain programs that are less privileged.  The way these are less privileged is they run in what�s called �ring 3,� which is just an abstraction.  It�s an abstraction in the same way that, you know, a port is an abstraction of an Internet connection, where it�s just sort of � you just say, this program is running in ring 3, and programs running in ring 3 have the following restrictions placed on them.



LEO:  So there is a little bit of overhead switching from ring to ring.  But because it�s done in hardware, it�s virtually instantaneous.



STEVE:  Well, yes.  It�s nothing, nothing like the emulation we were talking about originally, where you�ve got software that is executing instructions, you know, and figuring out what instruction does, and then turning around and doing the equivalent.  It is, you know, basically it allows programs to run at full speed until they do something that, not necessarily that they shouldn�t, but something that requires supervisory oversight.



So, for example, I mean, a perfect example is running an old DOS program.  I mean, DOS programs, as we know, still run in a window in Windows.  You know, a so-called DOS box, or even that command prompt that we were using before.  The DOS program thinks it is writing to an area of memory, you know, technically it�s B1000 in hex or B800 in hex.  There were two pages of and regions of memory in the old PC.  And DOS programs wrote, actually physically wrote a byte of data into a location that represented a cell on the screen.  And the display adapter took the contents of that byte, which was an ASCII character, 8-bit ASCII character, and then displayed the character at that location, at the matching location on the screen.  So DOS programs just wrote � were able to sort of paint the screen very quickly with text by directly depositing data into this region of memory.



Okay, well, everything has changed since that.  You know, we don�t have text displays.  Now we�ve got bitmapped graphics displays, you know, with fonts and font sizes and varying resolutions and all this.  Yet you can still run an old DOS program in one of these � in a DOS box, in a command prompt.  And it still writes to what it thinks is video memory, into this B1000 hex region.  What happens is, the operating system has set up a trap so that anything that is written by the application in the DOS box is intercepted by the software.  The software is able to say, oh, look, isn�t that cute.  DOS thinks it wants to put an �A� here.  And so what the operating system does is turns around, figures out where that is within the window in the bitmapped region, and it then paints the fonted character �A� that the user has chosen with color and size and everything else.  DOS has no idea this is going on.  All of that is hidden from it.  It thinks it�s still running on an old PC with an actual text display, putting text out in the memory.  When in fact, you know, that�s not remotely true anymore.  We�ve got graphics accelerators and NVIDIA cards with turbofans on them and everything else going on, all being hidden, thanks to this virtualization technology.



LEO:  Yeah, yeah.  Now, there�s some overhead in doing that kind of thing.



STEVE:  Yes.  There�s an example where you are mapping from a text display into a bitmap display and having to do some work.  Of course, in this case, our machines are so radically faster...



LEO:  Yeah, these DOS programs didn�t expect anything like�that.



STEVE:  Exactly.  The result, you know, still looks instantaneous to us.  So essentially what we�ve got today � and we�re going to build on this next week when we talk about how this technology has been leveraged and how it can be taken further � is we�ve got an operating system now, every operating system that is contemporary, I mean, Linux, FreeBSD, the Mac OS, Windows, all of them, the first thing they do when they start to boot is they switch the chip from its real mode into protected mode.  Real mode is the way all chips � there�s one obscure chip somewhere that Intel had.  It was an embedded chip that just didn�t have real mode.



But all of our chips start life, when you turn the power on, they�re in the original 8086 emulation, you know, real mode.  And that�s what the BIOS uses, 16-bit BIOS, to get things going.  It loads a sector from the hard drive into memory, executes it, that bootstrap, reads some more sectors to build up enough code in memory.  As the OS gets going, one of the very first things it does is it lays out all of the data required by the Intel processor.  And there�s a lot of housekeeping that needs to be done to get this system from real mode into protected mode because it�s got a � basically it�s making a huge change in the architecture of the chip on the fly.  And so it sets all that up, switches the chip into protected mode.  That�s the first time it has access to all the memory in the system.  It�s still limited until then to the original 1-megabyte physical barrier, of which only 640 was RAM.  So as soon as it does that, then it opens up the rest of the system and has access, thanks to being 32 bits, to the vast amounts, you know, gigabytes of memory, and then�it loads the rest of the operating system and gets itself�going.



So all systems today are running in this mode.  And they are�using features of this hardware that creates these virtualization � that allows processes to be insulated from each other.  The problem is, as we�ve seen, that insulation between processes has got some holes in it...



LEO:  Permeable.



STEVE:  Yes.  It is very permeable.  As I gave the example a couple weeks ago, the very fact that I can start a debugger and reach over and stop another application and single-step it, and even inject my own code and make changes, that�s a problem when you talk about security.  And as we talked about with rootkits and trojans that are going down and mucking around in the network stack, you know, remember that last week you asked would the netstat command to show you what�s going on in the machine be guaranteed of absolutely always showing everything that is happening?  And I said no, it can�t, because it�s sharing a computer with other code.  And so theoretically other code could modify what we think we�re seeing.



Well, it turns out that, as many people know, there are things like VMware and Virtual PC, which is the technology that Microsoft bought from somebody, which begins to create much stronger boundaries and barriers.  And these things are extremely useful from a security standpoint.  And we�re going to be looking at specific examples of that next week and understanding, you know, what kinds of security features they offer.



LEO:  Well, I think people are probably starting to get an idea that the virtualization means you can wall off part of your computer from another part of your computer.  And I...



STEVE:  What�s exciting is there�s still software involved, but it�s much more supported and enhanced by the hardware support than is emulation.  And it is much more likely that you, as you said, Leo, that you can wall off, and you can create truly, I mean, like, provably secure, provably impervious containers.  And the really cool thing is the idea, for example, of creating a virtual machine or a sandbox in which you surf the �Net.  If you do that � and you still have to behave yourself because again, you know, you could download something and drag it out of the sandbox into the rest of your machine and still get yourself in trouble.  So it�s, again, there�s no perfect solution that, you know, can exist.  But it can certainly prevent malicious�things.



For example, we were also talking last week about that Windows Metafile vulnerability still being around and infecting maybe a million MySpace users.  If those people were surfing in a secured virtual machine web browser that had no contact inherently to the rest of their machine, well, that Windows Metafile vulnerability could infect the virtual machine, but that infection could never get any further.  And when you terminate the virtual machine, any infection is snuffed out at the same time.



LEO:  That�s � I use a virtual machine to run Windows on my MacBook.  And we�re going to talk about VMware.  We get a lot of email lately, and VMware has done some neat stuff, including offer some stuff for free.  And even Microsoft now is offering copies of Virtual PC for free.  So there are a lot of free ways that you can do this.



STEVE:  Well, and I think that, you know, we�ve talked about how long-running themes of ours in Security Now! will be, you know, keeping touch with what happens with VPNs and what happens with, you know, various, like, long-term security technologies.  Virtual machines is going to end up being in our toolkit because � for exactly this reason.  I think we�re just seeing the beginning of this.  I would imagine a couple years from now there will be a number of competing virtual machine products.  And these things will be easier and easier to use.



LEO:  I agree.  I agree.



STEVE:  Yeah.  I did run across one really interesting sort of concern.  I haven�t had a chance to explore it fully yet.  I�ll know everything there is to know about it a week from now when we continue with this.  But there was a researcher did some work on the notion of using virtual machines against us.  That is, unfortunately, that power, as is the case with all power, can be turned to the dark side.



LEO:  Oh, boy.



STEVE:  There�s something called the �Blue Pill.�



LEO:  Oh, yeah, the Blue Pill.  Yeah.



STEVE:  And that, of course, refers to our friend Neo and �The Matrix,� the movie �The Matrix.�



LEO:  There�s a security researcher, a woman who has the Red Pill and the Blue Pill.



STEVE:  Yup.



LEO:  She�s got the Red Pill, I think, is a solution to the Blue Pill.



STEVE:  Exactly.



LEO:  As I remember.



STEVE:  And the idea is that it is possible to essentially, I mean, exactly, I mean, it�s a perfect analogy to �The Matrix,� where you believe you�re in the real world; but in fact, you know, you�re in a virtual machine, you�re in a virtual world.  And the idea is, it turns out that due to insecurities that exist in the way our current operating systems have been implemented � and again, there are workarounds for this, and one hopes they will happen soon.  But due to the way these have been implemented, it is possible to literally take the Blue Pill.  You run this program, and suddenly nothing you see changes, but you are now no longer using your computer.  You have just been encapsulated in a virtual machine.  And something going on�on the outside of that virtual machine, you would have no�way or knowing or seeing.  And at that point it is�impenetrable.



LEO:  Isn�t that interesting.



STEVE:  That�s just so cool.



LEO:  Well, we�ll talk more about this next week because there�s a lot more to say.



STEVE:  And all enabled by the hardware, which is where this happens with very good speed.  And thanks to the 386 that has been evolving ever since, and Intel�s still not done.



LEO:  Yeah, yeah.  Quite an amazing thing.  Fascinating subject.  This has been as much a history lesson as it has been a technology lesson.  And I hope you�ve enjoyed it.  We�re glad you listened in.



And we want to remind you, when it comes to security, one name jumps to the mind, and that is Astaro Corporation, our fabulous sponsor, making this podcast possible, Astaro.com.  They�re the makers of the Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, from viruses, from hackers, as well as complete VPN capabilities plus intrusion protection and content filtering and an industrial-strength firewall, the Astaro Gateways do it all.  It�s really a remarkable, easy-to-use, high-performance appliance.  I�ve got a 120 here, and I just�� it�s remarkable what it can do.  Contact Astaro, Astaro.com, you can schedule a free trial; or call 877-4AS-TARO, toll free, for a trial of the ASG, the Astaro Gateway Appliance, in your business.



And by the way, noncommercial users can download the software for free, for home, at Astaro.com.  You can run it on any PC because it�s really just a Linux, a form of Linux distribution.  And then what�s cool, I think it�s 79 euros a year, you can subscribe to their updates and get the spam filtering, the content filtering, the antivirus, the firewall, all this stuff running on this thing.  So if you want to build a very inexpensive, very powerful gateway as an end-user, this is a great solution, too.  Astaro.com.



And I think we should mention GRC.com, don�t you, Steve?



STEVE:  That�s where all this comes from.



LEO:  Yeah.  Astaro may sponsor us, but GRC sponsors everything Steve does.  Of course, it�s his company, the great company that gives you SpinRite, among all the other wonderful things GRC.com does.  If you have a disk � and who doesn�t � a hard drive, you need SpinRite, the ultimate disk recovery and maintenance utility.  If it can be recovered in software, SpinRite can do it.  There is no better program in the world.



STEVE:  It does routinely perform miracles.  People can go to SpinRite.info and read some of the unsolicited, you know, actually they�re love letters that we get back...



LEO:  It�s so neat, yeah.



STEVE:  ...people saying thank you, thank you, thank you, and telling their stories.  I just � I love getting those.



LEO:  It�s kind of, you know, Steve, it�s kind of neat because essentially, you know, you had a big company with hundreds of employees and a big building, and you pared it down, and you�ve got your focus now.  It�s very simple in his life:  Security and SpinRite.



STEVE:  Yeah.



LEO:  And that�s it.  And you�re doing what you love, and you�re giving everybody just a really great product and great information.  So it�s...



STEVE:  Well, and SpinRite�s owners are really the sponsors of Security Now!, from my end.



LEO:  Yeah, absolutely, always have been, yeah.  Hey, thank you, Steve.  We will talk again next week.  For more information about what we�ve talked about, links, show notes, and all of that stuff, there are two places to go.  Of course Steve�s site is GRC.com/securitynow.  He also hosts a transcript there.  This would be a good one, I think, to get a transcript of.  And I know Elaine�s typing like crazy as we speak.  But you can also get a 16KB version, easier download if you�re on dialup.  And there�s a great forum there where people discuss the security topics Steve raises.



STEVE:  I�m glad you reminded me of that.  We have a news server, and anyone who has a newsreader � most people have that built into their browser � can go to news.grc.com.  And we do have a Security Now! newsgroup, which is constantly, I mean, it�s a great place to discuss topics of the show and also ask questions.  There�s just, I don�t know, we have hundreds of really good people who hang out in our GRC�forums.



LEO:  And I�m going to try to be a little bit better on TWiT.tv, now that we kind of have a GRC, you know, a Security Now! page on there, to put more information and more links in there, instead of just shoveling you over to Steve.  Ultimately, of course, there�s always a link to Steve there.  And that�s really the place to go for the definitive stuff.  But just things like, you know, a Wikipedia article about 386MAX, that kind of stuff, I�ll start putting some of that stuff in the show notes at TWiT.tv because I know that people are looking for that stuff, too.



Well, Steve, we have really started an interesting topic.  I have one more question for you, and please don�t yell at me.  But somebody asked me, is the VPN stuff still in progress?  What�s going on there?



STEVE:  Yes, it is still in progress.



LEO:  Don�t feel bad.  I�m not trying to guilt you, I�just...



STEVE:  Yeah.  I�ve got about 20 pages to find.  The problem was that I literally didn�t have anywhere to put it.  You know, GRC has been growing over time by my just adding stuff and adding stuff and adding stuff.  And I decided I really wanted to deal with third-party cookies, that is, the issue of sort of bringing that back to people�s attention, which you and I will be talking about once I get that online.  And then the OpenVPN stuff is, I mean, it�s absolutely going to happen.  The problem is that my site has never had any navigation or, you know, or menuing or anything.  I mean, I just haven�t had any.



LEO:  Well, you just threw pages up, and eventually � the more you get on there, the more you need navigation at some�point.



STEVE:  Yes.  And, I mean, people who love the work that GRC has done over the years, professional web designers write to me and say, Steve, you know, wow.



LEO:  Want a hand?



STEVE:  What�s the problem?  And so...



LEO:  But you�re like me, you do it all yourself.



STEVE:  Well, and I�ve wanted to understand what CSS is, cascading style sheets.  And I wanted to do a menuing system.  See, the problem is, if I had anybody else do it, they�d come along with some JavaScript blob that was spit out by some web authoring tool.  And, I mean, I�d just look at it and shudder.  It would be nothing that I could use.  So for the last month and a half, I guess, I�ve been working with CSS.  I have now � and actually all of this has been done in public view in our newsgroups in the news.feedback forum we have there.  We�ve got a menu system now running, no scripting, pure CSS, it runs on every browser.  Actually there�s nothing like it on the web.  I�ve ended up developing up some very cool technology to allow zero scripting, pure CSS, beautiful hierarchical menus.  So that�ll be appearing shortly.  Then I�ll be finishing up the work I was doing on cookies.  Then I�m going to finish up the OpenVPN stuff.



LEO:  Okay.



STEVE:  So, I mean, I know people are waiting for it and anxious.  I only want to do it once, and I want to do it right.  So that � and I just had nowhere to put it on the�site.



LEO:  It�s on the punch list.  Steve�s working on it.



STEVE:  Yup.  It is.



LEO:  That�s all we can say.  And Mr. G works at his own pace on his own stuff, and that�s why we love him.  You should read Dvorak�s column on CSS, by the way, online at PCMagazine.com this week.  I think you�ll enjoy it, Steve.  He�s basically saying the same thing you�re saying.  I don�t know if you�ve been talking together, but he agrees with you.  And he�s not coming to it as a programmer.  I mean, he�s just trying to observe what�s happening in the world.  And it�s just obviously a problem.  We have very good designers working on the TWiT.tv, and they did a very nice job.  And I don�t believe they � there is JavaScript on there, but I don�t believe they used any JavaScript for the navigation stuff.



STEVE:  Well, yeah, here I am, preaching not having scripting.  So, you know, how can I � how could I require scripting on GRC?  And the other thing is I certainly didn�t want to, since scripting is lowering your security, it would be bizarre for me to say, oh, you have to lower your security to come to my security site.



LEO:  Right, right.  No, I agree with you.  I agree with you 100 percent.



STEVE:  So it made no sense for me.



LEO:  The only scripting we have is for the Flash player on the site.  And it�s just a way, frankly, of handling the Eolas patent issue that�s happened to Microsoft�s Internet Explorer.  You can�t embed multimedia objects anymore in a simple one-click fashion.  So we have a little JavaScript�there.



STEVE:  Well, and most menus are generally JavaScript.  They will still function maybe in a crippled fashion, but you need to turn scripting on in order to get a next-level dropdown to work.



LEO:  Well, as you�ve learned, you can do it in CSS.  It�s just a little bit of work.



STEVE:  [Groaning]  Yeah.



LEO:  Yeah.  Yeah.



STEVE:  It�s, yeah.



LEO:  All right, Steve.  Hey, it�s a real pleasure.  We will talk again next week.  I�m off for Toronto to do my TV show, Call for Help.  But we�ll be back next week to talk more.  And you�re going to come to Toronto next month; right?



STEVE:  Yup.



LEO:  You�re putting it off this month.  It�s a little muggy there.  I don�t think you want to go.



STEVE:  Yeah, I don�t do well in...





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/








GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#51

DATE:		August 3, 2006

TITLE:		Vista's Virgin Stack

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-051.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss the revelation, courtesy of a Symantec study and report, that Microsoft�s forthcoming Vista operating system has a brand new, written from scratch, networking stack supporting old and new network protocols.  They consider the sobering security consequences of Microsoft�s decision to scrap Window�s old but battled-hardened network stack in favor of one that�s new and unproven.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 51 for August 3, 2006:  Vista�s Virgin Stack.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



It�s time to talk security with our maven of security, the man who coined the term �spyware,� wrote the first anti-spyware program, created ShieldsUP! and, of course, SpinRite, the ultimate disk maintenance and recovery utility.  And now, ladies and gentlemen, he�s become the security guru for many people.



I have to, before we get started, Steve, I have to tell you a little story.



STEVE GIBSON:  Cool.



LEO:  I got an email from a guy who is a chief security officer of a major Israeli corporation.  I won�t say the name.  But it�s big.  So if you�re the chief security officer for a big Israeli corporation, you�re a big security guy, right?



STEVE:  And probably at the moment you�re down in a bunker.



LEO:  Well, you�re not happy, but you certainly know how to keep your � it�s a financial institution, so you know how to keep your stuff safe.



STEVE:  Oh, wow.  Cool.



LEO:  Occasionally the board of directors will bring in a consultant to kind of watch him, you know, just to kind of double check it.  And he says there have been eight consultants in the last couple of years.  These guys always come in cock of the walk and, you know...



STEVE:  Wow, they�re really serious, then, about their...



LEO:  They�re very serious, yeah.



STEVE:  Yeah.



LEO:  And they always think, you know, they�re the new guy, they�re going to be here for years; and I always have to explain to them, no, no, you�re here for a minute.  I�ll be here a lot longer than you.



So they brought this new consultant in, and he said we usually just let them, you know, scan the network and just kind of put them off in a corner, say go ahead, do � you know.  And he starts coming back with very voluminous emails that seem very erudite and very intelligent.  And he�s, you know, my correspondent�s a little puzzled because he talks to the guy, and he seems to know � he seems like an idiot, right, he can�t put two sentences together.  And he�s, where is he getting this good stuff?  So at one point he sends them, he says, well, I�ve scanned, and there�s a port open here.  And he sent him a screenshot, clipped carefully to avoid certain telltale information.  But the security officer looks at it, and he figures it out.  It�s ShieldsUP!.  And he says, hmm.  So he goes to ShieldsUP!, you know, he figures this out.  He starts listening to the podcasts, and he realizes the security consultant has effectively just been parroting back the contents of the podcast to him.  He in fact knows nothing aboutsecurity, but he has used Security Now! to get the job.



STEVE:  He�s got a good memory.



LEO:  He�s got a � well, not good enough, because he can�t do it in conversation.  But he�s good at cut-and-paste, I�guess.



STEVE:  Right.  He�s not understanding it, but he�s listening to it.



LEO:  Right, he�s listening to it.  So anyway, I just want you to know we reach far and wide...



STEVE:  What a kick.



LEO:  ...with this podcast.  And if you are a security � if�you�re pretending to be a security expert based on what Steve says, it�s good material, but you might want to do some extra research to really bolster your knowledge, you�know.



STEVE:  Or maybe listen to each one a few times.



LEO:  A few � memorize.  Memorize.  That�s the key.  Understand.  So it � go ahead.



STEVE:  When we did our one about the Netstat, how the Netstat command works, there was a bunch of dialogue in various forums and things that I happened to see, saying, you know, you�ll get much more out of it if you sit down in front of a computer and type along with Steve and Leo.



LEO:  Type along with Steve.  Well, people used to do that, we know, when they were watching TechTV, when they were watching the screensavers, because we�d have to be very careful not to give out the URL of a site until we�d actually loaded it.



STEVE:  Well, mine, you know, whenever you would talk about ShieldsUP!, it would just � back in the old days, when my bandwidth was only on a couple T1s, it would just, I mean, it was the so-called �slashdot� effect, where it would just collapse my site.  Which, you know...



LEO:  People were watching and typing in those URLs as we said them.



STEVE:  Yup.



LEO:  Which is very interesting.



STEVE:  Well, because you never know how long they�re going to stay on the screen.  They�re like, oh, my God, I�d better type that in, you know.



LEO:  That might be.  So last week we started a series on virtualization, and we really kind of more talked about the history and the concept behind virtualization and modern applications.  And we are going to get back to that.  But...



STEVE:  Well, actually there�s a little bit of errata from last week, too.  Some sharp-eared listeners caught me in a mistake that � this really made me grin.



LEO:  No.



STEVE:  Because whenever I�m talking about hard drive sizes, I have to consciously say, like I�m talking about, you know, old school, I have to consciously say 10 megabytes.



LEO:  Right.



STEVE:  Because I�m just, you know, everything is gigabytes�now.



LEO:  Right.



STEVE:  You know, we�re three orders of magnitude beyond where we were then.



LEO:  I slip like that all the time.  Anybody who�s been around for a while is going to make that slip.



STEVE:  Well, and I did, because I was talking about how Bill Gates, you know, was quite sure when he released, you know, the original DOS and was working with IBM on the design of the first PC, that we would never be needing more than 640 megabytes.



LEO:  Oh, no.  He said...



STEVE:  Oops.



LEO:  ...640K.



STEVE:  Exactly.  640K, you know, which was ten times what the Apple II had, the Apple II, of course, being the competition at the time.



LEO:  48K, that�s right.



STEVE:  It was 48, but then you could add, like, a soft card and some RAM expansion.  So it sort of had a 64K addressing space.  And so, oh, ten times that, 640K.



LEO:  No one will ever...



STEVE:  Who would need more?



LEO:  ...need more than that.



STEVE:  Right, right.  And then the other thing I forgot was�that � someone refreshed my memory.  We talked about a couple of the early DOS-based, sort of VM-ish utilities, Quarterdeck with DeskView and...



LEO:  And QEMM � oh, you mean the...



STEVE:  The actual applications.



LEO:  Applications, yeah, yeah.



STEVE:  And then of course IBM had TopView, which really never got off the landing pad, or launching pad.  But someone reminded me of the utility that was the one that I actually used, which was called Software Carousel.



LEO:  Oh.



STEVE:  And it was � I used it because it was even cleaner than the other two.  All it did was I think you did, like, Alt-2 or Alt-3, and it just instantly swapped you to, like, a brand new DOS.



LEO:  Wow.



STEVE:  And, you know, it used all the memory mapping that we had at the time, with extended and expanded memory, and just gave you just the ability to just completely switch DOSes.  And so you�d have different things running in different ones� and you could, like, preload them at boot.  And it was just a great little utility, so...



LEO:  It�s so cool.  It�s so cool.



STEVE:  ...you know, harkening back to the old days.



LEO:  Yeah, yeah.



STEVE:  But anyway, as you were saying...



LEO:  We�re not going to do that today.



STEVE:  Exactly.



LEO:  We�re going to save that for next week.



STEVE:  Actually the week after.



LEO:  Or week after because we have to do a...



STEVE:  Next week is one of our Mod 4.



LEO:  Q&A.



STEVE:  In fact it�s a very � it�s a special Mod 4.



LEO:  It is.



STEVE:  Because it�s number 52.



LEO:  Oh, and why is that?  Because there�s 52...



STEVE:  It�s our anniversary.



LEO:  Oh, it�s our one-year anniversary.



STEVE:  Yeah.  52 weeks in the year.



LEO:  We�re not taken a single week off.  Wow, that�s amazing.  So, okay, yeah, next year, one-year � next week, one-year anniversary, and questions and answers.  And then, events allowing, we�ll do � continue virtualization the following week in Episode 53.  But this week there�s something a little more topical that you wanted to cover,�and...



STEVE:  Yeah, I really, you know, as we�ve said before, when something comes up that is, you know, within our purview, even though we�ve got some plans, we�ll catch back up with those plans.  Something really caught my attention this week.  I mean, it really flabbergasted me.  Back when I was originally reading Microsoft�s Vista plans, you know, their marketing sheet about, you know, all the new stuff � and, you know, you do that with each Microsoft OS that�s coming out.  One of the items there, one of their bullet points, was, you know, brand new networking stack offering support for new protocols, blah blah blah.  Well, I mean, okay.  I just blew that off.  You know, they always say that, and it�s never true.  You know, I mean, remember...



LEO:  Maybe we should explain, before you go too far, what a networking stack is and what it does.



STEVE:  Well, we�ll definitely do that, but...



LEO:  Okay, we�re going to get to that, all right.



STEVE:  Yeah.  But, for example, you know, with Windows 2000, and mostly with XP, you know, they had the same sort of thing.  But it was clear to any of us who know Microsoft and know Windows that XP was, you know, just � it was Windows 2000, and they added some nice green rolling hills and a blue-and-green candy coating.  But, I mean, it was obviously still Windows 2000.  I mean, they really hadn�t changed that much.  And of course that�s where the raw sockets happened was the Windows 2000 raw sockets, you know, they put the candy coating around it to give it to my mom, but left a bunch of other stuff there.



LEO:  Right.



STEVE:  So I just � I didn�t think twice about Microsoft�s claim that Vista would have a brand new networking stack.  Well, until I discovered a report from Symantec, where two of their engineers took a look at, like, four, I think three or four different beta versions of Windows � actually it was three different beta versions, and there was a fourth one since � and poked at it and discovered it really is brand new, written from scratch.  Now, that�s significant.



LEO:  It seems like a good idea, especially given all the problems we�ve had with the old one.



STEVE:  Well, people are generally of the feeling that something new is good.



LEO:  New is better.



STEVE:  But � exactly.  It�s like, you know, oh, let�s upgrade.  Well, of course patching is a good thing to do.



LEO:  Right.



STEVE:  But the problem with security is that fresh is really not what you want your code to be...



LEO:  Fresh code.



STEVE:  ...when it needs to be secure.



LEO:  Right.



STEVE:  And it�s interesting because there were rumors at the time of Windows 2000�s release about where did Microsoft get that stack.  Because, you know, there was 95 and 98 and NT, and then Windows 2000.  Well, Windows 2000 really did appear to be a different networking stack than Microsoft had.  But it just � it was born fully mature.  It was, I mean, it was a really good networking stack from day one.  And you just don�t get that.  I mean, all of the security problems that have been solved years and years ago were, like, already fixed in this stack.  And there were rumors that Microsoft lifted it from one of the open source BSDs.



LEO:  Oh, boy.



STEVE:  That that�s where it came from.  And I can�t remember where it was NetBSD or OpenBSD.  I don�t think it was FreeBSD.  But, you know, there was a strong suspicion, just based on the behavior.  You know how there are network fingerprinting tools, or OS fingerprinting tools, that will send a bunch of specially crafted packets at a machine.  And based on really subtle differences in the way it responds, they�re able to determine what kind of operating system is at the other end.



LEO:  Nmap does that, yeah.



STEVE:  Exactly.  Nmap is the classic example.  Well, Windows 2000 was responding exactly like one of the BSDs at the time.  And it worked really well.  I mean, it was, like, ready to go.  So it was like, okay, well, hmm, you know.   And of course, as we know, Windows 2000 was the first OS that had raw sockets.  And of course the BSDs, being UNIXes, have always had raw sockets.  So there were just � there were many things that Windows suddenly inherited in Windows�2000.  We don�t know, I mean, I have no proof or evidence.  But it was strange.  And in fact, the lesson we�re seeing with Vista actually lends more credence to the notion that maybe Microsoft got the Windows 2000 stack from somewhere because Vista�s stack is a disaster.



LEO:  Uh-oh.  Well, let�s � so that�s our subject today.



STEVE:  Yup, yup.



LEO:  Vista�s disastrous stack.  What did you call it?



STEVE:  I call � well, Vista actually has a virgin stack.



LEO:  Vista�s virgin stack.  Now I guess we�d better step back a little bit because I don�t know, I mean, I don�t know exact- I�ve heard, you know, TCP stack.  I�ve heard, you know, all of this.  But what is it, and what does it do?



STEVE:  Well, the term �stack,� as it sounds, refers to a stack of layers.  And networking people talk about networking layers because it�s extremely convenient to think of networks in terms of layers.  And of course there�s the famous OSI model of layers where it talks about, like, the lowest layer is...



LEO:  Right, there�s seven layers, and...



STEVE:  ...the electrical link layer, sort of a link layer.  Then you�ve got, you know, basically a set of layers going from the electrical wire connections all the way up to high-end application usage.  And basically the idea is that each layer in this stack does one sort of thing.  Well, we�ve talked over the last � literally over the last year about how Internet packets are encapsulated within each other, how you�ll have an Ethernet header which routes this packet which on the outside is an Ethernet packet.  Then, inside of that, sort of encapsulated in that, you�ll have an IP header with its payload.  And then within that you�ll have the protocol header � ICMP, TCP, UDP, and whatever.  So it�s sort of like nested layers of data.



Well, the stack essentially interprets those nests of buffers in exactly the same way.  The lowest level of the stack deals with, in the case of an Ethernet system, deals with the Ethernet layer.  The Ethernet layer takes, you know, accepts the packet, removes the envelope that it contains, and then passes that, which would be the IP envelope, up to the next layer in the stack, which says, oh, I�m the IP layer, I know how to read IP packets.  It does whatever it needs to do with the information in the IP header, then takes that off and passes the internal data, the protocol, up to the next layer in the stack, which is the protocol layer.  So essentially, packets are unwrapped envelope by envelope, like nested envelopes, with each layer in the stack dealing with the contents of the previous layer�s data.  So...



LEO:  That makes sense.  It�s almost � so it�s kind of a parallel of the stack itself.



STEVE:  Oh, it�s beautiful.  I mean, it�s elegant, and it�s symmetrical.  So for example, the same thing happens in reverse direction.



LEO:  Right.



STEVE:  When the OS wants to send data out, it sends the data down the stack.  Each layer takes what it gets from the layer above, encapsulates that with its own layer data.  So the protocol layer takes the actual data and wraps a protocol around it, TCP or UDP or whatever, hands it down to the IP layer, that adds the IP layer stuff around it, then hands it down to the Ethernet layer, the link layer, encapsulates it with Ethernet data, and finally sends it out on the wire.  When it finally gets to wherever it goes, that process is reversed to essentially bubble the very, well, sort of like the inner core of the data, like these nested dolls, all the way back up to the application at the other�end.



So it�s complicated, but it just works beautifully.  And it�s very flexible because in this layered architecture, for example, you could have different specific layers if your destination was not, for example, Ethernet, but maybe Token Ring or PPPoE, Point-To-Point Protocol over Ethernet, or, you know, other protocols.  So this notion of encapsulation is why we have layers.  And so the layers collectively are referred to as a �stack.�



LEO:  That makes perfect sense.  I followed that exactly.



STEVE:  Oh, it�s beaut- I mean, it just is beautiful.  And it�s worked so well and stood the test of time because it�s modular.  It�s inherently modular.  And so it subjects itself to being changed and evolved very nicely.



LEO:  So all networks communications goes through the stack.



STEVE:  Yes.



LEO:  It�s the portal into your computer.



STEVE:  Yeah.  It�s like one of the major � well, for any Internet-connected machine, any UNIX machine, any modern Windows machine, anything that�s going to be doing Internet stuff, somewhere there�s a stack.  And that�s fundamental to the systems operation.



LEO:  All right.  So it seems sensible that you�d want to improve a stack as new protocols came out, or maybe you found bugs, or maybe you could make it more efficient.  So writing a new stack doesn�t seem like such a big deal.



STEVE:  Well, the problem is, it is incredibly complex.



LEO:  Ah.



STEVE:  And we talk, in terms of security, we talk about maturity because � there�s a classic example was in the summer before Windows XP was released for the first time.  Of course, I was arguing with Microsoft about the raw sockets issue.  But Microsoft was saying Windows XP was going to be the most secure operating system they had ever�made.



LEO:  Well, that sounds familiar.  I�ve heard that phrase about Vista, as a matter of fact.



STEVE:  Well, exactly.  But any security person would listen to that and just, you know, roll their eyes and shake their�head.



LEO:  Because you don�t really want new.  You want proven by the test of time.  You want something that�s been banged on.



STEVE:  Well, what it actually is is that it�s fundamentally illogical.  I mean, it�s impossible to say something is going to be the most secure.



LEO:  Because you don�t even know yet.



STEVE:  It�s a non sequitur.



LEO:  Right.



STEVE:  The way the world works is security is proven.  It is not claimed.



LEO:  Right.



STEVE:  And so claiming security means nothing.  And of course we know...



LEO:  Claim all you want.



STEVE:  Yeah.  We know that Windows XP was the least secure operating system Microsoft ever produced.  I mean, it was worm land on the Internet for a long time.



LEO:  Well, and we�ve lived through that for the last five years, yeah.



STEVE:  Yes.  And what�s really interesting is, okay, finally, Service Pack 2, firewall�s on, all these problems have been found.  Now we can all take a big, deep breath.  Well, the bad news is, Vista is the most secure operating system Microsoft has ever made.



LEO:  And they�re starting from scratch.



STEVE:  Well, and not only that, they are really starting from scratch.  What the Symantec report did, these two guys at Symantec took these early betas � and I want to make sure everyone understands, we�re not talking about production Vista.  So this is just beta code behavior.  And in fact...



LEO:  And also, to be fair, Symantec has a vested interest in insecurity because they make security programs.



STEVE:  Well, it�s worth mentioning, yes, that Symantec is not happy with Microsoft.  There is a lawsuit they filed several months ago claiming that Microsoft has stolen their trade secret information.  There was some sort of license deal that Microsoft had with Veritas that limited what they could do.  And apparently Microsoft has used that as the foundation for new stuff in XP and in Vista.  And Symantec, I mean, they�ve tried to resolve their problems amicably.  They�re going to let the attorneys do it now.  So they�re fighting on that front.



But also, exactly as you say, Leo, Microsoft is clearly � I mean, and this was foreseeable � getting into the anti-spyware and antivirus business big-time, which is going to be a big problem for Symantec.  So, yes, Symantec has some interest in Microsoft�s not being secure.  But the report was very well written.  I mean, these guys � and you�ve got a link to it on your show notes.  I�ve got a link to it on mine also, on the Security Now! page.  So people can take a look at the full PDF of the report if they�re interested.  And the guys were very fair, I mean, they really explained that they understand that these are betas.  And they talked about problems that they watched being solved along the way that earlier betas had, that had been fixed in later betas.��So...



LEO:  And even the publication of this document may improve the stack because all of these issues that they raise, Microsoft can now fix.



STEVE:  Okay.  Now, okay.  For example, remember a couple weeks ago, within the last couple weeks I talked about a ridiculous, really old problem that was almost funny, where you would send a spoofed packet to Windows, claiming that it came from that same machine.  It�s called the Land attack, where the source and the destination IP are both the same as that machine�s.  And it would just cause the stack to freak out and collapse because it thought it was receiving something from itself, so it would answer to itself, and just melt down.



LEO:  Right, get in a loop, yeah.



STEVE:  Well, Vista does that.



LEO:  No.  Now, was this something that was patched and fixed in XP?



STEVE:  No, this was fixed in Windows 95.



LEO:  Oh, boy.



STEVE:  No, that�s what we�re talking about.  We�re�talking...



LEO:  Oh, boy.



STEVE:  That�s just it, Leo.  We�re talking about all the same mistakes that have been fixed in all prior Windows stacks finally, and in all other mature stacks, are now back in Vista.



LEO:  Why?



STEVE:  Well, okay.  Now...



LEO:  I mean, wouldn�t that be kind of almost a textbook thing when you�re � you know, when writing a stack, make sure you don�t do this.  We learned this 15 years ago.



STEVE:  And that�s just the problem is that, yes, it�s going to be pounded on.  These things are going to be fixed.  And in fact, this problem was present initially and was fixed in a later build...



LEO:  Oh, good, okay.



STEVE:  ...when someone tried it.  You know, the good news is we have lots of security tools now that have been developed to nail these problems.  However, this absolutely proves that this is a brand new stack.



LEO:  Because it would be fixed in any mature stack, would obviously not have this problem.



STEVE:  It is fixed in every other mature stack, yes.



LEO:  Right.  So they definitely didn�t borrow this from somebody else.  Unless they borrowed it from the Windows 95 development team.



STEVE:  I mean, they�re saying that it was time to start over.  Now, I respect that because, you know, over time code evolves, it gets very patchy, I mean, that�s why the Apache Server is called Apache, because it�s basically a whole bunch of patches.  So it makes sense to say, okay, timeout, we need to start over.  One of the things that the Vista stack incorporates is IPv6 support, natively in the stack.



LEO:  Right.  And no earlier stack would have that,�probably.



STEVE:  Well, exactly.  For example, XP and even Windows 2003, if you want IPv6 support, you add it as an add-on to the existing technology.  So Microsoft has had IPv6 around.  Now they�re building it in from scratch.  There are also a number of other protocols.  As you may know, Microsoft�s Vista will be adding native peer-to-peer support with NAT traversal built in, these technologies that, you know, for example, Skype and other peer-to-peer technologies had been  using in order to be able to get machines to talk to each other, are being built in.  So there�s a lot of new stuff.  And Microsoft made the decision, you know, bit the bullet to say, okay, we don�t want to keep dragging our aging, creaky stack forward.  We�re going to start again.  The problem is, nothing could be worse for security.



LEO:  Yeah, yeah.



STEVE:  For example, there are � the stack responds to unknown protocols with an ICMP message saying, I don�t know what that is.  For example, TCP is protocol 6; UDP is protocol 17.  There�s a byte in the protocol header that identifies what the protocol is.  And so it�s polite, if a packet is received that�s for a protocol that the stack doesn�t have anyone to send the packet upwards through its layers to, for it to send back an ICMP message.  Remember we�ve talked about ICMP as sort of being like the plumbing management.  So when a packet comes in that is for an unknown protocol, it�s nice that the stack sends back a note saying, gee, don�t know what that is, got anything else?    The problem with doing that is that it means it�s trivial to probe the stack to find out what protocols it does support.



LEO:  Yeah, what do you do?  Yeah.



STEVE:  Exactly.  Well, the guys did that.  And they found a bunch of interesting unknown protocols.  So they sent some random data to one.  Boom.  Blue Screen of Death.



LEO:  Oh, no.  Oh, geez.



STEVE:  I mean, it�s like, oh, what next?



LEO:  But that�s easy to fix.



STEVE:  And it will be fixed.  You know, those are easy things to fix.  I�m sure that Microsoft has read Symantec�s report.  And in fact, in the later developer version after the build that was made public that was the last thing these guys fixed, more of these things have been fixed.  But what I want to stress here is that we now know for sure that Microsoft has written a new stack from scratch.  And anyone in the industry will tell you � and this is not Symantec, you know, crying wolf or the sky is falling.  Anyone will tell you that a networking stack is so complex that it takes years to mature.



And while Microsoft has the advantage to some degree of us having a strong sense for how to fix all the old known problems, we have no idea yet what new problems this stack is going to have that no other stack ever had.  Not only has Microsoft recreated many known problems, but there are going to be � well, in fact there is, there is one brand new problem that never existed before.  There�s something called IP options, where it allows additional data to be enclosed at the IP level of networking traffic.  And what you have is, in the IP options, you�ve got a size of the options that tells the system, okay, here we�ve got some option data, and it�s this long.  So then � so jump over that this many bytes to get to the next piece of data in the packet.  Well, it turns out in Vista, if you set the size of options to zero, it says jump over zero bytes.  So it lands where it is, does it again...



LEO:  Loops.



STEVE:  ...and then lands where it is and loops permanently.  It locks up the system hard and requires a full reset.



LEO:  Now, Vista�s � the betas that people have been using of course is full of bugs.  That�s why they�re in beta test.  So you�re not saying that these problems will persist, but merely that a new stack is an untested stack.  And of course there�s a lot of concern about Vista�s security.  I mean, the spotlight is on Microsoft now.  They need to put out a secure operating system.



STEVE:  But, see, and Leo, you can�t.  You...



LEO:  Because it hasn�t been tested.



STEVE:  Yes.  By definition, nothing brand new is secure.



LEO:  Now, they are doing the world�s largest beta test.  They�re sending out 2 million copies of Vista.  And of course most people won�t be testing the security of it.  But I presume some security experts will be working on it.



STEVE:  Yeah, oh, there�s no doubt about it.  I mean, I guess my point is � I�m not here, again, like the Symantec guys, to cry wolf or say the sky is falling.



LEO:  We don�t know yet.



STEVE:  Yes.



LEO:  We don�t know yet.



STEVE:  When I�m using XP on a couple laptops that I recently got, toward the end of last year � I�m still using Windows 2000 as my main platform.  Windows 2000 is GRC�s server platform.



LEO:  And that is, by the way, running out of time because Microsoft�s not going to support it anymore.



STEVE:  Right.  Actually, I did try to consider using Windows 2003, but it was just a � well, I won�t go into it,�but...



LEO:  You know, the interesting thing is that it was my understanding that much of Vista was based on 2003 Server.  But I guess the stack is not.  I guess it�s...



STEVE:  Well, it�s clear that it�s not.  There are so many mistakes in the current stack, in the current beta stack...



LEO:  It�s very discouraging, frankly.



STEVE:  ...that it proves � it demonstrates that this is new, that Microsoft told the truth this time when they said all new, brand new, whatever...



LEO:  Shiny code.  Fresh, shiny code.



STEVE:  Or as any � I mean, it is a virgin.



LEO:  Untested code.



STEVE:  And so, you know, anyway, the point I was making about XP was that it wasn�t until several years after the...



LEO:  Yes.  Took a while.



STEVE:  ...release of XP that � and we had Service Pack�2�that...



LEO:  And it wasn�t a new stack.



STEVE:  Exactly.  And all the new stuff in XP was badly broken in ways that no beta testing found, no early testers found.  Late problems were discovered by people really looking closely.  So...



LEO:  Well, because Windows is a natural target.  It�s so dominant, there�s so many installations, that every hacker in the world is most interested in compromising Windows.  So Vista will immediately come under attack, very serious, hard attack from top-flight hackers all over the world, the minute it ships.



STEVE:  Well, and I would argue that it isn�t even Microsoft�s fault that this is a problem.  I mean, Microsoft is taking responsibility for these problems.  Microsoft made the decision, I�m sure a tough decision, probably, well, I don�t want to say unwise.  But they made a tough decision to scrap their networking architecture and write a whole new�one.



LEO:  I�m sure they felt they had to for various reasons.



STEVE:  Yeah.  I mean, they talk about performance...



LEO:  It�s not something you undertake lightly.  I mean, they must have felt they needed to.



STEVE:  They talk about performance and stability and extendibility.  I mean, what they had was probably getting old. Apparently, the current stack underperforms the new one.  That�s � maybe it�s, you know, debugging code and beta code, and they�ll be able to trim it and prune it and make it better.  I mean, I like the idea of them making the hard choice to drop what they had.  But all I want to really � the message of this episode is a couple.  One is that you cannot � no one can claim something is secure ahead of time.  You can say, we hope it�s secure.  We really, really want this to be secure.  But it�s only years of battle hardening that is going to make Vista secure.



So listeners of Security Now!, who are obviously on the security awareness leading edge, you know, along with us, are, I would say, will certainly want to play with Vista.  I would be very careful and skeptical of it for quite a while, until we see what�s going to be happening.  Leo, if you and I had been doing Security Now! four, five years ago, when XP was coming out, you know, we would have been busy.  And we will be doing security...



LEO:  We�re still busy.  But we�ll be busier in a couple of�months.



STEVE:  Yes.  Well, and see, that�s the other horrifying thing.  As I understand it, they�re talking about Vista maybe January of �07.  Which, as you said, in a few months.  Well, in order for OEMs to happen, and we know how the whole routine goes...



LEO:  We�re talking a couple of months to get to the gold master, at most.



STEVE:  They need to � it needs to be golden and frozen in order to get into production for OEMs to have copies, for integration to happen.



LEO:  Well, and they promised Enterprise that it would be available by December.  So we�re talking in the next two months they will freeze the code.



STEVE:  And Leo, just last week it was, like, locking up and going blue screen when you sent some data to a certain protocol.  So it�s like, okay, when, I mean, I can�t imagine that it�s either going to be stable or they�re going to ship it on time.  It almost, to me, based on the rate at which these problems are being fixed and the fact that the networking stack still has serious problems now, you think,�okay...



LEO:  A year?



STEVE:  This thing just � well, at least this part of it...



LEO:  They�re going to ship.  They have to ship, and they�will ship.  And I guess the advice we�re going to be�giving...



STEVE:  We�re going to be really busy.  It�s going to be�really...



LEO:  ...is to hold off.  Don�t be the first upgrade to Vista.  We will be busy.  You know, I�m going to be � I�m giving, in February 3rd through 10th, I�m going on a geek cruise.  PC World is sponsoring PC Paradise.  And I�m giving two classes in Vista security.  So I can�t hold off.  Nor can you, Steve Gibson.  We will be getting Vista machines.



STEVE:  It�s funny you mention that because I was just thinking, I mean, I just ignored XP...



LEO:  We can�t.



STEVE:  ...for years.



LEO:  Sorry, dude.



STEVE:  And you know, the only reason I had one around was so that I could do screenshots of my applications running on XP so the Windows had the candy coating on them, rather than my Windows 2000, you know, that looks more like...



LEO:  You don�t have that luxury this time.



STEVE:  No, I don�t.



LEO:  Nor do I.  But we�ll take a bullet so that you don�t have to, folks.



STEVE:  Well, and again, I�m not saying don�t upgrade, don�t use it.  Maybe, you know, set it up as a dual boot.  And so, you know, go over, boot that one sometimes on the weekends, you know, and...



LEO:  But don�t shift your whole office over right away.



STEVE:  Oh, it�s, you know, or don�t do it soon.  It�s going to be � we�re going to be busy, Leo.



LEO:  We�ll have a lot to talk about.  Well, Steve, I really thank you for this kind of warning.  And again, you know, all the disclaimers, Symantec has a vested interest in this, it is beta code.  But I think you�re underscoring, which is the fundamental problem that every programmer, certainly anybody who�s done any network programming understands, is that this stuff is hard.  It�s hard to make it secure.  It�s hard to do it from scratch.



STEVE:  And they started over.  I mean...



LEO:  And it�s not...



STEVE:  And they�re making all the same mistakes that have been fixed...



LEO:  That�s a little discouraging.



STEVE:  Oh, well...



LEO:  They should, no, there should be a manual somewhere that says, oh, by the way, guys, don�t do this.  They should know that.  They should know that.



STEVE:  It�s just going to be a hacker heaven.



LEO:  Oh, it�s scary.  It�s very scary.  Well, you know where to go to find out what�s going on.  And I think, as we get closer to Vista, we�re going to of course do more and more Vista coverage, not only on this podcast but on all our podcasts, and on my radio show and so forth.  And we�ll talk a lot more about this.  And I think it�s just, you know, something that maybe this podcast will become less educational in the next six months and more here�s what�s happening this week.



STEVE:  Well, you know, Leo...



LEO:  But we�ll do it if we have to, you know...



STEVE:  ...we are going to pick up our series on virtual machines.  So people � and specifically on sandboxing using virtual machines to prevent bad behavior from getting out of the sandbox.  That�s where we�re going to be going in the next few weeks.  And so...



LEO:  This would be the perfect way to do Vista.



STEVE:  Well, running Vista in a sandbox is probably going to make a lot of sense.



LEO:  As far as I know, Parallels doesn�t yet support Vista.  I�m not sure whether Microsoft�s Virtual PC, which they�re giving away for free, does.  I�m sure VMware will by the time Vista ships.  So there will be...



STEVE:  Actually, we�ll have to check, but I think their virtual � the free thing they�re giving away is only something that runs on top of their server platform.



LEO:  Ah.



STEVE:  I think it�s Virtual PC Server 2003 RC2 or something.  And...



LEO:  I thought they were giving away the basic one, as well.  They changed their plan.  We�ll find out.  We�ll find out.  But we�ll talk about that...



STEVE:  Yup.  We will be talking about it.



LEO:  ...because we�re going to, yeah, we have a � in fact, we�re going to interview one of the kings of virtualization, I hope.



STEVE:  I hope so.



LEO:  Yeah, we�re looking forward to that.  So I hope you have learned a thing or two.  My eyes are wide open here.  And a little scared.



STEVE:  I couldn�t believe it.  I just thought, oh, yeah, marketing propaganda, all new stack.  No, this one...



LEO:  No, it really is.



STEVE:  This one really is.



LEO:  Vista�s Virgin Stack.



STEVE:  Lord, lord help us.



LEO:  We encourage you to check out, of course, GRC.com.  That�s Steve�s site.  That�s where you�ll find 16K versions of the show.  You�ll also find transcripts, thanks to the wonderful Elaine, who does such a great job making our words intelligible.  And Steve�s great SpinRite, which is the ultimate disk recovery utility, and a must if you deal with hard drives.  Not just for recovery, but for maintenance.  I think people, you know, I think we�re been underscoring the recovery because I think a lot of people use it for maintenance and didn�t realize it is as good as you can get in recovery.  But don�t forget, it is a great way to keep your hard drives working smoothly for a long time.



STEVE:  Yeah.  I think what happens is most people buy it because they have a disaster.



LEO:  Ah.



STEVE:  And then they realize, wait a minute, had I been running SpinRite every, you know, quarter, for example, every three or four months...



LEO:  Yes, right.



STEVE:  ...or when something maybe sort of seems a little strange in the computer, it�s slowed down or delaying or something, they realize, hey, I could just do this to keep the problems from happening.



LEO:  Right.



STEVE:  And SpinRite does that because it shows the drive, the problems that the drive has, and helps the drive correct�them.



LEO:  I was talking on the radio show the other day about SMART monitoring.  And really I haven�t had much results, much success with this SMART monitoring.  Most drives are SMART drives now, but I don�t find that those monitors are particularly useful.  I suggested the best way to know if a drive is going to fail is use SpinRite.  SpinRite has a really kind of fun little tool that shows how many corrections � is it per second or per minute?



STEVE:  It�s actually per megabyte.



LEO:  Per megabyte, okay.



STEVE:  Yeah.  As SpinRite�s moving along, what it does is it dynamically reads the sort of private SMART data that most drives publish to the API, the SMART API.  SpinRite sees how many corrections are occurring from the time it last looked to the time it looks now.  It then looks at how much data it has read from the drive and computes the number of corrections per megabyte, so that you�re able to see over the long term if that number starts going up suddenly, that tells you your drive is getting into trouble way before it actually dies.



LEO:  It�s the best warning.  And I don�t know of any SMART monitor utility that will tell you this, only SpinRite.



STEVE:  Well, there�s nothing else that can because it only makes sense to look at that when the drive is doing work.  So it�s only when the drive is under load, and SpinRite puts a calibrated load on the drive in order to watch how hard it�s having to work.



LEO:  Sometime I want to talk about it because it�s fascinating.  I mean, it didn�t realize that the error correction technology that�s built into drives is actually active all the time.  Drives are making mistakes constantly.  I mean, hundreds of mistakes a megabyte, thousands are normal, right?



STEVE:  Yeah.  I mean, it used to be in the old days that ECC, Error Correction Code, was only brought into play to deal with a defect.  But data is so dense now, relative to our ability to produce absolutely perfect magnetic recording services, you know, we just can�t.  At some level our ability to make perfect recording surfaces fails.  Data, the actual bits, are down now at the size of that failure.  So error correction is being employed all the time...



LEO:  Constantly.



STEVE:  ...just as standard operating procedure, instead of being an exceptional case.  And so...



LEO:  It�s really remarkable.



STEVE:  Well, I mean, look at the size, look at the incredible amount of data.  There are now on the shelves at  Fry�s 500-gig drives.



LEO:  See, I eschew those.  I buy smaller drives and multiple drives rather than buy one big drive.



STEVE:  Actually, I...



LEO:  It scares me.  The areal density is too high.



STEVE:  We�re old dogs.  I�m the same way.  When I call my computer guy to order drives, I say, okay, what�s the smallest Maxtor drive you guys still can get for me?



LEO:  Right.



STEVE:  Because I just, you know, it�s like...



LEO:  And with RAID you can combine them or whatever.  But you don�t, you know, it�s just, I mean, 500 gigs.



STEVE:  It�s scary.



LEO:  That�s very dense.



STEVE:  Yup.



LEO:  We want to thank our sponsor, Astaro Corporation, makers of the Astaro Security Gateway.  I mean, when it comes to security, as you can tell, no half measures will do.  And if your small or medium business needs superior protection, based on well-known, tried and true, open source technology � you get protected from spam, from viruses, from hackers, complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in a very easy to use high-performance appliance � contact Astaro, Astaro.com;, or you can call (877) 4AS-TARO.  You can schedule a free trial of an Astaro Security Gateway appliance in your business.  And of course non-business users, as always, can download the software version of ASG for home use at Astaro.com.  And I do recommend that.  It�s a great solution.  Really, really good.  Astaro.com.



Steve Gibson, next week it�s Mod 4.



STEVE:  And our anniversary.



LEO:  And what are we going to do?  I�ll bake you a cake.  I don�t know.  We�ll have to think of something.



STEVE:  Maybe your wife.



LEO:  Sorry?  No, I�m not giving you my wife.  That�s...



STEVE:  No, no, I know.  Maybe...



LEO:  Oh, my wife will make the cake.  Yes, she�s a much better baker than � we have to draw a line somewhere.  I�m sorry, Steve.  This is a great anniversary, and I can�t wait to celebrate it.  It�s been a wonderful year.  And I think we now know it�s going to be a very interesting year to�some.



STEVE:  Oh, we�re not going to run out of material, Leo.



LEO:  Thanks, Steve.  We�ll see you next time.



STEVE:  Okay.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#52

DATE:		August 10, 2006

TITLE:		A Busy Week for Security Troubles

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-052.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss the week�s security woes, covering D-Link and Centrino wireless buffer overflows which allow remote wireless compromise of user�s networks and machines.  They explore the recent revelation that JavaScript can be used to scan an unwitting user�s internal network to take over their equipment.  They talk about the purchase of Hamachi by LogMeIn and how Botnets are being used to create fraudulent eBay users with perfect �feedback� in order to defraud even careful eBay users.  And more!



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 52 for August 10, 2006:  Security Bulletins.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



Time for Security Now! and, well, maybe an anniversary, maybe not, depending on how sticky you want to get about your definitions.  It�s Episode 52, Steve Gibson.



STEVE GIBSON:  Yeah, I actually got some mail from people who were saying, you know, it�s not this episode that�s going to be the anniversary, it�s the next one.  And they were saying, had you numbered your episodes like a programmer, from number 0, then 52 really would be your first anniversary.  Instead, you�re one off.  Like, okay, yeah, that�s true.



LEO:  Some of my podcasts do have an Episode 0.  The pilot is usually numbered 0.  But we never did a pilot on this one, so...



STEVE:  So it would be sort of like celebrating your birthday the day before your birthday.



LEO:  Yeah.  This is the last podcast of the first year, and the next podcast will be the first podcast of the second year.  So when is the anniversary?  Now or next week?  I don�t know.



STEVE:  I don�t know.



LEO:  Happy birthday.  Happy anniversary.  Let�s not be too sticky.  You know, it reminds me of, in the year 2000...



STEVE:  Let�s have it be on both.



LEO:  We�ll celebrate both.



STEVE:  Both, yeah.



LEO:  In the year 2000 remember there was that whole debate, is this really the end of the millennium, or, you know, well, it is the end, but is it the beginning of the new millennium?  No, 2001 is the beginning of the new millennium, blah blah blah.



STEVE:  Right.  Because there was no year 0.



LEO:  Right.  It just seems to me to be a semantic quibble.  And I�m not going to get in the debate.  But happy birthday, happy anniversary, 52 episodes � almost 52 episodes done.  Now, that�s true, I have to say, we can�t celebrate till the end of this episode.



STEVE:  Well, that�s a good point.  That�s a good point.



LEO:  We don�t know what�s going to happen.  Well, I do know one thing.  This would normally be our mod 4 question-and-answer episode.



STEVE:  It would if we hadn�t had such a frantic week of security events.  We had the Black Hat and the DEFCON conferences in Vegas.  And so much was revealed that I want to talk about that I just, you know, we�ll just push these questions to our next mod 4 and cover the phenomenal number of things, and many of them very, very worrisome.  I wanted to let people know that I�ll be talking about a lot of things that they�re probably going to want to follow up on.  I�ll have links galore on our show notes this week.  Basically, I�ll be making up for all the many weeks where I just say, well, I had no links to share, or, you know, additional notes.  So, you know, check back next time.



Well, this page � and you know, Leo, you can copy them onto the TWiT site or refer people to the show notes page on GRC, whatever you want to do.  But I want to let people know that there�s going to be some things they�re going to want to follow up on.  Don�t drive their car off the road trying to write these down if they�re listening to the podcast Friday morning and not wanting to lose this information.  It�ll all be on our show notes page.



Many people sent me offers or links to what they thought were script-free, CSS-only menus.  For one reason or another, none of them worked for me.  So I wanted to � in our show notes is a link to the R&D menu that I developed over the course of those two months with the help of the great group of people in our newsgroups.  And the menuing system that�ll shortly be appearing on GRC is robust to a level that nothing else we have found on the web is.  It runs cross-platform on all Mac browsers, all Windows browsers, old browsers, new browsers, I mean, virtually, I mean, almost shoe leather browsers.  I mean...



LEO:  Let me ask you, because that�s difficult without doing logic checks using JavaScript for the browser.  How do you do that without saying, okay, if you�re Internet Explorer, do this?



STEVE:  Yeah, I mean, it really is difficult.  For a while we had a number of what are called �CSS hacks,� which take advantage of parsing errors that specific browsers have.  And in fact...



LEO:  Of course, if they fix the browser, then they fix that error, you�re not going to have...



STEVE:  Well, I mean, exactly.  It�s not a, I mean, there were several places where we had them.  I ended up working all of them out.  So we ended up even virtually hack free.  And there might still be one.  Now I can�t quite remember.  There was a Safari behavior where I had to keep Safari from reading one CSS rule.  But I�ve explicitly put the result of this work in the public domain.  There�s a banner at the top of the page, the mainmenu.css page, saying where I�m placing this in the public domain.  I also, not only for myself, but for anyone else, I commented it extensively.  I mean, almost a line-by-line commentary of, you know, what the heck this wacky thing is for.  I mean, it is a phenomenally complex piece of work.  But it�s the most robust menuing system I�ve seen, and it is script-free.



Now, we�re going to be talking about scripting here in the rest of our errata because scripting comes up several times this week.  And it turns out that, I mean, you know, I surf, as I�ve said often, with JavaScript, all scripting, disabled because that�s the right way to do it.  And we�ll be seeing a little bit more why here in a minute.  But many menus are, as you said, require JavaScript in order to function.  And, you know, so I�ll go to sites where, you know, they don�t work.  It turns out that about 10 percent of Internet users are now surfing without scripting enabled.  So 10 percent of sites, well, all sites that depend upon scripting for their site navigation are not going to be functioning without someone having to lower their security, enabling scripting, in order to get the menus to work.  And it�s a constant annoyance for  me.  So I just couldn�t have GRC, you know, need scripting enabled.



And so anyway, so the point is there�s a link, it�s GRC.com/menu2/invitro.htm, which is just sort of the development menu that we ended up putting together.  I say �we,� me and all the people in the newsgroup who were, like, pounding on it and testing it and changing the window size and just, you know, I mean, it ended up being a tremendously robust solution, which I just want to bring to people�s attention because there was a lot of interest in this notion of a script-free menu.  And, you know, I�ve got one, and I�m giving it away to everybody.



LEO:  That�s great.  That�s great.  Well, I�m sure the community will be very interested in what you�ve done and will be borrowing heavily, liberally, from your solution.



STEVE:  I hope so.  It would be great.  And I wouldn�t have to be lowering my security all the time in order to use other people�s menus.



LEO:  Right, right.



STEVE:  Something else happened, well, a number of things.  You know how � I don�t know how much of an eBay user you are, Leo.  But, you know, I...



LEO:  I buy stuff all the time.  I just bought two things this week.



STEVE:  Yup, I do, too.  I realized I could get the old HP11C calculators there, which I have now an inventory of, just because I never want to be without them.  It�s the best calculator ever created.  And, you know, one of the things that anyone using eBay depends upon is that feedback because, you know, you want to know that the person you�re buying something from is real.



LEO:  Right.



STEVE:  And so you use the community�s history with those sellers, and presumably the sellers look at the buyers� feedback to see, you know, okay, everybody is a good guy.



LEO:  Right.



STEVE:  Well, get a load of this.  The latest application of Botnets, you know, that we�ve talked about often, about trojan programs which get installed in people�s computers and then use their Internet connections.  Originally it was just to attack other people.  Then we had spam problems where bots or these trojans were sending spam to people.  The latest application of Botnets is creating fake high-confidence eBay users.



LEO:  Oh, no.



STEVE:  They�re using � Botnets are being now used to create new fake eBay users.  Then they all do one penny, one cent buy-it-now transactions with each other in order to qualify them for leaving feedback.  They leave raving positive feedback to create high-quality fake users that are then used by the Botnet runners, the Botnet owners, to create large dollar volume fake sales for something that looks very good.  Then that of course allows users to get fooled into trusting someone who�s going to take their money and never ship their product.



LEO:  Oh, my goodness.  Is there any way to spot that?



STEVE:  You can imagine that eBay knows about this, and they�ll be doing, you know, whatever they can, you know, maybe putting little CAPTCHAs on, like, all the pages...



LEO:  There you go.



STEVE:  You know, CAPTCHAs...



LEO:  That�ll do it.



STEVE:  CAPTCHAs being those little funky things where you have to type in something that it says in order to prove that you�re human.



LEO:  It�s getting frustrating.  There are CAPTCHAs everywhere now.  You can�t put a comment on Digg without a CAPTCHA.  But that�s because of these automated solutions that are spamming and doing other things.



STEVE:  Exactly.



LEO:  Yeah.  Oh, that�s ter- I�m devastated because I do rely on those seller ratings.  And...



STEVE:  Well, yeah.  I mean, I�ve got a 100 percent perfect rating.  And I�m, you know, I�m proud of it.



LEO:  Well, I guess if you look at � if you read the comments, it should become clear when they�re automated and when they�re not.  There�ll be a certain uniformity to them, I would imagine.



STEVE:  I wanted to let everyone know, both from the standpoint of, you know, Security Now!, and also just, you know, eBay users, you need to be careful.  Maybe, you know, maybe for something that�s enough high value, have an interchange with the seller in order to get some confidence.  I don�t know, I mean, but anyway, buyer beware.



LEO:  Yeah, no kidding.



STEVE:  Speaking of buyers, Hamachi was bought.



LEO:  This stuns me.  I never thought this would happen.



STEVE:  Yeah, I�m not happy about it because I trusted and got such a good feeling from Alex Pankratov, the developer and guy behind Hamachi.  And, you know, I hope they keep it free.  Anyway, it was bought by LogMeIn, which has, you know, some related services.  Get this, Leo.  When we first talked about Hamachi, they had about a quarter million users.  Then they had, last December, after we talked about them and, you know, things really began to get going, they were at about three quarters of a million.



LEO:  Wow.



STEVE:  In April, just, what, five months ago, they were at two million.



LEO:  Oh, my goodness.



STEVE:  And now they have three million users.



LEO:  Ho ho ho.  So you�re responsible for a total � two orders of magnitude growth in that company.



STEVE:  I think Security Now! really did serve...



LEO:  Holy cow.



STEVE:  ...to put them on the map.  And of course we also talked about it on Call for Help up in Toronto, so...



LEO:  And I do think that word of mouth, it takes over once you get a certain critical mass.



STEVE:  Of course.



LEO:  And so we helped them get to critical mass.  And then from then on it was explosive.  And I�m glad Alex, good, I�m glad he�s going to make some money.  I hope he�s going to make some good money out of it.



STEVE:  Well, I mean, it was a beautiful system, well conceived.  I always appreciated, I mean, like, right from the get-go, while it was still in beta, the UI was just beautiful, I mean, like really had someone paying attention to it, so...



LEO:  Well, and if you wanted to, I guess you could download Hamachi Server right now and not worry about LogMeIn�s involvement, just run it yourself.



STEVE:  That�s a very good point.  You could set up your own�private...



LEO:  Do it quickly.



STEVE:  Your own private Hamachi network.



LEO:  It was never open source, which always bothered me.  And this is one of the reasons I�m not fond of closed source.  Had it been open source, even had he sold it, you could fork it, and there would always be a free and open version of it, regardless of what he did with it.



STEVE:  Yup.



LEO:  So from his point of view it probably was smart to keep it closed source.  He made, I�m sure, some money.  But from the point of view of the user community, this is why I rarely will recommend a closed source solution.



STEVE:  Yup.



LEO:  Moving on.



STEVE:  Okay.  Well, got some bad news.



LEO:  Uh-oh.



STEVE:  The bright guys down at EI in Aliso Viejo...



LEO:  The great security company.



STEVE:  The big � and, I mean, they�re a bunch of really neat young, you know, like White Hat hackers.  They found a bad problem in D-Link routers.



LEO:  Uh-oh, I just bought one.



STEVE:  Early � I know.  Early this year they informed DLink, toward the end of February, and gave them half a year to deal with it.



LEO:  Uh-oh.



STEVE:  D-Link has done nothing.  Okay?  Now, and it�s funny, too, because, I mean, the fundamental principles of security just keep applying.  How many times have you heard me talk about not running services or servers, servers you don�t need?  And how many times have we said disable Universal Plug and Play?



LEO:  Mm-hmm.



STEVE:  Turns out there�s a stack overflow, a traditional buffer overrun, in a handful of D-Link routers � the DI-524, the 604, the 624, the 784, the EBR-2310, the WBR-1310, and the WBR-2310.  Again, we�ll have links on our show notes to EI�s page, which talks about this.  But reading from what EI said, they said a remote stack overflow exists in a range of wired and wireless D-Link routers.  This vulnerability allows an attacker to execute privileged code on an affected device.  When a specific request is sent to an affected device, a traditional stack overflow is triggered, allowing an attacker complete control of the router.  With the ability to execute code on the device, it is then possible to apply modified firmware and ultimately compromise the entire network.



LEO:  So you would use this attack to change the router�s firmware and presumably put some code in there that would give you kind of easy access to the network.  Now, if the machines on the other end are secure, would that matter?



STEVE:  Well, there�s no way you would want the equivalent of somebody plugging their own connection into your inside, your internal network.



LEO:  Right.  I mean, you may not � they may have to find another attack to get into your machines.  But at least they�have unfettered access.  It effectively turns off your�firewall.



STEVE:  Well, it does anything it wants to.  Now, we should say that this is a Universal Plug and Play server, and that�s only facing the LAN side.  So first somebody would have to get access one way or another to the LAN interface, that is, you know, so it would have to be code running in your machine that was talking to the router, or if you were using unsecured Wi-Fi, then of course that gives them LAN-side access.  So unsecured wireless would then probably be the most typical entry point.  But if anyone were, like, out, or driving, and you did not have WEP or WPA security on one of these D-Link routers � which after half a year, I mean, that�s annoying.  After half a year, this has not been�fixed.



LEO:  They should fix that, you bet.



STEVE:  Clearly, there just isn�t enough pressure on D-Link to do this, or they would have.  So, you know, maybe by us talking about it we�ll help to bring some pressure to D-Link and get this firmware updated because that�s all it takes.



LEO:  Well, this is how EI works.  EI�s really good.  I mean, they do, you know, it�s a balance between full exposure and keeping it quiet.  So they give you six months.  But if you don�t do anything in six months, then the only way to put pressure on a company is to announce it publicly.



STEVE:  Yup, yup.



LEO:  You know, the idea � and the companies, of course, all get upset, well, you�re telling hackers how to use it.  Well, we told you first.  And if you didn�t patch it in six months, by now many hackers may in fact know.



STEVE:  Right.



LEO:  So the only thing we can do is to tell the world.  Boy, that�s a shame.  Now, it�s fortunately not the router I bought, and...



STEVE:  Good.



LEO:  So to lock my router down � first of all, it�s not wireless, so that�s a good step.  Is it sufficient to turn off Universal Plug and Play?



STEVE:  Yes, because it is an overflow in that server.  And, you know, we...



LEO:  So we�ve always told people to do that.



STEVE:  Yes.  We�ve always been telling people, unless you know you need Universal Plug and Play, turn it off.  It�s a good thing not to have it on because it does allow anything that gets loose in your system to reconfigure your router behind your back.  And now we know, because of � on these D-Link routers, because of a buffer overrun in the Universal Plug and Play server running in the router, it allows even a much greater degree of compromise.



LEO:  So this is, once again, another reason to do these lockdown things that we tell you to do with your router, including turning off UPnP.



STEVE:  Speaking of which...



LEO:  Uh-oh.  Another one?



STEVE:  Oh, yeah.  We all know what a fan I am of client-side scripting.  And I�ve got my tongue in my cheek.  I�m biting it.



LEO:  Firmly.



STEVE:  Yes.  You know, client-side scripting, in email, in web browsers, anything, is bad.  You know, and people say, oh, but it�s so nice.  It�s like, yes, and it�s bad.



LEO:  Now, I�ve always agreed with you when it comes to Active Script because Active Script, which is the Windows technology, really has no sandboxing at all.  But surely we�re safe with JavaScript.



STEVE:  No.



LEO:  He said, setting you up.



STEVE:  Thank you, Leo.  What has been figured out by some guys at a security company, SPI Dynamics, is how standard JavaScript with no bugs, no exploits, no buffer overruns, no mistakes at all, can be used to port scan your internal network, identify devices, take them over, reprogram them...



LEO:  Whoa.



STEVE:  ...and send any information home.



LEO:  So by going to a website, running JavaScript, they could do that to my internal network?



STEVE:  Yes.  And there�s a proof of...



LEO:  Wow.



STEVE:  There�s a proof-of-concept online right now that demonstrates � basically you go to their page.  Their JavaScript will scan your internal network and any site you went to that was using scripting, and you can bet that it�s not going to take long before this, I mean, this is now out in the wild.  This was talked about at the Black Hat conference last week.  And so all the bad guys know about this now.



LEO:  So should I turn off JavaScript?



STEVE:  Well, yes.  I mean, Leo...



LEO:  Oh.  But, Steve...



STEVE:  I�ve been saying it�s bad.



LEO:  But Steve...



STEVE:  This is what I�m talking about.



LEO:  None of my sites work without, I mean, nothing works without Java.



STEVE:  Well, mine does.  Why?  Because it�s possible.  I mean, okay, but...



LEO:  Yeah, but with all due respect, your site does not do all that much.



STEVE:  It doesn�t jump up and down and dance around.  I know.  But...



LEO:  It doesn�t do a lot of things.



STEVE:  Okay.  Let me just...



LEO:  You don�t set session cookies or anything, right?  You�can�t.



STEVE:  No, I have � I�m just beginning to use cookies because that�s another thing I want to begin...



LEO:  But to set session cookies, don�t you need JavaScript to do that?  Or some scripting.



STEVE:  No.



LEO:  You could do server-side.



STEVE:  Well, yeah.  I mean, cookies have traditionally been�server-side.



LEO:  That�s true.



STEVE:  Okay, so, okay.  SBI Dynamics says, and I�ve got...



LEO:  All right, I�m turning off JavaScript right here.



STEVE:  ...I�ve got links to this stuff � says imagine visiting a blog on a social site like MySpace.com, or checking your email on a portal like Yahoo�s Web Mail.  While you�re reading the web page, JavaScript code is downloaded and executed by your web browser.  I mean, we all know that�s the way these things work.  In this case, it scans your entire home network, detects and determines your Linksys router model number, and then sends commands to the router to turn on wireless networking and turn off all encryption.  Now imagine that this happens to a million people across the United States in less than 24 hours.  This scenario is no longer one of fiction.



LEO:  Well, it doesn�t break TWiT.tv too much.  The only�thing it breaks by turning off JavaScript is our Flash�Player.



STEVE:  So they say...



LEO:  We can recode that.



STEVE:  Yes.  They say getting inside the Intranet, the scanner is written in JavaScript, which can be embedded into any HTML page.  Simply viewing the page downloads the JavaScript along with the HTML to the user�s browser, automatically executing the code once loaded.  It does not matter if the user is sitting in a coffee shop using a wireless hotspot or inside an office building using a corporate network.  If a user can browse the web, he or she can visit a page that includes the scanner and have his or her network, whether internal or external, be scanned and�attacked.



LEO:  Well, and using MySpace as an example is a very good example because, as we know, the WMF flaw was propagated to a million computers on MySpace just a few weeks ago.



STEVE:  Exactly.  Exactly.



LEO:  A lot of unsophisticated users on MySpace.



STEVE:  Anyway, these guys go on to explain how the equivalent of a ping can be created with JavaScript to ping all the IPs within a range.  We know that JavaScript is able to determine the user�s IP because we�ve talked in the past about how some of those sites scare people by saying we know, you know, the private IP of your computer.  And we�ve said before, yeah, okay, big deal, that doesn�t do anything.  What in this case it tells the scanner what kind of network you�re on and what range of IPs to scan for other machines.  And they go on to show how this thing can find web servers and then send requests to web servers which may be less secure on the Intranet than they are from the outside on the Internet, where they�re worried about, you know, bad guys getting in.  And, I mean, basically do anything this thing wants to inside your network.



So, I mean, Leo, the problem is you are going to untrusted sites and running script that they provide.  It�s just a bad�idea.  I mean, it�s unfortunate that it�s bad.  But like�so many things that we want to do, they�re not secure.  And here is a perfect example now, finally, of what, you know, valid, non-buggy JavaScript can do on your machine whenever you visit a website that chooses to do this for whatever�purpose.



LEO:  Well, all I can say is we�re going to turn off JavaScript on TWiT and figure out a way to make it work without JavaScript.  There are a lot of things that use JavaScript, unfortunately, including ad banners and, I mean, a lot of the �Net relies on JavaScript.



STEVE:  Well, you know, Leo, we trust you.  I have put you in my trusted list on IE.  And so when I go to TWiT, everything jumps around and dances the way you want it to.



LEO:  There�s not that much jumping and dancing.



STEVE:  So what I would say is, you don�t have to turn it off and not use it.



LEO:  Choose safe sites.



STEVE:  You don�t have to turn it off and not use it.



LEO:  Right.



STEVE:  Well, no.  Like from your standpoint as a�webmaster...



LEO:  Right.



STEVE:  ...what you want to do is you want to focus more on the hopefully growing percentage of security-savvy users who will visit your site with JavaScript at least initially disabled.  So, you know, I mean, and certainly I see sites more and more that say, you know, that stop me as I�m trying to enter, saying this site requires JavaScript...



LEO:  Yes.



STEVE:  ...to be enabled.  It�s like, okay, well, and then I make a decision.  How much do I want to go any further?



LEO:  Right.



STEVE:  So from a webmaster standpoint, I would just say think, you know, disable JavaScript on your browser, use your own site, see if it�s okay.  And if not, ask your web designers to do a better job for non-scripted browsers who visit.  Because if I had my way, everyone would have their scripting disabled by default until they chose to deliberately trust someone.



LEO:  Well, and that�s certainly how I�m going to set up my browsers from now on.  But a great many sites, you know, all the AJAX functionality that we�ve come to expect, that�s all�JavaScript.



STEVE:  As a matter of fact, the SPI guys specifically address AJAX and talk about how JavaScript, because it�s a component of AJAX, it is becoming, you know, more pervasive.  And now we�ve seen it�s not safe.



LEO:  Oh.  This is devastating.  Fortunately, most of my sites � my sites make very little use of JavaScript, except for the admin interface, which is an AJAX interface.  So all you�ll lose is the ability to play a Flash Player.  But for instance, there�s some things that, well, I�ll have to look at them.  They�re things like it won�t launch iTunes when you click the iTunes button.  So even a simple site like mine, JavaScript is fairly important for.



STEVE:  I know.  Believe it or not, we got one more bad one.



LEO:  All right.



STEVE:  It turns out that Intel Centrino Wi-Fi chip drivers have a bad bug in the frame processing, which � and this is one thing that also has come out just in the last week.  Intel Centrino, you know, the widely deployed wireless chipset family that lots of laptops are using, has � the Windows drivers have a very bad bug that allows you to bypass Wi-Fi security.  Any...



LEO:  Now, is this the demo they did at Black Hat where they took over a MacBook?  Is it the same flaw?



STEVE:  No, that�s a different flaw.



LEO:  Another flaw.  Wonderful.



STEVE:  Yes, another flaw.  This affects only Windows drivers.  Again...



LEO:  Now, Intel did ship new drivers for its Wi-Fi shortly after the Black Hat demo.  I wonder if that fixed this flaw.



STEVE:  Oh, yes.  This flaw has been fixed.  I�m wanting to tell people about it.  I mean, unlike the JavaScript problem, which, you know, we�re stuck with...



LEO:  We can�t fix that.



STEVE:  ...this is a bug, it has been patched.  Again, links on our page take you to a downloadable tester that will tell you what version of Centrino you have and which ones are vulnerable.  And then Intel has a patch.  Unfortunately, the patch is just huge.  It�s 130MB to download this.  Although you don�t have to install all that, but you do have to download that blob.  And then, and in fact, on one of my tablets I was � I had a buggy driver in one of my tablets.  On my little Libretto, it doesn�t use Centrino, so I was fine there.  But anybody who�s got, like, that Centrino label on the back of their � or maybe the underside of their laptop ought to take a look at this because it is � the thing that�s scary about it is that no encryption and protection saves you.  This is an error in the packet processing, the frame processing before we get to encryption and security and decryption.  So potentially somebody sending this specially malformed packet could execute code.  Oh, and the code executed is at the privileged level of the driver, which of course is the kernel.  So...



LEO:  Is always Ring 0.  That�s how a driver has to work,�yeah.



STEVE:  Exactly.  So full kernel privileges.



LEO:  Oh, wow.



STEVE:  So anybody using Centrino wants to get this stuff from our show notes and get themselves patched immediately.



LEO:  Now there is, of course, this larger issue, which was demonstrated at Black Hat, with almost all, they said, Wi-Fi drivers.  Similar buffer overflow, I expect, although they did not tell the world how the exploit worked.



STEVE:  Right.



LEO:  But they attacked a MacBook.  Of course they had to use a third-party Wi-Fi card to do it, which nobody would do since you already have one.  But...



STEVE:  Right.



LEO:  ...they said, and we used a MacBook because Mac users are so smug, we just wanted to show them they have problems, too.  But it is a problem on Windows machines just as much.  So this...



STEVE:  Yup.



LEO:   There are holes in these drivers.  But it�s a really scary thing when you have security flaws in a driver.



STEVE:  Well, yes, and especially one on Wi-Fi because of the wireless problem, I mean, the opportunity to do wardriving, and one which affects you independent of WEP or WPA encryption.  I mean, there is no protection for this other than patching the driver immediately.  And because it�s wireless, inherently, I mean, people have talked about the possibility of a wireless worm.  Because a worm could jump from one wireless notebook to another, like in an airport or in a coffee shop, or even in a corporation where a lot of people are using, like, internal Wi-Fi hotspots.



LEO:  I have to say it sure sounds like the hackers are winning today.



STEVE:  It�s been a busy week.



LEO:  This is bad.  Do you have any good news at all?



STEVE:  I have a piece of really neat good news.



LEO:  Thank you.  Can you end with that?



STEVE:  Yes.  And as a matter of fact, it is the last one of my lengthy list of errata for the week.



LEO:  Because I don�t want to end on such a scary note here.



STEVE:  There�s a group called the Stop Badware Coalition that is developing a list, a comprehensive list of sites that are known to have malware content.  Google has just started working with them.



LEO:  Oh, wonderful.



STEVE:  And it�s really cool.  Google will alert anyone who clicks on a link which is going to a site which is known or believed to have some sort of spyware, malware, or just sort of generic badware.  It�ll instead take the user to this Stop Badware Coalition page...



LEO:  Oh, fantastic.



STEVE:  ...just to give them a warning that, you know, you should know that there�s, you know, there�s been some concerns raised about the site you are about to visit.  Do you want to keep going?



LEO:  Holy cow.



STEVE:  It�s very cool.  And get this, Leo.  It turns out that in a study they did a few months ago, prior to launching this, 10 percent of search results are of sites that have this collision of known badware.



LEO:  Wow.



STEVE:  So one out of 10 links that Google returns, or any other search engine is returning � of course this is a great advantage for Google.  And the Stop Badware Coalition guys are first working with Google.  It�s not an exclusive relationship, so you can imagine that all the other search engines are going to want to jump on this.  Because, I mean, basically it�s a cool service for protecting users from going to sites that have known problems.



LEO:  It�s a huge burden and a lot of power in the hands of Stop Badware.  I should point out that Stop Badware is a coalition.  Google, Lenovo, and Sun Microsystems are partners.  It�s kind of � it was � I think it�s kind of a � I�m not sure, but I think it�s kind of a newer group that was started kind of with this in mind.



STEVE:  Yes, and only recently.



LEO:  Yeah.  In conjunction with Harvard�s Berkman Center.  So, and Oxford University�s Oxford Internet Institute.  So these are good people.  Consumer Reports is involved, as well.  So I think that this is good.  I mean, there is a lot of power now that this group has because...



STEVE:  Oh, imagine being incorrectly listed.



LEO:  It would be, you know, devastating.



STEVE:  Oh, my goodness.



LEO:  So it�s important that they really be, you know, above suspicion in any way and that they be absolutely objective.  And apparently they�re so.  I mean, I�m impressed with what they�ve done.



STEVE:  Yup.



LEO:  So, and thank you, Google, for doing this.  It�s a risky thing for Google to do.  I mean, it puts � it exposes them, as you know.



STEVE:  I think it�s a next step.  I mean, ultimately it�s like � it�s the kind of thing where it�s like, yeah, I wish I�d thought of it.  I mean, it�s...



LEO:  But it�s a risky thing to do because you�re going to get sued.



STEVE:  Yup.



LEO:  I mean, let�s face it.



STEVE:  Google is being sued all the time anyway because people are pissed off that they�re not ranked where they think they should be in Google�s engine, so...



LEO:  So thank you, Google, for taking the hit for all of us on this one.  It�s an important thing to do.  I bet you � you said other search engines should do this.  They may be forced to just because Google�s doing it, and it�ll be one more reason for everybody to use Google.  But I bet you there�s a lot of resistance among the management of these search engine companies saying, geez, we don�t want to go out on a limb like that.



STEVE:  Yeah.  I mean, it�s just � who would not � I mean, if you were � you didn�t have any other reason to use Google, like liking it, if you were using other search engines, you could...



LEO:  Now use Google.



STEVE:  I was going to say, who wouldn�t prefer that, just to have that extra layer of protection?  So everyone � before long it�ll just be the way it�s done.



LEO:  And as it should be.



STEVE:  Another step forward.



LEO:  Exactly.  Well, I�m glad you ended on a happy note.  Actually I have one more story to add that really isn�t security, it�s more about privacy.  But it just raises the issue of search engines and how much they know.  I don�t know if you saw the New York Times article, I think it was today, about America Online.  You may remember last week America Online admitted, and later apologized...



STEVE:  The screw-up,  yup.



LEO:  Yeah, that they gave a lot of information about searching � they published it.  What did they do?  They gave it out, or they � I can�t remember...



STEVE:  I didn�t follow it closely, either.  I just knew that they were embarrassed, and they were apologizing for some sort of information disclosure.



LEO:  They collected, well, they made a list of 20 million web search queries on AOL.  And, now, you might say, as AOL did, well, they�re anonymous.  We�re not giving out personal information.  This database is just what people search for.  We numbered the users so no one knows who it is.  Well, an intrepid reporter for The New York Times looked at the information.  And, you know, it�s not as anonymous as you might think.  He actually tracked down No. 4417749, mainly because her searches, as most of our searches would, I think, gave a lot of information about who she is.  She was searching for landscapers in her hometown and searching for people with a last name that was similar to hers.  And, I mean, it was enough information that this reporter was actually able to talk to her.



STEVE:  Wow.



LEO:  So that�s a terrifying thought.  Would you like all the things you�ve searched for in the last year to be published on the Internet?



STEVE:  No.  And, I mean, you could argue that it would be easy for people to also, to, like, misinterpret what we�re searching for.  I mean, after all the revelations this year about the NSA, you know, watching us, I�m � and there was something just the other day.  I was � it was something to do with a suspicious, you know, anti-terrorism sort of website thing.  And I just thought, boy, I mean, it�s kind of creepy to think that what we do on the �Net may be watched, and somebody may be interpreting our intentions, which of course, you know, that�s the leap that they have to make is understanding why it is that a person is going�there.



LEO:  AOL did pull the search data off of its site over the weekend, apologized for the release.  They�re saying it was an unauthorized move by a team who actually just wanted to benefit the academic community, you know, here�s a lot of raw information that maybe you can get some value out of.



STEVE:  Yeah.



LEO:  So they did � I think they did it in the best intentions.  But it just points up that, you know, there is a � you don�t need somebody�s name to know a lot about them.



STEVE:  Well, and, you know, that�s really � it�s funny you say that because one of my arguments against the whole third-party cookie thing is the aggregators are saying, oh, no, this is anonymous.  It�s like, eh, it starts out being anonymous.  But when you acquire enough information � and that�s the whole point of aggregating data.  You aggregate all this, and you end up with something that can sometimes not be so anonymous.



LEO:  I�ll put a link along with your links to this New York Times article.  It�s quite...



STEVE:  Cool.



LEO:  ...quite amazing.  Well, now that we�ve scared the pants off of everybody, and maybe cheered them up a little bit with the Google information, I think it�s time we adjourned this edition of Security Now!.  But we�ll be back next week.  Do you want to pick up the virtualization topic?



STEVE:  Yes, that�s what we�re going to do.  I�m going to talk about sort of the granddaddy of commercial companies, VMware, which I�ve actually been using for many years.  And�so we�re going to kind of cover what they offer and their products and give people some introduction to that.  And that�ll be our next step in discussing virtual machine�stuff.



LEO:  I can�t wait.  Of course we want to thank the folks at Astaro for providing the wherewithal to continue this podcast.  It�s their support really that encourages me so much with Security Now! because, you know, we could go on doing this for a long time out of our own pocket.  But the fact that somebody, a company like Astaro has come along and said, you know, it�s worthwhile, we want to help support it, it just really � it makes me feel good.  They are the makers of the Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, from viruses, from hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in an easy-to-use, high-performance appliance, contact Astaro, www.astaro.com, or call (877) 4AS-TARO, you can schedule a free trial of the Astaro Security Gateway appliance in your business.  And of course, as always, non-commercial users, you and me, can download the software version of ASG for home use absolutely free.  That�s also at Astaro.com.  And for a low price, I think it�s 79 euros a year, you can add very strong antivirus, antispam, and other protections to it that�s automatically updated.  It really is a great solution if you�ve got an old box lying around that you could put Linux and Astaro on.  This is a really neat thing to do.  Astaro.com.



Of course, Security Now! is provided by Steve as a pro bono benefit to the community.  But if you�d like to benefit him back, I just talked to somebody, it�s so funny, this week who said, yeah, I bought a copy of SpinRite.  I didn�t need it, I just wanted to give something back to Steve.  You don�t have to buy it if you don�t need it.  But if you need file maintenance and recovery � I shouldn�t speak for you, Steve.  But I think you would agree with me.  Don�t buy it if you don�t need it.  But if you have a hard drive, you might want it.  SpinRite is the absolute best in file recovery and disk maintenance.  It�s available at GRC.com.  And if you want to read some testimonials, SpinRite.info is a great place.



STEVE:  And you�re right, Leo, I mean, I would never ask anyone to spend $89...



LEO:  You don�t need donations.



STEVE:  Right.  My whole goal here is just to plant the seed.  I mean, sooner or later pretty much everybody who uses a PC over a long period has some sort of a disk crash, I mean, you know, a physical problem that they turn their machine on and it says, you know, �No operating system found.�  It�s like, I mean, or...



LEO:  Let me ask you a question.  Because what happens with SpinRite is you make a boot CD or a boot floppy that�ll run SpinRite.  Because you run it from DOS, basically.



STEVE:  Correct.



LEO:  Now that Macintosh runs on Intel, can I use it on my Mac machine, on an Intel...



STEVE:  You know, we�re getting questions about that.  And I don�t know yet.



LEO:  You have a Mac Intel.  Why don�t you try it?



STEVE:  Well, you know, I do.  But I�m liking the Mac...



LEO:  I don�t think it�ll boot.



STEVE:  I�m liking the Mac so much that first I cut the hard drive in half using Apple�s Boot Camp.



LEO:  Right.



STEVE:  So it was half Mac and half Windows.



LEO:  Right.



STEVE:  And I got Windows installed and set up, and it all worked really well.  It�s like, okay, cool.  Now I�ve got, you know, Windows on this really nice Mac hardware.  Then I was using the Mac for a while, and I was thinking, I�m kind of liking this Mac side.  So I wiped out the Windows side, and I used Boot Camp again to repartition it.  And this time I only gave Windows 10GB out of my total of 80.  And now it�s gone completely.



LEO:  Oh, no.  Don�t tell this...



STEVE:  Well, because one of the tools we�ll be talking about is Parallels...



LEO:  Yes, I love it.



STEVE:  ...which is a virtual � it�s a virtual machine technology for the Mac which, on an Intel machine, runs Windows at full speed in a window.



LEO:  I love it.



STEVE:  So, I mean, well, it�s a cool solution because, for example, I�ve got some friends that I would like to have always had on a Mac, except they, like, need one particular application.  I�ve got a really great realtor friend, and she has to have her...



LEO:  The multiple listing or something.



STEVE:  ...this one application for her multiple � it is, it�s her multiple listing thing, and it only runs under Windows.  So this is like a perfect solution for her.



LEO:  So it�s not that it won�t check the disk, because it�s file system independent, right?



STEVE:  Well, yes.  Because it�s about the physical sectors.  SpinRite actually runs underneath the level of the file system, dealing with the actual recording of data on the disk, and doesn�t care what the data is that it�s reading.  It works to recover it and also to remove bad sectors from use, swapping them out with spares that the drives always�have.



LEO:  So it would work on Linux, it would on a Mac.  The issue really is booting it.



STEVE:  People run it on their TiVos.



LEO:  Oh, yeah, of course, it�d be great for that, yeah.



STEVE:  I mean, they fix � SpinRite�ll fix TiVo drives that are in trouble.



LEO:  Right, right.



STEVE:  So in theory.  However, it is down at the bare metal.  I wrote it, of course, all in Assembly language.  And it�s, you know, it was...



LEO:  There�s no BIOS, there�s no traditional BIOS on a Mac.



STEVE:  Oh, then you�re right.



LEO:  So I don�t think it�d work.



STEVE:  It�s not going to bring all of the stuff around it.  Still does � it expects to see a PC.  So you�re correct,�Leo.



LEO:  But I have a feeling, gang, with Steve�s new love, that maybe somebody for Mac users, too, there�ll be a�SpinRite.



STEVE:  Well, and Mac people do use SpinRite by pulling the drive out...



LEO:  Right, right.



STEVE:  ...and sticking it over on a PC.  So...



LEO:  It would work � that would work fine, then.



STEVE:  And it does, and...



LEO:  Okay.



STEVE:  ...people have done it a lot.



LEO:  Okay, that�s good to know.  GRC.com.  That�s also where you�ll find the show notes, the 16KB version of this show for the bandwidth-impaired, and Elaine�s fantastic transcriptions, for those who�d like to read their Security Now!, or many do, read along with Steve.



STEVE:  I�m seeing notes from people who are using Google to find the transcripts, which then lead them into the podcast.



LEO:  Interesting.



STEVE:  And so we�re acquiring people who are doing Google searches for things, and they run across the transcripts.  And so it�s really nice because Elaine�s transcripts mean that Security Now! is searchable.



LEO:  Right.  Well, and I will add that it is going to be searchable in another way because we�ve done a deal with Podzinger, which is a BBN company, and they do amazing work in voice-to-text.  And they are scanning now all of the TWiT.tv network programs, creating transcriptions � not as good as Elaine�s, they�re computer transcriptions � but good enough for searches.  And we�re soon to implement a new search box that � we already have a text search box on TWiT.tv, but we�ll have a text and audio search box that will allow you to search any of the podcasts.  And this will be great.  So if you want to know more about Netstat, you can go and type �Netstat.�  Not only will it take you to the podcast where Steve talked about Netstat, it�ll take you � it�ll queue it up to that portion of the podcast.



STEVE:  Oh, very nice.



LEO:  Isn�t that nice?  So there�s a little player, you press play...



STEVE:  And you�re able to do that without any scripting.  That�s amazing.



LEO:  Yeah.  We�ll see about that.  I don�t know.  It might not work without � I think as a goal for all websites, and certainly for mine, eliminating all scripting is, you know, all client-side scripting is worth doing.



STEVE:  Or a reasonable compromise, I think, is to minimize the impact from not scripting.  You know, so as a � I think a responsible webmaster should just turn scripting off and, you know, see if the site is still usable.  Maybe not all the bells and whistles are still working; but at least, you know, you could get around.



LEO:  Well, of course I did do that the minute you told me earlier in the podcast.  And as I mentioned, the only thing that seems not to work is the Flash-based player.  I guess it uses a little � in fact I know it uses a little JavaScript to pull up the player.



STEVE:  Right.



LEO:  But we can change that.  That�s just an easy thing to change.  But the search still works, by the way.



STEVE:  Right.  For people who are Firefox users, there�s a very nice Firefox plug-in called NoScript.



LEO:  Oh.



STEVE:  And NoScript does exactly what I recommend doing, and that is it allows you to run, by default, with scripting disabled, and then whitelist sites that you trust, you know,�Google...



LEO:  Excellent.



STEVE:  ...Amazon and so forth.  So you get the best of both worlds.  You get scripting � and TWiT.tv, of course.  You get scripting for any sites you visit, it automatically turns it on on the fly, in the same way that Internet Explorer uses its zones in order to give you different levels of security, depending upon whether it�s a default Internet site or one that you have explicitly trusted.  So it�s called NoScript for Firefox.  And...



LEO:  I was going to � I almost gave a point to Explorer and�said this is a reason to use Explorer, because of that�capability.  So I�m glad to know about NoScript.  That�s�good.



STEVE:  Yup.



LEO:  Yeah.  All right.  We will say goodbye to you now.  We�ll be back next week talking about virtualization, and specifically VMware.  Remember, TWiT.tv is a place to find, not only this podcast, but a great many others.  We�re actually going to be up to a dozen podcasts soon on all topics technology oriented.  And if you�d like...



STEVE:  My God, you must be busy, Leo.



LEO:  I, you know, I�ve decided to really make this my full-time job.  I kind of was on the fence for a while.  But...



STEVE:  It�s working.



LEO:  Now that we�re getting advertising, we�re getting � the donations have been very strong.  And by the way, the fact that we have advertising doesn�t mean stop donating.  I really appreciate those donations.  The reason is we use the donations to support infrastructure, which includes, of course, server expenses, equipment expenses, rent, that kind of thing.  And the advertising money goes to the hosts, you know, to pay for them.  Because everybody, including Steve, are doing it voluntarily right now.  And me.  But, you know, it�s exciting.  I think things are really going well.  And I really think there�s an interest in this kind of information.  I know, if Security Now! didn�t exist, I would be missing a lot of really important information.  So I�m very grateful to you, Steve, for doing this for a year for � actually you�re starting to get a little money now that we have advertising.



STEVE:  Well, and the audience seems to be holding.  I mean, we�re holding strong...



LEO:  Well, we�re growing.  Oh, we�re growing, baby.



STEVE:  Is that what the last number showed?



LEO:  Yeah, if you look at the last numbers, I think some of the strongest numbers we�ve had yet.



STEVE:  Very nice.



LEO:  So I�m very encouraged.  People do like what we�re doing, and we appreciate it.  We�re glad you listen.  And we hope you�ll be back next Thursday for another exciting, thrilling, gripping, and let�s hope not so depressing, episode of Security Now!. 





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/








GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#53

DATE:		August 17, 2006

TITLE:		VMware

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-053.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm





DESCRIPTION:  Steve and Leo briefly recap the concepts and technology of Virtual Machine (VM) technology, then thoroughly explore the free and commercial offerings of the earliest company to pioneer Intel-based high-performance virtual machines, VMware.  They focus upon the free VMware Player which allows Virtual Machine �Appliances� to be �played� on any supported platform.  They examine the value of these VMware solutions for creating highly secure �sandbox� containment environments as well as for cover-your-tracks privacy.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 53 for August 17, 2006:  Virtualization Part 2.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



It�s Thursday, and you know what that means.  It�s time to find out what�s going on in the world of security with our good friend Steve Gibson, the security czar.  I�m naming you the czar of security now.



STEVE GIBSON:  Well, and now I�m the birthday czar.



LEO:  Happy birthday!



STEVE:  To Security Now!.  This is the official anniversary, being Episode No. 53.



LEO:  Hallelujah.



STEVE:  Yup.



LEO:  Wow, that�s great.  Congratulations.



STEVE:  It really has gone quickly, Leo.



LEO:  It has.  It doesn�t seem like a year.



STEVE:  No.  No.



LEO:  I�m really pleased.  So that�s great.  And I expect we will go on for many years to come.  I certainly hope so.  Gosh knows security isn�t going to go anywhere.



STEVE:  No, I think we said, was it the week before last, we�ve got Vista coming out.  That�s going to keep us really busy, I think.



LEO:  Plenty to talk about.  Plenty.



STEVE:  Yup.



LEO:  So we had started � and it�s now been two weeks, three weeks back...



STEVE:  Yup.



LEO:  ...talking about virtualization.  Shall we recap a little bit of...



STEVE:  Oh, yeah.



LEO:  ...what we talked about?



STEVE:  Yeah, I want to for sure.  I actually � I was a little concerned that people might not be interested in our walk down memory lane, which was, you know, really talking about where it first began and really covering a broad spectrum.  But I got a bunch of really positive feedback from people who like to know things they didn�t know about the history of virtual machine technology and, you know, emulators and UCSD Pascal and all that.  And a lot of people who had been around but hadn�t thought about it for a long time and were saying, oh, yeah, I remember that.  And so,�anyway...



LEO:  And gosh knows we�ve been around a long time, and we can talk about it, can�t we, Steve.



STEVE:  Exactly.



LEO:  Really sometimes we � you and I are the same age and go back to kind of the earliest years of personal computing.  And sometimes I really do feel like an old guy when I � yeah, I remember, we had 4.77 megahertz, and we were happy!  We were glad to have it!



STEVE:  We knew we�d never need more.



LEO:  Never need more than 640K.  So virtualization is what?



STEVE:  Well, the best definition, I think, is it is software pretending to be a computer.  So it�s a computer running within a computer, essentially.  And there are many different flavors because there are many ways to accomplish a computer within a computer.  The traditional sort of older fashioned way was known as like a pure emulator.  And in fact, for example, even the original Basic language, Basic was a language that was interpreted by a computer.  You could consider that a virtual machine; and, in fact, Basic was often compiled down into something called �byte code,� which was a sort of a pseudomachine language that the interpreter then executed as if it were actually the hardware interpreting that byte code.  So there have been many implementations of this.  But essentially the idea is�you have a computer that sort of is creating another�computer.



Now, the tremendous advantage of that, and the reason we�re talking about this at all, is from a security standpoint it means that the software running in the computer�s computer, that is, that virtual computer, thus the name, it isn�t actually running on the raw hardware in an unconstrained fashion.  So constraints can be put around it.  Essentially, and this is the term that we�ll be using, �sandboxing� is the term that�s been used to describe the idea of creating a restricted environment in which software runs so that it�s able to do useful things, but it�s not able to do harmful, malicious, and completely uncontrolled things.  So essentially a virtual computer is a computing environment of some sort.  It maybe purely software, it may be a hybrid, or even purely hardware, in theory, although we really haven�t seen anything like that before.  But it�s certainly possible theoretically to have a virtual computer that is sort of a � that is running only on hardware which is doing the virtualization.  In most cases you have some software that�s involved, too.  So that�s sort of the broad brush background of virtual computers.



LEO:  And its real use in security.  In fact, what�s interesting is because nowadays all of the new Intel processors, for instance, support this kind of stuff in�hardware, there is much less of a penalty paid for�virtualization.



STEVE:  Well...



LEO:  People are more interested in it.



STEVE:  Yes.  And in fact that�s sort of � that�s a nice segue into talking about VMware and where they�ve come from and where they�re going.  What�s happening is, I predict we are on the cusp of a substantial rise in virtual computing.  I think that virtual machine technology, and it�s one of the reasons I�m glad we�re talking about it and covering it, this is something that is with us and is, I mean, it�s funny, too, because it was something done a long time ago.  Then it sort of died out, and no one was really talking about virtual machines for a period of a couple decades.  And then it began to see a comeback as RAM got large enough, as hard drives got large enough, as systems got fast enough, because normally, just exactly as you said, Leo, there�s some penalty paid for this extra layer.  You�ve got a wrapper.  You�ve got, you know, this thing doing the sandboxing does have some overhead of varying degrees.



Well, VMware was early in the game, VMware Corporation, early in the game of taking the Intel processor, which really wasn�t designed to do virtualization, but figuring out how to sandbox it and trap the privileged instructions which are normally not trappable, how to do this in order to create virtual machines.  What is happening now is, because of this resurgence of virtual technology, Intel, and I�m sure AMD will be following, is now making it easier to do this.  So VMware Corporation is being a little concerned because one of their competitive advantages was that they had a bunch of patents � I don�t know, they�ve got, like, 20 or 30 patents on ways to solve these problems where the hardware is still a little hostile to doing it completely, they came up with workarounds.  What is happening is the hardware is now evolving in a direction to make virtual machines much easier to implement.  So some of the competitive advantage that VMware Corporation had is being�lost.



LEO:  Hmm, interesting.



STEVE:  The other thing, the other evolution here, is that we are beginning to see virtual machine technology because it�s so useful, it�s being subsumed by the operating system.  I think we�re � in a very short time we�re going to be seeing Linuxes with increasing virtual machine technology.  Even FreeBSD already has something called �jails,� which is an OS-level supported sandboxing technology that allows multiple users to basically feel like they�ve got an entire FreeBSD machine to themselves, but they can�t get out of jail.  They are not actually talking with full privileges.  Even though you can log in as root, you�re a jailed root user.  So...



LEO:  I like that.



STEVE:  Yeah, it�s very cool.



LEO:  Yeah.  I imagine Windows will do this at some point.  And there have been rumors that Apple would be doing this with their next OS X Leopard, which will be out next spring.  They did talk a little bit about Leopard at the Worldwide Developers Conference, but didn�t mention that, so I don�t know if that will be part of it or not.  They did mention there�s a lot of stuff we�re not showing you, so...



STEVE:  Well, and interestingly, the Worldwide Developers Conference was just last week.



LEO:  Right.



STEVE:  Or two weeks ago.  And Apple � I�m sorry, VMware introduced VMware for Mac.



LEO:  Oh.



STEVE:  So it still � you�re able to sign up for an early beta.  But, you know, we�ve talked a couple times about Parallels.  And...



LEO:  Yeah.  We both use that.  That�s how...



STEVE:  Yup.



LEO:  ...how we run Windows on our Intel Macs.



STEVE:  Exactly.



LEO:  And I�m very happy with it, I have to say.



STEVE:  Well, and in fact it�s very VMware-like.  When I was installing and setting it up, it was like, wow, I mean, the icons even look sort of similar.  And so, I mean, I felt immediately at home with it.  The one thing, and we�re going to talk about it in this episode, is that � that is very cool is that all of the VMware products across their product line are compatible.  So you could create a Windows virtual machine, do all the work there, and you�re able to package these things up.  And that�s in fact what the free VMware player plays.



LEO:  We should explain that most of the time, at least in my experience, all of these programs, instead of having a hard drive or taking a partition on your hard drive, they just create a large file which is � which appears to be a hard drive to the software as it�s running.  So, for instance, with Parallels set up on my Intel Mac, I have a big file that that�s my Windows operating system, and all the files on it, and all the documents in it.  So you�re saying I could take that one big file, copy it to another system, a Linux system, say, using VMware, and run it as if I were running the same version of Windows.



STEVE:  Yes.  And...



LEO:  Wow.



STEVE:  And in fact what I love, because � see, I�ve been a long-term VMware user.  I have used it in the past � okay.  I guess we ought to � I�m getting a little bit ahead of myself here.  I�ve used it in the past to evaluate lots of different personal software firewalls.



LEO:  Great way to do that.  So you don�t have to...



STEVE:  So, yes.



LEO:  ...mess up your machine.



STEVE:  Wait, well, exactly.  And all, I mean, a firewall is inherently an invasive thing to install.  You know, it�s going in and sinking its roots down into your kernel, putting in drivers, patching things, doing all kinds of stuff.  And so you, on one hand, you know, you could, sure, you could reformat your drive, you could uninstall it.  But you�re never really sure if you got it all out of there.



LEO:  Well, there�s another advantage, which is that you can�� the systems are identical.  You can start from scratch, fresh, each time with an identical system.



STEVE:  That�s � but in fact � so, for example, what I do is I use VMware Workstation, and I create a new instance of virtual machine.  And what�s really funny, I mean, the first time I used it, I installed VMware Workstation, started it up, and you literally � you push, like, the power on button for this virtual machine, and you see, like, a black-and-white screen booting.  I mean, it�s got...



LEO:  I know, it�s kind of weird.



STEVE:  It�s got the BIOS in there, you know, counting up how much memory it has.  And it�s exactly like, you know, turning on a computer and watching it boot.  Because, I mean, it is � it is, to that level, it�s a virtual machine.  It�s a computer running on your screen.  And so then I install Windows into that, get Windows all configured the way I want to and, you know, install some other apps and things, sort of to get the environment ready.  And then you�re able to save it, and you can then stamp them out like cookies so that then I�ll have, for example, ten identical virtual machines.  I then name them, you know, ZoneAlarm, Kerio, Personal, Symantec, Norton, McAfee, you know, give them all names.  And then I go to each one, turn, you know, basically turn it on again, and then install that personal firewall in that instance of the virtual machine.  And the beauty of that is � and in fact, well, VMware has really got this nailed.  You end up with, like, a tabbed interface where you can just click on tabs, and it jumps you immediately between entirely separate instances of the installed and set-up Windows.  I mean, it is just � it�s very cool.  And so what...



LEO:  It�s serious magic, I must say.



STEVE:  It is deep voodoo, yeah.



LEO:  Yeah, yeah.



STEVE:  I mean, and it works.  They have networking working; so you�re able to, if you want to, you can make these machines communicate with each other, communicate to the host machine, sort of your own little private network in order to connect and do filesharing, and you can even do drag-and-drop sort of operations.  So it�s extremely cool.  And for me, the advantage, then, is if I come back a day later because there was something I forgot to test, well, I�ve got all of these � it�s like having ten machines literally running inside of one.  So I�m able to say, oh, I forgot to test something.  And I just click through all the different machines running different personal firewalls in order to test them in a way that, you know, with something that I�d forgotten.



LEO:  Of course, you must have had a big hard drive�because...



STEVE:  Oh, I mean, yes.  These things are hungry for, you know, you can�t run it on your grandmother�s computer.



LEO:  No.



STEVE:  It does need to be run on a contemporary machine.



LEO:  And lots of RAM, too, because remember, you�re running essentially two operating systems simultaneously.



STEVE:  Well, yes, it is RAM-hungry.  And there are things you�re able to do.  I mean, you�re able to, like, shut down the machine.  You can pause the machine.  You can suspend it using the OS�s own suspension mechanism.  I mean, it is really feature-packed.  Now, the cool thing is that, once you�ve done all that, you end up with this file, I think it�s VMX, which is like the master file for the virtual machine.  You can take that to any other copy of VMware, whether the full Workstation, whether the free player, or even now VMware, for example, on Linux, or soon to be on the Mac.  And all of them are compatible at that file level.  I mean, you�re probably talking about, you know, many hundreds of megabytes, maybe 3 or 400 megs.  So, you know, burn onto a CD.  But what you end up with is this portable, sort of this module, which any other VMware system will run.  And the player is free.  So if what you�ve created is also free, I mean, you can�t go stomp, you know, stamping Microsoft Windows, your own personally licensed copies of Microsoft Windows all over the place.  That�s obviously a violation of Microsoft�s copyright.  But if you were to build something with open source software, then you end up with something that will run anywhere.



LEO:  Well, and we should point out � well, maybe I shouldn�t, but I�m going to � that the Windows activation is done within the virtual machine.  So if you make a copy on a Mac of a VMware Windows installation and move it to your Linux box, you�re not really changing machines, so the activation goes right with it.



STEVE:  Right.  VMware used to only be hosted on top of another operating system.  But they�ve even got a version called ESX which you install, like the first operating system, you install this VMware ESX on raw hardware, and they actually started with...



LEO:  Wow.  You don�t need any operating system?



STEVE:  Nope.



LEO:  Wow.



STEVE:  Nope.  They started with a version of UNIX � sorry, Linux � years ago.  They�re migrating more away from Linux into their own code.  So this ESX, the VMware ESX is actually not hosted on any other OS.  It itself is installable directly on empty hardware.  So you take a machine, you install this VMware ESX, and then it creates virtual machines in which you install whatever operating systems you want.  So it, I mean, it allows, for example, commercial companies who want to provide hosted servers to install, for example, lots of copies of UNIX or Linux, give each one to a different company, and you really, you know, each OS is sandboxed and has its controlled access to the hard drive.  Apparently they�ll install up to 128 virtual machines on a single server, and they can all be running at�once.



LEO:  Now, that�s amazing.



STEVE:  And so, you know, and so a client leaves, you just delete their virtual machine and then stamp out another one ready to go for your next customer off of your master template.  So this notion of having templates is incredibly cool because it affords you the ability to set up basically a completely configured computer of, you know, whether it�s Windows or Linux or FreeBSD, basically you install whatever operating system you want into this empty virtual machine.  And, I mean, and you�ve got something that runs at near full�speed.



LEO:  So that�s another question.  You say �near.�  How�near?



STEVE:  Well, it�s getting better all the time.  In my experience, on good hardware you really can�t tell the difference.  I mean, it is snappy, and it�s just like you�re using Windows.



LEO:  Now, in Parallels � and I have 2GB on a MacBook, so it�s not the highest end Intel dual core, but it�s still pretty fast, it�s a 2GHz, dual 2GHz � it does seem to run pretty snappily.  I haven�t tried running games on it, but I am able to run Adobe Audition with many tracks, and I use voice dictation software.  That seems to work fine.



STEVE:  And now from a security standpoint, here�s where this all comes in, is it is super secure.  And in fact, one of the things that people are doing is they�re using a virtual machine for doing anything on the �Net where they care about, not only security, but privacy.  Because that�s the other thing that a virtual machines affords you.  Since you�re able to tell � in VMware you�re able to say, do not save any state changes of the virtual machine while I�m using it.  That is, they have this notion of snapshotting, where every time you boot or turn it on, it starts out the way it originally was.  And so, you know...



LEO:  That�s interesting.



STEVE:  It�s very cool.



LEO:  So it throws out any changes you make.



STEVE:  Exactly.  It�ll save them during your session, but it will not save them across sessions.  And so, you know, many people are concerned about leaving tracks when they�re using a browser because browsers are saving cookies, they�re caching images and caching web pages you�ve gone to.  Basically it�s, I mean, it�s a lot of work to clean out any, you know, to make sure you�ve left no debris behind from your use of a computer.  Doing anything in a virtual machine that is set up correctly in this way absolutely guarantees that, when you shut it down, it has not modified your main machine, your exterior computer, at all.  And even turning it back on again starts it from its master image, losing any changes that were made last time.



LEO:  Well, I can see the real security advantage of that.  Of course it�s not the ideal way to operate on a computer where you actually want to do any work long term.  Be nice to save some stuff.



STEVE:  True.  True.  And it�s worth saying, too, that, I mean, this VM player, it�s interesting, VMware Corporation is showing all the signs of a company that recognizes, you know, it got an early lead, but the world is catching up.  You know, of course, Microsoft bought Connectix, I think was the name of the company...



LEO:  Right.



STEVE:  ...and acquired a very similar virtual machine technology from them.  That, of course, is now Microsoft�s, you know, Virtual PC product line.  And Microsoft is giving a player away also for free.  Oh, I should mention that VMware�s will also run Microsoft Virtual PC images.  So...



LEO:  Really.



STEVE:  Yes.  You�re even able to use Microsoft Virtual PC virtual machines and run them in VMware.



LEO:  That�s interesting.  Wow.



STEVE:  So it�s, you know...



LEO:  So the images are close enough that they can do that,�wow.



STEVE:  Well, I think what they�ve done is they�ve really...



LEO:  Reverse engineered it.



STEVE:  They went in and, yes, they went in and deeply reverse engineered what Microsoft had.  But so VMware, you know, they�re giving things away for free, they�re...



LEO:  Now, you say you get the player.  But what can you do with a � you can�t create a new image.  You�d have to use somebody else�s created image.



STEVE:  Well, no, but there is a couple very cool things.  As I was researching this, I was excited to be telling our audience about some of this because, first of all, the player is about 30MB.  It�s not huge in size, but it does deeply install on your machine.  It creates some virtual network adapters that will show up under your network properties.  I mean, it�s � it takes a while to install because, I mean, it�s � and you do have to do a reboot afterward.  So, I mean, installing the player itself is not something that you do casually, just like, oh, I�m going to quickly, you know, run this little program and see what it does.  I mean, it�s really putting some serious technology on your machine.



What�s cool about it, though, is that there are now what VMware calls �appliances.�  And there�s a directory, again, we�ve got links on the show notes page for this, to VMware�s page.  They�re collecting � there�s, like, I don�t know, maybe 50 or 60 what they call �appliances,� which are virtual machines that other people have already created.  And some of the coolest ones are various flavors of UNIX and Linux.  And so what people could do is, I mean, it�s a very easy way to just screw around with FreeBSD or with � is it called Ubuntu?  Is that...



LEO:  Ubuntu, yeah.  That�s the...



STEVE:  Yeah.



LEO:  ...Linux, in fact, that�s the one I use and love.



STEVE:  Is it a derivative of Debian?



LEO:  It is.  It�s a Debian...



STEVE:  I thought so.



LEO:  Nicely packaged.  Mark Shuttleworth, who made quite a bit of money in the dotcom boom, is basically funding it.  And it�s free.  They�ll send you a disk.  Ubuntu.com.



STEVE:  Well.  So for example, you install VMware�s player.  They have a ready-to-go, Firefox-based Ubuntu.



LEO:  Oh, a little � so you just could load that in...



STEVE:  Oh, now, you absolutely do, and it works perfectly.  I was playing around with it.



LEO:  Oh ho ho ho ho.  Because Ubuntu is free, so all of�that...



STEVE:  Yes.



LEO:  ...is free, so you don�t have to worry about licensing and all that.  They can just give it to you as a blob.  How big is the blob?



STEVE:  Now, that�s the problem.



LEO:  Oh.



STEVE:  It�s a big blob to download.  It�s 271MB.



LEO:  Well, that�s not that bad.



STEVE:  Well, until you unzip it, and it�s a gig.



LEO:  Yeah.  Because it�s going to be a whole operating�system.



STEVE:  Well, it�s a whole operating system, and it�s got a whole bunch of apps installed.  The reason I thought...



LEO:  Now, what does it run on?  It runs on anything that the VMware player will run on.



STEVE:  Exactly.



LEO:  Wow.



STEVE:  So, yeah, I mean, it is really cool, Leo.  I mean, so it is � it comes with, I think it�s the GNOME desktop.



LEO:  That�s right.  That�s the default.



STEVE:  And it looks great.  It�s very Windows-like.  I was playing around with it, and I installed the calculator app, which it didn�t already have, because it�s got a very nice application...



LEO:  Isn�t that installer great?



STEVE:  Yes.  And in fact, I saw that it was a .deb file, so I figured, oh, that � I remembered that from my own playing with Debian.



LEO:  It uses apt-get.  I think Ubuntu is incredible.  I actually put it � I have an old Mac PowerBook because, when I went to the Intel, my year-old PowerBook was suddenly obsolete, and I put...



STEVE:  Right.



LEO:  ...Ubuntu on it, and it�s great, it�s just wonderful.  But I didn�t need to because it sounds like I could have just downloaded the VMware version.  That would have been a lot easier.



STEVE:  Well, and that�s what�s so cool.  And it�s what I wanted to really expose our listeners to is that, you know, I mean, we�ve talked about Linux and UNIX and all this.  And, I mean, for most people it�s like, oh, you know, I don�t have a spare machine, I don�t want to do dual booting and, like, mess with my partitions and all that.  But wouldn�t it be cool just to be able to play with some of this stuff?



LEO:  So if � or if, for instance, you wanted to surf safely on, I mean, really safely on Windows...



STEVE:  Well, yes.



LEO:  ...you�d download the player.  They have a blob, I presume, for � oh, it doesn�t matter, it�s cross-platform.  So as long as they have a player for Windows, you�re okay.



STEVE:  Yup.



LEO:  And you download the blob, and when you surf, you surf in Ubuntu.  And even if you were to get a virus, is it � now, this is the question a lot of people ask me.  Can it go across the barrier from the virtual environment into your real environment?



STEVE:  Well, you still need to be careful that you don�t pull programs out of the VM, out of the virtual machine, out onto your real machine.



LEO:  So you could actually see it.  I mean, you can see your drive, and you could copy stuff over and stuff.



STEVE:  Yeah, yes.  You are able to do that.  By default it is disabled, so you�re unable to have any contact with your external drive, although the technology does support drag-and-drop of files and content.



LEO:  That�s...



STEVE:  So, I mean, if this is interesting to people, I encourage them to try it.  It is weird when you see this thing boot.  And in fact, that�s exactly the experience I had with the VMware, you know, just the free player.  Downloaded the free player, 31MB I think it was, and then I downloaded the...



LEO:  They call it the �browser appliance.�



STEVE:  ...the browser appliance, exactly, 271MB.  And then I unzipped it into a directory � I�ve created a little appliances directory under my VMware directory, where I unzip that.  And then...



LEO:  They have other appliances, by the way.



STEVE:  Oh, there�s, like, 60 of them.



LEO:  Yeah.



STEVE:  Yeah, I mean, there�s a ton of them that various people are submitting.  Many of them are really nicely preconfigured versions...



LEO:  I love this.



STEVE:  ...of Linux and UNIX running.



LEO:  In fact, I probably would not recommend the default browser appliance because it�s an older version of Ubuntu, and it�s just Firefox.  So you might want to look at the other free virtual appliances to see which one fits you�best.



STEVE:  Yeah, I saw some Opera, it would be able to install Opera 9 if you wanted to, and that�s a relatively current one.  But what was so cool, Leo, was here I�m looking at this app, and I start it, and I�m � I watch Ubuntu booting, going through its little checks, checking off, you know, starting up this, starting up that.  You know, and it�s literally � it�s booting the first time.  Now, once it had done that, when I just closed the app, because this was told to, like, save where I am, next time I ran it, it continued exactly from where I was.



LEO:  That�s so cool.



STEVE:  It really is.  And then to be able to download these�� all these other...



LEO:  So that one saves your bookmarks, it saves every changes you make.



STEVE:  Yup.



LEO:  And not only does it save them, you just go right to it the next time you run it.



STEVE:  Yes.



LEO:  Wow.



STEVE:  Yes.  And you are sandboxed.  Because the idea is that, I mean, the application thinks it is � the application itself, the Ubuntu, has no idea that it is not actually booting on a real machine.



LEO:  Right.



STEVE:  So if you got malware in there, it could be having a party, thinking, ah ha, I�ve got this guy now, when in fact it�s a virtual party.  I mean, it�s not actually touching your hardware because the virtual machine technology, and that�s what VMware nailed early on, that is being made easier as our hardware advances.  It�s able to intercept all contact to physical memory and physical hardware devices.  And in fact, it�s one of the � one of the cool things is that, with this VM machine, you get sort of a wrapper of compatibility.  It pretends to be the most standard USB hardware, the most standard Ethernet card, the most standard everything.  So there�s � you don�t have any, like, driver issues because the VMware, the virtualization manager, it�s simulating a generic Ethernet adapter that all operating systems will support, like an old, you know, 3Com E100 or something.



LEO:  As long as the player supports your real hardware, you�ll have no trouble with it later.



STEVE:  Exactly.  And so...



LEO:  I mean, if you had something really oddball, I suppose the player itself might not work.



STEVE:  I guess potentially, sure.  I mean, it is really � it is just � it�s a neat...



LEO:  I love this.



STEVE:  It�s a neat thing to see it happen.  Again, it�s going to need a gig in order to expand the browser.  And I imagine that, since the other things are varying in size, there are things that are smaller and larger than that 271 browser appliance that they offer.  But, I mean, for someone to just install some apps and be able to boot, like, a virtual machine, and then install anything you want to in there � now, again, you have � the free thing, the free version, the VMware player, is a player only.  It�ll allow you to do this with images that other people have set up.  And I think VMware itself, the whole Workstation, is version 5., you know, something or other.



LEO:  And it�s not cheap, as I remember.



STEVE:  No, it�s about 199, I think.



LEO:  Oh, that�s not bad.  That�s not bad.



STEVE:  For the whole thing.  For me it�s a godsend...



LEO:  It�s worth it.



STEVE:  ...when I want � yes, when I want to do something with a machine where I want to experiment and, like, jump around between different instances of a machine.  And it�s making a serious dent in corporate large sort of computing infrastructures where they want to be able to run many software servers inside of a virtual server.



LEO:  And of course VMware is the best known.  But as you mentioned, there�s Microsoft�s own Virtual PC and Parallels, which is in very active development on the Mac platform, but they also have Windows and UNIX versions, as well.  So...



STEVE:  Right.



LEO:  This is not � it�s getting to be a crowded field, ironically.  And I think it�s just exciting as heck.  I think probably anybody who�s really concerned about security might want to just go get the free version of VMware, the player, and get the browser appliance and install it, just at least to have that.



STEVE:  Yeah, I agree.  And just see how it feels.  I mean, there�s overhead associated with getting it launched and getting it going.



LEO:  You�ve got � you say a gig is a must, of RAM?



STEVE:  I would think so because I think it actually is using a much smaller amount, and then � but it basically laid out a container for a virtual drive.  And so that gig is, as I remember, it�s not very full, but they wanted to basically, you know, take up that much space so that then, if you stored things in there, you know, like the browser had some caching space and so forth, basically it is that file which is pretending to be the drive.



LEO:  So a gig of hard drive space, but also a gig of RAM.  And that really is a must.



STEVE:  Oh, yeah.  It is going to be using up RAM also.



LEO:  Yeah.  Very cool.  Virtualization.  Now that you know what it is, run out and get some of your very own.



STEVE:  Yup.



LEO:  And I couldn�t be happier using Parallels on my MacBook.  It�s just really a wonderful thing.



STEVE:  Well, and frankly, I�m probably going to switch.  I own Parallels.  I think I�ll probably get VMware for the Mac just so that I have that cross-platform compatibility.



LEO:  Yeah.



STEVE:  I think that�d be very cool.



LEO:  I think that�s worth 199 bucks.  Yeah.  So that is in development right now, or is it actually out?  They just announced it.



STEVE:  They announced it at the Developers Conference.  There�s a signup for the beta, so that implies that the beta is not quite ready yet.



LEO:  Yeah.  They say later, I think later this year.



STEVE:  Yup.



LEO:  Which could be tomorrow, or it could be December 29th.



STEVE:  They probably had to, like, stake their claim during the Apple Developers Conference, just to get on record.



LEO:  Well, I love having the competition.  And, you know, Parallels is very reasonable.  I think it�s only $40.  But, you know, you�re right.  The compatibility cross-platform, to have one copy of Windows that I could put on all of my machines would be really cool, or one copy of Linux.



STEVE:  It is.  It is really neat.



LEO:  Yeah, yeah.



STEVE:  There is one appliance that I saw there.  It�s called PC-BSD.  And it�s a very nice version of FreeBSD that�s got the GUI all installed and running.  And so if people wanted to poke around with a UNIX, FreeBSD UNIX, which of course has always been my favorite...



LEO:  As is mine, yeah, yeah.



STEVE:  Yeah, PC-BSD is another appliance there which has been very well reviewed, and it�s being maintained.  And, you know, again, you can run it right on top of your Windows�machine.



LEO:  Steve, once again you�ve shined a light into a fascinating area of technology that I think a lot of people never heard of.  But now they � I know now that they will be very interested in knowing more.



STEVE:  Well, next week we�re going to talk about a different flavor of this.  We�re going to talk about sort of lighter weight sandboxing technologies because there are some ways to sandbox without the whole VMware, Virtual PC sort of overhead.  And so that�s where we�re going to go next.  They�re VM � they�re virtual machine-like stuff, but sort of lighter weight.



LEO:  If people want to know more, they should go to your website, GRC.com.  That�s where the 16KB version of this show lives, for the bandwidth impaired, and of course Elaine�s great transcripts, if you like to read along as Steve talks.  And it�s also the great place to find SpinRite.  It�s Steve�s bread and butter, has been for some time.  The latest version is just fantastic for all PCs.  I use it all the time.  It�s the ultimate disk recovery and maintenance utility.  If you have a hard drive, you need SpinRite.  Check out SpinRite.info for great testimonials.  And of course...



STEVE:  You know, Leo, we�ve � I�ve been lazy posting new ones because we�re just getting too many.  Already that page is so long, it�s like, uh � and so I�ve been thinking, maybe I�ll just put up a note and say, you know, the last one here, I think it was in April or something, and I�m getting them all the time, but I just don�t want the page to become too long.  So...



LEO:  Well, take off the old ones and put in the new ones.



STEVE:  But the old ones are good, too.



LEO:  They�re all his babies.  He doesn�t want to give up any of them.  We also thank our sponsor, Astaro Corporation, makers of the great Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, viruses, and hackers, you could put a little dog at the gate, which is apparently what�s barking in the background here, or you could actually get superior protection, including complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall in a single, easy-to-use, high-performance appliance.  Astaro.  It�s like a little pitbull, protecting your system � www.astaro.com or call 877-4AS-TARO, toll free, to schedule a free trial of an Astaro Security Gateway appliance in your business.  Free versions for non-business users are also available at Astaro.com.  We thank them so much for supporting Security Now!.



We thank you for supporting Security Now!, for listening to this show, for being a part of the community that is growing around Security Now!.  Tell your friends.  Please, feel free to share this with people.  If you want to put it on a CD and give it away, that�s fine.  We get � we�ve got � we continue to get almost every week a request from Internet service providers, from cable companies and a variety of other people, saying can we redistribute this, we�d love our customers or clients to know about it.  Our license absolutely allows noncommercial use � as long as you attribute it back to Steve Gibson and TWiT.tv � of this because we really do want everybody to be able to hear it and take advantage of it.  So for noncommercial use, go right ahead and use it.  If you want to use it commercially, in other words, if you�re trying to make money on it, contact us, and we can talk about that.



Steve, what�s next?  Do you know?



STEVE:  Yeah, as I said, we�re going to talk about lighter weight virtual machine approaches.



LEO:  Oh, yeah, you did.  I�m sorry.



STEVE:  So-called sandbox.



LEO:  Sandboxing.



STEVE:  Yup.



LEO:  We�ll go play in the sandbox with your Uncle Steve next week on Security Now!.  Hey, thanks so much, Steve.  We�ll see you next time.



STEVE:  Always a pleasure, Leo.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#54

DATE:		August 24, 2006

TITLE:		Blue Pill

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-054.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo continue their ongoing discussion of the security implications and applications of virtualization and virtual machines.  This week they examine the "Blue Pill" OS subversion technology made possible by AMD�s next generation virtualization hardware support.  They debunk the hype surrounding this interesting and worrisome capability, placing it into a larger security and virtualization context.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 54 for August 24, 2006:  Blue Pill.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



Once again, I am on a boat.  The last time we did this, I got a number of messages saying, wow, how do you Skype from a boat?  Well, we don�t.  We record these ahead of time, that�s all.  Steve Gibson...



STEVE GIBSON:  Yup, to work around our schedule.



LEO:  Yeah.  Actually, I think I�m not on a boat.  I think I might be in Canada.  I don�t know.  All I know is I�m not here right now.  But Steve is, and we are here to talk tech.



STEVE:  Yup.



LEO:  And security in particular.  And a lot of great response to last week�s episode on virtualization.  Do you have another � you said we would do a little more on that.



STEVE:  Oh, yeah.  We have a few more episodes.  I do want to mention that I got some great feedback from people who have installed and are using NoScript.  You know, we talked about the...



LEO:  Oh, I installed it, yes.



STEVE:  Yeah, we talked about the serious problems of JavaScript.  And of course I�m anti-scripting in general because I think it�s just fundamentally a bad idea to let websites you visit run code in your machine.  And people are like, oh, yeah, there�s that Gibson, you know, he�s all freaked out about, you know, this stuff that�s not a problem.  But then these researchers came up with a way of JavaScript-scanning people�s internal networks, which caught a lot of people�s attention.  I mean, it�s not like the end of the world, but it further demonstrates that, just as a concept, I mean, philosophically, having scripting enabled is not as secure as not having it enabled.  So, you know, there�s a way of configuring IE that we�ve talked about, Internet Explorer, where it automatically switches its security based on whether the site you�re going to is in your trusted zone or not.  And similarly, NoScript for Firefox is an add-on that provides similar functionality.  And I got a bunch of feedback from people who are using it and just feel good to know that their scripting is off unless they choose to turn it on.



LEO:  Well, I installed it, but so many sites broke I just turned it back on.



STEVE:  Yeah.



LEO:  It�s kind of a tough one.  And a number of people pointed out to me, including Randal Schwartz, who is our resident naysayer, but a security expert and certainly somebody I trust, that the exploit isn�t too hazardous as long as you�ve renamed, you know, changed the password in your router.  In other words, if you�ve pursued normal kinds of security recommendations that you make all the time, you�re not too vulnerable.



STEVE:  Right.  Right.



LEO:  So I guess as always with security it�s a balance�between...



STEVE:  Well, but remember, he�s responding to this specific�instance...



LEO:  Right, and there may be more.



STEVE:  ...which wasn�t known a few weeks ago.



LEO:  Right.



STEVE:  So what else is there?  I mean, so what I�m saying is just, you know, there are things that are clear policies that regard security.  I mean, for example, it used to be that people had their networks wide open, and they closed ports when there were problems.  Okay, bad idea.  Instead, have your system closed, and open ports that you need.  So like, you know, there was that inversion.  And similarly, you know, even if you think you have a service which is receiving packets that�s safe, you know, it�s just � it�s not good to have it running if you don�t need it.  And of course that lesson we learned with the Universal Plug and Play exploit that was just uncovered a few weeks ago.  Well, actually it was originally uncovered back in February by the EI guys.  Again, another perfect example of where running with a secure policy just closes you down in general and prevents unknown problems from occurring.



So a similar policy is scripting is bad.  I mean, yes, I know.  It�s virtually necessary these days.  But from a security standpoint, as opposed to a convenience and features standpoint, which I understand it provides, you know, it�s�bad.



LEO:  I�m turning it back on.  Hey, at least it exists as an option, and it�s a really good option, I have to say.  It works very well.



STEVE:  But you are a Mac guy, Leo; and so in general your, you know, the attack target size for the Mac is substantially smaller than it is for a Windows-based, you know, IE system.  And of course Firefox is substantially more secure than IE, just based on the past.  And with security, that�s what we have to go on.  You cannot declare�� oh, and in fact this is � I�ve got a perfect example of that in this episode.  But you cannot declare that something is secure.  History needs to prove its security.  So...



LEO:  A very good point.  It�s that positive versus negative.  Yeah, you�re absolutely right, yeah.



STEVE:  And one last thing.  As we mentioned the sale of Hamachi to LogMeIn, I had some dialogue with Alex Pankratov, the father of Hamachi � who you remember, you know, we contacted and talked to back when we discovered Hamachi � because several people asked about that Hamachi server we referred to.  And I was impressed, Leo, that you remembered there was such a thing because I hadn�t heard of it or remembered about it for a long time.  But the idea was that, when we were originally learning about Hamachi, the idea was that there would be this server that people could run themselves to, like, set up their own Hamachi network and not use Alex�s central servers to do all of the liaison between the Hamachi agents.  So a couple people wrote in saying, hey, you know, if Hamachi�s going to go into unknown limbo condition with the sale of LogMeIn, I mean, you know, like we never know what�s going to happen when one of these things happens.  It�s like how the Sysinternals site you couldn�t get to for a few days when the announcement of their purchase by Microsoft was made because everyone was frantically sucking down all the cool utilities that Mark had written before, you know, maybe they would go away.



So anyway, what Alex explained was, first of all, he really vetted the LogMeIn people carefully.  I mean, his same concern for security and that the people there understand, like, the rights of users and privacy rights and all that.  I mean, he�s really comfortable with them as the new parent for Hamachi.  So he wanted to make that clear.  And he said, however, that the server project never got off the ground.  It was...



LEO:  Oh, so I was mistaken in pointing people that way.



STEVE:  Well, no, I mean, I�d forgotten about it completely, so I was impressed that you even remembered.  But it was at best in � at sort of an alpha-level development, and it never would have been, he explained, a software-only offering due to concerns about piracy.  I mean, it�s just, you know, Hamachi�s so popular, if he had released a, you know, some service or Hamachi server software, it would be, you know, all over the world in no time.  So it would have always been tied to some sort of hardware platform so that, you know, you had to buy a Hamachi appliance from Alex and company in order to set up your own network, as opposed to just being something that you could download.



So anyway, the server, while not dead, it really � it never existed.  And he did try to explain the benefits of it to the LogMeIn folks; and you know, they now have it.  So whatever it is that�s Hamachi is now the property of LogMeIn.  But, you know, there is at this point no alternative for people other than to, you know, follow Hamachi over to LogMeIn with Alex�s assurances.  And, I mean, he really feels as good about them as he could.  Oh, and by the way, and I was saying, wow, Alex, 3 million users?  And he says, uh, well, that�s old news.  Actually we were more like 3.9.



LEO:  Wow.  Wow.



STEVE:  And he said...



LEO:  He ought to be sending you a gift of some kind.



STEVE:  Well, he thanked us again for, you know, discovering them early and really putting them on the map.  You know, I guess his � I think his wife was giving him a hard time for months, you know, over the title of our podcast, Hamachi Rocks.  So...



LEO:  Yeah.  Well, I � it just � again, and I�m just going to reiterate, and I�ll stop, but that just is why I like open source solutions.  I wish there were an open source solution as easy to use as Hamachi.  That�s the thing, is�OpenVPN is out there, but it�s, as we all know, it�s�difficult.



STEVE:  Oh, boy.



LEO:  It�s a nightmare to get going.



STEVE:  Yup.  And I�ll say again that I�ve, you know, it�s funny, my prototype menu, remember we talked last week about the script-free, CSS-only menu that I spent almost two months developing, it�s really taken off, Leo.  A thousand people a day are going to that prototype menu page.  And I�ve had people saying, well, but it doesn�t validate.  So it�s like, okay, fine.  So I went over, and it was � I added my standard GRC footer stuff, which has all kinds of old HTML in it that just, you know, it generated 112 HTML validation errors.  And I go, okay, I�m just going to get rid of that.  So I took that off, and then I fixed a couple little things, and now it does validate.  So, but, I mean, it�s � people are really interested in the concept of a script-free, robust, CSS-only menu.  And, I mean, a thousand people a day are looking at that page and sucking out the CSS and adapting it to their own purposes.



LEO:  Yeah, yeah, yeah.  That�s really � that�s great.  Good job.  I think you may end up � nobody would expect this of Steve as, you know, a premier web developer.  But you may end up being � going down in the hall of fame as a website developer, of all things.  All right.  So that�s catching up on past episodes.



STEVE:  Yup.



LEO:  Any other past business?



STEVE:  Nope, I think that brings us current.



LEO:  So what is our topic for today, my friend?



STEVE:  Today, Blue Pill.



LEO:  Oh, I�m excited.  I�m excited.  This is very interest- for a number of reasons it�s interesting.  There�s a Red Pill, and there�s a Blue Pill.



STEVE:  Yup.



LEO:  And also it�s interesting because one of the few women in this field...



STEVE:  Yup.  Joanna Rutkowska is � she�s been working with rootkit technology for years and has published a bunch of papers about, you know, rootkitting modern OSes, means of detecting, means of exploit, you know, I mean, she is like � she�s a pure security researcher in, you know, in the best sense of the word because she�s working to develop the concepts of rootkits in a context of, you know, what we�re doing now, and publishing her results.



The thing that made so much noise recently was about two months ago she published a paper explaining Blue Pill.  And, I mean, and then on two conferences, SyScan and then of course the recent Black Hat conference, she gave presentations where she demonstrated this.  We�re talking about it because it is right in our virtual machine series that we�re doing.  It�s about virtual machine technology.  And what really raised eyebrows was her claim that it was undetectable.  And that�s really the thing that sets it off from prior rootkit stuff.  You know that we talked about rootkits extensively early in Security Now!, in our series.  And in fact I would encourage anybody who hasn�t read our early treatment of rootkits to, you know, grab those past episodes and take a listen to them because there was, you know, a lot of great stuff there.  And I don�t want to, like, completely restate everything that was said.  But I do want to talk about, you know, what it is that Blue Pill is and how it�s different from prior rootkits because it�s fundamentally different.  And in fact, Joanna has been, like, responding to people ever since her report because many people don�t get what it is that she�s done and what it is that she�s saying.  And so there�s been lots of misconception.  You know, Slashdot, of course, went insane over this.  And, you know, Digg had threads.  And as you know, Leo, when I even said the word �Blue Pill,� you�re just like, oh, yeah.



LEO:  Oh, yeah, yeah.



STEVE:  So, okay.  What happened is � and we touched on this already.  I talked about how there is a clear evolution in what�s happening with virtual machine technology.  One of the things that�s happening is that our next-generation hardware platforms are incorporating much more explicit support for virtualization, which is something that, for example, we talked about VMware last week.  VMware, a lot of their technology is about working around the lack of support, I mean, the lack of, like, robust support for virtualization and making their VMware product offerings work anyway.  Well, what AMD has done, and this is the platform on which Joanna�s Blue Pill technology operates, AMD has something called their SVM/Pacifica virtualization technology.  That�s part of the Athlon 64 and the Turion 64 chips.  It�s essentially an extension of the X64 architecture that AMD � it�s like a proprietary extension that AMD has added which adds much deeper support for virtualization.  Now, Intel is coming along, they�ve had their Vanderpool chip as sort of their next generation moving forward.  Now it�s been renamed VT.  So Intel�s next-generation chips will have this so-called �VT� technology which is their equivalent.  In both cases, this stuff allows software to do a much � essentially a much better job of virtualizing the environment.



Well, what Joanna realized and then wrote proof-of-concept code for was that an OS running on this next-generation hardware � so first of all, no one with 32-bit platform hardware, nobody with 32-bit AMD or Intel hardware, has anything to worry about.  I mean, this is all next-generation hardware platform requirement.  But any operating system � Joanna implemented hers on the current beta, I think it was Beta 3 of Vista, you know, Microsoft�s next-generation machine that�s going to keep us so busy in the future.  Any operating system running on top of this hardware has a problem in that it�s possible for client software to assume the role of a so-called �hypervisor.�  Hypervisor is one of the new jargons that has been adopted, sort of to explain this notion of something running even above a supervisory level.  So in general the operating system is called the �supervisor,� since it supervises the operation of the various client programs that are running within it.  So hypervisor is meant to imply something above the level of the operating system.  And we�ve sort of touched on that when we�ve talked about, for example, VMware�s ESX solution, where you run it, and then you install operating systems in it.  So it�s a hypervisor running above the level � or below the level, depending upon which way you draw your diagram � of the regular supervisory operating systems.



Well, it turns out that the code Joanna wrote � so the first thing that just made me grin was that it completely bypassed, I mean, just didn�t even care about Microsoft�s Vista new kernel protection stuff.  Microsoft is going to great measures to make Vista more secure.  We know, because we understand security, that it�s going to take them a while to get the bugs out of all that.  Well, one of the things that Vista requires by default is that all drivers be signed.  This driver-signing requirement of Vista is very controversial because it means that you need to have a digital signature, and digital signatures are not free.  So it�s, you know, people are complaining that it�s open-source hostile, it�s free-software hostile and so forth.  Microsoft is saying, well, yeah, sorry, but do you want security or�not?



LEO:  Right.



STEVE:  But anyway, so...



LEO:  If you want open source, write it for an open source operating system.



STEVE:  Exactly.



LEO:  You know, I mean, come on.



STEVE:  And so what Joanna demonstrated was that, leveraging the hardware platform and this Pacifica virtualization technology, she could, with all of Vista�s security up and running, just cut right through it and slip � essentially this is sort of a super rootkit.  She could slip her rootkit into the system, and it was undetectable.  And undetectableness was the real thesis behind what she was talking about because � and now we�ll talk a little bit about the rootkit and the normal rootkit technology and why it�s detectable.  She makes the point in her paper, and this is the whole point of what she did, that rootkits have traditionally relied on some sort of kludge or hack of some sort.  They�re hacking the kernel.  For example, if a rootkit wants to hide itself so that it just cannot be seen by, you know, anyone looking for malicious code running in the machine � I mean, that�s the whole point of a rootkit.  Most operating systems, if not all, will somewhere � they�ll have a list of running processes.  And so � and a list is a programming term meaning � and it�s also called a �linked list� � meaning that there�ll be a structure that manages and represents a process which will contain in it a pointer to the next structure for the next process, which will contain a pointer to the next structure for the next process.  And so it�s a series of these pointers form links that link this list together.



So, for example, when we run Task Manager in Windows, or you run Top in UNIX, what the operating system does is it has a pointer to the first process in the list.  And it then � it enumerates these processes basically by going to each one, reading the pointer for the next one, and then using that pointer to essentially follow this linked list, or this chain of processes.  So, for example, what a rootkit will do is, as soon as it starts up and is, for that brief moment, it�s on this list of processes that are running, the first thing it needs to do is hide itself.  So with knowledge of the operating system at the kernel level, which is below the knowledge that you would normally have that the operating system publishes in its API, which is what normal programs use, the whole point is the rootkit has knowledge sort of of the underlying technology of the specific operating system it�s running on.  It would itself follow this list of processes until it finds itself.  Then it would go to the one before it that was linking to it, and instead it would change that link to point to the one after it, essentially unlinking it from this list of processes.



Now, when you run Task Manager or Top, it just doesn�t appear because the operating system follows these links, and basically you�ve sort of created this lost process, the sort of, you know, it�s off the reservation.  It�s no longer in the accounting system of the operating system, which the operating system inherently trusts.  I mean, these are the structures that the operating system uses for managing processes.  So a rootkit is able to, by having knowledge of the kernel, it�s able to play games.



Now, one of the other things that we�ve talked about earlier in our podcast series, like way in the beginning, was the idea of hiding files.  In order to hide files, the rootkit would do something similar.  It would essentially � the technology is called �hooking,� or �filtering.�  It would hook or filter the file enumeration functions, or API � Application Programming Interface � which all of the operating system uses in order to, like, make a directory listing.  So when a program wants to do a directory listing or find a file or open a file, it says give me the first file in the directory, and then it makes a series of calls to obtain successive files.  Well, the rootkit would intercept those functions that the operating system is offering to itself and everyone else.  And it would, if it sees itself about to be returned, it would say, whoops, let�s not give up our own identity, but instead we�ll make a request for the next file after us and return that.  So the idea is a directory listing that would have shown the rootkit files no longer does.



So the root � so these are traditional rootkit technologies that are well understood.  And in every case � and this was Joanna�s point � in every case they are dependent upon specific OS structure knowledge, and they�re using a hack or a kludge in order to obscure their presence in the system.  And her real point is, once you know what that hack or kludge is, the rootkit is detectable.  And that�s the big�point.



LEO:  You detect it by seeing the traces of what it�s doing, not by seeing it.



STEVE:  Well, or for example you would come up � for example, say that it was hiding from having disconnected it from the process list.  Well, there are other ways of enumerating processes.  And so, you know, you would compare one way of enumerating versus following the list, and you would discover a discrepancy that would reveal the rootkit.  Or you would, for example, go and directly access the hard drive to do what the operating system does when it�s making a directory listing, and you would compare your result of direct access to the hard drive to the interface the operating system gives.  And again, a discrepancy reveals what�s going on.  In fact, that�s exactly...



LEO:  That�s what Rootkit Revealer does.



STEVE:  Exactly.  That�s exactly what Mark�s Rootkit Revealer � it�s the process it used.  So...



LEO:  So how does Blue Pill get around this?



STEVE:  Well, and so her final point is that, when rootkits are open source, and you can see exactly how they work, you�re able to come up with a way of detecting them.  And her whole point is that Blue Pill can be open source.  I mean, she could completely publish what she�s done, and it is no help.



LEO:  How come?  How does that � how do it work?



STEVE:  And the way it works is, it is a fundamentally different kind of rootkit because it isn�t relying on obscurity of any sort or a hack or a kludge.  It�s simply using the hardware which has now been made available in the 64-bit architectures.  And it�s one of those things where, you know, the moment Intel and AMD and Microsoft learned of this, they�re like, oh, no.  I mean, it hadn�t occurred to them, unfortunately, which is why Joanna�s work is so important.  Because, you know, they�re all excited about adding new features.  Well, again, another fundamental principle of security which never lets us down is, you know, new features really need to be looked at carefully from a security standpoint.  So all Blue Pill is really doing is taking advantage of the next-generation hypervisory hardware built into, at this point, AMD�s next-generation chips, the SVM/Pacifica technology that is now in those chips that Vista was running on, and she just turned it on.  She said, okay, you know, I�m going to be a hypervisor.  And the operating system said, yeah, okay, well, we don�t really know what that is, but have a nice day.



LEO:  Okay.



STEVE:  And so then people were saying, wait a minute, you know, being undetectable is impossible.  And so there were a bunch of, you know, a bunch of fur flew.  And Joanna has defended herself admirably because she�s raised the point that, you know, once you are in this driver�s seat as the hypervisor of the hardware, you know, you can control everything.  And so people said, okay, wait a minute.  What about the timing of instructions which you�re having to filter?  Because, for example, there�s an instruction RDMSR, which allows you to read the MSR register.  That�s one of the hardware registers.  And Bit 12 of the EFER register in there � I know this makes your eyes cross, but it�s just, you know, this stuff doesn�t really matter except Bit 12 says whether the processor is in SVM mode, that is, has this hypervisory mode been active.  So she, once she slips into this role, basically turning the SVM mode on, and then immediately acquiring ownership of it, what she needs to do is prevent anybody else who wants to check to see if this system has been Blue Pilled, she needs to fake the bit of that register and show that it�s off.  Which means that she needs to intercept anyone�s attempt to read the register.  Well, in doing so she�s inherently changing the timing of that read.



LEO:  Ah.  So she may be able to trick us, but we can tell because it took longer than it should have.



STEVE:  Exactly.  In fact, in her studies, for example, there�s another instruction, which actually I use all the time, called RDTSC, Read Time Stamp.  RDTSC is a super-high-resolution timer.  Actually what it is is it�s a clock counter.  So you literally get this 64-bit or, I guess in the next generation, 128-bit count of the number of clock crystal cycles.  I mean, it runs at 3 gigahertz or 2.4 gigahertz of whatever speed your system is running.  So, I mean, it�s, like, infinite resolution because it�s the clock cycle of the processor.



LEO:  Right, right.



STEVE:  There is no higher resolution.  So, for example, this RDMSR, the attempt to read this register, normally takes about 90 ticks, 90 clock cycles.  But her filtered version, when she�s in the system, takes about 2100.



LEO:  See?  We can tell.



STEVE:  Exactly.



LEO:  So...



STEVE:  Except, except...



LEO:  Oh.



STEVE:  Except...



LEO:  Except.



STEVE:  ...that there�s also something in this SVM mode called the TSC Offset.



LEO:  Yes?



STEVE:  And it is an offset from what the TSC, this time stamp, returns.



LEO:  Oh, so you could change the result.



STEVE:  So, exactly.  So she filters the read to this timestamp.  She also intercepts that.  And she subtracts the difference of the time she knows she�s going to take.  So she simply sets the offset to negative 2010.  And so when her instruction, which takes 2100 ticks, has 2010 subtracted from it, it returns 90.  So again, I mean, it�s a perfect example of how, once you�re in this hypervisory mode, even, I mean, anything software does in the system, even like trying to measure the time of things, even time can be�faked.



Now, you know, the first thing I thought when I was reading this is, okay, you need an external time reference.  We need, you know, something not in the system, outside of the system�s control.  You know, so like NTP, the Network Time Protocol on the Internet, go, you know, get a real piece of time data.  But that uses � that comes through the network interface and through the operating system and can be faked, as well.  And so then she carries on the argument that, well, okay, wait a minute, how about having the user tell how long something takes?  Because, for example...



LEO:  Use a stopwatch.



STEVE:  Well, essentially exactly that.  Some program would have to say, okay, user, push this button, and let�s see how long it takes for me to do a certain amount of work, like do this read, this RDMSR a million times.  And, I mean, it literally has to be about that much.  So if it�s really only taking 90 ticks, a million of those 90s would be 90 million.  If it�s actually taking 2100 clock ticks, a million of those is going to be, obviously, way longer.



LEO:  Right.



STEVE:  But, I mean, but, you know, we�re down to the point�that that�s the kind of detection fallback that is�necessary.



LEO:  But you could do that.  I mean, there is � that would be � there�s no way that they could prevent, you know, a manual detection timing of some kind.



STEVE:  I can�t see how she could prevent that.  On the other hand...



LEO:  How many people are going to do that, is another...



STEVE:  And the whole point of Blue Pill is that you � by mistake you run this, and it silently, I mean, what�s so very cool about this, you know, Microsoft Research has got something called �subvert,� which is a similar sort of, like, you know, boot-time subversion of the OS.  The research guys did this.  But it�s boot-time, and it requires writing things on the drive.  So anything that�s going to survive a boot needs to be on the hard drive.  Blue Pill needs to record nothing on the drive.  It�s on-the-fly software that, if you touched it by mistake, suddenly, you know, I mean, and that�s what�s so cool, I mean, I love it, you know, of course all the analogies to the Matrix...



LEO:  To the Matrix, right, yeah.



STEVE:  ...because, you know, you don�t, I mean, nothing changes.  Your screen doesn�t even go [sound], you know.  It�s like, oh, what did you � what just happened there?



LEO:  Right.



STEVE:  I mean, nothing happens, but now it�s underneath your operating system, controlling your hardware, and is undetectable except through extreme measures.  So she makes the point that, you know, what are you going to do?  Do a test that�s going to take 10 minutes to run every hour, to see if in the intervening hour your system has been Blue Pilled?  I mean, there�s no practical way to detect it on the fly.  Now, of course Microsoft is not happy about this because, you know, here they are, oh, Vista�s the most secure operating system ever.  Well, we already know, listeners of Security Now! know how I feel about statements like that.  I mean, they are ludicrous on their face.



LEO:  Yeah, yeah.



STEVE:  You cannot declare something to be secure.  And here along comes Joanna and says, uh, well, no.



LEO:  Could you run � okay, since we�re going to use virtualization to attack the machine, could you then run your machine in a virtual machine as well, and kind of protect it from the outside world?



STEVE:  Well, she makes the point that...



LEO:  Double virtualization, in other words?



STEVE:  It�s probably the case that, you know, again, now that Microsoft is aware of this, and AMD and Intel are like, oh, this is � maybe this is a little too powerful, I mean, obviously there are very wonderful, good purposes to which this can be put, the idea being that, I mean, this is what VMware�s a little upset about.  You know, a lot of their proprietary technology was working around the lack of really good hardware support for virtualization, which is now coming in all of our 64-bit platforms.  So, you know, and it�s going to end up being subsumed by the OS.  So, I mean, it�s sort of a next level of responsibility that the operating system will need to take.  Joanna makes the point that, well, maybe you could turn it off in the BIOS.  But if you turned it off in the BIOS, what�s the point of having�it?



LEO:  Right.  In fact, you can, on many machines that are coming with this kind of technology, turn it off in the BIOS.  In fact, by default I think it�s turned off.  But you�re right, then you don�t get the benefits of the�virtualization.



STEVE:  Yup.  So, you know, again, it�s that same sort of security cat-and-mouse game that we always end up playing.



LEO:  But it does underscore really, I think � and by the way, I�ve seen the debates over this, and they go on and on, and they are not over.  There are plenty of people will say, no, no, this isn�t true.  But it does underscore the risk of creating a hypervisor mode in general.



STEVE:  Yes, it is an extremely powerful mode.  And, you know, what will probably happen is that Microsoft will, instead of doing nothing with it, which I guess is what Vista was doing, will, you know, they will turn on the SVM mode on the AMD, and they will themselves preemptively filter those things that are necessary to take over that mode.  They just � they hadn�t.  And again, we can thank Joanna for doing this this year and not two years from now.  Because, you know, Microsoft would have blissfully gone on and shipped Vista with this massive Blue Pill hole in its security, and then everyone would have been scampering�around.



LEO:  The chief critic of this is a guy named Anthony Liguori, who is working on a hypervisor for IBM.  And obviously he doesn�t like the idea of criticizing hypervisors.  But in your opinion, is the real problem that a hypervisor exists at all?



STEVE:  No.  The real problem is that it�s new.



LEO:  And we don�t know what...



STEVE:  New is bad.  New is bad for security.  You know, in a year...



LEO:  Just as you were talking about Vista�s virgin stack...



STEVE:  Exactly.



LEO:  Same issue.



STEVE:  Exactly.  And so along came a, I mean, bottom line, I think this hardware technology is going to be fantastic because it will ultimately allow much more, you know, what it really means is simpler, easier, and absolutely zero performance penalty for doing multiple OS solutions.



LEO:  Yeah.  And we like that.



STEVE:  Oh, that�s a win, yeah.



LEO:  Is it truly zero?  I mean, it really is...



STEVE:  It is as zero as you can get.



LEO:  Wow.



STEVE:  I mean, and that�s what they�ve done is that they�ve absolutely minimized, you know, all of the overhead associated with any kind of multi-OS virtualization.



LEO:  Your discussion of all this has really inspired me to think about using virtualization more thoroughly.  You know, right now I use Windows and Mac machines, and I have to use them roughly equally because I do � for instance, we record this show on Windows.  I edit it on Windows.



STEVE:  Because we�re using Skype?



LEO:  Well, I use Skype on the Mac.  I don�t want them on the same machine and so forth.  Anyway...



STEVE:  Ah.



LEO:  But more and more I�m thinking, especially with VMware coming out with a solution for OS X, that maybe I should buy one of these new Mac Pros, which has so much horsepower, and just run both.  Get a big screen and have Windows side by side with the Mac on the same system.



STEVE:  Sure.



LEO:  You know, I mean, just it�s really interesting what�s happening with virtualization.  Not just Windows, by the way, Linux as well.  I have three operating systems, and of necessity three machines right now with a KBM switch.  Boy, it�d be nice just to combine all that into one box.



STEVE:  Well, and, you know, I mean, there has always been this big divide between, for example, Mac and Windows.  I think I�ve mentioned before that I�ve got a friend who�s not computer literate.  She struggles with do I click the right or left mouse button.



LEO:  Right.



STEVE:  You know, and I always wanted to move her over to a Mac, where I think she�d just be more comfortable, except that she�s a realtor who needs to access, you know, one application under Windows.



LEO:  All users care about is applications.  They don�t care about operating systems.  That�s not � enthusiasts care about operating systems, but we�re a minority.



STEVE:  Yeah.



LEO:  Users just want to get the job done, and hopefully not get hacked in the process.



STEVE:  Yeah, I really think that, I mean, long term this virtualization is going to be a very cool thing.  As we talked about at the very beginning of our series on virtual machine technology, you know, back when we were using DOS, and we now had � and the 386 chips came along, there were programs like Software Carousel, QEMM, you know, and TopView, that allowed us with a single keystroke to just click between applications.



LEO:  Yeah, it was really slick.  It was great.



STEVE:  It was phenomenal back then.



LEO:  Yeah, yeah.



STEVE:  And so now we�re talking about literally clicking between operating systems.



LEO:  Hey, I like that.



STEVE:  I mean, imagine if you had a hotkey where, I mean, and we�re talking robust because it�s supported by the�hardware.



LEO:  Well, and even more secure, too, right?  Because if anything goes wrong, you throw it out.



STEVE:  Oh, and see, that, yeah, that�s a very good point.  And in fact, in next week�s episode we�re going to be talking about sandboxing and, I mean, and the issues of sandboxing, which is sort of lightweight virtualization.  And, I mean, and it�s all about security.  So when you have truly independent operating systems, and the hardware is supporting the barrier between them rather than software that is always subject to modification and subversion, when you�ve got hardware doing that, they�re hardwired, you know, there isn�t any way, if everything else is done correctly, for them to get to each other.  But, I mean, but I love the idea.  You know, because, I mean, there are solutions that kind of work and are flaky, and it�s like, oh, okay, well, I�m � and I think it�s probably the thing that has put you off of virtualization until now, Leo, you know, when we�ve been talking about it...



LEO:  It�s slow and unreliable, absolutely.



STEVE:  Exactly.  But imagine a really, really robust technology where you could just hit a hotkey, and your screen just goes, click, to Windows.



LEO:  I kind of have that now with Parallels on the MacBook.  And I feel pretty good about � and the new version coming out will be even better.  So I feel like there�s good � what I really feel like is we�re making really good progress in this area.  This is a hot area right now.



STEVE:  Yup.  Yup.



LEO:  Now, should we worry about Blue Pill?



STEVE:  No.  And that�s really, I mean, Joanna raised the alarm.  Microsoft got caught unaware.  They�ve promised they are going to close this hole down.



LEO:  Good.



STEVE:  Which must mean they will turn on SVM technology and take ownership of it and filter the instructions just like Joanna was doing...



LEO:  They�ll do their own Blue Pill, in effect.



STEVE:  Basically, yes.  Vista will come pre-Blue Pilled.



LEO:  That�s often the way to fight these low-level Ring 0 hacking tools is to be one of your own.



STEVE:  Well, to get there first.



LEO:  Get there first, yeah.



STEVE:  It�s always about who gets there first.



LEO:  Get there first.  Interesting.  And that�s why it�s so great that there�s this robust, feisty, smart community out there that is challenging Microsoft.  People might sometimes take umbrage at the fact that people are constantly attacking Microsoft.  But that which does not kill you makes you stronger.  I think that this is really what we need.  It�s kind of analogous to an independent free press...



STEVE:  Well, I will make a prediction here on Security Now!,  Episode No. � what are we, 54?



LEO:  54.



STEVE:  54, the first episode of our second year.



LEO:  Or the second episode of our...



[Talking simultaneously]



STEVE:  Wait, did I number from zero or from one?  The hypervisory technology will be compromised.  Because, you�know, for example, remember in the old days with DOS�viruses, there were these things called �boot-sector�viruses�?



LEO:  Yeah, yeah.



STEVE:  Because the hard...



LEO:  Michelangelo.



STEVE:  Yup.  Because the hardware is now so powerful, a boot-sector virus to pre-acquire SVM rights could happen.  And so, again, who gets there first.  If something gets into the hardware before Vista boots, then it can fool Vista.  And you can just see hackers salivating at the idea, I mean, just tackling it because it�s there.



LEO:  Oh, boy.



STEVE:  I know.



LEO:  Oh boy.  Or EFI, or getting into BIOS through the new EFI, even better than a boot-sector virus.  You could...



STEVE:  If you can get control of the hardware before the OS boots, now the hardware is powerful enough that, you know, it really needs to be looked at carefully.



LEO:  Fascinating stuff.  As always you bring up the good issues.  This is one that�s very hot right now in the security community thanks to her presentation at Black Hat, and everybody�s just buzzing about it.  And I do hope Microsoft does something about it.  And now you know. 



STEVE:  They�ll try.



LEO:  Next week.



STEVE:  Next week, sandboxing.



LEO:  Okay.  More virtualization.



STEVE:  Yup.



LEO:  It�s the hot topic right now, and we cover it very, very � as always with Steve � in great detail, very thoroughly.  We know that�s what you want.  This is one of the things I love about podcasting is that we can cover this stuff in detail.  It�s not the seven-minute segment that we had to do on Tech TV.  We can really cover it in depth and give you the information you want.  And by the way, if you want to follow it more closely, don�t forget Elaine makes transcripts of every episode.  So you can actually read along, which I think is a really helpful way to find out what Steve�s talking about.  And of course you own it, so you can play it back again and again.  Lots of people share it with their friends, too.



Support the podcasts by visiting TWiT.tv and donating.  Just a couple of bucks a month not only supports Security Now! but almost a dozen other podcasts, and two more to come by the end of the month.  So we�re very excited, you know, about this.  Of course, as we add podcasts, our costs go up.  We have to get new equipment and so forth.  But we really feel like it�s important to kind of get all of these podcasts on the air for you.  So...



STEVE:  Well, and you�re talking about getting a T1 now,�too.



LEO:  Well, and that�s, yeah, I mean, there�s always a little more, you know, I want to � people have been good.  They�ve been very generous.  The donations are strong enough to support things like, you know, spending a little bit a month to have very high-quality bandwidth.  We lost a podcast the other day because the DSL went out.  And I�m thinking, I�m basing this whole network on consumer-grade DSL.  Wait a minute.  Maybe we ought to get a T1 in here.��So...



STEVE:  Well, and people really appreciate, I think, the show quality.  I see mail from people who say, you know, that the TWiT family of podcasts sounds better than any other podcasts.  And, I mean, it makes a difference just in, you know, in the comfort of listening.



LEO:  I, yeah, well, that�s of course a real goal of mine.  And I�m not happy yet.  And there are things we can do, but they cost.  Everything costs.  So...



STEVE:  We want you to be happy, Leo.



LEO:  Your donations help.  And it is only $2 a month.  So please, go to TWiT.tv and press that button every month.  A couple of bucks.  Think of it as buying Steve a latte once a�month.



STEVE:  Like I need more caffeine.



LEO:  Just what you need.  We do thank our sponsors, who also make it possible.  The way it works is the donations go to infrastructure, the sponsorship goes to the hosts so that they don�t � currently, you know, they�re donating their time.  I�d like them to get paid, too.  For Steve, he gets a little money every once in a while from Astaro Corporation, makers of the Astaro Security Gateway, very good company that came forward early on and have really been committed to this podcast.  And we really thank them.  If your small or medium business network needs superior protection from spam, from viruses, from hackers, of course complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in an easy-to-use, very simple high-performance appliance � I have one, the 120, it�s just incredible.  This thing is a rock.  And it makes me feel much more secure.  Contact Astaro at Astaro.com or call (877) 4AS-TARO to schedule a free trial of the Astaro Security Gateway appliance in your business.



You know, another group I�d like to thank, and I don�t think I thank them enough, I really should thank them every single podcast � we do at the beginning � is AOL because they do such a great job.  Without them really this network would not exist.  The bandwidth provided, over a terabyte a day � a terabyte a day � from the folks at AOL Radio.  AOL.com/podcasting.  A tip of the hat to Jeff Graham and the server guys and everybody at AOL Radio.  We thank you for your support, too.



Steve Gibson�s website is GRC.com.  Let�s not forget that because that is Steve�s day job, and we want to make sure � not only because of SpinRite, which is Steve�s great product for file and recovery of your hard drives, I mean, it is just the ultimate hard drive tool which everyone should have in their toolkit.  I certainly do.



STEVE:  You know, Leo, I was thinking about what I said last week about how I�ve stopped putting the testimonials on that page because that page is getting so long, and we�ve got so many of them.  I thought, wait, maybe people are going to stop sending them.  But I wanted to � it just makes me feel so good to hear these stories of success.  So by all�means...



LEO:  I�ll vouch for that.  I�ll vouch for that.  Steve will come to me when we get together in Toronto or at other times, and he says, �Look at these,� and he�s got this list.  I think that really gratifies Steve almost more than anything is to hear from you.



STEVE:  Yeah.  Yeah.  I love that it�s able to help people so much.  So by all means, you know, send them if you want.  I love to read your stories of success with SpinRite.



LEO:  When you write software, it is, I think for anybody who codes, it�s more than just a job.  It�s very gratifying to know that your code is being used to good benefit by people.  SpinRite.info to see what people are doing with SpinRite and maybe get an idea of what you might want to do.  GRC.com to get your copy.  But of course there are also many very useful free security utilities there, including ShieldsUP!, which I use every time I set up a new router to check my router.  I got all greens on my new D-Link, I�m so�happy.



STEVE:  Yay, stealth.



LEO:  Out of the box, all green.  That�s nice, a nice feeling.  And that�s where you�ll also find the 16KB version of the show for the bandwidth impaired, and Elaine�s great transcripts if you want to read along, follow along with � sing along with Steve.  It�s like Mitch Miller, kind of.  Follow the bouncing security.



STEVE:  If anybody else knows who he is except you and me,�Leo.



LEO:  You know, in 20 years we�re going to be doing this, a couple of old coots.  And people are just going to say, we don�t know � we have no idea what their references are, but it�s just they�re relics, and we honor them, and we let them do it.  I have a feeling.  We�ll be in a museum somewhere.



Steve Gibson, have a great week, and we will see you next week for more virtualization on Thursday, every Thursday.



STEVE:  And I hope you�re not seasick right now, Leo, wherever you are, out on the ocean.



LEO:  [Groaning].





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#55

DATE:		August 31, 2006

TITLE:		Application Sandboxes

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-055.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Having discussed �heavy weight" virtualization technology in recent weeks, this week Steve and Leo examine �lighter weight" application sandboxing technology and the software solutions currently available to perform this form of application �wrapping."  They discuss the inherent limitations of sandbox security and explain how valuable sandboxes can be for privacy enforcement.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 55 for August 31, 2006:  Application Sandboxes.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



The last day of the month, and in some ways the last day of summer.  Let�s check in with Steve Gibson.



STEVE GIBSON:  And you�ve survived your cruise.



LEO:  I survived the cruise.  The ship did not go down, unless it did, in which case I�m doing this podcast posthumously.  And if it is, please don�t cry.



STEVE:  What a horrible thought, Leo.



LEO:  The last podcast.



STEVE:  We might have lost you in the Arctic.



LEO:  Well, no, you know, we�re taping this, obviously, before I leave on the cruise.  But it�s going to be an Alaska cruise, and it�s a geek cruise, but it�s kind of an unusual one because it�s chess.



STEVE:  We�re taping this?



LEO:  Shhh.  No one knows.  If I had � tape is not quite the word we use.



STEVE:  Uh huh, exactly.



LEO:  I say �film� on the TV show, too.  I just � I guess I�m an old-timer.  I�m an old-timer.  Now, we�re actually � there�s no tape involved in the creation of these.  It�s all bits.  Once it leaves the microphone and gets into the mixer, it all is bits.



STEVE:  Yeah, well, when you referred to Mitch Miller last week, that pretty much did it.



LEO:  That was it.  They knew.  They knew.  I�m � pretty soon I�ll be saying the Internet�s a series of tubes, and it�ll be all over.



STEVE:  The jig is up.



LEO:  Anyway, the chess cruise is fun because I�ve been working on a lecture for it.  And they let me go on, you know, these geek cruises if I do a lecture.  And, you know, I played chess as a high school kid, but I never � I�m not a great player by any means, just a, you know, an average club player.  But I always loved the game.  And I said, well, I�ll tell you what, I�ll do a lecture on the history of chess-playing machines because...



STEVE:  Oh.



LEO:  ...in many ways the history of computing is parallel to the history of these chess-playing machines.  It was inspired � Babbage was inspired by a chess-playing automaton to think of a computer, of a machine that could think.  Turing and many others have been, you know, heavily influenced by the idea of making a computer that could play chess.  So...



STEVE:  Well, and in fact, of course, it was one of the � it�was the holy grail of the original AI movement back in the��70s.



LEO:  Precisely.  You know, it�s interesting, what I found in my research is, it�s solved, and it is no longer used in AI as a goal in any means.  They...



STEVE:  No longer interesting, huh?



LEO:  It�s not interesting.  They feel they�ve solved the problem.  So what do they use now, they use the game of Go, which is hideously complex.  It�s a 19x19 board.  And it�s much more positional and intuition based.  It�s very hard to calculate.  So...



STEVE:  Well, and of course they solved chess by cheating.��They...



LEO:  Well, they say that, but, you know, they�re pretty�good.



STEVE:  No, but, I mean, you know, the way they wanted to solve it was by getting a machine to understand...



LEO:  Right.



STEVE:  ...chess.



LEO:  Right.



STEVE:  I mean, that was the point of artificial intelligence.  It was...



LEO:  To think.



STEVE:  Yeah, exactly, well, to understand.  And what they�re really doing it, the machines have just gotten so fast and so parallel that they�ve got all these opening books that are preprogrammed in...



LEO:  They still have judgment.  They still have to do some judgment.  They can�t just � there are more positions possible than you could calculate even today.



STEVE:  Right.  Well, and so they�re doing alpha-beta pruning and determining what directions make sense for further exploration.  I mean...



LEO:  Precisely.



STEVE:  ...a ton of technology in there, but they didn�t end up doing it the way they thought they were going to end up doing it.



LEO:  No, they don�t think.  But I think maybe that�s a moral in some ways is that machines won�t really think in the way that humans think, but they can be made to accomplish the same tasks in a way that�s...



STEVE:  To mimic.



LEO:  To mimic in a way that�s unique to machines.  They think, but not as humans do, I guess you could say.  And that�s exactly what the conclusion of the talk is, is what have we learned?  And it�s just, it is, it�s a very interesting area.  I don�t � somehow I�d like to get this information up on the �Net.  Maybe I can figure out a way to do that, but...



STEVE:  Well, are you going to record your speech?



LEO:  Yeah.  Maybe I�ll just put a recording up.  That�d be the best thing to do.



STEVE:  Yeah.



LEO:  And there are actually very good recordings.  There�s a two-hour video from the Association of Computing Machinery, the ACM, that was done a couple of years ago at the Computer History Museum, with many of the pioneers in the field.  And it�s fascinating.



STEVE:  Well, you can just start that up and then go hit the�buffet.



LEO:  I was thinking of that.  You know, I could talk, but why should I talk when you can get David Levy and, you know, the guy who invented LISP, I mean, some really brilliant guys here telling you this story.  But I�m going to � maybe I�ll show some clips from it.  But that�s on Google Video, though.  I�ll put a link in the show notes if people want to know more about that.



Enough of that.  We want to talk about security.



STEVE:  Yup.



LEO:  Anything to cover from previous episodes before we head into our topic of the week?



STEVE:  I think not this time.



LEO:  Okay.  So what�s the topic of the week, I guess?



STEVE:  This week, in our continuing series on virtual�machine technology, I want to talk about application�sandboxes.



LEO:  All right.



STEVE:  It�s a really interesting topic.  And the way it fits into the spectrum is also sort of interesting.  We started off talking about, you remember, of course, the original history of virtual machines, back when Mitch Miller was still singing.  Then we talked about VMware, which I would consider that sort of like medium weight to � or maybe heavyweight virtualization, I mean, it really is...



LEO:  It�s kind of the current � it�s the current state of the art, yeah?



STEVE:  Yeah.  Although last week we talked about Blue Pill, which is like � in a sense it�s like super heavyweight virtualization in the sense that it�s even � it operates at a level underneath where VMware operates.  And there�s another application range which is the topic for this week, and that is sort of lightweight virtualization, lighter weight virtualization, and what the effects are, and the tradeoffs and so forth.



LEO:  All right.



STEVE:  An interesting � now that we have, like, several perspectives on virtualization, we have enough that we can sort of � we can develop a way of thinking sort of generically about this notion of virtualization levels.  For example, what the SVM technology and the Pacifica technology that AMD developed, and Vanderpool�s VT technology from Intel, what...



LEO:  We talked about all these last week, but they�re essentially built into the chip hardware virtualization technologies, right?



STEVE:  Well, exactly.  And what � the way to think about them is that they create virtual chips, that is, they virtualize the processor engine itself so that multiple operating systems believe these are multiple processors.  So�they�re, like, they�re virtualizing at the hardware level�to create multiple instances of the computer system hardware virtually.



LEO:  Hmm.



STEVE:  And so that, I mean, and that�s an important way to look at it because then the next level up is � it�s software running on normal hardware, which uses some of the processor features to create the illusion of multiple chips, so that you can run operating systems in multiple on the platform.  The point is that you don�t actually have the same level of hardware virtualization.  So you�ve got to do a lot more work, which is where VMware is, in order...



LEO:  So it�s almost like time slicing the processor to make it look like there are multiple processors.



STEVE:  Well, it�s doing exactly that.  And it�s also having to play a lot of games to make up for the fact that you don�t actually have virtual processor support, which our next-generation 64-bit chips will have.



LEO:  And all of that uses up cycles and so makes it less�efficient.



STEVE:  Right.  And so, as we come higher, then you might think of an operating system itself as providing virtual environments for its applications.  For example, you know, I can run a DOS shell or DOS program in a DOS box.  And as we talked about several weeks ago, that DOS program thinks it�s on DOS.



LEO:  Right.



STEVE:  I mean, it was software that was written 20 years ago for MS-DOS or PC-DOS.  And, I mean, and it�s � as I mentioned, in order to put data on the screen, it�s writing characters directly to, you now, B800 hex buffer.  And but the point is that the operating system has virtualized DOS.  It�s created a virtual DOS environment pretending to be DOS.  So that�s like the next level up in this notion of, like, virtual layer architecture.  And so, and then you could argue that, you know, that applications themselves are able to create virtual containers, like how Word can be editing multiple documents at the same time.  So, you know, the document sort of doesn�t have the awareness that a running program does.



LEO:  Right.



STEVE:  But, you know, so there are these layers.  Well, one of the interesting things that we�re beginning to see, and this is really an offshoot of security and privacy concerns, is this notion of sandboxes.  We originally talked about it when we began this series in the context, for example, of the well-known Java Virtual Machine, the JVM, the idea being�� and this was, you know, Sun�s concept from the start was that they would create a virtual architecture in which you could run this Java byte code.  The Java byte code would, I mean, it could be implemented in an actual hardware architecture, but it wasn�t designed to.  It was designed to be emulated.



So this Java Virtual Machine is an emulator of a sort of a fictitious machine that was never actually � that never actually existed.  And the point is, that kind of emulation allows you to sandbox the Java, meaning that because the emulator is actually doing all the work, that is, the Java is not Intel or Power PC or whatever chip, it�s not the Assembly language or the machine code of the chip, it�s an abstraction of this machine.  Because the emulator is reading those instructions and doing what it chooses with them, you�re able to impose a very rigid set of strictures over what the code is able to do.  So, and thus the so-called Java sandbox, the idea being that it�s safe to run Java because, unless the enclosing emulator, the virtual machine, wants to have the program access the hard drive or access the �Net or do whatever it wants, the program can�t.  It�s entirely beholden to what the emulator is willing to do for it.



LEO:  Unless there�s a hole, of course, an exploit or a security bug.  But...



STEVE:  Exactly.



LEO:  Assuming it�s a perfectly written VM.



STEVE:  Exactly.  And so that�s the theory.  Well, now we have, you know, Windows or Mac or Linux, we have operating systems that are very complicated and have this concern both with privacy and security.  And so the question is, how can we � and can we use this virtual machine technology in some way to create enclosures or sandboxes around our own applications, around applications where we want them not to be able to reach out and touch our hard drives or send data out on the Internet in order to work behind our backs.  So what has sprouted up is a bunch of utility sort of software which pretends or purports or tries to create this sort of�technology.



Now, it�s confusing because in my updating myself on the state of the art here, as I did for this podcast, I found all kinds of claims being made by these sandboxing programs which are just not true.  What�s happened is that this � because of the upsurge of excitement and popularity about virtual machines, they�re all now saying, you know, creates a virtual computer within your computer.  Okay, except it doesn�t.  In most cases.  There are, well, for example there�s a program called Sandbox IE, or Sandboxie, as it�s normally called.  There�s one called Green Border.  There�s�� Fortres Grand has several sandboxing programs, a Virtual Sandbox.  Version 1 is free; version 2 you pay for.  There�s a company called MetroPipe that has something called the Portable Virtual Privacy Machine.  There�s VELite from a company called SecureOL; a product called BufferZone, and one called RunSafe, you know, there�s a bunch of utilities which are jumping onto this bandwagon of so-called virtualization, and using that term improperly.



Now, I actually mentioned one which is not using it improperly, and that�s this Portable Virtual Privacy Machine from a company called MetroPipe.  They�re actually � they�ve packaged the QEMU emulator and, I mean, actually trying to get Linux to boot.  In my experiments with it, it fired up a DOS window, it looked, you know, I saw the signs of a BIOS that was booting.  It even began to decompress the Linux kernel.  Then it all exploded.



LEO:  So, well...



STEVE:  It�s like, okay, well � and I thought, well, maybe it doesn�t like my machine, so � or I don�t need to reboot normally very often.  So I shut everything down and restarted Windows.  And this is Windows 2000 that I�m still using on my main workspace.  And I tried it again, and it decompressed the Linux kernel and then exploded.  It�s like, okay, well, I�m not recommending that one.  In any case, apparently it is an emulator and very slow.  There are some�� QEMU has moved forward with its technology to take advantage of more virtualization hardware that�s available.  But apparently it�s still got a ways to go.



Okay.  So what sandboxing does is two things.  Or the way to think about these sandboxing solutions, one is security, which is for protection from malware.  The idea that you could run IE or Firefox or Opera or whatever inside a sandboxed environment, where it would be unable to do anything to your machine.  So security is one aspect.  The other is privacy because, I mean, of real concern for people, especially, for example, if they�re at a friend�s house or they�re using a public computer or, you know, it�s not their own machine, the idea of leaving footprints behind.  You know, I mean, we know that browsers have caches that keep cached images of chunks of web pages that have been downloaded.  They have, you know, past URL libraries.  They�re constantly storing cookies on your machine.



And of course traditionally, I mean, there have been horror stories throughout history, throughout Internet history, of employers, you know, checking employees� browser caches to, you know, see what � where they�ve been and what they�ve been doing, and often finding, let�s just say stuff on the computer that seems non-work related.  So the idea is, from a privacy standpoint, is, you know, can we use this sandboxing technology to basically securely wipe out any trace of what we�ve done?



Now, I ought to say that VMware or Virtual PC, you know, the real industrial-strength true virtual machine systems, which are available from VMware and Microsoft, those are creating a true OS boot environment and really offer robust containment.  Unfortunately, none of these other sandbox utilities do that.  What they do is clever and useful and valuable, and in some cases free.  And I�ll talk about some specifics here in a second.  But I want to explain the technology so that people understand the limitations and don�t ask or trust these things further than they should.  What they�re doing is exactly like what we�ve talked about many times in the past, in fact just recently when we were talking about Blue Pill, and I was talking about how rootkits get into the kernel and intercept functions in the operating system for the specific reason of hiding themselves.  They will unlink themselves from the process list so that simple process exploring won�t reveal them.  They will filter the application program interface, the API, that the operating system publishes to its applications, they�ll filter that so that any reference to them is removed in the applications, you know, listing the directory contents of the drive.



Well, what these sandbox programs are all doing is the same.  Oftentimes there are kernel-level components because they need to get into the system in a deep way.  But they are � they then filter the operating system functions which programs need to use in order to store stuff persistently on the hard drive.  So, for example, they will intercept the file open and the file read and the file write calls that applications make to the operating system in order to perform disk I/O.  They will intercept and filter the registry reading and updating, modifying, writing calls in order to � essentially to impose a layer of supervision between the application and the operating system.



Now, it�s cool, and it works.  But you can�t trust it.  And that�s the problem, is that they�re overselling what the technology can really be used to guarantee.  And so I want to, I mean, I want to end up talking about how valuable these things are and where they�re valuable, but to explain that this is something which is inherently error prone and accident prone.  If applications � and it sort of comes back to what Joanna was talking about with Blue Pill, the idea being that, if software knows � if some software knows what other software is doing, it can work around it.  And so the problem with these sandboxing programs, which are not true � which are not creating true virtual machine environments, is, you know, the problem is that the program is still running on the operating system.  And if the program wanted to work itself around containment, it almost certainly can.  So we�re back in sort of that cat-and-mouse game where, if the program, you know, the traditional virus/antivirus program, malware/anti-malware, cat-and-mouse, the idea being that you�re trying to erect an artificial barrier to restrict the things that a program can do, but you�re using software to impose the restrictions.  Well, there are other ways to achieve the same things using nontraditional or undocumented operating system calls that may not be filtered and interposed or are too burdensome to filter and interpose.  So I would never absolutely trust something that was one of these pseudo-virtualization solutions from a security standpoint.



Now, that�s different than from a privacy standpoint, and that�s where I think these can have real value.  So I just want to make sure that I�ve been clear.  These pseudo-virtualization sandboxes, and I should say that I�ve got them all listed with links and URLs and some comments on the episode notes page, you know, for this episode, No. 55, on Security Now!.  So I�ve got them listed.  I ran through them briefly, but people can go there.  And I�ll be talking about one in particular in a second that I like most, based on everything that I�ve seen and sort of doing a quick review of all these options that I�ve been able to find.



But the true virtualization, for example, that VMware creates and Virtual PC creates, where they�re actually booting an operating system, and you are then � or again I should also say the VMware player that we talked about several weeks ago, VMware player that�s booting Ubuntu Linux and then running Firefox.  I mean, there you�re talking seriously good security because the browser is now running in an entire operating system which is running inside of a virtual machine environment, and the security is virtually absolute.  The user still has to be responsible for not allowing network exploits, that is, you know, this thing is only useful probably if it�s on the Internet, so you need to make sure that it has access to the Internet and not back into your own computer�s network, or it can, you know, play filesharing games or whatever.



LEO:  Let me ask you about that.  What kind of barrier is there?  I mean, if I get a Sasser, a Zotob, a network-aware virus in the virtual machine, can it spread to the real�machine?



STEVE:  Yes.



LEO:  Okay.



STEVE:  If you enable those features.  For example, one of the things that VMware allows is shared file access.  It�s very convenient, and in fact I use it all the time.  As I�ve mentioned before, I�ll have many virtual machines created, each with a different personal software firewall installed, and I�m jumping between them.  Well, it�s very convenient to allow all of them to see a shared directory on my real physical hard drive.  So, you know, so VMware wants to offer that feature because it�s a convenience.  But of course with that comes a security consequence.  And similarly...



LEO:  So you shouldn�t assume a virtual machine is absolutely impervious.  It isn�t.



STEVE:  Right.  I would say the best way to express it would be that a true virtual machine environment, like VMware or Virtual PC or Parallels or, you know, one of those where you�re actually booting an operating system within that containment, it is a virtually secure tool.  But like any tool, it can be misused.  If you download a file in that machine and then drag it...



LEO:  Right.



STEVE:  ...out of the virtual environment onto your real desktop, well, you�ve just breached that barrier.



LEO:  Right, got it.



STEVE:  So, okay.  So I wanted to just be very clear about what this distinction is.  Now, these virtual � these pseudo-virtual environments that unfortunately tend to oversell themselves because they just love that word �virtual,� because everyone thinks, oh, that�s good, the problem is they�re not running in a true secondary instance of an operating system that you had to install.  The benefit is that they�re much lighter weight, that is, they�re easier to install.  Remember I mentioned that VMware is a heavy installation.  I mean, it�s creating virtual adapters, and it�s, you know, it takes a while.  You�ve made a commitment when you�ve even stuck the VMware player on your system.  It�s something that, you know, you don�t just casually walk�around with a USB dongle and do it to machines that you�encounter.



LEO:  Although that time may be coming, given hardware support for virtualization.  That may not be so hard to do down the road.



STEVE:  Oh, I mean, that�s a very good point, Leo.  You could imagine in this next generation with 64-bit hardware virtualization, you could say, give me an empty machine and run this operating system in it, and it would be, you know, instantaneous.  It�d just be like hitting a hotkey.



LEO:  Yeah.



STEVE:  Okay.  So what these pseudo-virtual sandboxes do is they interpose themselves between the application and the operating system, attempting to hook and filter any way that the application could make a permanent change to the operating system.  You want them not to be able to do that.  So, and they really vary in their capabilities.  Based on what I saw, one that I would recommend that people play with, if they�re interested in experimenting with this, is the first one I called.  It started off being a sandbox for IE.  Therefore its name was Sandbox IE, or Sandboxie.  It�s just Sandboxie.com.  What I like about it is that it appears to be very good, I mean, these guys have got ActiveX running in a virtual container.  It�s gone way beyond IE.  You can pretty much sandbox any browser and application that you want to.  It is very lightweight.  It�s about a 245K � 245K�� so less than a quarter megabyte download, which expands to about a megabyte, about 900K, in a directory.  You can install it without rebooting, and it worked just beautifully for me.



There were several others that, I mean, just ground my system to a halt.  All kinds of errors coming up, files couldn�t be found, I mean, basically it was a disaster.  The one that I was hoping I was going to be able to like and recommend is about an 8MB download, and it�s called the Virtual Sandbox Free Edition Version 1.  It�s from this Fortres Grand Corporation.  And I�ve got a link on my show notes.  The problem was, I mean, it offered lots of control, nice UI, but it just didn�t work.  I mean, it was like, okay.  And what was really disturbing is I couldn�t figure out how to get rid of it.  It put nothing in the Add/Remove programs list.  It had installed itself deeply in my machine with all kinds of DLLs and stuff, I mean, it was a serious install.  And I thought, oh, no, now I�m stuck with this.  Well, the good news is, running the setup program a second time, it saw that it was installed, and it offered to uninstall.  But there was no documentation I could find anywhere that indicated that that�s how you do that.  It was, you know, it was just like, okay, I hope this works.



But anyway, the one I like is this Sandboxie.  It is fully functional in its free version and offers additional features if you register, but you really need not register.  The way it works, I would describe it as file-level sandboxing.  When you set it up and, for example, you want to run � you want to sandbox IE or Firefox, you want to sandbox your browser, the first time you use the browser, basically it�s monitoring everything the application does.  if the browser, for example, opens its cache files in order to create a place for the browser�s caching of images and other web objects to go, Sandboxie makes a shadow copy of that file, whatever � any files that your applications open, Sandboxie makes a shadow copy of that file.  Now, if the file is open for read-only access, meaning that that file handle that the application has created can only be used for reading, Sandboxie is smart enough to see, oh, you know, this handle that�s been created cannot be used for modifying the file.  So it will � it�s smart enough not to make a shadow copy.  Unfortunately, many applications will open a file for full access, for read and write access, even if they�re only going to be reading.  Sandboxie has no choice but to make a copy of that file in its shadow land in order to then intercept any modifications the application makes.



So the point is that what I found in using it is that it�s a little sluggish getting going because it�s having to make copies of stuff that the application touches when it starts up.  But once you�ve sort of got that little bit of sluggishness behind you � and I should mention that I�m using, you know, an older � I�ve got a dual 866MHz Pentium, is it 3 or 4?  I can�t remember now.



LEO:  Well, anything would be sluggish on that.



STEVE:  Yeah, I mean, no, I�ve just � I�ve got so much installed here I�m reluctant to move to a different hardware platform.  It�s like, you know, that nightmare of setting up Windows from scratch.  But anyway, so in my experience this thing really works.  The guys who�ve developed it had been working on it for years.  They�ve got interception for DCOM and RPC, ActiveX support, Comm object support.  I�m very impressed with Sandboxie and with what it does for free.  I would � and the other application that I like so much is, because it�s lightweight, it installs without a reboot, it really would be possible for you to either have it on a dongle or to, like, maybe email yourself a copy to your Google Mail account so you�ll always have it available if you were at a friend�s house, you were at some other corporate location.  My point is that this is a sandbox which installs smoothly and cleanly.



I need to mention it only does run under newer operating systems because it uses all the API functions of Windows 2000 and on.  So 2000 and XP are the platforms where it can be used.  None of these things that I have found will run back on �95, �98, and ME.  They�re just, you know, those are just too old now.



But the beauty of it being so lightweight, and the fact that it really does work, is if you wanted to use someone else�s computer over which you didn�t have long-term supervisory control, you could quickly install Sandboxie and do anything you wanted to within the sandbox with absolute confidence that, when you shut it down, and these files are deleted, no change has been left on the hard drive, no change has been left in the registry.  And so from a standpoint of real easy lightweight privacy, I think it�s a tremendous solution.  I mean, I don�t know of any reason why it wouldn�t also protect you from a security standpoint.  I just know that that�s inherently dangerous.  It�s, you know...



LEO:  Don�t assume that it will.



STEVE:  Right, right.  I mean, you know, they say it does.  I respect these guys.  But again, you know, there are principles of security which are inviolate.  And one of them is, using software to block other software is inherently prone to error.  It�s just, you know, it�s trying to filter what the soft- what malicious software wants to do.  And if malicious software knew it was in a Sandboxie sandbox, or any of these other ones, for that matter, I have to imagine there was a way around it.  But for the purpose of privacy protection, I really like this because it�s lightweight, it�s easily portable, it would allow you to use someone�s computer with complete confidence that, once you�re done, you have left absolutely no trace behind.  Because there, on the privacy side, I�m sure their technology is robust.



LEO:  So how much is Sandboxie?



STEVE:  It�s free.



LEO:  I like it.



STEVE:  Yeah.  It is free.  You get some additional features if you register.  And I don�t remember, I think it�s maybe $19 or $20 to register.  I mean, very inex- maybe even less than that.  I don�t remember.



LEO:  Is it -xy or -xie?



STEVE:  Sandbox IE.  Because it started its life as an IE�sandbox.



LEO:  Ah, I get it.



STEVE:  But that was back in Version 1.  They�re at version 2.65.  They�ve even got a version that now runs on 64-bit Windows, or 64-bit platforms, rather,  Windows on 64-bit platforms.  I�m very impressed.  I think, you know, given that all the ones that I was able to find, there were some that were, you know, that were much larger, much heavier weight.  Some were frightening, I mean, in what they did to your system.  My feeling is, if you want your system to have, you know, a industrial-strength sandbox, then VMware player with Ubuntu and Firefox.



LEO:  Right, right.



STEVE:  We talked about, I mean, it�s � you install it once.  Then you�ve got a killer sandbox which is running the full operating system in containment.  Or, you know, Microsoft�s Virtual PC, similarly.  So if it�s on your own system, and you want real security and the same kind of sandboxing, because of course those also give you the same sort of privacy guarantees, in a cleaner fashion, inasmuch as it�s a virtual machine, and this stuff really does work from VMware and Microsoft, that�s what I would recommend.  But if your interest, for example, is portable privacy, where you want to be able to use a machine temporarily and absolutely know, you know, you want to use Google Mail, which is web-based, and know that no images that you display, nothing that you�ve downloaded, no cookies that have been left behind, no login credentials, I mean � oh, these things also say that they, you know, are protection from keystroke loggers.  Well, I mean, that just makes me roll my eyes.  I mean...



LEO:  Because they�re obviously not.  That�s ridiculous.



STEVE:  You just � you can�t.  It�s just, you know, you�can�t...



LEO:  Because it could be hardware, there�s so many ways to do this.



STEVE:  Exactly.  So they�re making claims that are not possible for them to guarantee.  But from the privacy standpoint, I think these are � I think Sandboxie � I mean, and the other ones, too.  But the other ones are frightening, I mean, they just � they hurt your system.  It�s like, whooo...



LEO:  So this you could run off of a Flash, a thumb drive.



STEVE:  Well, you can�t run it off of the thumb drive.  But it�s so small...



LEO:  You could install from it, I get it, I get it.



STEVE:  Yes.  You could literally store it on a 256-meg thumb drive, just to always have it with you.  On the other hand, it is so small that if you had a server that you know�� where you knew you could access it, and that�s why I sort of like the idea, you know, either one of those...



LEO:  Just download it real quick, yeah.



STEVE:  A free file site, or just send it as an attachment to yourself in Google, and then you could always access�that...



LEO:  Oh, good point, yeah.



STEVE:  ...in order to install.  I mean, Google ends up sort of being like a free file server for that.



LEO:  Can you save your Sandboxie virtual machine and move that around?



STEVE:  You cannot do that.  So in that sense it�s not the robust solution that VMware...



LEO:  See, that would be great.  Then if I had, you know, if I bookmarked things or I had cached files, I could take them with me instead of leaving them behind, which you have to�do.



STEVE:  Yeah.  And I have to say that I was trying to cover as many of these as I could as quickly as I could, so I did not go as deep into Sandboxie as certainly is possible to do.  They�ve got a nice website, FAQs, you know, documentation, I mean, I just � I feel good about...



LEO:  A lot of people have told me about this.  So I think you�re right, I think this is probably the kind of preferred�choice.



STEVE:  Yeah, I feel good about it.  Again, trust none of�these...



LEO:  Trust no one.



STEVE:  Trust none of these for security.



LEO:  Right.



STEVE:  But I would say trust all of them for privacy.  That part I think they�ve probably got nailed.  And it�s entirely feasible to filter Windows API in order to enforce privacy, in order to, like, keep shadow copies of files.  And I would�� if the idea of, like, this kind of portable, transportable, privacy shell is appealing to people, I really recommend our users check out Sandboxie.  I mean, it�s free.  I would � and I would, really, I would support them.  If you end up finding that you use it, you know, go back and give them your donation because this is the kind of thing we want to keep moving forward.  And it�s just a � I was very impressed.  It did exactly what I was hoping I could find a sandbox to do.



Again, it says it will protect you against malware.  And, you know, and why not?  I mean, certainly, I mean, I guess my point is, it will as long as the malware isn�t, like, really good about getting around sandboxing.  And I have to imagine there is a way.  So I�m not saying it�s useless and isn�t useful for protecting against malware.  I�m really sure it is.  But I would never say it�s absolute protection because this technology can�t give you absolute protection against malware.  It can, and I believe it does, give you absolute protection or enforcement of privacy.



LEO:  Excellent.  Excellent.  Very useful, very useful tool.  And once again you�ve given us something to download, install, and use to protect ourselves.  Thank you, Steve.  I appreciate it.



STEVE:  I really think people are going to like it, Leo.



LEO:  I want to, before we go, I just wanted to mention something.  You�re familiar with the Chuck Norris Facts website?  You know, these are facts, kind of, you know, fun facts about Chuck Norris, like guns � you�ve seen this?  Guns don�t kill people, Chuck Norris kills people?



STEVE:  Okay, no, I...



LEO:  Chuck Norris does not sleep, he waits?  Anyway, people who love Chuck Norris, or even who don�t, just love these.  They�re very funny.  Well, security expert Bruce Schneier has been � he�s the latest to be Chuck Norrised.  There is a site now, Bruce Schneier Facts.  And actually they�re great for people who are security insiders because they�ll get them, you know.  Bruce Schneier knows Alice and Bob�s shared secret.  Or Whitfield Diffie and Martin Hellman use only their surnames out of fear of Bruce Schneier.  You know, Bruce Schneier mounts side channel attacks through the front channel.  Just if you�re interested in security, Bruce Schneier�s posted a link on his blog.



STEVE:  That�s cool.



LEO:  Bruce Schneier once factored a prime number.  Bruce Schneier doesn�t even trust Trent.  Trent has to trust Bruce Schneier.  Bruce Schneier can solve NP-Complete problems in NlogN time.  They�re just totally geeky, but I just thought I�d pass that along to you.  I�m a little late on it because, well, because we�re pretaping this.  And when you hear this, it will be old news.  But I thought I�d pass it�along.



Hey, Steve, thank you.  I will see you next week in Toronto.



STEVE:  Yup, yup.



LEO:  And we won�t record there, but we�re going to � we�ll party down, man.  I think we�re going to appear jointly on the techPhile podcast, as a matter of fact.



STEVE:  Cool, that�ll be fun.



LEO:  Frank has asked us to...



STEVE:  Do I bring my own mic?



LEO:  No, I think Frank is...



STEVE:  Because, you know, my...



LEO:  Frank is well...



STEVE:  I�ve got a big mic.



LEO:  You have a big mic.



STEVE:  I�ve got a big one.



LEO:  If you want the big mic � maybe you�d better bring the big mic.  But I�m sure Frank will have his own little mic.  Frank Linhares does the great techPhile.ca podcast, and we�ll be appearing on that sometime in the near future.



STEVE:  I love my microphone.



LEO:  I know you do, and I love mine.  You and I have the same microphone.



STEVE:  We do.



LEO:  Yes.  Steve Gibson, have a great week, we�ll see you next Thursday.



STEVE:  Okay, Leo.



LEO:  Oh, wait a minute.  I can�t stop � wait a minute,�stop.



STEVE:  Hey, where you going?



LEO:  Where am I going?  I�ve got to thank a lot of people.  First of all, we don�t do it enough, I really want to make sure I do it more often, thank AOL.  Because really we wouldn�t be able to do any of these podcasts.  They provide us so much bandwidth, more than a terabyte a day now of downloads.  And...



STEVE:  Wow.  And you�re adding two more podcasts, so...



LEO:  And they�re going to take them.  I asked them, and they said we�d love to take them.



STEVE:  Fantastic.



LEO:  Three more they�re going to take.  So that�s really, you know, I have to say they�re very generous there with their bandwidth.  And I know if we had to pay for it, well, frankly, we wouldn�t have so many podcasts.  So thank you, AOL, for the great job you do.



We also want to thank our sponsor, who provides us with the funds to make this podcast possible, Astaro Corporation.  Early adopters of Security Now!, and we�re glad to be your adoptees.  Astaro.com.  They�re the makes of the Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, viruses, and hackers, as well as a complete VPN, intrusion protection, content filtering, and an industrial-strength firewall, Astaro�s the way to go.  Open source, powerful, it really is fantastic and easy to use, and it comes in a single appliance.  You just plug it in, and there it is.  Contact Astaro, Astaro.com, or you can call them toll free, (877) 4AS-TARO to schedule a free trial of an Astaro Security Gateway appliance in your business.  You�ll see what Astaro can do for you.  And of course non-business users, as always, could download the open source software version of ASG for home use at Astaro.com.



Steve Gibson�s site is GRC.com.  That�s where you can go to get show notes for this at GRC.com/securitynow.htm, or get Elaine�s transcripts and the 16KB versions.  But while you�re there, make sure you check out all of Steve�s free security programs, like UnPlug n� Pray, the DCOMbobulator, and of course ShieldsUP!.  How many ShieldsUP!?  Is it over�� it�s over 40 million, it must be by now.



STEVE:  Oh, no, we�re at 44.8.



LEO:  44.



STEVE:  Last time I saw.  Almost 45 million.



LEO:  44 million systems scanned and protected.  And if you have a hard drive, and I think almost everybody does, you might want to check out SpinRite.  It�s your hard drive�s best friend, the ultimate disk recovery and maintenance utility, SpinRite, because Steve couldn�t spell when he wrote it.  But he knows how to spell it right now.  I like�it.



STEVE:  You realize that it was an 8.3 name.



LEO:  8.3, that�s right, it had to be eight letters.  Oh.



STEVE:  It had to be eight letters back in the old � back in, you know, 20 years ago, when SpinRite was first born.



LEO:  Well, it still does, doesn�t it?  Because you boot SpinRite � when you download it, it�s a very small file because he writes everything in Assembly.  Just what is it, 30K?  60K?  It�s tiny.



STEVE:  It�s gotten a little bigger over time because there�s now a Windows side for creating a bootable CD and a bootable thumb drive and so forth.



LEO:  I forgot about that, yeah.  So it�s � you run it, SpinRite 6, you run it in Windows, and it says, okay, what do you want to do?  And you create a bootable drive or a thumb drive.  I made a bootable CD.  And there�s DOS on that, there�s FreeDOS or something on that, right?



STEVE:  Right, it is FreeDOS, and it is FAT32.  So I could have used a longer filename now.



LEO:  No, no.



STEVE:  But, you know, R-i-t-e, that�s the name.



LEO:  SpinRite.info, which is not in fact 8.3 compliant.  Or you could go to GRC.com.  Times have changed.  We�re not stuck with those three letters at the end anymore.  Really a great tool.  And if you want to read more testimonials from happy, happy customers, SpinRite.info is the place to go.



Steve, I think we have now wrapped up this episode of Security Now!.



STEVE:  Always good, Leo.  And next week we are back to our Q&A that we punted on when we had that busy week in security a couple weeks ago.



LEO:  Does that means we�re going to have 24 questions?



STEVE:  We�re going to � no.  We�ll do a dozen.  It�ll be Q&A No. 10, Episode 56.



LEO:  I can�t wait.



STEVE:  For September 7.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#56

DATE:		September 7, 2006

TITLE:		Listener Feedback Q&A #10

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-056.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world "application notes" for any of the security technologies and issues they have previously discussed.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 56 for September 7, 2006:  Your questions, Steve�s answers.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Visa.  Safer, better money.  Life takes Visa.



Ladies and gentlemen, it is time to talk security once again with the king of all things secure, Mr. Steve Gibson.  He was up in Canada last week with me, and we said farewell to Amber.  And he sat on my bed with his sock puppet and wept his crocodile tears.



STEVE GIBSON:  For people who weren�t there, Leo, this is sounding very strange.



LEO:  Yeah, you have to listen to Frank Linhares�s techPhile podcast because we did a podcast in my hotel room with Steve�� you were great.  And Mike was there from commandN, and Amber, and Frank, and me.  And it was a fun podcast.



STEVE:  We just talked.



LEO:  Yeah, it was really a fun podcast.



STEVE:  We just sort of hung out.



LEO:  Yeah.  But it was Amber�s last week.  And Steve said � it broke my heart � �I�m never coming back.  There�s nobody to hug.�  You can hug me, Steve.  Okay, never mind.  Forget I said anything.  We�re going to do a Q&A.  It is mod 4.



STEVE:  Yup.



LEO:  And mod 4 means divisible by four.  So Episode 56 is divisible by four, if I remember my grade school math.  Lots of questions from listeners all over the world who listen to Security Now!.  Anything you want to catch up with, with our sandboxing from last week or...



STEVE:  We�re going to � next week I want to do a review, essentially a comparative review of the VMware products and of Microsoft.  Several people have written in when we were talking about VMware saying, hey, what about Microsoft�s Virtual PC?  Because it�s free, too.  And it turns out that VMware has a server version which is also free, even though what I�ve been talking about and what I myself have always used is their VMware Workstation, which is not free.  So it�s like, okay, I really need to, like, figure this out because there�s been a lot of interest raised in this whole notion of creating virtual machines to operate in securely.



LEO:  Right.



STEVE:  So we�re going to do one more episode on the whole sandboxing VMs for security topic.



LEO:  Great.



STEVE:  And I got a really neat note from a listener actually about SpinRite that I want to read next week.  I don�t have it here in front of me.  So I�ll track it down.  Because it was just � it was just a perfect little � a perfect little experience.



LEO:  All right.  Well, let�s kick off with Question No. 1, John from Piedmont, California.  He says:  Back in Episode 51�� that was the Vista�s Virgin Stack episode.



STEVE:  Right.



LEO:  You guys were worried about bugs that Symantec engineers had found.  But those had already been fixed in the later betas.  And now, of course, we�re in release candidate one or maybe even release candidate two.  I mean, we�re getting very close to the final version of Vista.  And he�s also read that Microsoft is opening Vista to hackers.  They actually offered copies to 2,500 hackers at the Black Hat Convention, just so they could pound on the OS before it�s released.  Well, all OSes have bugs, says John.  Microsoft�s doing everything it can to remove them.  Isn�t that enough?  Isn�t Microsoft behaving responsibly?



STEVE:  I would say yes.  I think that Microsoft is doing what it can.  My concern, and really the whole thrust of our talking about Vista�s Virgin Stack, was really to drive home some sort of philosophical and theoretical aspects of security.  For example, I�ll remind people that Microsoft opened Windows XP to hackers also.  And Windows XP was a�catastrophe.



LEO:  Right.



STEVE:  From a security standpoint.  So the idea of over some relatively narrow window of time of telling people, okay, everybody pound on it and see what you can find, that isn�t the model for the way security problems are found.  You know, they�re, you know, Microsoft could do that, or Microsoft would solve those problems.  The thing that finally made the difference in Windows is when Microsoft finally started running the software firewall by default.  Suddenly everything changed because, even though ports were opened behind the firewall, they were no longer exposed to the outside.  And, I mean, had that been done from the beginning, we would have had none of those Windows XP worms that were such a problem in the beginning.  So philosophically, Microsoft finally made the right decision to be running a personal firewall that blocks incoming traffic by default.  And...



LEO:  But it�s not, you know, that�s just � that�s nice.  Of course there were a lot of security patches, too.  But it�s not just that that�s going to make Vista secure or not.  I�m sure the firewall will be turned on in Vista.



STEVE:  Well, that�s what�s going to make this such a party for us.  For example, Microsoft has said that they�re building in a peer-to-peer technology by default, which will be running by default.



LEO:  Oh, that�s nice.  So then...



STEVE:  Yeah.



LEO:  ...it doesn�t matter if you�ve got the firewall turned on, you�ve got a server.



STEVE:  You�ll have something that has built-in NAT traversal that allows incoming contacts.  So, I mean, and we know, for example, that even if you had a connection to a remote location, if you�ve got a brand new stack that has not had, you know, all the bugs pounded over, pounded out of it over time, there are going to be problems.  And so what was so illuminating for me was to see that Microsoft � and the reason we called that episode the �Virgin Stack� � Microsoft was repeating all the mistakes, well, many of the mistakes which had been already made and fixed 20 years ago at the beginning of UNIX Internet stacks.



LEO:  So you�re saying even � oh, yeah, of course they�re patching those as time goes by, and a lot of them have been patched.  But the fact that they even made them again is not�encouraging.



STEVE:  Right.  Well, the fact that they made those mistakes is � essentially it proves the point that a brand new stack, written from scratch, is going to be a problem.



LEO:  Yeah.



STEVE:  Just it�s going to be a problem.  And we�ll find that happening, I�m sure.



LEO:  And we�ll see how much of a problem soon.



STEVE:  So Microsoft says they did this because they needed to start again.  I respect them for not dragging their old code along forever and, you know, adding patch on patch and feature and glomming things on.  I mean, certainly starting over, knowing now what they wish they had, they can build it.  So that�s the good news.  The bad news is there is a security cost to doing that, that we�re going to be spending a lot of time talking about in the future.  There�s just no way around it.



LEO:  That�s good.  Just gives us something to talk about.



STEVE:  Yeah.



LEO:  If it weren�t for that, we wouldn�t have anything to talk about.  Dave Rozendal asks from Michigan:  Regarding Episode 45 � we were talking about the hosts file � can you password-protect the hosts file?



STEVE:  Yeah, I put that in because there have been a number of people who have asked the question.  And I wanted to talk a little bit about the use and misuse of the hosts file.  First of all, there are ways you could protect it.  For example, if you used, assuming that you have an NTFS partition that supports Microsoft security policies, you could make the file writable only by the administrator...



LEO:  That�s a good idea.



STEVE:  ...and � yeah.  And then, as we recommend, run as a non-administrative user.  Then if something that you ran by mistake, like, you know, a script in a browser or a program that was doing something behind your back, any such program would be locked out from being able to modify the hosts file unless it went to much greater extent to acquire, you know, a so-called �privilege elevation� of some sort.  And there are ways to do that.  But it�s just � it�s much more work.��So...



LEO:  Now, let me ask, though.  The hosts file, if you�re not running as administrator on a normal operating system, you wouldn�t be able to modify it anyway.  You wouldn�t have to change the permissions on the hosts file.  It just wouldn�t be accessible because it�s a system file.  I don�t know about it on Windows.  I don�t know what it is.



STEVE:  Well, that�s exactly the case.  However, most people who are not security conscious are already...



LEO:  Are running administrator.



STEVE:  Exactly.



LEO:  Right, right.  So don�t run as administrator, for�sure.



STEVE:  Yeah.  And so the real issue is, clearly someone wants to password-protect the hosts file because they�re concerned about malware modifying parts of their system.   Well, if you�ve gotten to that point where malware is in your system, then you�re really already in serious trouble.



LEO:  Right.



STEVE:  I mean, it�s like it�s � I don�t want to say it�s too late.  Certainly you can � there�s malware that doesn�t modify the hosts file.  So having a modified hosts file could prevent that malware from looking up the domain that it�s trying to find, trying to phone home to, and could confuse it and still give you some protection.  On the other hand, there is malware that does know about the hosts file.  And we�ve seen instances where malware, for example, is changing domains for antiviral companies or putting entries in the hosts file for antiviral companies.  And even Microsoft trying to prevent you from updating your patterns to identify that very malware which you�ve just acquired in your system.  So we know that there is malware that does modify the hosts file.



The best you can do is � and again, the thing that�s frustrating for people is everyone wants security to be black and white.  It�s just not.  I mean, there�s just � there�s nothing about security that is absolute and black and white.  It�s a matter of using layers of protection because it�s how, for example, we�ve recommended multiple spyware utilities.  Rather than just one, using three is better because there will be some overlap, but there�ll be some programs that one will see that another won�t.



Similarly, the hosts file is another � is a good thing to do, but it�s not absolute protection.  You know, the phrase �absolute protection� is a misnomer.  I mean, it just � it�s an oxymoron in security.  It doesn�t exist.  So in general you should think of the hosts file as, like, one more useful good thing to do, but not ask it to provide more protection than it really can.  Fundamentally, if there�s bad software in your system, you�re already in trouble.  And then you really can�t trust anything that happens from there on.



LEO:  Art in Washington, DC, is juggling.  And he�s not a juggler.  He�s considering remote access options for his users.  He writes, first of all, he�s having a policy to use VNC over a VPN to securely allow access for my end users, access to their desktops from home.  A good idea.  And here�s the details.  He wants to allow a thou- he�s got a thousand or so users.



STEVE:  Yeah.



LEO:  That�s a lot of seats � access to his network, a business network, from home.  They have purchased a VPN, but they�re concerned that their home computers might have viruses, naturally.  In fact, the chances are, if you have a thousand home users, that you have a � almost certainly that there�s some viruses.



STEVE:  You�ve got a few in there, yeah.



LEO:  We�re worried that the remote access will make improper downloads of sensitive data too easy, because they have consultants that come and go.  A nice solution seemed to be to give the users some kind of desktop sharing to their local machine from home.  Since the only thing going across the network should be bits of screen pixels, it seems to be more secure, albeit slower in performance.  I guess that�s why he�s thinking about VNC.  This would also solve the issue of having to purchase and install applications on the home machine.  VNC is rumored to have security flaws, and the other products � GotoMyPC, GotoMeeting � require fees.  Also an interesting one is WebHuddle � I haven�t heard of that.  A Java...



STEVE:  No.



LEO:  ...open source screen sharing tool.  However, it seems buggy.  He�s got a quandary, doesn�t he.



STEVE:  Yeah.



LEO:  Since many of the users are still on Windows 2000, the Remote Desktop feature of Windows is not available.  I don�t know if that�s the case.  And we do have a hundred or so Macs.  Any ideas or comments?  Just to � I�ll throw something in.



STEVE:  Yeah.



LEO:  You can use Remote Desktop with Macs and Windows 2000.  It�s the host machine that has to be a Windows � well, in fact, if you�re doing it on a network, I don�t think even that has to be a Windows XP.



STEVE:  Well, and Windows 2000 Server will be...



LEO:  That�ll do it.



STEVE:  ...is able to run terminal services, but not the non-server version.



LEO:  So Windows 2000...



STEVE:  Professional, I think it�s called.  Well...



LEO:  Windows XP Professional is the server.  But I think anybody can be a guest on there.  Anyway, that�s one...



STEVE:  Yes.  You�re able to run the client from any kind of�machine.



LEO:  Yeah, and including a Mac.



STEVE:  Yup.



LEO:  So that�s answer one to that.  I guess really the bigger question is, is it possible to be secure doing what he wants to do, VPN to VNC.



STEVE:  Well, yeah.  The reason I thought this long question was really interesting is that it does � it sort of morphed from a policy or philosophy standpoint.  You know, the idea being, what he wants to avoid, even though he�s got VPN technology already and, you know, certainly for � he�s got some serious VPN technology if he�s got a thousand users who are able to use this.  That, you know, that�s a nice big system.  His idea is, he doesn�t want to use the VPN simply to allow remote telecommuters to connect into the corporate network and be a peer on the corporate network, for the reasons he states.  You know, if there was a virus, then the virus could, you know, crawl up that wire.



Essentially, what this means is, you know, as we know about VPNs, that anyone connected to the corporate VPN, their computer is, for all intents and purposes, on the corporate network.  And so for him, he doesn�t mind the machines that are physically located in the corporation being on the corporate network, obviously, that�s what they�re plugged into.  They have to be.  He�s concerned, and this is a really useful concern, about too carelessly extending those corporate � essentially the corporate network through the VPN to remote machines.  Now, many people do that.  And, for example, you know, it�s what, you know, for, like, personal users it makes a lot of sense to be able to access your home network while you�re out roaming around.  So his alternative is to restrict what can be done through the VPN to running VNC.  And so essentially his question was, given all of that, if VNC has security problems, would encapsulating it in the VPN solve those problems?  And the answer is yes.



LEO:  Good.



STEVE:  And so...



LEO:  Simple enough.



STEVE:  So it�s a nice solution.  You know, there are many different VNC variants.  Some are inexpensive; some are open source and free; some are fast; some have, you know, different features.  There�s a bunch of them.  But by running them within your existing VPN, all security issues of, like, having a VNC server that�s exposed and could be logged onto by malicious people, all that goes away.  So it really is a great solution.



LEO:  Good.  There you go.  See?  Fabian from Bonn, Germany says:  After reading the Windows Vista Security Report by Symantec you mentioned in � again, we�re talking about this virgin stack issue in Security Now! 51 � there�s something I don�t understand.  On page 5 of the report � wow, he got farther than I did � they mention that Vista employs NAT traversal via technology called a �Teredo,� or �Teredo,� and that it will make your Vista hosts that are behind a NAT router externally visible.  I guess that�s the peer-to-peer you were talking about, Steve.



STEVE:  Yes, exactly.



LEO:  Since this is enabled by default, does it mean a Vista machine announces itself automatically to a public server in order to provide NAT traversal?



STEVE:  Yes.



LEO:  Uh-huh.  That�s how it works.  They say in the paper that many, quote, �many individuals and companies use private addresses as a key part of their defense strategy and may find their Vista hosts externally reachable to an unexpected degree unless strict egress filtering is in place.�  In other words, unless my personal firewall blocks outbound traffic from that service, my machine will be visible on the Internet.  This would mean that your recommendation and Leo�s recommendation of NAT routers are practically void with Vista machines, wouldn�t it?  Ah, really.  Or does all of this only apply once I enable IPv6 on my network?



STEVE:  Well, this is a perfect example of Microsoft extending the functionality beyond what�s been well proven�and...



LEO:  Beyond what anybody�s asked for.



STEVE:  Well, that�s exactly right.  I mean, you wonder why they have this thing turned on by default.  And the reports have been, this is on by default.



LEO:  I do want to say, though, this is still beta software.  And I always hesitate to comment on beta software because you don�t know what they�re going to turn on or off when they ship this thing.



STEVE:  That�s very true.  Although, even if, I mean, it�s worse that it�s on by default.  It�s a concern that people may be told to turn it on when they don�t need to.  For example, Universal Plug and Play, you know, is, like, on all the time and...



LEO:  That was on by default, too.



STEVE:  Even when people don�t need it and aren�t using it.  So it�s...



LEO:  I think it�s unlikely, I�ll be honest, given how people feel about peer-to-peer and the fact that they�re trying to get Vista adopted by businesses that hate peer-to-peer, that this would be turned on by default.  I just don�t find that likely.



STEVE:  Well, let�s hope not because it does � from everything I�ve seen, it�s exactly as Fabian suggests, that Windows makes an outbound call, registers itself with a server.  I mean, this is the way, you know, many other peer-to-peer systems work.  You know, you and I are both...



LEO:  But we choose to run those.



STEVE:  Exactly.  You and I are both using Skype.  But when we run our individual Skype clients, it connects into the Skype server.  Hamachi is the same way.  All the Hamachi clients tie into the central server, and that�s how the clients are able to find each other.  Well, Microsoft has developed the same sort of approach, but now it�s at the OS level.  Sure, it�s cool that this functionality that we�re all using currently in individual applications will be subsumed by the OS as a whole.  It just � it certainly is a concern from a security and privacy standpoint.



LEO:  Yeah.  Yeah.  Wow, okay.  Well, we�ll keep an eye on it.  But again, I find it hard to believe that they would do that by default.  But you never know with Microsoft.



STEVE:  How many years did we have Windows running services we didn�t need?



LEO:  You just never know.  But they�ve learned, I mean, I�ve just got to think they�ve learned.  Dave Matthews of Richmond, Virginia, writes:  I know you advocate using the administrator or equivalent account only when necessary.  You did just again a few minutes ago.



STEVE:  Right.



LEO:  I took your advice, he says, and made the change about five months ago.  I�m surprised at how seldom it�s actually needed.  However, I did run into negative feedback around the water cooler regarding Microsoft Updates.  Are security patches installed automatically under a normal level account?  If so, how can I confirm this on my machine?



STEVE:  Well, this question had a couple points that I really liked to discuss.  First, for what it�s worth, the Windows Update system runs as a system-level service.  It�s a classic Windows service running with system-level privileges.  So it�s not running in the user account, it�s essentially running in the background as an extension of the operating system.  It�s the kind of thing you can turn off if you want to, if you go into, you know, the services applet.  There�s a list of all the stuff that�s available in the system.  Some of it you can start by hand.  Some is running all the time.  Some you can disable, some you can stop, and so forth.  But it is running with system-level privileges, which it needs because it�s replacing core system DLLs and making changes to the core OS, essentially on the fly, although often you have to reboot in order to flush all the old stuff out and get the new code to load.  The second part is...



LEO:  I don�t think security � I�ll be honest.  I don�t think security patches are installed at all until you run as an administrator.  Because no other thing can � nothing else can be installed.  You can�t � for instance, try to update your antivirus.  Try to install software.  You can�t if you�re running as a limited user.



STEVE:  Well, that�s true except that Windows�s own security system, you know, built into Windows, is running as a system-level service.  So I�m pretty sure you can run as a non-privileged user.  You�ll get the little notice that Windows � that updates have been downloaded, do you want them to be installed, you say yes...



LEO:  Boy, I think that�s � if that�s the case, then it�s not very � that�s not a good setup.



STEVE:  Okay.



LEO:  I just � because it�s just too easy to spoof that.



STEVE:  Well, and there�s � that is the second part I wanted to bring up is that, you know, the concern around the water cooler, as Dave puts it, is, I mean, this is why all of us oldsters, you know, the old computer guys who�ve been around, were really looking askance for quite a while at this whole notion of, like, giving up one more aspect of control to Microsoft.  It used to be that you could, you know, voluntarily download these updates and install them when you wanted to.  And, of course, gradually we�ve been moved away from that model to the point now where, you know, the Windows Automatic Update is on, and you are berated if you turn it off, and you�re warned and cautioned, and little shields appear on your taskbar saying, oh, no, you don�t have updates turned on.  It�s like, okay, fine, you know, just take care of this for me.  So we�ve been incrementally losing more and more control over our system.  And so that, you know, thus the water cooler talk.  You know, he�s certainly right that we are now victims to what Microsoft chooses to do with our systems.  And of course, many corporations deliberately have this stuff off by policy because they want to vet and verify any of these changes that Microsoft makes prior to putting them onto their corporate-wide deployment.



LEO:  Here�s a � this is from an MVP, a Microsoft VP for Windows security:  If you set Automatic Updates to notify before downloading, or notify after downloading, no updates will be applied, and no notice will be offered to the limited user.  But as soon as an admin logs on, the Automatic Updates icon will pop up.  In other words, it won�t install if you�re a limited user.  If you set AU, Automatic Updates, to the third option, that is, automatically update, right, then most updates will automatically install for a limited user, and automatic updates will also force the limited user to reboot if necessary.



STEVE:  Yup.



LEO:  However, service packs which require a license agreement, i.e., SP2, will not automatically install for limited users.  So if you want to install a service pack, you�ll have to log in as admin.  I think, if you run as a limited user, it would behoove an admin to come in from time to time and log in.  Or it would behoove you to log in as an admin from time to time.



STEVE:  Yeah.  I think the typical model would be, for example, in a corporate environment, if they were allowing Windows Updates to occur, and the users were running as a non-admin user on the machine, then they would be happening in the background.  People turn their computers off at night and turn them on in the morning.  And with that morning reboot, everything gets updated.



LEO:  Except for the stuff requiring a license agreement.



STEVE:  Except a major service pack deployment, right.



LEO:  Right.  And that�s, again, only if you have the full Automatic Updates turned on.  If you have Notify in any way turned on, it won�t do it.



STEVE:  Right.



LEO:  So I, when I have users running as limited user, I make sure that periodically they log on and do system update and update their antivirus.  Because even if Microsoft will update, nothing else will update.



STEVE:  Right.



LEO:  So you�ve, I mean, a limited � that�s, I mean, there are a lot of drawbacks, unfortunately, to running Windows as a limited user.  It�s not easy.



STEVE:  Yup.



LEO:  But it�s also the only safe way, I think.



STEVE:  Well, yeah, because it does restrict � not only does it restrict you � and the whole point is it restricts any programs running in your session, that is, any, for example, malware or spyware or something � they are similarly restricted to the changes they�re able to make to the underlying OS.  And what�s really annoying is there�s all sorts of ways around that.  I mean, it�s sort of a � it was a good idea, but it was a faulty implementation.  One of the things we�re really hoping for is much more robustness in this regard from Vista.



LEO:  See, in my opinion, no system files should be changeable unless you have an admin log in, period.



STEVE:  Right.



LEO:  Regardless of, I mean, I guess it�s somewhat protected because it�s running as a Windows process, you know, Windows own process.  But I don�t buy it.  I think it�s just � it�s just not safe unless somebody has an admin password for system files to be modified.  Period.



STEVE:  Yeah.



LEO:  I think.  But you�re the expert.  I�m just saying.  And I�m looking at UNIX in particular.  If you don�t have an administrator log in, you can�t change a system file.  I don�t care what happens.  And the operating system can�t, either.  Although...



STEVE:  Well, and...



LEO:  ...processes can run as administrator, I guess.



STEVE:  Yeah.  The real problem is, Windows is so complex now, there are so many ways around things.  I mean, the fact that debuggers are able to open up other processes and modify them means that, you know, there really is no real isolation among processes.



LEO:  Right.  Anish, writing from Google Mail, asks:  Is it possible to use the hosts file to redirect sites to display an image file, a JPG, for instance?  This would look nicer than the 404 errors in place of banners on websites.



STEVE:  I got a kick out of this because clearly he�s implemented the hosts file approach that we�ve talked about.  And now when he brings up...



LEO:  Get big red Xs everywhere.



STEVE:  Exactly.  And the answer is no.  It�s not possible.  There are alternative approaches.  There are various types of filters you could run...



LEO:  Well, wait a minute.  Now, if you � you�re redirecting it typically to localhost, 127.0.0.1.



STEVE:  Right.



LEO:  If you had a � you�d have to run a server.  But if you had � but it doesn�t have to be a fancy server.  If you had a minimal server running, it could take that and put up a default display, yes?



STEVE:  Well, the problem would be that it would have to be clever enough � I mean, yes, there are ways around this.  For example, that server would have to be clever enough to accept any request for an image of any name and return�something.



LEO:  Right.  No matter what it gets it always gives you a pretty picture of a sunset.



STEVE:  Right.



LEO:  So instead of red Xs you get a sunset.



STEVE:  Sized to fit the available space.



LEO:  Oh, good point.



STEVE:  Presumably.



LEO:  Yeah, it gets a little complicated.



STEVE:  It really does get complicated.  There are filters that can be run.  But just the hosts file itself, it�s just going to give you little red Xs.



LEO:  Scott Burr of Beaverton, Oregon, observes that:  For anyone � whoops, I lost it.  For anyone, like almost everyone � let me see if I can understand what he�s saying.  For anyone, like almost everyone, who has a lock, a key lock in a door for security, worrying about someone breaking into your computer system at home or your office becomes a secondary thought when they could break into your place and take it away with them easily.  I don�t understand what he�s saying here.  Let me...



STEVE:  Well, it�s sort...



LEO:  [Indiscernible] this?



STEVE:  Yeah.  Actually, this is what Scott wrote.  But I understood what he meant, and I liked it because it talks about the real difference with cyber crime versus physical crime.  I mean, we all know that...



LEO:  Oh, he�s saying you could take the hardware with them.



STEVE:  Yes.



LEO:  So who cares if you�ve got it secured?



STEVE:  Exactly.



LEO:  I get it.



STEVE:  Exactly.  And what Scott�s missing is the fact that it can be done over a great distance with relative anonymity and in the dead of night � well, okay, maybe not.  Or in the middle of the day, rather...



LEO:  In broad daylight.



STEVE:  At noon, exactly.  You know, it...



LEO:  That�s what�s scary.



STEVE:  That�s what�s really the difference.  I mean, we all have homes.  I�ve got a lock on my door.



LEO:  There�s no such thing as a secure home, period.



STEVE:  I�ve got glass windows.



LEO:  Right.



STEVE:  I mean, all you have to do is throw a brick through the window, and now you have gained entry.  So...



LEO:  It�d have to be a bunker.



STEVE:  Yes.  And the point is, I think, that we understand the limitations of physical security.  But in order for someone to be trying the front door or throwing bricks through windows, they�re physically exposed to capture.  They can be...



LEO:  Plus it�s a limited subset of the universe that can do�that.



STEVE:  Right, right.



LEO:  Your system could be broken into from anywhere in the�world.



STEVE:  And a potential intruder can be scanning vast numbers of systems.  It�d be like, you know, throwing bricks through everyone�s window...



LEO:  Right, right.



STEVE:  ...at the same time.



LEO:  Right.



STEVE:  You know, so I guess the point is that there really is a difference in the cyber aspect of this.  There was an interesting report in Government Computer News � I mentioned it to you last week when we were in Toronto, Leo � that terabytes of data have been downloaded from secure government networks by IPs in China.



LEO:  Yeah.



STEVE:  And then like � it�s like, okay, that sounds like a bad thing.



LEO:  Bad thing.



STEVE:  Well, you know, those people get to stay, you know, behind their wall and, you know, suck our networks dry.



LEO:  There�s every evidence that there�s vast schools of hackers in China.



STEVE:  Well, and apparently this notion of, you know, real cyber crime, cyber warfare teams being built...



LEO:  Yeah.  I think they�re being trained.



STEVE:  And apparently we�ve got some in this country, too.



LEO:  Yeah.  Right.  For them.  Against the Chinese.  You know, if I look at my logs, I mentioned to you the other day there�s lots of people from China trying to break into my system using SSH and other servers.  Always trying to crack it.  Always, constantly.



STEVE:  Yeah.



LEO:  Hundreds and hundreds of attempts, by hand, a day.



STEVE:  Yeah.



LEO:  Now, a good point to make in this, though, is if you have a laptop that you carry around, it�s a good idea maybe to secure the data on the laptop, if you have stuff that�s private in there.  I�m thinking the Veterans Administration specifically.  Or many corporations.



STEVE:  Right.  Well, and...



LEO:  If you�ve got important corporate data on your laptop, encrypt it.  Use TrueCrypt.



STEVE:  I was just going to say, yes, we�ve talked about TrueCrypt.  It�s a fantastic solution.  It just needs to be done.  And you keep seeing people losing laptops with unbelievable amounts of really important and private data.  And it�s just like, well, these tools are out there, they�re free, but we�re not using them.



LEO:  No.  So it�s true, if somebody gets your hard drive, you know, a lot of the so-called encryption techniques aren�t going to work very well.  TrueCrypt will, though.  There�s no way they can get your stuff if you�ve done a good job of your password.



STEVE:  Right.



LEO:  So do it.  Seems simple to me.  I don�t know whether you � Keith Rocheck of Cleveland, Ohio, says:  I don�t know whether you guys plan more coverage of firewalls and routers.  I was wondering what your opinion is about SmoothWall, as opposed to maybe a router you�d pick off the shelf at a computer store.  Patrick � SmoothWall, as you know, I�m sure, Steve, is a Linux firewall distribution.  Patrick loves SmoothWall.



STEVE:  Yep, SmoothWall.  And there�s also m0n0wall is very similar.  I liked the question because I want � and we�ve talked about it a couple times.  Certainly the advantage of pulling a router off the shelf at Fry�s or Target or wherever for $49 is that it�s, you know, it�s there, you plug it in, you snap your Ethernet connectors into it, and you�re done.  An alternative, though, that offers much greater power, is the idea of taking a retired computer, which, you know, a 486 or something old, slow, and pokey that you�re no longer using, and adding a second network card to it, or maybe even a third if you want to get some true DMZ protection.  And you can then download an ISO image of SmoothWall or m0n0wall, these are all open source and all free.  And you boot this CD and/or install it on a hard drive, if you want to go that route.  And, I mean, you�ve got a really full-featured solution.



LEO:  Yeah, I like it.  I mean, there are some limitations.  I mean, but I think in general � some of these, by the way, will run off firmware, don�t even need to run off a hard drive, so that you don�t have to have moving parts, it�ll be very quiet.



STEVE:  Right.



LEO:  But, well, I guess there is no really, you know, limitation.  You just have to be a geek and willing to put some time into it.



STEVE:  Yeah.  I mean, I think that�s exactly it.  If your  mode is not to play with this stuff, you just want solutions, then just buying the router appliance makes more sense.  But if you want to roll up your sleeves and have more control, have, like, a powerful firewall that does everything, you know, bandwidth rate limiting and quality of service and, you know, able to log into it remotely and do all kinds of things, you know, essentially something like SmoothWall or m0n0wall is a full Linux system in which you can run anything you want.



LEO:  Right.  People often used to ask us on The Screen Savers, my roommates use too much bandwidth.  How can I limit them?  SmoothWall is great.  You can run Squid or some proxy server on SmoothWall.  And, oh, you can just turn them right down.



STEVE:  Yup.



LEO:  Tim in the U.K. asks:  If I want to run a web server on the, quote, �host� PC on port 80, and a web server in a virtual machine also on port 80, which server will pick up the request?  Oh, that�s interesting.



STEVE:  Yeah.



LEO:  Will they be battling?  Is it possible even to do this, he wonders.



STEVE:  Okay.  No.  If you have two servers, normally what happens is a virtual machine that has networking capability is � there are several ways it can be set up.  One is that it�s got its own sort of local network, sort of a virtual local network within the machine, which allows the physical machine and a local machine to talk to each other.  So if you ran a server in the virtual machine, then from your host you could access the web browser on port 80 in the virtual machine, using the IP address of this little virtual network that�s all existing within the main host machine.  To put the virtual machine on an IP that�s externally accessible, then you have a collision.  It is not possible to run two TCP servers that are both listening to a given IP and port at the same time.  And there�s something � the way the API works, when you�re programming these, you say, okay, a certain process is going to be listening for incoming connections.  And once that�s been done, any other process that attempts to do so will return an error saying, you know, you can�t listen, there�s somebody already on this port listening for those connections.



So UDP is a little bit different.  There is a way to sort of share notices of packets coming in because UDP, as we�ve talked about, is not a connection between two endpoints, it�s just the flow of raw packets.  So it is possible for UDP services, multiple UDP services, to get notified of incoming packets, and then, you know, for them to figure out what they want to do about it.  But not in the case of a web server.  Only one application at a time can, like, terminate the endpoint and receive connections.



LEO:  I�ve actually, in a smaller way, seen this happen with Parallels on my Mac and a CD-ROM.



STEVE:  Ah.



LEO:  When you insert a CD-ROM, if Windows is foremost, Windows grabs the CD and autoruns it, and it�s not visible to the Mac, and vice versa.



STEVE:  Right.



LEO:  So I guess kind of the generalization is, I mean, unless you have something like UDP that�s specifically designed to be shared, in most cases one or the other�s going to get it.



STEVE:  Right.



LEO:  And keep it.  And that�s it.  That�s the whole story.



STEVE:  You know, Tim�s question was which server will pick up the requests.  Unless he goes to some substantial extent, the external, the server running in the host computer, the main machine...



LEO:  It gets priority.



STEVE:  Exactly.  It would be first in line.  And then, you know, if he had a different IP assigned to the virtual machine�s web server, then incoming data on that different IP would go to the virtual machine.  So...



LEO:  Right.  And I think some � I don�t know, but I would imagine some virtualization programs would allow you to pass the data along explicitly and say, you know, I�m running a web server, pass the port 80 stuff along.



STEVE:  But one of my projects, by next week�s podcast, is to nail down, I mean, I know VMware, the VMware Workstation quite well because I�ve used it a lot.  I�ve never messed with Virtual PC.  So I�m going to learn about Virtual PC, and we�ll have a real head-to-head comparison between these.



LEO:  I�m a big fan of this stuff now.  You�ve really won me�over.



STEVE:  Well, and Parallels...



LEO:  They�ve done a nice job.



STEVE:  They�ve done a great job.  And now that they�re supporting the virtual � the hardware virtualization technology, the Intel VT technology, over on the Mac side, you know, you�ve got Windows running at full speed on a Mac.



LEO:  I know, I love it.  Yeah, I just love it.  I�m really�� we�re looking � at Call For Help we�re looking at buying, instead of buying new PCs, buying new Mac Pros, which are very, very, very fast Macs, and running Windows and Mac on the � and using virtualization, whether it�s Parallels or VMware, on the same machine.  It�ll eliminate this whole need to switch from machine to machine.  It�s just all there.



STEVE:  Yeah.



LEO:  Chris Meisenzahl of Rochester, New York, is becoming more and more annoyed with ZoneAlarm.  And he blames you.  Well, I don�t know if he blames you, but I blame you because

wouldn�t have known about ZoneAlarm if it weren�t for you.  You were the one who told us all about it.



STEVE:  Yeah.



LEO:  Of course, we ever since have been telling the world about it.  He writes:  My question is regarding software firewalls.  I have two XP machines, one Home, one Pro, behind a Linksys NAT router.  In addition, I have long used the free ZoneAlarm, never had trouble with it, no malware, viruses, trojans, and so on.  I also have an iBook running Tiger.  But in the last few versions of ZoneAlarm they�ve just � it�s becoming larger and more resource intensive.  You�ve been saying that for a while.



STEVE:  Yup.



LEO:  I�m beginning to wonder if a third-party software firewall is superfluous, as long as I have a NAT router and the XP firewall, also running AVG Anti-Virus and Ad-Aware Spybot.  What is your stance on this?  Chris, I�m so glad you asked.  What is your stance on this, Steve?



STEVE:  Leo, do you run a software firewall?



LEO:  No.



STEVE:  I don�t either.



LEO:  No.



STEVE:  No.



LEO:  I say on the air all the time a NAT router is sufficient.  It�s not as capable as a software firewall, but on the other hand it doesn�t slow your machine down, it doesn�t add to the compatibility woes or the sometimes frustrating connectivity issues that a software firewall can cause.  And it gives you 90 percent of the protection.



STEVE:  Well, no force on earth could get me to plug one of my real main machines directly into the � onto the Internet without protection.  I mean, it�s just � it�s, you know, you  measure the lifetime of a computer hooked onto the Internet without some sort of protection in minutes.  I mean, it�s just � there�s just so much junk out there now.  And it�s the nature of this that there�s a chance we don�t know about attacks.  I mean, there are � we know that there are exploits, you know, these so-called �zero day� exploits, which are discovered when they�re being used, rather than�beforehand.



LEO:  Right.



STEVE:  So, I mean, I�m behind a NAT router for my entire network, and I have no firewalls on any machines.  And I�ve also never, ever had a problem.  You know, NAT really is super strong technology.  Now, my tech...



LEO:  We�ll talk a little bit later about Astaro, which is, you know, a more secure, a more advanced firewall.  But it�s the same idea.  I mean, it�s a hardware firewall as opposed to a software on your machine.



STEVE:  Well, in fact, I was going to refer to Astaro earlier with our prior question, the guy who was asking about SmoothWall, because Astaro is exactly that kind of...



LEO:  It�s a Linux distro, yeah.



STEVE:  Exactly.



LEO:  But so you�re not � so something like that is not the same thing as a software firewall.  You�re not saying use a NAT router instead of a hardware firewall.  A hardware firewall would be even better, yes?



STEVE:  Oh, I � yes.  And you certainly want to have that.  However, you know, when I�m roaming around the country, like coming up to Toronto, I�m absolutely behind XP�s software firewall when I don�t have my normal hardware firewall in front of me.  The...



LEO:  The advantage of XP�s firewall is it�s small, and it doesn�t slow it down.  So you get that protection without really compromising your system.



STEVE:  Right.  Well, and, I mean, the traditional personal firewalls � McAfee, Symantec, ZoneAlarm � they really have become huge and bloated.  I mean, yes, they do lots of things for you.  And I don�t want to suggest that people shouldn�t be using them if they�re comfortable with them.  I would suggest, though, that people should not be afraid not to have them if the firewall is, as is the case for Chris, who asked this question, if the firewall is becoming a problem.  I mean, you really don�t need it.



Now, that said, the thing that the firewall does is it gives you a notification of software in your computer, notification and control over software in your computer that might be phoning home behind your back.  You know, I mean, that�s the classic experience I had early on with a beta of ZoneAlarm that got me excited about the idea.  That is, you know, I discovered something in my machine I didn�t know I had.  So that...



LEO:  But that was a long time ago.



STEVE:  It was a long time ago.  And ZoneAlarm, it was version 2.6.



LEO:  A lot smaller, yes.



STEVE:  2.6 was the one I � that was, like, the sweet spot for ZoneAlarm.  And so I would recommend, I mean, if someone wants a firewall, look at Kerio.  The Kerio personal firewall is � if I were to use a firewall and install it on a machine that didn�t already have one, for example if I was using Windows 2000 and wanted a software firewall because I was going to have to be using that machine out from behind some sort of NAT protection, it�d be the Kerio firewall that I would install and use.



LEO:  Yeah.  Yeah, we�ve mentioned that before.



STEVE:  Yup.



LEO:  And it�s free, too, so.



STEVE:  Yup.



LEO:  It�s a very good, very good program.  Paul Sanza from Louisiana writes:  Whenever a new security issue is uncovered in XP, you can always find people complaining in forums and newsgroups that Microsoft can�t make a bug-free operating system.  This is generally followed by a round of Microsoft bashing, with some defenders chiming in.  I personally � says Paul, not me � feel that Windows XP or 2000/NT/ME/98/95 is just too big to be bug-free.  Well, that I�ll agree with.



STEVE:  Yup.



LEO:  And that newly discovered flaws should be expected.  Yeah, of course, everything has flaws.  My question is, what�s your view on this matter, Steve?  Do you feel that Microsoft is lax with their OSes, or that all those naysayers are expecting the impossible?



STEVE:  I think that Microsoft in this instance is just the big target.  I mean, they�re easy to pick on.  They, you know, everyone � well, not everyone, but a huge population of people on the Internet are using various versions of Windows.  Microsoft, or course, has the problem that flaws are being discovered in very old versions of Windows which Microsoft is no longer fixing.  So that�s a concern.  You know, we�ve seen that 95 and now 98 have gone past the horizon of critical security updates.  This was an issue that we saw at the beginning of this year with the Windows Metafile exploit, which Microsoft said we�re not going to fix in the older machines.  Turns out the older machines didn�t have this problem.  It occurred in Windows NT for the first time and moved forward.  But still, the point is that the older versions of Windows are not � are no longer going to be fixed for the critical security vulnerabilities.  It is the case, though, that Linux has problems, too.  And the Linux code base has tripled in size over the last few years as its popularity has grown and as all kinds of new features and capabilities have been added to it.



So, you know, if you look at any mature security list, you�ll see problems with Windows, and you�ll see problems with Linux, and with UNIX, and with OpenBSD and FreeBSD and all of these, you know, large and complex operating systems.  So it really � it isn�t correct, and I think therefore not fair, to single out Microsoft as being, you know, worse than any.  There have been policy problems with Microsoft, and I�ve, you know, we�ve talked about this often, the idea of running unnecessary services without a firewall on by default and giving those machines to na�ve users.  The advantage that UNIX and Linux has is that they generally have more sophisticated users who understand what it is that they�ve, you know, what kind of OS they�re sitting behind the wheel of.  Whereas Windows tends not to.  So, you know, the Service Pack 2 advancement in Windows XP that runs the firewall by default was a huge change and really made a difference for Windows security.



LEO:  Yeah.  But I have to say, and I don�t blame Microsoft at all, but it�s an old operating system now.  They made decisions, as you�ve pointed out, back when security was not as big an issue, that have resonated throughout ever since.  They can�t change it because of a legacy software that, you know, requires Windows to work in a certain way.



STEVE:  Well, they...



LEO:  It�s a very difficult thing for Microsoft.



STEVE:  Yeah.  They wrote code, I mean, a huge body of Windows code is this old code from before the dawn of security awareness at Microsoft.



LEO:  It�s not their fault.  Now, I do think that there is a bad � there is, frankly, some pretty bad programming.  I mean, the number of buffer overrun exploits in Windows is kind of staggering.



STEVE:  If there�s a buffer, it can probably be overrun.



LEO:  And I, you know, we won�t ever know.  But I think that there�s some culpability on Microsoft�s part for not having better coding policies.



STEVE:  Well, Mark Thompson told me something the other day.  We were talking about Vista�s virgin stack.  And he said, well, it�s not just the stack that�s virgin, you know, Vista is completely rewritten from scratch.



LEO:  Right.



STEVE:  And it�s like, ohhh, what?



LEO:  Well, but, you know, if, you know, for instance C#, Java, there are a great many more modern languages that are much more resistant to buffer overruns because they do range�checking.



STEVE:  Yup.



LEO:  And much of what Microsoft does is written in C++, which has no, you know, range checking.  You can use a string copy and not care where that data goes.



STEVE:  Yup.



LEO:  And apparently that happens a lot.  So it�s partly because they�re using an older language that doesn�t protect the programmers.  It�s probably more because they don�t have good policies.  I�m hoping, though, that when they start from scratch, that that�s one of the things they implement, that they � there must be a switch in the compiler that says, you know, range checking is required, is mandatory.  I would hope so.



STEVE:  Yeah.



LEO:  I mean, it�s possible programmatically to prevent many, many buffer overflows.  I think.  I mean, I may be wrong here, but...



STEVE:  Well, if you put enough encapsulation around the calls, you can do that.  The problem is that programmers don�t like to have those kinds of constraints on themselves because, I mean, and C is the classic, you know, pointer�land...



LEO:  You can do anything in C.



STEVE:  Exactly.



LEO:  You can write to any part of the memory, anywhere you want, anytime.



STEVE:  Right.



LEO:  And that�s why we like pointers.  Walli Fergus- and by the way, Assembly is even worse.  Walli Ferguson of Athens, Tennessee � which is what you use...



STEVE:  I know.



LEO:  ...is feeling a bit exasperated.  I�m exasperated, says Walli.  He writes:  I�ve experienced quite a few problems with hackers and Internet security, to the degree that I couldn�t even install and use McAfee and Norton.  One problem compounded upon another, creating a third.  I finally researched and cleaned my PC, finding among other things a rootkit.  Gosh, Walli, I hope you reinstalled Windows from scratch.  I don�t think cleaning is going to do�it.



STEVE:  Yeah.



LEO:  Authorities like Microsoft OneCare offer a solution for which I am appreciative.  Yet what can be done to prevent even their secondarily looking at my private files � oh, Walli.  Walli, your focus is wrong here, dude � such as Word documents and personal information.  This is not intended to sound accusatory, it�s just an afterthought, for an enterprising engineer might decide to covertly use Microsoft capabilities for personal gain.  He does raise a good point.  You have to trust the security software that you use not to be bad.



STEVE:  Yes.



LEO:  Have to trust somebody.



STEVE:  Well, you do.  And, you know, he�s sort of talking�about, well, what if, you know, Windows had a backdoor installed?



LEO:  Well, then you�re out of luck, dude.



STEVE:  Yeah.  Well, and, you know, and Microsoft is being sort of accused of this kind of behavior.  I mean, you know, even I, at the beginning of the year, looked at the Windows Metafile exploit and said, wait a minute, you know, this allows images to run code, and this wasn�t a mistake.  It was, you know, it was a bad idea.  We don�t know that it was a backdoor; but it was, you know, clearly a facility that appears to have been deliberately put into Windows for whatever reason.  And of course they�ve taken it out, and that�s a good thing.  So I don�t think Microsoft could survive a true, provable, you know, example of their code having a backdoor.  You know, there�s some strings in the network driver, I think it is, or somewhere, that talk about an NSA key.  And it just � it turns out that NSA is a � there�s, like, an acronym collision that�s got everyone freaked out that, you know, Microsoft has installed, you know, a key that belongs to the NSA so the NSA can access our computers behind our back.



LEO:  Bad choice of an acronym, that�s all.



STEVE:  No, no no no no no.



LEO:  All right.  You know, you have to � look.  You use an operating system, use any software, you�re kind of trusting the vendor.  That�s just the way it is.



STEVE:  Although, again, this is the point that you often make about open versus closed source.



LEO:  Ah, good point.



STEVE:  Because with an open source system...



LEO:  You don�t have to trust.  You can verify.



STEVE:  Yeah.  Now, most people don�t.  They, like, they don�t even compile the source themselves to binaries.  They just use the binaries.  But the idea is there�s many hundreds of eyeballs looking at this stuff and no, you know, no single Bill Gatesian sort of overlord that says, oh, let�s put a backdoor over here.



LEO:  Right, right, right.  The truth is, I think if you�re looking for security and, for instance, encryption, you�ve got to use open source software.  It�s the only way you can be sure encryption doesn�t have a backdoor.  But, you know, that�s my opinion.



STEVE:  Or trust the source.



LEO:  Or trust the source.



STEVE:  Or trust the Force, Luke.



LEO:  If you dare.



STEVE:  Yup.



LEO:  Steve, what a great round of questions.  Some great stuff.  Of course you continue to take questions.  What�s the best way people can ask you?



STEVE:  The best way is to go to GRC.com/securitynow.  At the bottom of that lengthening page, which I�m going to have to organize now that we�re, you know, we�ve got 56 episodes on it, at the very bottom of the page is a form that allows someone to just put a question in and press a button, and it comes to me.



LEO:  Great.  And maybe your question will be next in four episodes.  Next week, kind of a virtualization wrap-up?



STEVE:  Yup.



LEO:  And we�re going to take a look at maybe some of the stuff that Microsoft�s doing.



STEVE:  Some specific feature comparisons, you know, when � people are writing in, saying, okay, Microsoft�s Virtual PC is free.  The server version of VMware, and we got the player, and we got, you know, blah blah blah blah blah.  Which one should I use?



LEO:  Okay.



STEVE:  I�m going to attempt to answer that question.



LEO:  Fair enough.  The wonderful Steve Gibson.  Catch more of his stuff on his website, GRC.com.  And that�s where you�ll find the 16KB versions and the transcripts.  That�s also where you�ll find the wonderful SpinRite, everybody�s favorite hard disk maintenance and recovery utility.  It is the greatest.  But if you have any doubts, just visit the testimonial site, SpinRite.info, and you�ll see how many happy customers Steve has.  It�s a nice feeling.  Of�course...



STEVE:  Oh, I got, as I said at the top of the show, there was a neat note that I received.  It�s buried in my email right now, but I want to read it next week because it was just � it�s from a Security Now! listener who bought a copy just to support us, you know, which is like way above and beyond, and then needed it, and it really saved him.



LEO:  Good.  Really neat.  A nice story.  And we also want to thank Astaro because they are, of course, our sponsor on this show.  Astaro has been here since � they were one of our very earliest supporters.  And I just think they�re a great little company doing some great stuff.  If you�re looking for security, the Astaro Security Gateway line of network security appliances offers complete protection from network, web, and email security threats.  Astaro.com.  By the way, Astaro has an opportunity for everybody who listens.  They�re offering people who listen to Security Now! a free demo unit you could test to protect your network.  You just dial 877-427-8276, or visit Astaro.com, and you�ll get a free demo unit.  They will ship it to your business or office in one business day.  If you�re ready to step up to the next level of protection, 877-427-8276, or visit Astaro.com.



And we also welcome Visa, our newest sponsor.  You�ve heard the Visa commercial already.  You know, one of the things that�s good about Visa is they�re � and one of the reasons they want to be on Security Now! � is they�re promoting credit card security.  And I thought I�d just pass along real quickly from Visa a couple of points that they�ve asked us to put into the advertisements on the podcast for credit card security.  Now, I mean, I use a Visa because, you know, I know that, should anything go wrong, they stand behind it.  I don�t have to worry.  But there are some things you can do to protect yourself.  Sign the card, for instance, on the signature panel.  Choose a good secure PIN that�s secret and memorize it.  Don�t write it on the card.  I don�t need to tell the Security Now! audience that, I don�t think.  Check your online and paper statements immediately on receipt, or if possible monitor your account activity more frequently online.  I do that.  It�s nice to have the statement online now.  And of course keep your financial information secure, preventing access from even family members, friends, and neighbors.  It�s your stuff.  Keep it private.  And do shred everything before discarding.  You know, most identity theft occurs, not online, but from hard copy people are digging out of your trash.  Shred it.



STEVE:  Yup.



LEO:  And you don�t have to worry about it.  Safer, better money.  Life takes Visa.



Steve, we�ve wrapped up a great episode.  And I think it�s time to say goodnight.



STEVE:  Once again, 58 and counting � no, 56, 56 and counting.  57 is next week.



LEO:  Yup.  Steve Gibson from Irvine, Leo Laporte from Petaluma.  We say to you, thank you for joining us.  We�ll see you next Thursday on Security Now!.

 



Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#57

DATE:		September 14, 2006

TITLE:		Virtual PC versus VMware

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-057.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo wrap up their multi-week series about virtual machines and virtual machine technology by closely analyzing the differences and similarities between the free and commercial VM products offered by Microsoft and�VMware.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 57 for September 14, 2006:  Virtual PC.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com; and by Dell (for this week�s specials visit TWiT.tv/dell); and by Visa � safer, better money.  Life takes Visa.



All right, get your tinfoil hats out, everybody.  It�s time for Security Now!.  Protect yourself online.  And here he is, the king of the tinfoil hats, Mr. Steve Gibson.  Some people accuse you sometimes of that, of being too worried about security.  But that�s your job.



STEVE GIBSON:  Well, and we�ve talked about that, too.  The idea is, what we�re trying to do is not to tell people they need to worry, but to educate people about what there would be to worry about if they wanted to worry.  I mean, I�m not saying, oh...



LEO:  Okay, there is a distinction there.



STEVE:  You know, yeah.  I�m not saying, oh, no, the sky is falling.  I�m saying, okay, well, now, see that crack up there, you know, in the sky?  Well, keep your eye on that because, you know, if that crack gets any bigger, then maybe you do want to go indoors.



LEO:  That could be a problem down the road.



STEVE:  Yeah.  Well, and for example, you know, we talk about spyware.  People understand.  Some people aren�t victims of it; some people are, you know, repeatedly being buried by this stuff.  So, you know, so certainly there�s a wide spectrum of sentiment and of experience and exposure.  I mean, you know, this is a big planet, and all kinds of things going on.  So if nothing else, people being appraised of what�s happening, I think, is, you know, is our job.  And, you know, and certainly we have some obligation to put it into context.



For example, this is � we�re recording this just after Patch Tuesday, the second Tuesday of the month, where Microsoft releases their news of new problems.  And so, you know, there were a bunch.  Several are critical.  So if people aren�t running Windows Update, they might want to just go over to the Start menu and run it from there to download the latest updates to their copy of Windows and feel a little more secure.



LEO:  There was a serious Office problem this time out.



STEVE:  Yeah, and a couple older problems were revised with new critical ratings.  So, you know, there�s more to do.  Always more to do.



LEO:  Always more to do.  Well, let�s � one of the things we�ve been doing, and this is not really a scare story, this is actually kind of a happy story, is talking about virtualization technology.  And we�re going to get to our wrap-up of virtualization technology, cover kind of some of the things we haven�t mentioned yet.



But before we do, I do want to remind you that Visa is a sponsor this month on the TWiT network, and we really appreciate their support on all of the shows, including Security Now!.  As you know, Visa works very hard to keep your information safe and secure.  It�s one of the reasons they particularly wanted to be on your podcast, Steve.  They also remind all of you that, if you�re going to, I think just like Steve was just saying, you know, if you�ve got a credit card of any kind, you want to consider a few things to protect yourself.  For instance, pay attention to what�s going on with your Visa.  You want to go online and look at your statement, or look at your paper statement when it comes each month.  In fact, do it as often as you can to monitor transactions, make sure nothing unusual or out of the way is happening.  Do sign your Visa card on the signature panel.  Visa also says, if you choose a PIN for your Visa card, choose one that�s unique, secret, and don�t write it on anything.  Memorize your PIN.  And here�s an important one.  Keep financial information secure.  Don�t even let family members, friends, or neighbors see it. And shred it before discarding.  Most information doesn�t occur online, but in fact occurs in the real world from people finding your hard copy and using it.  Just some important security tips from the card I recommend you use online.  Safer, better money.  Life takes Visa.



Virtualization.  Do you want � should we redefine it, just so that people who�ve missed the last few podcasts know what we�re talking about?



STEVE:  Well, as I promised last week, and I think I even mentioned it the week before, one of the things that I wanted to do this week was to address Microsoft�s Virtual PC offerings, both their Virtual PC and their Virtual Server, because readers had written in saying, hey, you know, that�s free now.  How does it compare to the others?  So that�s going to be the main thrust.  And this is essentially our wrap-up of the whole virtual machine topic.  We got into this whole virtual machine issue sort of from the, well, directly from the security aspect because there are many useful applications for contemporary virtual machine technology.  And we�ve talked about VMware as being sort of, in many ways, the granddaddy, the heavyweight of virtualization.  And then, based on my survey of the industry, Sandboxie we talked about as a much lighter weight solution which allows you to create application sandbox to contain things you�re doing that may be dangerous and prevent them from making any permanent changes to your system.  Actually I got a very nice note from the author of Sandboxie, thanking us for our mention and being really pleased.  Apparently lots of people went over and are exploring, you know, that possibility.



LEO:  Oh, that�s great.



STEVE:  So just, you know, to give a brief, uh...



LEO:  Recap.



STEVE:  Recap.  That�s the word I was looking for.  A brief recap.  The whole concept is that machines are so powerful now, I mean, they actually have, you know, excess processing power that most of the time are not being used unless you�re really, you know, like compressing video or doing huge database sorts or something.  This excess capacity and the features in the hardware that enable the machine to emulate itself, you know, the idea being that you could open a window that looks like it�s its own machine booting, and into that window you can install another operating system.  So it�s an operating system literally running within an operating system, sort of nested that way.  And there are many applications for that.



One of the things that people are beginning to think about since Vista is on the horizon, Microsoft�s next-generation operating system, is, well, maybe using a virtual machine to install and just poke around at Vista, rather than, you know, committing major hardware or going through all the trouble of dual booting and so forth in order to have that sort of experience.  So there�s the idea of experimenting with operating systems by installing them within a virtual machine, where you�re not committed in any way to keep it.  It�s just a nice sort of experimenting containment.  And then there�s the security side because anything that�s done in the virtual machine stays in the virtual machine unless you deliberately take some action in order to make it permanent or, like, move a file that you downloaded from the virtual machine environment into your hosting environment.



LEO:  It�s kind of like Las Vegas.  What happens in the virtual machine, stays in the virtual machine.



STEVE:  Exactly.  That was the analogy I was drawing.  So what happened in the case of Microsoft is, it�s interesting because the two major heavyweight virtual machine technologies are VMware and what Microsoft now has called Virtual PC.  There are, as we�ve mentioned sort of glancingly before, there are other things.  There�s Xen; there�s something called QEMU; there�s Bochs; there�s, you know, many other projects which are sort of, you know, they�re often open source projects.  They�re over on SourceForge.  They�re typically a small team of people who are just sort of this is what they want to do, they want to experiment with emulating the Intel processor on other platforms.  And so there are processor emulations; there are, you know, various sorts of projects at various stages of completion.  But in my experience, they�re sort of niche-oriented solutions, whereas what VMware and what Microsoft now have with Virtual PC are much more mainstream.



VMware, as we�ve talked about before, it began life over on Linux back in the late �90s, I think 1997.  It began life over on Linux as a virtual machine technology that would allow Linux users to host Windows applications, that is, you know, so you might need one or two apps running Windows, but you�re a Linux guy.  So the idea was the very first, the very early VMware was to host Windows on Linux.



Well, similarly, the lineage of Microsoft�s Virtual PC, they actually bought all this technology in early 2003 from a company called Connectix.  Connectix had the same idea that VMware had, but over on the Mac, the idea being that Mac users might need one or two applications running under Windows that, I mean, like, that�s just causing them a problem.  And so the original Connectix virtual machine technology was Mac hosted, and the so-called �guest OS,� that is, the operating system that was running in the virtual machine, was Windows.  And it evolved VMware and the Connectix product, and they called theirs Virtual PC also because that�s what it was, it was a virtual PC running in a Mac.  They sort of evolved together over the years.



And it�s interesting, Microsoft�s statement at the time they bought Connectix was that they were acquiring the virtual machine technology from Connectix because they wanted to allow their legacy server customers to be able to run Windows NT apps in Server 2003.  So of course, you know, Microsoft Server 2003 was the major server evolution, sort of out of Windows XP, and also from Windows 2000 Server, then they went to 2003.  Well, in doing so they broke some aspects of compatibility with their even older legacy server platform, which was, of course, Windows NT, NT�4.  And so they recognized, well, we need to provide some sort of an operating solution, some sort of a bridge for customers who still have � and there are.  There are legacy applications that were originally written tightly to Windows NT, and they won�t run in the very recent Windows operating system.



LEO:  That kind of makes sense.  If you�re running something like this, you�re really down to the hardware.  And you probably make a lot of assumptions about what�s running.



STEVE:  Right.  Well, and remember, I mean, we�re talking, you know, NT is a long time back.  And it�s certainly the case that, you know, for example, customers may have a mission-critical application that, you know, that they�ve been using for 15 years, and the company that wrote it�s gone, I mean, you know, or is no longer moving it forward.  Yet, you know, they�re locked into this thing.  I mean, or it might not even have been a professional, formally published product.  It might have been, you know, internal corporate IT that wrote some custom application ware, and it�s just much easier for them to, like, not mess with it, you know, not have to move it off of NT because why would�they?



LEO:  Right.



STEVE:  So Microsoft needed some sort of a migration strategy.  So their reason, their stated reason for purchasing this virtualization technology from Connectix is they wanted to allow NT�4 to run inside a virtual machine on the new Windows Server 2003 in order to provide that sort of bridge.  So what�s really interesting is that, as Connectix�s � I guess that�s how you�d say that...



[Talking simultaneously]



STEVE:  As their offering evolved, they became very OS neutral.  They would � you could run Linux.  You could run, you know, like, you know, they supported a wide range of PC-hosted operating systems, essentially all of them, on their platform.  Well, as you might imagine, Microsoft�s not a big fan of people doing anything other than Windows.  So one of the things that happened, and it�s funny, as you track the evolution over time, Microsoft got it three years ago and moved it through a couple versions.  Well, each one is slower than the previous one.  And they�re becoming increasingly non-Windows OS friendly.  So that today, if you install Virtual PC, you know, it says, okay, what kind of Windows operating system do you want to run in this virtual machine that you�re going to create?  And then there is sort of a begrudging �Other� line at the bottom.  But, well, if you must run something else, you know, we really � oh, and we don�t support it, by the way.  But we do have this �Other� line that you could use.  Now, in fairness, this appears to be nothing really more than marketing because I found a great site, it�s VPC.visualwin.com.  You ought to pull it up right now, Leo, while we�re talking.  VPC.visualwin.com.



LEO:  You�re going to wait for me?



STEVE:  Well, no...



LEO:  I�ll do it.



STEVE:  It�s this amazing effort that a whole bunch of people have gone through to list the compatibility of OSes operating inside of Virtual PC.  Look at the list.  It�s 1,448 entries.



LEO:  Wow.



STEVE:  There�s stuff there I�ve never, I mean, most of the stuff there I�ve never heard of.



LEO:  Yeah.



STEVE:  Just wacky stuff.  I did notice that Astaro, the Astaro security products do run in Microsoft Virtual PCs.



LEO:  Oh, that�s...



STEVE:  So if somebody wanted to, you know, Astaro of course being one of our hosts...



LEO:  Sponsors.  And one of � and a great many Linuxes.  In fact, I would say a lot of these 1,400 are just Linux distros.



STEVE:  Actually, and I think that of course, well, I mean, we know that Windows runs in Microsoft�s Virtual PC.  They formally support it.  But, and so you�re right, most of these are Linuxes.  But, I mean, look at all the Linuxes.



LEO:  NetWare and NetBSD, BSD, Plan 9...



STEVE:  Yeah.



LEO:  Wow.



STEVE:  Now, it is interesting, too, because if people are interested in Virtual PC for the purpose of running Linux, there are little no�s in the columns.  I mean, mostly everything is yeses.  I would say, like, 95, 96 percent of these 1448 wacky versions of different OSes are yeses.  So clearly this shows us that this is a good emulation of a PC that OSes way beyond Windows are still able to run, much as they were before Microsoft acquired it.  So Microsoft has apparently done nothing obvious to hurt Virtual PC to make it non-Windows friendly.  However, you know, they are just not formally supporting it.



LEO:  Right.



STEVE:  So, but my point is that, if you � you might look at this list, this VPC.visualwin.com list, if you were interested in making sure that a specific OS that you wanted to host worked.  Now, all that said, I don�t think Virtual PC is probably the right answer.



LEO:  Aw, after all that.



STEVE:  After all that.  I mean, I wanted to cover it.  I told people I would take a good look at it and compare it to VMware.  Now, it�s got some benefits.  First of all, it�s a much smaller, lighter weight download and installation than VMware.  Virtual PC 2004, which is the current edition, is 18 megs.  Whereas, for example, VMware � and this is VMware Server, which is their free version.  Workstation is still � you have to pay for.  But the VMware Server, which is free, as is Virtual PC, is 145 megs.



LEO:  Wow.



STEVE:  So it�s much bigger.



LEO:  Wow, that�s 10 times bigger.



STEVE:  Well, and I had mentioned also, when we were talking about the VM, the free VMware Player, which is sort of a read-only version of VMware.  And I talked about how, you know, it really whacks your system.  I mean, it�s a substantial thing that you�re installing.  And, you know, virtual adapters appear in your network list of network adapters, I mean, it really gets into your system and sinks its teeth in.  So, and basically the player does that in a read-only fashion.  You�re essentially installing the whole VMware system, you just don�t have the ability to create virtual machines from scratch using that tool.  Whereas their VMware Server product does.



So back to Microsoft�s Virtual PC.  The thing that it lacks that is sort of the Achilles heel for many people is that it provides no USB support.  And I see people...



LEO:  Hmm, that is an Achilles heel, yeah.



STEVE:  It really is.  People are complaining about that all over the place.  I mean, it has a very nice, sort of a simplified user interface.  It supports internal networking.  You can run multiple virtual machines, and they�re able to talk to each other.  They can be behind a virtual NAT.  It�s got virtual DHCP for allowing these machines to acquire their own addresses.  Or remember that last, you know, our last Q&A, a listener asked, hey, if I wanted to run a virtual machine server, and I had a server running on my host, the external OS, and both were, like, web servers, who would get the web request?  Well, it is possible with all of these products to let the virtual machine have an IP that�s public, so different requests could go to the guest OSes running in the containers or to the hosting platform, depending upon what you want.  I mean, it�s got plenty of features.  One thing it does, which is fortunate, is it does support sound.  So it will emulate your sound, that is, Microsoft�s Virtual PC will emulate your soundcard.  But it does not support USB.



LEO:  That seems such a big deal, frankly.



STEVE:  Well, and what I really, I mean, the feeling that you get as you sort of look at this is that their virtual � they really did get this for the server side.  And, for example, the server side does not support sound because the presumption is, well, who needs sound in a server room?  You know, you�re running servers on big hardware in a datacenter somewhere, you don�t need things binking and bonking and, you know, Media Player support and so forth.



LEO:  Right, right.



STEVE:  So I think they must have � it sort of feels to me like Virtual PC is, well, we want this because maybe we want to compete with VMware over on, you know, on the desktop platform.  But you�re right, it seems � certainly one has to imagine, if Microsoft is going to move this forward, that USB support will be something they will immediately be�adding.



LEO:  Isn�t there some question about whether they�re going to move this forward, though?



STEVE:  There really is because they � we do know that what they bought from Connectix of course was originally Mac hosted.  And so, you know, you and I have talked about Virtual PC on the Mac.  For a long time, over on the G5 side, you know, the non-Intel, the earlier Macs, that was the way of running Windows on one of the Macs.  And many people did it.  It worked.  They installed Windows, and they were okay.  Well, Microsoft has said that�s the end of the line for that product.  Virtual...



LEO:  Right, they�re killing that one.  Yeah.



STEVE:  Well, and Virtual PC will not be ported over to the new Mac Intel Pro Duo platforms, you know, all this new generation of Intel-based Mac.  Which to me seems that it�s, well, it�s sort of like also I think they�ve abandoned IE on the Mac also, haven�t they.



LEO:  Yeah, yeah, yeah.



STEVE:  Yeah.  So...



LEO:  But that made sense because there was an equivalent.  I guess it�s the same for the Virtual PC.  There are better solutions.  There�s Parallels.  There will be VMware.



STEVE:  Well, exactly.  And we now know, as you said, that VMware is going to be moving over to the Mac, and that the virtual machines that are created over on the Intel side will be cross-platform compatible, so you�ll be able to, you know, install Windows XP in a virtual machine under VMware on top of a regular Intel Windows installation, and then just copy those virtual machine files over to the Mac and open, you know, like open exactly the same instance of Windows over there.  So it feels a bit like Microsoft doesn�t care that much.  Now, the other real problem, aside from no USB support, is it is clearly slower.  It used to be much speedier.  I see...



LEO:  That�s ironic because the hardware now is supporting it better.



STEVE:  Well, exactly.  The hardware provides, as we�ve talked about, much better virtual machine hardware-level support for doing these things.  Microsoft has apparently said that, well, we had to add all of our trustworthy computing platform technology, and that�s what slowed it down.  That�s like, ahhhh, okay.



LEO:  Ehhhh...



STEVE:  But I�ve got to say, I mean, side-by-side comparison, I�ve been using Virtual PC and VMware Server, that is, the free version of VMware, side by side.  It is clearly the case that VMware is faster.  There�s just, I mean, there�s like these long periods of time where nothing seems to be happening.  I mean, the installation of XP, which I did just yesterday, was like, okay, what is going on?  I mean, and this is on a dual Xeon, seriously strong machine, dual Xeon processor, you know, hyperthreaded, 2 gigs of RAM.  It�s like, whoa, I don�t know where it went.  But it was really, really slow.  So, however, VMware�s Server product, the free one, also does not support USB...



LEO:  What?



STEVE:  ...or sound.  Doesn�t even have sound.



LEO:  Well, that would kind of support what you�ve said, which is this is for a server.  And it�s...



STEVE:  Exactly.



LEO:  ...something you don�t need.



STEVE:  And just sort of in general.  Now, so Microsoft has their virtual server, I think their Virtual Server 2005 is their server sort of profiled VM solution, just as VMware has their VMware Server solution.  Neither have USB or sound support.  So the desktop solution � and so basically I�ve come back around to being glad that I originally bought and invested in the VMware Workstation solution because it offers strong USB support and sound.  I mean, it�s a complete desktop solution, but it�s not free.  So I guess that I�ve, you know, Virtual PC is, if someone wants to experiment with virtualization on their machine, it�s a smaller download, it does give you sound, does not support USB devices, and it�s got a performance problem.  It�s funny, too, because � it�s funny because I�m seeing people talking about using Virtual PC to host Vista.



LEO:  No.



STEVE:  Now, can you imagine?  I mean...



LEO:  Unless you have a lot of time, not recommended.



STEVE:  I mean, I gave a presentation on Sunday to the North Orange County Computer Club.  And the person who was presenting before me was showing, sort of giving the club a first look at Vista and talking about how people are really complaining about what a resource hog Vista is.  And in fact Jerry Pournelle�s current column talks about this.  And it�s not even clear that you can run it on a motherboard with integrated graphics.  Because, you know, I mean, you need some add-on monster, you know, graphics card with its own fans and...



LEO:  Well, you could run it.  You just couldn�t get the Aero Glass interface stuff.



STEVE:  Exactly.



LEO:  Yeah, you�d have to give up the interface.



STEVE:  I mean, it really is, I guess, very aggressive in terms of the resources it needs.  And so, you know, the notion of running it inside of Virtual PC, or even Windows XP itself is like, oh, is just dragging along.  It�s like, okay.  Well, I mean, for one thing, I don�t think that would be a fair � it would not be, would not give you a fair sense for what Vista was, running inside Virtual PC, because the container itself is much slower than the machine on which you�re running it natively.



LEO:  Right, right.



STEVE:  So, you know, so I wouldn�t � I would not recommend using Virtual PC to host, you know, a test install of Vista or, you know, you�ll be doing it for a week just to get Vista booted.



LEO:  You�ll say this is slow, this operating system�s too slow to use.



STEVE:  Yeah.



LEO:  Yeah.



STEVE:  So I really, I mean, Virtual PC is free.  You get what you pay for.  You get sound but no USB support.  It�s a smaller download.  It, I mean, it�s got a simple, nice, sort of comfortable user interface.  But, you know, and maybe, for example, for just browsing the web, certainly a web browser is not going to be, you know, super resource intensive.  On the other hand, we�ve got Sandboxie, which we talked about a couple episodes ago, which is an extremely nice, zero overhead containment for IE, Netscape, Mozilla, Opera, you know, any of the mainstream browsers.  It runs on all of them.  And so it�s a perfect solution if you just want to do, you know, safe Internet surfing.



LEO:  So really its only real advantage is it�s free.



STEVE:  Yes.  I would say certainly one of the applications people have for virtual machine technology is messing around with other OSes.  For example, I mean, Windows users, I mean, everything we�re talking about here is Windows hosted, so Windows users who want to experiment with Linux, who want to experiment with FreeBSD, you know, who don�t want to commit the hardware or dual boot or anything, but they�re just sort of curious.  Now, there�s a perfect solution because in those, you know, where you�re wanting to mess around with one of those OSes, oh, you could argue that USB and sound support are less important.  And certainly VMware formally supports the installation of Linuxes; whereas Virtual PC is arguably, you know, non-Windows hostile.  So I think that makes more sense over on that side.  So overall I would...



LEO:  Non-Windows hostile.



STEVE:  Yeah.  I would have to say that overall, you know, I looked at Microsoft�s Virtual PC offerings.  And I have to say, Leo, when I started off, I was already, you know, knowing I was going to be talking about this, I could hear myself saying, well, you know, Linux � I mean, you know, Linux.  You know, Leo...



LEO:  You can call me Linux if you want.



STEVE:  I�m just going to call you Linux now.  You know, Leo, I was sort of rehearsing saying, you know, everyone knows I�m no apologist for Microsoft, and I�m, you know, I take them to task when I feel that�s what they need.  But this Virtual PC is smaller, lighter, you know, just seems really nice.



LEO:  You didn�t have to rehearse that, actually.



STEVE:  No, I didn�t.  Because, you know, when I actually tried to use it and install XP, and it�s like, oh, my God...



LEO:  I think it�s just [indiscernible].  Really I think you hit the nail on the head.  It�s an old technology that they  bought and really haven�t kept up to date.  That�s all.



STEVE:  And it doesn�t have their real focus.



LEO:  Yeah.



STEVE:  And it�s free.  You know how, you know, it�s not like Microsoft is big on giving things away for free.  And�so...



LEO:  There�s a reason they�re giving it away.



STEVE:  Exactly.  And so you have to wonder if it�s like, well, you know, they really have this for server virtualization.  That�s where their focus is.  Or, as the guy � the Microsoft person originally said three years ago, we just got this because we wanted old NT stuff to be able to run on our latest platforms.



LEO:  That�s fair.



STEVE:  You know, that said, VMware has the free player, it�s got all those appliances...



LEO:  It�s really worth spending the money.  It�s not that expensive; and, boy, you get so much benefit.



STEVE:  Well, and certainly you can � in fact I�m sure the workstation has a free evaluation version that would allow you to play with the fully enhanced version, USB support, sound support, you know, explicit support for Linuxes and non-Windows OSes.



LEO:  Oh, yeah.  You can totally get a free serial number and try it out.  Absolutely, yeah.



STEVE:  Yup.  And they�ll be moving it over to the Mac, also.  So you�ve got that cross-platform transportability.  Overall, you know, I wanted to pursue, you know, what�s Microsoft got up their sleeve.  I�m back and happy with VMware, and everyone now knows why.



LEO:  You know, it was great that you mentioned that VMware will run Astaro because, as you said, Astaro has been our sponsor for some time.  And it just shows you,  it�s really�� it�s open source software based on Linux.  And that�s one of the reasons we like Astaro so much.  Astaro makes the Astaro Security Gateway line of network security appliances, offering complete protection from network, web, and email security threats.  I have one, and I love it, the 120.  Visit them on the web at Astaro.com.  But I also want to remember � remind, you know, rather, that for those of you listening to us, Astaro is offering a free demo unit to test to protect their network.  So call 877-427-8276, say you heard it on Security Now!, and you can have a free unit to test.  877-427-8276, or visit Astaro.com.  It�s a demo unit, of course.  Eventually you�ll have to give it back.  But it�s a great way to find out what Astaro�s Security Gateway can do for you.  They�ll ship it to your office or your business in a single business day.  Call 877-427-8476 and remember to mention Security Now!.



So you decided that really the best thing to do is stick with VMware.  Have you been using Parallels at all on your�Mac?



STEVE:  I have not.  I haven�t actually...



LEO:  I would love to get your impression of that.



STEVE:  Yup, and I do have it.  I upgraded it recently.  And so I do intend to.  At this point, is the beta for the support for the next generation of virtual machine...



LEO:  I think it�s still in beta.  I don�t think they�ve released it.



STEVE:  Okay.



LEO:  At least as we�re recording I don�t think they�ve released it yet.



STEVE:  Okay.



LEO:  They�re still in the �release candidate� stage.  But it�s pretty amazing.  It�s pretty impressive.



STEVE:  Well, it�ll be interesting to see whether the Mac version of VMware is for pay or is free.



LEO:  Yeah.  No, I don�t think they�ll give that away.  You think they will?  They might?



STEVE:  I don�t know.



LEO:  Wow, that would be very aggressive.



STEVE:  Yeah.  And I think you�re right.  I think it seems unlikely that they would because I would imagine that they are taking it seriously.  They really want to be VMware on the Mac, not just sort of something they happened to have lying around.



LEO:  Right.



STEVE:  Certainly it�s an investment for them to do this.  And I imagine they�ll go the full support route with all the features of the system, much as they have for their Workstation product.



LEO:  Well, and I think that they saw Parallels marching into their territory and said, no, wait, we do that.



STEVE:  Right.



LEO:  And I think they think they can do a better job.  And you know, I wouldn�t be surprised.  I certainly will look at it, and I know you will.  And even though this is our last of our series on virtualization, I have a feeling we might revisit it when VMware for the Mac comes out.



STEVE:  Oh...



LEO:  I�d love for you to do a virtualization on the Mac show.  You�ve got a Power � the new MacBook.



STEVE:  Yeah, I have no excuse.  I have no excuse not to.



LEO:  No excuse whatsoever not to.  I hear you got some pretty neat SpinRite mail the other day.  I wanted to ask you about that.



STEVE:  Well, yeah.  In fact, I mentioned it last week.  I couldn�t find this letter.  But the thing that made me think of it was that it was a Security Now! listener, well, he writes � the topic was �Another Save by SpinRite!�



LEO:  We love those letters.



STEVE:  And actually, Leo, I have to say, I don�t know what�s going on, but maybe hard disks are having more trouble in the last month.  But I�ve been getting a lot of mail from people who are finding real success with SpinRite.  And he says:  Dear Steve.  Please add my name to your long list of happy customers.  My laptop, which I need tomorrow to teach my anatomy and physiology class, would not boot up properly.  It took 20 minutes to get to my desktop, and everything I tried to do had three- or four-minute delay.  The computer was unusable.  I called Dell, and the tech walked me through the Dell diagnostics.  The hardware all passed, including the hard drive.  I was unable to use System Restore.  It crashed.  The next step was to reinstall XP, and of course all my programs.  Fortunately, my data was backed up mostly.  Still, I had hours and hours of drudgery before me.



Before taking that drastic measure, I thought I might try the SpinRite utility.  To be honest, I bought SpinRite as a way to thank you for your outstanding Security Now! podcast, which has brought me so much enjoyment.  I was afraid it would require more expertise than I had to run it.  But the program is very well designed � I�m not making this up, Leo�� the program is very well designed to guide the user through the necessary options.  I booted up from the SpinRite CD and went to the Recovery Choice No. 2.  Then I left it alone.  I came back later and saw one of the sectors was bad.  SpinRite chewed on it for a bit and then was finished.  I booted up without the CD, and Windows ran Checkdisk, and up came my log-in.



LEO:  Woohoo.



STEVE:  My laptop is now working perfectly.



LEO:  Oh, that�s a nice feeling.



STEVE:  He says:  When I took math in college, I learned that some theorem proofs are so beautiful, they are called �elegant.�  Well, SpinRite is an elegant utility.



LEO:  It is.  It is.



STEVE:  He says:  It sure saved me tonight.  Thank you so much for Security Now!, and thanks for SpinRite.  No one who owns a computer should be without it.  Sincerely, Russ�Palmeri.



LEO:  Thank you, Russ.



STEVE:  And I wrote back to Russ.  I said, would you mind if I use your name?  He says, I would be proud to have my name associated with SpinRite.  So...



LEO:  Oh, that�s nice.  Well, thank you, Russ.  I think that�s wonderful.  I mean, it�s kind of a neat story because he bought it just to support you, but ended up using it.  You don�t require that, by the way.



STEVE:  No.  No no no.  In fact...



LEO:  Only buy it if you need it.



STEVE:  And in fact the whole goal here of mentioning SpinRite in the podcast, I just � I want to plant the seed in people�s minds that, you know, when something happens, you know, consider SpinRite.  Think about it.  Because...



LEO:  When you need it.



STEVE:  ...you know, when you need it, it�s there.  I got another letter from someone who said that they had a Maxtor that had a problem.  They ran Maxtor�s own diagnostics that said, this is dead, return it to the factory.  But they had so much stuff on the drive not backed up that they said, uh, grabbed a copy of SpinRite, it fixed the drive.



LEO:  Wow, that�s pretty � we should probably say that, if the drive is physically damaged, nothing�s going to fix it.



STEVE:  That�s...



LEO:  But if the drive can be recovered, SpinRite can do it.



STEVE:  I think that�s exactly the case.  If anything can recover the data from the drive, SpinRite is the thing that�can.



LEO:  SpinRite.info for more of those testimonials.  And of course GRC.com is Steve�s site, if you want to get the show notes, the 16KB version of this show for the download impaired.  He also offers transcripts thanks to Elaine � a tip of the hat to Elaine � and a great discussion board where you can talk about security matters.  Not to mention a host of free security software.  GRC.com.



As long as you�re headed to the web, I encourage you to visit TWiT.tv.  In fact, go to our new Dell Picks page, TWiT.tv/dell.  We thank again Dell for being a great sponsor on the show and supporting us.  We have some picks that I�ve picked out.  I mention the 24-inch monitor because I know that, Steve, you love that monitor.  But there�s some great machines, as well.  And a laptop, a very slick-looking laptop, the XPS 1710.  And then for more practical people, the Dell XPS 410 computer, which can go from the Pentium D all the way up to a Core 2 Duo, so you get your choice of hardware.  It�s state-of-the-art technologies at a very affordable price.  As usual, Dell makes the best stuff.  Dell is online at our site.  In fact, we�d appreciate it if you�d show your support for TWiT by using that site when you go to Dell.  Just go to TWiT.tv/dell and click the links there.  Thanks for their support.



I think � are we done with virtualization?  Have we covered this in every possible aspect?



STEVE:  For now.  I think we�ve...



LEO:  For now.



STEVE:  For now.  We, you know, we have a great foundation now.  Listeners who have been following along since we opened the topic, you know, understand where the state of the art is today.  Certainly, as sandboxing technology evolves, as, for example, as VMware moves to the Mac, I imagine we�ll come back and touch on it many times in the future because it�s a very potent security and privacy application.  Remember, too, that not just for security, but there is a great concern that web browsing leaves traces, leaves footprints...



LEO:  Privacy, yes.



STEVE:  ...yes, on your machine.  So Sandboxie, again, is a beautiful, lightweight solution.  If you needed to do some use of somebody else�s, like use of the Internet on somebody else�s machine that you didn�t control, you really wanted to make sure you left no trace behind, you could quickly install Sandboxie on their machine.  It is a lightweight, small installation.  Then use the browser sandboxed, knowing that no changes to the registry, to the hard drive, or anywhere in their system will be permanent after you close that down.



LEO:  Yeah, yeah.



STEVE:  So, great solutions.  You know, we�ll certainly have virtual machine technology always sort of flying around here and touch on it when something happens.



LEO:  Very good.  I do thank you for all the work that you do, Steve, for us, and invite everybody to go to GRC.com and SpinRite.info to find out more.  And join us next week as we talk more about security.  Do you know yet what we�re going to talk about, or is it...



STEVE:  It�s going to be a surprise for everyone.



LEO:  A surprise for us all.  Get to work, Steve, and come up with a topic.  We�ll see you next Thursday and every Thursday.  We�re so glad you�ve joined us on Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#58

DATE:		September 21, 2006

TITLE:		Two New Critical Windows Problems

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-058.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss the breaking news of two new critical Windows problems:  A new vulnerability that is being actively exploited on the web to install malware into innocent users� machines � and a workaround that all Windows users can employ to protect themselves.  And a serious file-corruption bug Microsoft introduced into last month's security update that affects all Windows 2000 users.



INTRO:  Podcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 58 for September 21, 2006:  Security Alert!



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.  And by Visa.  Safer, better money.  Life takes Visa.



Welcome to Security Now!.  Leo Laporte here, and actually this is a kind of change of pace.  We�d already done, recorded a Security Now! when we learned of two serious security flaws.  So because we are, you know, a podcast, and willing and anxious to get this information to you as quickly as possible, we�ll put off our discussion of Parallels for next week and talk about the security flaws right now.  Steve Gibson, what�s going on?



STEVE GIBSON:  Well, hey, Leo.  The timing of our Thursday podcast coincides perfectly with two pieces of news that I think are both really important.  One is there�s a new, just recently discovered, zero-day exploit for Windows and IE which can affect people browsing the web.  And it turns out Microsoft made a mistake � and this is the second issue � Microsoft made a mistake in last month�s security updates.  One of their updates can cause, for Windows 2000 users, file corruption.  There�s a fix available on Microsoft�s site, but they don�t have the original patch fixed.  And so we�re going to talk about both of these things.



LEO:  Well, let�s start with the first one first because we have Eric Sites on the line.  He is Chief Technology Officer and VP of Research and Development at Sunbelt Software.  We�ve talked about Sunbelt Software before.  They�re the great guys...



STEVE:  Well, yeah.  In fact, you know, their Alex Eckelberry purchased our favorite firewall, our favorite personal firewall, Kerio, and sort of rescued it from oblivion.  And so we�ve talked about that on several�occasions.



LEO:  Welcome, Eric.  It�s good to have you.



ERIC SITES:  Ah, thank you, thank you.



LEO:  Eric was telling me that he flew to Czechoslovakia when they acquired Kerio Personal.  And they bought it because they were fans of it.  You like that firewall.



ERIC:  It�s a great firewall.  Lots of interesting features.  One of the only firewalls that has IPS/IDS built into it.  And then also the web filtering so you can, you know, get rid of advertisements, get rid of scripting, just by easy little checkbox.



LEO:  And I like the price.



ERIC:  The price is always good, yeah.



LEO:  So first let�s talk about this first exploit that Steve�s referring to.  In fact, I first learned of it when I got an email from a listener in Blackpool, England, who said Steve was right, turn off JavaScript.



ERIC:  Yeah.  That was initially the first way to deal with the known exploit that�s in the wild.  But we�ve since learned that you need to unregister the VGX DLL because you can still be � other exploits can be created that do not use�scripting.



LEO:  Okay.  We�ll talk about how to do that so that you can protect yourself.  But tell us, first of all, how did you uncover this?  Sunbelt was the first to find this flaw.



ERIC:  Yes.  You know, we have a lot of researchers who basically spend all of their days, you know, searching the web, revisiting old websites that we know of that are used to � that use scripts and things to push malware down on people, push all the bad stuff down to users� desktops when they�re just browsing the web.  And so we have some automated processes plus these manual processes.  And unfortunately the manual processes are still necessary.  So while one of the researchers was checking a list of these known websites, he came across these strange pop-ups that normally don�t exist when he goes to that website.  So he started investigating it more.  And it was actually several websites away from the original one he was on because they were using iframes, which is used a lot to direct you to another website that pulls down new data, and then to another website that pulls down other data.



LEO:  These iframes are little HTML frames within a page that actually are another page embedded within the page.



ERIC:  Exactly.  Exactly.



STEVE:  And 'i' stands for 'inline' frame.



ERIC:  Yes.  Yeah.  So, yeah, we tracked it down to the source.  And we�ve reported on this kit called the �Web Attacker Kit.�  There�s a Russian website you can go up to, you can buy this thing, and they offer, you know, tech support services, just like a real company, everything that a normal software company offers.



LEO:  It�s 20 bucks.



ERIC:  Yeah, 20 bucks.  And you give them your server credentials, and they install it for you and configure it for you.



LEO:  Oh, hey, that�s a deal.



ERIC:  Yeah.  And the basic idea is that they create a kit�that allows you to exploit the users that come to your�website.



LEO:  So it�s purchased by people who just want to distribute spyware mostly?



ERIC:  Spyware and adware, mostly adware because they want to get paid for the installation of that piece of software on these machines.  They�ll get a couple of cents for every person that comes by.  You know, and we�ve seen...



LEO:  Unbelievable.



ERIC:  Yeah, we�ve seen these guys very successful at it.  And what this kit does is it figures out what browser you�re using.  If it�s Firefox, there�s exploits in Firefox it knows about.  If it�s Internet Explorer, there�s exploits there.  And it figures out what version of the browser you have and then targets a specific exploit to that version.  Well, this new exploit works on XP SP2 with Internet Explorer and all the latest patches.  So...



LEO:  It works, as you point out, on - or actually it was your colleague, Alex, pointed out on the Sunbelt blog, it works no matter how patched your machine is.  I mean, if you�have...



ERIC:  Exactly.



LEO:  ...a completely up-to-date machine, it still works.



ERIC:  Yeah.  And this exploit actually also works all the way back to IE 5.0.



LEO:  Do we know if it works in IE 7?  We were talking about that earlier.



ERIC:  We are still testing that.  But there are some instances that it � if it�s running on Vista, it doesn�t.  If you�re running on regular XP SP2, we�re still looking into to track that down.



STEVE:  You know, Eric, I think I know the answer to this question.  But we�ve just been talking about this topic, so I�m just going to lead you into this.  When you guys are surfing the web and going to probably malicious sites and doing so, how do you guys protect yourselves from actually damaging the machines that are visiting?



ERIC:  Well, we use a product called VMware, which is...



LEO:  Boy, was that a softball question, Steve.  I�m ashamed of you.



STEVE:  Yup.  We�ve just been talking about virtual machine technology and how they can be used to really provide robust protection.  So you guys literally use VMware virtual machines, knowing that nothing that you do inside the machine can get out of there to infect your actual R&D and real research machines.



ERIC:  Yeah.  We have separate connections from our regular networks to these machines.  And then on top of those machines we use VMware plus firewalls.  One of the reason we use the firewall is for logging information to see what�s coming through the network at a connection level.  And then we use packet sniffers on top of that, and lots and lots of little tools.



LEO:  Would running a firewall have protected me against this VML exploit?



ERIC:  No.  Because it looks just like a normal Internet request.  And since that request is coming from Internet Explorer, the firewall, all it knows is that, oh, this looks like Internet Explorer downloading something new.



LEO:  It�s legitimate.  It�s a...



ERIC:  Yeah.



LEO:  Yeah.  Is it a graphic in the � VML�s a vector markup language.  It�s a vector graphic file; am I right?



ERIC:  Correct.



STEVE:  And have you gone in and looked at the code that is implementing this buffer overflow?



ERIC:  Yes, yes.  Well, there�s the exploit code, and then there�s the actual VGX DLL that has the bug in it.  So we�ve actually looked at both.  And the exploit code uses a technique which can read � once you�ve overwritten a buffer, and since this buffer is on the stack, you overwrite a lot of very important information that allows that new data to gain control of the executing program.  So it overwrites this really important information.  And then when the function call returns, then it can return to whatever code you�ve given it.



Now, there�s XP, sorry, IE6 SP2 has some things in it that are supposed to stop this.  But since this bug is on the stack, and the amount of information you give it kind of blows, what they call �blows the stack,� they overwrite this protection.  So there�s a couple of actual exploits out there that are on hacker websites, but currently they don�t have a reliable one that targets IE6 SP2.  So right now we�ve still only seen this exploit in the wild is the only one we�ve seen that actually has a true XP SP2, IE SP2�exploit.



STEVE:  Wow.  So it�s sort of advanced that technology, as�well.



ERIC:  Yeah.  The guys who make this Web Attacker Kit, I mean, that�s pretty much their lifeblood is to find new exploits or build new exploits so that they can, you know, sell their services to...



LEO:  Steve and I have talked about this before.  That�s what�s really changed, I think, in the hacker climate.  It�s no longer just for fun or to show off or for bragging rights.  There�s money to be made.



ERIC:  Exactly.  It�s very rare that we see that type of thing anymore.  I mean...



STEVE:  Now, you guys happened to discover this by going around to these sites.  We don�t know at this point how long this exploit has been in use.



ERIC:  Well, we�ve got, you know, as soon as we found this we started talking to the rest of the security community, the other security companies, antivirus companies, and guys who monitor these exploits, companies like iDefense, mostly that do just pure research.  And they�ve gone back through their logs and say that it�s probably been out there for about a week.  So it�s actually pretty new.  It�s not on that many websites.  But the number of websites that are using this exploit is pretty much growing very quickly.  A lot of security companies, like Sunbelt, have what are called �web spiders� that can go across the Internet and actually look for certain things.  So our spiders are going, looking for the websites that have this exploit on it.  Another company that are good friends of ours called Websense is doing the same thing.  They�re also, you know, sharing that information with the rest of the security community.  We know a few others...



LEO:  Do you have any idea of how many people use this Web Attacker Kit?



ERIC:  I know personally of over a thousand websites that are using this kit.



LEO:  What kinds of websites?



ERIC:  Oh, just all kinds of this � pretty much anything.  Most of it�s porn sites.  Some of it...



LEO:  They�ve got to put something up to get people to come to the site.



STEVE:  Well, and like how about fake freeware and shareware download sites?



ERIC:  Yeah, well, that and � mostly, though, it�s cracks or serial number sites.



LEO:  Oh.



ERIC:  Or what they call �warez sites.�



LEO:  Yeah.



ERIC:  And the problem is, it�s not the thousand websites we know of.  It�s all the other sites that use one of these iframes that communicate back to one of these sites.  So there�s, you know, that web is weaved very deep.  So there�s any number of websites you may go to, and it doesn�t actually have the exploit on it, but it points back to another website that does.



STEVE:  Right.



ERIC:  Now, there are many � well, the best way to protect yourself from this exploit right now � and the only way, since Microsoft hasn�t released a patch for it � is to unregister the vgx.dll, the DLL that has the bug in it that these guys are using to exploit your system.



STEVE:  Right.  We have complete instructions on our page, on the Security Now! page.  Along with each podcast we have a page of additional links and information.  And so I�ve got instructions there on that page for all of our listeners.  You can follow...



LEO:  It�s just � it�s a command line, is that it, just a simple command line?



ERIC:  Yeah, a very simple command line.



STEVE:  Yeah, it�s very simple.  You just cut it right off the page, drop it into the Run dialogue off of the Start button, and you get a little pop-up that confirms that the DLL has been unregistered.  You should then reboot your system to flush it out if it�s already been loaded by an instance of IE, which is probably unlikely, but it�s better to be safe than sorry.  And from that point on, your system is protected.



LEO:  Is there any side effect to doing this?  What am I going to lose?



ERIC:  There are a few websites that use VML.  There are some advertising websites that have little banners and things.  So if you go to, like, a news website, and it has a little banner, sometimes those banners will use VML to animate things.



LEO:  So I�m not going to see a bunch of ads, big deal.  I can live with that.



STEVE:  And Leo, the whole, you know, the whole vector graphics movement is � it�s relatively new technology for the web, so it�s very sparsely used.  I doubt that anybody who did this and unregistered this, essentially turning off the ability for their systems to render these vector images on the web, I don�t think anyone would notice any difference.  And certainly it makes sense to do this until Microsoft is able to catch up with their next, you know, their early October patch cycle.



LEO:  What kind of consequences could I expect if I don�t do this?  Let�s say I go to one of these bad sites that�s running Web Attacker.  What�s going to happen to me?



ERIC:  Well, here�s another interesting tidbit that�s not widely known, that since VML is kind of embedded into Internet Explorer, and email systems use Internet Explorer to display HTML pages, you can actually craft an HTML page with this VML exploit in it that does not use scripting, that bypasses your Outlook protections and will actually exploit Outlook also.  But right now it�s only certain versions of Outlook.



LEO:  And what happens after the exploit explodes?



ERIC:  Well, as soon as you look at that email, and you view it in the preview pane or open up that email, that exploit can download whatever it wants to your machine.



LEO:  So spyware, malware, trojans...



ERIC:  Spyware, keyloggers.  The first site we came across with this, in the morning it was only downloading one program, an adware called Virtumondo, which displays advertisements.  By the late afternoon it was downloading 50 other pieces of malware, which included keyloggers, tons of adware, all kinds of stuff.



LEO:  So what happens?  The community, the bad website community goes out and says, hey, we found a � we�ve got a great way to get your software.  Anybody want to buy some computers?  They do an auction or something and say � and that�s how they get all this new malware?  People say, oh, yeah, please put mine on there?



ERIC:  No, no.  There�s � all of the adware companies, they have services.  You go up, you sign up for the service and say, hey, I want to install your software on the people who come to my website.  And they give you some information that allows them to track how many people from your website install this stuff.



LEO:  So you�ll have a referrer code that they can then...



ERIC:  You have this code, or some other information.  And they basically � money automatically shows up in your account every month as...



LEO:  It�s tempting.



ERIC:  ...you install this stuff.



STEVE:  Leo?



LEO:  No, no, I�m not going to do it.  But it�s tempting.  Look.  This is an interesting debate, of course, is when do you reveal this publicly?  Microsoft would far prefer people don�t tell anybody about this.  And the security community, you know, is constantly debating whether to reveal these exploits or not.



ERIC:  Yeah.



LEO:  What process do you go through about revealing this?



ERIC:  Well, we have a pretty defined set of procedures that we look at when we come across things like this.  And usually those procedures come down to, you know, if it�s in the wild.  If it�s in the wild...



LEO:  Once it�s out there, you�ve got to tell the world.



STEVE:  I was just going to say, in this case, as a zero-day exploit, it�s, you know, there�s no reason not to immediately get the word out so you can start protecting�users.



ERIC:  Yeah.  I mean, you have to.  You have to contact the security companies.  You have to contact the AV companies so they can write signatures for these web pages.



LEO:  Do you call Microsoft, too?



ERIC:  Yes.  Yeah.  That�s about the first thing you do.  You always call the vendor, whoever makes that software that�s got the exploit on it, you talk to them and say, hey, you know, we�ve found this.  If it�s something that you haven�t seen in the wild, you go through a period of letting them fix this bug, however long it takes.



LEO:  Right, right.



ERIC:  Sometimes it may take a month, four months, five months, six months.  Hopefully...



LEO:  Sometimes longer.



ERIC:  ...by six months they get it fixed.



LEO:  I�ve talked to some guys at EI who have known about an exploit for a long time.  And eventually your patience wears thin, and you just feel like you have to tell the world.



ERIC:  Yeah.  I mean, sometimes that happens.  And their feeling on it � I�m not picking on EI, but other security researchers, a lot of usually the independent guys, they�ll release it just to get that vendor to fix that bug.



LEO:  Or just to get some notoriety.  I mean, if you�re a small guy, and you want to get a name for yourself, that�s one way to do it.



ERIC:  Yeah, yeah.  Unfortunately, that does happen.  But, you know, our procedures are, if it�s not in the wild you tell the vendor, let the vendor fix it, and you just keep checking with them and saying, hey, guys, you got it done yet?  Is it fixed?  You got it tested?



LEO:  When you called Microsoft yesterday, what was their�response?



ERIC:  They � usually don�t get a lot of response from Microsoft.  You basically get a lot of canned information that says, okay, we�re looking at it.



LEO:  Right.



ERIC:  And then usually they�ll start publishing this information through their normal channels so that everybody gets the information at the same time.  So they started doing that.  And now you�ve got a TechNet article out there that basically gives all the information that, you know, an IT company would need, the antivirus guys, other security companies like ourselves.



LEO:  Eric Sites is the VP of R&D at Sunbelt Software, sunbelt-software.com.  And of course we tell people to go there for the free Kerio Personal Firewall, a great firewall.  But we also thank you for giving us an update on this VML exploit, too, Eric.



ERIC:  You�re welcome.



STEVE:  Yeah, thanks so much, Eric.



ERIC:  You�re welcome.



LEO:  Take care.



ERIC:  Thank you.



LEO:  Thanks.  Now, that�s just Exploit No. 1, Steve Gibson.



STEVE:  Yes, it�s been a busy day.



LEO:  We ain�t done yet.  What...



STEVE:  Okay.  I want to � before we leave this, I want to make sure that people get basically the main headline takeaway issue, which is all versions of Windows using IE, you know, modern versions of IE 5 and 6, have in them a newly discovered buffer overrun which is being actively exploited, as we heard Eric explain, on the �Net to install, you know, all kinds of bad stuff.  Microsoft has said that, unless they change their mind and release a patch for this sooner, it�ll be part of the early October update cycle.  So, you know, three weeks from now, or almost four.  So in the meantime it is possible to just remove this VML-rendering capability by unregistering it from the system.  The system will then just sort of not know about this bad DLL where the exploit exists.  Your browser will lose the ability to render vector graphics.  But almost no one uses that now.  I mean, it�s not like you wouldn�t be able to show GIFs or JPGs.  They all still work just fine.  It�s only this special type of scalable line drawing, which is what is lost.



So on the Security Now! page we�ve got the specific information, a link to Microsoft�s Security Advisory, and a very clear explanation of how just to cut and copy this one line, drop it into your Run menu, executive it, you�ll get a little pop-up saying the DLL has been unregistered.  Then after you reboot your system you are completely protected from this.  And I really recommend everyone do this.  A month from now, and we�ll remind people, you�re going to want to reregister this after Microsoft has fixed it.  So you will restore the ability to render these vector graphics because ultimately in the future it may end up being used more.  But it�s almost not used at all today.



LEO:  But don�t run out and do it right away.  Wait till we tell you it�s safe to do so.



STEVE:  Exactly.



LEO:  So this second exploit is not nearly as much of a concern, in fact it�s no concern for XP users, but it is something to worry about for Windows 2000.



STEVE:  Well, and it freaked me out, Leo, because by pure coincidence � I don�t often update my main GRC servers because they�re working fine, they�re in a very secure and protected environment.  You know, I�m not there using a browser on the server or surfing around the �Net.  So the vulnerability window is much smaller, for example, for a typical server than it is for a user�s workstation where they are out there poking around.  But as it happened, I was and did completely bring, not the main GRC server, but another ancillary server, up to speed last week.  I�patched...



LEO:  Oh, you timed it so well, Steve.



STEVE:  Oh, my God.  I completely patched it.  Everything was fine.  Then I got wind of this second issue, which is as follows:  It turns out that the last month security update � this is the, I think it was August 8, it�s when Microsoft did, you know, their standard monthly update.  One of the patches � and again, we�ve got links and all the specific information on the Security Now! supplementary page for this Episode No. 58 of Security Now!.  One of their patches had a bug, as they call it a �regression bug,� where they broke�something...



LEO:  A regrettable bug.



STEVE:  Yeah.  They broke something that they were trying to fix.  And this was a kernel privilege escalation exploit which they were patching.  Well, it turns out that what they broke, only for Windows 2000, and only for NTFS, and only for compressed files, is any compressed file on NTFS, which actually is redundant because FAT32 doesn�t do, you know, that level of compression.



LEO:  Right, right.



STEVE:  If it�s updated or created or changed, and the file is larger than 4K, it can become corrupted.  So, I mean, it�s a serious problem.  It�s a file corruption bug which was intro...



LEO:  That�s a really bad bug.



STEVE:  It�s really bad.  And I got a kick out of, well, I got a sad kick out of Microsoft�s, like, what to do if you have this problem.  They say, well, restore from a backup prior to doing this.  It�s like, okay.



LEO:  Because you�ve lost all your data.  And so...



STEVE:  Yeah, because...



LEO:  ...might be a good idea to restore it.



STEVE:  Because it is capable of corrupting files under Windows 2000 which are compressed.  Now, for example, I deliberately will compress whole directories like my, you know, on my personal system, my source code directory is compressed because source code gets such a tremendous advantage from compression.  So it occupies much less space.



LEO:  Right.



STEVE:  So, okay.  So the way things stand at this point, Microsoft has just released a fix for the problem.  That is, there is a fix that can be easily installed.  I immediately did this over on the server because last week I, by updating myself to the most recent latest and greatest security, I introduced this vulnerability.  It does require a reboot.  I was trying to think whether it did or not.  Because I tried to install it a second time, and it knew that it had already been installed.  So there I did not require a reboot.  But anyone using Windows 2000, I strongly recommend you go to, again, to Security Now�s supplementary information page.  I�ve got all the details and links there.  You can install a patch for their patch which broke this problem.  And then they have not yet fixed the original patch from last month.  So you can fix this in the meantime.  And, you know, then this second really bad problem that only affects Windows 2000 users will be resolved.



LEO:  Wow.  Wow.  Well, I�m glad, you know, the beauty of podcasting is we�re very flexible.  And if there�s a need for an update, we will do it.  And that�s one of the reasons I like doing Security Now!.  And of course, if this had happened on a Tuesday, we�d do it on a Tuesday because it is that important.  We want to let you know.



STEVE:  Yup.



LEO:  We will defer our discussion of Parallels to next week.  We do thank you for listening.  We do remind you, of course, that the show notes are online at GRC.com.  And this is one where you do want to go to those show notes to get that command line that will unregister the VLW � or is it VWL?  I can never remember.



STEVE:  It�s actually � it�s vgx.dll.



LEO:  It�s the DLL that allows the vector library.



STEVE:  Yes.  You�re not able to delete it or rename it because Windows...



LEO:  You have to unregister it.



STEVE:  Yes.  Because Windows is watching for that and will�automatically replace it from its DLL cache.  So unregistering it and then rebooting your system, everybody listening to this who�s using Windows wants to do this as soon as they can because, you know, as Eric said, this thing is spreading like wildfire because it is a brand new exploit that allows anyone who�s innocently visiting a website or opening email to get themselves infected.



Now, it is worth mentioning something Eric didn�t mention and we didn�t bring up.  The exploit code does run within the privileges of the currently logged-in user.  So if you were a limited user, if you were not logged on as administrator, I mean, you still don�t want this thing in your system.  But it�s another demonstration of the benefit of not running as an administrator because, as we know, here we are, you know, bringing this news to our listeners immediately.  But �immediately� is a week after this has already been out in the wild.  No doubt tens of thousands of users have already been bitten by this who have been going to these websites, you know, just innocently browsing the �Net.  So even though we�re getting the information out immediately, had users not been running as administrators, if they�d been running as a limited user � and in fact I�m getting a lot of email from people who are saying, hey, you know, I�ve been trying that, and it�s not as bad as I thought it would be.  So it�s not really that burdensome.  And you would have always been more protected than you would be if you were running as an administrator.  So, you know, again, that�s always a good idea.  And it would have made you more safe.  Although still, you certainly don�t want to be browsing sites and letting anything crawl into your�machine.



I did really love it that � in fact, well, I did really love it that these guys are using VMware.  Wasn�t that perfect,�Leo?



LEO:  Yeah, yeah.



STEVE:  They�re using VMware in order to go to these places, knowing that the stuff will be contained within a virtual machine and not able to get out and infect their machines.



LEO:  Well, you said that.  You said that a lot of security companies did that.  And it makes sense.  Why should you, you know, risk your own hardware to test this stuff?  And that�s how you do it.



STEVE:  Right.



LEO:  Steve, we of course are sponsored today and every day, every week, by Astaro Corporation, makers of the Astaro Security Gateway line of network security appliances, complete protection from network, web, and email security threats, at Astaro.com.  A great opportunity for those of you who listen to Security Now!, Astaro is offering Security Now! listeners a free demo unit to test to protect your networks.  Call 877-427-8276.  Mention that you heard it on�Security Now!.  Or you can go to Astaro.com, and you�ll�get a free demo unit.  They�ll ship it to your business or office in one business day.  So, but do mention�Security Now! because we�d like to let them know that we�re glad they�re listening and sponsoring this show.  That�s Astaro.com.



Also a tip of the hat to Visa and Visa�s double layers, multiple layers of security, protecting your credit card.  Make sure you sign your card.  Choose a PIN that�s unique and secret.  Memorize it, don�t write it on the card.  And check your financial statements regularly.  Visa wants you to know that it�s safe to use your Visa online.  Safer, better money.  Life takes Visa.



And as long as I�m talking, let�s get one more mention in here for the TWiT Dell ads.  We�ve got a great Dell pick this week, a very affordable and I think a very good system, both laptops and desktops, at TWiT.tv/dell.  If you�re about to buy a new computer, check it out, TWiT.tv/dell.  And in fact, if you use that link to buy any Dell, we get credit.  And we appreciate it if you do that.  TWiT.tv/dell.  Thanks to all three for sponsoring Security Now!.



And thanks to you, Steve, we�re going to get this out quickly.  Probably take a little while to get the transcripts up because Elaine won�t have much time.  We�re recording this minutes before it actually goes live.



STEVE:  Right.



LEO:  But the transcripts will go out as soon as Elaine � thank you, Elaine, for an emergency job.  But the good news is you�ll have next week�s podcast early.  [It�s okay, guys, really.  I�ll be unregistering that DLL along with everyone else! � Elaine]



STEVE:  Yes, and I will mention for people, this is important enough that I�m going to be putting links to all of this information on the GRC.com homepage.



LEO:  Good.



STEVE:  So anybody who is, like, really in a hurry to get this, don�t even worry about navigating through Security Now!, just go to the homepage, GRC.com.  At the top of the page there will be a link to the Security Now! Episode 58 page that�s got all the information to allow people to protect themselves.  And I should also say, you know, certainly everyone listening to this knows people who they care about who are using Windows who are not listening to�this.



LEO:  Spread the word, yeah.



STEVE:  Please, yes, spread the word.  You can either give them the instructions yourself because it�s very easy to unregister this DLL, or you can certainly aim them at Security Now�s page, where I�ve got all the instructions written out.



LEO:  And of course that Windows 2000 file corruption bug, if you know friends who are running Windows 2000, you might tell them about that, too, before they corrupt their data.  Unfortunately, this is one thing that SpinRite cannot fix.  This is a file-level corruption, and SpinRite doesn�t deal with the file level.  It deals with the hard drive level.  But if there is ever a problem with your hard drive or a file recovery issue, there is no better software out there than SpinRite.  And get it at GRC.com or go to SpinRite.info for a list of wonderful testimonials of people who Steve has�saved.



STEVE:  I�ve been getting so much email from people, Leo.  It�s just � I just love it.



LEO:  Isn�t it nice?  I think sometimes � I�m not saying we don�t like to get paid.  But the acknowledgement really is, in many ways, the way we get paid.  It really is nice to know that you�re doing something that�s helping people.  It�s a great feeling.



STEVE:  Yup.



LEO:  Steve Gibson, thank you so much.  We thank also our guest, Eric Sites from the Sunbelt Software company, for being on the phone with us.  We don�t usually have guests on the show; but since you know these guys, and we could get them quickly on, it�s really nice to have them on.



STEVE:  Oh, and Eric was wonderful.



LEO:  Yeah.  He�s very knowledgeable.



STEVE:  Yeah, really, he was really good.



LEO:  Yeah.  And these were the guys who found it, so it�s always great to get them on.  I�m Leo Laporte.  We will see you next Thursday on Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#59

DATE:		September 28, 2006

Title:		Comparing 'Parallels' VMs

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-059.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Completing the topic of current virtual machine technology and products, Steve and Leo closely examine the commercial multiplatform virtual machine offerings from �Parallels,� comparing them to VMware and Virtual PC.  Steve also corrects an important incorrect statement he made the previous week about features missing from VMware�s free Server VM solution.



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 59 for September 28, 2006:  Parallels.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.  And by Visa:  Safer, better money.  Life takes Visa.



Welcome to Security Now!, Episode � I�m really confused.  I think this is 59.  It was going to be 58, but we deferred it.  Steve Gibson is on the line from Irvine.  Hi, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be back with you.



LEO:  So just a little, you know, behind the scenes here.  We had finished Episode 58.



STEVE:  We recorded it in the middle of last week, just...



LEO:  Right, and it was all about Parallels.  And you�re going to hear it in a minute.  But what happened was there was a big security breakout all of a sudden.



STEVE:  Right.



LEO:  And one of the advantages of doing the show the way we do it is that we can quickly change it.  So...



STEVE:  Yeah.  Well, and it was great, too, because, you know, essentially you and I were ahead of the curve on this.  In fact, I also jumped onto your KFI show on the weekend...



LEO:  And at that time there was very little coverage of it.



STEVE:  Exactly.  You commented at the time that, you know, it didn�t seem to have picked up nearly as much press as we would have expected.



LEO:  We�re talking about the Windows VLM � or VML flaw, which was a very serious flaw that allowed a malicious site using a kind of little-known graphics format called the Vector Markup Language format to infect any system arbitrarily, no matter how up-to-date its patches were.



STEVE:  Well, yes.  And you and I jumped on this because it had all the earmarks of something that was going to be just irresistible for the malicious hacker community.



LEO:  Well, it was already in the wild.  It was already on dozens of sites.



STEVE:  Well, actually, yes.  And it spread very quickly through the end of last week and early this week.  It did exactly as we predicted.  It appeared in mass emailings and spam.  You know, basically this has become a bit of a black industry now on the Internet where vulnerabilities, as I mentioned before, are sold as commodities because organized crime is getting involved and trying to get this stuff installed on people�s computers, you know, their malicious code.  So the one bit of news that occurred yesterday � actually day before yesterday � was Microsoft recognized the severity of the problem.  And we were talking about how people may need to wait as many as three weeks for the second Tuesday in October, October 10th, before the next monthly set of patches were rolled out.  But Microsoft decided this thing was too serious to wait, so they issued one of their rare out-of-order, or out-of-sequence, out-of-cycle updates.  So I just wanted to make sure that everyone listening had received the news that Windows Update is now carrying the fix for this, the official fix.



LEO:  Now, they�re not � it doesn�t look like they�re pushing it.  At least I haven�t � you have to go get it, don�t you, because I haven�t seen it yet.



STEVE:  Yeah, in fact, if you run Windows Update on your machine, you will get the update.  But I think it�s being moved out relatively slowly.  So I wanted to let people know, you know, our best advice a week ago was to unregister the DLL.  Applying this patch does not reregister it.  So the proper sequence would be to go to Windows Update � normally you�ve got an entry there in the menu above your Start button � run Windows Update, see that it�s got the � it�s giving you this updated vulnerability patch.  It will � it may require you to boot Windows.  I had to, but I�ve heard reports that other people do not.  It may be that XP doesn�t need to; and Windows 2000, which I�m using, does require a reboot.  So reboot if it asks you to, and then reregister the DLL.



One cool thing also has happened, and that is that a third party has come up with a � both their own patch, which we no longer need, but with a benign test page.  So what this allows people to do is to test that they are patched by displaying some Vector Markup Language rectangles, red rectangles, which won�t display at all if the DLL is still unregistered, which will crash your browser if you�re still vulnerable � but benignly crash your browser, it won�t hurt you in any way � or will display them if you are patched and the DLL is registered.  And I�ve got a link to that on the show notes from last week, the Episode 58 show notes, where we had the instructions for unregistering your DLL.



LEO:  There�s another interesting bit of information that we got.  I got a number of emails about this.  I think I forwarded them along to you.  I think the first one was from Ian Shane, who said that DEP, the Data Execution Prevention that�s built into the new Intel and AMD processors, prevented this exploit.



STEVE:  Well, yes.  There of course are two flavors of DEP.  There�s hardware and software DEP.  The newer processors support hardware execution prevention so that � and this is what we were talking about in our episode talking about buffer overruns.  Essentially, this buffer overrun is on the stack.  And so code is executing in the stack that should only be containing data.  Which means if Windows is told not to allow the stack to be executed or executable, it will raise an exception.  It�ll essentially detect that this is going on and say, hey, wait a minute, something�s fishy somewhere.  So both hardware and software DEP do catch, and did catch for some people, this VML exploit.  The earlier Windows Metafile exploit was not caught by software DEP, only by the more advanced and capable hardware DEP.



LEO:  Now, for hardware DEP to work, you have to have a processor that supports it, one with NX or XD capability.  I�guess...



STEVE:  Yes.



LEO:  ...one is AMD and one is Intel�s nomenclature for�this.



STEVE:  And certainly all new processors do that and will be doing that.



LEO:  Right.



STEVE:  The capability exists in Service Pack 2 of XP, although it�s not enabled by default because it does create some false-positive problems.  You�re able to enable it per process or sort of globally.  And normally it�s not on.  Some people who have turned it on have then dealt with, you know, needing to create exceptions...



LEO:  Right.



STEVE:  ...when it false-positives for them.  So, you know, it certainly is useful.  And for anyone who was using it already, they were always protected from any exploitation from this VML vulnerability.



LEO:  Isn�t that interesting.  It just � you open the System Properties control panel, and you click the Advanced tab.  You click the Performance button, and then there�s a tab on XP Service Pack 2 and later, says Data Execution Prevention.  By default it says turn it off for essential Windows programs and services only.  I take it I need to turn it on for all of them, then.



STEVE:  Yes, yes.



LEO:  Okay.  So I�m going to click that button right now and hope it doesn�t crash our recording.



STEVE:  Well, and of course the reason is that the way this all operates is that that DLL is loaded into the context of IE, and so it may be running with administrator privileges or as a limited-user privilege or whatever.  So you really want the most comprehensive protection you can get there.



LEO:  Right.  Well, that�s really good news.  And I think it was George Ou in the � the TechRepublic�s technical director who writes for a blog for ZDNet on security, a very good blog, I think it was the first to note this.  But it�s worth noting that it�s worth turning on DEP.  And certainly, if you buy new hardware, make sure you�ve got a processor that�s hardware DEP capable.



Well.  I think we did the right thing by breaking our format and getting to that story early.  But it does � did put off what we�re about to talk about, which is virtual machines.



STEVE:  Well, we thought we were going to be done with virtual machines, but we�re not.



LEO:  Okay.



STEVE:  Parallels.



LEO:  Oh, the new Parallels.



STEVE:  Well, I�ve drilled down completely into both the Mac and the Windows sides.



LEO:  Oh, good.



STEVE:  And, you know, because you had mentioned it�d be nice if, you know, I took a look at that sometime.



LEO:  Yeah.



STEVE:  And I thought, look, better now than later because...



LEO:  Good.



STEVE:  ...right now I have all this in my head.  I�ve got machines with known performance.  I�ve been comparing � well, and the good news is, Parallels outperforms everybody�else.



LEO:  Wow.



STEVE:  Yeah.  I mean...



LEO:  Okay.  Well, don�t tell me all the good news.  I want to hear...



STEVE:  No, no, no, I won�t.  Cool.  We�ll keep it fresh.



LEO:  All right.  Here we go.  Here we go.



STEVE:  And I want to � oh, and also, just so you know where we�re headed, I also want to talk a little bit about intellectual property and patents because it turns out a hunch I had paid off.  The reason that VMware has some features nobody else has is they locked it up...



LEO:  Yeah.



STEVE:  ...with intellectual property.



LEO:  Ah, very interesting.



STEVE:  And so, you know, I�m � as you know, I�m moderately hostile to the notion of the Patent Office giving away this property which is just engineering.



LEO:  Right.



STEVE:  So I thought it�d be fun to talk about that a little bit, too.



LEO:  Good.  Good.  And do you want to start with that, or do you want to just have that in the body of it, or do you have anything to catch up on or anything like that?



STEVE:  Nothing to catch up on.  So we�ll just say, you know, what are we talking about?



LEO:  Okay.  This is Security Now!, Episode 58, for September 21st.  And three, two, one.



[PREVIOUSLY RECORDED]



LEO LAPORTE:  Time to talk with our virtual security expert.  He�s not virtual, he�s real.  But he talks about virtual security and many other things.  Steve Gibson, hello.



STEVE GIBSON:  Hello, Leo.



LEO:  Actually, we are going to talk about virtual stuff�again.



STEVE:  Well, yes.  You know, it�s funny.  I thought I was�doing a wrap-up of the whole virtual machine topic last�week.



LEO:  In fact, you wanted me to name it �The Wrap-Up.�  And instead I named it Virtual PC because that�s what you talked about.  And I�m glad.



STEVE:  Yeah, well...



LEO:  Because there�s more to say.



STEVE:  Well, it�s interesting because you had mentioned that it would be nice if I sometime took a look at Parallels, which is the third, you know, major commercial virtual machine offering in the industry.  A bunch of people wrote in asking the same thing.  It�s like, gee, Steve, you know, now we know how Virtual PC and VMware compare, but what about Parallels?  You know, I mean, there it is.  And so I thought, you know, better now than later.  I�ve got machines with known performance, you know, memory and so forth, that I�ve been comparing the performance of the other guys with.  That�s, you know, that�s always a moving target.  That�s going to change in a couple of years.  So I won�t really have that reference.  I�ve got all of the specifics of this stuff in my head right now.  So, you know, better now than later, especially when people were saying, hey, you know, what about it?  And Parallels just came out with � they�re at Version 2.2.  They�re at the release candidate of 2.2 for their PC-side virtual machine platform, which achieves, like, sort of the last little bit of icing on the cake.  I mean, it�s some additional really nice features.  So I thought, okay, let�s just � we�ll do one more on looking at Parallels, what it offers, how it compares to the others, so that we�ve really got the topic covered, you know, as sort of a checkpoint at this point in time.



LEO:  You know, it�s funny, because I had never heard of Parallels.  I was very familiar with Virtual PC and VMware.  And I only heard about it as an alternative to run Windows on a Mac.  And so that�s pretty recent.  But they�re not new.  They�ve been around for a while, I gather.



STEVE:  Well, yes.  They have been around for a while.  In�fact...



LEO:  Where did they come from?



STEVE:  I don�t know what their lineage is.  One thing I want to say, though, before we get into this in more detail, is that some � and it�s significant.  I was talking about the differences between Virtual PC and VMware�s offerings, and about the VMware Server, which is free, and has been, I guess, only since August.  So this is a pretty recent development, that VMware Server has been made free.  Versus VMware Workstation, which is certainly not free.  VMware Workstation is $189.  So it�s, you know, it�s a substantial chunk, just shy of, you know, $200 for their traditional workstation platform.



Remember that I said last week that one of the major failings of Server was that it lacked both sound and USB support.  Well, that was wrong.  What happens is, when you initially create a VMware Server virtual machine, they offer you a bunch of sort of default I/O devices.  And in Workstation, because it has a workstation profile, that includes by default your sound and USB devices.  Well, they�re there in Server, but they�re not populated by default because the VMware Server product, which is the free one, is sort of more oriented towards servers where they assume you�re not going to be needing sound and be plugging USB things in all the time.



LEO:  That makes sense.



STEVE:  So it turns out that, when you�re creating the virtual machine over on the VMware server side, right then there�s a button below that says �Add,� which allows you to add other things in addition, for example, serial and parallel ports, additional hard drives, additional CD-ROMs and other stuff.  And you can add sound and USB at the same time.  So it really...



LEO:  Aha.



STEVE:  Yes.  So it really does, it makes the server, the free server offering from VMware substantially more appealing.  You don�t have to pay $189 over on the Workstation platform to get sound and USB support.  So I wanted to really clarify that mistake that I made in last week�s podcast because, you know, it means that the free version can be useful for people who do want and need sound and USB support.



LEO:  All right.  So that�s in Virtual PC, or...



STEVE:  No, no, that�s...



LEO:  Or, no, I�m sorry, VMware, the free version of VMware.



STEVE:  The so-called �Server� version.



LEO:  Okay.



STEVE:  So I decided, okay, let�s take a look at Parallels.  Well, Parallels is this, you know, is a completely separate offering from a company called Parallels.  And they�re, you know, they�re just www.parallels.com on the �Net.  They�ve got a workstation that is a PC workstation platform which, very much like VMware, is actively friendly to Linux.  Whereas we�ll remember that Microsoft�s Virtual PC offering is almost openly hostile to anything that is not Windows.  Which is, you know, not...



LEO:  It makes sense.  That�s their business.



STEVE:  It�s not � exactly.  It�s not surprising that that�s the case coming from Microsoft.  So VMware and Parallels are both absolutely happy and solicitous of installing non-Windows things.  They support every flavor of Linux you can imagine � FreeBSD, OS/2, Warp, Sun�s Solaris, I mean, virtually any � virtually � any operating system of a non-Windows nature, and of course all of the Windows platforms, as well.  So you really do have, you know, again, for people�who are interested in experimenting with other operating systems and using the virtual machine as a platform, that really makes sense.  Now, the offerings are not free.  They�re $49 for either the Mac version or the Intel P � sorry.  The Intel Mac version or the Intel PC version are $49.  So it�s about a quarter the cost, well, a�little more than a quarter of the cost of the VMware Workstation�version.



LEO:  I think they raised the price, by the way.  I think it�s now $79.  Let me go look.



STEVE:  Oh, really.



LEO:  Yeah, it was $49 in the pre-release, when you were � if you wanted to buy the Mac version before it was out officially.  But now it�s $79.99 for the Parallels Desktop for Mac.



STEVE:  Okay.



LEO:  Still a lot cheaper.  The PC version is $49.99.



STEVE:  Okay.  That�s correct.



LEO:  I don�t know why they charge more on the Mac side, but they do.



STEVE:  Well, probably because there�s less competition there.  And, you know, I mean...



LEO:  Yeah, and there�s a lot of desire.  It was, you know, it was pretty cheap.  I bought it in the pre-release.  And it was � I think it was then it was $49 or less.  Anyway, it�s worth 80 bucks, I think.  It�s a very good...



STEVE:  Well, what�s really interesting is performance.  It outperforms both of the other big guys.



LEO:  Really.



STEVE:  Parallels on an Intel PC platform for its $49, which has complete sound and USB support and everything else you want.  It is faster to install Windows, and Windows runs more smoothly in Parallels on APC than does VMware or Virtual PC from Microsoft.



LEO:  And you were testing the new 2.2 version, or the...



STEVE:  Yes.



LEO:  Okay.



STEVE:  Yes.  I was using the 2.2 version because it was at release candidate at this point, and I figured it was, you know, I mean, if I had a problem with it, that would be one thing.  But it ran smoothly, with no trouble at all.  Now, they also offer something that nobody else does, which is not free.  I think it�s another $49.  And they call it their Virtual Machine Compressor.



LEO:  Yeah.  I�ve seen that.  And I�m trying to think if I need it or not.



STEVE:  Well, it�s interesting.  It does a really good job over on a Windows side.  In fact, I was really impressed.  I should step back a minute and talk about something in all of these virtual machine products that we haven�t addressed before.  And that�s the notion of a fixed-size virtual disk versus an expandable or expanding one.  Because the virtual disk is hosted in the host machine�s file system, it looks just like, and it is, just another file.  Well, as we know, files are able to grow.  You know, actual physical hard disks can�t.  They�re whatever size they are.  But files in a file system are inherently able to grow.  So everybody � Parallels, VMware, and Microsoft�s Virtual PC � they�ve got this notion of you don�t have to preallocate a blob of space on your file system to represent the virtual disk if you don�t want to.  You can instead sort of decide, well, we�ll start at a gig, or whatever size, and as we need more, we�ll just allocate that space, growing the virtual disk on the�fly.



LEO:  Yeah, which I think is fantastic.  I mean...



STEVE:  Well, yes.



LEO:  ...it�s wonderful.



STEVE:  It�s fantastic, though there are some tradeoffs to this.  From a, you know, from my standpoint, you know, sort of an assembly-coding hardcore techie, the idea of doing that, and doing it efficiently, sort of makes my skin crawl�because...



LEO:  You mean wasted time resizing the disk and so forth,�or...



STEVE:  Well, and fragmentation because you�re going to be � inherently, any file which is growing in a file system that�s got other files growing, they generally end up running into each other.  And that�s where fragmentation comes from.  So what you�d optimally like to do would be, for example, to defragment your hosts file system to get all of its, you know, to get all of its files contiguous and compress them so that there�s no empty space in between files.  Then you�d create a virtual disk which is one single large contiguous piece of hard disk space in the hosts file system.  And that would tend to give you overall much better performance.  And in fact that�s exactly the way any of our paging files or our swap files operate.  They sit there and, I mean, they really want to be a fixed size.



Now, it is the case that Windows does sort of the same sort of thing with its paging file.  But everyone who knows how to optimize Windows performance deliberately keeps Windows from increasing and decreasing the size of its paging file.  You just always, when you�re setting up Windows, you set it to a fixed size, set the minimum and maximum size to the same value, so Windows is never able to change it.  And it does a substantially better job because it�s not then � the paging file is not then mixing itself in with all the other files on the file system.



LEO:  Now, can�t you also do that with these virtual machines?  Can�t you say I don�t want a growing-size disk?  I want a static-size disk?



STEVE:  Exactly.  And in fact, so I wanted to talk about this dynamic or growing option and explain that, in fact, the intuition about this sort of being a performance hit is exactly on the money.  They all say you can use a dynamic-size disk, but it will give you lower performance than laying out fixed-size disk from the beginning.  And there are substantial optimizations that the virtual machine can do.  And if it knows that this disk is not going to be changing size, it�s able to, like, predetermine where the pieces are and make its accesses into the file system substantially faster.



LEO:  So it�s not merely defragment � or fragmentation that�s the issue.  It�s just inherently inefficient.



STEVE:  Yes.  It�s a convenience that comes at a cost.��So...



LEO:  Now, did you benchmark the two different ways of doing it?  I mean, does it in fact hit the speed?



STEVE:  Yes.  I didn�t benchmark to the degree that I have an exact number, like in terms of relative performance.  But you can feel that things are slower, especially on a system that has, you know, less than RAID-5 screaming SATA drives.  I mean, you can see more disk performance, and it�s clearly slower.  But all of this comes back to this compressor program, which is interesting, from Parallels because it will compress to varying degrees any of the virtual machines of any of these manufacturers.  It will work with Microsoft�s Virtual PC and VMware�s products, as well as their own.  And the results are very impressive.



For example, I set up over on my Intel platform, a standard PC, I set up a 4-gig fixed partition in which I installed Windows XP, did all the security updates, you know, registered it with Microsoft, got it all up and going, you know, and all tuned up.  Then you can convert, with Parallels, you�re able to convert a static image into one of these dynamic images and back and forth.  So...



LEO:  Oh, that�s nice.



STEVE:  It really is nice.  One of the things � one of the reasons you do that is, if you want to compact this, for example, to make it more portable, the dynamic disks naturally compact a great deal more because they�re not establishing, for example in this case, a 4-gig footprint that says, okay, I am, you know, this 4 gigs is all of my virtual disk.



LEO:  There�s lots of slack space in there that�s not used, so you just take that out.



STEVE:  Well, exactly.  And in fact, you know, people are used to laying up, you know, 80-, 100-, 120-gig drives and installing XP into it.  I�m, you know, being old-fashioned and remembering the days when we had, you know, 20-megabyte drives, I�ll often create a 4-gig partition to hold XP and then move all of the media files or other stuff I�m doing into its own partition so that I�m able to make reasonable-size backups or images of just the XP partition.



So in this case I created a 4-gig partition and installed XP�into it, a 4-gig Parallels partition, converting it from a static drive to a Parallels dynamic drive, you know, the variable sizing drive, brought that 4 gigs � it was actually�4096 megabytes, you know, binary megabytes � brought it down to 2406.  Then, running their compressor on it brought it down to 1028 megs, so just over 1 gig.  And then what�s�very...



LEO:  Wow.



STEVE:  Yeah.  I mean, a very, very huge reduction.



LEO:  Is it actually compressing, like ZIP would compress,�or...



STEVE:  No.  I mean, what it does is it sort of � it squeezes out the air from the file, but it�s still completely usable.  You�re able to use it.  You�re able to mount it and boot it.  What�s very cool is then, exiting from the virtual machine, that is, shutting it down and zipping it, which, you know, basically containerizes it, of course, brought it down to 417 megs.  So almost...



LEO:  Whoa.



STEVE:  Yeah, almost...



LEO:  That�s a tenth the size.



STEVE:  It�s a tenth the size of what it originally was.��And...



LEO:  Now, you wouldn�t leave it like that, would you?  I mean, you�d...



STEVE:  Well, you couldn�t use it like that.



LEO:  Yeah.



STEVE:  But you can transport it.  And that�s what I...



LEO:  I�m really interested in that because I just got a new Mac Pro, and I want to move my Parallels over to the Mac Pro so I wouldn�t have to...



STEVE:  Yes.



LEO:  And I made a 10-gigabyte Parallels.  So I would like to just compress the heck out of it.  That�s great.



STEVE:  Yes.  And so...



LEO:  But is it worth 50 bucks to do that?  I mean...



STEVE:  Now, well, first of all, you got a free demo.  So you�re able to give it a try...



LEO:  Could just do it once, yeah.



STEVE:  ...and, exactly, see what, you know, essentially what exact operation you get from it.  It�s also the case that zipping even the non-compressed one certainly did reduce it in size.  I didn�t write down the number, although I did that experiment, and it brought it way down.



LEO:  You�d expect it to because it knows about, you know, a string of zeroes, you know, empty space, and it would compress that very efficiently.



STEVE:  Exactly.  Although I�ve got to say that what their compressor does, and the reason it�s cross-platform, that is, the reason it�s able to compress a VMware and a Virtual PC � and I watched it carefully as it was operating.  And it�s got a ton of features.  It looks like an ISO.  It is an�ISO.



LEO:  Oh, it�s an image file, sure.



STEVE:  It�s a CD image.  So you � and you�re able...



LEO:  See, now, if you can get it that small, you might even be able to burn it to a CD.



STEVE:  Well, 417 megs fits on just, I mean...



LEO:  Perfect.



STEVE:  ...a standard CD.



LEO:  Perfect.



STEVE:  And you could imagine installing a bunch of more applications.  I mean, now, this was a recently installed and set up XP that didn�t have Office installed and, you know, all the apps and other stuff.  Certainly that would tend to make the resulting compressed one substantially bigger.  But, you know, here we are, I mean, it was a fully finished, configured, fully updated XP at 417 meg.  And Parallels itself is not very big.  You could put this and Parallels and your registration information on a CD, or even on a 512-meg dongle, and have basically a portable, installable, running Windows XP that you�re able to put wherever you are.



LEO:  Now, the compressor is Windows and Linux only.  But I could run it on � I could take my little thing and put it on my Linux machine and compress it there.



STEVE:  There also.  Now, but getting back to what it does is, it�s very interesting.  It is � it mounts as an ISO, so�that�s how it�s able to get into any of these virtual machines.  They�re all able to mount images that appear�as...



LEO:  They look like CD-ROMs, yeah.



STEVE:  Exactly.  They appear as a CD-ROM.  And then it executes as a CD-ROM, even though it�s actually just an image file, an ISO image of a CD-ROM.



LEO:  That�s how I installed Windows in Parallels.  For some reason it couldn�t read my disk, but I just made an ISO of the disk, and it installed from that ISO very, very nicely.



STEVE:  You just mounted the ISO.



LEO:  Yeah, yeah.



STEVE:  So what this thing does is it knows all about ways that Windows wastes space.  It knows about, you know, downloaded stuff you no longer need.  It knows about your temporary Internet folders.  It knows about your Windows temporary space.  It knows about, you know, all kinds of things.  It even does some registry compaction.  It really knows about what Windows is doing and, I mean, just squeezes it to pieces so that it�s substantially smaller than it was�before.



LEO:  Very cool.  Now, let me ask you a question.  And you�may not know the answer to this.  But this really has been bugging me.  If I authenticate Windows in this virtual�machine...



STEVE:  Ha ha ha.



LEO:  You know where I�m going.



STEVE:  Yep, yep, yep.



LEO:  And then I move it over to another machine, is the virtual machine the same?  Does it look the same to Microsoft?  Or is it a new machine?



STEVE:  It�s the same.  So I was wondering...



LEO:  Oh, wow.



STEVE:  Yep, I was wondering the same thing myself.  And in�fact...



LEO:  This is great.



STEVE:  It really is nice.  I mean, you know, you�re the owner.  You�re the user.  It�s your licensed copy of Windows.  Why shouldn�t you be able to run that one?  It�s not like you�re running, you know...



LEO:  No, but it means, for instance, I can move it to � I have it on my laptop.  I could put it on my desktop, and I can run it there.  I don�t have to reauthenticate.  And if I trash it, I throw it out, and I have another duplicate copy, now only 400 megabytes, and I restore it from that, and I�m back to where I was with no authentication involved.



STEVE:  Yup.



LEO:  No Windows Genuine Advantage bogosity.  It�s, oh, it�s�great.



STEVE:  It�s really interesting, too, because XP bit me very early on.  One of the things that I have always enjoyed doing, actually before I started using VMware Workstation as much, is I would create one install, for example, of Windows 2000, and make an image of it.  Then, using Partition Magic, I�d chop a big drive up into multiple, you know, 4-gig partitions, maybe have 20 of them.  And then I would un-image my image into each of those partitions, creating basically, you know, little clone 4-gig bootable Windows 2000 installations, and then I would boot them in turn and install different software.  For example, this is the way I used to be testing firewalls and things.



LEO:  Perfect.



STEVE:  Well...



LEO:  Because they�re completely intact, and you don�t � they�re identical.



STEVE:  Exactly.



LEO:  And you could start over at any point with an identical system.



STEVE:  Exactly.  Well, Windows XP immediately put a halt to�that.



LEO:  Oh.



STEVE:  The moment, you know, I did the whole thing, I unpacked it into a new partition.  It said, wait a minute.  This is a new world.  I need to reauthenticate.



LEO:  Right.  Every time.



STEVE:  And it�s like, ooh.  Well, packaging them in virtual machines avoids that problem.



LEO:  So the MAC address is the same.  All the hardware looks the same, and it�s very generic.  That�s another advantage.  You mentioned this earlier that, you know, you don�t have ever hardware compatibility issues because it�s all very generic.



STEVE:  Well, and it�s absolutely true that using this kind�of virtualization hides, I mean, it hides it perfectly�from...



LEO:  It must have a MAC address.  It must have a common MAC address, then.



STEVE:  Well, actually it�s got a completely virtual adapter, which is not even the same make or model...



LEO:  Right.



STEVE:  ...as any of your external adapters.



LEO:  Right, right.



STEVE:  So it is absolutely creating an adapter.  And, you know, I�m sure this is a benefit which is not often spoken of and advertised.



LEO:  No.



STEVE:  But it�s very convenient.



LEO:  Yeah.



STEVE:  You know...



LEO:  It would be great for me.  I mean, I bought � I went out and bought a full-bore copy of Windows for 300 bucks.  I�d like to be able to install it in a virtual machine on two different machines.  I�m never going to use it at the same time.



STEVE:  Right.  And there�s only one of you.



LEO:  There�s only one of me.  It�s the same copy of Windows.  I�m not...



STEVE:  Yup.



LEO:  ...giving it to anybody.  This would be a great convenience.  I haven�t yet taken the Mac Pro out of the box.  But I will do some benchmarks before next week.



STEVE:  Well, and...



LEO:  Because this is a quad processor, you know, it�s a�Woodcrest...



STEVE:  Ooooh.



LEO:  It should run very nicely.  And I got 4 gigs of RAM, so I�ll be able to allocate a full gig or more to Windows.  And so...



STEVE:  Well, that�s a very good point, too.  I want to make sure people understand that � we�ve been talking about virtual machines.  I haven�t talked about their consumption of resources explicitly.  But all of this virtual machine stuff is extremely resource hungry.  Basically, when you�re running a virtual machine, you are taking a chunk of RAM from your main machine.  And we all know our main machines need all the RAM they�ve got.  You�re taking a chunk of RAM completely away from your host machine and giving it to the virtual machine.  So it�s very much the case that, you know, these are RAM-hungry games that we�re playing.



LEO:  Oh, yes.



STEVE:  And so, yeah, 4 gigs, I mean, you know, it�s a good thing that the RAM cost has come down as much as it has because, you know, for people who want to really play with virtual machine technology, RAM is the asset which is most quickly consumed.



LEO:  I can�t say what it�s like on Windows; but on a Mac running Intel, 2 gigs is the minimum.  You need a gig for the Mac OS and a gig for the Windows OS.



STEVE:  Right.



LEO:  And actually you end up allocating maybe something more like 900-some megabytes to the Windows OS.  But it runs very nicely when you have that much RAM.



STEVE:  Well, let me tell you.  We�ll remember that, when I got this MacBook Pro, I immediately thought, well, what am I going to do with a Mac, aside from using it for the intended purpose, which was to do some iChat.  So I immediately installed Boot Camp, chopped the drive in half � remember, it was an 80-gig drive.  I chopped it into two 40-gig partitions.  Wait a minute, no.  I think I initially...



LEO:  I think 10 is the default, so you might have done 10 and 70.



STEVE:  Yeah.  Well, no.  I�m sure I did at least 40.  I was thinking maybe I gave Windows even more than half.  Because I thought, I�m never going to use this Mac.



LEO:  Oh, you bigot, you.



STEVE:  So I set up Boot Camp, installed XP, you know, used it, got a feel for it.  And as I began to be more familiar with the Mac, I would kill off Windows and move the partition further and further over so that, you know, Windows was getting less and less memory, until finally it�s gone completely.  There�s no more Boot Camp.  Mac has...



LEO:  But with Parallels you can still run Windows.  You can use the Mac, and whenever you need Windows it�s there.  I mean, I...



STEVE:  Well, that�s where I�m heading with this, Leo.



LEO:  Yeah.



STEVE:  I can tell you now that there is no perceptible�difference...



LEO:  Wow.



STEVE:  ...in � I mean none � in running Windows XP under Parallels in a virtual machine, especially if you go full screen.  I mean, even if you window the Windows in the Mac screen, it still is incredibly smooth.  It is better on this Mac Pro actually than it is over on my PC, that is, Parallels is, although the PC only has a gig of memory, and it�s got a 2-gig processor, so it�s not the Pro Duo, you know, triple-scoop machine that the Mac Pro has.  But it is�� if you window it, there is � I can tell no difference between it and when I was booting Windows XP natively through Boot Camp.  It is an absolute solution � that is, Parallels is � for people with a strong MacBook that want to run Windows at the same time.



LEO:  Yeah, I have been very happy.  But I�m really glad that it is this fast because that�s really encouraging.  And I can�t wait to see how it runs on this giant Dual Xeon.  I mean, this should be fantastic.  I mean, it should be as good as my Windows machine.



STEVE:  Yeah.  I would challenge anyone to do a side-by-side�comparison...



LEO:  I will, I will.



STEVE:  ...and determine whether XP�s booted natively or running in a window.  And also Parallels has complete support for both the Intel VT and the AMD next-generation virtualization technology is already in Parallels.  So you are getting the advantage of the latest virtualization technology being leveraged in there.



LEO:  Yeah, yeah.  It�s pretty � it�s, you know, as we�ve been talking about over the last few weeks, it�s really neat technology that has totally matured now and is usable.  And really, any serious computer user should be using one of these solutions.



STEVE:  Well, I mean, these are heavyweight solutions.  And I�ll remind people that, if all you really want is browser containment or email containment, that a program that we talked about, you know, Sandboxie, is still a really nice alternative.  It is much lighter weight, doesn�t have the RAM consumption stuff and so forth.  But for ultimate security and for experimenting with other operating systems, for example, Windows on a Mac, Linux on a PC, where you want to install, oh, I mean, FreeBSD, you know, anything runs in these virtual machines.



Now, one feature is sort of � I noticed it wasn�t, well, it wasn�t present in Parallels that � and it�s something that the VMware guys have always had.  And it�s the notion of checkpointing your system.  In the Workstation product, the $189 VMware Workstation, they�ve got some extensive capabilities that allow you to, for example, create a checkpoint in time which you�re able to come back to easily if something damages one of your virtual machines.  And it�s very useful for software testing.  You could be, you know, single-step debugging and get to a point where you�re afraid you might lose control of the machine in the debugger, make a checkpoint in the virtual machine, and know that you�re able to, you know, virtually turn back the clock to exactly that point.



Also in VMware, I mean, there are some fancy things they�ve got.  For example, you�re able to create a disk which is sort of the reference and always reboot with the same one, so that any changes made to it on the fly are not retained.  You�re also able to use a single disk and then branch from it other virtual machines where only the changes to that reference disk are maintained separately...



LEO:  Wow.



STEVE:  ...so that you don�t have � so that you�re not � you don�t need to create, for example, you know, multiple 10-gig files, each in a virtual machine.  You can create one as the reference, and then you�re able to create other virtual machines branching off of that master copy.  Some very fancy things.  Those are missing in their Server product.  They do allow you to have a checkpoint, but only one, and you�re able to come back to that checkpoint.  Whereas under the Workstation you have multiple checkpoints.



Well, it was interesting that that feature isn�t in Parallels nor in Virtual PC.  Microsoft has a cloning notion, but not all this fancy stuff.  And it was � I was thinking about, well, you know, maybe in the next version we�would get that because, you know, it�s another feature that would be nice.  And then I had a hunch.  It�s like, wait a minute.  You know, I remember seeing a long list of patent�numbers...



LEO:  Ohhhhh.



STEVE:  ...over on the VMware site and in the �About� box.  And so I did a little bit of research, and sure enough, I mean, for example, well, these guys are patent-happy, the VMware guys are.



LEO:  Well, now we know why.  They certainly have a business advantage for them.



STEVE:  Well, filed back in October of �98 is a, you know, Patent 6397242, which is titled �Virtualization System Including a Virtual Machine Monitor for a Computer with a Segmented Architecture.�  Which sort of sounds like a generic description of virtual machine technology.  And...



LEO:  Well, that�s interesting.  I�m surprised then that we�re seeing so many competitors.



STEVE:  Well, the problem is that there are limits to what you can patent because some of this is just � is fundamental�technology.



LEO:  Right.



STEVE:  Some stuff...



LEO:  I mean, if it�s built into the processor, you can�t very well claim you�ve got it exclusively.



STEVE:  Well, exactly.  And as we were saying, as Intel and AMD are putting more native virtualization support into the hardware, which of course is what all the Blue Pill stuff was that we talked about a couple weeks ago...



LEO:  Right.



STEVE:  ...as that�s happening, these early advantages are being lost.  Well, let�s see.  One, two, three, four, five, six, seven, eight, nine...



LEO:  Are you counting patents?



STEVE:  ...10, 11, 12 � yes, I�m counting patents.  13 patents.  And I got down, as I was doing this research, to 6795966, filed on February 4th of 2000, and that was issued on September 21st of 2004.  Get this.  �Mechanism for Restoring, Porting, Replicating, and Checkpointing...�



LEO:  Checkpoints, yup.



STEVE:  �...Computer Systems Using State Extraction.�



LEO:  Yeah.  Well, there you go.



STEVE:  And the abstract of the patent says:  �A computer system is interrupted and its entire state information is extracted as one or more checkpoints at one or more respective points during operation of the system.  The checkpoint may be restored into the system at any later time, even multiple times.  And it may also even be loaded into one or more other systems.  All systems loaded with the same checkpoint will then execute from the same checkpointed state.  The state extraction mechanism is preferably a virtual machine monitor on which one or more virtual machines are installed, each virtual machine constituting an encapsulated, virtualized computer system whose states can be checkpointed under control of the virtual machine monitor.  Checkpoints may be stored on a portable memory device or transmitted as a batch or dynamically over a network, so that even virtual machines installed at different sites may execute from the same state.�  That�s a�patent.



LEO:  Yeah.  And they pretty much � sounds like they�ve locked that down.



STEVE:  Yes.  I don�t...



LEO:  That�s why you�re not seeing it in other programs.



STEVE:  I don�t think we�re going to see that in...



LEO:  That�s why you pay $189, ladies and gentlemen.



STEVE:  Exactly.  I mean, that�s � basically that�s what it comes down to.  They have a patent on this.  Clearly, this is something that is cool technology.  They got...



LEO:  But here�s the thing.  I mean, if you need it, it�s cool; and certainly if you�re a programmer, or you�re doing, you know, you�re messing with the system, or probably a lot of the things you do, that�s great.  But to me, raw speed is what I�m looking for.  I want just a standard Windows system that gives me the best speed.



STEVE:  And I�m glad you said that, Leo, because Virtual PC from Microsoft and Parallels from Parallels, these are still completely usable systems.



LEO:  Yeah, yeah.



STEVE:  In fact, although they can�t and don�t call it � well, I guess they could call it a checkpoint.  But in Parallels you can.  They have UI support for cloning disks.  So you�re able to create one...



LEO:  Oh, you could always set a point by cloning it,�basically.



STEVE:  Exactly.  Exactly.



LEO:  That would be a good idea.  As you do your install and build, you clone it several times, if you�ve got the hard drive space, so that you can, you know, you can have a basic system with just Windows, and one with all of Office installed and so forth.  That would actually be useful to�me.



STEVE:  Well, and in fact it would solve the problem that I had that I solved with VMware Workstation � which I had already owned so, you know, I�d already paid the money � where I had about 15 different Windows XP systems, all with different software firewalls installed.



LEO:  Right.  So you�d go right up to the point of installing the firewall.



STEVE:  Yup.



LEO:  You checkpoint it, and then you can make 15 different�clones.



STEVE:  Well, or you clone it, and then you just rubberstamp out these cloned copies...



LEO:  Oh, I can�t wait to play with this.



STEVE:  ...and then you switch among them.  So...



LEO:  I�m going to need a bigger hard drive in that machine.



STEVE:  You know, and...



LEO:  I�m sorry, I had to tell him to get a bigger one.  I want more copies of Windows.



STEVE:  Well, yes.  You do need memory, and certainly a bigger hard drive.  You know, all these little virtual machine checkpoints, or clones, give you, you know, something to do with all that hard drive space...



LEO:  Right, yes.



STEVE:  ...that you�ve got left around.  And then of course, managing them becomes a problem because it�s like, wait a minute, where�s the copy of the whole world that I...



LEO:  Oh, but isn�t that cool?  It�s like a toy chest.  Well, let�s see.  Today shall I launch BSD, Linux, Windows XP, ME?  Oh, I can�t decide.



STEVE:  Yes, and it really does allow you, I mean, to save what it is you were doing.  Many times...



LEO:  Right.



STEVE:  ...I�ll set up a system and say, well, okay, I probably don�t � I�m not going to need this again.  I�ll reformat the drive.  A couple weeks later it was like, oooh, I wish I had that still.



LEO:  Yup, yup, yup, yup.



STEVE:  And this allows you to save those states, save those�experiments on drives which are now so inexpensive and so�large.



LEO:  Well, and it�s a good argument for spending the 50 bucks on Compressor.  Does VMware have something comparable to Compressor?



STEVE:  No.



LEO:  That�s a nice feature because if you do have, you know, 20 different builds, to get them down to a reasonable size makes a lot of sense.



STEVE:  Yes.  VMware does have the notion of � well, okay.  I said they don�t have anything comparable to Compressor, which is true.  But they do have all these � well, the VMware Workstation has all these other features.  For example, if I had a single master copy of Windows that I then wanted to branch off 15 instances to install different software firewalls, I mean, that would be very efficient because I would then have one single master copy.  If all I�m doing is installing 15 different software firewalls, you would imagine that the forks from that master copy would each be relatively small, not 15 more sets of the entire hard drive.



LEO:  Right, right.



STEVE:  So it is the case that the VMware Workstation, as you said, that�s what you�re getting for your $189 is you�re getting something that they patented starting, you know, six years ago, and then got the patent two years ago, that allows them this kind of flexibility that nobody else is able to copy.



LEO:  You know, it�s funny because, if you do a cooking show, you get very hungry sometimes, and you just can�t wait after the show to run out and eat.  This is the first time in a geek show I�ve gotten just � I cannot wait to start playing with this.  I�m just excited about this notion.  And, you know, the timing is right.  With Release Candidate�1 of Vista, and presumably a new release candidate soon, and a ready-to-manufacture, and a final release, I don�t mind testing Vista now because...



STEVE:  Well, yes.



LEO:  ...I can do it safely.



STEVE:  Yes.  You can do it safely.  You�ve got � and as we talked about before, the notion of running Vista in a system where even Windows XP runs more sluggishly, I would have a problem with that because Vista, by all reports, is a massive slowpoke.



LEO:  Yeah.  Hog.



STEVE:  So, but, you know, over on the Mac, in Parallels, XP runs as fast as it does natively.  I mean, I see no difference there.  And I would imagine, on a really strong PC platform, which I was deliberately not using for these experiments because I wanted to get some � I wanted to be able to sense the relative performance of these things.  That�s how I was able to determine that Parallels, for its $49, is faster than VMware Server or even Virtual PC, which is free.  It�s faster on the platform where I was doing all of that common testing.



LEO:  I have some � I�ll run some of the standard benchmarks, but I have some other benchmarks that are CPU-bound that I might run.  For instance, I have a chess program called Junior, which is, I think, the current world champion chess program.  And it has a benchmarking.  It�s a multi � I have the multiprocessor-enabled version, and it has a benchmarking feature.  And that�s pure CPU.  So...



STEVE:  I�ll bet that wouldn�t give you a really, like, a user experience.



LEO:  No, it�s very synthetic.  But it might be interesting to see how the CPUs run, comparing it to...



[Talking simultaneously]



STEVE:  Yes, it would be interesting to see, or it would be interesting to verify that no CPU power is lost...



LEO:  Yes.



STEVE:  ...in the virtual machine.



LEO:  I mean, we know that there�s other issues, of course, with the overall speed.  But CPU is the one you�re worried about, right, because that...



STEVE:  It seems � yes.  It seems to be, well, I think UI is the more perceptible difference.



LEO:  Right, right.



STEVE:  I mean, I wouldn�t want to do any, you know, intensive UI stuff in a virtual machine where, you know, just dragging windows around and resizing things and scrolling my browser was a lot slower.



LEO:  And those are very demanding.  And of course how well�the graphics card is emulated is a key feature in�performance.



STEVE:  Yes.



LEO:  And, you know, that is one of the things I check almost immediately is I click the Start menu.  How fast do I see that menu?  I deal a few hands in Solitaire.  Things like that are really good ways to kind of get a gauge how responsive it is.  And I have to say, Parallels, as far as I�m concerned, feels as responsive as Windows.  And you�re right, that�s the main issue.  Whether you lose 20 percent in your chess calculations is secondary to whether you can actually use a responsive computer.



STEVE:  Yes.  And essentially, for people who are browsing, certainly the UI is � the UI performance is important.  I would expect no CPU power reduction in a virtual machine because, you know, the CPU is the thing they have most in�common...



LEO:  Right.



STEVE:  ...between the virtual environment and the host�environment.



LEO:  I guess you�re testing that layer between you and the processor and how much of that is getting involved.



STEVE:  Yes.  And most of that abstraction layer, as it�s termed, is I/O and device oriented.  It is, you know, we�re virtualizing the SAN.  We�re virtualizing USB and the Ethernet adapter and the graphics card.  So it�s the I/O, which is where the virtual machine boundary intersects the host machine environment.



LEO:  Right, right, right, right.  That�s kind of...



STEVE:  But anyway...



LEO:  That�s kind of what I wanted to look at.



STEVE:  Yeah.



LEO:  Anyway, this will be fun to � I�ll give you some benchmark results.  I�ll see if I can download one of the standard benchmarks and just give you some benchmark results.  Because, I mean, given that I�m throwing so much CPU at this thing, and so much memory, it should be as fast as my standalone Windows machines.



STEVE:  Yup.



LEO:  That�s my hope.  I mean, what I did is I bought a large, 30-inch monitor.  Because right now I run side-by-side Windows and Mac.  And the editing software is running on Windows, and the recording software is running on Windows, but Skype�s running on the Mac.  I do all the editing on Windows, but I do a lot of the production of the website on the Mac.  And what I�d like to do is put it all in one window and have a Windows view in that window and a Mac view in that window and do them both together.



STEVE:  Yup.



LEO:  It�ll be very interesting to see how this works.



STEVE:  Yup.



LEO:  I�m excited.



STEVE:  Well, it�s really nice technology that has arrived.  And for anyone who�s a Mac user, take a look at Parallels.  Everything from Parallels has a 15-day free trial.  You register on their site, and they give you one of those, you know, humongous keys that Microsoft first popularized, you know, five groups of four characters and digits.  And you drop that in, and it just immediately authorizes your system with a 15-day trial.  I bought this stuff because, you know, like you, Leo, I really expect to be using it.  The idea of being able to easily fire up Windows � oh, and I ought to also comment, and I haven�t mentioned one other feature, a common feature of all of these is you�re able to pause the running Windows, very much like, you know, Windows can be put into standby or into hibernate.  You�re able to do that with any of these operating systems.



LEO:  Yeah, yeah.



STEVE:  So you could pause a FreeBSD, for example, that doesn�t have that sort of a standby feature, and what it does is it just saves the state of the entire machine in a file which you�re able to resume.  And it�s often the case that resuming a booted instance of Windows is much faster...



LEO:  Much faster.



STEVE:  ...than firing up a blank virtual machine and then booting Windows in that virtual machine.



LEO:  And imagine having, you know, three windows open at once, running three different operating systems.  I mean, that�s just really kind of nirvana.



STEVE:  Yeah.



LEO:  Of course, you have to have a lot of memory for that.



STEVE:  You really do.  And, you know, and again, I sort of�� I think about the profile of, you know, of young hackers, you know, white hat hackers, good-guy hackers, who are just interested in experimenting with this.



LEO:  Right, perfect.



STEVE:  And for them, VMware Server, that does give you all these features, that is a mature product, and free, lets you create these virtual environments and install any operating system you can find.



LEO:  Steve, once again a great subject.  I don�t think anybody minds hearing more about virtualization.  And of course, whenever a topic is worth talking about, Steve � that�s the great thing about podcasts.  We will take as long as we need to cover it.



STEVE:  Well, it is clearly something which is moving to the fore as our hardware supports it to a greater and greater degree.  And from a security standpoint it provides the most robust form of protection you can get without using an entirely physically separate machine.



LEO:  Right.



STEVE:  You know, that�s one step further, but it�s much less convenient to do so.  And, I mean, it offers so many features and flexibilities for, like, running other operating systems.  And, you know, VMware also has those appliances that are readymade, launchable, open source, free appliances that you�re able to run in their free Server, or in their Workstation platform, to, like, you know...



LEO:  Yeah, that would be an argument to buy VMware.  That�s kind of a neat thing that VMware�s done.



STEVE:  Yes.



LEO:  Is it, now, just retouching the speed issue, is it really, really, really much faster to use Parallels?  Or are they close enough that some of these other advantages of VMware might push you in that direction?



STEVE:  I would...



LEO:  I love the appliance idea.



STEVE:  Yes, I do, too.  And my feeling is that the machine�I was testing on was underpowered for running virtual machines.



LEO:  Okay.



STEVE:  All of them were sluggish, and clearly I was in a containment environment.



LEO:  Right, right.



STEVE:  However, I have a much faster machine where I have VMware Workstation installed, the one I was talking about where I was installing the various software firewalls.



LEO:  Right, right.



STEVE:  And I�m sure there�s � I don�t feel any VM overhead on that platform.  So if you�ve got a state-of-the-art machine with, for example, 2 gigs of memory versus 1 gig, and plenty of hard drive space, I think the VMware solution is fine.  Of course, and they have announced � they announced at the most recent Mac Developers Conference, VMware said...



LEO:  Oh, yeah.



STEVE:  ...they would be moving over to the Mac.  We don�t�know...



LEO:  Yeah.  I signed up immediately, so, yeah.



STEVE:  We don�t know if it�ll be free or commercial or what the pricing...



LEO:  Oh, I�m sure you�ll have to pay for it, but...



STEVE:  I would imagine you probably will.



LEO:  Yeah, yeah.  It�ll be worth it.  And I will certainly buy a copy of that, as well; and I�ll give you a report, at least from the Mac side, because that�s probably where I�m going to do it.  That�s where my � that�s the most powerful machine I have right now.



STEVE:  So, yes.  I would say, on a strong machine, as long�� if you don�t want all the fancy cloning, checkpointing, branching, forking, you know, fallback stuff that is patented and is available only, in the entire industry, only in VMware�s Workstation product, and if you have no interest at the moment in the Mac side, then VMware Server is a great solution.



LEO:  It�s free.  It�s free.



STEVE:  And as I said, correcting my mistake before, they don�t default to those other devices, the sound and USB; but it�s readily addable right from the get-go when you�re setting up any virtual machine from scratch.



LEO:  VMworld is coming up in November at the L.A. Convention Center.  I have a feeling you may be there and have an update.



STEVE:  Be really fun to see what�s going on.



LEO:  Wouldn�t that be fun?  I might come down to join you.



STEVE:  Yeah.  Yeah, cool.



LEO:  That�d be fascinating.  Steve, once again a great show.  Thank you so much.



We want to thank our sponsors for making this show possible.  And there are a number of sponsors.  This is our last week for Visa.  We do thank them.  It�s been a great month of September.  Visa was, as many agencies are doing and many companies are doing now, testing podcasting to see if it gives them the kind of results they want.  You know we�ve been talking all month long about Visa, Visa security, why it�s better to use your Visa card online.  Certainly, when I make purchases, I use my Visa.  And we encourage you to keep doing so.  And when you get a chance, take the survey we�re going to put on our site to see how well these Visa ads worked.  Remember the slogan:  Safer, better money.  Life and TWiT takes Visa.



Also I want to thank Dell.  Dell�s going to be with us for a lot longer.  Dell is a sponsor of this show and TWiT and Inside the Net.  And you can find out more about our great Dell deals.  What we�ve done, because we can�t � these podcasts live on so long, we can�t really quote a price on Dell equipment because who knows what it�ll be next month or in six months.  So what we do is we send you the web page.  Dell has a special Leo�s Picks page at TWiT.tv/dell, and right now on the page the Dell Dimension B110, a great Vista-compatible computer for an amazing price.  And if you�re looking for a laptop, the Inspiron � or Inspiron, depending on your point of view � E1405 Dual Core for, again, an amazing price.  Just check it out.  TWiT.tv.  I�can�t...



STEVE:  It�s hard.



LEO:  It�s hard not to say it.



STEVE:  It�s hard not.



LEO:  The price is so low, I really want to; but I can�t because it may change.  So go to TWiT.tv/dell, and you�ll see.  And then I hope you will consider Dell for your next PC.  Certainly that�s what we�re going to do.  We�re buying new PCs at Call for Help.  And as always we�re using Dells.



We also want to thank � I�m doing them all at once here, let�s get it all out of the way � Astaro, the great Astaro, who�s been with Security Now! from the very beginning.  I really appreciate our relationship with Astaro because they, early on, came forward and said we want to support Security Now!.  They�ve never asked us how many people listen.  They just believe in the show, and they wanted to keep it on the air.  And boy, that just really feels great.  So...



STEVE:  Well, and for what it�s worth, it�s about 100,000 listeners; right?



LEO:  Oh, yeah.  I mean, they�re getting their money�s worth, believe me.



STEVE:  Or, no, was it 120 last time?



LEO:  I can�t remember what the last number is, but...



STEVE:  Yeah, I think it had gone up a little bit since our last check.



LEO:  As it turns out, if they were to ask for numbers, they would be getting a better deal than they thought.  But they don�t ask, and I kind of appreciate that.  They just believe in the show.  If you want to know about Astaro�s software, you can get, by the way, as a listener, a free demo in your office of the amazing Astaro gateways.  There�s a gateway to fit all of your needs, budget and price-wise.  You get security, you get firewalling, antispam, antivirus, really a powerful package.  You might want to give Astaro a ring to find out more.  Or you can go online, Astaro.com.  Or you can call them, 877-4AS-TARO.  That�s 877-4AS-TARO to schedule your free trial of an Astaro Security Gateway appliance in your business.



Thank you very much to Dell, to Visa, to Astaro for supporting Security Now!.  Normally we will not do three ads in one podcast, by the way.  Don�t freak out, folks.  That was just an accident.  This is the one podcast, Steve, where everybody wants to be on it.



STEVE:  Well, I�m glad.



LEO:  You should be proud of yourself.



STEVE:  Yeah, we certainly give it our best.



LEO:  Everybody wants to be on Security Now!.  Steve�s show notes and 16KB version for the bandwidth-challenged are online at his website, GRC.com, the Gibson Research Corporation.  That�s where you�ll also find ShieldsUP! and all of his free security programs, and of course the ultimate hard drive recovery and maintenance utility.  Everybody, if you�ve got a hard drive, you ought to have SpinRite.  If you want more information and some testimonials, SpinRite.info, or just go to GRC.com.  That�s the home of Steve Gibson and SpinRite.  How are those CSS menus working for you?



STEVE:  Actually I�ve been getting ready to get back to that.  I haven�t yet deployed them site-wide.  But the page that we talked about really has been popular.  Last time I looked about 850 people a day...



LEO:  Wow.



STEVE:  ...were looking at that menu page.



LEO:  I have to � when I see � we�re going to go down to Podcast Expo a week from today, actually, because I�m going�down...



STEVE:  Oh, right.



LEO:  ...to do Podcast Academy on Thursday.  I�m going to lecture at the Podcast Academy.  I think there are still a few seats there.  There�s a banner on the TWiT homepage, TWiT.tv, if you�re interested.  And then Podcast Expo, we�re going down there.  Steve is...



STEVE:  We ought to tell people about it, Leo, in case we have listeners...



LEO:  Come see us.



STEVE:  ...who want to come by, yeah.



LEO:  Come see us.  It�s in Ontario, California.  It�ll be Friday the 29th and Saturday the 30th of September.



STEVE:  And you and I will both be there on Friday only.



LEO:  Friday only, yeah.  I have to come back and do the radio show.  But I�m doing the keynote.  You know who�s following me on the keynote � I�m kind of excited � the producer of...



STEVE:  Yeah.



LEO:  You�ve seen that?



STEVE:  �Battlestar Galactica.�



LEO:  �Battlestar Galactica.�



STEVE:  Yeah.



LEO:  I�m so excited.  So this will be a chance for me to � you know, I just started watching it.  And I�ve been loving it.  I�m a fanatic now.  So Ron Moore � and one of the reasons Ron�s there is because they�ve been very forward-looking, putting �Battlestar Galactica� online and so forth.  So he�ll be talking about that.  But I was just going to say, when I�m down there, Steve � and we�re doing a live podcast at 2:00 from the exhibit hall on the main stage�there.



STEVE:  Right.



LEO:  But when I�m down there, I have a new book that I just got from O�Reilly, �CSS: The Missing Manual,� the book that should have been in the box.  Maybe I�ll give this to you.



STEVE:  I�d love to have it.



LEO:  Yeah, because I think you need to � now that you actually understand CSS better than most, be kind of fun for you to see what they�re saying about it.



STEVE:  And it is a � it is spaghetti, yup.



LEO:  Yes.  So I�ll be talking about Podcasting�s Terrible�Twos.



STEVE:  Very cool.



LEO:  That will be at 9:00 o�clock in the morning on Friday.��And...



STEVE:  And actually the timing of the �Battlestar� guy is great, too, because this Friday, I mean tomorrow, is the season finale of both �Stargate SG-1� and �Stargate Atlantis,� and �Battlestar� starts up with its...



LEO:  2.5.



STEVE:  2.5, I was going to say, it�s like they have a funny season numbering.



LEO:  Yeah, Season 2.5, which is bizarre.  I�m just catching up.  I�m finishing up Season 1, and I�m going to catch up with Season 2, and then I�ll be ready.  But it�s, boy, is that a great show.



STEVE:  It is really good.



LEO:  You know who told me about it, Megan Morrone and her husband, Marco.  They�re big fans.  And I said, wait a minute, you mean the one with the little robot and the guy and the cheesy � no, no, no, not the original �Battlestar Galactica,� the new one.  And then I started � I watched the miniseries.  Oh, boy.  Oh, is that a good show.



STEVE:  Yeah.



LEO:  Love it.  But that�s not an ad, we�re just talking.



STEVE:  That�s just us.



LEO:  That�s just us.  PodcastExpo.com, or just go to TWiT.tv for a link to that.  And I hope we�ll see you there.  It�d be fun to see everybody out there.  I also want to mention that our new Windows Vista podcast launches tomorrow.  Paul Thurrott of WinSuperSite.com and Windows IT Pro, one of the, I think, probably the best Windows guy out there because he�s honest, he�s outspoken, he really tells it like it is, will be our host.  It�s going to be very much in the format of Security Now!.  Paul and I will be talking about issues in Windows.  In fact, I think our first show will be a review of RC1 of Vista.  From time to time interviews, though.  In fact, one of our plans is to get Jim Allchin as he leaves Microsoft.



STEVE:  Yeah.



LEO:  His exit interview.  So that�s going to be a fun podcast.  We don�t know what we�re going to call it yet, but you�ll find out tomorrow when we release it.  All right, enough business.  Time to say goodbye.  And thank you Steve, and I�ll see you next Thursday.



STEVE:  Always a pleasure, Leo.



LEO:  Take care.  Thanks for joining us.  This is Leo Laporte.  We�ll see you next time on Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#60

DATE:		October 5, 2006

Title:		Listener Feedback Q&A #11

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-060.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world �application notes" for any of the security technologies and issues they have previously discussed.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 60 for October 5, 2006:  Your questions, Steve�s answers, #11.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.



All right, Steve Gibson, we are back.  And we have an apology for last week.  I�m so, so sorry.



STEVE GIBSON:  Well, yeah.  We�re just both of us so distracted and busy.  And of course, you know, we�re recording this episode on Saturday early because you�re off�to Toronto again next week.  And so for us it was yesterday that we were together at the Podcast and Portable�Media�Expo.



LEO:  Wasn�t that fun?



STEVE:  It was really great.  I mean, so many Security Now! listeners and, you know, just general TWiT supporters were there.  I mean, you know, my hand, well, it isn�t quite, you know, fallen off from...



LEO:  It�s a little numb.



STEVE:  ...from shaking so many people�s hands.  But it was really neat to have that contact, yeah.



LEO:  But I � and really it�s my fault entirely, not Steve�s.  We had the podcast done.  I just was a little fuzzy with all of the attention, and I just � I forgot.  And I�ll be honest with you, it was very simple, I just forgot.  But I got it up when I got to the airport.  I ran out of there because I had a flight.  And I had a couple minutes to the airport and had found some Wi-Fi.  Because we remembered�� I think we remembered in the car.  So...



STEVE:  It�s like, oh...



LEO:  ...as we�re driving away.



STEVE:  I mean, I literally thought it was Thursday.  I didn�t even know what day it was.



LEO:  I was confused, yeah.  So, but it�s not your responsibility.  It�s my responsibility.  We had done it,�so...



STEVE:  Yeah.



LEO:  I, you know, as soon as I got to somewhere, anywhere that I could get it up, I did.  In fact, they were boarding the plane, and I�m typing very frantically.



STEVE:  Well, and a lot of listeners were writing and saying, hey, what happened, where are you guys?  Are you guys okay?  And so anyway, so I want to thank everyone for your concern, and...



LEO:  We�re okay.



STEVE:  ...we really do try never to be late because I know it�s important, and people have it sort of factored into their schedules.



LEO:  Right.



STEVE:  Which is, you know, also very flattering to us,�so...



LEO:  Well, unfortunately it�s the nature of a podcast sometimes.  I mean, I don�t want to say we�re amateurs, but we�re certainly � it�s more of a hobby than a profession.  And so sometimes things happen.  And I do apologize.  In a way it�s gratifying because we know now that people actually�listen.



STEVE:  Yes, and we both do take it very seriously.



LEO:  Oh, yes.



STEVE:  So, you know...



LEO:  Absolutely.



STEVE:  That�s why we�re recording this one on a Saturday morning, so that there will be something next Thursday.



LEO:  That�s right, because I�m off to Canada now to do a Security Now! [sic] right after this one.  We do have � it�s  Episode 60.  That�s divisible by four, so you know what that�means.



STEVE:  Yup, listener Q&A.



LEO:  I think we�ve got a dozen good questions from our listeners all around the world.  Starting off with Aabybro � I hope I�m saying that, Aabybro, Denmark � you know, I met some Danish podcasters while I was at Podcast Expo.



STEVE:  Oh, cool.



LEO:  And we have some real fans in Denmark.  Morten Rensen�says:  Where do I find the show notes for Security Now!?��Simple...



STEVE:  This is sort of a simple, short question, sort of a little bit of a softball question.  But it does come up.  So I just wanted to let people know that on the Security Now! page every episode has its own box with a description.  The first icon is the high-quality, 64KB audio.  The second icon is the quarter-bandwidth, 16K, for, as you�ve put it, Leo, for the bandwidth-impaired.  The third icon is always the show notes.  And, you know, many shows don�t have them.  But from time to time we�ll have one like we did last time, or actually time before, where we were talking about the VML exploit.  And there, I mean, that page has been heavily read.  Something like 8,500 readings per day, I think it was getting.  So, yeah, so it�s the third icon in for every single show is always the show notes.  And then the following three are various forms of the transcripts that Elaine does.  And in fact we met her for the first time.  She came...



LEO:  That was fun.



STEVE:  Yeah, she came out to the Podcast Expo, and so we were able to hang out with her, also.



LEO:  Yeah.  She�s our transcriptionist, a wonderful person who does a very good job.  And I have to apologize.  On many of the other shows we have more complete show notes.  I point to Steve�s page for the show notes.  But from time to time I will put, if there�s something really important, I�ll put links in the show notes on TWiT.tv, as well.  And maybe I�ll start doing more of that because, you know, it�s really just a time issue.  So we�ll figure out some way to get more information there.  So that � because I know a lot of people just go to TWiT.tv.  In fact, actually, the truth is, a lot of people don�t even go to any web page.  They listen to it.  It�s automatically downloaded.



STEVE:  Right.



LEO:  And we, on some of the shows, actually do put more complete show notes in the little descriptive field that you can see.  If you have an iPod or some MP3 players you can see a descriptive field with extra text.  And that�s not linkable, if you�re listening on a portable player.  But at least you could see more, and I should put more in there.  So I�ll try.  I�ll do my best.



STEVE:  Well, and talking about time, Leo, you�ve just added another podcast; right?



LEO:  Yeah, two more.  Yeah, we have a new one from Paul Thurrott I�m really excited about, Windows Weekly.



STEVE:  Yup.



LEO:  And I was talking with you about that yesterday.  I really think that�s going to be one of the top shows that we do because there�s so many people interested in Vista.  And Paul is so great.  You were with me...



STEVE:  And he�s not a Microsoft apologist, either.



LEO:  You were with me, weren�t you, when we met the Microsoft guy?



STEVE:  I was, I was.



LEO:  There was a marketing guy from Microsoft who was part of the Vista program, I think...



STEVE:  And actually I�m glad to have met him.  I�ve got his card.  And he said, Steve, when � if you get pissed off at Vista, call me first.



LEO:  He said it more gently than that, but that was the gist of it.  We�d like to, you know, we�re doing our best, we�re trying our hardest, and we would love to have a chance to talk to you if you have any questions.  And that�s completely reasonable.  It�s nice to have a channel in there.  And then I said, hey, great news, we�re going to do a Windows Vista podcast, a Vista podcast, and Paul Thurrott will be doing it.  Pause.  Pause.  And he says, oh, that�s good.  And to me, that was the reaction I wanted.  If the Microsoft marketing guy had said, oh, that�s great, I might not have been quite so happy.  But Paul tells it like it is.  And that�s ultimately what the Microsoft fellow said.  He said, well, one thing about Paul, he�s honest.  And I said, yes, that�s why we have him.



STEVE:  Yup.



LEO:  Windows Weekly.  So we�ll probably be covering...



STEVE:  And then you�re also � I�m sorry.



LEO:  We�ll probably � go ahead.



STEVE:  And then you�re also doing a new legal podcast.



LEO:  We are.  And you met Denise, as well, Denise Howell, who is a very well-known legal blogger and will bring some great legal minds in to talk about some of the big issues in tech law.  Now, not just � not law in general, but there�s sure a lot of tech law.  And, you know, we�ve sat there on TWiT sometimes trying to wrap our minds around some of these legal issues and not done such a great job.  Also Denise was kind enough to say, well, you do pretty well.  But I thought it would be better to have somebody who actually has some training in this talking about these things.  So that�s coming out probably after I get back from Canada.  I don�t know if I�ll be able to get it out this weekend, but I�ll try.  I�ll try.  I�ll do my best.



Meanwhile, another question.  And we got off on a sidetrack here.  Brian Voeller of Ashland, Oregon writes:  Considering the recent VML hole � that�s what we were talking about in Episode 58, a very, very serious Windows hole which has since been patched.



STEVE:  Yup.



LEO:  We�re glad to say.  Is it possible for a bad website to reregister that DLL through ActiveX and exploit it?  Because that was our fix for it was unregister the VML DLL.  I ask this because, if it couldn�t be done without already  having infected the system, why did Microsoft wait even one minute and use the automatic patch system to do what you instructed us to do?  Couldn�t they have just done that automatically?  Then they could take their time and really go over that DLL with a fine-tooth comb.  If that�s the case, and considering how easy it was to disable the previous WMF issue, it seems to be to be criminally negligent on their part.



STEVE:  I like this question because it starts off suggesting that, well, if a bad website could use ActiveX to reregister the DLL.  Okay.



LEO:  Which it could, of course...



STEVE:  Well, okay.  Let�s stop right there.  We know that ActiveX is itself inherently a huge problem.



LEO:  Right.



STEVE:  I mean, ActiveX is downloading essentially a DLL code into your machine and running it.  So if a bad website can use ActiveX to reregister a flawed DLL, well, it could just as easily do anything else it wants.  So, I mean, I wanted to sort of, like, refocus on...



LEO:  That�s the least thing they would do.



STEVE:  Exactly.



LEO:  I see what you�re saying.



STEVE:  I mean, yeah.  I mean, doing that would be a very roundabout means of doing what they would really want to do, if any bad website could run ActiveX.  What that means is, it�s running code it just provided your browser natively in your system.  Well, you�re already hosed.  I mean, it�s game over at that point.  So, you know, shutting down ActiveX or limiting scripting so that you�re only allowing scripting for sites you trust, or switching to a browser that explicitly does not support ActiveX, you know, Firefox without an ActiveX add-on, for example, will make you substantially more secure, so you don�t have to worry about browsers doing that.



Now, the newer versions of Internet Explorer, of course, post-Service Pack 2, they will warn you when a site is attempting to provide your system with an ActiveX control and run it, and give you the opportunity, finally, of saying no, I don�t like this site enough, I don�t trust this site enough to allow that to happen.



LEO:  All right, yeah.  There have been in the past bugs that would prevent the certificate from showing up.  And that�s really scary because then that�s similar to the VML hole.  It means any program could do any � any website could do anything it wanted.



STEVE:  Right.



LEO:  But that�s working right now, the certificate system;�yes?



STEVE:  Yes.



LEO:  We hope.  As far as we know.



STEVE:  Well, but again, you�re still trusting your user ultimately to say, I�m not going to let this site run...



LEO:  Well, no, that�s the point is that in the past they�ve been able to get around that warning.



STEVE:  Right.



LEO:  So as long as you�re getting the warning, yeah, one hopes that you�re going to have people smart enough to say no.  That�s another matter entirely.



STEVE:  Right.



LEO:  Colin McWilliams, wandering around the U.S. somewhere, says:  In Security Now! 52, Leo talked about downloading Hamachi Server.  Then you talked about setting up your own private Hamachi network.  I looked online to try to find the Hamachi Server but couldn�t find anything like that.  Hamachi is great, but I�m looking for a solution that does the same as Hamachi and allows me to control the network.  Rightly so, since Hamachi�s now been sold, you might have some concerns about it.  But, you know, he wants to host the Hamachi Server.  But where is it?  I can�t find it.



STEVE:  Well, we did address this once, but I wanted to come back to it because many people at the Podcast Expo yesterday were, you know, telling us what fans they are of Hamachi.  They loved the fact that Security Now! turned them on to this great solution.  There was some concern about Hamachi�s sale, that, you know, Alex sold it to LogMeIn folks.  And so I wanted to remind people that, you know, for what it�s worth, I did talk to Alex Pankratov, Hamachi�s inventor, father, designer, and ultimately seller, and he really did check these guys out and believed that they were really going to follow his philosophy of keeping this thing secure, not playing any games with people and, you know, doing the right thing.  So for what that�s worth, you know, he didn�t just sell it to the first people who came along.  He really felt like he vetted them completely.



As to the Hamachi Server, it turns out that that was something he was talking about on his website originally and had intentions to do some sort of a hardware-bundled solution.  It would not have been ever downloadable software because he just knew he would never be able to control it from a piracy standpoint.



LEO:  Ah, okay.



STEVE:  So he was going to do some sort of a box, the way Google has, like, their own Google Search appliance that you�re able to purchase.  He was going to do a Hamachi networking appliance of some sort, tying the software to the hardware.  It never got past early alpha stage.  The guys he sold Hamachi to, the LogMeIn folks, do now have that as something they could pursue.  But there�s been no indication of whether they�re intending to do that or not.  So it�s sort of not something that anyone should plan on and/or expect to have happen.



LEO:  So we probably shouldn�t have said anything about it,�frankly.



STEVE:  Well, yeah.  We didn�t know at that point.  So I did talk to Alex again to find out what�s the story on Server, and that�s how I got the full update.



LEO:  Scott of Cincinnati, Ohio wonders about virtual machine USB support:  I plug a thumb drive into my computer and intend for the USB drive to be recognized by the virtual machine.  How does the host operating system know the thumb drive is for the virtual machine and not for itself?



STEVE:  Well, this is a perfect question that follows from the issues we were talking about, about USB support within virtual machines.  If a computer that is the hosting machine�� obviously it�s got hard drives.  And you might have already plugged a USB thumb drive in, so it�s appearing in the host machine.  Well, any of the virtual machines could be asked to see that thumb drive as a hard drive.  But what the USB support does, it�s sort of similar to CD-ROM support where, when you insert the CD, who�s going to own the existence of that CD once it becomes acknowledged by the system?  So what USB support does within a virtual machine is it makes that support dynamic, so that when a USB device appears � and any USB device, not just drive devices.  Drive devices are sort of easier, and always have been, because a drive can be recognized by the host system, which you could then inform the virtual machine to be able to see.  But the idea is the USB support makes this a dynamic process.  And you specifically configure the host and the virtual machine so that the virtual machine will be able to acquire any USB devices that appear once that virtual machine is already running.  So it sort of makes the whole thing more dynamic and fluid, much as it normally is when you�re just running USB devices on a host without virtual machines.



LEO:  Does it decide based on which window is front-most?  In other words, if the virtual machine is kind of in the background, does it still grab the USB?



STEVE:  You�re able to configure the � I mean, there is a problem because you�ve got, like, sort of a resource contention problem.  So...



LEO:  Right.  Because what if I put in a CD-ROM, and I want it to be for the Mac, but I�ve got Parallels running?  Who gets it?



STEVE:  Yeah...



LEO:  Same thing with a USB device.



STEVE:  You�re able to configure that on a per-virtual-machine basis.



LEO:  So it will always get it if I�ve turned it on to get�it.



STEVE:  Correct.



LEO:  Oh, that�s interesting.  I was hoping, and it seemed to be, that maybe it was just when it was front-most only, but I guess not.



STEVE:  Yeah, it is a problem.



LEO:  But, you know, I mean, hey.  You�re still getting to run two operating systems at once.



STEVE:  Exactly.



LEO:  Raphael Wolff in Warsaw, Indiana has become a Parallels fan.  He writes:  Holy sheetrock!  Parallels is amazing.  Parallels is a virtual machine that you recommended in your last episode.  It�s for Windows and Mac.  How is Parallels different/similar than a bootable flash key?  Ah, interesting.



STEVE:  Yeah.



LEO:  Using PE Builder and FlashBoot, he�s been able to create a bootable Windows flash key, and a DOS key, as well.  Is it possible to take the image off the bootable flash key and run it through Parallels compression and make it even�smaller?



STEVE:  Well, this was a great question because there are two different solutions.  There is, of course, the idea of creating, as Raphael has, a thumb drive that boots Windows.  The problem with that � well, first of all, that works.  It�s useful.  It allows you to sort of boot your own system that you carry around with you, with whatever apps and things that you�ve got installed on it.  The problem is you don�t get containment.  That bootable Windows would inherently be able to see all of the resources on the host drive that you�ve booted it to.  So if the host drive were infected, it would � well, and it�s sort of a bidirectional thing.  The host drive would not be running.  But if by mistake you ran something on the host drive that was malicious, it could reinfect your thumb drive.  And if something were wrong with your thumb drive, it could infect the host.  So you don�t, in that scenario, get any containment, which is what virtual machines, one of the several benefits of using full-on virtual machine technology.



And his second question about using Parallels Compressor, yes, absolutely.  You could take the image from the thumb drive, compress it using Parallels Compressor, which as I said, you know, I did some benchmarks of size.  I mean, that compressor really squeezes things down.  And then put that smaller image back on the thumb drive.



LEO:  I was crying about the fact that Parallels Compressor wasn�t available for the Mac until I found out � and I got a number of emails saying, oh, it�s actually built into the Parallels version on the Mac.  You don�t have to buy it as a separate program.



STEVE:  Exactly.



LEO:  I was dumb.  I didn�t know that.  I also want to point out � and I learned this from Cali Lewis at GeekBrief TV, that there�s a new program, she�s going to demo it on Call For Help this month, called MojoPac.  But I�d like you to take a look at it too, Steve.  The idea is, it�s a PC on your USB drive.  So your applications are in there.  It�s hard to tell if it�s sandboxed or not.  But it�s MojoPac.com.  And that�s why I wanted to get your...



STEVE:  Is it .com or .org?



LEO:  .com.



STEVE:  Okay.



LEO:  And the idea behind it is that you could put, on a USB device or an iPod, for instance, kind of everything that you use.  And you�re working exclusively in the MojoPac environment, so you don�t have to install it.  And apparently it�s running, you know, your desktop and everything are running directly from the MojoPac.



STEVE:  So it sounds a little bit like a bootable Knoppix CD; right?



LEO:  Yeah, but you don�t boot from it.  That�s what the�thing � and that�s why the security might be an issue;�right?



STEVE:  Oh, I see.  Okay.  Good.  We have had a couple listeners mention it.  In fact, when I was going through questions just this morning, pulling out these 12, I ran across it.  And because I didn�t have a chance to...



LEO:  Well, it�s brand new.  It just came out of beta, like, today, so...



STEVE:  Oh, cool.



LEO:  So I�m very curious to find out what its capabilities are.  So I�m not going to commit you to this, but I think we might want to look at this down the road.



STEVE:  I agree.



LEO:  Yeah.  It�s actually also used, or intended to be used, by gamers who can�t install games at work, who want to bring their games with them.



Brian Heyliger, soon to be a father � congratulations, Brian�� in Tampa, Florida wonders:  I�m a network engineer with heavy skills in Cisco IP telephony, but not so much in security.  I�m also a member of my local church � and, as he said, is soon to be a father.  In preparation for being a father, I�ve been thinking about ideas on how I might protect my daughter � wow, he�s starting early, she�s not even born yet � from pornographic websites and predators in chat apps, et cetera.  You�ve got a few years, Brian, I�ll be honest with you.  My question is in regard to protecting innocent eyes on the Internet.  It is always something to think about, though, as a parent.  I want to be able to teach non-savvy folks how to protect their children from obscenities on the Internet.  I�d also like to give a class at my local church on how to protect your children from certain websites, maybe even block certain chat protocols or filter/log the chat content so parents can have a little more visibility into who their children are speaking to on the Internet.  Do you have any recommendations on a hardware device or software application that will accomplish this?  Hardware would be ideal as it would control the whole network.  Software would be acceptable, as well.  The more user-friendly, the better, because the people I�ll be teaching this product to will be typical PC users at best.



STEVE:  I liked this for a couple of reasons.  First of all, the first thing I would refer Brian to is our episode on the hosts file.  We�ve received a ton of great feedback since that episode on just, I mean, the phenomenal difference people experienced when they just changed that one file to the galactically comprehensive file which we linked to from the show notes, that third icon, on our hosts file episode.  Because the hosts file, of course, intercepts a huge array of known yucky domain names and prevents browsers from going there.  So, I mean, it�s so nice and such a simple solution because it works universally among all machines.  All Internet-connected machines somewhere have a hosts file, which is generally easy to find, depending upon what platform you�re on.  And, you know, it�s a zero-overhead, zero-footprint � it�s something you could easily, for example, in his church mode he could just say, look, folks, you know, here�s the specific instructions, depending upon what kind of computer you have.  And it just does a tremendous job of keeping your machine from going to these bad places.



The second thing that, you know, because he was interested in looking at some sort of a hardware device, I wanted to sort of touch on the idea that you and I talked about yesterday, Leo, of maybe doing a special episode where I really take a look at what Astaro is offering.  Many people have been sending us positive feedback about their own experiences, but I�ve not yet made time.  You know, I mean, for us they�ve just been, you know, a supporter of the show for a long time.  And I like the fact that there was a good synergistic connection because they�re into security.  But from the standpoint of a hardware device, what you really want is something which is managed, something where, you know, as new bad things come along, somebody is informing that hardware device of what�s going on.  And that�s one of the things that the Astaro Gateway system does do for you.  It�s not something that I�ve looked at it, but it might be worth looking at.  And again, we would let people know, of course, that, you know, I�m not making an endorsement of it, but this is what the thing does.



LEO:  Yeah, we should certainly test it and show people what it does.  That would be fun.  We decided because Astaro was an advertiser that it would be probably something we�d do as a separate episode, not as one of the regular episodes, just to avoid any appearance of conflict of interest.  It�s not something Astaro has asked us to do, but something we thought we�d like to do.  But, you know, it�s always a little tricky when a company is a sponsor.  We have to be careful about how we deliver the content.



STEVE:  Exactly.  And in this case, I mean, I really feel that it is being listener driven because there�s been a lot of feedback.  And people are saying, hey, you know, I�m trying to use it, what do you think of it?



LEO:  Right.



STEVE:  And at this point I don�t think anything of it.  So I ought to.



LEO:  One other thing I�d like to say, another sponsor, but this is a sponsor of my radio show, is a company called Phantom Technologies.  This I think might be really more appropriate for Brian�s clientele, who are not � believe me, the Astaro Gateway is not for a novice, nor is messing with the hosts files.  They make a hardware device called the iBoss that is a parental control device.  And it is managed, but it�s managed at their end.  So just like their iPhantom, it trans- all of the data that are coming into your computer is going through their servers.  Which is managed in the same way you would have a high-end Astaro managed server.  And so but it�s not cheap, it�s 90, I think it�s 90 bucks, and there�s a monthly fee.  A good solution for anybody who wants to control a large number of computers.  I use it at home.  So, and we have four or five computers.  And it does all of the things that you�d want, including filtering out bad sites.  It does not log chats.  That�s another task�that...



STEVE:  A really separate issue.



LEO:  Yeah, you could use software to do that.  And I have used software to do that in the past.  But, you know, I have some issues about spying on my kids because they�re a little bit older.  But I think that, you know, in the past we � it�s good to have the chat logs because if there have been any questions, we can go back and look at them.



STEVE:  It�s also worth mentioning, too, I mean, Brian could use these things, these solutions that are available today, over for the folks he wants to help at his church.  But given that his daughter is not yet born...



LEO:  He doesn�t have to worry about it.



STEVE:  Well, and I guarantee you that nothing we�re talking about today...



LEO:  Yes.



STEVE:  ...will be relevant in ten years, or eight years, or five years even, when it starts to be a problem that, you know, she might be using the Internet.



LEO:  I think for his audience � you�re absolutely right.  For his audience today, though, MyiBoss.com is something I would absolutely look at.  I�ve been very happy with it.  I use it, and I�ve recommended it to a number of friends.  And it does exactly the job that he�s asking for, except for, as I said, for the logging of the chats, and that�s a separate software.  And very � that�s an easy thing to do.



Shawn Milochik of Reading � I�m sorry, Reading � Reading, Pennsylvania, warns of a nasty new eBay phishing attack.  Well, I think there�s more than a few of those.  I just thought you might want to mention this on the show.  There�s a new, to me, phishing attack on eBay.  I�m a seller with active auction listings.  I received a standard email sent through eBay by another eBay member, legitimately via their contact system.  This is the way potential buyers contact the seller with questions about the items they�re considering purchasing.  However, the content of the email asks me to confirm whether my item is the same as the item in the link they provide.  Of course that link brings me to a fake eBay log-in screen.  Although � where they collect your password and log-in.  Although there�s nothing new about linking to a fake log-in screen, I think this deserves mention for two reasons:  The email comes from a legitimate and expected source, in this case eBay itself.  And unlike most phishing scams, where many ask you to log into your bank account at a bank you don�t use, there�s a 100 percent chance here that the receiver is not only an eBay member, but one with auctions, greatly increasing the likelihood of success.  Thanks for the great, as always, Security Now! podcast.  I�m subscribed to the monthly donation program mostly to support this show.  Thank you for your donation.



STEVE:  I liked this question because it brought me up a little short.  You know, I use eBay.  I�ve been purchasing some stuff recently.  And eBay from time to time just expires your log-in.  And even though you check the box of, you know, keep me logged in on this computer, and it will ask you to reauthenticate yourself.



LEO:  Yeah.  I think most sites will do that.



STEVE:  Well, and that�s the problem, is I realized, I mean, conscious as I am of phishing issues, and anytime I�m            going to a site where it says, hey, you know, provide some information, I right-click on the page and check the credentials to make sure that this is, you know, really a site that�s got an SSL certificate that matches the URL where I think I am.  I mean, I�m diligent about that.  But I realized I could fall prey to this.



LEO:  Yeah.



STEVE:  If I were poking around eBay, and I got a page following a link that said, oh, it�s, you know, it�s time for you to reauthenticate yourself, I might very well do that.  So I just wanted to raise Shawn�s point.  I think he�s right.  This is a sneaky one, and it might get me.



LEO:  There is a very simple rule, you know, and I recommend everybody follow it.  In the past our rule was don�t open email attachments.  And it�s oversimplified because there are some email attachments that are safe.  The very simple rule is, do not click links in email.  And the reason is in HTML email you can hide what the link really links to.  And so somebody who�s not really paying attention will click a link in an email, it�ll draw them to a website that looks like a legitimate eBay site, but if they look closely they�ll see it�s not.  That�s how phishing works.  But in all cases it requires you to click a link in email.  Otherwise it�s not going to do anything.  So it�s just a good habit to get out of clicking email links of any kind.  And again, there are some safe ones.  But it�s hard to tell which are safe and which aren�t.  You agree, Steve?



STEVE:  Yeah, and in fact, you know, I think I misread that a little bit.  I was assuming that all of this was happening on the eBay site.  But you�re right, I mean, his note says, you know, he receives an email from someone.  And it�s like,�okay....



LEO:  Yeah.  They can�t fake a link in an email in an eBay�site.



STEVE:  Right.  Right.



LEO:  So again, it�s clicking that link in the email that really gets you in deep doo-doo.  Don�t do it.



Matthew Bain of Atlanta, Georgia had some great thoughts:  I�m in the process of helping my aunt learn how to use a new laptop she just purchased for a therapy practice.  And by the way, just to cross back to that eBay thing, what we didn�t say is, if at any time you�re concerned about a site you�re on, it�s asking you for log information, you can always get the certificate for that site and verify that it�s the site you thought it was.



STEVE:  Right.



LEO:  We should mention that, too.  Back to Matthew:  I�m in the process of helping my aunt learn to use a new laptop she just purchased for a therapy practice.  She asked me about how to keep her patient notes confidential and secure.  She has actually, I believe, under HIPAA, a requirement to do so.  I�m going to teach her how to use TrueCrypt to store all her documentation.  I own a MacBook Pro, and I use Parallels for all my Windows XP needs.  I was playing around�with TrueCrypt on my Parallels VM to learn some of its features when it occurred to me one could have a completely secured, encrypted OS by using TrueCrypt and a VM�simultaneously.



STEVE:  Aha.



LEO:  Ohhh.  If one were to be running Windows or Linux with TrueCrypt installed, they could mount an encrypted volume, then create a new VMware virtual machine on that volume and the entire virtual machine, including system files, drivers, applications, et cetera, be encrypted.  Instead of just encrypting your personal files from prying eyes, you�d be protecting the whole system.  Is this a practical solution or simply overkill?  Would there be a downside to using these two great products in this fashion?



STEVE:  Well, I thought this was really clever and interesting.  First of all, I wanted to compliment him and his aunt on making sure that her laptop data is kept confidential.  There are so many stories.  I mean, it�s phenomenal, you know, people who read security lists are seeing this all the time.  People�s, I mean...



LEO:  Government agencies.



STEVE:  Yes.



LEO:  The Veterans Administration.  I mean, serious people who should know better.



STEVE:  It�s just unbelievable.  I mean, even now, years after the early high-profile stories about laptops getting stolen, I think people just assume, oh, well, I�ll keep mine right next to me, or this�ll just be temporary.  It�s hard to understand what they�re thinking when, you know, data that they don�t own is on a laptop which is inherently portable.  And...



LEO:  It�s easy enough to secure it.  They absolutely � it�s�crazy.



STEVE:  Yes, all...



LEO:  We see stories, there were just stories this week about more government laptops missing.



STEVE:  Yup.  All the technology is there.  TrueCrypt is perfect for doing this.  So again, I wanted just to salute Matthew and his aunt for, like, from the start they�re going to solve this problem using TrueCrypt.  And for people who are thinking about this and may now know what TrueCrypt is, Leo and I covered this in an earlier episode called �TrueCrypt.�  By all means, go back and take a look at it.  It�s just a � it�s a fantastic solution.



As for the idea of using TrueCrypt to encrypt an entire virtual machine, it would work.  But I�m a little nervous about the overhead.  What TrueCrypt does is it is on-the-fly encryption and decryption, so that it�s basically a filter which inserts itself between your operating system and a specific file or volume on your hard drive.  So that any data being written runs through encryption as it�s going to the drive and then runs through decryption as it�s coming back.  So the computer always sees the data as if it�s never been encrypted.  The drive always sees it always encrypted.  So you�re super safe because nothing that�s decrypted is ever written onto the drive.  So it�s a beautiful solution.  But that bidirectional process of encrypting and decrypting on the fly will introduce some overhead.  So I would say, first of all, if you really want to do this, I mean, it�s a great solution.  It will work.  You could give it a try and see if it slows you down too much.  It just � it might bog things down more than the benefit is worth.  But it would�work.



LEO:  That episode, by the way, was Security Now! 41.  So if you go to TWiT.tv/sn41, you can listen to it right there on this page.  And I was just looking at a news article because we�re going to probably talk about this on TWiT at some point.  According to the Commerce Department � actually, yeah, the Commerce Department � they�ve lost 1,137 laptop computers since 2001, most of them from the Census Bureau.  So obviously a lot of personal information on there.  One hopes they were using some sort of encryption to protect those laptops.  But that, I mean, they just � they will go lost.  I always do everything I can to protect the data on my laptop.



STEVE:  Yeah, Leo, the only thing that I can imagine that is apparently going to work is for really strict legislation to exist that holds the people who lose the data accountable, and then makes the threat of what could happen so onerous and expensive that people are going, oh, well, I guess I have to figure out this encryption stuff.



LEO:  Well, well, it should just be part of the government build, for crying out loud.  It should be automatic.



STEVE:  Right, exactly.  The IT people, when they�re setting it up, ought to just do it without thinking twice.



LEO:  And there should be no way to disable it.  And I wouldn�t be surprised if � and we�ll hear from them, I�m sure, if they�re already doing something like that.



STEVE:  And then we can hope they don�t just write the password on the bottom.



LEO:  You can�t solve that problem.



STEVE:  You�re never going to get around the human problem.



LEO:  No.  Kye Dorton of Niceville, Florida � can you believe there�s a place called Niceville?



STEVE:  I just loved that, Leo.  When I saw that in the mail I thought, okay, you know, here we�ve got a bunch of dirt.  We�re going to make a town.  What should we call it?  Let�s call it Niceville.



LEO:  Let�s drain the swamp and call it Niceville.  I�m only up to Episode 44.  Well, he just heard the TrueCrypt episode.  But I�ve made it through all those in under two weeks.  Wow, that�s kind of...



STEVE:  That�s dedication.



LEO:  ...a crash course in security.  I hope to be caught up in less than a week.  I heard the question about how can virus damage a CPU.  Can something through Windows or the BIOS hijack ACPI � that�s the Advanced Computer Power Interface, something like that � and shut down the CPU fan and/or other system fans at a time of high utilization to cause damage?



STEVE:  That was...



LEO:  I wonder why he�s asking this question?



STEVE:  Well, it was interesting because, you know, the question did come up, could something, you know, damage your hardware?  Now, when a CPU gets overheated, it doesn�t die, it just hangs.  You know, the typical scenario is, when transistors get too hot, they stop turning off completely.  They end up letting some current leak through.  That�ll cause the processor to essentially just hang.  It�ll just, you know, you�ll get a system lockup.



LEO:  Right.  We see it all the time.  Yup, yup.



STEVE:  Exactly.  So that�s what happens when processors get overheated.  They don�t die.  But hard drives do.  Hard drives really don�t like running too hot.  And it�s one thing, it�s one of the things that I encountered a lot with SpinRite 6.  SpinRite 6 continuously monitors the temperature of the drive, if the drive is reporting it.  And it will stop itself to allow the drive to cool off if the drive starts running too hot.  And it was surprising to me, early in the development, how many people were encountering this problem.  Because what�s happened is people are upgrading to 7200 RPM drives from 5400, which are drawing more power, are generating more heat.  But they�re sticking them into cases, they�re sometimes adding them to existing cases.  And the cases are inadequate to keep all of that extra power cool.  So, I mean, it�s conceivable that if something came along and could take over your fans, which are under software control, and caused them to slow down, that you could create some permanent damage over the long term in your hard drives.  But your CPUs, all they would do is lock up.  And you�d begin to get the sense pretty quickly that something has gone wrong here.



LEO:  Yeah.  You know, you can � and there have been viruses that have written to the CMOS, changing the BIOS.  So absolutely.  And the theory behind this could absolutely�happen.



STEVE:  Yeah.



LEO:  Although we find the virus authors these days are not interested in damaging the system.



STEVE:  Exactly.



LEO:  That�s the old school.



STEVE:  They want to use them.



LEO:  They want to use them.  They want to sneak on there, use it for forwarding spam or putting adware up.  And so for that reason alone, that would be counterproductive.  They don�t want to crash your system.



STEVE:  Yup.



LEO:  Joe Rodricks, who obviously has a GPS because he says he�s located at 42.01697 North and 70.967345 West � did you figure out it was Massachusetts, or did he?



STEVE:  He did.  And I thought, okay, I�m not sure you want to give, you know, your exact location...



LEO:  Exactly, within a few feet.



STEVE:  ...to six decimal places.  But he did, so it�s okay.



LEO:  Go see Joe.



STEVE:  Maybe it�s a Starbucks somewhere in Massachusetts.



LEO:  I hope so.  I�m praying.  What�s the best way to go about setting up a file server on my network?  I have an old PC I plan on turning into a NAS device.  And then I figured, oh, hey, ho, why not make it externally available?  What does he mean about � oh, he means, like, to the outside�world?



STEVE:  Well, that�s a good � that�s a really good question.  I didn�t know what he meant either by �externally available.�  But I wanted to mention that I�ve had really good experience using Samba, SMB or Samba, on a Linux or FreeBSD system, and using that as a file server.  So, for example, if he had � and he talks about it being an old machine.  Well, Samba is very efficient on, you know, as is in general Linux and FreeBSD, you know, any of the BSD machines, using that as a file server.  And then you could also, of course, use it as your gateway, run NAT or firewall or whatever so that you�ve got one machine which is your network interface to the world.  And, you know, if he really did want to make his files externally available, he would have that choice then because that machine would be the interface to the Internet, where he could � and in fact Samba does have lots of security provisions for, you know, passwords and log-ins and restricting IP ranges where things could be accessed and so forth.  So one machine could be a sort of a general purpose file server/Internet interface for his network.  And all the machines in the network could then easily use just standard Windows filesharing in order to access those files.



LEO:  And that�s built in, by the way, to every version of Linux and BSD.



STEVE:  Yes, it is now.



LEO:  Samba is just an automatic...



STEVE:  Well, and I have to say, too, that, you know, I�ve never been a big user of GUIs on these Linux machines.



LEO:  Well, then, there�s no need if you�re doing a file server.  I mean, who cares about the GUI; right?



STEVE:  Well, exactly.  But what�s so cool is I do have FreeBSD servers at, you know, in our main facility at Level�3, and I�ve got one here on my own local gateway.  I don�t run GUIs on any of them because, you know, Linux and UNIX are generally sort of text file configurable.  You know, you�ve got various, you know, RC files and INI files and various types of files to manage and configure the system, but they�re just text files.



Well, Windows is a perfect GUI.  I mean, Windows, you�ve got text files coming out your ears in Windows.  So all I do is I use Samba on those UNIX machines, and then I can connect either locally or remotely to � and of course I�ve got obviously firewall filter, so nobody else can even see that I�ve got Windows filesharing available to only my IP ranges, which are fixed at each end, that are able to see each other.  So I just, you know, I bring up my UNIX file directory tree on Windows Explorer and then use whatever editor I want, because Windows has great editors and a perfect GUI, to edit the text files.  So Windows is my management platform for these UNIX machines.



LEO:  Yeah, that�s pretty common, too.



STEVE:  It really works wonderful.



LEO:  It�s kind of a cross-promotion here, but Jeremy Allison, the creator � one of the creators of Samba, the maintainer of the Samba project, is going to be on FLOSS Weekly in a couple of weeks.  And since you said you like BSD, and I know you like VMware, there is a BSD-based NAS distro called FreeNAS.  NAS stands for Network-Attached Storage.  And so it�s a very simple way to set up a NAS using FreeBSD, absolutely free.  And VMware actually � it was one of the appliance winners in their Ultimate Appliance, Virtual Appliance Challenge.  It won for Best Consumer NAS.  So...



STEVE:  Cool.  And I would think Joe wants to look at that.



LEO:  Yeah, it�s small.  It�s 32 megabytes.  So you could put it on a USB key, you could put it on � actually what a lot of people do now is they put it on flash, and they actually have the flash boot the system.  You don�t even have a hard drive to boot the system.  It boots into flash, and of course you have the hard drives are storage only.



STEVE:  Right.



LEO:  It�s a nice way to go.



STEVE:  Very cool.



LEO:  So, yeah, I think a lot of people are doing this.  I�bought a NAS because I wanted the hardware, the RAID�5 hardware.  But you can build one if you�ve got an old�machine.



Brian Lawson writes from Joburg, South Africa:  Cell phones can log onto the Internet.  You can browse with the phone�s Opera � browser or Opera Mini.  But cell phones don�t have firewalls.  What�s the security problem?



STEVE:  Yeah.  I thought this was a great question.



LEO:  It is, now.  I�m scared.  I didn�t even think about�that.



STEVE:  Yeah, and it is a security issue.  Certainly we�ve already seen situations where cell phones have buffer overruns which are exploitable.  You know, it is entirely predictable that, as they become a bigger target, as more people are using browsers through their cell phones � and you know, Leo, that�s my big application.  I have a Treo�700p that I love.  And all I do is use it for reading news when I�m roaming around.  It doesn�t support JavaScript at this point.  That is, the Blazer browser in the Treo does not support JavaScript.  So that�s sort of a good thing.  And I�m using very simple, WAP-based websites which are just presenting small pages, and I�m mostly just reading text.



But we know over time that�s going to change.  That technology is going to mature.  The cell phones are going to be more powerful.  People are going to say, hey, you know, I want to be able to do anything on my cell phone browser that I can do on my workstation.  So we know that Java�s going to be, you know, added to it.  And along with that are going to come all the same security problems we�ve been dealing with on our much more mature platforms.  So, you know, just keep an eye on security.  It�s going to be important.



LEO:  Yeah.  Although, you know, I guess the good news is these are such low-powered devices right now that they�re not really a particularly attractive target.



STEVE:  Right.



LEO:  I mean, there�s some personal data on it, but � let�s�see, that was Brian Lawson.  This is Brian Voeller of Ashland, Oregon.  He brought up another interesting point regarding patents:  I was enjoying your discussion on Parallels in the last episode, 59, but I did not appreciate�the idea that patents on saving the state of a virtual machine were keeping others from doing the same.  This is a very, by the way, hot topic in the open source world is the idea of software patents, and a lot of people don�t like them.  This is the same concept as state saving in console videogame emulators for computers.  Here�s a Google search for posts before the filing data of that odious patent,�#6496847.



STEVE:  I got a kick out of this because, first of all, we did answer another of Brian�s questions earlier.  But you know, Leo, you and I have talked about the issue of intellectual property rights.  And I�m very uncomfortable about this whole issue of software patents.  From, you know, as a developer...



LEO:  And here you�re a software developer.  So, you know, you have potentially something to gain from these things.



STEVE:  Well, yes.  Except that what I have found is that what the � the Patent Office is issuing patents that it should not.



LEO:  That�s the real problem, yeah.



STEVE:  And that�s a problem because then you�ve got companies that basically have a license to fight each other.  Some other company says, wait a minute, that patent should never have been issued.  The company that has it says, oh, we love our patent, we�re going to defend it.  And, you know, and nobody wins but the attorneys.



LEO:  Yeah.



STEVE:  You know, in this sort of fight.  And from my standpoint, the line that�s crossed is sort of this, I mean, it is understandably a grey, fuzzy line.  But it�s the question of is this engineering or is this an invention?  And the language in the patent law, which I have read extensively because I�ve been really curious, like, you know, what�s going on here, is it talks about a solution which would not be obvious to someone trained in the art.  That is, and so the question of is this obvious or not.  And what I find is that most of the time companies which are first into an area, they will, you know, they�re solving problems and coming up with solutions.  Well, for a company to come along later to encounter the same problem and come up with the same solution, I mean, okay, sure.  We see often that things are being invented at the same time by people who never talk to each other.  You know, and so, I mean, that almost argues for the fact that these are not inventions, this is engineering.



LEO:  Right.



STEVE:  And so, you know, the idea being, okay, I�m a software engineer.  Give me a problem, I will solve it.  Did I invent something, or did I just engineer a solution?  And so often what I�m seeing are patents being issued for, you know, the only answer to a problem, which is not an invention.  It�s just, you know, you went to school, you learned how this stuff works, and then someone pays you to solve these problems.



LEO:  Right, right.



STEVE:  So, you know, it upsets me that what I think we�re going to begin seeing � and this is already beginning to start � we�re going to see an increasing problem with patents that have been issued over the last decade which are�going to cause much more trouble than they have as companies begin to sort of run out of steam and have to start going to litigation in order to, you know, find more sources of�revenue.



LEO:  Yeah.  Yeah, I mean, it�s really become a real problem.  And there�s a real challenge to this in the European Union where they don�t really have these kinds of things.  Or they hadn�t had software patents for a long time, and now they�re starting to implement them.  And it�s a problem.  It�s too bad.



STEVE:  Well, and in fact...



LEO:  We see a lot of companies formed just to fight � just to, you know, fight over patents.



STEVE:  Well, yeah.  And there are companies that are just��all they do is acquire patents, and they�re just big litigation firms.



LEO:  Right.



STEVE:  The original theory was that software could not be patented because software was just mathematics.  That was the argument that the courts decided a long time ago.  And they said you cannot patent mathematics because it�s nature.  I mean, it�s just � it�s here.  You know, it�s all around us.  It�s not something which was invented.  And then what happened was, the way people began to get around this was that they would describe a software invention in a hardware embodiment.  They would actually design hardware which would do the same thing.  So they would patent the hardware and say, well, but the hardware is not the preferred embodiment.  The preferred embodiment is this little software over here that�s what they really wanted to do.  But they sort of wedged it in by initially designing hardware to do the same thing.  And then over time, you know, the Patent Office just sort of got � I guess they got tired of these ridiculous arguments and said, okay, fine.  If you just want to patent the software, we�ll let you do it.  And of course now people are patenting genetics.



LEO:  Right.



STEVE:  They�re like, you know, patenting, again, things that already exist in nature that they didn�t create.  They just found them and said, oh, we�re going to get a patent on this gene.  It�s like...



LEO:  It�s out of control.



STEVE:  It�s bad.



LEO:  Really out of control.



STEVE:  It�s bad.



LEO:  Steve, we�ve run through all 12, and you�ve done a great job.  I think it�s time to give you a day off.



STEVE:  Well, we�re going to have a week and a half off since we�re recording this one early.



LEO:  That�s right.



STEVE:  But we�ll be back for #61, in terms of listeners listening to this, one week from now.



LEO:  Yes.  Don�t get confused by what Steve just said.  We�are going to be consistent every Thursday, as we usually�are.



STEVE:  Yup.



LEO:  Thank you, Steve.  We want to thank the good folks at Astaro, too, who are our sponsors and our supporters and, as Steve mentioned, do a really cool product called the Astaro Security Gateway.  It is, you know, something I use.  I use the 120.  And of course it�s something that big businesses and big companies also use.  It is a very sophisticated device.  But what�s nice is it�s based on open source software, and they�ve done it right.  The sponsors of the show, Astaro Corp., have offered your small or medium business a special deal.  If your business needs superior protection from spam, viruses, and hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and of course an industrial strength firewall, all in the easy-to-use single high-performance appliance, they will give you a free trial, a free demo.  You just contact Astaro at Astaro.com or call (877) 4AS-TARO, and you can schedule that free trial of the Astaro Security Gateway Appliance in your business, which is fantastic.



And of course, as always, and I really want to underscore this, non-business users could download the software version of ASG for home use at Astaro.com.  So another good way to build a security server would be to just get an old PC, download the free software, put it on there, and then I think it�s something like 79 euros a year you can get the full � subscribe to the antispam, antivirus, and automatically updated firewall and so forth.  Astaro.com.



Steve Gibson, we will see you next week.



STEVE:  Absolutely.



LEO:  We don�t know what we�re going to talk about.  It�ll be something fascinating, no doubt.



STEVE:  No doubt.



LEO:  Have a wonderful...





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#61

DATE:		October 12, 2006

TITLE:		ISP Privacy and Security

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-061.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss two new 0-day Internet Explorer vulnerabilities (both now being exploited on the Internet); then they explore the commonly expressed privacy and security concerns presented by the need to trust Internet Service Providers (ISP).



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 61 for October 12, 2006:  ISP Privacy.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.



It�s time for Security Now!.  Steve Gibson is here; and I have a report on my experiences with Windows Vista and Parallels on the Mac, and I�ll tell you about that because I promised a review.  But we have lots to talk about, including some security � oh, some security issues.



STEVE GIBSON:  What do you know.



LEO:  On Security Now!.



STEVE:  So tell us about Vista.



LEO:  You know...



STEVE:  And Windows, Parallels.



LEO:  I use Parallels.  And in fact I�m just now downloading the final update to Parallels because we�ve been in a kind of a beta.  And the first beta did not run Windows Vista at all on my � now, I�m running on a Mac Pro with very high-end hardware, including a Radeon X1900 card and dual Xeons and so forth.



STEVE:  Well, in fact, I saw a mention in Jerry Pournelle�s most recent column that you�ve got some � you have, like, a quad core system?



LEO:  It�s, yeah, basically.  It�s dual Xeon, so it�s got four processors.  And, boy, it runs � I mean, I have to say it seems to run at completely normal speeds.  A little couple of weirdnesses, which I�ll see if they fixed in the beta.  For instance, sometimes I�ll start it up, and it�ll say, oh, the virtualization bit isn�t set.  And then the fix is to put your Mac to sleep and then wake it up, and for some reason that magically fixes it.  And then the virtualization bit�ll be set.  You know, and the Intel processors.  And that does make a significant difference in response.  When everything�s running as it should, and I�m running it with a gig of RAM � I have four gigs on the machine, but a gig of RAM dedicated to Windows.



STEVE:  Right.



LEO:  It feels pretty good.  We did some benchmarks at Call For Help.  Sean Carruthers � because I had wondered how well�� would it be better to run Photoshop in Parallels or run it natively on the Mac.  And it actually is faster to run it as a Windows application in Parallels than it is to run it on the Mac.  It�s pretty slow on the Mac.



STEVE:  Very cool.



LEO:  Yeah.  Although fastest still would be to run it in Boot Camp as a native Windows application.  Parallels is pretty good.  I have to say I don�t feel any urge to launch Boot Camp.  Now, there are some people say � there�s some question about whether I�m getting Aero Glass or not.  I thought I was because it looked so pretty.  But I haven�t found a definitive � I�m a little concerned that I might not be getting Aero Glass, the high-end visual system.  So I�m downloading the latest version.  Maybe as we talk I�ll install it, and before the end of the show I might have an update for you on whether I�m running Aero Glass or not.



STEVE:  Well, and in fact, on your Mac you probably have some humondo hard drive; right?



LEO:  Yeah.  I have a � I bought a, you know, it came with a 250-gig hard drive.  But I am wont � I�ve done this on all my most recent machines � to go out and buy a Western Digital Raptor, which is a 10000-rpm hard drive, and use that as the boot disk.  So that�s a 150-gig or 170-gig boot disk, and then I have a 250-gig kind of secondary disk.



STEVE:  So unless that was, like, really full, you could certainly slice it down a little bit and use Boot Camp.  I�m just thinking it would be useful, perhaps, to run...



LEO:  Should I do a benchmark?



STEVE:  Well, or, well, just to, like, you know, for you to actually have a bootable � native bootable Vista.



LEO:  Right.



STEVE:  Certainly at some point in the...



LEO:  Certainly there�s plenty of room.



BOTH:  Yeah.



LEO:  Yeah, that�s a good point.  Maybe I will do that.  And there�s some report that you no longer need Boot Camp to actually get Vista to boot on the Mac, which is kind of interesting.  So I�ll have to take a look at that, as well.  I guess...



STEVE:  Wow.



LEO:  Maybe Vista now supports EFI, or there�s some black magic somebody�s able to do.  I�m not sure what it is, but�I�ll...



STEVE:  It certainly is sounding like Microsoft may be moving more toward running Windows on Mac hardware, which...



LEO:  Why not?



STEVE:  ...would be � exactly.



LEO:  Sells more copies.  But to just, you know, to follow through on our virtualization conversation of the last few episodes, it really is a great way to go.  I just don�t feel any urge to install Vista anywhere else.  It�s still a beta; right?  And why take the chance, when I can run it perfectly well on a virtual machine.



STEVE:  Right, right.



LEO:  Really feels good.  So yesterday was the Patch Tuesday, the second Tuesday of the month.  Microsoft shipped a few patches.



STEVE:  Oh, a few.  In fact, I�ve read it described on the web as a �hailstorm�...



LEO:  That�s probably not the word they wanted to use, but I understand where they�re going there, yeah.



STEVE:  ...of patches.  So, and they fixed another 0-day vulnerability which we haven�t talked about before.  It�s different than the vector markup language vulnerability that, you know, we talked about several weeks ago.  This one was � actually it was known since July, the middle of July.  And then only a few weeks ago the infamous HD Moore, who creates the Metasploit framework, added full remote execution, you know, remote code installation technology to the Metasploit exploit framework for this vulnerability.  It�s � for months it was only known as a denial of service, meaning that it would crash your browser.  But � oh, and I should explain that this was � I�m looking for what this � there�s so many of them now, because there�s another one I�m going to talk about, too.  I don�t want to get myself confused.  Oh, it was a � there was a set slice method in what�s called the web view folder icon function.  And so for a long time all that anyone could do was get it to crash your browser.  But of course any time you have a crash, that says, you know, some code ran that shouldn�t have.  And so once the black hat hackers figure out how to get the code they want to have run, run instead, it won�t crash, it�ll do something nasty.  And it has been found in the wild installing rootkits on people�s machines.



LEO:  So that�s kind of what you�d expect.  The first time that they jump into code, it just crashes things.  But they know how, well, hey, we�re able to get it, and so we just have to figure out where to put our code so that it�ll run it instead of just crashing and...



STEVE:  Right.  And in...



LEO:  It�s just a first � it�s a precursor, I guess.



STEVE:  Yes.  And inevitably, this was developed from a socalled, you know, browser denial of service, meaning it would just, you know, deny your browser.  It would just crash your browser.  It was leveraged into a remote code execution exploit.



LEO:  Now, is this something Microsoft patched yesterday?



STEVE:  Yes.



LEO:  Okay.



STEVE:  Yes.  So the point is, you absolutely want to be running Windows Update, or you want to make sure that you�ve got the most recent patches.  I should mention that, you know, many times our Security Now! show notes is just a page where I say, hi, I didn�t have any links.  Okay.  This is going to be a link farm.  This is a link farm episode.  I�m going to have a whole page of links.  So listeners will probably want to go over to the show notes for Episode 61.  And as I mentioned last time, that�s the third icon in the little summary box on the Security Now! page.  Because I�m going to have a whole ton of links for different stuff.



LEO:  A slew.



STEVE:  So the previous 0-day exploit, the VML exploit, that of course has been fixed.  Then...



LEO:  By the way, I apologize for all the Windows sounds.  You don�t hear them, Steve.  But I�m booting Vista, and it�s making a lot of noise.



STEVE:  Well, whatever it�s doing, it�s not messing up our connection, so that�s...



LEO:  You don�t hear it.  Well, that�s one of the advantages of having quad processors is I�m looking at the CPU usage, and there�s 100 percent on CPU 1, but we�ve still got only 7 percent on CPUs 3 and 4, so I think...



STEVE:  Right.



LEO:  I think Skype�s got plenty of headroom here.  I�m�sorry.



STEVE:  I think so.  You mean you�re doing this on the system that I�m talk...



LEO:  It�s the same system that we�re talking on.



STEVE:  ...that we�re using?



LEO:  Yeah, I know, I�m a crazy man.  I know.



STEVE:  That�s amazing.



LEO:  Yeah.  Well, it�s a test.



STEVE:  Okay.



LEO:  Think of it as a test.



STEVE:  Only a test.  Okay.  So the original VML exploit that we talked about extensively a month ago, that of course was fixed by an out-of-cycle patch a couple weeks ago.  Since then, Microsoft has fixed another 0-day exploit.  The reason I�m making sure we�re clear on this is that there is still another one.



LEO:  Oh, man.



STEVE:  There is one that is now known is being exploited, is in the wild, and it has been confirmed that yesterday�s Windows Update patches did not fix it.  Microsoft knows about it.  There�s a link about it on their page.  They�re doing their standard, oh, well, you know, we�ll either fix it in a normal patch cycle or in an out-of-cycle patch, if, you know, depending upon customer needs is what they say.  However, this thing is, once again, it�s gathering momentum.  And we can expect to see, you know, a much wider range of�exploits.



LEO:  It�s a remote-execution exploit?



STEVE:  It�s a remote-execution exploit.  It�s now in the wild.  Microsoft knows about it.  But yesterday�s patches did not include a fix for it.



LEO:  Oh, boy.



STEVE:  So who knows when we�re going to get one.  Now, one of the things that people are noticing, and I�m sure this is not a coincidence, you know, it�s evolution, it�s what you�d�expect, is new exploits are appearing either on the day of Microsoft�s patch or shortly afterwards because they�re wanting to get as large an exploit window as possible before...



LEO:  Oh, so they wait until...



STEVE:  Yes.



LEO:  They�re taking advantage of this one-month delay.



STEVE:  Exactly.



LEO:  Oh, man.



STEVE:  So it�s good for security IT people because they know when to anticipate a hailstorm of patches.  On the other hand, by � I mean, and it�s logical when you think about it.  This is what the bad guys would do.



LEO:  Right.



STEVE:  Is Microsoft says we�re going to patch on the second Tuesday of every month.  So exploits appear on that day when Microsoft doesn�t � or maybe shortly before or shortly afterwards.  But, like, clustered around there so that they have the maximum opportunity of catching Microsoft, you know, off cycle to create the most opportunity for getting their malware installed in people�s machines.



LEO:  Those sons of guns.



STEVE:  Well, once again, the neat guys at ZERT, the Zero-Day Emergency Response Team, they�ve got a goodie which will fix both the 0-day exploit that Microsoft just patched and this other one.  The other one is a � it�s a problem in the direct animation ActiveX control that IE naturally will use.  It�s been known since the middle of September, that is to say shortly after Microsoft�s last patch cycle.  The SANS Security Institute has some, like, some mitigation steps.  They say, well, use an alternate browser.  Which is like, uh, yeah.  That�s, you know...



LEO:  Okay.



STEVE:  ...Firefox.



LEO:  We�ve been saying that for a while.



STEVE:  Or Opera or whatever.



LEO:  Right.



STEVE:  Or they say disable ActiveX scripting.  And of course, you know, the way I run, as I�ve said before, is I�ve got my security tightened so that I can browse around the �Net with no ActiveX, and then selectively enable it for sites where it, you know, there is some functionality that I�need.



Now, there�s another thing that can be done.  And I�ve got, again, links to all of this on the show notes for Episode 61, this episode.  There�s a way to set a kill bit for ActiveX controls that specifically prevents Internet Explorer and the Explorer viewer window � so that also covers you over in Outlook � it prevents IE from being able to use that ActiveX control itself.  Again, I�ve got a link to Microsoft�s page that describes it.  In order to do this, you�ve got to get in and muck around with the registry.  So instead, that�s what the ZERT guys have done.  They�ve got a very clean GUI and command line versions of what they call their �ZProtector,� which apparently is going to be maintained and evolved over time, the idea being that when something occurs that�s 0-day, they�ll quickly respond by making an easy fixer, you know, a 0-day protector that will, for example in this case, just enable the kill bits so that IE won�t � it�ll basically neuter that functionality in IE until Microsoft gets around to fixing it.  Then people will have to turn that back on.  So it�s very much like what they did with the VML exploit.



This thing is available from ZERT.  You could put ZERT into Google and find it easily.  Or again, the show notes page at GRC for this episode has links to it.  They provide full source code.  I�ve looked over it.  It looks fine, I mean, these are good guys.  These are white hat hackers.  And it looks like they�re going to be real busy, not only now but almost certainly in Vista times, fixing these sorts of problems.  Because, I mean, we�ve really got a new form of arms race going now where, exactly as you said, Leo, hackers are clustering their release around Microsoft�s timing in order to maximize their window of opportunity.  And it�s now � the race is to install malware in people�s machines in order to take them over for various purposes.  And it�s going to be a nightmare.



LEO:  Wow.  Well, I�m glad that ZERT�s around, anyway.  And it�s interesting that hackers have � they�re so adaptable that they quickly sense an opportunity and take advantage of it and, like, this one-month delay.



STEVE:  Well, and really, you know, it�s the kind of thing where after the fact you would think, yeah, well, naturally that�s what they would do.



LEO:  Sure.



STEVE:  They want the most opportunity for infecting machines, so they�re going to wait till Microsoft does a cycle and then dump their new malware out on the �Net.  And so, you know, this, again, I do recommend people who are using IE, who normally have ActiveX enabled, those people ought to protect themselves.  Again, I don�t want to get alarmist about this.  This isn�t yet a huge problem.  But Microsoft just missed the opportunity to patch it.  It did not make it into this round, that is, yesterday�s Windows Update patches.  And who knows how long it�s going to be.  Microsoft may do another, like, you know, mid-cycle patch two weeks later, as they did two weeks ago for the VML vulnerability, or not.  In any case, if you�re a person who�s using IE with ActiveX installed, and you tend to go around to, you know, the darker sides of the Internet, that�s where this stuff is being installed and being used now to take over people�s machines.  Again, another 0-day exploit, the third we�ve talked about in almost as many�weeks.



LEO:  Wow.  Anything else to talk about today?



STEVE:  I think that covers our errata.



LEO:  All right.



STEVE:  What I want to talk about today is to sort of address � this is sort of almost a mini Q&A, just a onequestion Q&A.



LEO:  Oh, but what a question.



STEVE:  Well, it�s a � yeah.



LEO:  It�s one we get a lot.



STEVE:  It�s a good one.  It�s one, in fact, what I was talking to you about before we started recording, what I wanted to talk about.  You said, oh, yeah, someone just asked that, you know, today or yesterday.



LEO:  I did an interview today, and somebody called up and said, �Do instant messenger programs log the chats?�  And I said, well, some do, some don�t; but your Internet service provider may well be logging what you�re doing online.



STEVE:  Right.  And the question we get, that we get submitted on the form at the bottom of the Security Now! page, and I see it often, is, okay, I�ve got my computer secure.  I�ve got, you know, WPA Wi-Fi, I�m, you know, I�m doing everything I can.  But what are the concerns about what my ISP is doing?  You know, and we could generalize ISP a little bit.  Most people think of ISP, of course, from their home network, who is your Internet service provider.  But, for example, in a corporate environment, your corporate IT people are the, you know, basically your conduit out to the Internet.  What are the security implications of, you know, sort of the aspects that you don�t control in your connection to the Internet.  And it�s a good question, of course, because certainly it�s like, I guess, sort of a weak link in the sphere or area that an end-user is able to�control.



And we can break this down into sort of two forms of potential vulnerability.  One, I would say, is the sort of the real-time packet flow, exactly as you were saying, Leo, in your instant messenger example.  That is, the idea that an ISP might themselves log, or even in some cases be legally compelled to log, certain classes of traffic which are moving across their borders.



The second category, which is sort of different, related but different, is any sort of database or long-term storage, or even for that matter short-term storage.  And the most prevalent category there is email because most ISPs provide the SMTP server that remote systems use for depositing mail into their server, which will then be picked up by your POP client or your IMAP client when you go to retrieve mail.  And in exactly the reverse fashion, you tend to plant mail on that server, that SMTP server, which is then relayed out to the rest of the Internet.  So that�s, you know, obviously the way email functions.  So there�s both a concern of data flowing through the ISP and sort of this database or storage where you are explicitly depositing messages, either incoming or outgoing, in the form of, you know, email or any other sort of, like, static transaction.



So I guess the point of clarification, the idea that people want some sort of assessment of is, first of all, you know, what do they have to worry about?  Well, anytime email is not encrypted between endpoints, it�s inherently going to be in the clear.  So, for example, even if you used SSL to create a secure connection to your ISP, SSL is encrypting your data in transit, but it�s decrypting it at the other end, and it�s going to be stored in the clear by the ISP.  So there is a vulnerability there.  If you�re just using SSL to transfer your mail safely, it is not encrypted at the ISP, nor is it encrypted anywhere after that when it goes across the Internet and rests at the destination ISP prior to being picked up by a user.



LEO:  Well, important to understand, that�s if you�re using POP mail.



STEVE:  Well...



LEO:  If you�re using web-based mail, like for instance Gmail with SSL, then that�s encrypted, and the ISP never gets a look at it.



STEVE:  No.  It�s not encrypted.



LEO:  It�s not.



STEVE:  It�s not encrypted at the ISP, nor when it goes...



LEO:  Oh, okay.  So SSL is only used for the log-in, not for the transmission.



STEVE:  Well, it is used for the transmission.  And so it�s encrypted in flight.  But once it gets there...



LEO:  Well, that�s my point.  Your ISP in that case is�Google.



STEVE:  Right.



LEO:  So your Internet service provider is not seeing that�mail.



STEVE:  I see what you mean.  Yes, that�s absolutely true.  It would be unencrypted when it rests on the destination server.  And if that were Google, then it would be going through your ISP, and they couldn�t see it at all.



LEO:  Right, right.  So...



STEVE:  Yeah, that�s absolutely the case.



LEO:  And there are companies like Hushmail, for instance, that maintain encrypted mail even at the server side.  So, but you have to take extreme � you�d have to take these extraordinary steps to make sure that your email was safe.  You�d encrypt it, basically.



STEVE:  Well, yes.  And in fact that�s where I�m headed with this, is that the � and we�ve talked about it in passing.  But I wanted to, again, readdress the issue of PGP in this context because people who really want to know that they�ve got, you know, as it�s called, Pretty Good Privacy, but when in fact this is like Really Good Privacy, of their email from the point it leaves their machine to the point it arrives at its destination, no matter what happens to it in the meantime, you need to use an extra tool like PGP, which is now freely available, is at PGP � or you use GNU PGP.



LEO:  Yeah.  In fact, the PGP Corporation is a commercial entity that currently owns the PGP code base.  They make a free version, but it�s � boy, you�ve got to jump through hoops to get it.  And frankly I don�t recommend people do that.  They just use the open source version, which is, as you say, the GNU Privacy Guard, or GPG.  And that�s available from GNUPG.org.  That�s what I use.  And it�s PG, completely PGP compatible.  It looks just like PGP.  You store, in fact, you store your key on the PGP key servers.  People can use PGP interchangeably with GNU PG � or GP.  But�� it�s a little too many Ps and Gs here.



STEVE:  PGPGPG.



LEO:  The problem is, I mean, I use it to sign my mail.  And if somebody sends me a key, from then on all mail, all our transactions are encrypted in both directions.  But most people don�t use it, so most of my mail is still unencrypted, even though I have the capability.



STEVE:  Exactly.  Well, and you know, I�m not a PGP user because I just...



LEO:  I know.  So I can�t encrypt my mail to you, Steve.



STEVE:  Well, but, you know, we�re just gossiping back and�forth.



LEO:  Oh, yeah, well, that�s easy for you to say.



STEVE:  Well, and I think that�s a perfect example, too, is that most people probably don�t have this concern.  But it�s a question that is being asked continually.  So I wanted to formally address it and just explain that, you know, email may be encrypted on the fly, but it is not encrypted once it arrives at your ISP�s server, not is it encrypted � nor does it stay encrypted from then on unless you do something like use PGP in order to provide real end-to-end encryption where all the server is then seeing is a blob of ASCII gibberish.  They have no way of dealing with it.  No one inline, I mean, no U.S. government subpoenas, no packet logging, nothing is ever able to decrypt that.  So, I mean, it is really good security from point to point.



So the second class of concern is just this flow of traffic.  And there�s really nothing a user can do except be aware that an ISP, unless you�re using an SSL connection or a VPN in order to tunnel through your ISP, anything you�re doing is susceptible to their monitoring.  Now, I mean, I don�t want to get overboard and suggest that ISPs are monitoring.  On the other hand, there has been evidence of and stories about the, you know, various factions in our intelligence services who, you know, FBI, CIA, NSA and so forth, that are doing monitoring of ISPs.  And it seems to be something which is growing rather than decreasing.



LEO:  Alberto Gonzales, our esteemed Attorney General, has asked ISPs to keep two years of information on everybody, just in case they need it later.  So...



STEVE:  And of course that�s...



LEO:  That�s voluntary, but...



STEVE:  It�s been met with a huge amount of resistance by the ISPs because, you know, they first...



LEO:  It�s a lot of work.



STEVE:  Well, yeah.  They say, who�s going to pay for that?  I mean, two years of all of their traffic is a phenomenal amount of data.  And it�s the sort of things like, okay, then if you�ve got this much, you know, data, how do you make any sense of it?  How, you know, how do you find a needle in a haystack, literally.  So you�re right, there is an intent to diminish our privacy in this fashion.  And again, PGP and using SSL connections through your ISP, or VPN connections, provide you with, you know, absolute state-of-the-art bullet-proof protection.



LEO:  So if you�re using other things, like, well, just surfing or instant messenger, there are encrypted instant messengers.  When you�re surfing with an SSL-encrypted site like your bank, you�re safe.



STEVE:  Yes.



LEO:  But the rest of it is just floating out there in the�clear.



STEVE:  Yes.  You know, for example, typical uses of Google, where you are entering data into a Google form, is not encrypted.  So somebody can see what you are searching for.  Of course, Google knows; and they are, we know, building up stats for whatever purposes, they say in an anonymous fashion.  But in the case of your ISP, your ISP with whom you have an account knows who you are, knows your identity, knows, you know, everything they need to know if somebody was making them, or for whatever reason they were choosing to associate your traffic with you, they have the ability to do so.  So, yes.  Anytime you are not using SSL for web browsing, all of the data, the URLs you go to, the data you enter into non-secure forms, you know, pretty much anything you do on the �Net is being passed back and forth through your ISP in a way that can be examined and filtered.  So essentially that�s the answer to the question that we get so�often.



LEO:  And the news is bad.



STEVE:  Well, yeah.  Again, it�s, you know, you and I don�t use encrypted email because we�re just generally...



LEO:  Because you don�t.  Because I would.  If you used PGP, we would have encrypted email.



STEVE:  But, yes, but there�s nothing we�re talking about�that...



LEO:  Ah, but the point is that if everybody did it, then there would be no obvious � you see, right now if I sent encrypted email with some people, the presumption is, well, look, he doesn�t encrypt anything except for these few messages.  We ought to look into this.  If all of my streams were encrypted, and if everybody did the same, there�d be no way to say, hey, this one�s suspicious.



STEVE:  Right.  Well, and in fact...



LEO:  So, Steve, install GPG, would you please, I beg of you.  I do have � it�s funny, there are a number of people, since we�ve talked about this so many times now, there are a number of people who use me as a test, saying, can you read this, am I getting my key and so forth.  And I�ve responded to them.  The people who have uploaded keys to the key servers, I�ve downloaded the keys.  And every time now we exchange email, it is automatically encrypted.  I don�t see it.  It�s, you know, it�s painless on my end and their end.  We don�t really see anything going on.  But in fact it�s automatically encrypted.  It�s a very easy thing to do, and I think a very good thing to do.



STEVE:  Well, okay.  Looks like maybe � maybe I�ll have to take a look at that.



LEO:  You don�t have to.  I understand.  Your point is that why bother.  And I think a lot of people...



STEVE:  Right.



LEO:  ...feel that way.  But I think that, until everybody kind of uses it routinely, any use of it is then suspicious.  And so, you know, there�s a reason why it would be nice if everybody used it.



STEVE:  That�s a very good point.



LEO:  Yeah, yeah.  But honest, Alberto, nothing�s going on here.  There�s nothing, I mean, nothing to spy on.  Move along.  These are not the droids you want.  All right, Steve.  I think we�ve wrapped it up; yes?



STEVE:  Yup, that was the answer to the question...



LEO:  That great question...



STEVE:  ...that we�re being asked so much.  I�ve got a couple things on the burner that people are going to, I think, really enjoy.  We mentioned last week this MojoPac�utility...



LEO:  Yeah.



STEVE:  ...or product.  It looks very interesting.  I�ve opened a dialogue with the MojoPac guys because I want to understand exactly what they�re doing.  What it looks like they�re doing, and it�s hard to divine from their website because it�s mostly talking about features and benefits and, oh, this just does everything, you know, that you could ever want.  It�s like, okay, but I need to know how and exactly what in order to know where the security and privacy, you know, boundaries are.  But what it appears to do is essentially to use the facility in Windows for creating user profiles, and it allows you to make a completely portable user profile where all your applications and your data and other stuff is kept on a removable device.  Which is � it�s very cool.  The problem is, they must be doing more than that in order for their claims to be valid.  So I�m going to�� I hopefully have a dialogue going with them.  And I hope to have a complete presentation for Security Now! #62, next week�s Security Now!...



LEO:  Oh, good.



STEVE:  ...to, you know, really talk about definitively what this is and what sort of a solution it represents.



LEO:  And just to wrap up my discussion of the Parallels solution, I don�t have benchmarks.  And I�ve love to get some, and I probably will do some.  But RC2 is running under the current edition of Parallels.  There are a couple of little things that I�m not crazy about.  One is, in fact, it doesn�t look like I�m getting Aero Glass, and I think that�s because, try as I might, I can�t get Windows to assess my hardware.  And until it assesses � you know, because it�s running in a virtual machine.  Until it can do that, it can�t really decide whether to run Aero Glass.  I�ve tried the various � there are a couple of registry hacks that supposedly will make this possible, but none of them seem to work.  So, but it does run fine, and it seems to run at nearly full speed.  Until I get benchmarks, I can�t prove that.  But it�s certainly usable.  And boy, it�s great, a great way to run a beta operating system.  And that�s pretty much it.  I recommend Parallels.  And I will install a Boot Camp, and then I�ll be able to get Aero Glass and all the other cool features, I�m sure.



STEVE:  Right, right.



LEO:  All right, Steve.  We�ll wrap this sucker up in record time, ladies and gentlemen.  I hope you�ve enjoyed this edition of Security Now!.  Remember, it is sponsored, as it has been now for almost a year, by the great folks at Astaro Corporation.  They make the Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, from virus, from hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in one single easy-to-use high-performance appliance � my 120 is about the size of a router, and it does all of that � contact Astaro.com, or call 877-4AS-TARO.  You can schedule a free trial of an Astaro Security Gateway appliance in your business.  If you�re a home user, a non-commercial user, you can also download the software version of ASG for home use, run it on any PC, at Astaro.com.  It�s open source software, very powerful.  You can even, if you want, subscribe to all of those additional features, running it on your hardware.  It�s very affordable.  Astaro.com.



Also thanks to Dell.  They are also a sponsor of this podcast and TWiT and Inside the Net.  And we invite you to visit � I finally � I broke down.  Dell�s been giving me these, you know, great bargain computers to highlight on the Leo�s Picks page.  And I said, you know, these are all great, and the prices are remarkable.  But I�ve got to say, this is the one I want.  It�s the Dell XPS 700.  Let me � just check it out:  TWiT.tv/dell.  That�s the one, configured as I want � in fact, it�s my next computer for using for � we record and edit the shows on a Windows PC.  You know I�m a Mac user for many things, but on the recording and editing I use a Windows PC.  And I need a � I want a nice fast one.  And Dell�s got it, the XPS 700.  Check it out:  TWiT.tv/dell.  And if you�re in the market for a new computer, or you�re going to buy a new Dell, do us�a favor and go through that page so we get credit for it.  TWiT.tv/dell.



Steve, it�s been another great episode of Security Now!.  Next Thursday we�ll have another one.



STEVE:  Absolutely.



LEO:  I hope you have a wonderful fall afternoon in beautiful Irvine.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/


GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#62

DATE:		October 19, 2006

TITLE:		Internet Proxies

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-062.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss the entire range of applications for Internet Proxies and Proxy Servers.  They describe the many different uses for proxies while discussing both the benefits and the potential security and privacy liabilities created by filtering and caching web and other Internet content.



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting. This is Security Now! with Steve Gibson, Episode 62 for October 19, 2006:  Proxies.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.



It�s time for Security Now!, our regular visit to the deep, dark underside of the Internet, Windows, Mac, and Linux.  Steve Gibson, our security wizard, is here from GRC.com.



STEVE GIBSON:  Hey, Leo.



LEO:  Hi, Steve.  Boy, you know, once again we were ahead of the curve last week, talking about these Windows exploits, the 0-day exploits that come out right after the first � or the second Tuesday of the month.



STEVE:  Yup.



LEO:  And there was another one, a PowerPoint exploit, fortunately which doesn�t seem to be out in the wild.  It�s just � it�s amazing when these patches come out.  There were 23 patches last Tuesday.  And boy, they just � the hackers get to work. 



STEVE:  Well, and in fact I�m glad you brought that up because I wanted to reiterate that there is still this unpatched direct animation path control exploit that we talked about last week.



LEO:  Right, right.



STEVE:  It�s � Microsoft has not addressed it.  It�s not clear whether or when they�re going to.  And there is public exploit code in the wild.  I shot a note off to our friends down at Sunbelt Software, asking whether they had seen � whether their web spiders had encountered the active exploitation of this in the same way that it was like a wildfire with that VML, you know...



LEO:  Right, right.



STEVE:  ...the previous 0-day.  I�ve not heard back from them yet.  But I do want to remind people that, you know, as we talked about last week, if someone, you know, didn�t get around to doing � using the little ZERT utility to temporarily disable the handling of direct animation in Internet Explorer, if they use IE, if they have scripting enabled by default, then you really do � I think it�s worth just going and using this little bit of free software to turn that off until Microsoft patches.  And we can assume it�ll be in the second Tuesday of November that they will be patching.  So, but that still leaves, you know, four weeks of open vulnerability window.  And, you know, the way things are developing now, the malicious hackers are deliberately releasing new exploits at the same time Microsoft patches to optimize or maximize the amount of vulnerability.  And it�s all about installing junk in people�s machines.  You know, junk that no one wants installed on their machines.



LEO:  Yeah, yeah, it�s just amazing.  And the fact that Microsoft isn�t responding to this problem, this DirectX problem, surprises me, frankly.  I guess they�re still, you know, analyzing the issue.



STEVE:  Ah, yeah.  And in fact, another interesting little bit of news is Vista related.  I�m sure you�ve probably picked up on some of this, Leo.  The security companies have been very upset with Microsoft because Vista protects modifications of the kernel, which, you know, programs like McAfee and Symantec need to have access to the kernel in order to install their hooks.  Well, Microsoft�s Vista, one of the new security enhancements is a, you know, explicit protection from making any modifications to the kernel.  The problem is, you know, from an antitrust standpoint, this locks out third-party software, which has been able to use, basically, their own benign hacks in order to hack into the XP kernel to install themselves at the low level that they need to in order to monitor what�s going on.  So what�s real � I kind of got a kick out of this, is Microsoft has said, okay, well, um, yes, we see that could be a problem.  So how about this?  In the Service Pack 1 release we will provide the API, you know, brand new APIs.  Microsoft apparently is just weeks away from what�s called RTM, Releasing to Manufacturing, the final version 1.0...



LEO:  Right, October 25th, it�s one week away, yeah.



STEVE:  Yeah.  And so Microsoft is saying, well, there aren�t APIs in the kernel now that would allow this.  And so we can�t put them in in time.  Because, I mean, after all, it takes Microsoft a month just to patch a flaw.



LEO:  Right.



STEVE:  So, you know, you could argue that there�s no way, you know, they could delay Vista�s release.  So it seems unfortunate that, I mean, essentially what�s going to happen is, as we know, a major service pack release is typically, you know, 12 to 18 months downstream.  So none of these third-party tools can be developed and used until Service Pack 1 of Vista.  Which means that basically they�re going to shut out the market for third parties.  Everyone will end up using Microsoft�s new security solutions and tools, which are Vista compatible.  And as a consequence of this, it�s very likely that, you know, these traditional security companies are going to, you know, not be able to hook in their tools, and probably never end up achieving the market share that they would have if they�d been able to release their stuff right at the release of Vista.



LEO:  Well, you know, it�s complicated because you can of course say, well, this is Microsoft trying to assert a competitive advantage.  But I have to think that, given the trouble they�ve had with antitrust and the Department of Justice in the past, that they�d be very unlikely to attempt  that.  And they can make a pretty good argument, well, the reason we don�t release, you know, the reason we put this patch guard technology in is because it�s not � we�re not�worried about Symantec and McAfee, we�re worried about�hackers.



STEVE:  And Leo...



LEO:  And having an API makes it open to hackers.



STEVE:  And, exactly.  I would rather Microsoft did not open it because I think the danger of them doing that, I mean, you know, the first question that pops up is, okay, wait a minute, if you create...



LEO:  If there�s an API...



STEVE:  Yes.



LEO:  ...anyone can use it.



STEVE:  Then the bad guys can use it, too, exactly.  So, I�mean...



LEO:  I mean, it�s a win-win for Microsoft.  It both gives them a competitive advantage, and it makes their system more secure.  By the way, I�m just reading the article, it looks like that the API will only be for 64-bit versions of Windows anyway.  It won�t be...



STEVE:  Right.



LEO:  ...for 32 bits.  So...



STEVE:  Right.



LEO:  And that�s of course where the big money is, is in the 32-bit version.



STEVE:  Yeah.  So I think we�re going to see very slow adoption of 64-bit, just because, you know, the hardware is not there.  Although you could argue at the same time that  Vista is so resource-hungry that we�re going to need a lot�of...



LEO:  All that RAM, yeah.



STEVE:  ...I mean, you know, basically new machines anyway.



LEO:  Yeah.



STEVE:  Although the 64-bit platforms are probably going to be a lot more expensive than the, you know, the much more mature, you know, faster, you know, Pentium 4 machines.



LEO:  Now, today on the show we�re going to talk about proxies.  And I want to do that in a second.  But before we do, I just � I mean, this is kind of crazy, but I just got an email this morning from Megan, who has a kind of a crisis.  And I just wanted to ask if SpinRite would help with this.  I�ve been trying to help her out.  She apparently lost a folder within Outlook.  And it had a bunch of business emails that she absolutely needed.  It�s not clear from her email if she lost the entire Outlook.pst.  I think she did.  She says, �I didn�t delete anything.  I didn�t do anything.�  Is it, first of all, possible for a file just to disappear because of a hard drive error?



STEVE:  Well, yes, it absolutely is.



LEO:  Would SpinRite recover a file if it were lost that�way?



STEVE:  Probably.  If the problem was some file system damage that was not created by a virus or a malware that is deliberately rewriting something, but if it was a sector which was no longer readable, then...



LEO:  Right.



STEVE:  And, for example, we often see, you know, the testimonials page is full of people who were unable to get into Windows.  They were like...



LEO:  They couldn�t even boot.



STEVE:  It was in a reboot loop, they couldn�t boot, they couldn�t do anything.  Or something that they needed was broken.  And so they just, you know, they ran SpinRite; and almost by, you know, almost miraculously, as they describe it, now whatever problem they had is gone because the problem was as a result of a low-level hard disk problem.



LEO:  So just to make it clear, SpinRite isn�t � it doesn�t understand file systems.  It�s file system independent.  It�s not going to rebuild your table of contents.  But if the table of contents is damaged because of a bad sector...



STEVE:  Exactly.



LEO:  ...or if a file is damaged because of a bad sector, it can recover that data by recovering the data, either moving it or kind of reformatting the sector underneath it to make it readable again.  Is that right?



STEVE:  Well, that�s exactly right.  The way hard drives work today is different than the way they used to work.  In the old days SpinRite had to understand the file system because it had to relocate the clusters of data onto a different area of the drive, and then relink the file system to refer to the relocated data.  Today drives are doing sector reassignment and relocation themselves, underneath the file system.



LEO:  Is that part of the ECC process, or...



STEVE:  Well, yeah.  What actually happens is that, if you remember, when you and I demoed SpinRite on Call For Help, we could see errors occurring all the time on drives.



LEO:  Hundreds of them every minute.



STEVE:  Yes.  Yes.  Drives have gotten so dense that drives are now depending upon the error correction code, ECC, just to read good sectors, not even bad sectors.



LEO:  You�re really at quantum level now where you�re kind of guessing where the bits are and whether they�re on or�off...



STEVE:  Leo, these drives...



LEO:  ...and hoping that you�re right.



STEVE:  These drives are so dense...



LEO:  It�s amazing.



STEVE:  ...I mean, it�s just insane how dense they are.  So�what...



LEO:  I stopped buying big drives when you told me that.  You know, I buy Raptors because I like the 10,000 RPMs.  But�I buy their 150 gigabytes.  I don�t buy the big drives�anymore.



STEVE:  It�s funny because my computer supplier, whenever I�call him and need some drives, I say, okay, what�s the�smallest...



LEO:  What�s the smallest.



STEVE:  What�s the smallest drive I can still buy?



LEO:  And that�s because you�re trying to reduce aerial density and therefore make them more reliable?



STEVE:  Yes.  Yes.



LEO:  Okay, interesting.



STEVE:  I mean, you know, if you can imagine that today if we needed to we could create the most reliable 100-meg drive�ever seen because, you know, by comparison the 100-meg drives, the individual bits were so huge on the drive that�there�s no way current technology could not read them�reliably.



LEO:  Right, right.



STEVE:  But, you know, manufacturers, I mean, think about it, you know, they�re motivated by profit.  They want to cram as much data as they can.  And so drives are reliable enough.  You know, they could, you know, they could make them absolutely reliable.  Or, well, by increasing the price, or by lowering the density.  But they, you know, they�want...



LEO:  They want 500-gigabyte drives.



STEVE:  And we want them to be inexpensive.  And so...



LEO:  Cheap 500-gigabyte drives, right.



STEVE:  Exactly.  So they make them reliable enough.  So anyway, but back to ECC real quickly, what the drive does is, when it makes a correction, basically it creates an EXOR  mask.  And we�ve talked about EXORing in the past in the realm of encryption, where an EXOR mask basically flips various bits.  So the error correction code, when there�s a problem it creates an EXOR mask that inverts the wrong bits to make them right again.  Well, the length of the mask tells the drive how bad the sector is.  The longer the mask is from the first 1 bit to the last 1 bit, which is to say�the first bit that needs to be fixed and the last bit that needs to be fixed, in a linear run of bits, the length of that tells the drive whether it�s time to relocate this�sector.



So drives can tolerate, and they do now routinely tolerate, just all the time lots of little corrections.  When the correction starts getting too long, it passes a certain threshold, and the drive says, uh-oh, if I wait much longer this may become uncorrectable.  And so the drive takes the sector out of service, copies the corrected data to a new sector, and internally swaps that back into place.



Since all of that happens underneath the file system, SpinRite doesn�t need to worry about whether it�s a Linux or a TiVo drive or a Mac or NTFS or anything.  It just works with the drive at the sector level to repair things.  And SpinRite�s magic is it�s able to recover unrecoverable data.  That�s always been its claim to fame.  And it�s able to do much more than the drive can do by itself, working with the drive.  So, you know, that�s a long-winded answer to your...



LEO:  Well, what I�m going to do is I�m going to send Megan an email saying, you know, get SpinRite.  I just wanted to verify with you my initial instinct, which was it could be, in fact, just a bad sector.



STEVE:  Well, and you know, for people like her, who might be using SpinRite for a specific purpose, you know, we don�t have a demo because there�s never been a way...



LEO:  Lot of people say I want a demo of SpinRite, I know.



STEVE:  I know.  So what we do is we have, you know, no problem with someone buying it and trying it and then writing to our sales address and saying, hey, you know, it didn�t work for me, I�m going to destroy my copy, I�d like my money back.



LEO:  Wow.



STEVE:  And so, you know, we just have no problem with that at all.



LEO:  Oh, I had no idea you did that.  That�s really...



STEVE:  Oh, no questions asked, we�ll just put the money back on your credit card.



LEO:  Steve, you�re so ethical, I can�t stand it.  You�re going to � I don�t know how you�ve survived in this industry for as long as you have.



STEVE:  Well, it�s because, you know, look at that testimonials page, you know, it...



LEO:  Well, you were telling me about one guy who pirated�it.



STEVE:  Yes.  In fact, we got a piece of email last week, he�said...



LEO:  This cracks me up.



STEVE:  I�ve got it in front of me.  He said, �I must be honest and tell you I used a pirated copy of SpinRite...�



LEO:  Shame.



STEVE:  �...a friend of mine gave me to recover...�



LEO:  Because you�ve never copy protected it.  I want to emphasize this.  He�s never put copy protection on SpinRite.



STEVE:  No.  I mean, I would much rather trust our�customers...



LEO:  Yes, yes.



STEVE:  ...and not impede them in any way.



LEO:  Yeah.



STEVE:  I mean, you know, more and more...



LEO:  Good for you.



STEVE:  ...more and more, you know, copy protection is becoming a problem.  Anyway, so he says, �...a friend of mine gave me to recover 120 gig of data on a drive which suddenly quit.  As a systems admin by trade, I should know better and back up regularly.  But you know how it is.  Backups are always on a backburner, not something we think about until problems occur.�  He said, �Needless to say, SpinRite saved my bacon.  I was able to recover all my�data...�



LEO:  Yay.



STEVE:  �...then move it to a secondary hard drive.�



LEO:  That�s so great.



STEVE:  He says, �I was so thankful and happy, I just bought my own licensed version of SpinRite.  Thank you so much for an amazing product.�



LEO:  I doubt there are very many people, very many companies that can say that their pirated program worked, and so people bought it.  I mean, that�s really nice.



STEVE:  Actually, Leo, and we hear this all the time.



LEO:  That�s really neat.



STEVE:  I get this kind of mail.  And I mean, so I don�t want to formally tell people they could, you know, loan their copies.  But if anyone listening to this owns a copy of SpinRite, a friend of theirs is in trouble, I�m not going to have a problem if SpinRite could fix their system.  I would ask as a courtesy that that person then considers buying SpinRite...



LEO:  If it works, buy it, yeah.



STEVE:  ...you know, if it works for them.



LEO:  Yep.  You know, I wish we�d had SpinRite at the datacenter where the website is stored because you know we had a drive failure over the weekend.  And it was everything I could do not to get on a plane with a copy of SpinRite and fly to Dallas.  You know, I don�t think the techs there were paying much attention.  They didn�t try to recover the drive, they just pulled it out.  But there was some bad sectors, and Linux was booting read-only because of it.



STEVE:  Yup.



LEO:  And I thought, boy, if I can only get SpinRite on there, I know I could save that drive.



STEVE:  That�s the kind of thing it does all the time, Leo.



LEO:  Fortunately we had good backups, and they gave me a free drive to replace it, so it was okay.



STEVE:  Cool.



LEO:  Although I have to say it took them so long I�m moving to a different datacenter.  And now I�m using RAID 5 with three Raptors, three 150-gigabyte Raptors.



STEVE:  Perfect.



LEO:  And I think that will � that will protect us, yes?



STEVE:  Yes.  In fact, that is exactly my configuration.  I�m not using Raptors because I don�t need that much performance.  But on GRC�s web servers I use RAID 5.  I have three drives in a RAID 5 with a hot spare.



LEO:  Right.



STEVE:  And so the RAID controller is able to switch over and rebuild the RAID array...



LEO:  Oh, that�s neat, automatically.



STEVE:  ...on the fly, yeah.



LEO:  Oh, that�s neat.  Well, I think I�d still have to make a call to the network center if that happened.  But at least we wouldn�t lose anything.  And I back up, you know, we have a network-attached storage device which I back up to and everything.



STEVE:  Right.



LEO:  We didn�t lose any data, thank goodness.  Anyway, enough of � the only reason I bring this up is, if you get a chance to talk to Steve about hard drives, I mean, this is the guy who knows more about hard drives probably than any human alive, except maybe Stanley Seagate or whatever.  But�� or Shugart died, didn�t he, Al Shugart.  But...



STEVE:  Yup, Al.



LEO:  So it�s nice to get � sometimes I want to ask the � I have the privilege of asking you directly, and I do appreciate that.



You know, as long as we�re talking about security, let me mention our long-time sponsor � it�s kind of neat to be able to say �our long-time sponsor� � and the great guys at Astaro Corporation, makers of the Astaro Security Gateway.  I�ve told you before that it�s free for home users for noncommercial use.  You could download it from Astaro.com, put it on a, you know, beige box PC, any old computer lying around, and there it is, boom, you�ve got a great security device.  For a little bit more, I think it�s something like 80 euros a year, you can add antispam, antivirus, antihacker, all of this great stuff, all open source, all high quality.



I also want to tell you, though, that the Astaro Security Gateway appliance is designed for business.  If your small or medium business network needs superior protection from spam, viruses, and hackers, as well as complete VPN capabilities, intrusion protection, content filtering, and an industrial-strength firewall, all in an easy-to-use, high-performance appliance, contact Astaro, Astaro.com, or call 877-4AS-TARO to schedule your free trial of an Astaro Security Gateway appliance in your business.  Astaro, proud sponsors of Security Now!.  Astaro.com.



Today we�re going to talk about proxies.



STEVE:  Yes.  We talked last week about MojoPac, and I said that I wanted, you know, the plan was this week to talk about MojoPac.  However, unfortunately, as I tried to communicate with them, because as I said I wanted to really understand what the technology was, I did a lot more research, and I found out that, you know, at the moment they�re sort of in � they�ve got problems.  From the looks of it, they jumped out of the gate prematurely.  There was the fall DEMO was the weekend before the Podcast Expo that you and I attended...



LEO:  That�s right, it was in San Diego.



STEVE:  ...a couple weeks ago.



LEO:  That�s right, September 26th, I think, yeah.



STEVE:  Yup.  And Mark Thompson was actually one of the 50 companies that was chosen to show.  Well, the MojoPac company was another one, as well as a third company called U3.  I mention that because U3 has something very similar.   Unfortunately, the MojoPac stuff has apparently had a lot of problems.  It was in beta, working in a certain way.  When they took it to v1.0, they made a major change that involves basically their own copy protection scheme.



LEO:  Oh, boy.



STEVE:  It used to run on USB 1.0 drives, which do not necessarily have to have a built-in serial number.  The spec for USB 2.0 incorporates a serial number which locks their MojoPac stuff to the drive.  Well, so what happened was, people who were all excited about MojoPac and using it in beta, when it went to v1.0 it broke most of what people were doing without any announcement or word.  Then when people started complaining, they shut down the forums.  MojoPac shut down the forums in order not to allow these complaints to be seen.  Which really...



LEO:  Such a case study on how to do things wrong.



STEVE:  It was amazing.  And then they had � the beta was also locked so that you could only use it for 30 days, that is, the trial, you could only use it for 30 days or 99 boots.  But it turns out the way people were using it, they would boot it many times a day, so it ended up lasting a week or two, then it would refuse to work any longer.  But the e-commerce system was not online yet, so people could not buy it...



LEO:  Oh, boy.



STEVE:  ...and could not register it.  Well, a lot of that has just been fixed, just in the last couple days.  I�ve been trying to get someone on the phone.  I�ve sent email, I mean, even to the Whois registration email addresses, because I can�t get any response from anybody.  And so I just thought, okay, let�s � I�m going to back off a week.



LEO:  Let�s not talk about this product.



STEVE:  We can�t.  We really � I think it�s not quite ready for primetime.



LEO:  Not ready yet.



STEVE:  And it does seem like there are problems with the technology because it doesn�t perform a full virtualization of the system.  So people have been finding that registered software that locks itself to the computer won�t � it will see a different computer when you move it to a different environment.  Well, the whole idea is for it to be portable so you�re able to, you know, stick it in any computer you happen to be visiting, and it brings your environment with�you.



LEO:  Right, right.



STEVE:  Well, if you are relying on the programs that you�ve got, and they suddenly say, oh, you�re not authorized, then, you know, it defeats the purpose.  So anyway, while doing all this, I found another company called U3 that has something similar and far more mature just appearing.  And they also announced and released at the fall DEMO show.  And then there�s another company called moka5, which is an interesting, really interesting approach coming out of�Stanford.



Anyway, you know, we�ve been talking about how virtualization technology is going to be moving forward.  Well, basically these are three other virtualization solutions that I want to cover next week.



LEO:  Great.  Because I�m very interested, and obviously there�s a lot of demand for this kind of a product.  Of course, if it doesn�t work, it�s not worth...



STEVE:  It�s a cool idea, the idea that you carry your environment and your applications and your data with you, you plug them into any...



LEO:  Everybody wants this.  This is great.



STEVE:  ...any Windows � well, and of course it�s been enabled by the fact that we now have affordable 4-gig USB flash drives.  You know, you couldn�t have done it back when people were talking about 64 megs...



LEO:  Right, right.



STEVE:  ...because contemporary applications and data won�t fit there.  But now that you�ve got multiple gig flash drives, it�s like, wait a minute, this is � I mean, it inverts the whole model.  So, I mean, it�s very exciting.  And the other thing, too, is the MojoPac guys really seem to be a little bit license heavy.  For example, you can move your MojoPac between drives I think twice, and never again.



LEO:  Oh, please.



STEVE:  And it�s like � I know.  I know.



LEO:  Why why why why why why.



STEVE:  And the problem is, you know, you would like � and it�s not cheap.  It�s $29.95 now, but it�s going to be 50 bucks after it comes out of its trial phase.  Well, that seems like a lot of money for what they�re doing, especially�with all the limitations that they�re putting on it.  And it seems like a great idea.  So my sense is that they are not going to be alone in this market for long, and there will likely be some free or open source solutions that are coming along.  And in fact, I�ve already pretty much found one.��So...



LEO:  Oh, good.  All right.  Well, we�ll talk about all that next week.



STEVE:  Yup.



LEO:  This week, proxies.  And you see this a lot.  I see proxies all the time.  You used to see it more often.  You know, it�s hidden away in the browser settings, and every once in a while you�d see a program that�d say, do you have a SOCKS proxy?  And then people were talking about proxy servers.  It doesn�t seem like people talk about it much anymore.  What is a proxy, and what is it used for?



STEVE:  Well, it�s the kind of thing we want to talk about because it can be � it can enhance your privacy and anonymity.  And it can also be a security vulnerability and�problem.



LEO:  Ah, okay.



STEVE:  Essentially, stepping back and looking at a definition, you know, the word �proxy� itself implies somebody acting on your behalf.  You know, when you give, like, voting proxies for somebody else, you are saying, you know, you have my voting proxy.  You can vote the way, you know, I instruct you to.  And so they do that on your behalf.  The formal definition of, for example, an Internet proxy, or a web proxy, is that your client, for example your browser, instead of connecting to the remote server, it connects to the proxy server.  It makes the request of the proxy, which then turns around and, on your behalf, makes the request to the remote server.  The result comes back to the proxy; it then turns around and, through the connection you have to the proxy, it returns the data to you.



This is actually being done by many ISPs.  And in fact my local Cox Cable provider often proxies in a transparent fashion, that is, you as a customer of the ISP, you believe you�re connecting to the remote machine.  In fact, you are being transparently proxied, that is, it�s not a proxy that you even see or are aware of.  But you are � you�re actually connecting � your connection is intercepted by the ISP.  It then makes the request.  The reason they do this is for caching.  The ISP naturally has to pay for all the bandwidth it uses out to the Internet.  But if instead it can put a large caching proxy at its boundary to the Internet, then maybe some of the things your web browser is asking for are in its cache.



So what happens is, the first person, for example, to go to Amazon.com will make a request for the Amazon page.  And due to, you know, the uniqueness of the page, there are all kinds of, you know, it looks very cryptic, if you look at one of these Amazon.com pages, because they don�t want their page to be given to anybody else.  So what happens is you make the request to Amazon.com.  The proxy intercepts it, gets the page from Amazon, and then returns it to you.  As we know, we�ve talked about how web pages are built, that web page contains all kinds of other little pictures, you know, pictures of buttons, pictures of the user interface, all kinds of other things, which your web browser then sends out in a series of requests.  Well, those are much more generic than the web page, the custom web page you�ve received.  So it�s very likely that, if anybody also behind the same proxy, in this case an ISP�s whole domain, if they had recently gone to Amazon, and their browser had pulled all of those other things back through, the proxy would cache them, if it had permission to do so, and keep them�locally.



LEO:  That�s why � that�s that argument I have constantly with our advertising agency because their numbers are so low, and I think a lot of it is because what would be the number one thing you would cache?  A podcast.



STEVE:  Yes.



LEO:  If a thousand Comcast customers all ask for the same Security Now! podcast, I bet you anything it counts as one�download.



STEVE:  Well, and it�s good for two reasons.  First of�all...



LEO:  Saves me bandwidth, that�s for sure.



STEVE:  Well, exactly.  It saves you bandwidth � okay, there�s three reasons.  It saves you bandwidth, it saves the ISP�s bandwidth...



LEO:  Right.



STEVE:  ...to the �Net.  Remember that they�re paying for their usage...



LEO:  They only get one copy.



STEVE:  Exactly.  They get one copy...



LEO:  And it�s faster, too, to the local customer.



STEVE:  That�s the third advantage, exactly, Leo, is that we�re getting it from our local ISP.  Even though it seems to be coming from AOL, it�s actually coming from a stored copy on our ISP, so it�s much faster.



LEO:  Is there any way for me to tell that I�m getting a proxied copy instead of � a cached copy instead of the original copy?



STEVE:  There is no way from the user�s standpoint in the case of a transparent proxy.



LEO:  How about from the provider�s standpoint?



STEVE:  There actually is, if they cared.  This is the...



LEO:  I care.  I care deeply.



STEVE:  It�s interesting.  This is a problem that I had and solved with ShieldsUP because � that�s how I happen to know that my local Cox provider is using a transparent proxy.  Because what would happen would be, if someone at Cox, for example, went to ShieldsUP, they�re using a web page that they think is coming from me, but it�s actually been intercepted by the Cox transparent proxy.  The IP address that I receive from � on my web server is the proxy�s IP�address.



LEO:  Not the local user�s.



STEVE:  Exactly.  And so if I weren�t, you know, a smart boy, I would be testing the security of the proxy server.



LEO:  Of Cox.



STEVE:  Exactly, rather than the actual visitor who�s coming to GRC to get their shields tested.



LEO:  So you are able to get around that.



STEVE:  Yes.  I do it two ways.  First of all, SSL, as we�ve talked about before, is a key for avoiding proxies because, unless the proxy is explicitly configured � and we�ll talk about that in a second, what it means to have an explicit proxy as opposed to a transparent proxy.  But a transparent proxy cannot transparently intercept SSL because the certificate � there�s no way it can give your browser a certificate that matches the site.  So when you establish a ShieldsUP connection, the first thing I do is switch you into a secure SSL connection to avoid the proxy.  The other thing that happens is that proxy servers will add some headers to the requests that they forward to the server, which is another � which is a nice way, Leo, that your advertising technology could know that this was actually a request coming from a proxy and not from the user, although it still wouldn�t let the � it wouldn�t let your server...



LEO:  We wouldn�t get a number, we would just...



STEVE:  Right.



LEO:  We would know that who�s requesting this is not an end user but a proxy.



STEVE:  Exactly.



LEO:  But we would never know how many end users ended up sharing that copy.



STEVE:  That�s true.  And there�s no way to know that.  What happens is, in an HTTP request, there are headers at the beginning of the request that contain a bunch of different information, like, you know, what the user�s client is.  That�s where cookies are offered along with the request.  The user�s � a user agent.  Well, one of the things, an optional header that could be included says � it�s called � it�s an X header.  It says X-Forwarded-For, and then an IP address.  So that�s where it�s saying, I am a proxy forwarding this request on behalf of this other IP.  So then you�d get the IP of the proxy server and the IP of the actual user behind the request in order to see that that�s what was going on.  And there�s another header called Via.  And so that says this is coming via, you know, this server.  So there are some headers that will expose that this is going on to the destination server.  But over on the user side there�s no way for them to know.



LEO:  Well, I�m going to have to go send a note to our advertising agency and say, are you looking for these�headers?



STEVE:  Well, now, there are some other things that are going on that could be done in order to give you reliable counts.  Remember at one point, actually early in this discussion I said �if the proxy has permission to cache the content.�  So one way we know we can avoid caching is by using SSL.  SSL used to be much more expensive.  Sort of in the old days of the �Net we would try not to use SSL because of the overhead of establishing connections.  That was especially true back in the HTTP 1.0 days, where you would establish a separate connection for every single asset that you were downloading from the server.  So you were just constantly establishing SSL connections that do have that crypto overhead at establishment.



Well, that�s one of the reasons that the next-generation spec, the HTTP 1.1 spec, which is what virtually everyone is using today, it limits the total number of connections by default to two, so that your browser can establish two simultaneously connections to a server.  But now it will stream multiple queries and responses through those two connections.  So that dramatically lowers the per-asset overhead of SSL because it creates the connection once and then leaves it up until the browser finally says, okay, I�m done with this server.  So it means that SSL is a far less overhead technology.  And also our machines at both ends, the servers and the client users� machines are so much stronger now that SSL really doesn�t represent an impediment.  So that�s one thing that could be done.



The other thing is that, when the server returns the request to the user�s client, which may be intercepted by a transparent proxy, one of the headers in the response is an expiration header, or can be an expiration header.  And there are even cache prohibition headers.  It�s possible for the server to say, this expires in.  And it can express it as a future time or a duration.  So basically, I mean, and that�s really what you�d like.  You�d like the server to say these GIF images that I�m serving for the page have a lifetime of a day, for example.  And so what that does is, that permits not only the transparent cache, the proxy cache that may or may not be in line, but that�s something that the user�s own browser pays attention to.  This is where you sometimes see a difference, if you refresh your page, especially at least for the IE, if you hold the Control key down when you do a refresh, sometimes you�ll get a different page or a fresher page.  What holding the Control key down does is it says to IE, do not use any assets in your cache.  Go get fresh copies.  So what...



LEO:  The Shift key on Mac, for those � yeah.



STEVE:  Okay.  So the idea is that, you know, it�s a benefit for users and for the server because the server says, here�s a page; and, oh, by the way, all these little, you know, page decoration things, they�re good for a day.  So as long as it hasn�t been a day since you last asked for it, feel free to use it from your local cache, that is, your local browser cache.  And what that has the effect of is it speeds up the second and third and successive pages on the same site.  As long as those pages are using the same assets, your browser takes them from your own machine locally.  Similarly, any transparent cache is basically obeying the same rules.  It receives the assets, and it will cache them for all of the users that might be behind the proxy served by the same ISP, as long as that thing hasn�t expired.



Now, the other thing that can be done for volatile content, for example, ecommerce pages, you would hope that they�re all going to be done over SSL, so they�re not going to have a problem.  But I�ve seen sites where you�re only secure during the sensitive transaction involving a credit card, and then you�re no longer secure.  Hopefully those pages are all marked as non-cacheable.  There�s a header that says absolutely never cache this.  The other thing that can be done � and sometimes it�s done redundantly, it�s what I do on my own site � is I show an expiration in 1997, which is actually a commonly used data in the past.  That will also prevent anything from caching that content because it�s like�� it�s pre-expired.  It says, you know, this expired in 1997.  Well, now it�s 2006.  And so, you know, obviously that�s no good.  So there are things that could be done to prevent these things from being cached.



But you�re right, Leo, there�s no way to know, if the content you�re serving isn�t pre-expired or served so that it cannot be cached, and probably is being cached, because it�s such a win for ISPs.



LEO:  So I have to figure � I remember that @Home kind of pioneered this.  That�s one of the earliest broadband ISPs.  That was one of the things they were most proud of was this cached proxy servers.  And I bet you that we�re missing a lot of downloads from the big broadband ISPs because I�m sure Cox, Comcast, Roadrunner, they all do this.



STEVE:  Yes.  I mean, it really is a win for them.



LEO:  Yeah.



STEVE:  Okay.  Now, what we�ve talked about so far has been transparent ISP caching.  There�s another type of proxy which is not transparent, which is something that the user, many users often in a corporate setting, they have to configure their browsers to use their corporate proxy in order to get access to the web.



LEO:  That�s that setting in the browser that you see.



STEVE:  Exactly.  And here�s an interesting tip.  Once I went down to my office, and I think it was in the evening, because Sue was having some problems with her computer.  I fired up IE and waited for a long time, I mean, more than I�m used to, for it to get going.  And I thought, huh, I wonder what�s going on?



Well, I poked around, and I found that she had left IE set in its default case, which is �automatically determine proxy settings.�  It turns out that, if you haven�t disabled that, every time you launch IE you are hung for a while, while IE looks for either a DHCP or a DNS server that can point it to a file containing its proxy settings.  So for anyone listening who�s an IE user, if you go through the normal menu, you go to � under the Tools off the main IE menu to Internet Options, then choose the Connections tab, and then at the bottom is a LAN settings button.  You should normally, unless you need to use a proxy, you should uncheck �Automatically determine the proxy settings.�  If you do that � I�m not sure if you have to restart IE or reboot, probably at least you�ll have to restart IE � you�ll be surprised how much faster Internet Explorer gets going.  Because the way these proxy settings are determined automatically is that Internet Explorer sends out a request to a DHCP server.



Now, we�ve talked about DHCP frequently because that�s � it�s what�s engaged when you tell your system to obtain its IP settings.  Well, it turns out that DHCP can actually provide a much wider range of information if it�s asked to.  So beyond just my IP address, my subnet mask, and my gateway, it�s actually able to provide additional information and, in fact, in this case a URL for a server that can give the browser a file telling it how to configure itself for local proxy usage.



LEO:  Oh, that�s cool.  I like that.



STEVE:  It is cool.  Now, the bad news is, first of all, this was all designed by Microsoft for IE in a 1999 draft, you know, an IETF, an Internet Engineering Task Force draft.  It has never been ratified.  It was never adopted.  It�s expired.  In fact, I think it expired in 1999.  I think it was actually older than that.  It expired; it was never renewed.  And of course here we are now in 2006.  So it never really took hold.  The problem is, if DHCP, if no local DHCP server responds, Microsoft�s IE falls back to using DNS queries.  It uses your machine name, you know, within a corporate environment you might have, like, your machine name or number, then, you know, dot your division, dot your branch, dot your company.com, for example.  And so what it does is, it looks for a specific DNS entry, and it goes backwards down the line, stripping off one dotted name at a time, until it gets all the way back down to your company.com, or org, or edu or whatever.



Well, so obviously that takes time, which is where all this delay is coming from as we�re waiting for IE to launch.  It always does that if you have it set to obtain the proxy settings automatically.  The problem is, it makes a mistake if you�ve got more than a single name in your top level domain.  You know, it works fine for, you know, GRC.com or, you know, UCI.edu, for example.  It fails, though, with those URLs like co.uk.  It actually thinks that co is your company name.



LEO:  Oh, please.



STEVE:  It ends � I know.  It�s such a crock.  It ends...



LEO:  It�s so easy to figure that one out.



STEVE:  And it ends up being a security problem because it makes a request out onto the Internet for, I think it�s a file called W � oh, it�s wpad.co.uk.  Because it thinks you�re at a company called co in the top-level domain uk.



LEO:  Right.



STEVE:  And it turns out that that file, I mean, that machine was created, and it can give your browser bogus proxy settings, causing it to reroute all of its traffic�there.



LEO:  Oh, interesting.



STEVE:  Thank you, Microsoft.



LEO:  Boy, you�d think they�d know a little bit about TLDs by now.



STEVE:  Yeah.



LEO:  It�s just not that hard.



STEVE:  Well, it makes a mistake.  Now, I�m not sure that the latest versions haven�t fixed this.  Who knows what�s going on.  But it�s definitely the case that anyone who doesn�t need to use a locally configured proxy server definitely wants to go in and turn off that automatic proxy discovery technology.  It�s bad in the first place.  And it slows down every time you use Internet Explorer and fire it up for the first time.



So what this does, essentially, is it gives your browser a URL and a port.  Often it�s, like, port 8080 that is used internally.  And all of your browser�s traffic is rerouted through your company�s local proxy server.  Now, that has a number of different benefits, you know, which really can be useful and enhance the experience.  For example, it can be doing caching.  It will often be enforcing policies.  You might have your corporate IT, you know, blacklisting a whole bunch of sites that they don�t want anyone going to, so it allows them to perform filtering.  It also allows them to perform, you know, on-the-fly malware filtering, so that you�re not going to be getting malicious scripts and code and things, by forcing the browser to go through this locally configured proxy.  So it can be that this stuff is being done transparently.



But more often in a corporate setting you�ll find that, you know, if you don�t use their local proxy, they�ve got port 80 blocked at the corporate firewall, so you�re not able to get out and access a server on port 80.  You are forced to configure your browser to use your employer�s proxy, which in the process of doing so means that all of your traffic goes through their filter for, you know, for whatever purposes.  And unfortunately, it does mean that, you know, there are privacy concerns.



LEO:  Right, right, right.  So what should you do?



STEVE:  Really you have no choice at that point.  You could�� and we sort of talked about this � you could use, you know, like a Hamachi, or GoToMyPC...



LEO:  Or VPN...



STEVE:  ...or a VPN tunnel, in order to get out of the corporate shield.  And of course, you know, then there�s a problem.  If your corporation is allowing that, that�s controversial because then you are explicitly avoiding whatever, you know, security policies they�ve put in place for the purpose of protecting themselves.



LEO:  Right, right.



STEVE:  So that�s, you know, that�s of dubious value.  And, you know, you could imagine people in the future are going to be, you know, blocking these sorts of things because, you know, it does open holes through the corporate security.



LEO:  Right, right.



STEVE:  And finally, there are other proxies, I mean, just sort of in general.  There are, for example, compression proxies, which cell phones and PDAs are beginning to use more and more.  They will connect through a proxy.  And its job is to reformat large pages to fit much smaller screen sizes.  So there you�re actually seeing, you know, content being redesigned on the fly in order to fulfill some specific niche need of that proxy user.  And so, I mean, the whole concept of a proxy is something which is in between you and your remote connection and is probably doing some sort of filtering function.  There�s even a very popular local proxy that you actually run in your own machine, called Proxomitron.  Proxomitron...



LEO:  Oh, yeah, we�ve recommended that for years.



STEVE:  Yeah, I mean, it�s a terrific...



LEO:  It�s the worst-looking piece of software I�ve ever seen, but it does get the job done.



STEVE:  Yes.  It is � it�s not � and it�s extremely tech-y, and not very user friendly.  But the idea is, it sets up a little local web server on your machine.  You configure your web browser to use it as, you know, your own machine as the proxy server.  So you make your request to Proxomitron, just like we were saying.  Then it issues the request from itself in your computer.  It comes back.  That allows it to impose itself in between your browser and the outside world and perform whatever filtering and, you know, antispam, anti-advertising, all the different things that it�s able to do on behalf of your system.



LEO:  That raises an interesting question.  What kind of performance hit do these proxy servers impose?



STEVE:  Well, now, that�s a very good point, Leo.  Certainly the fancier they are, the more they�re doing, the more performance penalty you�re going to have.  And a simple caching server is very low overhead.  You know, the instance of a caching server that an ISP has, as we�ve said, due to the fact that it will often have substantial amounts of content that are current in its cache due to somebody else having recently gone to MSNBC or MSN or Amazon or eBay or whatever, I mean, the net benefit is a huge gain because you�re not loading down that remote server, the destination server, and you�re getting your content back on essentially what is a LAN, you know, your own ISP�s LAN is, you know...



LEO:  So that�s a big improvement.



STEVE:  ...all of the...



LEO:  That speeds up everything.



STEVE:  Yes.  And also...



LEO:  But something like Proxomitron might slow it down�because...



STEVE:  Yes.  And also Proxomitron is very powerful, inasmuch as it�s using regular expressions, it�s using scripting, it�s got typically lots of layers of things.  One of the things that I�ve talked about and just have never gotten around to is this notion of GRC�s net filter, which would be a transparent filter to do these sorts of things, but of course I�d write it in Assembly language; and, you know, I�d really...



LEO:  Make it efficient.



STEVE:  Make it really efficient and way prettier and more user friendly.  So it�s on my list of things I hope to get around to one of these days.



LEO:  Yeah, someday.



STEVE:  I know.



LEO:  It�s a long list, folks.



STEVE:  It�s a growing list.



LEO:  Long and growing.



STEVE:  And lastly, I�m going to reserve an in-depth look at one additional proxy system for its own entire episode because it�s so cool.  Many people are interested in it and are talking about it.  And that�s TOR, The Onion Router�system.



LEO:  Yes, we get lots of questions about TOR.



STEVE:  Yes.  It�s really cool technology.  I want to give it its own show because it deserves it.  And it�s basically�� it uses a chain of explicitly privacy-enhancing proxies in a very clever way, using essentially nested encryption that creates � the reason it�s called an �onion router� is it�s like layers of an onion, which are wrapped and unwrapped.  And we�ve got all of the background from our crypto series to understand the use, its use of symmetric and asymmetric crypto keys.  I mean, it�s just been beautifully designed.  So we�re going to talk about that here before long, in a couple weeks.



LEO:  Good.  Well, we made this an extra-long episode because I slowed you down at the beginning.  But I�m glad we talked a little bit about proxies.  I know people are very interested in that, and we�ve seen that word around for a long time.  And there are all different kinds of proxies.  Some could be an advantage; some could be a security issue.  And it just depends on how it�s being implemented, I guess.



STEVE:  There actually have been cases where proxies have, by mistake, they have cached malicious pages.



LEO:  Wow.



STEVE:  And so after the server was taken down, the server�s content had been scattered all over the �Net in ISP transparent caching proxies which continued to infect people�s systems.



LEO:  That�s bad.  You�ve got to be careful what you cache.



STEVE:  Well, and in fact there have been search engines that have been guilty of the same thing.



LEO:  Right, right.



STEVE:  Since search engines cache, you know, basically, you know, Google � I don�t mean to single out Google because all search engines do this, or the ones that are doing caching do � they will keep copies of pages.  They don�t know that it�s a malicious page.  But they�ll keep it in their local cache.  And if you ask, they�ll, you know, serve it to you.



LEO:  Right.  It�s there.



STEVE:  Yup.



LEO:  Yup.  Although I would imagine, certainly in this day and age, that Google would spend some effort trying to sanitize that stuff.



STEVE:  Well, of course, as we know, Google is now explicitly using a list of known malicious pages and warning people, if they click on a link � I actually got that warning a couple days ago when I was poking around.



LEO:  Oh, really.



STEVE:  Yeah.  It�ll say, this is a potentially malicious page.  Are you sure you want to view it?



LEO:  Oh, that�s really interesting.  I�ve never seen that.



STEVE:  It�s really a cool service.



LEO:  Yeah, that�s a good idea.  All right, Steverino.  I appreciate your time, as always.  We remind people that SpinRite is the ultimate disk recovery and maintenance utility and available from Steve�s site at GRC.com.  We also thank the folks at Dell for providing the support for this podcast.  They�ve been a great sponsor for the last couple of months.  And every week we add new picks to the Leo�s Picks Page at TWiT.tv/dell.  If you�re getting ready for Vista, you�re ready to buy a new computer, you�d just like to see what�s out there in terms of laptops and desktops, we�ve got laptops and desktops and other things all on the page.  And we�d appreciate it if, even if you don�t buy those items, if you click through there, we get credit for anything else you do buy at TWiT.tv/dell.  Thanks to Dell for their support.



Steve Gibson, I think we�ve wrapped up another thrilling, gripping episode of Security Now!.  We�re going to call it Security and Hard Drive Maintenance Now!.  A new name for the show.  I apologize for bringing that stuff up.  I just, you know, when I can have you to ask questions, it really is a valuable opportunity for me.  And I know people are interested in these subjects, so...



STEVE:  Yeah, I�ve actually had people want to spend more time talking about SpinRite, which I � I mean, I want to keep it in people�s minds because...



LEO:  Even just how drives work would be of interest.  It�s not security, but you know so much.  I�m sure in order to write SpinRite you had to really learn the details of drive operation right down to the nitty-gritty.



STEVE:  It�s my life.



LEO:  Is it, you know, it sounds like it�s changed a little bit since when you first started writing SpinRite.



STEVE:  Oh, yeah.  I mean, remember that, you know, the original catalyst for SpinRite was interleave optimization.



LEO:  Oh, yes, I remember that.



STEVE:  Yes.



LEO:  You�d set the interleave size when you first formatted a drive.  Oh, those dark days are gone, thank goodness.



STEVE:  The original concept was to do a nondestructive, low-level reformat.



LEO:  Right, I remember that.



STEVE:  No one had ever heard of it.  And in fact, when Peter Norton invited me up to Santa Monica because he wanted to buy SpinRite from me, he said, you know, Steve � and of course he was famous for the Norton utilities.



LEO:  Right.



STEVE:  And their own reviews, their surveys of what their customers of the Norton utilities wanted, they said they wanted SpinRite.  And so he had me up for lunch to, you know, what�s it going to cost to buy SpinRite from you?  And of course not selling it to Peter was the best decision I ever made in my life.  I mean, literally.



LEO:  Is that true?  Why is that?



STEVE:  Oh, because, you know, that was in the early days of SpinRite.  And I�ve been, you know, basically thriving from SpinRite, and SpinRite�s been thriving from me, you know, for all these years.  If I had sold it to them...



LEO:  That�d have been it, one time, be out, and that�s it.



STEVE:  ...I wouldn�t have it, but then neither would they.  Actually, they ended up cloning it.  And I�m being polite because I know this is not Peter�s fault.  But we found our code in their version which they called Calibrate.



LEO:  Uh-oh.  Uh-oh.



STEVE:  After I declined to sell it...



LEO:  I remember Calibrate, yeah.



STEVE:  ...they came out with Calibrate.  But it ended up, we ended up winning from that, too, because since they hadn�t really written it, they couldn�t support it.  And so their customers would call, and their own support people ended up saying, well, why don�t you just get a copy of�SpinRite?



LEO:  That�s what we stole it from anyway.



STEVE:  So we ended up getting referrals from them.



LEO:  Oh, that�s hysterical.



STEVE:  But Peter said � he said, �You know, Steve, when I heard that you were doing a nondestructive, low-level reformat,� he said, �I just shook my head and kept waiting to see a mushroom cloud coming up from, you know, south of me in Southern California.�  He says, you know, �How could you possibly do that safely?�  And I said, �Well, that�s, you know, that�s my magic, so.�



LEO:  And of course the mushroom cloud eventually came from�the other side of the valley.  But that�s another story�entirely.



STEVE:  Exactly.



LEO:  For another day.  Steve Gibson, a pleasure, as always.  GRC.com for show notes, the 16KB versions, and of course Elaine�s great transcripts.  GRC.com.  And we will see you next Thursday, and maybe we�ll talk about MojoPac and...





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#63

DATE:		October 26, 2006

TITLE:		MojoPac

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-063.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo get deeply into the new MojoPac product from RingCube Technologies.  After spending several days plumbing the depths of this intriguing new idea for installing secure and private Windows program and file installations onto transportable USB devices, Steve tells all about what he found and what he believes it means now and in the future.



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 63 for October 26, 2006:  MojoPac.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.



It�s time to say hello to Steve Gibson and another great Security Now!.  Hello, Steve, how are you?



STEVE GIBSON:  Hey, Leo, great to be back.



LEO:  Fall has hit.  I don�t know about Irvine, but Petaluma the leaves are starting to drop off the trees.  It�s really got a great fall feeling to it.



STEVE:  Well, you guys get a lot of rain up in Northern California, too.



LEO:  We did.  We got some rain, yeah.  So, but it�s been a little nippy, actually.  So I think that�s why.  Warm during the days, in the 70s, but at night getting a little chilly.  I don�t know why I�m giving you the weather forecast.



STEVE:  I don�t know why we�re giving 100,000 listeners the weather forecast.



LEO:  Yeah.  That�s one thing to give you the weather forecast.  Maybe we should talk about security.  What�s up�today?



STEVE:  Well, today we�re going to talk about MojoPac.



LEO:  MojoPac.



STEVE:  Last week I thought we were going to talk about MojoPac and U3 and something called moka5.  But in the interim I�ve learned a lot about MojoPac.  I did finally get a hold of the MojoPac people.  Actually the parent company is a company called RingCube.  I had a conference call with the CTO, their chief technology officer, to get all of my, you know, deep techie questions answered.  The problem I had was that their website is all about features and benefits, you know, it�s very sales and marketing.  But, you know, as is always the case, I wanted to understand what they were actually doing, what was going on, you know, underneath.  What was the technology?  Was this virtual machine technology, you know, and how they�d implemented it, and to what level.  Because what that � essentially everything that it can do flows from the way it does what it does, of�course.



LEO:  Yeah.  And I think everybody�s seen the hype, or at least a lot of people have, and kind of taken it on face value.  And of course that�s why we�re counting on you to tell us what�s really going on and if it really does what it says it does.  We�ve heard some problems, too.  I�ve gotten some emails from companies who say, you know, our licenses didn�t work once it was installed on MojoPac, things like that, so.



STEVE:  Well, and I can address that because now I understand from � by understanding the underlying technology, I understand why they�ve had those problems.



LEO:  Ah-ha.



STEVE:  And so as a result, and because U3 and moka5 and a couple other portable app solutions are so different, we�re just going to talk about MojoPac today.  This will be the MojoPac episode.  And then but the other things are also neat in a different way, and so we�ll talk about those in future episodes of Security Now!.  In fact, I think, you know, like near-term future episodes.



LEO:  Oh, good.  Well, this kind of follows on what we just finished, which was our virtualization series.  So this is kind of another kind.  It�s not really virtualization, but it�s something else, something related.



STEVE:  Well, yes.  So here�s the story.  MojoPac is a cool thing.  I�ve downloaded it.  I�ve been playing with it for a few days.  And there�s a lot of good about it.  But what it�s doing is difficult to do.  Essentially, it�s not virtual machine technology, as we�ve been talking about it, at all.  What it, I mean, I don�t want to say that it�s rootkit technology because that has a negative connotation.  But it�s friendly rootkit technology.



LEO:  Oh, interesting, huh.



STEVE:  What they�re actually doing is, they are � they�re installing a dynamic driver.  So jumping ahead a little bit, you are a MojoPac user.  You�ve got this USB device.  And that can either be a hard disk drive or a solid state, you know, Flash ROM dongle.  You stick it into an unsuspecting Windows XP machine that has never seen MojoPac before, has nothing Mojo-ish installed on it at the moment.  And so what happens is the autostart.ini fires up, if it�s enabled on that Windows machine, so � on that Windows XP machine.  It�s also important to say that this won�t work on Windows 2000.  This is an XP-only solution.



LEO:  Okay.



STEVE:  So one issue is that, you know, power users may have disabled autostart; or, you know, other systems may have it disabled for one reason or another.  So you may have to manually run the start.exe program on your dongle or your drive, if the hosting machine has autostart disabled.  No big deal.  But it�s, you know, a little bit less automatic.  In any event, when you run this start.exe, it essentially � it dynamically loads a kernel driver into the system which deeply hooks the Windows native API.  We�ve talked about kernel hooks...



LEO:  Those are words that scare me when you say that.



STEVE:  I know.  And in fact I don�t � the other word I don�t want to use to describe MojoPac is �kludge� because kludge also has lots of negative...



LEO:  Yeah.



STEVE:  ...negative connotations.  But frankly, you know, a personal firewall, a third-party personal firewall is also a kludge because, you know, it�s doing something to Windows that Windows was never designed to have done to it.  And, you know, and that�s why personal firewalls have caused problems for people.  They�ve, you know, conflicted with other applications, things break, blah blah blah.  You know, it�s doing something deeply to Windows in the kernel that Windows was never designed to accommodate.  Well, MojoPac is doing the same thing.  And so in that same sense it�s a kludge.  But it�s a kludge with benefits.  I mean, it�s...



LEO:  It�s a kludge with power.



STEVE:  It�s a kludge that you might want to have.



LEO:  Uh-huh.



STEVE:  You know, much like you want to have a personal firewall.  So what happens is, when you install MojoPac, there�s no virtualization stuff going on.  Basically it reaches deeply into Windows and hooks the kernel, many of the kernel-level APIs...



LEO:  See, already I don�t � this is making me very nervous.



STEVE:  Well, and I�m going to read you, I mean, I�m going to flesh out this opinion which comes from the technology with some real-world examples of the consequences.  So it makes these low-level hooks.  And this is the way...



LEO:  You know, before we go too far, I don�t think we�ve really described � have we described what it does from the user�s point of view?



STEVE:  Ah, very good point.  Let me back up, yeah.



LEO:  We�re talking about what it does from the technical point.  But why would � why are people so excited about�this?



STEVE:  You�re right.



LEO:  What does it do for the user?



STEVE:  Okay.  So the experience I�ve had, which is why I started off saying this is a really cool thing, is I downloaded the MojoPac, the MojoPac exe.  I installed it on a 512K dongle.  Then I installed my favorite newsreader, Gravity; and I installed my favorite outlining tool, which is something called ThoughtManager Desktop, which I � because I love outlining, you know.  I work from an outline every time I�m here in front of the microphone with you, Leo, because I, you know, going through all the points I want to remember about what I�m talking.  So, and then I imported all of my working outlines.  I got online, and I downloaded 3,000 newsgroup messages from the GRC news server, all in this 512K dongle.



Then I uninstalled � I shut down MojoPac and ejected the dongle, pulled it out, went over to another different Windows XP machine that had never seen any of this, stuck it in the USB port.  MojoPac ran by itself, started up, brought me to a log-in dialogue, where I had to give it my password to log in.  Then the normal desktop that I had been looking at on that Windows XP machine disappeared, was replaced by a brand new Windows desktop that looked just like what I had when I removed the dongle from the first machine.  And there were in the � you know, the standard Windows-looking Start button, I mean, it is the Windows Start button and programs.  There was my newsreader, Gravity, and my outlining ThoughtManager, both running, I mean, able to run.  I brought them up.  There were all my postings.



And so what it creates, basically it allows you, through all this work that these guys have done, to sort of have a portable Windows install of your own that can run off of any USB 2.0 device.  So, for example, I mean, a cell phone that�s got an additional memory card installed, or your iPod, or, you know, anything that is USB 2.0, you�re able to install MojoPac and basically build yourself your own portable Windows environment that is not just your data, but also your applications.



LEO:  That�s impressive.



STEVE:  Well, and that�s the big difference.  Because, you know, certainly people have been able to, you know, synchronize their data and, like, move PowerPoint files�or...



LEO:  Briefcase did that.  I mean, that�s no big deal.



STEVE:  Exactly.  So the real difference here is you�re able to install applications.  Well, the way they�ve pulled this off � and it�s important to note also, these are any applications.  In a couple of weeks we�ll be talking about U3, which is sort of like this, but U3 takes a very different approach of creating an environment where applications have to be aware that they�re running from a solid-state device.  The MojoPac guys have basically, by deeply hooking the Windows kernel, they have � they�re basically simulating a standard Windows environment on a USB�device.



LEO:  Wow.



STEVE:  So the applications are none the wiser.  Now, there�s some caveats to that because, since they�re not performing full virtualization, the applications may notice that they�ve been moved to a different machine.



LEO:  Ah.



STEVE:  Now, again, this is the kind of thing that can probably be, and some cases definitely will be, fixed in the future.  For example, users immediately noticed that the retail version of Office would, when they moved it to a foreign machine � they had installed Office apps on their MojoPac USB device.  When they moved it to another machine, it said, okay, you need to activate me.  So Office deactivated because it...



LEO:  Right, right.



STEVE:  ...saw that it had moved to a different platform.  In a true virtual machine environment, as we know, the app doesn�t know, can�t know that it�s on a different machine because the entire environment has been virtualized.  Here, MojoPac is doing what it needs to to make the applications run.  However, Mike the CTO guy that I asked this question of said in the next release of MojoPac they will deal with making Office function universally.



LEO:  Wow, wow, wow.



STEVE:  But now, but this is sort of the � the way I want to characterize this, I want to characterize it carefully for people.  My sense is that it�s a quirky system because what these guys are trying to do is difficult.  In the same way that the very first personal firewalls were much more quirky then than they are now.



LEO:  Well, and I even think of things like DESQ and application switchers, where you�re really trying to get into the hooks of the operating system and change how it�behaves...



STEVE:  Yes.



LEO:  ...you�re just really taking some big chances.



STEVE:  Well, so let me give you some examples.  For example, from their own knowledge base, they cannot install on a system where there are multiple � where you have a multiboot operating system that�s booting from drives other than C.  You know that it is possible, for example, to have C, D, and E partitions or drive, and have the OS actually installed on D or E or a non-C: drive under Windows.  MojoPac can�t handle that.  Another example is host machine screensaver and power management, they say that some failures have been observed when the host machine�s screensaver or power management options become active.  Under printer drivers, kernel...



LEO:  Oh, that�s kind of a problem.



STEVE:  Oh, no.  Just wait, Leo.  Kernel, you know � sometimes, they�re saying, kernel mode printer drivers will fail installation in the guest, that is, in the MojoPac guest.  This includes programs that install their own virtual printer drivers, such as Adobe Acrobat.



LEO:  Okay, so that doesn�t work.



STEVE:  But, I mean, it�s important to know that Acrobat Reader does.  It�s just the � it�s the Acrobat distiller, you know, Acrobat pseudo-printer that can�t.  But then they say this limitation will be addressed in a future version.  It says that certain...



LEO:  I bet they have a pretty long list of limitations to be addressed in future versions.



STEVE:  Well, yes.  Let me go a little bit further, here, just to sort of flesh out this notion.  This is under COM+ applications.  Certain applications that require COM+ may behave strangely or malfunction.  Under the Recycle Bin, on some PCs deleted folders may not appear in the guest after file/folder deletion.  However, there may be items to empty in there.  My own experience, I like to have AutoArrange turned on on my desktop.  And it�s just not sticky.  I�ve never � I keep turning it on as I move MojoPac from machine to machine, and it doesn�t stay.  Neither do the icon positions.  Because I like to sort of organize where things are, and it sort of forgets where they were previously.



Under Word and Excel, they say that Excel docs containing a font symbol that was created on XP Pro Service pack 2 showed the symbol as an unrecognizable value and opened on the guest plugged into host without MS Excel installed.  They say you may see problems with OLE when opening docs with Office.  Windows Media Player:  Users are advised not to install Windows Media Player 11 within MojoPac, as it will lead to unpredictable behavior, and recovery to the previous stable state may not be possible.  Under reboots by third-party applications:  Reboots by third-party applications may not always work.  The reboot is usually requested during the application install.  I mean, and this goes on and on and�on.



Games, for example, one of the cool things you can imagine would be like a World of Warcraft addict wants to carry his whole World of Warcraft environment around with him so that he can go to a foreign machine, plug in, and just be up and running.  Except that it says:  Certain games, such as World of Warcraft, exhibit offset mouse movement at the end of install.  In other words, clicking on a control, a Windows control, will not trigger the desired action.  The user should move the mouse around the control to find the amount of offset from the mouse�s visible and actual position.  The mouse can...



LEO:  [Laughing].



STEVE:  I know, I know.  I�m reading this going, oh, my goodness.  The mouse can then be moved to the offset location in order to activate the control.  Note:  This behavior does not occur when the user plays the game.



LEO:  Oh.



STEVE:  So something about the game is causing the mouse�s visible location and its effective location to be skewed.  And so they say, well, sort of, you know, hover over things and see when they light up to figure out where the mouse actually is.  So, I mean, and there�s, like, a lot of these things.  So, and so this is why I have to kind of characterize this as a kludge.  But I don�t want to put people off of it because, for most things, I think it really works.  I mean, I don�t actually have a need to move, you know, my newsreader and all of my newsgroups around and to do this kind of thing.  But I�m sure there are people who have this kind of need, and it really does work.



Now, what happens is, when you are looking at the Mojo desktop, there�s a bar at the top, the MojoBar, that is unfortunately about the ugliest thing I have ever seen.  I right-clicked on it, and there was a little popup saying �return to default skin.�  So it was like, oh, great, maybe I could, like, fix this.  Well, this is actually reminiscent of ZoneAlarm.  Remember that day-glo orange...



LEO:  Oooh, yeah.



STEVE:  ...that ZoneAlarm, those ZoneAlarm guys use?  Well, I mean, I loved the firewall back in the beginning.  But I used to tease them all the time about how horrible, you know, the horrible colors they had chosen for the UI.  Well, the good news is, apparently this MojoBar, their own toolbar, is skinnable.  And I�m sure people are already hard at work in replacing the default skin, which is just godawful looking.  I mean, it just ruins the look of the rest of your system.



But, you know, it does work.  And it allows you to instantly, with a single click, to switch back and forth between your Mojo-ized desktop and the desktop on the host.  When you�re looking at the host view, you can see the Mojo drive, and you�re able to copy any things that you want to to it.  Sort of from the host side, it looks just like a regular drive.  They also provide a cool synchronization utility that allows you and offers to sort of, like, move your whole documents and setting tree over so that all of your settings and your whole My Documents group are moved over.  So that�s very � it makes it very easy to synchronize and to set things up over there.



One of the things you cannot do is � and this is one of the most often requested things that they are never going to address � is you cannot simply move preinstalled applications from your host machine into the Mojo environment.  And this is deliberate on their part.  Also it�s very difficult to do, as we know, because it�s very difficult to move an already installed app to, you know, anywhere, because apps can do so much to the system when they install themselves.  But these guys recognize that they have, in creating this notion of mobile applications, they�ve really turned the license, the software licensing model, upside down, I mean, on its head.  Because if you look at the EULAs, the End User License Agreements in virtually anything you install, it says this is for use on one single computer.



Now, I talked to them about this explicitly.  And they said, well, you know, actually we looked at a lot of EULAs.  Many of them say on two � you can do two installs because they want to be laptop friendly.  They want to allow people to install on their main workstation and also on a laptop.  I�m going to give them the benefit of the doubt on that.  The EULAs I have seen tend to say only use this on one machine.  So inherently your � this is a multi-machine install.  You�re installing the application that the EULA says you can only run in one location; you�re installing it on an inherently portable device.  You know, my feeling is you make one of the installation of the app.  You are carrying it around.  You�re the only one using it.  I would say, even though it might be outside the letter of what the EULA was written to say, the EULA wasn�t written with Mojo in mind.  So, you know, I wouldn�t consider that a big breech of the publisher�s license.



However, this is why the MojoPac guys want to be very clear that, when you install MojoPac from the start, basically you start off with what looks like an empty Windows system.  It uses Windows profiles.  Basically it creates a mobile user profile on the MojoPac device.  And you end up looking at, you know, a virgin Windows desktop with a Start button and nothing in the programs group.  And you must then manually reinstall any things from scratch that you want to have on your MojoPac and be portable.  The MojoPac guys feel that this deals with the upside-down nature of portable licensing in a good way because basically they�re saying users are being given the responsibility of installing or reinstalling existing applications if they want them to be portable, rather than, for example, MojoPac just cloning them somehow into this portable device, which they�re explicitly not willing to do.



So, you know, that�s sort of the gist of this thing.  It�s a small download.  It�s only about a 9MB download.  It�s not currently digitally signed, which is a point I brought up to them; and they said, yes, we know that, we�re going to fix that.  Because of course now Windows and certainly Internet Explorer is becoming increasingly reactionary to the idea of not having, you know, of users running non-signed things that they�ve just downloaded from the Internet.  You get all kinds of unknown publishers and are you really sure you want to do this kinds of messages.  The release price was basically half-price, $24.99.  It is going up to $49.99, that is to say, $50, in just three weeks.  I think that�s a mistake.  On Thursday, exactly three weeks from today, Leo, Thursday, November 16, the registered price of MojoPac doubles up to $50.



LEO:  Ah.



STEVE:  I really think they should, given that they�ve still got so many little bits of debris to work out, my advice would be, what�s the hurry, you know, extend this special offer time another couple months, especially since they had a bunch of problems when they came out of the gate, you know, taking it out of beta.  I really think this is a much too narrow Window.  I guess it�s really only been about a one-month Window before they jump the price up.  As I understand it, they�re venture financed, so they shouldn�t have cash-flow problems.



And I really, I mean, I would encourage people to play with this.  The way it works without registration is you get 30 days of use or 200 boots.  And they doubled that number of boots recently because people were running dry well before their 30 days were up.  They only had 100 boots before.  That is actually 100 stick the MojoPacs in a computer is what�s called a boot.  And so, you know, I�ve already used up 15 of mine just moving it around in a couple days, you know, playing with it.  So if people think this might be something they�re interested in messing with, you�ve got three weeks before the price doubles.



The other good news is, as you know, I�m very sensitive to things impacting my system.  You know, I didn�t like installing, you know, VMware on test machines or, like, messing with Virtual PC and these other things because, I mean, these, like, these whacked your machine.  MojoPac doesn�t.  As far as I can see, it makes zero change to the machine on which you download their exe and where you install MojoPac.  And that�s all part of their philosophy.  When you shut down MojoPac and remove it from a machine, their dynamic device driver unloads the machine, that host where you were temp- that you were temporarily visiting and basically using its resources, its network and processing and screen and other resources.  It ends up not knowing anything has happened.  And that�s the magic of their kernel-level hooks.  The apps running in MojoPac see a C drive, but the C drive is the actual MojoPac device remapped to C.  And the actual host C drive is not available.  It is inaccessible.  So there�s no changes being made to the registry.  There�s no debris left behind, no browser settings, no trail of URLs you visited.  Nothing changes on the host.



And so from a security standpoint, you know, this is one of the main advantages that they were going for.  And this is unique among these other solutions.  We know, for example, there�s Sandboxie; and there are, you know, full robust VM solutions.  But any VM solution is inherently going to seriously sit on the machine you install it on.  So in that sense, MojoPac is very lightweight.  It�s, I mean, and I have to say, I mean, I like it.  I would encourage people not to be put off by, you know, their list of knowledge base, yes, we know we have these problems.  I mean, I found some myself.  Right-clicking on Network Neighborhood, which is now renamed My Network Places under XP, nothing comes up.  I right-click and do Properties; I can�t get properties.  I thought, okay, you know, what�s going on?  So I clicked the MojoBar at the top, instantly switched back to the host, right-clicked on My � I forgot what it�s called now.  Network Neighborhood or My Network Things.  And the�dialogue...



LEO:  My Network Things is good.  I like that.  I�m going to recommend that for Vista, yeah.



STEVE:  And, you know, and everything was as I remembered it.  Back over to Mojo, and that just doesn�t work.  So it was like, okay, add that to the list.  So the point is, what they�re doing is something Windows was never designed to have done to it.  And frankly, this is such a cool idea.  As long as we sort of tolerate the question of mobile licenses, which is still a little bit up in the air, in my opinion, but the idea is so cool, you can imagine that in some future version of Windows that, you know, this won�t be something Windows fights.  It�ll be something Microsoft acquires, much as Microsoft finally added a personal firewall to XP, you know, several years after everybody else had gotten bloodied on the battlefield developing the technology.  I could easily imagine that this kind of portable application stuff is so cool that it ends up ultimately, you know, generations from now, appearing in Windows.  But it�s available today.



LEO:  I might just point out that Apple�s had this for about ten years.  But okay.



STEVE:  Thank you, Leo.



LEO:  And actually it�s not � that�s really not fair.  In fact, it may even exist for Windows.  But Apple networking could be set up so that, no matter where you are on the network, when you log into your network, it�s your desktop, your preferences, your applications.



STEVE:  Oh, cool.  And, well, now, Windows has that, too.  It�s called a roaming profile.



LEO:  Roaming profile, right.



STEVE:  Yes, and so...



LEO:  This is not quite that, but this is � allows you to do kind of a roaming profile, right?



STEVE:  Well, this is way more than that because the roaming profile doesn�t provide you any of the encapsulation that MojoPac does.  I mean, remember, you could literally install Firefox � they�ve got problems with IE7 right now.



LEO:  I may be wrong, but I think the Apple one does do that.  But I may be wrong on that.



STEVE:  Provides real security encapsulation?



LEO:  Yeah, basically everything�s all kind of packaged up.



STEVE:  Well, okay.  But I guess...



LEO:  I don�t know.  That�s a good question.  I don�t know.



STEVE:  I�m sure there�s no access to the host.  Because, you know...



LEO:  Oh, I see what you�re saying.



STEVE:  Yes.



LEO:  No, I think you probably would access the host.  I think it�s probably all living on the host.



STEVE:  Yes.  And so that�s my point is that what Apple has�done...



LEO:  I see.  You�re taking it with you.  It�s completely portable.  Right.



STEVE:  Well, but not only portable.  And again, I want to make sure we make this point.  It�s encapsulated.  That is to say, when you install your MojoPac device into the machine, it brings up the MojoPac desktop into which you log in, and you have no access to the normal host�s resources.  You cannot get to the hard drive.  You cannot get to � you�re able to access removable media.  You can see the host�s CD-ROM and DVD and other USB devices.  But basically you�re only able to see those things which the MojoPac guys allow you to see.



It�s also important to note that you do have to be logged in as an admin user, a full-strength user, on the host.  They have provisions which they will be making available to universities because you can imagine in a university setting, all the university students could have MojoPac, you know, in dongles around their neck.  And they go to bolted-down, limited-user XP systems, stick in their dongle, and now they�ve got access to, you know, their own portable environment.  And so there is a way that MojoPac can run as an admin user on top of a limited user host, but that�s not the normal retail version.  That�s not what people can buy right now.  Right now you do � the host that you stick your MojoPac into needs to be running as an admin in order for MojoPac to install itself and make itself go.  Because, again, it�s installing a dynamic, very low level kernel driver in order to perform all of this � all these modifications to Windows.



It�s also worth noting that there are sort of two profiles that have sort of surfaced for MojoPac users.  The people at RingCube who did MojoPac all literally use MojoPac as their single environment.  They use small USB 2.0 hard drives, as opposed to solid-state drives.  And they have installed all of the applications they use, I mean, basically their entire PC is installed in a MojoPac drive.  And so what they have when they come to work is literally an empty Windows XP machine.  It�s just � it got a generic install.  It�s sitting there with nothing on it.  They come to work in the morning, plug their drive in, bang, they�re looking at their desktop, exactly as they left it at home, because they�ve done the same thing at home.  They�ve got a generic Windows XP install at home.  And when they come back from work they plug their drive in, and their whole environment is portable and has moved with them, including all the applications that they have installed.  So you have sort of this high-end whole environment portability user, where, for example, the relatively limited size of a USB dongle, which is, you know, practically, you know, 4-gig, maybe 8-gig today, and the somewhat lower performance of a Flash ROM device may not be enough for that kind of a user.  So you use a small, lightweight, you know, portable USB drive.



Then you�ve got somebody like I was pretending to be a couple days ago where, I mean, I really wanted something in my pocket or on my keychain.  And that�s entirely practical.  There have been some postings on the �Net about slow performance problems with MojoPac.  I don�t see that at all.  As far as I could see, I mean, I was using a good Sandisk, 512K, high-speed USB device.  But I downloaded 3,500 newsgroup messages just as fast as I would have on a regular PC.  They claim about a 5 percent overhead of their system, which is very low for this kind of work.  But it�s really not doing much.  It�s just filtering at the kernel API in order to sort of mutate the Windows environment in order to MojoPac-ize the host machine, to hide the hard drive, to allow you to get access to the networking layers and so forth, and basically to provide this MojoPac desktop.



Another example of sort of the kludgeness of this is, if a personal firewall pops up a message, it pops up on the underlying host desktop, and you can�t see it.  So to get around this, the MojoPac guys are watching for anything popping up on the desktop underneath, and then will provide you with a notice that something has popped up on the host desktop, which requires you to click the MojoBar, flip over to the host, and see what�s going on.  One of the other errata is that if a personal firewall blocks something that you�re doing in the Mojo environment, you may need to go back to the host and to permit the application, which is running on Mojo, to go through.



I mean, again, these are consequences of the fact that Windows was never designed to have this done.  It�s a testament, the fact that these guys are able to do it at all is a testament to their courage and fortitude and, you know, the fact that they had a really cool idea, which I�m sure is going to be evolving and improving and getting better over time as they work out all of these sorts of, you know, dust and debris, much as I remember personal firewalls being in the beginning, and now they�re much more solid.



So again, I don�t want to put people off.  Neither do I want to oversell this.  And the reason I think that this evaluation period is critical is people ought to give it a try.  It is, you know, everyone who sees it says, whoa, this is so cool.  I mean, and I feel that way, too.  If I were � if my life were such that I was ever away from here, and I wanted to carry an executable Windows environment with me, and I knew that there would be host � there would be available admin-privileged Windows XP machines wherever I was going to need to do something, and I�m carrying all my data, I mean, it is really a cool solution.  And it works, but it can be quirky for specific things.  So you�d want to make sure, for example, if you were someone who needed to use Adobe Acrobat�s PDF creation capabilities, that�s just not working under MojoPac today because it�s something that you can imagine they will probably get around to dealing with at some point.  Thus my sense is that this is going to keep getting better and better.



Also, relative to licensing, you�ve got this 30 days or 200 boots, and then you�ve got to buy it.  And don�t forget, from the time people are hearing this, there�s a three-week window during which buying it is $24.99 versus twice the price at $49.99.  So keep that in mind, too.  Once you have bought it, there is the ability to migrate your MojoPac from one device to another.  They only run on USB 2.0 because USB�2.0�s spec requires a unique serial number on every device.  So they�re locking their license to it.



When you download this 9MB MojoPac install and do your install, you create an account over on the MojoPac site, a username and password on the MojoPac site.  And you use that same username and password in order to subsequently access your device, although you�re able to change the password.  And in fact I think they prompt you to change the password the very first time you use this.  So you�ve installed one instance of MojoPac on one device.  If you outgrow that, or you decide you want to try a faster USB, or you want to move over to a hard drive or do whatever you want to, they provide the facility for deregistering the current MojoPac install and copying it over to another device and reregistering it there.  So you are able to migrate your purchased MojoPac to USB devices virtually unlimited.  I think there actually is a high limit because they do want to prevent fraud, you know, some style of fraud from occurring.  But basically it would never be something that would impede MojoPac�s users.



LEO:  I think, though, I mean, it�s something that really should be done at the operating system level.  It just doesn�t seem like an independent software vendor has a chance of making this thing work.  I mean, Microsoft changes one thing, the whole thing collapses.



STEVE:  Well, that level of kernel API is pretty stable.  I asked them about Vista because of course Vista, as we know, is very hostile to anyone mucking...



LEO:  Right.



STEVE:  ...around down in its innards.  And they claim that they have it running on I�m sure the 32-bit beta of Vista.



LEO:  Interesting.



STEVE:  I think it�s running under RC2.  And again, the kernel API is a well-documented, well-structured, well-understood API.



LEO:  All right.  So this is an accepted thing to do.



STEVE:  Yes.  Well, it�s, you know, I don�t know what they�re going to do under the 64-bit version of Vista.  In the same way that McAfee and Symantec are frozen out from going in and mucking around, I have to imagine that MojoPac would be similarly prohibited until, as Microsoft has said, with Service Pack 1 of Vista, the 64-bit Vista, then they will provide an API.  But that�s apparently only a monitoring API.  That�s probably enough for Symantec and McAfee.  It may not be enough.  So it may be, I mean, this is, again, this is another example of why, reluctant as I am to call this a kludge, that�s the word for it because they just may never be able to do this under the 64-bit version of Vista because Vista won�t let you go in and do this.  Because again, as I said, it�s rootkit-ish behavior, and Vista 64-bit is specifically anti-rootkit.



LEO:  Right.



STEVE:  But Leo, really, I mean, you ought to try it.  I�m encouraging people, with all of these caveats I�ve thrown�out.



LEO:  Oh, I�m so reluctant to try it, Steve.  How do you get this thing off of your system?  Do you think it uninstalls�cleanly?



STEVE:  No, no, it�s never on your system.



LEO:  It�s never on your system.



STEVE:  No, that�s what�s so nice, is you download the 9�megs, you give it a USB device.  Now, they suggest...



LEO:  So wait a minute.  It only modifies your system in memory on the fly?  It never changes your operating system?



STEVE:  Correct.  It doesn�t change the OS you originally install it � you install the MojoPac onto, nor does it ever change anything...



LEO:  Okay.



STEVE:  ...about a guest operating system.  I mean, that part I�m really clear about.



LEO:  All right.



STEVE:  And it�s why, again, you know, I know I�ve been � I�ve thrown up all these caveats.  But it actually does�work.



LEO:  If it doesn�t modify my system, well, of course I�ll try it.  Why not?



STEVE:  Yeah.  Well, and as I said, you know, installing VMware is a horrifying thing.  I mean, it creates virtual adapters.  It�s got stuff running constantly in the background.  It�s got services running.  It�s all this stuff.  You know, VMware doesn�t � MojoPac does not do this.  Nothing on the system where I originally installed it, I mean, nothing was even installed there.  The little 9-meg installer just found my USB device, asked me choose which one I wanted to install it to, and it moved itself over there.  Nothing changed on my host system.  Then, when you install and you plug it into guest systems, it just dynamically loads this driver in RAM.  Nothing is written to the hard drive.  Your MojoView has no access to the registry, to the hard drive, or anything, so that anything you do is encapsulated.  And there�s nothing to uninstall because it�s never installed.  I mean, it is � again, I think these guys are in, you know, the first phase of a very cool thing, and that a year from now, two years from now, we�re going to look back at this, you know, at Episode 63 of Security Now! and go, well, you know, we were right.  This thing had all kinds of wacky behavior, but they nailed it�down.



LEO:  I�m going to make you a deal.  They�re going to say, Steve was right, Leo was full of it.  Because I don�t think this is ever going to happen.  And I think really, if it does, it should happen at the operating system level.  But all right.  If you think you...



STEVE:  No, no.  Now, Leo, I�m not saying I disagree with you, except we don�t have it available at the operating system level.



LEO:  Well, Microsoft�s not doing it.  Yeah, Microsoft�s not doing it.



STEVE:  And it�s going to take them generations.  You know, Vista is already done.  So it�s not going to be in Vista.  This is not something I could see them adding in a service�pack.  So it�s going to have to be in Wista.  Or, you�know...



LEO:  Mista.



STEVE:  ...whatever comes after Vista.



LEO:  Sista.



STEVE:  And, you know, and that�s going to be a long time.



LEO:  Right.



STEVE:  So, you know, no one should hold out hope for this happening sooner.



LEO:  No, I understand that.  I understand that.



STEVE:  But I agree with you.  I mean, in the same way that I think a personal firewall should be in the OS because, you know, that�s the right place for it.  You know, this notion of application portability, installing normal hard disk-targeted apps in a portable device, this is a cool thing.  When people see this, this is cool.  I mean, and the MojoPac guys have done, as I said, they had a lot of guts, and they�ve tackled something which is fundamentally hostile to Windows, but they�re making it work.



And so again, because it�s a small download, you get 30 days to play with it, it won�t screw up your system, it won�t modify any guest systems, and it does allow you to have � to take normal, regular, non-special Windows applications and run them on a portable device, and that it�s really portable, and it creates privacy and security encapsulation for what you�re doing on the MojoPac.  As I think I heard them say when we were talking on the phone, you know, what happens in MojoPac stays in MojoPac.  I mean, it is very cool.  It�s just it was a huge challenge to do this.  I...



LEO:  I give them props as hackers, absolutely.  I give them�props.



STEVE:  Absolutely.  I salute them and tip my hat.  I mean, this is a very valuable thing that � you know, and I�m feeling, again, 50 bucks seems like a lot of money.  On the other hand, I�m charging 89 for my software, so who am I to talk?  But it does allow you to move around your purchased MojoPac from device to device.  They suggest � and this is all in the ReadMe file, that I do encourage people to read � they suggest, for example, that if you can, you reformat your dongle to NTFS rather than the default, which will be a FAT or FAT 32 file system.  Obviously people who are using an iPod can�t.  They�re not able to reformat.  They�re going to have to leave it in its default FAT format because they still want to be able to use their iPod, you know, on a Mac, I guess, or on, you know, in the way they normally do.  So they�re not able to change that to NTFS.  But if you did have a standalone drive or a USB device which you�re able to use with NTFS, they�re just saying security is better and it is faster than FAT.  Oh, and I forgot to mention that something that they did broke compatibility with TrueCrypt.  I was concerned...



LEO:  Oh, boy.  Now I�ve had it.



STEVE:  No, slow down, slow down.  I was concerned about that, so I asked them.  They recognize they broke it.  They�ve come up with a temporary workaround that allows TrueCrypt to be used.  And the next release will be completely TrueCrypt friendly.  So our favorite ultra-robust security tool can also be used with MojoPac in order to allow a TrueCrypt volume to be carried and to have � and where TrueCrypt is running on MojoPac, no longer do you need to install TrueCrypt on the target system.  So that�s even better than running TrueCrypt by itself.  Because if you had TrueCrypted a dongle or a drive, you would need to install TrueCrypt on the host machine in order to then have portable access.  Here, TrueCrypt is running in MojoPac, giving you access to your TrueCrypt partition or directories.  So, I mean, in some sense it�s even better than TrueCrypt without MojoPac.  And these, I mean, they are committed to the issue of security and privacy, so they�re going to make it work even better than it does now.  And it does work now, although you need to do some workaround.



LEO:  You might, I mean, if all you really need is email and browsing, there are USB versions of Firefox and of Thunderbird and so forth that you can carry on a USB key, keeps all your stuff on the key.  It doesn�t have the same kind of encapsulation you�re talking about.  But you can do�that.



STEVE:  Well, that�s absolutely true.  And in fact, U3, which we�ll be talking about in the future, is a specific platform for running things from Flash.  There are, you know, the real advantage of MojoPac is encapsulation because Firefox won�t give you this kind of robust encapsulation.  If you did get something, a virus or something, in Firefox running from a dongle, it would still have access to your C�drive.  And so again, I mean, there are real benefits to what the MojoPac guys have done that, as far as I know, are  unique.  It�s true that if you were carrying a virtual machine around in your dongle, and you knew that you had VMware or Parallels installed in any host machine, you could simply launch your VM and then operate.  But that requires a serious hit to the hosting platform.  MojoPac doesn�t hit the hosting platform at all.



LEO:  Is Flash fast enough to do this?  I mean, you�re running stuff, not off the hard drive but off the Flash.



STEVE:  Well, you are.  But the way Windows operates � first of all, Flash reads at about twice the speed that it writes.  Another concern is that Flash has a write limit.  The actual chemical technology of the non-volatility of a Flash has a maximum of about 100,000 write cycles.  So, for example, people who arrange, like, Flash-booting Linux systems, in fact I have myself a Flash-booting FreeBSD system that I built, I had to go to some lengths to not have a swapping partition on the Flash.  And in fact, to make sure that I was mounting my Flash partitions in read-only mode, so that the system would be logging to RAM and to Flash, because you never want a situation where by default you�re writing often and hard to your Flash because it will end-of-life that device very quickly.  Mark Thompson actually did some experiments where he burned out a Flash in a couple of�days...



LEO:  Wow.



STEVE:  ...just by booting a standard Windows system.  And Windows just thrashed the thing and killed it.  And...



LEO:  Well, the good news is now that Flash is at least fairly cheap.  So, you know, you might use it for six months and have to buy a new one. 



STEVE:  Well, and I asked this question of the MojoPac guys.  They�ve been using MojoPac for six months, many of them on Flash devices.  And naturally they�ve been testing it and pounding on it and using it like crazy.  Not a single one of theirs has ever died.



LEO:  Ah, that�s good.



STEVE:  I would encourage people not to use bargain basement, you know, cash register, oh, here�s a $15, you know, half-a-gig Flash that you can get at the checkout stand.  But by all means stay with, you know, Lexar or Sandisk or a high-end, good brand Flash.



LEO:  Is there really a difference?



STEVE:  I really think there is, yes.



LEO:  Hmm, interesting.



STEVE:  I mean, certainly in performance, too, because in order to get accelerated performance, what they�re doing is they�re writing in parallel to many more Flash devices inside in order to get multiples of write speed.  And there�s also something called �write leveling,� which expensive Flash has and cheapo Flash doesn�t.  What write leveling does is it actually distributes the writes so that, even though you appear to be writing to the same logical location in the Flash, it�s actually the Flash itself is writing, and it�s doing sort of the equivalent of sector swapping on a hard drive.  It�s actually writing to other physical areas, which are then read back from that area, sort of in a content-addressable scenario.  So the idea is it means that if you were only using part of your Flash and, like, recording pictures, deleting them, recording them, deleting them, recording them, deleting them, and like never filling up your Flash, on a normal FAT file system that would end up burning out the front of the file system...



LEO:  Oh, yeah.



STEVE:  ...way before the end.



LEO:  You�d never write to the end, or � yeah, yeah.



STEVE:  Exactly.  So basically you end up killing this thing way before you need to.  But the higher quality Flash has write leveling built in...



LEO:  Interesting.



STEVE:  ...so it�s automatically distributing those writes across the entire physical surface of the drive.  So it�s really worth doing that.  These, of course, are not problems for an actual little USB 2.0 hard drive.



LEO:  Those little drives you can get, yeah.



STEVE:  Now, one other thing they recommend � that is, MojoPac recommends � is that the first time, if you�re concerned about performance, or if it seems sluggish � I saw no sluggishness at all in my case.  I mean, literally, I�m totally happy using this thing for, like, mail, web browsing, newsgroups.  For example, with a newsreader in particular, you really want to carry your whole environment around because it�s all the messages that you�ve already read, and all the messages that have occurred, so that conversation threading works correctly.  So there, I mean, it�s just � it�s not the same as going and doing, like, a web-based read of a forum, where it is all being kept over on the server side.  But, I mean, I was completely happy with the performance of this thing.  However, by default, Microsoft Windows turns off write caching for USB devices.  The reason is, if someone yanked it out of the...



LEO:  Right.



STEVE:  ...of the connection, you might well have what�s called a �dirty cache� in Windows, where it has been deliberately buffering writes so as not to redundantly write to the device, and also so as not to incur the performance penalty of doing so.  So what happens is Windows realizes this is a USB device, and it will turn off write caching.  You can go in to, you know, right-click on My Computer, go to Manage, go to find the USB device, select the properties of it.  And they explain this in the Mojo ReadMe exactly what the path of clicks is to get there.  And then you deliberately turn on delayed writing.  That means you need to shut down MojoPac through the UI and not just yank it out.  But of course most users know now they really ought to do a smooth shutdown of a USB drive anyway.



LEO:  Oh, really?



STEVE:  Oh, yeah.



LEO:  I didn�t know that.  I thought Windows just kind of, you know, it handled it, so I just pull it out.



STEVE:  Well, under Windows 2000...



LEO:  Well, 2000 you have to do it.  But under XP you don�t.



STEVE:  Well, no.  And the reason you don�t is Windows is still trying to flush it.  However, if you�ve ever done a large file copy, even under XP, the file copy dialogue will finish.  And if you�ve got a light showing access to the device, it�ll sit there and flash, sometimes for 30 minutes, because Windows has flushed everything out of its upper UI level, but the kernel is still trying to write to an inherently slow writable device, which is what USB Flash is.  So you really need to wait.  And what you should do is right-click on the drive appearance in Explorer and then select Eject, and wait for the eject to complete, and then it�s safe to remove.



So anyway, my point is that another sort of a power user trick is you could disable, or rather enable, write caching, which is not the default setting for a USB portable device because Microsoft wants to keep the caches flushed and keep the drive current in case somebody yanks it out without shutting it down.  I actually didn�t bother with that, and I just saw no performance penalty.  I�m really pleased with�this.



So again, I want to make sure people understand this is, you know, Version 1.0 � actually it�s 1.0.1 at the moment.  I believe this thing has a future.  I think people are right to be excited about it.  And it offers a lot of features.  The only caveat being, you know, Windows wasn�t designed this way.  And so these guys have had to do deep hooks into the kernel in order to pull this off.  But I think for most people they have, and it�ll only be some people who have problems.  So again, use that 30-day eval, or your 200 boots, you know, as quickly as you can within that period, figure out if the things that you think you want to do work without any trouble.  And if so, you know, then I think it�s a great solution for you.



LEO:  Very good.  I mean, obviously these guys are filling a perceived need.  There�s no question about that.  And they�re amazing hackers.  And since it doesn�t in any way impinge on your system, why not try it out?  Why not give it a shot?



STEVE:  Yeah, again, it�s small and lightweight, doesn�t affect your system, and it�s, you know, seeing it work is to believe it, Leo.  Your attitude, I mean, my attitude�changed.



LEO:  Well, I�ve tried it.  I mean, I have seen it work.



STEVE:  Okay.



LEO:  Yeah, we tried it out at Call For Help actually, Cali demonstrated it.  And it was impressive.  It just makes me nervous.  MojoPac.com.  And as Steve said, you can try it for free.



You know, we�ve been talking about a free trial version of SpinRite for some time.  I think you�ve really got to try that.  You�ve got to do that.



STEVE:  I don�t know how I would do that.  As I said to you before, Leo, you know, we offer it with a complete money-back guarantee.



LEO:  I think that�s the best way to do it.



STEVE:  Well, and because the fact is, the first time you use it, you get tremendous benefit from it.



LEO:  Right.



STEVE:  It�s not a productivity application like Word or something else, where it�s like, okay, do I really want to keep using it after 30 days.  In fact, we received a nice note from a Security Now! listener just this week.  He said, �I just wanted to give you some more feedback on SpinRite.  I�ve been listening to Security Now! since some of the earliest episodes and have been thinking about getting a copy of SpinRite.  Well, I had just the right opportunity this past weekend.  A friend�s computer started refusing to boot into Windows XP.  And I took a good look at it and found the Maxtor hard drive was going bad, very bad.�



LEO:  Uh-oh.



STEVE:  �He had over 8 gigs of digital photos on it that he absolutely did not want to lose.  And I was having very little luck trying to copy the files off of it.  So I got a copy of SpinRite and ran it� � get this � �for two and a half days straight.�



LEO:  Oh, my god.  See, I think sometimes people give up because they don�t realize it could take that long.



STEVE:  Well, he says he ran it for two and a half days straight, �until we had a power outage.�



LEO:  Oh, no.



STEVE:  It�s like, okay.  He said, �After that, I decided to see what I could recover.  And I was able to easily recover all the photos.�



LEO:  Wow.



STEVE:  It worked great.  So...



LEO:  Did you design it to handle a power outage like that?  I mean, it fails gracefully like that?



STEVE:  It fails gracefully.  That was something that was tested extensively back in the SpinRite 1.0 days.  And, you know, I put in the technology to make it do the right thing.  And, you know, two and a half days is extreme.  You know, many people talk about it running on 250-gig drives in a few hours, which it�s certainly able to do.  But, you know, what happens is, I mean, SpinRite is really doing hard work.��And...



LEO:  It had to do a lot on that drive.



STEVE:  And when you compare this to taking the drive out and sending it somewhere...



LEO:  Right.



STEVE:  ...two and a half days is much less time than waiting multiple weeks to have some data recovery company fix it for you for way more than $89.



LEO:  Very impressive.  SpinRite, it�s at GRC.com.  And if you want to see more testimonials, it�s SpinRite.info.  And of course GRC.com is the place to go for 16KB versions of this, for the bandwidth challenged.  Also Elaine�s great transcriptions, she does those just for you because I know sometimes it�s hard to follow.  But you can read along as you listen.  Again, GRC.com.  Visit TWiT.tv.  We have an episode guide going back � just as Steve does � going back all the way to the very first episode, so you can see what you�ve missed.  And a lot of people download these shows much later.  I think it�s the kind of thing people collect, and they want the whole set.



STEVE:  Oh, Leo, I get postings from people all the time saying that they just discovered us, and they�ve been listening to all the back episodes.  So I�m...



LEO:  Yeah, isn�t that wild?



STEVE:  ...really happy that we have that archive.



LEO:  Yeah, no, it�s a good thing, it�s absolutely a good thing to have.  If you like Security Now!, you might like Windows Weekly.  It�s another podcast, this time about Windows, with Paul Thurrott.  Very similar style.  Paul is a great Windows expert, and we talk about, not specifically security, but just Windows Vista and Microsoft and what they�re up to.  And of course that�s getting very interesting right now.  That�s also available at TWiT.tv.



Your support is much appreciated.  You know, we�ve had advertising for some time, but as the advertising came on the show, the donations dwindled.  That�s kind of bad news because, frankly, the donations pay for the infrastructure.  The advertising only pays salaries.  So your $2, if you like�� somebody asked me, well, I like this show, but I don�t like that show.  Can I just donate to this show?  Yeah, just you know, put in your note when you donate the $2, say it�s for Steve.  That�s fine.  And I�ll make sure that it only pays for the bandwidth that Steve uses.  Or�something.



STEVE:  I think I use a lot of bandwidth, Leo.



LEO:  I think you do.  I think you do.  We do thank the great folks at Astaro, who�ve been a sponsor for so long.  Really they came to us and said, we love what you�re doing, we want to support Steve, and we�d like to become kind of the flagship sponsor.  They make the Astaro Security Gateway, and I think that�s a marriage made in heaven for Security Now!.  If you�re a small or medium business network, you need superior protection from spam, from viruses, from hackers, complete VPN capabilities, intrusion protection, content filtering, an industrial-strength firewall, all in a very easy-to-use, single high-performance appliance, you ought to try out the Astaro Gateway.  Contact Astaro.com or call 877-4AS-TARO.  You can schedule an absolutely free trial of the Astaro Security Gateway in your business.  And for non-business users you can download the software, put it on an old machine.  You can even subscribe to all of the things like the antispam and antivirus if you choose to.  It really is a great deal.  Astaro.com.



Also thanks to Dell for their sponsorship of the show.  We have more Dell picks on our special Leo�s Picks Page.  It�s TWiT.tv/dell.  Somebody sent me a note saying, �Leo, why do you refer to yourself in the third person like that?�  Well, it�s just what it�s called, the Leo�s Picks Page.  They are my picks.  Dell is at TWiT.tv/dell.  And anytime you buy a computer from Dell, if you go through there, we get credit, so we�d appreciate it.  Steve, next week we are going to do questions and answers.



STEVE:  Episode 64, one of my favorite numbers, being that it�s a power of two, as well.



LEO:  Oooh, yeah.  You know, when my kid, my son was, like, six or seven, he said, �Listen, Daddy, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024.�  And I went, �Wow.  Henry, you�re going to be good at computers.�  He said...



STEVE:  Oh, yeah.



LEO:  Yeah.  He goes all the way up to � he was at that time going to 4096.  I was impressed.  I thought, this guy�s got a binary brain.  He�s only shown aptitude so far for YouTube videos, though.  So I don�t know, maybe it was just...



STEVE:  You know, just to entertain myself, Leo, I used to practice seeing how far up I can go.  I mean, it...



LEO:  Really.



STEVE:  It�s pretty scary.



LEO:  How high do you, can you � you get up to four million, it gets a little � or four billion, it gets a little tough after that.



STEVE:  I had it memorized up to, like, 10 or 11 places, I�think.



LEO:  Wow.



STEVE:  I mean, decimal digits.



LEO:  Wow.



STEVE:  Just, you know, it�s like, you know, some people memorize...





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/


GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#64

DATE:		November 2, 2006

TITLE:		Listener Feedback Q&A #12

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-064.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss questions asked by listeners of their previous episodes.  They tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world "application notes" for any of the security technologies and issues they have previously discussed.



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL�Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 64 for November 2, 2006:  Your questions, Steve�s answers.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.



It�s time for Security Now! Episode #64.  Let me think.  There�s something about that number.  Oh, I know.  That�s how many squares that are on a chess board.  Eight by eight.  So that would be four by four by four.



STEVE GIBSON:  By four.



LEO:  By four.  By four, by four.  Four by four by four, which would mean, ladies and gentlemen, it�s a mod 4 episode.  And time...



STEVE:  Indeed it is.



LEO:  ...for your questions and answers.  Hello, Steve.



STEVE:  Hey, Leo.



LEO:  So we had some fun with MojoPac last week, and I hope people enjoyed that one.  I�m sure we have questions about that and a lot more.  Should we just get right to them, or do you have anything you want to catch up with?



STEVE:  Nope, I think we�re ready to go with � we got a dozen listener Q&A.  And I have to say, Leo, as I�m reading through these postings, I did want to remind people.  People seem to be finding it anyway, but at the bottom of the Security Now! page at GRC, which is just GRC.com/securitynow, the bottom of the page is a web form that anyone can use to send me questions, which I receive and, you know, do my best to read through.  And...



LEO:  We should emphasize, you do not answer individual�questions.



STEVE:  I get so many of them that I can�t.  But every time I�m preparing one of these mod 4 shows I find myself thinking, wow, you know, I really want the ability to answer more of these.  So one of these days we may actually, you know, as I have threatened to before, switch maybe to mod 2 in order to double the frequency of doing Q&A.  I really think people like them because, you know, one episode then covers many different topics.  It allows us to talk about, you know, small things rather than, you know, just single big things.  And they�re just, you know, we�ve got such an active, really interested audience that it�s really cool.



LEO:  Well, let�s kick things right off with question number one from Michael Klein, Fairfield, California, who says:  I have a question for you.  It was on your topic a couple of episodes ago, Proxies.  We only talked about one kind of proxies.  But:  The corporate network I work on requires using a proxy to access the Internet.  Obviously this allows them to track everything employees are looking at, even if the data might be sensitive personal information.  Now, I�m  using SSL connections.  You indicate that using an SSL connection prevents the use of transparent proxy by ISPs.  I�m wondering if an SSL connection prevents snooping by a corporate proxy, or can a corporate proxy intercept the SSL connection.  For instance, could a proxy set up two SSL connections � oh, he�s smart, this guy�s smart...



STEVE:  Yeah.



LEO:  ...a client proxy connection and proxy web server connection, decrypting the information, scanning the content, reencrypting the information and sending it along � kind of a man-in-the-middle attack.  I think they do that, don�t they?



STEVE:  Uh-huh.  And he says:  Can a proxy fake a certificate to make you think you have a completely secure connection between a client and web server when you really don�t?  Now, we�ve talked about this a couple times.  And in fact, this is a great opportunity for me to clarify something that I wasn�t clear about relative to certificate�verification.



So first of all, Michael is exactly right that there are corporate proxy servers which do intercept; and, exactly as he said, the web server sets up an SSL connection to the proxy.  The proxy sets up an SSL connection to the target web server.  But in between there it decrypts, can scan, and typically does scan for content and then reencrypts on the way out.  However � and again, he�s on the ball because what this requires is some sort of a certificate game being played.  So in fact proxies do perform � corporate proxies can be set up to perform exactly this kind of interception.  However, in every case, the browser must be complicit in this.  That is to say, what happens is the proxy will have an SSL certificate, and it is necessary that the matching certificate be preinstalled in every corporate browser.  Now, again, that does happen and is happening to people who may or may not be aware of it.  But what then happens is that when the user attempts to use an SSL connection, for example maybe to, like, go to Gmail and use Gmail�s web browsing mail interface in order to have a truly secure and private interaction that is going to truly bypass the corporate proxy, the proxy will itself return its own�certificate.



Basically what it does is it creates a certificate for that remote website on the fly, which it signs.  Remember that in the past we�ve talked about certificate and certificate signing, and listeners can go back and look down at our crypto series to get the details of that.  But basically it creates on the fly a security certificate from that website.  Now, normally, for example, Google would have a certificate that was signed by Equifax or by VeriSign or one of the major certificate signers.  And everyone�s browser has those large companies � Equifax and VeriSign and Microsoft and so forth � they have those certificates already installed in their browser, so that they�re able to validate the signature of the web server�s signed certificate.  So what happens in the corporate scenario is that the corporate proxy creates basically a fake certificate on the fly, which it signs.  It itself, that corporate proxy signs it.  That�s what it returns to the browser.  The browser then looks in its cache of certificates, and it will find Equifax, VeriSign, Microsoft, and Ajax Company, or whatever the company�s name is, so and it�ll check to see that the signature of the remote server certificate is properly signed, which it will be.  So no alert will be presented to the user.  The user won�t know that anything untoward has happened.  And this ends up being a seamless connection.



LEO:  Can�t you, though, look at the certificate and see all of that going on?



STEVE:  Ah.  Now, that is exactly the point I wanted to make, and what I wanted to make very clear about how you can bust this happening.  And that is, when you bring up a secure page, right-click on the page and look at properties of the page.  There�s a View Certificate option.  What you want to look at is what�s called basically the Signing Chain.  And if you look at that, it�ll normally say, like, Google.com, and then there may be an intermediate authority, but then there�s a root authority which will be VeriSign or Equifax or Microsoft or whomever signed it.  Well, in this case, that�s the giveaway.  It�ll be Ajax, Inc., or whatever the name was given to your certificate, probably the company�s  name.  So you�ll know immediately that the certificate you have received has actually come, not from the actual server signed by a true universal authority, but it was signed by your own local proxy server, meaning that the connection terminates at the proxy server where it�s being decrypted for whatever purposes.



LEO:  Although I have to say, somebody at work sees, you know, the company name, it�s probably not � it�s not a red flag.  They�re going to go, oh, yeah, oh, no, I�m going through the company.  But now you know that�s a giveaway the company may be intercepting the traffic.



STEVE:  Well, actually you know that they are definitely intercepting the traffic.  You don�t know what they�re doing with that decrypted phase because, if the certificate your browser has received from what it thinks is the website is, in fact, signed by the company, then the data has to be decrypted as a result of it traveling through the SSL connection and coming out at the proxy server, where it�s reencrypted.  Now, it may be that nothing is happening except the company is just adamant about proxying everything, and so they�ve taken these measures.  But I do know that this is being done by some proxy servers and companies that want this level of control.  So it�s always possible to detect it in that fashion.



LEO:  There�s no way they could do it without having a certificate that said something other than the site you�re going to.



STEVE:  No.  What you would � if they tried to do that, you would get a popup dialogue warning you...



LEO:  Saying it doesn�t match, ah.  I�ve seen that error.��Okay.



STEVE:  Yes, yes.



LEO:  Okay.  It says the certificate doesn�t match, what do you want to do?



STEVE:  Yup.



LEO:  And you can accept it temporarily or forever or whatever.  Jon, lurking somewhere in New York, writes:  Could you please talk about SSL?  Michael was talking about SSL.  I really don�t understand what it is, what it means, what it does.  I mean, I sort of know what SSL connections do, but I don�t know how they actually work.  That�s a great�question.



STEVE:  Well, it�s so great that I�m going to give that an entire episode.  I thought I�d answer it really quickly, sort of in an overview mode.  But and I thought we had really covered it.  So I looked back at our work after our crypto series, and I never really addressed the mechanism of SSL.  Its origins were with Netscape.  Those were the guys that came up with SSL 1.  And it turns out there were a couple sort of boundary condition problems with it that were fixed.  But basically the guys at Netscape did it right.  And now SSL, also known as TLS, which is Transport Layer Security, I mean, it�s such a great solution that it�s worth really just stopping and explaining in detail how that works with certificates and crypto and everything.  And we do have all the background, having really covered cryptography very well.  So I want to do that.



But, you know, the short version of Jon�s question, or the short answer to Jon�s question, is that it�s a means for allowing true authentication, if you choose true authentication, and very strong, industrial-strength encryption of data through a channel, such that a man-in-the-middle attack cannot be performed if you are securely authenticating the endpoints, which SSL does provide, thanks to certificates.  And somebody passively sniffing the traffic has no ability in, you know, the lifetime of the universe sort of timeframe to decrypt that traffic.  So it is a, you know, it is proof against anyone intercepting the traffic.  It allows you to authenticate, that is, to prove the identity of the endpoint, given that, for example, as we were just talking about with Michael�s question, that you check the certificates.  That�s certainly important.  But it provides these mechanisms.  And it�s just a � it�s a terrific means for moving data across the Internet, solving problems of security and privacy.  And we�re going to give it a whole answer in its own episode.



LEO:  Good.  I mean, of course people have seen it when they go to their bank; you said Gmail.  My email provider uses it.  It�s basically relatively free and a good thing to use.  I mean, you just have to get a certificate.



STEVE:  Well, and anytime you see https...



LEO:  That�s secure.



STEVE:  The �s� stands for �secure,� which is SSL.



LEO:  Great, yeah.  Tom Krauska of St. Louis, celebrating his World Series, has been having trouble � actually, as we record this, we don�t know how St. Louis has done in the World Series, but I�m sure it�s been wonderful � has been having trouble sending email to a few specific people.  He asks, could you guys talk about how to get around Port 25 blocking?  I have email I send to my sister and a friend, but it returns to me with this line:  Connected to (some IP address), but sender was rejected.  Remote host said:  550 (another IP address) blocked by ldap:ou=fblmx, dc=Comcast, dc=net.  What?



STEVE:  Yup.  We�ve never talked about what are called �real-time blacklists.�  And so Tom�s issue is not that he�s got a problem with Port 25.



LEO:  Oh, there�s more.  I didn�t see, there�s another page.  BL004 Blocked for spam.  I left that out.  He said, I�ve been told Comcast is blocking Port 25.  My ISP says only support email on Port 25.  This sounds like a gunfight at the OK Corral.  Well, so he�s not a Comcast customer.  He�s trying to send to Comcast.  Is that what�s going on?



STEVE:  Well, whichever way, because it isn�t clear because we don�t have his IPs.



LEO:  Right.



STEVE:  But essentially he doesn�t have a Port 25 problem.



LEO:  Right.



STEVE:  He�s got a false spam triggering problem.



LEO:  Right.



STEVE:  Real-time blacklists are essentially lists of known or believed spammers.  So what�s happening is, he�s able to send email apparently just in general to lots of people.  But his sister and this friend are unable to receive his mail.  So what�s happening is that the SMTP server at their end, that is, their ISP�s SMTP server is doing everything it can to block spam.  So it�s accessing these real-time blacklists and comparing the IP of his SMTP server against the list and finding that that IP or that range of IPs is believed to be a sender of spam.



LEO:  He�s been blacklisted.



STEVE:  He�s, well, he�s been blacklisted.  But not his IP, actually his ISP.  Because...



LEO:  Most likely his ISP, right, yeah.



STEVE:  Exactly.  So...



LEO:  Oh, it could be him, it could be him, but it�s most likely his ISP.



STEVE:  Well, it can�t be him because the connection is coming from his SMTP server.



LEO:  Oh, that�s right, that�s right.



STEVE:  Not actually from him directly.  So...



LEO:  Unless he�s running his own mail server, but that seems unlikely.



STEVE:  Exactly.  So the way � so, you know, even for a guy who�s innocent, I mean, you know, Tom could be completely innocent.  But what�s happened is other customers of his ISP are infected with spam-sending bots and zombies.  These things are � so other people�s machines are infected.  They�re depositing spam on the ISP server, which is the ISP�s SMTP server, which is in turn relaying it, as spam servers do, all over the �Net.  People are receiving this spam, backtracking it to this ISP�s SMTP server, and blacklisting it.



LEO:  You�re being kind.  You�re being kind.  Because unfortunately the problem with real-time black holes is you can get black-holed for � blacklisted for all sorts of things, maybe not even sending spam.



STEVE:  Well, and that�s the problem, yes, is there�s a high�level of false positives in all of this.  I mean, again, it�s...



LEO:  Most of these � as we know, most of these zombies don�t go through the ISP�s mail server, they do their own mail server.  That�s why these ISPs block Port 25.



STEVE:  Right.



LEO:  You would get caught very quickly if you tried to forward mail through your ISP�s mail server.  So it may be that the ISP had, you know, did some web hosting for somebody who was a spammer.  There�s lots of ways.  I�ve had addresses get on these black hole, blacklists, and it�s very hard to get them off.



STEVE:  Yup.  You just have to wait.



LEO:  Yup.  MAPS/ORBS, he had an rbl, what was it, rblmx something?  So what is that ldap?  That�s just a lookup of�that?



STEVE:  Yes.



LEO:  Okay.



STEVE:  Yeah.



LEO:  Rblmx, blocked by ldap:ou=rblmx.  So it could be his ISP was at fault, or somebody on the ISP is at fault, or it could be the black holes, blacklists at fault.  But either way he�s not going to get email through.  Is there any recourse, anything he can do?



STEVE:  Well, okay, here�s the problem.  As you said, ISPs are blocking Port 25.  So what that means is that the only thing he could do would be to find some other email�server...



LEO:  So use Gmail, use Yahoo!, use Hotmail.



STEVE:  Exactly.  If he sent, you know, basically he�s not able to use his ISP�s email.  His ISP is blocking his direct�connection to other remote servers, so he can�t do that in order to avoid his blacklisted SMTP server.  So the�only thing he can do is use a complete third-party email�solution.



LEO:  I think if you sign up for a Gmail account you can use their SMTP server for outgoing mail.  And that would be a free way to do it.  I believe you can.



STEVE:  I know that you can receive using POP.  You�re able to pull email...



LEO:  Yeah, I think you could send out, yeah.



STEVE:  I don�t think you can.



LEO:  You can�t?  Oh, okay.



STEVE:  I don�t, I mean, I have looked for doing that, and I have not seen a way to do it.



LEO:  FastMail will allow you to do that.  That�s a paid, of course, service.  And I bet you if you paid for Yahoo! Mail, you�d be able to use an SMTP server from them.



STEVE:  Well, and again, that would open them up to being a spam relay.  So...



LEO:  Well, but if they start seeing a lot of traffic coming from one person, then they just cut them off; right?



STEVE:  Can you pay for � oh, no.  You can�t pay for Gmail.  You were talking about Yahoo!.



LEO:  No, the Yahoo! Mail,  yeah.



STEVE:  Okay, yeah.



LEO:  Jason Bennett in Chesterland, Ohio is a bit worried.  He asks:  With all of the IE issues that always seem to come�up, I thought of a question.  Is there the same vulnerability issue if you use the IETab plug-in for Firefox?  That�s a neat plug-in that lets you continue to�work in Firefox, but actually open a site in IE within�Firefox.



STEVE:  Yup.  And of course that�s a problem.  When you open the tab, you are basically running the Windows IE control.  This is the same problem, for example, that � and it�s the reason that Outlook Express or Microsoft Outlook has email problems, because that preview and the actual file viewer is the same viewer, it�s the Internet Explorer viewer that allows the display of web pages in mail.  Similarly, when you use the IE tab, they haven�t obviously brought along an entire Internet Explorer version of their own.  They�re actually using the component ability of Windows to just take the IE Window and move it into the Firefox tab.  So any security vulnerabilities that exist in IE will bite you if you use the IETab under Firefox.



LEO:  Same is true anytime IE is rendering a page � in Outlook, in an application that uses IE to render HTML.



STEVE:  Yup.



LEO:  You�re always at risk.  Hey, I just looked it up.  I thought I remembered an article on Lifehacker.  You can use Gmail as an SMTP server.  SMTP.google.com.  You�ll have to�use...



STEVE:  No kidding.



LEO:  Yeah.  You�ll have to use your Google account.  You have to have a Gmail account, obviously.  And you�ll use TLS�under the secure connection.  And you can use their SMTP�server.



STEVE:  Very, very cool.  I�m going to do that, Leo.  I actually have an application for sending stuff through Gmail.  I didn�t know that would work.



LEO:  Right.  Well, and I remember a number of people I�ve talked to have hard times sending email out in various situations, like when they�re on the road and so forth.  So they just use Gmail.  Very neat.  Thank you, Google.  We�ll see if they keep that up now that we�ve mentioned it.  That may be the end of that.



Phil Hendy from Swindon, that�s in the U.K., says:  After using ShieldsUP, my PC, behind a router, passes all tests.  It�s stealthy.  Except for the ping.  ICMP echo request.  I can�t find a way to disable this.  And if I did manage to do this, what limitations, if any, would I face?



STEVE:  Yup.  We get this question a lot, so I wanted to pause.  And, you know, Leo, you doing that British voice reminds me, I would love our listeners to hear you switch to DJ mode.



LEO:  Why would you like that, there, Steve?  It�s a beautiful Wednesday afternoon, a Thursday afternoon.  We�re doing a Security Now! right now, 12:40 in the city.  58 degrees.  So why would you want that, Steve?



STEVE:  I just think � that cracked me up.  You...



LEO:  Makes you happy.



STEVE:  You�ve done it a few times in the Call For Help studio.  And I�ve � the first time I heard that, I said, oh, cool, you know, Leo has that whole, you know, DJ voice down.



LEO:  Hey, when I worked in radio I had to talk like that.  Wait a minute.  I still work in radio.  We � people talk like that.  I don�t know why.



STEVE:  Wow.



LEO:  Anyway...



STEVE:  Okay.



LEO:  Let�s get to Phil�s question...



[Talking simultaneously]



STEVE:  Yeah.  A lot of people ask the question, so I wanted to address it.  He mentions he�s behind a router.  So what�s happening is, he�s of course got a NAT router, which is inherently going to give him tons of incoming protection.



LEO:  Yes.



STEVE:  So naturally he�s going to be fully stealthed.  Some routers, however, will still echo a ping.  So he�s going to fail ShieldsUP full stealth, or true stealth test, as I call it, because I do send a packet just to see if there�s a response.  What he can do is, first of all, he might look around the user interface.  Some user interfaces have a very clear ability to specifically turn off echoing ICMP pings.  So if you � so I would first say, look through the router�s security configuration or WAN security or WAN tab to see if it already offers you the ability to turn off ICMPs.



And if it doesn�t, what you can do is use the DMZ feature.  We�ve talked about the DMZ, the so-called �demilitarized zone,� which is what DMZ stands for, where unsolicited traffic is routed to a specific machine on your network.  This is what people have to do, for example, if they want to run a web server or FTP or, you know, if they explicitly want to send unsolicited traffic somewhere.  That�s where they use the DMZ to specify which machine gets it.  This is not the normal configuration because, as we know, what makes a NAT router such a good security appliance is that unsolicited traffic is simply dropped, and only traffic coming back from connections that were first established from the inside out are allowed back from the outside in.



But all you have to do is configure your router�s DMZ to a nonexistent IP.  For example, if in your private network behind the router you were 192.168.0.1 through 50, for example, you could just aim it at 192.168.0.222.  Something, you know, high up out of the way that�s not ever going to be an IP of a machine.  So what happens is, that ICMP packet and any other traffic, it would, being unsolicited, come through the router; but there�s nowhere for it to go inside your network, so it simply gets dropped, in the same way that the router would normally be stealthing.



LEO:  That�s very clever.  I never thought of doing that.  Now, most I�ve seen, almost all routers have somewhere in there a way to turn off ICMP.



STEVE:  Yes.



LEO:  But I have to say, I bet you you could make a lot of money by just going around to people�s houses, Steve, and looking over their shoulder while they navigated through.  I�m just looking through my D-Link menu, and there are so many places it could be hiding.  And I�m just...



STEVE:  Yes.  Routers have gotten very sophisticated.



LEO:  And there�s no standard.  There�s no way of...



STEVE:  One of � right.  I�m sorry to interrupt.  One other thing that is worth mentioning is you might also upgrade your firmware.  People don�t generally upgrade their router firmware, you know, unless they have some specific need to.  But router manufacturers are more or less continually fixing problems and adding features.  So it might well be that when you bought your router it did not offer the ability to bock ICMP echo requests from going back.  But if you just brought it to a current firmware build, you  might find that that feature had been added.



LEO:  All right.  Moving along to another question here.  From U.K. to Minnesota we go.  A listener named Brian has been pondering virtual machine technology.  We did a couple of episodes on that.  He writes � more than two.



STEVE:  Yeah, we covered it pretty � we beat it to death.



LEO:  Yeah.  He says:  I�ve been hearing that only Windows Vista Ultimate Edition � oh, this is the new license agreement thing � will be able to run in a virtual machine.  I guess I understood that there is no way the OS would know it was running in a virtual machine.  Can Microsoft enforce this; and, if so, how?  This is actually a conversation Paul and I had on Windows Weekly when we were talking about these new license agreements.  And he was of the opinion it�s unenforceable.



STEVE:  Independent of the legal enforceability, it is certainly possible for Microsoft to detect this.  We talked about this during the episode on Blue Pill.  Because remember that the idea was that you could run some software that would switch your system into virtual machine mode on the fly, literally without a reboot.  Suddenly, a hypervisor, as it�s called, would be loaded and run.  And, I mean, literally your screen doesn�t even blink.  Nothing happens.  It�s just suddenly been subverted.



Now, the question was that, you know, whether this is a detectable thing because with modern virtualization technology everything can be captured.  Because the chip itself, the processor itself, so ports virtualization at the hardware level, there isn�t a way sort of broad brush-wise to detect it.  Except it�s so difficult to do a perfect job of virtualization.  So, for example, you might be able to virtualize a machine more easily that was not on the �Net.  But, for example, time is very difficult to virtualize, that is the passage time.



I mean, you could argue that, okay, well, if we knew that certain instructions that were going to take longer when the machine was running in a VM mode, their timing would be different.  And it is the case that instructions are � some instructions that have to go through this extra hardware virtualization take way longer than when they�re not.  So you would imagine that software could simply time the execution of the instruction.  But the timer itself can be manipulated by the virtualization layer so that the time appears to be the same.  The problem is, if you have access to the �Net, you are able to access time servers.  Now the job would require intercepting them, too, and faking them.



So I guess my point is, if Microsoft really wants to catch people running Vista in VMs, and you have to imagine Microsoft does really want to catch them, given this growing propensity that we�re seeing on Microsoft�s part of, you know, bolting down the licensing and enforcing it with technology, I�d have to imagine that Microsoft would be able to penetrate the virtualization layer and detect that something is going on that they don�t want to allow.



LEO:  Bottom line is it is detectable, it�s just hard to do.  You�d have to be fairly motivated to do it, to make the effort to do it.



STEVE:  Do we know what Ultimate Edition is going to cost?  Is there any pricing structure?



LEO:  Yeah, I think it�s 300 bucks.  It�s very expensive.  That�s if you buy it, you know, straight out of the box.  There are upgrades and so forth.



STEVE:  Right.



LEO:  So, yeah, I think that � I don�t know.  I mean, they know, for instance, if you move a virtual machine to another machine, they ask for activation again now.  So they�re getting fairly smart about this.  I would gather � I would guess you�re probably right, they are motivated.  They�ve certainly written into the � well, I guess their premise is, if you�re a home user, you�re buying Windows Vista Basic, what are you doing a virtual machine thing for?



STEVE:  Exactly.



LEO:  But as I pointed out to Paul at the time, well, I think more and more users are going to start using virtual machines, maybe even home users who want security.  So, let�s see, here.  Daryl from Kansas says � oh, it�s a MojoPac question, our last episode � I tried MojoPac and moka5 USB solutions, both of which you mentioned on Security Now!.  Then I thought, hey, how do I know I�m not installing a rootkit, spyware or whatever by installing these?  Question:  Do you check out that stuff before mentioning these products on your show?  I went to McAfee SiteAdvisor, keyed in moka5.com, it came back with a green check, meaning we tested this site and didn�t find any significant problems.  I did the same for MojoPac and received the message �No results found for mojopac.com.�  So I submitted it for review.  Do you do that?



STEVE:  Yes.



LEO:  Of course you do.



STEVE:  I will never casually mention a product, you know, from some questionable site.  And in fact, people who have listened to all of our podcasts will hear me, you know, very carefully say, when I do mention, you know, an underground site or a site which is known to be a hacker or cracker site.  I mean, I go to great pains to make sure people understand.  There�s just no way that, you know, an upfront company like MojoPac or moka5, where, you know, I go over their site, I look at their background, I figure out what�s going on.  I mean, I do � I�m not saying that I�m, you know, checking in detail everything that these companies are doing.  But I�m certainly looking to verify that these are, you know, well-known, reputable companies, you know, financed with venture capital, or founded by ex-Stanford professors in the case of moka5.  And, I mean, so I�ll be very careful when I talk about things that could have a negative consequence, and caution people that, you know, that�s the kind of URL we�re talking about.



LEO:  This is the guy who discovered spyware, Daryl.  C�mon, he�s not going to put spyware on your system.  But we should point out that, you know, there are lots of nefarious, sneaky people who are trying all this time to do this.  So mistakes could happen.  But Steve, I know, is assiduous in protecting you and would never � checks everything.



STEVE:  Yup.



LEO:  Never let anything go by.  Agent Smith � obviously not his real name � hiding somewhere in deepest Australia writes:  Well, we experienced our first really serious DDoS attack a few days ago, and it was an exciting experience.  Exciting in the way I imagine being shot is, shot at is exciting.  There were network engineers doing what they could while senior management�s attitude was, if not explicitly stated, �Get us back on the air now.�  Anyway, if memory serves, you and Leo covered DDoS in your �Internet Weaponry� episode a few months back.  Steve knows more about DDoS than he even lets on.



STEVE:  Yeah.



LEO:  Even then, have there been any new countermeasures developed to help deal with � DDoS, they�re Distributed Denial of Service attacks where a bad guy gets a bunch of machines, thousands, maybe more, attacking you all at the same time.  I�m guessing that the only way to reduce the impact is to install big pipes, redundant network hardware, and not to piss off the various attackers.  But I thought I�d ask.  Apologies for not giving my real name, mate.  Management�s a little spooked by the experience and want to keep it as quiet as possible.  Rightly so.



STEVE:  There are � this is a great question.  And of course�I sort of keep my eye on what�s going on with Denial of Service.



LEO:  Because you�ve been DDoS�d.



STEVE:  Have been in the past and, you know, have had lots of interesting experiences, you know, talking to ISPs and to other users.  The bottom line is that bot networks now, these remote-controlled trojan, zombie, whatever you want to call them, bot networks are so large that dealing with a denial of service attack that is sufficiently big is really a problem.  It�s important to note, for example, though, that the size of the attack is very important.  In the old days, when I was running the GRC servers here with me, only at the other end of two T1s, I had 1.54 megabits twice, so a little over 3 megabits of total bandwidth.  So, you know, three computers, or maybe ten, but certainly not hundreds or thousands, you know, a small handful of machines pounding on me could easily saturate my pipes at that point and, you know, take GRC off the �Net because the servers at the far end of the T1s would be filled � the connection would only be delivering a high percentage of garbage and not any of the good content.  Now, there are companies that are in the business of protecting people from big denial of service attacks.  And again, it�s all a matter of scale.



LEO:  What do they do?  Just they throw pipe, throw bandwidth at it?



STEVE:  Yes, exactly as Agent Smith here has said.  They have really, really big pipes, and they set up some proxies so that the proxy responds to the TCP SYN request to establish a connection.  And then if it�s a spoofed SYN, the proxy will respond to it.  But there isn�t a machine at the spoofed IP address so that their SYN/ACK going back from that big pipe proxy just flies off to Never Never Land and is never heard from again, only real people who send a SYN because they want to establish a TCP connection to the server.  They respond to the SYN/ACK; the proxy then turns around and opens a connection to the actual web server that is cowering behind this big pipe proxy server and receives the requests.  So the attack flood is completely blocked that way.



But these big pipes, meanwhile, are being flooded with stuff.  And if the pipes are not big enough, or even if the proxy servers that are attempting to respond to all this SYN traffic are not fast enough, you�ll still end up limping along a little bit.  However, this is what the gambling sites that have been under such trouble with denial of service attacks, and other sites that really have to stay on the �Net in order for their well-being to be preserved, these are the kinds of services that they�ve had to move to.



And notice that these big pipes are expensive, even when they�re not being used.  So what�s happened is it�s changed the cost structure of Internet connectivity.  You can get very inexpensive Internet connectivity that isn�t protected like this; and if you�re not a target and you don�t piss off anybody, as Agent Smith said, you�re probably okay.  If you�re a high-value target and it�s really important that you stay on the �Net, then what you end up doing is paying a lot more for your Internet connectivity because you�re having to finance your shared piece of the infrastructure to deal with attacks when they happen, even if they don�t.



So, I mean, it is something that has raised the cost of bandwidth for people who are high-value targets, and but there is really no other solution.  There isn�t anything, I mean, even theoretically possible that a small company can do to prevent themselves from just being taken off the �Net during a significant denial of service attack.  Again, they could increase their bandwidth, increase the, quote, the �size of their pipes� in order to withstand larger attacks.  But attacks now are so big because there are literally tens of thousands, even hundreds of thousands of bots in these networks that they�re just � they�re able to produce so much bandwidth, just unplugging your equipment and taking a vacation is the recommended course of action.



LEO:  Wow.  So another way people do this is by changing to a different IP address.  And but then, if the attack is aimed at not the IP address but the name, that�s a problem.



STEVE:  Well, Leo, and I don�t have to tell you about DNS propagation problem.



LEO:  Yeah, and that�s the other thing, sure.  Wow.



STEVE:  You know, you�ve had those for a few weeks when you changed servers.  It takes a long time for...



LEO:  It does.



STEVE:  ...the �Net to catch up when you change your IP.



LEO:  We�ve talked in the past about various schemes for kind of defeating denial of service attacks.  Did none of those really pan out?



STEVE:  Well, I mean, theoretically that much bandwidth has to go somewhere.



LEO:  You just can�t� if somebody�s flooding your pipe, it�s�flooded.



STEVE:  Yup, it�s over.



LEO:  There�s nothing you can do.  Brian Scallan asks from London:  The new Firefox 2.0 browser privacy settings allow�� by the way, it just came out this week, or actually last week � allow or disallow cookies without distinguishing between first-party and third-party cookies.  Mm-mm-mm, like Internet Explorer.  There is an option to explicitly allow or disallow cookies from user-specified sites.  But even then it doesn�t distinguish between the different types.  It would seem to be an all-or-nothing approach to cookie handling.  Is it less safe as a result?  Wow, that�s bad�news.



STEVE:  It is so bad, Leo.  I�m so...



LEO:  I can�t believe that.



STEVE:  I am so disappointed.  They removed � under all prior versions of Firefox up to 2.0, there was a nice setting in the UI that said �Allow cookies from the target site only,� and you could turn that off, and you got exactly what I recommend and what we�ve talked about, and we will be in the future because, you know, I�ve invested heavily in third-party cookie awareness on GRC for a bunch of stuff that hasn�t yet gone public.  And I know what a percentage of users have third-party cookies on.



LEO:  What is � would you describe what a third-party cookie�is?



STEVE:  Well, the idea is that a cookie is a token which a site you�re visiting gives your browser, which then it returns for successive requests.  The idea is that � and this again is something that originated, as did SSL, originated from Netscape.  When a browser makes a connection and requests a page, that�s a � we�ll call it a transaction, a web transaction.  It asks for the page, then it asks for all the GIFs and JPGs that are there and other assets in order to populate the page.  Then the user sits there and looks at it and decides what they want to do, and then may click a link elsewhere on that site or somewhere else on the�Internet.



Well, if they go to a different page on that site, the browser makes a new request, asks for the page and all the other goodies that the page contains, and then the user looks at it again.  The point is, there is no way to link those two pages.  That is, there�s no way to know that the same user who looked at the first page then looked at the second page because they are completely separate transactions.  Now, if we were in a proxy-free world, the server might look at the IP and notice, oh, look, we got a request from this user�s IP a minute ago, so it�s the same guy.  Except that we know ISPs � we just finished talking about ISP caching proxies � ISP proxies will have the IP which is coming to the server.  So the server cannot use the apparent client IP in order to disambiguate all of the traffic coming to it.



So what Netscape did was they created this thing called a �cookie,� which is part of the headers, it�s part of the request and the reply headers at the beginning of the query or the response from the browser or from the server.  The idea is that, when the client browser makes a request, it checks to see if it has a cookie, as it�s called.  A cookie is just � it�s called an �opaque token,� meaning that it�s some blob of data that has no particular meaning to the browser, but it does mean something to the server which gave the browser the cookie.  Normally it�s, you know, some � a little blob of crypto stuff or a serial number that�s been encrypted or something.  The idea being that the browser, if it�s got a cookie � if I�m at Google.com and the browser�s about to make a request, it looks to see if it has a Google.com cookie.  And if so, it adds that to the headers in the request.  That allows Google to check its database and see who it is that this user is.  For example, it allows you to stay logged in to Gmail over time.   It allows, you know, this is the mechanism that allows eBay to know, once you log in, who you are as you move along.



There are other approaches that involve putting this sort of information up in the URL, but cookies are a very nice means for doing it.  And, I mean, and they work really well.  The problem is, and this is something that Netscape sort of considered but didn�t get worried enough about, is that all assets that are populating the page are cookie-enabled, not�just the main query for the page, but, for example, the�images, as I mentioned.



LEO:  Banner ads, images, all of that stuff.



STEVE:  Well, exactly.  Banner ads are the trick.  Because companies like DoubleClick, major ad services, realized that, hey, we can give users a cookie, too, when they ask for an image on our page, you know.  And that�s a unique token that follows the user around the �Net.  And that�s the problem, is these third-party cookies, as they�re called.  A first-party cookie is a cookie between you and the site you�re visiting.  A third-party cookie is a cookie which your browser gives when it asks for an asset, not from the site you�re visiting, but for example from an advertising server�s site.



LEO:  Now, why does it matter if DoubleClick gives me a cookie when I go to the CNET page?



STEVE:  Well, what matters is that there is � well, essentially, that cookie you get when you go to the CNET page is returned to DoubleClick if they�re an advertiser on�MSNBC.



LEO:  Uh-oh.



STEVE:  Or an advertiser on Microsoft.  Or on...



LEO:  So they can follow me around.  CNET can�t follow me around.  MSNBC can�t follow me around.  But the advertiser that�s common to all those sites absolutely can.



STEVE:  Yes, it�s third...



LEO:  They can know where I�ve been.



STEVE:  It�s third-party cookie tracking, and it is absolutely done everywhere possible, and essentially to�compile a dossier, a profile of all the sites you visit.��Now...



LEO:  Now, you may say, well, that�s harmless.  But if you give one site some personal information and they can track that and combine that with the cookie, suddenly they�re starting to really build quite a bit of information up about�you.



STEVE:  Yes.  In fact, there are sites that have been set up�� there were sites that offered, like, free prizes if you just, you know, it was like, here, here�s a chance to win a free prize, fill out this form.  These sites are operated by the advertising companies.  They contain ads from the advertising company.  Thus they are supplying that advertiser cookie, and they provide the data you fill out � well, I mean, it is the advert- it�s a front put up by the advertiser company to get your name, address, physical address, phone number, email address, and essentially to acquire non-anonymous information from users.



LEO:  Oh, interesting.



STEVE:  Then they�re able to sell this � and they then merge that with everything else they know about you.  They know if you went to some search site and spent three weeks searching about HIV/AIDS.  Because another problem is the so-called �referrer.�  And we�ll talk about this because, I mean, I�ve got a real issue with third-party cookies.  The referrer in searches contains the information that you search about.  It turns out that�s provided in the query to the advertiser.  So advertisers not only know all the sites you go to, they know what things you search for when you use search engines.



LEO:  And as we have seen in the past, you compile enough information like that, you know everything about somebody.  I am � I�m just � because I couldn�t believe this, just downloaded and installed Firefox 2.0, and he�s absolutely right.  They�re � the only cookie management is to turn it off or leave it on.  They�ve completely gutted what used to be a pretty good cookie management tool.



STEVE:  Yes.



LEO:  Now you have one checkbox that says �Accept cookies from sites,� yes or no.  And then you can have exceptions.  So you probably would want to say, you know, put DoubleClick.net and always, you know, if you could add that list, at least that would let you block the major guys.  But it�s not.  It�s not a good alternative.



STEVE:  The good news is, this is configurable in Firefox�2.0, but not through the UI.  You need to use the configuration file.  And it is possible to still say, I only want to accept first-party cookies; I want to deny thirdparty cookies.



LEO:  So they just don�t expose it in their regular�interface.



STEVE:  I have no idea why they took it off the UI, but yes.



LEO:  You do about � about:config will show you all of these�settings.



STEVE:  Exactly.



LEO:  And do you know what the setting is that we have to�change?



STEVE:  Yes.  It�s network.cookies.something.



LEO:  All right.  Let me look for it.



STEVE:  We�re going to talk about it, and my site will be talking about it.  I don�t have it up yet, so don�t go looking for it.  But they must have just run out of UI space.  I mean, they must have had other stuff they thought was more important, they didn�t want to � you know, just feels like why would you remove something like this?  And they may have figured that people don�t care or don�t know.  Well, it�s certainly the case that people don�t know.  I believe, you know...



LEO:  They care if they find out.



STEVE:  If they understand.  And so I�ve invested a lot of time and engineering over at GRC, and it�ll be another major feature of GRC.  In fact, it�s � I did the menuing system because cookies was something I wanted to get done, as well as the long-awaited OpenVPN documentation, both of which are waiting for me to get the menus online, which is the next thing I�m going to do when I get back to GRC.  And anyway,�but...



LEO:  I�m looking at the � I�ll tell you, there�s no obvious place.  I mean, I see a lot of network cookies, always accept session cookies, network cookie � there�s one that�s called network cookie, cookie behavior.



STEVE:  That�s the one.  You set that.  I think it�s normally zero...



LEO:  It�s zero.



STEVE:  ...and you set it to one.  And it only allows firstparty cookies.



LEO:  You wouldn�t even know to set that.  It doesn�t say anything about first-party/third-party.  So, again, you could surf to about:config and change network cookie � network.cookie.cookie behavior to 1 by double-clicking it, and that�s going to do it?  Wow.



STEVE:  Yes.  And if you do a Google search for Firefox 2.0 third-party cookies, you�ll find a bunch of controversy about this, and dialogue.  And these instructions are available there.



LEO:  That�s very disheartening, that they would take such a big step backwards.



STEVE:  Yup.



LEO:  All right.  I�m sorry.  I�m just very upset.  Gary Swann sends us a great question from England:  If my ISP uses a transparent proxy � transparent proxy � how do I know if I�m getting the latest web page?  Even if I reload the page, surely I get the page from the proxy cache instead of the latest page from the web server.  Is that true?



STEVE:  He�s exactly right.



LEO:  Wow.



STEVE:  If your ISP uses a transparent proxy, there�s no way you can get around it.  You know, all of your web access is going through your ISP.  They�re filtering it.  There�s nothing you can do.  And there�s no way around it.  I mean, if the cache is not set up correctly, it will not be � it will be keeping a copy and feeding that back to you.  There just � there isn�t a way to avoid that.  Hopefully the cache is configured so that � and the web server on the far end is configured � so that if pages need to kept fresher than the web server is serving content that says �Do not cache this,� or �This expires in five minutes,� or whatever period of time.  And so, again, it requires that the rest of the system be functioning correctly.  But if you�ve got a cache in the way which is misbehaving, there�s no way to get around it.



LEO:  Wow.  Wow.  That�s just the nature of caching.



STEVE:  Now, you could do something like, you know, go to a third-party service like Anonymizer or a TOR proxy that we will be talking about.  So you could come up with another way to circumvent the transparent cache by not routing your web traffic through your ISP at all.  And so, you know, there are, like, you know, ways like that.  But it, you know, requires a lot of work.



LEO:  Right.  Monty Janak of Needville, Texas was wondering:  If a virus or worm edits my DNS config, could I get sent to a malicious DNS server website on the Internet?  This seems like a security issue similar to editing the hosts file.  I agree if a bug gets this deep into my system, I�m in trouble anyway.  Is this a concern?  Oh, that�s an interesting way to screw up somebody�s system.



STEVE:  Yeah, it�s yet another clever way that Windows could absolutely be messed up. DNS in network configuration can be set to � does not have to be set to your ISP�s DNS.  In fact, we got a bunch of people on our newsgroups who have found faster DNS servers.  And in fact, Leo, you�re now becoming a fan of the Open DNS servers.



LEO:  I was briefly.  Changed away from them, actually.



STEVE:  Yeah.  I have also.  So the point is that your computer can be instructed to go to whatever DNS server you tell it to.  If something gets in your machine, changes those settings, then, yes, you�re in trouble.  on the other hand, this is where I remind people, if something is in your machine enough to change your DNS settings, you�re already in trouble.



LEO:  And if you were on a Mac, it�d ask you for a password anyway before � it doesn�t let me change them without asking for a password.  That�s why security�s so important.



STEVE:  Right.



LEO:  Scott Burr of Beaverton, Oregon says:  Now that Internet Explorer 7 is out, can we safely go back to using it for browsing the Internet?  The reason I ask, I still don�t see any new feature that allows us to turn off JavaScript for selected sites.  That is, JavaScript can install malware programs, as we�ve talked about before, through buffer overruns.  You�re a little more worried about JavaScript than I am.  But is IE7 better at protecting against these exploits?



STEVE:  It is as good as 6, and the mechanism still exists.  The way to do this is � it�s not clear.  And again, it�s one of the things I will � it�s on my list to get around to documenting, although we have talked about it.  IE has this  notion of zones.  You�ve got the trusted zone, the Internet zone, the untrusted zone.  What you�re able to do is, by default all websites are in the Internet zone.  That is, they�re exterior, they�re external.  And when you access a website, IE uses the security settings for the Internet zone.  So if you turn that security setting all the way high, it will disable JavaScript for all sites on the �Net.



Now, that�s a problem because you may want JavaScript for Amazon or eBay or Google.  Certainly you like to have, for example, Google Mail needs JavaScript in order for its Gmail browser-based stuff to function.  So then what you do is you place the specific sites that you like and you trust in your Trusted Sites zone, *.google.com, *.microsoft.com, *.ebay.com and so forth.  And then automatically, when IE6 or 7 are visiting those sites, the browser looks in the list of trusted sites, sees that you trust this site, and it uses the lower security, the default security, for only the sites you trust.  So as with IE6, you�re able to do the same thing with IE7.  And it is the way I surf.  I mean, it is absolutely the way I use IE in a secure fashion.  Sites I visit never have scripting enabled at all.  And only when I decide to trust them, then I lower my shields and allow scripting to function on the site.



LEO:  Well, now we know.  In fact, after this Mozilla Firefox thing, I�m thinking maybe I�ll start using IE7.  At least it can block third-party cookies without going into some strange config file.



STEVE:  Yeah.



LEO:  Well, that�s it for the day.  We have 12 questions, 12 answers.  I�m sorry to come to the end of it, but it�s been a very interesting story.  I have to say we thank the folks at Astaro for making this all possible.  They�re our sponsors on Security Now!, and without them, well, I just don�t know what we�d do.  Astaro, actually we�re just � we love having them on because they�re a very exciting company.  They do great stuff.  They do the Astaro Security Gateway.  You�ve probably heard us talk about the Astaro Security Gateway.  If you�re a small or medium business network � business, and your network needs superior protection from spam, from viruses, from hackers, complete VPN capabilities, intrusion protection, content filtering, and an industrial strength firewall.  Who knew that it could do so much, one little box could do all that.  One single, easy-to-use, high-performance appliance, that�s the Astaro Security Gateway.  You want to try it free in your business, contact Astaro, Astaro.com, or call 877-4AS-TARO.  Built on open source, this stuff is really good.  And of course if you�re a non-business user you could download a free version just for yourself at Astaro.com.



Also want to point you to TWiT.tv/dell.  That�s where the Leo�s Picks live on the special page on the TWiT site.  If you�re buying a Dell computer, if you�re looking for a Dell computer for getting ready for Vista, take a look at the great Dell deals.  I�m loving this XPS 700.  Oh, man, what a nice computer.  But there�s lots more there at TWiT.tv/dell.



Steve Gibson, of course, is at GRC.com, home of SpinRite.  More happy SpinRite customers to tell us about?  Every time we do the show you�ve got somebody good, saying something�great. 



STEVE:  I mentioned � remember last week I mentioned the guy who � for whom it took two and a half days to recover his friend�s eight gigs of photos.  The drive was completely gone.  It was a Maxtor drive that was, like, in really bad trouble.  And I mentioned that, you know, even though two and a half days seemed like a long time, you know, compared to sending it off somewhere, it was, you know, substantially�less.



Well, I did get a piece of mail.  This guy writes:  A week ago I started my day with a Blue Screen of Death, advising that I had an unmountable boot volume.  Efforts by a Dell tech only lead him to the conclusion that we should reformat the drive and lose all my data.  Nothing would recognize the drive, and all of the checkdisk commands in the book could not even see it or result in anything but the same blue screen on every reboot.  A Maxtor utility that I ran from a downloaded file advised me to return the drive for a replacement.  After getting estimates ranging from $400 to $2,700 to recover my data, and trying numerous other �tricks,� in quotes, recommended by online chats, et cetera, I was fortunate to come across SpinRite.  At first the glowing testimonials seemed...



LEO:  Too good to be true.



STEVE:  He says:  At first the glowing testimonials seemed just too good to be true.  And I will admit that I thought they may have even been fake.  So I invested the $89, downloaded the file, and fired up the floppy.  At first I thought that it was going nowhere because after four hours it still said 2% complete.  I figured I would leave it running over the weekend.  And imagine my surprise when I came in this morning, saw the message that it had completed, removed the floppy, and it booted up.



LEO:  Wow.



STEVE:  Ran checkdisk and then started Windows XP.  All I can say is wow.



LEO:  Wow.  That�s what I say.  Wow.



STEVE:  He finished, says:  Thank you for taking the time to create this program that runs off a low floppy, yet salvaged my 80-gig drive.  It�s bad enough losing data, but I also saved the hours it would have taken to recreate my desktop, links, et cetera.  Needless to say, I�m impressed.



LEO:  Cool.  Steve, you�ve done it again.



STEVE:  Love getting those notes.



LEO:  GRC.com, SpinRite, everybody�s favorite � my favorite � disk maintenance and recovery utility.  SpinRite.info for more testimonials.  Of course, when you...



STEVE:  For real testimonials.



LEO:  They�re not made up.  Not made up.



STEVE:  Not made up.



LEO:  You do also get at GRC.com the 16KB version of the show, the transcription that Elaine does, and lots of show notes.  GRC.com.  That�s Steve�s site and the home of Security Now!.



Steve, we�ve had a great time.  I will be back from the cruise next week.  We can talk more about security on Thursday.  What do you say?



STEVE:  I think that�s a great idea, Leo.  We have never missed a week, and as far as I�m � if there�s anything I have to say about it, we are never going to.



LEO:  I love the...



Copyright (c) 2006 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#65

DATE:		November 9, 2006

TITLE:		Why Is Security So Difficult?

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-065.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo get a bit philosophical this week.  They discuss the broad nature of Security � all security, not just computer security.� They propose a new definition of "Security" and flesh it out with examples to illustrate why security is so difficult, if not impossible.



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 65 for November 9, 2006:  Why Is Security So Difficult?



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.



Time to talk security with my personal security hero, Steve Gibson, a man who I trust implicitly.  If Steve says do it, I do it.  It�s good to talk to you, Steve.



STEVE GIBSON:  Thank you, Leo.  Great to be back.



LEO:  That�s a heavy burden.  Do you feel like that�s tough?



STEVE:  No.  Because, you know, I spend a lot of time thinking about this stuff.  I�m involved in it.  I love the technology.  I mean, I�m, you know, I�m a technology junkie.  And, you know, much as once upon a time hard drives had this problem, and I used my love of technology to deal with that with SpinRite, now, you know, the next real big deal with the Internet has been security.



LEO:  Yeah.



STEVE:  So, you know, I�ve sort of rolled my sleeves up and, you know, did ShieldsUP! and, of course, you know, got into this whole spyware thing and malware and, you know...



LEO:  Well, we really have to thank you.  And at this point you don�t make any product, which in a way � for security, which in a way to me gives you more credibility.  I mean, if Symantec says viruses are on the upswing, I always have to think, well, hmm, who benefits from that?  But when you say it, I know that you�re not benefiting from it.  This is � and I also know how scrupulous you are about facts.  This is an issue.  So...



STEVE:  Yeah, well, I love it.



LEO:  The only criticism sometimes you get is that you�re like Chicken Little, that sometimes you overstate the security issues.  Do you have a defense for yourself in that�regard?



STEVE:  Well, yeah.  And we�ve sort of talked about this.  When we�re doing this, I�m trying to say to people, look, you know, not everybody is the same.  And in fact we�re about to talk about yet another Microsoft zero-day exploit which is on the �Net, it�s an ActiveX control.  And so last time we talked about this I was very careful to say, and I hope our listeners heard me say, you know, if you�re a person who surfs with scripting enabled, if you�re using IE, if you go to, you know, random sites that you don�t know often, then this is probably worth worrying about.



LEO:  Right.



STEVE:  Whereas, you know, if any of those things are not true, you know, basically you hang out on MSN or Amazon or, you know, your breadth of reach with your browser is not extreme, then you can probably wait for Microsoft to catch up with their next security patch and, you know, when presumably they�ll fix it.  So, you know, as we�ve said before, you can be bitten by things you�re not aware of.  And I�m sure from, you know, looking at all the feedback we get that people want to know; and they�ll let, you know, they respect the fact that we�re trusting them to decide whether this is something they want to deal with or not.  I mean, Leo, remember, here you and I are, not with any antiviral software on our machines.



LEO:  Shhhh.



STEVE:  So it�s not like...



LEO:  Don�t tell anybody.  I don�t want anybody coming after�me.



STEVE:  So, I mean, which most people think is nuts�because...



LEO:  But we know what we�re doing.



STEVE:  Well, yes.  And so I guess my point is it�s not like we�re sitting here, you know, pumping out fear and worry and feeling that.  The idea is to say, look, here are the facts.



LEO:  Right.



STEVE:  As clearly and flatly as we can provide them.  And we let people figure out how they feel about it.



LEO:  Right, right.  And then you be the judge.  You decide what you want to do about it.



STEVE:  In errata from prior weeks, I did want to mention that � remember that we had some discussion about remote access to Gmail using POP and SMTP.



LEO:  Right.



STEVE:  And I wanted to confirm that Google Mail does absolutely allow you to configure your regular mail client with secure connections, using SSL, to connect to Gmail servers.  So you can have exactly the same experience that you would normally have with Gmail, you know, going to your web browser and opening Gmail.  You get the same interactivity with your own email client, just setting up an account on your email client to go and fetch and send your  mail through Gmail.  So it�s very cool.



LEO:  Now, actually, this came up on the cruise.  We were talking about SSL.  Security was a big topic of discussion, of course, as you might imagine.  And somebody pointed out, I think one of the editors of Macworld pointed out � probably Dan Frakes � that some online mail accounts let you use SSL to log in, but then are unencrypted once you�re transferring mail.  And some are not.  Is that the case?



STEVE:  Like web browser based?



LEO:  Yeah, Hotmail, that kind of thing.



STEVE:  Well, yes.  And in fact the way Google works is, if you go to Google with a non-https URL, that is, you just say http://mail.google.com, you will briefly go secure while you�re logging in.  Then you�ll notice in your address bar your subsequent use of Google is just over a regular connection.  But you can go there deliberately with a secure https://mail.google.com, and it recognizes you�ve done that, and it will leave you with a permanently secure connection for all your transactions.



LEO:  I�m just doing it right now.  And so it stays https if you start https.



STEVE:  Yes.



LEO:  And that�s the key.



STEVE:  Exactly.



LEO:  If you see that �S,� you know you�re all right.



STEVE:  Right.



LEO:  All right, that�s good to know.  So and you can use it for SMTP as well, which is kind of cool.



STEVE:  Yes, you can, so you�re not only able to remotely pull your mail, but you can send mail.  And because I wanted to give this a try, I used my Gmail account from my normal Windows, you know, because I�m an old Eudora user.  And they have a knowledge-base article that I�m going to put a link to on our show notes for this show that shows you, for all the different clients that they know of, and my version of Eudora 5.1, which is a bit older than where Eudora is now, it was covered step by step, screenshots showing you how to configure your client in order to do this.  And then I looked at the mail that went through Gmail from an anonymous standpoint, that is, you know, was the IP from which I originated this available, and the answer is no.  So it provides a nice layer of anonymity in the same way that, like, going to some location and using a browser to do the Gmail transaction would.



LEO:  Excellent.



STEVE:  So it�s very nice.  I just wanted to confirm to people that, you know, remote access to Gmail is possible from an email client, and it requires you to be secure.  Security is there.  I don�t even think you can turn it off when you�re using remote access that way.



LEO:  Very cool.  We also have a big zero-day exploit, as you mentioned, in...



STEVE:  Well, I�m actually not sure how big it is yet.  I dug around, and I looked, and it looks like this one is � if nothing else, this is a slower start than we�ve seen before.  On the other hand, you know, people are actively looking, that is, hackers are actively looking for ways into people�s machines.  So it is certainly a concern.  This is not � it�s interesting.  This is not an XML parsing bug in something that IE was meant to use, such as the last one.  But it is an XML problem.  The idea is there is something called XML Core Services, which is an ActiveX control, which Microsoft provides so that developers of Windows software can add XML awareness to their applications.



LEO:  Ah.



STEVE:  But because it�s an ActiveX control, IE is able to invoke it because IE is, you know, unless you otherwise limit IE, it�s able to access any ActiveX controls in your system.  So the exploit for this � and there is exploit code on the �Net, and it is being actively exploited to install malware in people�s machines.  So it�s worth knowing.  This is a zero-day exploit, which as we know means that the first awareness of the problem occurred when someone discovered it already being used.  So, you know, zero day.  It was, you know, it was found out in use.  And it�s being used to install malware.  At this point it has not seen widespread use, but we can presume it�s going to be.



Now, Microsoft�s second Tuesday of the month is next Tuesday, which doesn�t provide Microsoft with much of a window in which to fix this, you know, based on how long Microsoft tends to take.  So I don�t know for sure they�re going to lock this thing down next Tuesday.  If they don�t, then this has a much greater opportunity to grow a lot and spread in the meantime.



LEO:  Now, if you use your protection technique to protect � if you still want to use IE � and Steve uses IE, but he uses the trusted and untrusted zone settings to protect himself.  That would work in this case, wouldn�t it?



STEVE:  Absolutely.  I mean, and that�s what I like about this so much is, you know, as I�ve talked about it, wherever I go on the �Net I am locked down.  I�ve got the Internet zone set to high security.  And then I�ve got my trusted zone set to medium, which is the default security.  And then for sites where I want them to work, that is, if I go somewhere and it doesn�t work, and I look around and it�s like, okay, this is worth lowering my guard for � and, I mean, that�s what you�re doing if you�re going to allow a site�s scripting to run in your browser, you�re lowering your guard � then I add that URL to my trusted zone, as it�s called in IE.  And so what happens is, unknown sites are always maximum security with scripting disabled.  And it�s only sites that I have chosen to trust that, you know, where scripting then runs.  And so, yes, I would be protected by default in that situation.  Now, of course, if I made the mistake of trusting something that I should not, then that�s still a problem.  So it�s not like this is � like doing this means you never need to worry about Microsoft code ever again.  I mean, you still do.



LEO:  It�s not a panacea.  And key, by the way, to this and to a lot of security settings, including firewalling, is you start by denying everything.  And then you explicitly add sites, rather than vice versa, slowly taking sites off the list.  You deny ActiveX to everybody at first.



STEVE:  It�s funny because original firewall logic, when firewalls were brand new, something bad would happen, and the IT administrators would block that port or block that...



LEO:  Kind of closing the barn door after the horse had�bolted.



STEVE:  Well, I mean that the logic was reversed.  It was the old-fashioned logic of block a problem rather than permitting only the things that you know you want.  And of course that�s completely flipped over now so that, you know, firewalls are blocking everything by default, and then only allowing traffic in which they�ve been � that they�ve been told to and configured to.



LEO:  Right.



STEVE:  So in the case of this ActiveX exploit, there is something in IE which we�ve talked about before called the �kill bit.�  The kill bit is basically a permission for IE to access any ActiveX control.  ActiveX controls are identified internally with one of these Microsoft Windows GUIDs, the GUID, the Globally Unique ID.  Which is I�m sure when people see it they go, oh, yeah, I�ve seen those before.  It�s weird, too, because I�m seeing them surfacing more and more when I�m surfing around Microsoft�s site.  I�m, like, seeing these GUIDs printed out.  And there are a lot of them in Vista also where I�m seeing them.  I don�t know if this is going to go away once we go to final RTM code, or if Microsoft is intending to begin exposing users to these bizarro, you know, serial number-looking things.



But anyway, the point is that there again on our show notes page for this show, No. 65, I have a link to a little registry script that anyone can download.  You simply run that, it�ll pop up a dialogue saying � because it says .reg is the extension � pops up a dialogue saying do you want to install this in your registry.  And what this is, this little script � and this is directly from Microsoft�s page, and I also have a link to that, to Microsoft�s page, so people can go back to the original source also.  All this does is add an entry in the registry to turn on the kill bit for IE for this particular control.  There�s no reason that IE would ever be expected to use this particular ActiveX control, unlike the prior, the real XML parsing ActiveX control where we had the problem last time.  So...



LEO:  So I�m � is this something � does this prevent all ActiveX execution?  What does kill bit do?



STEVE:  No, it prevents IE�s use of this particular ActiveX�control.



LEO:  Oh, just this control is disabled.



STEVE:  Just this control where the problem was found.



LEO:  Got it, got it.



STEVE:  And that�s why I was talking about this wacky GUID is that it�s identified, the ActiveX control is identified by one of these bizarre, you know, curly brace, and then I think it�s eight hex characters, a hyphen, then a couple more groups of four hex characters and so forth, in order to, like, make up this weird globally unique ID.



LEO:  Ah.  So each ActiveX control has this ID.



STEVE:  Right.



LEO:  And you set the kill bit individually for each ID.



STEVE:  Exactly.



LEO:  Got it.  So you�re going to find � you don�t � you need to know that � it�s actually a CLS ID, I think they call it, when it�s an ActiveX control.  You need to find that ID number and then � in your registry, and then turn the kill bit off.  Or better yet, use this script.  It�ll do it automatically.



STEVE:  Well, actually, and it may not be in the registry.  It may or may not already be there.



LEO:  Oh.



STEVE:  But you do need to add a key...



LEO:  I see, I get it.  I get it.



STEVE:  ...in order to add this optional kill bit.  And then that�ll prevent IE from having access to it.



LEO:  Got it.  Got it.



STEVE:  And then the last thing I wanted to mention is something I�ve talked to you about before.  This is just in the errata section.  And this is a program that I just want to tell our listeners about because I�m � I can�t live without it now.  And I learned about it from seeing it demoed last time I was on the Call For Help show with you, Leo, up in Toronto.  And that�s a little piece of freeware called allSnap.  AllSnap...



LEO:  You�re really a fan of this.



STEVE:  And what brought it back again...



LEO:  Mike, Mikey discovered this one.



STEVE:  Yeah, well, what brought it back again is that I was talking to my tech support guy, Greg, on the phone yesterday.  And we were, you know, covering our, you know, and sort of catching up on various GRC stuff.  And he said at the end of our conversation, �And you know what I can no longer live without?�  And I said, �AllSnap?�  He said, �Yes.�  Because he�s anal in sort of the way I am.  You know, I was telling you that I spend all this time adjusting the position of my windows so that the, you know, they�re exactly on the edge of the screen.  And all allSnap does is makes the edges of windows and other application windows sticky.  So that, I mean, you know, and we�ve seen these in some apps have a UI where their own windows will be sort of snappy.  They�ll, like, snap to the edge of your screen or in the upper corner, just to sort of place themselves for�you.  What this does is this just installs a global hook in Windows that provides this sticky functionality to your entire OS experience.



Anyway, just if anyone puts allSnap, just one word, allSnap, into Google, it�ll take you to the programmer�s site and to a free downloads page.  And it�s very clean.  When I use a Windows � I have a whole bunch of Windows machines.  And I think they all now � except I think I have one XP machine that doesn�t yet.  Whenever I�m using one and the windows don�t snap, it�s like, okay, you know, I�m going to install this right now before I go any further because I just � I love it so much.



LEO:  We�ll put a link in the show notes, too, since people obviously want this.  Now I�m wondering if I need one for the Mac.



STEVE:  Exactly.  I mean, I wish the Mac had it.  So...



LEO:  Well, it�s probably pretty easy to write, so I�m sure somebody will do that just for you, Steve.



STEVE:  Well, if so, I want to know about it because it would be great if the Mac had it, too.



LEO:  AllSnap.



STEVE:  So I wanted to talk today about something I�ve been�� I�ve had on my mind for months.  Because I�ve been trying to figure out when I�m, like, talking to my friends and family, you know, we�re talking about, you know, the war in Iraq and, you know, whether it�s made us more safe or less safe, and denial of service attacks and like, and why, you know, why there isn�t anything people can do.  We were talking about this, you know, you and I, Leo, just the other day.  And also, similarly, like this new ActiveX zero-day exploit.  I mean, all of this is sort of why is security so difficult?  And I finally, I think, came up with sort of a way of framing an answer that I really like.  Because, you know, as I�m talking to friends, you know, they know I�m into computer security.  And it�s like, well, you know, why is it such a problem?  And...



LEO:  Let me � when you frame it that way, do you mean why is it so difficult to make a secure operating system?  Or why is it so difficult for end users to secure themselves?



STEVE:  No, why is it so difficult for the United States to be secure even.



LEO:  Oh, that kind of...



STEVE:  I mean...



LEO:  So just why is it so tough to be � to make something�secure.



STEVE:  Yes.  Why is security � and I�m glad you asked the question because I want to make sure, I mean, like, everything, you know, against terrorism, against denial of service attacks, which is sort of a form of terrorism, against ActiveX controls having bugs in them, why is this so hard?  You know, what�s the problem?  And I, you know, I mean, I knew sort of in my guts just intuitively that I � it was interesting, I was having a hard time communicating it.  And so I�ve spent a lot of time trying to figure out how to explain to people what the problem is.  And I�ve come up with something that I like because I think it begins to address that.  And so I define security as the absence of all insecurity.  And I think that�s the way to think about�it.



LEO:  That makes sense, yeah.  So all right.



STEVE:  So, well, and so if you think about that.  So security is the absence of all or any insecurity.



LEO:  Eliminating all danger or, in the case of computers,�eliminating all chances of loss of privacy, loss of integrity.



STEVE:  Or eliminating all bugs.



LEO:  Well, that�s the problem with computers, isn�t it.



STEVE:  Exactly.  And so, I mean, that begins to take us towards an understanding of why we continually have these problems is that, you know � and it�s also why � I mean, I really like this because the more I think about this definition, security is the absence of any and all insecurity, it then, for example, answers Steve Ballmer�s famous outrage about why do we still have all these buffer overrun bugs.



LEO:  Right.



STEVE:  I mean, it says the only way to be secure is to have absolutely nothing that�s not secure.  Because anything that is not secure obviously creates an opportunity for insecurity.  So, you know, it�s well understood that software has bugs.  I mean, you know, and I�ve heard � I cringe when I hear people say, oh, well, all software has bugs.  Because, I mean, you know, I take it personally because I�m a software developer, and I would like to imagine that my software, at least, doesn�t have bugs.  But the fact is, this software is incredibly complex, as I�ve certainly said before.  That�s, I mean, you know, that�s my defense for this.



But I�ve � in thinking about this more in the context of security, I realized there are two different classes of software bugs.  There are bugs and problems that users stumble over in normal use.  That is, you�re using some application, and it does something wrong.  And it�s like, oh, okay.  I mean, and frankly, I�m sure anyone who uses Windows and PCs in general has just sort of become accustomed to that.  You know, the software that they use oftentimes, you know, freeware, shareware that they�ve downloaded that�s going to perform some useful utilitarian task, there�ll be something about it that just kind of doesn�t work right.  And it�s like, okay.  And, you know, you close it and restart it.  You figure out a workaround yourself.  Maybe you report the problem.  But, you know, we�re encountering them all the time.  So one class of bugs are those sorts of things, the things we stumble over in normal use.



But a very different kind of bug are those which manifest themselves from deliberate abuse, that is, deliberately doing something that the software author didn�t expect, didn�t plan for, didn�t protect against.  And it�s fundamentally different than � that is, to try to find problems than to stumble on them when you�re not trying to find them.  Because it�s � there is just � the nature of the software we�re using is that it is, I mean, well, to finish that sentence, that it is so complicated.  I mean, and if nothing else demonstrates that, just look at the size of the code now that we�re loading onto our machines.  You know, it used to be, I mean, we all remember the day where you would buy a software product, and it had a couple floppy disks, you know, a couple 1.44-meg diskettes.  Now nothing doesn�t come on anything but CDs.  And it�s, you know, it�s hundreds of megs.  And so there�s just � there�s so much more code and so much more opportunity for mistakes.  So this notion that software could appear to be fine if it�s functionally okay, yet still have exploitable problems if someone were actively trying to find them.  And of course that is what hackers are doing today.



Now, the reason we�re seeing so many problems with Internet Explorer now is that there are two ways that hackers have access to us.  Either they come to us, or we come to them.  Now, the traditional big problems that we saw in the earlier days of Windows, actually before Service Pack 2, were, you know, were worms, Code Red and Nimda and Blaster and these big worm problems.  Well, worms were things that came to us.  That is, they were a real problem because they were inherently able to exploit an opening that existed in a large base of Windows platforms in order to attack the computer remotely.  They came to us.  The reason that XP Service Pack 2 was such a win is that Microsoft finally turned on the firewall by default, so that no longer, unless something, you know, special was done, but in any event you wouldn�t, you would no longer have the default majority population of Windows machines accepting unsolicited incoming traffic.  Well, in one day, I mean, in the day that Service Pack 2 turned on the firewall, the huge problem of they come to us ended.  And, I mean, and things are, like, way better ever since.



LEO:  Yeah, it fixed it.  It just fixed it.



STEVE:  It just � and, you know, overnight.



LEO:  Yeah.



STEVE:  And so, you know, as I was saying for years before that, I don�t blame Microsoft for mistakes.  I was upset with them for policy.  And their policy was to have all these services running with open ports, I mean, literally creating the they-come-to-us trouble, which they finally, thank goodness, ended by turning a firewall on by default.  And of course way before that anybody that was following along with the good idea of running a NAT router � a NAT router of course being, you know, a hardware firewall in the sense that any incoming traffic is just dropped unless it�s expected � that also would have terminated the them-come-to-us trouble.  But on the other hand, as the success of the worms demonstrated back in those worm years, the huge bulk of Windows machines were not behind any kind of firewall.  Those Microsoft services were exposed, and they were coming to us.



Now, what we�re left with then is the reverse model today.  And I don�t see this going away anytime soon, unfortunately.  And that is the we come to them.  And that of course is all the current exploits and troubles that we�ve been talking about are inherently we come to them.  And of course the way we come is with our browser.  That�s the way the computer extends itself out onto the Internet.



LEO:  That makes it a lot easier for hackers.  They don�t have to come to us anymore.



STEVE:  Well, it�s easier from the standpoint of they lay traps which some number of users fall into.  But it is certainly the case that the number of machines affected by any of these traps is inherently going to be much smaller because, you know, no super-popular, high-volume website, you know, Google, Amazon, MSN, and so forth, you know, CNET, you know, none of these big sites are under control of hackers.  You know, certainly it�s conceivable that they could have a problem, that a site could get some malicious code installed on it that would affect a lot of people in a short time.  But that�s, you know, that�s the exception rather than the rule.  So it is worth mentioning, especially in the context, Leo, you were saying of like, you know, us crying wolf or the sky is falling.  It�s worth noting that it�s only people who are generally venturing out and want to�poke into dark corners of the Internet that are exposing�themselves.



LEO:  Well, but I have to point out, there have been cases, MySpace leaps to mind...



STEVE:  Ah, it�s a perfect example, yes.



LEO:  ...where 50 million people frequent this.  MySpace is one of the most popular spaces on the �Net and is absolutely a place, a vector for infection.



STEVE:  Yes, that�s a very good point.  And so there�s a place where the we-come-to-them model can still infect a huge population of users.  So anyway, I really liked finally coming up with a way to explain to my non-computer-savvy friends, you know, why security is such a problem.  It�s that, you know, to really be secure, you must really be secure.  Which means no opportunity for insecurity.  And of course then computer-savvy people understand what that really means.  I mean, that means...



LEO:  It�s impossible.



STEVE:  You must have bug-free software.



LEO:  Right.



STEVE:  And that�s just, you know, no one sees that happening in the near term.



LEO:  If I were to boil this down in Socratean terms, perhaps, it�s axiomatic.  Well, first of all, as you did, you defined security as the absence of insecurity.  And the only way to be secure is to have nothing that is insecure, in other words, no bugs.  It�s axiomatic that all software has bugs.  And since bugs often create security holes, all software is inherently insecure.



STEVE:  Well, and it�s worth noting, too, that this recent zero-day exploit was an interesting lesson because a component that was not IE, that is, a Windows core service component that was invokable by IE, was where the problem was found.  And so, again, the we-come-to-them model, which would otherwise not be useful � for example, you know, I�m looking right now at a stopwatch app sitting here telling us how long the show�s been going on.  Well, it may have bugs.  It may have exploitable bugs.  But I�m not going out on the Internet with my little stopwatch application.  So the fact that it�s got some problems doesn�t hurt me.  It doesn�t represent any kind of a problem.  Now, that...



LEO:  It�s a problem, though, in Windows, because so much of it is available to IE.  I mean, once you put the browser as an integral part of the operating system, you�re really in many ways making things worse.



STEVE:  Well, Windows has become componentized.  And that,�you know, and that�s what they call, you know, OLE then became ActiveX.  And it is inherently a component-based�system.



LEO:  It�s designed to be a network-aware operating system.  And IE is always running.  You cannot not have it running.



STEVE:  Well, the other thing worth mentioning is that � and�I mentioned my little stopwatch app that is not on the �Net.  One of the things that we see happening is that mainstream applications...



LEO:  May be on the �Net.



STEVE:  Yes.



LEO:  They dial, they phone home.



STEVE:  More and more mainstream applications are adding Internet connectivity and Internet features because they�re looking for ways, you know, as they get past Version 4, it�s like, okay, how are we going to sell more of this?  We need to, you know, add more features.  Well, everything�s networked these days.  Everything�s the Internet and connectivity and peer-to-peer and all that.  So the next level of problem after Windows, if Windows ever really becomes bolted down enough that it�s not the majority target, we�re going to see the network-enabled applications which are the most popular begin to be the next round of attack target.  And then it�s not just Microsoft that needs to be really careful and really aware of bugs.  It�s all third-party programmers.



LEO:  Oy, oy.



STEVE:  And I don�t ever see that happening.



LEO:  Yeah.  Wow.  I think, you know, for a while the Department of Defense tried to solve this problem with bulletproof languages, Ada, for instance, that kind of forced � the whole idea of Ada was a bug-free language that forced programmers to not make errors.  I don�t know what happened to Ada.



STEVE:  Well...



LEO:  Maybe it was undoable, I don�t know.



STEVE:  Next week�s topic is Vista security.



LEO:  Oh, boy.



STEVE:  I�ve delved in and spent some time because I want to follow up on this week�s issue of like, okay, if security is the complete absence of all insecurity, where is Microsoft going with their own security initiatives, and what�s been added to Vista, and what�s the difference between 32-bit and�64-bit platforms.  And I�ve got some surprising news there.  So...



LEO:  Good.



STEVE:  ...that�s what we�re going to do next week.



LEO:  Well, now we know why security is so difficult.  In�fact, I think you might have said, why is security�impossible?



STEVE:  Impossible, I�m afraid.



LEO:  Yeah.  And it�s � and as you�ve always said, it�s a�process.  There is no end to securing yourself.  It�s a�process.



STEVE:  Well, and it�s not like the 100,000 listeners we have of Security Now! are all going to get their machines destroyed.  It�s that, inarguably, some percentage of Windows users are being infected, and it�s not a small percentage, every day.  I recently saw something that said two thirds of average Windows computer have spyware and malware installed on them of some sort.



LEO:  Yeah.  I mean, I know just from doing the KFI radio show that it�s endemic.



STEVE:  Yup.



LEO:  No one has an exact number, although the study I�ve seen, as you say, are far more than half.  And but just anecdotally, from talking to people, that�s the number one concern of Windows users, spyware and viruses are.  And it�s not hysteria.  It�s a very real problem.



STEVE:  Yeah.  And again, it�s not like it affects everyone.  You know, the old days with the worms, where if they weren�t behind firewalls, where we had the they-come-to-us model, well, we know, you stick an unpatched XP machine on the �Net, and it�s compromised in minutes.  I mean, that�s the case today.  But all current XP machines are behind a firewall, and hopefully behind a NAT router, so that�s just not a problem.  You know, they come to us is over.  But we�ve still got this we come to them.  And...



LEO:  And we�re coming to them more and more.



STEVE:  And we�re coming, baby.



LEO:  Hey, thank you, Steve.  Want to thank our sponsors, Astaro Corporation.  They know that security is a process, and they make it possible for big business, little business, and even home users to be secure with the Astaro Security Gateway.  If you�re a small or medium business network that needs superior protection from spam, viruses, and hackers, as well as complete VPN capabilities, intrusion protection,  content filtering, and an industrial-strength firewall, all in a very easy-to-use, high-performance appliance, contact Astaro, Astaro.com.  There�s a link on our show notes, makes it easy to get there.  Or you can call them, 877-4AS-TARO, to schedule a free trial of an Astaro Security Gateway appliance in your business.  I have a 120, and I cannot tell you how fantastic it is.  It is incredible.  Based on open source, built to withstand anything.



And if you�re a non-business user, by the way, you can get it for free, the software version, at Astaro.com.  Install it and run it on any old PC box, and you�ll get the same benefits.  Pay a small, I think it�s 79 euros a year, small fee, and you can have all of the antivirus and spam and so forth, too.  I think � I want to see � I expect to see more and more people with home networks using Astaro to protect the entire network.  It really is a great solution.  Astaro.com.  We thank them for major financial support for Security Now!.



We also want to thank the folks at Dell for providing major financial support.  Dell.com.  Actually the best way to go is probably to go through TWiT.tv.  We have a special Dell page.  If you just click the link at TWiT.tv or go to TWiT.tv/dell, we have some picks there.  But don�t be just limited to those.  Anything you want from Dell, if you go through those links, we get credit for anything you purchase.  If you�re buying a Windows PC, getting ready for Vista, Dell has some great stuff.  I love this XPS 700.  You know, I�m just � I�m about to buy one.  Now that they have the Vista express upgrades, I think it�s time to pull the trigger and get that XPS 700 I�ve been eyeing for so long.  TWiT.tv/dell.  We thank them for their support.



Steve Gibson�s website is GRC.com.  That�s the place where you can find Security Now! show notes, [transcripts] thanks to Elaine, and the 16KB versions for the bandwidth impaired.  We�ve got a lot of show notes today, particularly to allSnap, and we�ll put in a link to � I have a link, and I�m going to put it in the show notes, to �Your Guide to Using IE Safely.�  I wrote it up at one point with pictures and everything.  So I�ll put that in the show notes.  And the kill bit � I want to call it Kill Bill.  The kill bit � you might want to kill Bill after all � the kill bit registry patch, with apologies to Quentin Tarantino, and more at GRC.com.  That�s also where you�ll find SpinRite.  Any good SpinRite letters this week?



STEVE:  Actually I did get a really fun one.  Some guy said he�s both a loyal customer and fan of SpinRite and GRC since�1997.



LEO:  Wow.  When did you start making it?  �95?  �96?



STEVE:  Oh, it�s 19 years old, Leo.



LEO:  Oh, it�s older than that, wow.



STEVE:  Oh, yeah, yeah.  Anyway, so he says � I love this one.  He says:  I do volunteer work for the Alberta Diabetes Foundation.  Donors have provided systems to the ADF for a number of years now.  Every time one of these systems will not boot, and it appears that the hard drive has crashed, I run SpinRite.



LEO:  Oh, interesting.  There�s a good test.



STEVE:  Isn�t that cool?  So, like, people are bringing dead computers in, you know, donating them because their computer�died.



LEO:  Yeah, thanks.



STEVE:  So this guy goes on, he says:  The number of times I�ve been able to call up a donor and ask them if they would like to have the data off the drive is incredible.  He said:  And this happens after the system has been in some shop that declared it DOA.  When they ask me how they can thank me, I always just say, �Thank Steve Gibson and GRC by purchasing SpinRite.�  He said:  I have no way of knowing if this translates into any sales for you.  But I will bet that GRC is who they think of the next time they get �OS not found.�



LEO:  Isn�t that a nice � that is really a nice story.  I like that.



STEVE:  I thought it was really cool.



LEO:  Yeah.



STEVE:  So, you know, the person�s machine dies, they go, oh, well, I�ll just, you know, give it away to the Diabetes Foundation.  Then a couple days later the guy calls up and says, hey...



LEO:  Oh, by the way...



STEVE:  ...your computer was dead, but there�s all this data here, would you like it?  That�s great.



LEO:  I love it.  Well, that�s � SpinRite is everybody�s favorite, my favorite certainly, disk maintenance and recovery utility.  And that�s also at GRC.com.  And by the way, Steve has a lot of free security programs.  It�s worth browsing.  People often start with ShieldsUP!, which is a good way to test your network when you install a new router or firewall.  But don�t stop there.  There�s all sorts of free software:  DCOMbobulator, Unplug n� Pray, and all sorts of very useful tools.  It�s all at GRC.com.  When�s that new menuing system going in there?



STEVE:  I�ve got a little more work to do here before I get back to do that.  But that�s top of my list.  And I did want to mention that at the bottom of the Security Now! page is a form that people can use to send questions and...



LEO:  Oh, good, okay.



STEVE:  ...comments and notes and things.  So GRC.com/securitynow will take you to the top of the page.  Scroll all the way down.  I�m going to have to rearrange, reorganize this whole Security Now! area because, you know, we�re, like...



LEO:  Well, it�s growing like Topsy.



STEVE:  It is.  We�ve got 65 episodes now.  But all the way down at the bottom is a form that anyone can use to send questions and stuff directly to me.  And I really appreciate knowing what people are thinking and what they want to hear�about.



LEO:  Good.  And next week I know what you want to hear about:  Vista security.  That�ll be a top topic, I know, with everybody listening.  And we will see you here next Thursday for another gripping edition of Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/




GIBSON RESEARCH CORPORATION	http://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#66

DATE:		November 16, 2006

TITLE:		Windows Vista Security

SPEAKERS:	Steve Gibson & Leo Laporte

SOURCE FILE:	http://media.GRC.com/sn/SN-066.mp3

FILE ARCHIVE:	http://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo describe the new security features Microsoft has designed and built into their new version of Windows, Vista.  They examine the impact of having such features built into the base product rather than offered by third parties as add-ons.  And they carefully compare the security benefits of Vista on 64-bit versus 32bit hardware platforms.



INTRO:  Netcasts you love, from people you trust.  This is�TWiT.



LEO LAPORTE:  Bandwidth for Security Now! is provided by AOL Radio at AOL.com/podcasting.



This is Security Now! with Steve Gibson, Episode 66 for November 16, 2006:  Vista Security.



Security Now! is brought to you by Astaro, makers of the Astaro Security Gateway, on the web at www.astaro.com.  And by Dell.  For this week�s specials, visit TWiT.tv/dell.



It�s time to talk security with our favorite security guru, the man who keeps us all safe and sound.  Last week we were not only talking about computer security but security worldwide.  We�re talking about homeland security.



STEVE GIBSON:  Yup.



LEO:  Steve Gibson.  It�s good to have you back on Security Now!.  How�s your week been?



STEVE:  It�s really been good, Leo.



LEO:  I�m in Canada right now, where it�s freezing.  I want to come home to California.



STEVE:  Well, I�m going to be up there joining you in December, so I guess...



LEO:  Oh, good timing.  Should be much warmer then.  You nut.  All right.  What...



STEVE:  So, Leo?



LEO:  Yeah, what can we talk about today?  What�s the hot�topic?



STEVE:  Since we last talked, I have installed Vista.



LEO:  Oh, good.



STEVE:  I decided, okay, it was at RC2, and it�s probably RTM by the time people are hearing this because it was supposed to be around � last I heard it was November 8.



LEO:  It did, in fact, the last � I just heard, now, it�s an unconfirmed rumor, but I heard a rumor that it in fact was certified and went to master about a week ago.  So it�s�official.



STEVE:  Well, I hope they made some changes to it.



LEO:  Uh-oh.  You�re using � what build are you using?



STEVE:  Okay, I�m using the RC2 build.  I think it was, like, 5766 or something.



LEO:  Okay, okay.



STEVE:  I mean, it was a late build.  And all kinds of things crash.  In fact, it was behaving so badly that I thought, okay, maybe this is a system problem.  So I ran the Memtest86 for, like, four days, never had a single problem.  And Windows XP runs on this system like a bat out of hell.  I mean, I�ve got to say, okay, this is a 3.06 GHz hyperthreaded Pentium 4.  It�s got 2 gigs of RAM.  And because I was going to run Vista I bought a brand new NVIDIA, it�s the GeForce 7600 GS board.  You know, it�s one with a blower on it, and you�ve got to give it a hard drive connector, you know, it can�t � it wants so much power that the bus won�t power it.  You�ve got to plug hard drive connectors into the edge of � the back edge of the card in order to get this thing powered up.  But Leo, Vista is slow.



LEO:  Really.



STEVE:  Oh.  And in fact, I mean, I�ve got the glass UI, which, okay, you know, I mean, I�m � it�s attractive, but not at the expense of all this performance.  I mean, I�m � frankly, I�m � the more I look at the Mac, the more impressed I am with this nice brushed-aluminum look that, you know, the first thing I did with Vista, because, I�mean...



LEO:  I kind of like how Vista looks.  You don�t like the new Aero Glass interface?



STEVE:  It�ll be interesting to see what people think.  It�s not that I don�t like it.  It�s that I think they could have done something better with all these display and processor cycles that they are apparently consuming.  Now, I turned it off just to see if I could get the display performance up because, I mean, really, it is just dog slow.



LEO:  Yeah.



STEVE:  And also, even with this card, they have something that they call the �Vista Experience Rating�...



LEO:  Right.



STEVE:  ...which, you know, where it ranks your processor, your display card, your RAM, your hard drive speed, and other stuff.  Basically what they�re doing is they�re saying, it�s not our fault.  They�re, you know...



LEO:  You don�t have enough hardware.



STEVE:  It�s giving me a rating of 2 for this display � for my graphics performance.  I think...



LEO:  Out of what?  What�s the top?



STEVE:  I think it�s out of 5.  Because the hard drive I�m getting a 4.9.  The processor I get a 4.2.  And everything else is in the 4.something.  But I get a 2 with this screaming, you know, GeForce 7600.  It�s like, okay, what do you want from me?  How can I get more?  You know, it�s a 512MB graphics card.  It�s just, I mean, but Leo, grabbing the lower right corner and stretching a window out, it�s just like it refreshes so slowly.  And, I mean, this is a fast machine that I�m using it on.  It�s, you know, 3 GHz P4 with 2 gigs of RAM.  It�s like, okay, well, I hope this thing works.  I mean, I just, I don�t...



LEO:  I think what you�re using is fairly close.  But again, it�s not the final version.  The final build is, I think, build 6000, although it�s pretty close to what you�ve got.



STEVE:  And in fact, all of Sunday � well, it didn�t take all of Sunday.  But I decided, okay, I�ve got to find out what you and Paul are talking about.



LEO:  Right.



STEVE:  So I downloaded the four episodes so far of Windows Weekly, of course, with Paul Thurrott.  And I got a kick out of the fact that somewhere in the fourth one he said � you guys were sort of talking about Vista and security a little bit.  And he said, �Do I remember you saying that Steve Gibson is still using Windows 2000?�



LEO:  Yes.



STEVE:  It�s like, yes, and I�ll be moving to XP soon.



LEO:  But not right away.



STEVE:  No.  I mean, I�m getting ready to move to XP.  It�s stable enough now.  It�s mature enough, you know.



LEO:  Okay.  Well, that should give you some idea.  Now, how�� it�s hard to judge security, though; right?  Because, well, frankly, nobody�s attacking you yet.



STEVE:  Well, actually there are � I want to talk about today the architectural things Microsoft has done in the name of security.  Now, we�ve already talked about � we had a prior episode about Vista�s Virgin Stack, I think we called it.



LEO:  Right, right.



STEVE:  And I was shuddering over the idea that Microsoft is bragging about the fact that they rewrote the networking from scratch and that Symantec�s early pokings at it discovered many problems that are critical security vulnerabilities that were fixed decades ago...



LEO:  Right, right.



STEVE:  ...in early UNIX stacks, that are all � all these problems are back again.  So it�s like, oh, boy.  I mean, this is typical.  This is not an architectural thing.  This is a, you know, brand new code that just hasn�t had the debris pounded out of it yet.  And it�s why I�m now five years late getting ready to move to XP, because it�s had the debris pounded out of it.  And, I mean, even XP was a direct descendant of Windows 2000, so it had the advantage of Windows 2000�s maturity.  Anyways...



LEO:  So I gather what you�re saying is, if you want real security, use XP.



STEVE:  Okay.  What I�m � we�re going to draw some conclusions once I�ve laid enough foundation.  But I�ll tell�people, the bottom line is, don�t buy any more 32bit�systems.



LEO:  Oh, interesting.  Oh, interesting.



STEVE:  And that�s freaky for me to say that.  But I�m going to explain why.  Because what Microsoft has had to do is, in order to make the next move forward in security, they�ve had to make a conscious decision to break major things that have always been done in the past.  This was the right decision to make.  I fully endorse it.  But it means that the 32-bit platform is going to sail on mostly unchanged, and only the 64-bit platform will be secure and will receive the benefit of these security design changes Microsoft has chosen to�make.



LEO:  Interesting.



STEVE:  So, you know, for people who are security conscious, I want to, you know, you�re hearing it here.  There is a huge difference in Vista�s 64-bit security, that is, security on a 64-bit platform as opposed to anything Microsoft is able to offer and has chosen to offer on the 32-bit platform.  But stepping back from that, I will again say, boy, you know, any hardware you have that can run Vista will run XP like a bat out of hell.  I mean, the system I�m using where Vista is just painfully slow just on a UI standpoint, I mean, Leo, moving a window around pegs the�processor.



LEO:  Yeah.



STEVE:  It goes to 100 percent just moving a window around.  It�s like, okay, what are they doing?  That�s nuts.



LEO:  Well, again, you�re using beta code.  Maybe there is,  in fact, often the case with beta code, there�s debugging code still in there, there�s other stuff.



STEVE:  Well, pre-release code.  I mean, they were calling it RC2.  But as I learned from listening to you and Paul, and I would encourage our listeners to start, you know, if they�re interested in Vista, certainly add Windows Weekly, your Windows podcast with Paul Thurrott, to their podcast�lineup.



LEO:  Thank you.  And I�m telling people who listen to Windows Weekly to listen to you because basically both of these shows are covering Vista from different angles.  I mean, Paul�s not a security expert, but he certainly talks a�lot about, you know, things to keep in mind with XP.  And�I think Paul will actually be very interested to hear what you have to say.  Because truthfully we haven�t recommended 64bit Windows, either XP or Vista, for the very reason you�just quoted.  It breaks a lot of things, including drivers...



STEVE:  Yup.



LEO:  ...antiviruses, and security software.



STEVE:  Yup.  Yup.  Now, okay.  So stepping back from that, I just want to say, again, I�ve got Vista installed.  I really do, I mean, it�s a pretty OS.  It�s got a nice sort of flat look.  I�m not that impressed with the translucent, you know, window headers that blur what�s behind them.  It�s like, okay, gee whiz, you know, whoopy-do, I mean...



LEO:  Yeah, and you can turn that off.  You�re not...



STEVE:  And I did, I did get a more � I�ve got better graphics performance that way.



LEO:  Yeah, yeah.



STEVE:  So I�ve created two users, one where I bolted down the UI as much as possible.  But even so, you know, it�s really slow.  So yes, I�m hoping what they�re shipping is going to be faster.  Although notice that RC2 was not much earlier than the RTM.  I mean, what, it was like two weeks.



LEO:  Right.



STEVE:  So it�s not like the one I�m using was from six months ago.



LEO:  No no no no no.



STEVE:  The one I�m using was from late October.



LEO:  Right, right.



STEVE:  So, you know, again, I�m the reverse of an early adopter because, yes, I�m still on 2000, and I�ll be moving to XP, you know, one of these days.  But, okay.  So, and I have to say also that IE has crashed.  Any time I log out of the system, it crashes.  It just drops right out for the BIOS and reboots.  I mean, I�ve gotten a whole bunch of crashes of this code which, you know, was supposedly pretty mature.  And this is on a system that as far as I can tell is just working perfectly.  So, you know, I�m not blaming my�hardware.



I also want to mention before I forget that I have been using Parallels on the Mac with an XP install, and I am really impressed.  I�m becoming more and more impressed with Parallels the more I use it.  You know, we�ve talked about this before and how Mark Thompson was saying that, you know, he thought Parallels� performance, even on a PC, on a standard Windows host platform, far exceeded what VMware was doing.  So really I think VMware�s advantage is the stuff they�ve got locked up in patents, you know, all of the incremental snapshots and rollbacks and things which they clearly have a patent on, and which no other VM application is able to do because of infringement against that.



LEO:  Right, right.



STEVE:  But, you know, but just in terms of running Windows on a Mac, as far as I can tell it runs absolutely full speed.  I don�t see any difference.  However, I was unable to install the RC2 of Vista.  Apparently it�s still very finicky.  RC1 of Vista would install under Parallels, but only after the Parallels guys, like, fixed it so that it would work.  And I was getting blue screens when I�m � oh, that reminds me, Leo.  Vista has removed the blue screen by turning it into a dialogue.  Instead of...



LEO:  Instead of blue screen of death.



STEVE:  And it even says �blue screen.�  They, like, kept the term.  It pops up a dialogue.  And in there in the dialogue text it says...



LEO:  It says �blue screen�?



STEVE:  ...�You�ve just had a blue screen.�  It�s like,�okay.



LEO:  Uh, wow.



STEVE:  Yeah.  So...



LEO:  That�s like when Apple took out the Error 11 by just renaming it.  We don�t have to fix this software, just take out the error message.



STEVE:  Yeah, because we don�t want to see that anymore.



LEO:  No, we don�t want to see that.



STEVE:  So anyway, I like the � I like the Vista UI.  I like the decisions that Microsoft has made from a policy standpoint.  I�m scared of what they�ve done recoding huge network-facing, you know, Internet-facing aspects of Vista.  We don�t even know about the whole peer-to-peer thing yet.  But so let�s talk about what Microsoft has deliberately done in terms of Vista security, you know, what�s new.  We saw in the release of Service Pack 2 with XP the so-called Windows Security Center, which sort of continuously monitors your security-related things, like your firewall, automatic updates, and antivirus.  That aspect has been expanded in Vista to include Windows Defender, which is Microsoft�s malware scanner.  And I�ve got to say, you know, as you and I have said before, you know, we don�t run anti-spyware stuff.  I discovered from the log that this Vista system was running Windows Defender scan in the wee hours of the morning on the days that I left it on...



LEO:  Right.



STEVE:  ...all by itself.  So it was performing this sort of scan.  And it�s, again, it�s pretty nice to have a scan built into Windows, not some third-party add-on which is sinking its tendrils down deep into the kernel and who knows what, slowing things down and just, you know, basically having a problem coexisting with everything else Windows is doing.  So, I mean, I imagine that, you know, ten years from now when I actually upgrade to using Vista myself, that I�ll be very happy just using the built-in malware scanner that Vista has.



LEO:  Yeah, I�ve been pretty happy with it.  Of course you and I both know what to do not to get the malware in the first place, so...



STEVE:  Right.



LEO:  ...we�re not really taxing this thing.



STEVE:  So we haven�t � exactly.  We have not been having that problem.  Certainly, though, users who have not been doing anything proactive like that security-wise, and who are picking up malware that Microsoft knows about, I mean, this thing updates itself continuously so it�s being kept apprised of the latest problems.  You know, this is going to be really helping people.  So I think this is a very, you know, proactive major good thing.



I mean, a perfect example is that, even though personal firewalls existed way before Windows XP Service Pack 2, even in the era of personal firewalls, we were getting all those worm wars, Code Red and Nimda and Blaster, because people had them turned off, or they had been subverted, or they just weren�t using them.  As soon as Service Pack 2 happened, where the firewall was part of the OS and turned on by default, all of that problem went away.



Similarly, as soon as Vista happens, with Windows Defender built in, able to and doing automatic background updates and scanning for the user in the background, I think we�re going to see a sea change in the whole spyware/malware problem.  I mean, I think it�s going to make a huge difference for this thing to be built into every version of, I mean, every version and copy of Windows that ships.  So, you know, I take my hat off to Microsoft.  Certainly the people who are competing with Microsoft in this space, in this application space are not happy about this.  But they had many years of, you know, of lots of profit and a good long run.  And it really is a pro-user thing that Microsoft is doing, much as adding, you know, an always-on firewall to the OS has been a very pro-user thing.



LEO:  Right, right.



STEVE:  So one of the other things that Microsoft has done is Vista incorporates something called BitLocker.  It�s sort of � I like sort of the double entendre of that.  It�s locking your bits, and it�s also storage.  It�s a locker that stores your bits.



LEO:  Oh, I get it.



STEVE:  It, yeah, it is built-in whole volume encryption that can work two ways.  If you�ve got a TPM, a Trusted Platform Module, built into your system, you know � and we�ve talked about TPM before, how it�s sort of controversial because, you know, from a privacy standpoint, basically what TPM does is it�s pre-boot technology that was going to solve a lot of problems.  And in this case the TPM system is able to authenticate you through the operating system and enable on-the-fly decryption of the main OS volume.  Now, BitLocker requires its own partition because it has to run prior to installing on-the-fly decryption.  But this is very much like built-in TrueCrypt sort of technology, where everything written to the drive is encrypted on the fly.  Everything read from it is decrypted on the fly.



The reason, again, that this is a good thing is that, because it�s there by default and from Microsoft and present, it�ll probably see more use.  The great use, of course, is on laptop systems, and we�ve talked about this often, the problem of them being stolen.  Now, the problem, of course, is systems that don�t have the TPM, the Trusted Platform Module, installed, you know, present in their system, they need to fall back to a secondary but still sort of elegant solution, and that is the decryption key can be stored on a USB, a small USB drive.  And you must then, for example, on a laptop that was set up, or on a main desktop, you must have that USB key installed, and your BIOS needs to be able to access that USB key at boot time.



So there are some requirements.  But most motherboards and laptops made in the last few years have been able to boot from USB and access the USB device in the BIOS and not needing, you know, fancy Windows drivers in order to do that.  So essentially your USB dongle becomes your key.  And you boot your laptop with the key in place, and Windows will perform on the � this whole BitLocker technology will cause Windows to perform on-the-fly decryption for you, and, you know, you�re good to go.  And this, of course, can also be used with a desktop.  Because it requires two partitions, it�s not as easy to set up as it could be.  But you can imagine that in the short term, maybe from the beginning, laptops and new desktop systems shipped from OEMs will be partitioned to be BitLocker-compatible in this fashion.  So I would imagine that they should work without any trouble.



So it is nice, on-the-fly decryption technology.  And what it prevents is the problem of, for example, removing a drive from a system and putting it into another drive and using, you know, NTFS-aware drivers to access a drive underneath the security system.  You know, it�s one thing not to be able to access the drive if you�re a non-privileged user.  But it�s always been the case that you could access the drive from outside the operating system, and that�s always been a problem.  This basically encrypts the entire system volume, with all your apps and all your data, you know, basically giving a complete wrapper around the system in Vista.  So again, hats off to Microsoft.  This is a really good thing.



LEO:  Although, I mean, we still probably would recommend TrueCrypt.  It�s just nice to � once it�s built into the OS, more people will use it, I guess.



STEVE:  Well, and that�s exactly my point.  And corporations will be far more...



LEO:  They�ll feel comfortable with it, yeah.



STEVE:  Exactly, far more enabled to have this technology running and working on those laptops.  But again, it requires Vista, and I�m not going to be there anytime soon.  I don�t know about the rest of our listeners.  But, you know, not me.



LEO:  I�ll be there.  Don�t worry, folks.  Steve can hang out.  He�s still running Windows 2000.  I�ll be running Vista the minute I can buy it.  Although now you�re making me think about how to buy it, whether I should buy 32 or 64.  But we�ll get to that.



STEVE:  Okay, let�s talk about that now.



LEO:  Okay.



STEVE:  Several major new security systems in Vista to protect the kernel.  We�ve talked about rootkits.  We know how big a problem rootkits are.  We�ve talked about Blue Pill, the idea of running a program that just silently subverts your OS by sort of slipping in a hypervisor shim that the system doesn�t even know about.  Nothing hiccups, nothing happens; but, you know, your system�s been taken over.  Of course, the famous Sony rootkit DRM issue that we talked about a long time ago, where it turned out it had a problem that was allowing malicious exploitation of it, in addition to being a bunch of software that was being installed and then using rootkit technology to hide itself.  So, you know, we�ve talked many times from different directions about kernel modifications.  And we talked recently a couple weeks ago about the issue that the AV vendors like Symantec and McAfee and others were having over the news that the tricks they were using would no longer be permitted.  And there was some confusion at the time about, well, was Microsoft going to create an API that would allow them to modify the kernel, that is, you know, give them, like, somehow some means of authenticating themselves in order to allow those modifications.  The good news is, no.



LEO:  Rightly so.



STEVE:  No.



LEO:  Stay out of my kernel.



STEVE:  Now, one of the things that has been...



LEO:  Now, that�s true only in 64-bit, though; is that�right?



STEVE:  Yes, that�s where I�m going right now.



LEO:  Yeah.



STEVE:  One of the things that�s always been true of Microsoft is they have gone out of their way for forward compatibility, or reverse compatibility, whichever direction you�re looking.  That is to say, as they come out with new stuff, they really go to extreme lengths not to break old�stuff.



LEO:  Right.



STEVE:  In fact, one of Mark Thompson�s complaints about Apple is that Apple is far more willing to break older things and say, well, sorry, we broke that, so upgrade your software or stop using that or something.  Microsoft really, really tries desperately hard not to break anything that they�ve ever offered.



LEO:  Which is why your 15-year-old copy of Wizards of Might and Magic still works on Windows XP.



STEVE:  And interestingly, it�s why them removing full raw sockets from Windows XP, as I was begging them to do, it took them several, well, it took them two service packs and several years because they realized, I mean, and even then it was controversial because they were taking something out that was going to break software, and a bunch of software did break.  But...



LEO:  They don�t like to do that, yeah.



STEVE:  But they really don�t want to do that.  So two things have appeared in 64-bit versions of Vista and only 64-bit versions.  And that is, all kernel drivers must be signed.  Now, signing kernel drivers is always a good thing because it�s just nice, it�s nice to see where stuff that�s down in the kernel, I mean, that has installed itself and become a part of the operating system, you know, you�d like to know that it really came from NVIDIA or from Microsoft or from Symantec or whomever.  And an unsigned driver is always suspicious, especially since Microsoft signs all of theirs.   You�re able to look at the version information and verify the digital certificate of any of the drivers coming from�Microsoft.



The problem is that with � and driver signing appeared in and began to be really active in Windows 2000.  But it was not enforced.  It is possible to use what�s called a �group policy editor� to enforce only the loading of signed drivers, and for Windows, even Windows 32-bit Windows, you know, current Windows XP and 2000, to refuse to load unsigned drivers.  The problem is you can�t do a lot of things because, since by default Windows 32-bit Windows, all versions of 32-bit Windows will load unsigned kernel drivers without complaint, most manufacturers never bothered to sign them.  And in fact...



LEO:  Does it cost them money to sign it?  To get them�signed?



STEVE:  Yes.  And it annoys me that, you know, for example, I�ve got Authenticode credentials that allow me to sign all my apps.  And my older ones are not signed.  My newer ones are signed.  And I think it�s, like, $700 a year that I have to pay for that privilege.  And, you know, it�s just for some bits of code that goes directly, you know, and the dollars goes directly into Microsoft�s pocket.  So it annoys me.  But at the same time, I want that Authenticode signature to mean something.  And in order for it not to just be spoofed and made up, Microsoft goes to some measures to verify that I am who I am.  And so you could argue, well, that takes, you know, time and effort on their part.  So they�re getting � they are doing something for the money that I�m paying them.  So...



LEO:  Well, that�s a good thing.



STEVE:  But largely, largely code is not signed.



LEO:  Right.



STEVE:  And increasingly there will be pressure on people to have their code signed.  You may remember...



LEO:  As absolutely should be.  I mean...



STEVE:  Yes.  You may remember that one of my comments about MojoPac that I made back to the MojoPac people was, hey, this is not signed.  It�s dumb for any high-volume downloadable software not to be signed because IE will bring up a dialogue and say this is an unknown publisher.  That is the only way for software to prove its publisher is for that publisher to obtain Authenticode credentials and to take the trouble and time to sign their code.



LEO:  It�s funny, this has been around something like ten�years.



STEVE:  Yes.



LEO:  And it�s about time they kind of enforced it.



STEVE:  Well, what�s going to be enforced finally is this functionality for the 64-bit kernel.  Now, as you mentioned, Leo, XP 64-bit has been around for, what, a year and a half or so?  And because they are enforcing signed drivers, a lot of publishers just said, oh, well, we�re not going to do 64bit support right now.  So it hasn�t really taken off because, as you said, it�s a problem.



Well, Vista is going to require signed drivers.  And there is no exception to it, no way to turn it off, no way to circumvent it.  So, and Microsoft�s thinking is this, okay, 32-bit applications will still run fine on a 64-bit platform, in the same way that 16-bit Windows applications worked fine under, you know, Windows 95 and 98 and so forth, and of course NT and all of its children.  So there isn�t an application portability problem because you�re able to emulate the prior API set on top of the operating system.  You cannot do this with kernel code.  Kernel code inherently has to be rewritten from scratch.  So no 32-bit drivers can run.  No 32-bit kernel drivers can be used in a 64-bit kernel.  So Microsoft�s feeling is, okay, we�re not breaking anyone�s existing drivers.  We�re simply saying you�re going to have to get your drivers signed in order to load them in the kernel.



LEO:  Now, just to clarify, the signing is required for 64bit Vista, not for 32-bit Vista.



STEVE:  Correct.



LEO:  Okay.



STEVE:  Correct.  So from the start, what this means is that the 64-bit kernel will be protecting itself by requiring signing.  Now...



LEO:  It also means that a lot of things won�t work.



STEVE:  Well, no, because...



LEO:  You�ll have to get 64-bit specific drivers.



STEVE:  Which you would have had to get anyway.



LEO:  Anyway, okay, okay.



STEVE:  I mean, and that�s my point is that this isn�t breaking anything.



LEO:  Got it.



STEVE:  This is...



LEO:  It just means a lot of hardware won�t work because there�ll be no driver.



STEVE:  Exactly.  But again, it wouldn�t work anyway until the hardware had 64-bit support.



LEO:  Right, right.



STEVE:  Because 32-bit support won�t work...



LEO:  Wouldn�t do it, okay.



STEVE:  ...in a 64-bit platform.



LEO:  Got it, got it.



STEVE:  So, and it�s certainly the case that 64 bits is coming.  Now, here I am, you know, and when I started thinking about this it�s like, okay, wait a minute.  64�bits.  I mean, 32 bits seems like ought to be plenty.  But we�d like to have more RAM because there are big server applications, and there are, you know, big iron applications where four gigs of directly addressable RAM is beginning to be not a lot anymore.



LEO:  That�s the current limit for 32-bit platforms.



STEVE:  Yes.  A 32-bit word, or dword, as it�s called, a double word, 32 bits has four billion different bit combinations.  And so that allows you to access four gigabytes, four billion bytes of RAM.  And that�s the limit for 32-bit direct addressing.  Now, sure, we could play games the way we once did in the old days when we, you know, when we had 640K limit on memory with...



LEO:  You could page stuff in and out and...



STEVE:  Exactly, expanded memory and extended memory and all�that.  But that�s just not going to happen anymore.  I�mean...



LEO:  Well, so what else do we get from 64 bit?  We get four gigs, more than four gigs of memory.



STEVE:  We get more than four gigs of memory.  And the other major feature is what�s called �Kernel Patch Protection,� or KPP.  And this is really controversial.  But it�s controversial because it is so important and so powerful.  What this means is that the 64-bit kernel will no longer ever allow itself to be patched.  Now, every personal firewall is doing this now in 32 bits.  It�s the only way personal firewalls are able to hook into the network layer where they need to in order to block incoming traffic because applications don�t have that ability.  So every personal firewall, the AV programs that have taken advantage of this kind of access, which has always been unfettered in all prior versions of Windows, 16 and 32 bits, Microsoft has flatly said that ends now.  That ends at the 64-bit switch into the kernel.



LEO:  I think that�s fine.



STEVE:  It is.



LEO:  Now, this is the thing that Symantec and Adobe were complaining about; right?



STEVE:  Yes.  Because they would like the freedom to do this.  And they�ve proposed various ways of, like, signing their privileges, I mean, basically using some sort of...



LEO:  It�s okay, it�s us.



STEVE:  ...crypto � exactly.  The problem is, any � and this is what we said when we talked about this a few weeks ago for the first time, Leo, is, you know, it was just like, oh, no, don�t, I mean...



LEO:  Don�t let �em.



STEVE:  Don�t let �em.  Because there is no way, if you create exceptions, that the hackers will not find a way around those exceptions.



LEO:  And Microsoft seems to have come up with a good compromise, which is, okay, 32 bit, we won�t enforce kernel patch protection.  We�ll just do it in 64 bit.



STEVE:  Well, because they can�t.  They literally, they can�t do it in 32 bit because...



LEO:  Oh, I didn�t know that.  Oh.



STEVE:  Well, because it would break everything.



LEO:  Oh, yeah, yeah, yeah.



STEVE:  Nothing would work.



LEO:  But they kind of hinted that they would at first, it sounded like.  And then they backed off.



STEVE:  Well, what they�ve done is they have created a new set of APIs.  There is � the really new thing, they call it WFP, the Windows Filtering Platform, is a way for applications to reach down and get legitimate access to the raw network traffic.  So that, for example, personal firewalls, they�ll need to be redesigned around this new API.  But it�s a completely clean, non-kernel patching way for those applications to function.  So basically the manufacturers are complaining because they would like to continue breaking the rules.  I mean, and this...



LEO:  Ha ha, you can�t.



STEVE:  Any, you know, this is rootkit technology.



LEO:  Right.



STEVE:  And what this means is that 64-bit Windows will be�rootkit safe.  It will be rootkit protected.  People will�not...



LEO:  Well, be careful when you say that.



STEVE:  I know.  You will not be able to modify the kernel.  Now, the next thing that Microsoft is going to do, and this is not happening now, but because they�ve made this rigorous, no-exceptions policy, it means that they will be able to seamlessly create a hypervisor when they bring out their forthcoming hypervisor technology and use the chip�s hardware to enforce a non-modified kernel by absolutely locking down the writability of pages.  So anyway, this is all really good news.  But it does mean that people may want to consider whether it�s worth holding off for 64 bits, because 64 bits...



LEO:  Now, there aren�t that many 64-bit processors.  AMD has a few.  In fact, I�m running on my Shuttle PC the 64FX.  And then there�s the Opteron and Sempron.  And Intel has the Xeons.  But these are workstation-grade computers.  These aren�t in widespread use yet.



STEVE:  Right.  And so it�s certainly going to take some time for these things to come down.  So I guess I�m saying, if people are wanting � if they try to run Vista on their current hardware, I�m going to be very surprised, if it�s what I�ve been seeing in RC2, if it provides acceptable performance.  That�s going to induce people to say, well,�boy...



LEO:  They�re going to upgrade anyway.



STEVE:  ...I guess I need, exactly, I need more hardware.  So I�m hoping that this will also � this will create a market for 64-bit systems which will begin then to � and so the software manufacturers will start supporting 64-bit drivers, we�ll start seeing some volume of 64-bit chips.  That�ll inevitably bring the price down, you know, and...



LEO:  Yeah, because I just spec�d out a Dell server, workstation, 64-bit Xeon workstation, and that was four grand by the time I was done.



STEVE:  Yes.  Yes.



LEO:  Yeah.  And of course I�m not going to order it because I�m waiting for Vista to come out.  But as soon as Vista�s out, I have to say, Steve, I�m probably going to do it.  And now you�ve convinced me that I should go with a Xeon or a 64-bit AMD.



STEVE:  Oh, boy.  From everything I�ve seen � and again, I�m glad you kept reminding me about the caveat that this was RC2.  This was not final code.  On the other hand, it was only two weeks old.  And, you know, this thing did not seem very stable.  And it, boy, did it not seem very fast.  So, you know, I�ll have it, too.  I�ll have Vista running.  We�ll be able to poke at it.  And, you know, we need to be able to talk to our listeners about it.  But in terms of me using it on my main system, no.  I�ll be moving to XP.



LEO:  Also something to be aware of, you may be getting new peripherals because, if the manufacturers of those peripherals don�t do 64-bit Vista drivers, you won�t be able to use them.  So if you�re going 64 bit, we�re talking a fairly steep expenditure.  And not just a new computer, but you may be getting new printers and scanners and so forth, as well.



STEVE:  Yeah, so looking at this the other direction, for people who are still wanting to run Vista on 32-bit systems, there is not a huge change in what Microsoft was able to do in terms of really improving the system�s security.  Yes, you�ve got your firewall.  Yes, you�ve got malware scanning built in now.  Yes, you�ve got the equivalent of TrueCrypt in what they�re calling BitLocker to do on-the-fly decryption of the whole volume.  But there�s no kernel protection and no driver signing that Microsoft is able to bring into the 32-bit Vista world because so many people have unsigned drivers and are messing with the kernel that it would just break too much.  And Microsoft said, no, we�re not going to be able to make that change.



LEO:  You might frankly want to think of Vista 32-bit as compatibility-mode Vista, and 64-bit as incompatibility, but secure-mode Vista.



STEVE:  Right.  And, I mean, it�s necessary to break some eggs to make the omelet.



LEO:  Well, and that�s why Mac users have benefited a little bit.  Now, ironically, I�m using a 32-bit OS on a 64-bit Xeon on my Mac.  But Leopard will be 64 bit, fully at 64 bit.  So right about the same time Vista comes out, just shortly after that.  We�ll all be going 64 bit someday.



Well, Steve, thank you very much.  We want to thank also our major sponsors who provide funding for this show:  Astaro Corporation, makers of the Astaro Security Gateway.  If your small or medium business network needs superior protection from spam, from viruses, from hackers, complete VPN � I use the VPN all the time, it�s really nice to have VPN � intrusion protection, content filtering � very important in small business � and an industrial-strength firewall, all in a simple, easy-to-use, high-performance appliance, great power at a great price, contact Astaro, Astaro.com.  You can call 877-4AS-TARO, and they�ll schedule a free trial of an Astaro Security Gateway appliance in your business.  I recommend them.  I�m using the 120 and love it.  Also, frankly, if you�re a non-business user, you can get the software absolutely free at Astaro.com and get many of the benefits on some old beater that you�ve got lying around.  Just put Astaro on it.  Thank you to Astaro for their support.  Astaro.com.



Also thanks to Dell.  I�ve been pricing them out.  I�m going to have to put a 64-bit Dell system now in the Leo�s Picks page at TWiT.tv/dell.  And I will, I�ll put a � you know, I was � I told you last week I�m getting an XPS 700.  You just convinced me, Steve, not to.  And I�m going to go with a Xeon because I want to have that 64 bit.



STEVE:  I think it�s worth being on the leading edge in that�case.



LEO:  Yeah.  Oh, and I�m going to tell you, these are nice machines.  They�re not as inexpensive.  But, you know, you get good Dell quality.  If you want to know more, I�ll put  my pick for a 64-bit machine, along with some other more affordable prices, affordable choices for desktops and laptops on the Leo�s Picks page.  It�s TWiT.tv/dell.  And if you�re about to buy a Dell, want to get a new Vista Windows machine, make sure you go through that link so that we get credit for you.  TWiT.tv/dell.  We thank Dell and Astaro for their support of this podcast.



Of course, Steve�s website is the place to go for show notes, 16KB versions of this program, and of course full transcripts for those who like to read along while they listen, thanks to Elaine.  GRC.com, the home of SpinRite, everybody�s favorite disk recovery and maintenance utility.  Any interesting SpinRite correspondence?



STEVE:  I�ve got another really fun story, but I�m going to save it for next week, Leo.



LEO:  Okay.  Okay.  I understand, Steve.  Hold out on us.  If you want to read some of the older ones, though, SpinRite.info is the place to go for that.  I just � I think everybody who has a hard � if you have a hard drive, you ought to have SpinRite.



Steve, it�s been a great pleasure.  We will see you next week for another edition of Security Now!.





Copyright (c) 2006 by Steve Gibson and Leo Laporte. SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5. See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/






