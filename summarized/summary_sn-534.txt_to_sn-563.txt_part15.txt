GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#534

DATE:		November 17, 2015

TITLE:		Encryption:  Law Enforcement's Whipping Boy

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-534.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss a wide range of security news, Steve's feelings about the new iPad Pro, and lots of interesting bits of miscellany.  We then revisit the newly controversial question of Internet encryption which has been raised with great emphasis after last week's terrorist attacks in Paris.



SHOW TEASE:  It's time for Security Now!.  We've got a lot of security news.  Steve is up in arms on this one, CMU taking a million dollars from the NSA to break Tor.  What's that all about?  And we'll look at the drumbeat, it's increasing once again, to put backdoors in encryption so the bad guys can't do bad things.  Steve has a rebuttal.  It's all coming up next on Security Now!.  



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 534, recorded Tuesday, November 17, 2015:  Encryption and the Law.



It's time for Security Now!.  Oh, I look forward to this every week.  Every week there are security stories, and I go, oh, I can't wait to hear what Steve Gibson's take on this is.



STEVE GIBSON:  Well, and Leo, you know, I have to say that you're clearly paying attention because I listen to you being the security expert on your other podcasts.



LEO:  I've absorbed it, yeah.



STEVE:  No, no, you have, accurately and perfectly.  So I just sort of smile, and I think, yup, that's exactly right.



LEO:  I'm storing it away up here, Steve, and I know everybody else is.  534 episodes later, if you've been listening to every show, you are a security expert.  If you've understood every word, you're a master.  Steve Gibson sometimes gets pretty deep.  This one is going to be more about, it sounds like, more about policy than about [crosstalk].



STEVE:  Yeah, in the wake of the Paris terrorist attacks, not surprisingly, encryption is now back in the forefront.  It's being used as, oh, well, if we only had pervasive ability to decrypt communications, then we'd be able to stop these things.  And so there's been some really bad reporting.  And of course the security experts that we're familiar with, Bruce Schneier comes to mind, Matt Blaze is involved, I mean, they understand the details.  Largely our listeners do.  But I want to look at some of the mainstream reporting and then the flipside because Schneier refers to Glenn Greenwald's piece, which was really good.



LEO:  Mm-hmm, mm-hmm.



STEVE:  And of course, you know, everybody's got a dog in the race.  We understand that.  We know where people stand.  But of course, from our standpoint, the podcast's standpoint, we're going to cut through this and look at the reality of what value it would be for them even to have what they say they want, and why the horses have already left the barn.  But we also have all kinds of crazy stuff to talk about.  Some really interesting news this week.  As promised, we've got MIT's analysis of the value and virtue, or maybe lack of, of tinfoil caps.  We also have a bunch of interesting miscellany.  I've heard you, and I've got my responses to living with my iPad Pro for a week.



LEO:  Oh, yeah, that's right.



STEVE:  And I'm up to speed on all of yours and Rene's, and of course Andy's was totally predictable.  He did not disappoint in the previous podcast on MacBreak Weekly, just before this one.  And I also heard you sort of talking about the iPad Pro as a gaming pad, and looking for something that could really use it.  And I was brought to mind of the fact that there is a game/puzzle that I've never mentioned, that years ago completely preoccupied my spare time - the good news is, not just for iOS, iPhone/iPad, but also for Android - that we will talk about.  And so if my going on in infinite detail here in the second half of the show with The New York Times article and Glenn Greenwald gets a little much for you, no one will know if you have downloaded this and have begun to be absorbed by it because it is amazing.  So all kinds of fun stuff to talk about.



LEO:  All right, Steve.  The security news of the week.



STEVE:  Yes.  Starting with the Picture of the Week...



LEO:  Oh, yeah.



STEVE:  ...which was tweeted to me, thankfully, from one of our listeners, because this really does really finally resolve this question.



LEO:  Puts a nail in that coffin.



STEVE:  Yes.  Researchers prove that tinfoil hats actually boost receptivity to government signals.



LEO:  What?  Like putting an antenna on your head.



STEVE:  This was a formal study done by researchers at MIT, titled "On the Effectiveness of Aluminum Foil Helmets:  An Empirical Study."  It was brought to us by How-To Geek.  Researchers at MIT, using a network analyzer, tested the impact of tinfoil helmets on receptivity of radio-frequency signals.  They highlight the method and results in the study, which is abstracted here.  The abstract reads - and that's all I'll bother everybody with, but it's fun.



They said:  "Among a fringe community of paranoids, aluminum helmets serve as the protective measure of choice against invasive radio signals.  We investigate the efficacy of three aluminum helmet designs on a sample group of four individuals.  Using a $250,000 network analyzer, we find that, although on average all helmets attenuate invasive radio frequencies in either direction" - meaning either emanating from an outside source or emanating from the cranium of the subject - "certain frequencies are, in fact, greatly amplified.  These amplified frequencies coincide with radio bands reserved for government use, according to the Federal Communication Commission.  ?Statistical evidence suggests the use of helmets may in fact enhance the government's invasive abilities.  We speculate that the government may in fact have started the helmet craze for this very reason."  So bottom line, take off your tinfoil helmet.



LEO:  I am calling foul on this one.  It's tin foil, not aluminum foil.  They've got to go back and do it with tin.



STEVE:  Ah.  The lead could be important.  You're right.



LEO:  Uh-huh.



STEVE:  Yes.



LEO:  I think maybe...



STEVE:  That would change its electrical characteristics.



LEO:  Yeah, nobody says an "aluminum foil hat."  First of all, nobody can pronounce it, especially if they're crazy paranoid.



STEVE:  And speaking of which, "aluminium," are there enough letters in that word to give you that many syllables?



LEO:  It's spelled that way in Britain, with an extra "I."



STEVE:  Oh. 



LEO:  They don't just pronounce it differently, they also spell it differently.



STEVE:  Well, they would have to because I'm sure you'd run out of letters if you were trying to say "aluminium," spelling it the U.S. way.



So, top of the news is a little distressing, and lots of people were upset.  The news was broken last Wednesday by motherboard.vice.com, that picked upon the fact that evidence that was revealed in a lawsuit from 2014 revealed that the FBI had used information from "an educational institution," I think is all it said, they were trying not to say too much, in order to bust some Silk Road 2 purveyors.  We'll remember of course, famously, Silk Road was a dark web, Tor service-based meeting ground/marketplace, where buyers and sellers were transacting in illegal merchandise and substances and so forth.  And there was, after that was found and shut down, a duplication of that effort.



So here's what's distressing, and this is from the day after this news broke last week, the Tor Project Blog wrote the following:  "The Tor Project has learned more about last year's attack by Carnegie Mellon researchers on the hidden service subsystem.  Apparently these researchers were paid" - okay, we're talking university security researchers paid by the FBI a million dollars - "to attack hidden services users in a broad sweep, and then sift through their data to find people whom they could accuse of crimes.  We publicized the attack," wrote Tor, "last year, along with the steps we took to slow down or stop such an attack in the future."



And of course we covered that a year ago on this podcast, all about hidden services.  And this was a traffic confirmation attack.  And as I have held, before and since, that's the biggest weakness that Tor has.  And that is, if you suspect endpoints, then it's virtually impossible to block confirming their connection.  Less easy to get the connection; but, once you suspect it, confirming, that's really hard not to be able to get a high level of confidence on.



So continuing with Tor's blog:  "There is no indication yet that they had a warrant or any institutional oversight by Carnegie Mellon's Institutional Review Board."  And we'll come back to this because Matt Green has really interesting commentary about this whole question of an institutional review board, which is typically something you have in the medical practice, where you want to verify that subjects of a double-blind crossover study, for example, like if an effect of a test drug is found to be so bad or good, the study needs to be shut down prematurely because, on one hand, you don't want to deny the people getting the placebo the benefits of the good outcome drug, or vice versa.  So this is the first time...



LEO:  I think, though, that it is also common practice in universities to have such a review board for other academic stuff, especially government grants.



STEVE:  No.



LEO:  No?



STEVE:  Well, I don't know.  But Matt Green does address this issue.



LEO:  Oh, okay.



STEVE:  So we'll be getting there.  So there's no indication yet that they had a warrant or any institutional oversight by Carnegie Mellon's Institutional Review Board.  "We think it's unlikely they could have gotten a valid warrant for CMU's attack as conducted, since it was not narrowly tailored to target criminals or criminal activity, but instead appears to have indiscriminately targeted many users at once."  Basically what we believe is it was show us all of the users and services that you can.  We're then going to look at them, find criminality, and prosecute.



LEO:  Fishing expedition.



STEVE:  It was a pure fishing expedition.  And they did prosecute, which is how this all came to light.



LEO:  But it was a child pornographer, so it's okay.  Right?



STEVE:  Yeah.  "Such action," writes Tor, "is a violation of our trust and basic guidelines for ethical research.  We strongly support independent research on our software and network, but this attack crosses the crucial line between research and endangering innocent users.  This attack also sets a troubling precedent.  Civil liberties are under attack if law enforcement believes it can circumvent the rules of evidence by outsourcing police work to universities.  If academia uses 'research' as a stalking horse for privacy invasion, the entire enterprise of security research will fall into disrepute.  Legitimate privacy researchers study many online systems, including social networks.  If this kind of FBI attack by university proxy is accepted, no one will have meaningful Fourth Amendment protections online, and everyone is at risk.



"We," says Tor, "teach law enforcement agents that they can use Tor to do their investigations ethically, and we support such use of Tor.  But the mere veneer of a law enforcement investigation cannot justify wholesale invasion of people's privacy, and certainly cannot give it the color of 'legitimate research.'  Whatever academic security research should be in the 21st Century, it certainly does not include 'experiments' for pay that indiscriminately endanger strangers without their knowledge or consent."



LEO:  Right on.  Right on, Matt.



STEVE:  Yup.  And then Matt Green, our cryptographer at Johns Hopkins, writes on "Research Ethics," was the title, "Why Tor  Attack Matters."  He says - and I snipped the first couple paragraphs because it was sort of introduction that our listeners don't need.  He said:  "You might wonder why this is important.  After all, the crimes we're talking about are pretty disturbing.  One defendant is accused of possessing child pornography; and, if the allegations are true, the other was a staff member on Silk Road 2.0.  If CMU really did conduct Tor deanonymization research for the benefit of the FBI, the people they identified were allegedly not doing the nicest things.  It's hard to feel particularly sympathetic.



"Except for one small detail," writes Matthew.  "There's no reason to believe that the defendants were the only people affected.  If the details of the attack are as we understand them, a group of academic researchers deliberately took control of a significant portion of the Tor network.  Without oversight from the University's research board, they exploited a vulnerability in the Tor protocol to conduct a traffic confirmation attack, which allowed them to identify Tor client IP addresses and hidden services.  They ran this attack for five months and potentially deanonymized thousands" - probably more, really - "of users, users who depend on Tor to protect them from serious harm.



"While most of the computer science researchers I know are fundamentally ethical people, as a community we have a blind spot when it comes to the ethical issues in our field.  There's a view in our community that Institutional Review Boards are for medical researchers, and we've somehow been accidentally caught up in machinery that wasn't meant for us.  And I get this.  IRBs are unpleasant to work with.  Sometimes the machinery is wrong.  But there's also a view that computer security research can't really hurt people, so there's no real reason for that sort of ethical oversight machinery in the first place.  This is dead wrong; and if we want to be taken seriously as a mature field, we need to do something about it.  We may need different machinery, but we need something.  That 'something' begins with the understanding that active attacks that affect vulnerable users can be dangerous and should never be conducted without rigorous oversight, if they must be conducted at all.



"It begins with the idea that universities should have uniform procedures for both faculty researchers and quasi-government organizations like CERT, if they live under the same roof.  It begins with CERT and CMU explaining what went on with their research, rather than treating it like an embarrassment to be swept under the rug.  Most importantly, it begins with researchers looking beyond their own research practices.  So far, the response to the Tor news has been a big shrug.  It's wonderful that most of our community is responsible.  But none of that matters if we look the other way when others in our community fail to act responsibly."



And it's worth mentioning also that there was a planned presentation at Black Hat of this, which was quietly pulled from the calendar.



LEO:  Yeah.  They might have been stormed.  Well, and somebody, I think Dallas in the chatroom said, "Well, yeah, but who suffered from this?"  As Matthew Green points out, everybody who was using Tor during that period of time, which was like six months, right, was potentially deanonymized.



STEVE:  Right.



LEO:  Not just the criminals.



STEVE:  Right.  It's important to understand, for example, why we have a constitutional protection against unreasonable search and seizure, why there must be reasonable suspicion that can be demonstrated to a court in order to generate a search warrant, which then empowers law enforcement to essentially breach one's sanctity, one's privacy, for searching.  And of course this came from England, when the King's men could just walk into anyone's home any time they wanted and do anything they wanted.  When we set up the United States, we said, no, we're not going to have it that way.



And so this is something that, I mean, we have it because it's controversial.  But I think it's one of the strengths that the Constitution provides.  And so I love this notion, and I think it was Snowden who said, when he was speaking about free speech, just because I have nothing to say that requires protection, doesn't mean that free speech isn't valuable.  So, I mean, these are interesting issues.  And of course this is all about encryption comes into this same argument deeply.



LEO:  Was it CMU's own exit nodes that were compromised?  They used an exploit, didn't they, to compromise others, as well.  I can't remember.



STEVE:  I don't remember.  What I remember seeing is that they set up, like, they talked about a cost of...



LEO:  Yeah, a honeypot kind of a thing, yeah.



STEVE:  Yeah, I think they talked about a cost of, in one instance, I saw $3,000 quoted in the Black Hat presentation.  I saw $50,000 of expense elsewhere.



LEO:  They got a million dollar grant.



STEVE:  Exactly.  They made money on this sucker.  They made some money.



LEO:  So it's also an insult to the taxpayers.



STEVE:  So I think they set up a lot of their own exit nodes, and then got those to be used.  They may have been cloud based rather than physical because you can do that now.  And then they monitored the traffic and then built an inference engine to infer the incoming and outgoing traffic and used it to deanonymize.  And we've talked about Tor deanonymization from time to time because it's a fascinating topic, sort of, in security theory and privacy theory.



So, again, this is the kind of thing that has to happen.  I'm glad it's gotten a lot of attention.  And people will get slapped, and I imagine that there will be consequences in terms, I mean, exactly along the lines that Matthew suggests, which is in the same way that medical researchers have to get their studies approved by medical oversight boards, and I've been reading a lot of medical research in the last decade - and, boy, have I developed a new empathy for rats and mice.  Oh.  But they really are [crosstalk] so put upon.



LEO:  They don't get their blood taken any more than you do.



STEVE:  Well, no, it's the homogenizing of their brains.



LEO:  No, I know.



STEVE:  Because you want to determine what the neurochemical balances are.  It's like, oh, boy, you know.  But they do everything, they say, in an ethical fashion.  It's like, well, okay.  And of course this always harkens back to Douglas Adams, who asserted that, in fact, mice are the way a multidimensional superbeing is actually testing us.



LEO:  Manifests...



STEVE:  Yeah, it's popping little mice into existence, into our 3 space.  And the mice are running mazes, and we're thinking we're determining what they're doing, but in fact they're under the control of this other entity.  It's like, okay, Douglas.



LEO:  Yeah, yeah.



STEVE:  So, interesting report from French and German researchers, who decided to tackle this growing concern of the Internet of Things and the embedded firmware in devices - routers, VoIPs, cable modems, webcams.  They collected all of the firmware they could find from 54 different vendors, 1925 different BIOSes, so just short of 2,000 firmware images spanning devices produced by 54 different vendors.  They then set up a cloud-based, basically emulation system, based on Ubuntu Linux and QEMU to provide the hardware emulation layer.  And they did software emulation of the chips running the firmware.



So they essentially set up a virtual cloud-based lab and then applied both static and dynamic analysis - and we have, of course, recently been talking about that relative to the iOS App Store stuff - both looking at the code statically and running the code actively.  And then they also brought in both their own technology and existing known exploit kits - Metasploit, Nessus, and so forth, that we've talked about in the past - and applied all of these tools.  What they found was important, critical, actually, vulnerabilities in 185 firmware images which affected nearly a quarter of the vendors.  They have, under responsible disclosure, they have contacted all of them that they've been able to and notified them of the problems.



So the report that's just out, it was titled "Automated Dynamic Firmware Analysis at Scale:  A Case Study on Embedded Web Interfaces."  And I think 99% of these had web interfaces.  Many of them were running PHP behind the scenes because they themselves were running little versions of Linux.  And in their report, and I've got of course the links in the show notes, they break out the percentage of which web servers were being used, what software packages were there - basically, a complete analysis of the operating firmware that they discovered in 1925 different instances of turnkey devices.  And from about 25% of the vendors they found 185 critical vulnerabilities right now, in, like, today's most recent versions of what's out there.



So a really interesting piece of work.  The concern is we're seeing this explosion of Internet of Things things.  Who's responsible for keeping them secure?  How do we do this?  And what these guys have demonstrated is it is feasible to - we don't know that they found them all, but it's certainly better than nothing.  They found 185 important problems across devices from 54 different vendors.



So, yay.  And cool that we're able to do this at scale because it means that there could be a facility where firmware is sort of dropped into a big pot as it comes out, and something runs it in a virtual environment and pounds on it and performs some sort of verification to increase the chance - again, not perfectly, but better than nothing - that if there's a problem that we know about, sort of the type of problem that we know about, we can make sure this particular instance doesn't have it.



Oh, and this one.  So a company named iPower Technologies was asked to create a cloud-based facility for uploading video from police body cameras to make it more convenient to manage and track and handle police body cam video.  They purchased a couple of the cameras that the people who contracted with them were buying, from a company called Martel Electronics.  And upon connecting this brand new body cam to one of their systems, their AV immediately flashed up and warned them and shut down.  They said, huh, what?



Turns out the brand new body cams being sold by Martel Electronics, known as the Vid-Shield Body Worn Police Camera, were infected with our old friend the Conficker worm.  This one in particular, Conficker.B.  Remember it ranges A through E.  We haven't talked about Conficker for years, but it was at one point very prevalent.  It was the first worm that we saw that was doing dynamic DNS generation where it used an algorithm to algorithmically create DNS domain names so that, in the future, it would know what a possible DNS domain would be where it could find its command-and-control server.



And this made it very difficult to track because, first of all, it generated, like, 50.  And investigators who caught it and then reverse-engineered it had to preemptively register 50 DNS domains.  And then the next day there would be another 50, and then another 50, and another 50.  And then it would choose one, or it would try them all, and one of them would actually have the command-and-control server on it.  Anyway, we talked about this at length years ago.  So basically what this means is that this Vid-Shield Police Worn Body Camera, or something about the manufacturing process, is pre-infecting these with this old-school malware.  Now, I went to this company's site, and I was gratified to find out that they are in stock now and offer free shipping.



LEO:  Oh, good, well...



STEVE:  So you can get Conficker B...



LEO:  Worms have never been more affordable.



STEVE:  ...as part of the deal.  Yes, but you must call for pricing.  You always know it's going to hit you hard when you have to have somebody on the phone before they'll tell you want this thing costs.



LEO:  Oh, yeah, yeah.



STEVE:  It does, however, have a five-star rating and eight product reviews.  Their site says:  "The Vid-Shield police body video camera not only records in high-definition, but it also" - they said "shots," I guess they mean "shoots" - "12 megapixel still images, equivalent to the best digital cameras in the world."



LEO:  Not really, no.



STEVE:  I know.  I knew you were going to - when I read this, I thought, oh, Leo will have a comment about that one.



LEO:  Yeah.



STEVE:  "The Vid-Shield has the time/date stamp embedded into the video and photos that cannot be tampered with, making it perfect for evidence."  And it goes on and on and on.  I won't bother anybody with it.  But I got a kick out of it.  What was interesting was it's like, okay, yeah, so what?



Well, Dan Goodin, writing for Ars Technica, I think, put it perfectly.  He wrote:  "Alternatively known as Downup, Downadup, and Kido, Conficker took hold in late 2008, a few days after Microsoft issued an emergency patch for a Windows vulnerability that allows self-replicating exploits.  Within a few months, Conficker had enslaved as many as 15 million Windows PCs.  Its sprawling botnet of infected machines eluded the vigorous takedown efforts of the Conficker working group, which was made up of Microsoft and more than a dozen partners in the security and domain registration industries.



"Conficker was especially hard to contain," writes Dan, "because it used a variety of advanced methods to self-propagate, including exploiting weaknesses in the Windows autostart feature when users inserted USB drives into their computers.  The malware also generated hundreds of pseudorandom domain names each day that infected machines could contact to receive new instructions.  The scheme allowed the botnet to survive even when old domain names were turned over to the working group. There are at least five significant variations of Conficker that are denoted with the letters A through E."



And finally, he says, "A report that police cameras are shipping with Conficker.B preinstalled is testament to the worm's relentlessness.  It's also troubling because the cameras can be crucial in criminal trials.  If an attorney can prove that a camera is infected with malware, it's plausible that the vulnerability could be grounds for the video it generated to be thrown out of court, or at least to create reasonable doubt in the minds of jurors.  Infected cameras can also infect and badly bog down the networks of police forces, some of which still use outdated computers and ineffective security measures."



LEO:  You wonder how they got on there; right?



STEVE:  Yeah.  And it's interesting because, when iPower discovered this, they posted this, they uploaded it to VirusTotal, and it was, even today, I mean, it may be so old that it's coming around again because it was only seen, it was only detected by 40 out of 54 of the total detectors.  And, interestingly, Malwarebytes and McAfee were among those that did not detect it.  So if the police station were using McAfee or Malwarebytes, that body cam, and, for example, an XP that didn't have patches installed for, like, forever, I mean, it's got to be a really old machine for that to still happen, but as Dan notes, can happen.  But even if it weren't, the fact that it was being infected, the fact that reasonable doubt could be made that, wait a minute, you're saying that you have to have chain of custody.



LEO:  Yeah.  Whoops.



STEVE:  But if you've got malware in there...



LEO:  Yeah, yeah, chain of custody.



STEVE:  ...all bets are off.



LEO:  Yeah, no, that's a very good point, yeah.



STEVE:  Yeah.



LEO:  I bet you on "The Good Wife" they jump right on that one.



STEVE:  So WhatsApp.  Of course it's one of the most famous, maybe now the most famous messaging platform.  About 800 million users are using it.  A bunch of researchers decided they wanted to take a close look at a new feature that had recently been added.  So they put together a report, and in their little abstract they said:  "WhatsApp is a widely adopted mobile messaging application.  Recently, a calling feature was added to the application, and no comprehensive digital forensic analysis has been performed with regard to this feature at the time of writing this paper.  In this work, we describe how we were able to decrypt the network traffic and obtain forensic artifacts that relate to this new calling feature which include the WhatsApp phone numbers, the WhatsApp server IPs, the audio codec in use, the call duration, the phone numbers, and call termination."



And then they say:  "We explain the methods and tools used to decrypt the traffic, as well as thoroughly elaborate on our findings with respect to the WhatsApp signaling messages.  Furthermore, we also provide the community with a tool that helps in the visualization of the WhatsApp protocol messages."



Now, it's important to note that the communication keys were not retrieved; but they speculate in their paper that they were present, and that further reverse-engineering and analysis may have produced additional revelations.  So at the very least, the current instance of WhatsApp is trying to encrypt its metadata.  And these guys cracked it, meaning that - and I saw somewhere else, but I didn't run it down, that this had something to do with a ubiquitous use of a repeating public key, that is, there was some public key encryption, but the same one was used.  And so as a consequence, the weakness of metadata protection in WhatsApp, there is a weakness which is present that essentially cracks the metadata encryption.



And then, of course, the question is, could this be known?  Or who knows it?  And where is it known?  And if we're relying on obscurity, then as these guys note, we didn't fully reverse-engineer the app.  We don't know what else is in the metadata.  But in the metadata that we decrypted, we did find stuff that users are presuming they're being protected from.  And we know they're not.



So again, the fact that it's popular and that it's using encryption really doesn't tell us anything.  This stuff is complicated.  And in fact it's because it's so complicated that I'm worried about the future of encryption relative to legislation because, boy, it is hard to explain things to people that really don't want to understand them.



Okay.  Piece of hardware note.  I've talked several times about pfSense and about the Soekris hardware that I like, a really great company based in Scotts Valley, California.  I was aware of an alternative and sort of lost track of it.  Then somebody tweeted to me the platform they use, which is way less expensive.  And I thought, oh, good, I'm glad I found it.  And that fell through the cracks, too.  So the second time somebody said, hey, Steve, I use these, they're great, I said, oh, that's the one.  I'm not going to lose it again.  So PCEngines.ch.  Sorry, didn't pronounce that very well, .ch, PCEngines.ch.



These guys are a very affordable, for a do-it-yourself person, multi-NIC, because you need two or three, and like they have three NICs, so you could have a WAN, a LAN, and a DMZ, just beautiful little pfSense-compatible hardware platforms where, for example, the case costs $10 rather than $125, and the board itself is a hundred bucks, that kind of thing.  So for anyone who is interested in perhaps rolling their own hardware gateway, PCEngines.ch is a great site.  I don't have any particular hardware there.  You can poke around, see what fits your budget and so forth.



And I'm glad that - thank you, everybody, for tweeting this to me several times.  I'm sorry it took several times.  But this is the hardware that I was aware of before.  It's good stuff.  And it's like, it's not overkill.  Soekris is sort of the high-end approach.  I mean, this is completely adequate.  And there Leo has a picture of it onscreen, showing a Compact Flash card, so you can boot from Compact Flash, you know, multiple NICs, a range of speeds and options, just really nice, very inexpensive, very affordable hardware.



LEO:  Small; right?  I mean, these look pretty compact, yeah.



STEVE:  Yeah, oh, it's a tiny little thing, like maybe...



LEO:  Does it come with a case, or you just...



STEVE:  I think it's 10 bucks for a case.



LEO:  Oh, nice.



STEVE:  So they've got one.



LEO:  It almost looks like a Raspberry Pi.  I mean, it's pretty simple.



STEVE:  Yeah, it's sort of a high-end, multi-NIC - because you need multiple NICs because you want to... 



LEO:  [Crosstalk], yeah.



STEVE:  Yup, so you're able to have a WAN and a LAN.  But that's the kind of thing you would load whatever your choice gateway software is, pfSense or whatever.



LEO:  Yeah.  And not expensive.  That's great.



STEVE:  No.  Okay, my friend.  iPad Pro.



LEO:  Ah.  You got yours.



STEVE:  Miscellany.



LEO:  You didn't get a Pencil, though; right?  Nobody has those, yeah.



STEVE:  No, yeah, I did not.  So I set the alarm for midnight on Wednesday night, got up at midnight.  Had not updated.  I waited till about 12:30, I'm sorry, till about 12:15, and it was still not showing.  So I thought, okay.  And of course the 11.11 was just a rumor anyway, so we didn't - there was no...



LEO:  No, no, Apple did release a press release the day before.



STEVE:  Oh, okay.  I didn't know that.



LEO:  So, yeah, by then it was real, yeah.



STEVE:  So I thought, well, just on the off chance.  So I set my alarm to 1:00 a.m.  I got up, I was reawakened at 1:00 a.m., hit refresh, and the first time the site didn't come up.  So [gasp] that got my attention.



LEO:  Yeah.



STEVE:  Yes.  So I hit it again, and I got the page, immediately pushed my order through, and was told it would be two business days delivery.  But as it turned out, it was the next day.



LEO:  Oh, nice, yeah.



STEVE:  So I was very pleased.  I got it immediately.  And as you noted, the Pencil is, I was told, one to two weeks out.  I haven't looked recently, looked back to see if there's an update.  I heard you quote a specific date, so maybe I have one, too.



LEO:  Yeah, they told me December 7th through 10th.  But let me check, just to see if it's been updated.  



STEVE:  I did look, I did check the site later that day, and I saw that the one to two business days had gone to five to seven for the iPad Pro.  So immediately they got backlogged.  But I was glad to have mine right away.



LEO:  Yeah.  So?



STEVE:  So here's the good.  The good, it is fast.  It's got a more powerful processor.



LEO:  Yeah, very fast, yeah.  Noticeably so.



STEVE:  One of the things that I appreciate about the newer keyboard, that I had forgotten how annoying it is on the current keyboard, that is, on the smaller pad keyboards, and that is less shifting.  That is, the newer keyboard gives you the number rows along the top, dedicated, so you don't have to shift in order to get a number.  And just, you know, it's nice to have that.  Yes, the sound is amazing.  Four speakers built in.  And if you've seen the iFixit Teardown, you know, they've got like four large resonant chambers.  A lot of space was given to those speakers, which I thought was interesting.  And as you have noted, watching video with the screen and sound is great.  Okay.  Now I'm out of good.



LEO:  Uh-oh.



STEVE:  The bad:  It's too big.



LEO:  It's really big, isn't it.



STEVE:  It really is.  And in fact my body's muscle mass has increased.  So it's physically cumbersome.  It's physically awkward.  I lived with it for almost a week.  And it is my - I took it with me.  So when I out, I brought it with me.  The second time I went out I brought a backup power supply because this thing does not have battery life equal to the Pad.



LEO:  That's not my experience.  I hope you didn't get a lemon.



STEVE:  No.  Now, maybe you don't have it turned up bright.  Because I was outside on a patio in the shade, but I was running it at - and that makes a huge difference.  This is a large screen, and it's a lot of screen to light up.  What that means is that it's - and we know that backlighting is where a lot of the power goes.  If it's turned up full brightness because you're in an outdoor setting in the shade, it actually runs hot.  And it drains the battery faster than power can be put in.  It consumes power at that rate.  So that I've got something giving it 10 watts of 2.1-amp power, and at full brightness I'm losing ground while it's plugged into power.  That's how much power the thing uses.  But at 50% brightness, which is certainly usable indoors, then it's fine.  It's funny because, in my notes of annoyance, I had the things that you've already mentioned, Leo.  For example, it's really annoying that they have not used the screen well.



LEO:  Yeah.



STEVE:  Like the icons.  They're, like, spaced apart.



LEO:  Yeah.



STEVE:  It's like, wait, I don't - I've got, like, eight pages.



LEO:  There's a lot more room here, guys.  You could use that, yeah.



STEVE:  Yeah, I've got eight pages of scrolling using lots of folders.  It's like, I would like to have twice as many icons on the screen.



LEO:  Yeah, yeah.



STEVE:  And I would like to have a whole bunch more in my dock down at the bottom, too, because those are the things I use all the time.



LEO:  Yeah, lots of room, yeah, yeah.



STEVE:  It's like, and the apps themselves, Mail, for example, you get a little column of text in the middle of the screen.



LEO:  Right.



STEVE:  It doesn't use the space.  Now, the web browser uses the space because of course the web is mature about properly using the resolution it has.  But what this really represents, I think, is a sad first shot.  I hope they fix it in the future.  But it's just, yeah, it's, I mean, and that's what I meant when I said the screen is too big, and they have not utilized the space well.  So also the big keyboard, the problem is it's too big for one-finger typing.  You end up, you're going to get some new form of carpal tunnel.  I mean, your arm gets exhausted moving back and forth a foot in order to go from one side of the keyboard to the other.  I mean, it's just huge.



LEO:  Yeah.



STEVE:  So, and the sound effect volume is very low.  I've never been able to, like, it kind of whispers, even though I've got the volume turned all the way up.



LEO:  Oh, that's interesting.



STEVE:  It doesn't make sound effects loud for me.  So, and finally, just a generic annoyance with iOS is that iOS appears to be collapsing.  I'm finding it more and more buggy.  The web portal login often fails.  It just - I don't - it says I've got a connection [crosstalk]...



LEO:  Oh, the captured portal functionality, yeah, yeah.



STEVE:  Yup, yup.  And so I'll have to, if I reboot the machine, then it works perfectly.  It runs for a while.  I'm seeing Safari pages that, when you scroll up, the bottom is blank.  And if I force close Safari and then just reopen it, then it redisplays that page correctly.  And things are locking up and hanging.  So I'm disappointed that it's showing its age.



Now, in fairness, I restored my regular iPad, I backed up my regular size iPad and restored it to the big one so that I didn't have to do all the setup from scratch.  So maybe there's some age or some cruft or some app collision or something which I replicated through the backup and restore.  I may at some point just wipe my most used Pad and start over again.



I think that the sidebar should have its own MRU, that is, its own Most Recently Used list, because the things you do with a sidebar tend to be different than what you do with the main screen, and it'd be nice if they weren't sharing the same MRU.  I think that would be a nice thing to say.  And I did learn a nice trick, which is to close the sidebar, you don't have to, like, start at the edge of it and push right, which makes no sense really because while you're using the sidebar the whole rest of the screen on the left is grayed out.  So you just swipe anywhere you want to, to the right, to close it.



But anyway, here's the final piece.  And that is, today when I ran out to grab a bite, I fell back to my original Pad.  And, oh, I was so much happier.



LEO:  Yeah, it's much more - I don't think you'd want to travel around too much with the Pro.



STEVE:  You can't, no.



LEO:  It's too big, yeah.



STEVE:  No.  So I'm super interested in the Pencil experience.  Like you, I'm not an artistic drawer, but I'm a diagrammer.  And just the other day I was drawing a circuit diagram with my finger, and it was just - it was annoying.  I mean, I had the Pro.  I was using Dan Bricklin's note-taking app, which is a great tool for drawing.  But it was just, I thought, wow, if I had the Pencil, these schematics would look so much better.  So I'm hopeful for that.  My life will be complete if the next small Pad has Pencil functionality.  I don't know if they'll do it, but that's what I want.  If the 10-inch Pad could be compatible with the Pencil, my life is complete.



LEO:  Yeah.  We'll see.  As Rene Ritchie has pointed out, it's almost like two different devices because, in order to do the Pencil and the touch, there's other things you can't, I mean, it's tough.



STEVE:  Yeah.



LEO:  I suspect Apple's going to make a big distinction, and they're not ever going to do a Pencil for the smaller ones.



STEVE:  Or they could not ever give the smaller Pad the 3D Touch.



LEO:  Multitouch, yeah.



STEVE:  And give it the stylus instead.



LEO:  They might do that, yeah, yeah.  We'll see.



STEVE:  I'm kind of feeling that my fingers are just too big to touch on things.



LEO:  Yeah, no, you want the Pencil, I think, yeah.



STEVE:  Yeah.  I could see using the Pencil as a beautiful, fine-tip just button presser, just going dink dink dink dink dink in order to, like, just to do things with greater accuracy than with fingers.



LEO:  Well, that's what I do with the Microsoft Surface Book, to be honest.



STEVE:  Yes, yes.  So on TWiT I loved the roundtable of blank expressions when you mentioned that Gene Amdahl had died.



LEO:  Ohhh, that made me sad.



STEVE:  It was very sad.  Of course you and I know Gene.  And a lot of our older listeners will remember Amdahl.  He was at IBM, and then he left to build high-performance IBM clones, essentially, was his business.  And, I mean, he was a pioneer at the high end of the mainframe computer business for years.  And he died last week at the age of 92.  And then when all the screens around you, because you had Skyped-in people, they were just silent.  And you noticed nobody was saying anything.  And you said, "You people don't know who Gene Amdahl was."  And they're like, uh, no.



LEO:  Yeah.



STEVE:  And then you said, Osborne, anyone?  And they're like, nah, no, no Osborne, either.  And there were a couple other earlier industry pioneers.  And I just, I thought, wow.  And then my favorite anecdote from that was, and I don't remember where it came from, but it was something where some little toddler ran over, her father had a 3.5-inch diskette.  And of course I have drawers full of them.



LEO:  Yeah, there you go.



STEVE:  Because I think you had - was it on...



LEO:  Wasn't this on The New Screen Savers, we had a guy who continues...



STEVE:  That's right, on Saturday.



LEO:  ...who continues to sell floppy disks at FloppyDisk.com.



STEVE:  Anyway, I loved the anecdote of someone's daughter saying, "Daddy, you 3D printed the Save icon."  I thought, isn't that perfect.



LEO:  It was Iain Thomson.  That was such a funny...



STEVE:  She's never seen a floppy.



LEO:  No.



STEVE:  She doesn't know what the Save icon represents.  So she sees one in real life and thinks, oh, look, the Save icon's been 3D printed.  Oh, just - I loved that.



LEO:  So funny.



STEVE:  Okay.  So, okay.  I know that my puzzle recommendations have been a huge hit among our listeners.  People love the things that I find that I love.  This is old, but I've never mentioned it before.  And if anyone has liked anything that I have recommended, Auralux.



LEO:  Auralux.  I'm downloading it right now.



STEVE:  A-U-R-A-L-U-X.



LEO:  Okay.



STEVE:  Auralux.  It is available for iOS, iPhone and iPad, and Android.  And apparently it hails from the PC era, or there is a PC version.  I get the sense that these were ports from that.  So the PC version predated it. So even Paul Thurrott can use Auralux.



LEO:  He might remember this.



STEVE:  And Leo...



LEO:  Is that it?  Is it like planets and...



STEVE:  Okay.  So it is wonderful.  There are - it's sort of planetary.  It starts off with two sort of different objects, kind of orbs.  And each of them generate new items, dots.  They sort of pulse.  And they generate them at a certain rate.  And so they begin to populate gravitationally.  And then, by swiping, you can send - you're able to, like, corral and send a bunch of them off on a mission to go and neutralize other ones.



Anyway, from their own description, they said:  "Auralux, formerly Aurora, is an abstract, essentialized, and simplified real-time strategy game.  You have only one type of unit to command and only one type of order to give those units.  You and your automated opponents start the game with equal resources.  Quick reflexes will get you nowhere.  The only path to victory is through strategy.



"Auralux features a slow, floating feel and," they say, "gorgeous minimalistic graphics.  The entire world pulses to a rhythm of ambient music, and the player's actions evoke sounds that smoothly coalesce into melody.  This game is meant to provide a relaxing, cerebral experience.  Every action has its reaction, and every option has its costs.  Auralux is a game in which your choices matter."



And I will tell you it is one of my all-time favorites.  I thought of it when you were talking about needing something for the iPad Pro.



LEO:  Yeah, this is nice.



STEVE:  And, oh, boy, let me tell you, it's, I mean, it is, it's just meditative.  It's one of those where it starts out simple.  It's free, by the way.  I think you have to pay to unlock additional levels, so you can optionally choose to, if you get addicted to it.  But, oh.  And so, like, it's exactly what you want because you start out not really understanding it.  So you learn incrementally as you see how things work.  You then adapt your strategy.  Anyway, I just - there's no risk for me overselling this.  Our listeners who don't already know about it are going to be cursing me a month from now because it has consumed so much of their life.



LEO:  I love this.  It's musical.



STEVE:  It is musical.



LEO:  Yeah, yeah.



STEVE:  Strategic.  It's fascinating.  I mean, I could just go on for an hour like Andy Ihnatko on something that he loves.  In this case, I won't, because I've said enough.  Auralux.  Get it.  It's free.  iOS and Android and PC.  And good luck with your social relationships.



LEO:  This is beautiful.  Yeah, yeah.



STEVE:  It's a keeper, Leo.



LEO:  Yeah [singing along].



STEVE:  Oh, it's just so great.  And every time - you can see everything throbbing?  If you look, two new little dots are produced for every throb.



LEO:  Oh.



STEVE:  And so that's where the dots are coming from.  And then, but if enough dots can converge on sort of that thing acting like a black hole, then it grows in size, and then it produces three dots every iteration.



LEO:  Ah.



STEVE:  If it grows again, then it produces four dots.  That way, so you want to make yours bigger because then the rate of dot production increases.



LEO:  Oh, I see.



STEVE:  If you want to keep the other, you want to keep your adversaries from getting theirs to be bigger, so to keep their rate of dot production low.  And then you want to send - you send fleets of dots off to attack the other guys.  And so you're able to, like, circle a bunch and then tell them where to go.  And so they sail off on that mission autonomously while you then do a thing - oh, anyway, it's just - it is so wonderful.



LEO:  It's fun.  It's fun.  I'm liking it, yeah, yeah.  I don't know what I'm doing, but I'm liking it.



STEVE:  So, and that's the way you start.  You just start by screwing around.  And you're always able to go back and redo an earlier level, or you'll see that you lose, and you notice the way you lose, and then you try it again.  No, I mean, the reward and pain system that's built in, it's absolutely amazing.  In fact, now I'm wanting to play it.



LEO:  Yeah, yeah.  Let's wrap up this show.  We've got stuff to do here.



STEVE:  Okay.  So I did want to revisit "Spectre," just to note that it has broken two Guinness World Records.  And quoting from IMDB, the last time I looked it gave it a 7.3, whereas "Skyfall," which people seemed to like more, I saw the comments that your podcast had, I think it must have been on TWiT, maybe, or maybe it was something else, "Skyfall" gets a 7.8.  So the world seems to think it was, in fact, better than "Spectre" at 7.3.



But Movies.com writes of the two Guinness World Records:  "The latest James Bond movie has broken a few box office records since its release, including the one for biggest opening of all time in the U.K.  But 'Spectre,' which also topped the box offices in the U.S. over the weekend, has achieved some other feats that don't have to do with theatrical performance.  The movie officially features the largest film stunt explosion in history, as acknowledged by Guinness World Records."  And I'll skip talking about that because I don't want to give anything away, except that they use 68.47 tons of TNT equivalent, which was the result of detonating 8,418 liters of kerosene with 33 kilograms of powder explosives, and that lasted over 7.5 seconds.



And I will say it was an amazing explosion.  And you could tell this was not a model.  This was not some cheesy, we're going to cut corners.  This was they blew the crap out of something really big.  And anyway, so, yes, the world's record for the biggest explosion.  For what it's worth, it did also make box office history with the biggest openings in the Netherlands, Finland, Norway, Denmark, and Sweden.  So it's not a crappy film.  I liked it.  I thought it had - it did drag in places.  I mean, if I wanted to be critical, I could find some criticism.  But I don't.  It's Bond.  So it's a fun movie.



Okay.  Last, and then we'll get onto seriousness.  I talked,  years ago, about a series on, I guess it's on CBS, I hope it's on CBS because I just said it is, "The Good Wife."  And I remember when other people were telling me about it.  But it was like, what?  "The Good Wife?"  That just doesn't sound like something that I'm going to be interested in.  How many explosions is it going to have?  How many phaser beams and teleportation and stuff?  Zero.  So, like, how does a good wife, you know, okay, what?  But finally I was moved to try.  And I fell in love.  I know that you have started it and are also enjoying it.  For what it's worth, it is a great series.  It does not take itself too seriously.  It's now in its seventh season.  So for people who like to binge, there's plenty to binge on.



I'm bringing it up because last Sunday's episode, which was titled "Driven," and that's Season 7, Episode 7 last Sunday, was about autonomous vehicles.  And so here's what I think.  If any of our listeners who were curious wanted to get a taste, watch last Sunday's episode titled "Driven," Episode 7, Season 7.  It stands alone.  You won't know any of the back story.  You won't know who the characters are.  But I think anyone would enjoy it because - and it does involve some fun characters and autonomous vehicle problems in an interesting way.  And my guess is you will end up thinking, okay, I've got to know what's going on, so start with Season 1.  And you've got lots of enjoyable time ahead of you.  So if I can get more people addicted to it, I think that would be a good thing.  And we have not yet said while we're recording, Leo, that you fell in love with...



LEO:  Oh, "Fargo," yeah.



STEVE:  ..."Fargo."



LEO:  Oh, yeah, sure, great show.  Love the show.



STEVE:  You and Lisa blew through the first season.



LEO:  Yeah.  One week, we watched the whole thing, eh.



STEVE:  Yeah.  You just [crosstalk].



LEO:  Yeah, and then you start talking like this all the time.



STEVE:  Eh, okay.



LEO:  You know who's really good in that there, is that Martin guy, the hobbit.  He's really good in that.  But the best is Billy Bob Thornton.



STEVE:  Billy Bob, he plays...



LEO:  Oh, Billy Bob.



STEVE:  ...a really good evil guy.



LEO:  Good bad guy, yes, oh, sure, yeah, he's good.



STEVE:  Yeah.  So I had recommended it. But it was after we stopped recording last week where you suddenly realized we hadn't closed the loop on that, and you said, oh, my god.



LEO:  I love it.  I love it.



STEVE:  Yeah.



LEO:  Definitely, it's violent, ultraviolent, as you mentioned.



STEVE:  Yeah.  So...



LEO:  Actually, this new season's even worse.



STEVE:  Yeah.  If you're not - and as I described it, it's a little Tarantino-esque.



LEO:  Yeah.



STEVE:  In terms of being a little over the top.  So if that just turns you off, I completely understand.  But if you don't mind it, it's just - it's art.  It's artistry.  And I hate to use that was a segue to SpinRite.



LEO:  No.  [Crosstalk].



STEVE:  But I did receive - there is another good lesson here.  Simon, oh, I'm going to mispronounce his name, Guettier?  Guettier, I guess, G-U-E-T-T-I-E-R.  Sorry, Simon.  Thank you for the testimonial.  He wrote this yesterday.  He's in Waddesdon Village, Buckinghamshire, or is it Buck - oh, it's Buckinghamshire.



LEO:  Buckinghamshire.



STEVE:  Buckinghamshire.  Okay.  I can't do it.



LEO:  And by the way, it's Guinness Book of World Records, just like the beer.



STEVE:  What did I say?



LEO:  Guineas.



STEVE:  Oh.



LEO:  Just, you know, as long as I'm correcting, I want to get it all in one swell foop.



STEVE:  Thank you.



LEO:  Sorry about that.



STEVE:  Guinness.



LEO:  Guinness, yes.



STEVE:  Guinness.  He's obviously in the U.K., in England.  So his subject was "SpinRite blows away the storm that blew away  my PC."  And he said:  "Hi, Steve.  This morning I booted my desktop PC, and to my alarm it was behaving monstrously at startup, basically just being incredibly sluggish.  Desktop icons wouldn't appear at all.  Browser launch took over five minutes.  Nothing worked at all.  I was puzzled because the day before I'd done a complete fresh install of Windows, and all appeared fine then.  When I powered down the PC the night before, all had been fine.



"Then I remembered that the day before my village had suffered some power glitches.  I live in the small village of Waddesdon near Oxford in the U.K.  We'd had severe storms, and believe it or not, mains power to the village is at least in part still delivered by overhead power lines.  In storms, the lines get whacked by trees and outages are common.  The day before, there were two outages and two instances where the mains voltage dipped alarmingly for 1-2 seconds each time.  My PC was on at the time, though I wasn't sitting at it.  Could this be the cause of the dreadful slowdown in performance?



"'Let's try SpinRite,' I thought.  My PC has a 256GB SSD as the operating system drive, and a large 2TB standard hard drive which serves for data.  I ran SpinRite at Level 2 on the SSD, no errors.  At this point I almost stopped, thinking that the other 2TB drive was not really mission critical and shouldn't really  affect performance.  But what the hell.  I did another Level 2 check which took quite a bit longer."  Well, because it's 2TB as opposed to a quarter terabyte.  "I was watching those little blue squares from time to time, no greens or reds.  But at one point I did notice that for a while SpinRite took ages before it would put a blue square up, for several squares in a row, perhaps 10.  Anyway, it finished, all normal, no green or red indications."  Meaning overt recovery or lack of recovery.



"I wasn't terribly convinced that I'd found the problem as no errors were reported.  So you can imagine my surprise on rebooting to find that all was well again, and the PC behaved just as it should.  This is the second time SpinRite has rescued me.  I managed to rescue a friend's badly corrupted drive when she had many irreplaceable photos of her father who had passed away.  So I reckon I've had my money's worth.  I look forward to the new version.  With best wishes, Simon Guettier."  I hope I'm - oh, there it is, Guettier.  No, Guettier.  Simon Guettier.  Thank you for the pronunciation, Simon.  Sorry it was too late.  Simon Guettier.  And thanks for sharing your SpinRite recovery.



I mean, this is something I've talked about before, where what happened was SpinRite showed the drive, you've got problems here, buddy.  And so it wasn't necessary to force recovery.  It wasn't necessary to guess at the data in the sector.  It wasn't necessary to partially recover it.  It just said to the drive, look.  It just basically rubbed it in its face.  Fix this.  Finally, the drive said okay and swapped the sector out.  Or maybe SpinRite was able to get a good read, and then it rewrote it.  Since there wasn't anything wrong with that spot, it was caused by a power failure, it was just miswritten.  So in reading it, finally getting it read, and then rewriting it, it was able to then be read without any trouble.  So again, no frank recovery or failure, but we did fix the problem.  And that's what SpinRite always does by the time it gets through.



So, okay.  Our listeners understand the issues because we've been discussing this for a while.  And of course years ago I aborted my work on CryptoLink because this was in the air, and I thought, you know, I would hate for encryption to be outlawed after I invested years of my time creating something that I intended to have as a commercial product.  You know, something that I spend a day or two on that's freeware, or even the DNS Benchmark that I spent months on, but I had never intended to sell it.  It would really throw my plans off.  And as it turns out, there was lots of life left in SpinRite anyway.  So I'm glad, for what its worth, this happened, although I wish I had CryptoLink, too.  Except that we're still not sure whether, you know, what's going to happen with encryption.



So as we said at the top of the show and just before the sponsor announcement, Leo, not surprisingly, last week's attacks in Paris have stirred this up again.  And anyone observing it I think objectively would recognize that, without evidence, all anyone has is speculation.  And you have to be so careful in reporting.  So, for example, here's a perfect example, and I don't mean to single out Ars Technica.  They're needing to cover the news.  And they're not doing it any differently than everybody else.  But the details are important because the details are what leave impressions in people's minds.



So Ars Technica of this wrote, and this is referring to a New York Times article that I excerpt a paragraph from next, but so Ars wrote:  "The investigation into last Friday's coordinated terrorist attacks has quickly turned up evidence that members of the Islamic State (ISIS) communicated with the attackers from Syria using encrypted communications, according to French officials."



LEO:  Yeah. 



STEVE:  Okay.  That's not true.  None of that is true.



LEO:  Oh.



STEVE:  But there it is.  They link to The New York Times article, where the only thing it mentions is to say:  "European officials said they believed the Paris attackers had used some kind of encrypted communication, but offered no evidence."



LEO:  Oh.



STEVE:  Okay, even though Ars said "has quickly turned up evidence."  And then, quoting a senior European counterterrorism official, New York Times wrote:  "The working assumption is that these guys were very security aware, and they assumed they would be under some level of observation and acted accordingly."  This guy spoke on the condition of anonymity because he was discussing confidential information.  Well, first of all, he didn't say anything.  And so what we have is we have no information, but we're already blaming encryption because, oh, well, if they were, you know, they probably used it because why wouldn't they?  So, okay.



LEO:  Which is true.  Why wouldn't they?



STEVE:  Okay, right, yeah.  Unfortunately, it's not evidence.



LEO:  Speculation.



STEVE:  So, okay, yeah.  So The New York Times, a different article - The New York Times wrote two, and I have links to them.  And this is well reported, and this frames it well, but sort of with the same bias.  It was titled "Encrypted Messaging Apps Face New Scrutiny Over Possible Role in Paris Attacks."  So again, okay, possible.



LEO:  You know this is being fed to them by officials with an agenda.



STEVE:  Exactly. 



LEO:  Yeah.



STEVE:  So:  "American and French officials say there is still no definitive evidence to back up their presumption that the terrorists who massacred" - let's highlight that - "129 people in Paris used new, difficult-to-crack encryption technologies to organize the plot."  So right off the bat we're going to say that no one knows anything about how this was done, but we're going to write a whole story about how encrypted messaging apps are probably to blame.



"In the interviews, Obama administration officials say the Islamic State has used a range of encryption technologies over the past year and a half, many of which defy cracking by the National Security Agency.  Other encryption technologies, the officials hint, are less secure" - oh, get this.  "Other encryption technologies" - like, you know, the bad ones, the weak ones, like, you know, what, paper for writing it down maybe.



LEO:  Email.



STEVE:  Yeah.  "Other encryption technologies, the officials hint, are less secure than terrorist and criminal groups may believe, and clearly they want to keep those adversaries guessing which ones the NSA has pierced."  Oh, give me a break.  Okay.  First of all, unfortunately, these people are not stupid.  And we have an open environment where we've got websites rating the security of encrypted apps with evidence.  I mean, you don't have to just take their word for it.  You can, you know, certainly there are cryptographers who don't have the world's best interests at heart.  Mathematicians.  Oh.



Anyway, they write, "Some of the most powerful technologies are free, easily available encryption apps with names like Signal, Wickr and Telegram, which encode mobile messages from cell phones.  Islamic State militants used Telegram two weeks ago to claim responsibility for the crash of the Russian jet in the Sinai Peninsula that killed 224 people, and used it again last week..."



LEO:  See, I told you Telegram was secure.



STEVE:  Yeah.



LEO:  I'm sorry.



STEVE:  Yes.



LEO:  I shouldn't laugh.



STEVE:  They did it by sending emojis, a certain sequence of...



LEO:  [Crosstalk] stickers, yeah.



STEVE:  Of stickers, yeah, a plane and a bomb and a...



LEO:  Yeah, we did it.



STEVE:  ...explosion.  And then "...last week, in Arabic, English, and French, to broadcast responsibility for the Paris carnage.  It is not yet clear whether they also used Telegram's secret messaging service to encrypt their private conversations."



Okay.  Now, so again, reading this objectively, state officials would know if they used it, but couldn't crack it.  Instead, they don't know anything.  So to say that, oh, well, maybe...



LEO:  It's a guess, right.



STEVE:  It's like, yes, it's like, well, yeah, okay.  "Nonetheless," write The New York Times reporters, "such end-to-end encryption technology is now so widespread that the attack has revived vitriolic arguments between American intelligence officials and Silicon Valley.  Only weeks ago, the matter appeared settled, at least temporarily, with a decision by President Obama that it would be fruitless for the government to try to compel the technology companies to provide the keys to protected conversations and data.  Apple has already made encryption technology a standard part of its iMessage service."



Oh, and by the way, there is a site that ranks iMessage on a scale where the most secure were listed on the left, then the next most secure, then the okay secure, the not so good, and the  not secure.  iMessage was in the middle as, eh, because, as I've said, Apple manages the keys, and that's the weakness of iMessage.  So you can't really trust it, not absolutely.  There are absolutely trustable solutions.



And the problem is they're in the wind already.  They're math.  You know, I was thinking of the bomb analogy, where it takes expertise to make a bomb, but the bomb requires raw materials.  And of course we know that many raw materials, the production and sales and shipping and tracking are being watched because that's a tipoff to the idea that maybe these are going to be put together into something that goes boom.



The problem is encryption isn't that way.  Encryption has no raw materials that anyone can track or find.  Its use has a footprint, so you can know that this looks like pseudorandom noise, and then that you either can or cannot get into it.  But the point is it's math.  And so the strongest argument that I have, which I've actually used in talking to some aides of senators about this who were trying to explain to their bosses months back, like I was contacted, "Steve, how do we explain to my boss, that isn't technical, why he can't just pass a law to make this happen?"



And we spent a couple hours going over arguments.  And the best one, I think, is it's too late.  This stuff is just math.  And the math is now known and published.  And so all we would succeed in doing, if we forced the legal organizations to weaken their crypto, is then the bad guys would use illegal crypto.  And I heard you mention on TWiT, talking about, again, another suspicion, although I just read that it maybe had been debunked, that maybe PlayStation 4 network had been used.



LEO:  Yeah.



STEVE:  I don't know one way or the other.  But that's a perfect example of Apple and Google and anyone else offering strong crypto is forced to create backdoors, and then so they don't use it.  The bad guys don't use it.  They communicate during World of Warcraft instead.



LEO:  Right.



STEVE:  Or they take a message, and they encrypt it with strong crypto that the NSA cannot break because that exists independent of services.  All the services do is make it easier to use the crypto.  But bad guys don't care how easy it is.  Regular people care.  Bad guys will go out of their way to use strong crypto that isn't easy.  That's fine with them.  And then they'll take this message and encode it using steganography in the low bits of an image that they post anywhere, anywhere on the 'Net.  And now they have encrypted communications which no one can find.  And if they did find it, they can't decrypt it.



So anyway, this article continues just to say:  "But the speed of the encryption wave has touched off alarm among law enforcement and intelligence officials, who say it significantly increases the chances that they will miss evidence of an impending attack."  Again, you can argue exactly against that, as I just did, with as much strength.



"Prime Minister David Cameron of Britain threatened late last year to ban such technologies, although he soon backed down. France is threatening to insist on access; and, if the French do, so will China, many fear, raising questions about whether the same technology used to crack terrorists' communications will be used to track dissidents, as well."



And then Michael Morell, a former deputy director of the CIA, said:  "I think this is going to open an entire new debate about security versus privacy.  We have, in a sense, had a public debate."  And he was interviewed just this past weekend on CBS's "Face the Nation," where he said:  "That debate was defined by Edward Snowden.  Now we're going to have a new argument defined by what happened in Paris."  So anyway, I won't go on with the rest of this.  There's more, if anyone's interested in the whole article, in the show notes.



But Matt Blaze was quoted, Matt Blaze, the again world-class cryptographer and signer of the various petitions and pleas to our government not to do anything wrong, not to force this - oh, where is this?  "Security experts counter that such arguments ignore the fact that even end-to-end encrypted technology leaves a trail of metadata behind that can be used to parse who is talking to whom, when, and where. Encryption is really good at making it difficult to hide the content of communications, but not good at hiding the presence of communications.  Mr. Blaze also noted that the authorities can still read communications if they hack into the target's device, or what security experts call the 'endpoint.'  He said:  'All the encryption in the world doesn't help if the endpoint that holds the keys are compromised.'  So this idea that encryption makes terrorist communications go completely dark has a pretty big asterisk next to it."



So then of course Bruce Schneier, famous cryptographer, his blog posting was titled "Paris Attacks Blamed on Strong Cryptography and Edward Snowden."  And so he said, "Well, that didn't take long."  And then he cites "The Daily Dot" that wrote:  "As Paris reels from terrorist attacks that have claimed at least 128 lives, fierce blame for the carnage is being directed toward American whistleblower Edward Snowden and the spread of strong encryption catalyzed by his actions."  And so then Bruce wrote...



LEO:  That's not true.



STEVE:  I know.  And he wrote:  "Now the Paris attacks are being used as an excuse to demand backdoors."  Then he said, "I was going to write a definitive refutation to the meme that it's all Snowden's fault, but Glenn Greenwald beat me to it."



LEO:  Yeah.  He nailed it, yeah.



STEVE:  And I'm not going to drag us through that.  But I urge, you can probably google "Exploiting Emotions About Paris to Blame..."



LEO:  It's on The Intercept, yeah.



STEVE:  Yes, The Intercept, "Exploiting Emotions About Paris to Blame Snowden, Distract from Actual Culprits Who Empowered ISIS."  It is a really good piece.  He basically - and of course we know he's got a dog in the race.  He worked with Edward to publish this.  But despite the fact that he has a view, doesn't mean he's wrong.  And he reminds us of all the terrorist attacks which did occur, often perpetrated by people law enforcement already knew of and had their eyes on before Snowden's revelations, going back through time.  So it's not like we were catching them all before, and after Edward Snowden, now we're no longer able to catch them.  And in fact the FBI, I mean the Chief of Police in New York, who's been so vocal about this, talks about thwarting 30 different attacks.  I don't remember what the timeframe was.  But he says we're catching them and stopping them all the time.  So it's like, yes.  Even with strong encryption, and even with, you know, after Snowden.



And my argument is that encryption exists.  It cannot be taken back.  It's math.  And that what we've really got with Apple and the various instant messaging is convenient strong encryption; and that, if it is broken, the bad guys won't use it.  All that will happen is that it risks weakening the convenient high-volume use where it matters, strong encryption, by making it less than that.  The bad guys will continue to use less convenient strong encryption and will do it through encryption least significant bits of photos that can't be cracked and can't even be found.



So, I mean, lord knows I'm not on their side.  But I am on the side of sanity and not having our legislators make a big mistake that will not help law enforcement.  It will not help them.



LEO:  That's the bottom line.  It won't make any difference, and it will in fact weaken encryption for everybody else.



STEVE:  Yes.



LEO:  So I think that those are provable points, both of them.



STEVE:  Yes.



LEO:  Yeah.  Certainly from experience, anyway.  Well, it's a shame.  And I'm already, you know, I'm seeing CNN, you just watch this, I mean, it's just you can see it happening.  But I don't think you have to ascribe nefarious motives to law enforcement, to American spy agencies or GCHQ in Britain or the French spy agencies.  They want to protect the homeland.  I mean, I think they're doing this with absolutely pure intent.  But I don't think they understand the issues.



STEVE:  Yes, I hope I didn't make it sound like, I mean...



LEO:  No, they're trying to do the best thing.  But they just don't understand the risks involved and the fact that it's not going to help you.



STEVE:  And also it's been pointed out that no one has been able to show a single instance where decrypting communications actually did solve, like was the crucial piece of information.  So, I mean, it's one of those things that seems logical.  It would make sense.  Which is why it sells so well, and why headlines are so powerful, and why all the talking heads are saying it.  And, I mean, Barbara Boxer is running around saying we have to get Silicon Valley under control.  And it's like, no.  It will not make a difference.  It just won't.  



LEO:  It's going, I mean, it's going to be hard with this drumbeat for Silicon Valley...



STEVE:  I think we're going to lose.  I'll be surprised...



LEO:  Really.



STEVE:  ...if we, yeah, I mean, I don't know how.  I mean, we spent some podcasts demonstrating that it's not possible.



LEO:  Right.



STEVE:  Things like valuable things, like Perfect Forward Secrecy, cannot be used because Perfect Forward Secrecy is continually changing the keys.  And so you can't have Perfect Forward Secrecy, which now everyone wants, if you're going to allow a captured encrypted previous dialogue to be decrypted because the keys are inherently ephemeral.  So that would require somehow logging the keys.  I mean, and this is the problem, is no one wants to look at the actual details.  And they assume that Silicon Valley is just dragging their heels.



LEO:  Right.



STEVE:  Like Apple is selling security as a marketing vehicle, and so it's not that it cannot do it, it just chooses not to.  And it's like, no, when you really get down to it.  There was a great analysis that talked about, like, if you were going to do this on an Android phone, then nothing prevents the bad guys from loading an Android app which is secure, which would be available on the black market, into their Android phone and using it.  Because nothing prevents it.  



LEO:  Yeah.



STEVE:  And so, okay.  So if we were to really firmly outlaw encryption, well, first of all, is a backdoor feasible?  And the problem is now all of communications looks like random noise.  So what does the NSA do?  All of the communications looks like random noise.  Do they have the ability to decrypt all of the communications in order to return it to plaintext, in order to run it through their pattern recognition?  I mean, no one is suggesting that.  No one is suggesting that all of the communications gets decrypted.



So we're in a world where everything is encrypted.  It's just hiss.  It's white noise.  So that says they have to use the metadata or endpoint recognition to find the specific dialogues they want, and then have a way of decrypting those on demand, and then seeing if there's anything there.  And we know that the problem is that means that all, any arbitrary communication, can then be decrypted.  If they're able to decrypt any one of them, then they can decrypt them all.



LEO:  Wow.



STEVE:  So I just - and again, it risks damaging the high volume, ease of use case, which is what Apple, to quote a Silicon Valley target, what Apple gives us is very, very, secure instant messaging, as do all the other IM clients, super ease of use.  But that's all.  It's the ease of use.  So if you don't need that, and somebody - well, a perfect example is Threema.  Threema is my choice for instant messaging client because it's less easy to use.



LEO:  Right.



STEVE:  You have to physically exchange the key, and that's cumbersome.  So people don't use Threema because that's, boy, you know, that's a few hoops to jump over.  Well, if you absolutely have to have security, that's what you do.  And then you use a courier to exchange a couple QR codes written on paper, which he can burn or eat, depending upon what, in order to get the keys exchanged.  And then you have absolute security.  But iMessage just kind of works.  So that's what everyone uses.  So my point is that it's like it's the wrong target.  It's why it's a whipping boy.  It's why it's a complete red herring.



LEO:  Because it's easy.  Right.  Great stuff, as always.  And the problem is that everybody listening to the show knows that.



STEVE:  Yeah.



LEO:  And I'm not sure, I mean, I guess the thing to do is just keep saying it.



STEVE:  But they do know people.  They do know people.



LEO:  Yeah.  And keep saying it because it will eventually, well, I think people convinced David Cameron that it couldn't be done.



STEVE:  Yes, and I don't know if I had any influence to this one senator whose aides had me on speakerphone.



LEO:  It bet you did.  I bet you did.



STEVE:  But, you know, somebody told them to call me.



LEO:  Right.



STEVE:  Because I could explain it to them.  And I ended up giving them a strong argument, which was unfortunately you can't take back the math.  The math is already out there.



LEO:  It's already out there.



STEVE:  Yeah.



LEO:  You know, we know this.  Because remember when people were wearing T-shirts with a strong encryption code on it, going...



STEVE:  Because copyright was trying to be used.



LEO:  Well, [crosstalk].



STEVE:  That source code is copyrighted.  And it's like, oh, come on.



LEO:  Yeah.  I mean, I think that we know this already, that this is a - there's no way to stop it.  The horse has left the barn.



STEVE:  Yeah.  And the fact is, you know, sure, maybe your corner criminal will use his iPhone stupidly.  But no people...



LEO:  But not the really bad buys.



STEVE:  Exactly.  Not the ones we really care about.



LEO:  We know they're smart enough because Osama bin Laden was living in a compound for years where it was expressly forbidden to have any Internet.  He knew.



STEVE:  And it was by...



LEO:  [Crosstalk] with couriers.



STEVE:  Yes, it was by torturing, or, no, we don't use that word, it was by extreme interrogating a courier that we were able to get the information.



LEO:  That's, by the way, not clear either.  But that's the story.



STEVE:  Yes, true.  



LEO:  Yeah.  Well, Steve, from your lips to the congresscritters' ears.  And by the way, I'm having a lot of fun with this game.  Man.



STEVE:  Oh, Leo, it's going to suck you in.



LEO:  I feel like it's "Ender's Game" going on here; right?



STEVE:  Yeah.



LEO:  It's really fun.  It's beautiful, and it's slow, which is nice, so you don't have the panic thing going on.  I think I'm starting - how do you get a planet to expand, though?  I can't...



STEVE:  Okay, now, what you're not doing is draw a circle, I mean, like, draw a cord across one those things, and that selects them all.



LEO:  Yeah.



STEVE:  And then tap where you want it to go.



LEO:  Right.  Well, I've been kind of - I've been doing it one at a time, ones and twos, because I want to reinforce these planets as I maintain this forward base.



STEVE:  Exactly.



LEO:  It takes a long damn time.  That's the only negative.  But it's really fun.  Really fun.



STEVE:  It's not meant to be rushed.



LEO:  Yeah.  Yeah.



STEVE:  It's just kind of slow.



LEO:  He says, and I think this is true, he's tried to strip the elements of real-time strategy games down to the bare, you know, essentials, which is this; right?



STEVE:  Yes.  You have one thing you can do, and one type of action.  But yet there's a huge decision process.



LEO:  Right.



STEVE:  Ooh, and look at those guys fighting each other right now.



LEO:  Oh, it's a battle.  But I think I'm going to prevail.  Yeah, yeah, yeah.  That orange guy.  More reinforcements to the forward posts.  See, I'm - whoops, didn't mean to do that.  Don't go back there, guys.  Go here.  So I'm trying to bring up the guys in the rear to strengthen.



STEVE:  Auralux, A-U-R-A-L-U-X.



LEO:  It's a fun game.  Oh, man.  All right.  Thank you.  Steve.  I'm going to be kind of busy.  That's on iOS and Android, by the way.



STEVE:  Yes.



LEO:  Which is nice.  You can play it on all your platforms.  Steve Gibson is at GRC.com.  That's his website, and that's where you'll find Security Now!, of course, including transcripts, written transcripts.  There's no way to pause this, is there.  I just have to let the war go on.



STEVE:  Good question.



LEO:  I don't think there is.  So you'll forgive me if in between I just tap some planets.  You'll find written transcripts - oh, my god.  You'll find [mimicking bugle].  You'll find 16Kb versions.  That's the lowest quality audio we offer, but it's for people with bandwidth limitations, which increasingly is everybody.  We also have lots of free stuff there.  All of his SQRL and the Perfect Paper Passwords.  And of course his bread and butter, SpinRite, the world's best hard drive maintenance and recovery utility.  If you have a hard drive, you must have SpinRite.



We have on our website both audio and video, TWiT.tv/sn.  We also have put versions up for every podcatcher to get.  So you can subscribe.  And please do.  That way you'll get every episode.  Just search for TWiT.  You'll find what you're looking for.  We do the show on Tuesdays, 1:30 Pacific, 4:30 Eastern time, 21:30 UTC, if you want to watch live or join us in the chatroom.  I think that's everything.  Steve, have a great week.  Enjoy...



STEVE:  Will do.  Oh, GRC.com/feedback.



LEO:  Oh, questions and answers, yeah.



STEVE:  Because next week is a Q&A.



LEO:  And I got an email from Oscar on my PiDP-8.



STEVE:  Oh, yeah.



LEO:  He said, "Oh, I forgot to send it to you."  



STEVE:  Yay.



LEO:  Well, yeah.  So he refunded my money.  Thank you, Oscar.  And then he said, you know...



STEVE:  Oh, so he didn't...



LEO:  Well, I said don't go to - because I guess he'd sent everything out.  Don't go to crazy lengths to get another one for me.



STEVE:  Oh.



LEO:  He said, "No, no, I'm going to get you one."  So we'll see what happens.  We'll see what happens.



STEVE:  Okay, good, good.



LEO:  That's the Raspberry Pi-based PDP-8.  You know, yesterday I had Larry Wall, the creator of Perl, on.  And we were talking about his early days of computing with PDP-11.



STEVE:  Oh.



LEO:  I should have told him.  We've got something for you, Larry.  All right, Steve.  Thanks for joining us.



STEVE:  Okay, my friend.  Talk to you next week for a Q&A.



LEO:  All right.



Copyright (c) 2015 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#535

DATE:		November 24, 2015

TITLE:		Listener Feedback #223

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-535.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We've got questions, we've got answers, and he's going to talk about the latest news, including, yes, the Dell certificate fiasco.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 535, recorded Tuesday, November 24th, 2015:  Your questions, Steve's answers, #223.



It's time for Security Now!, the show where we talk about your security and safety online.  And thank goodness, I thank goodness every day that Steve Gibson's out there, helping us understand this and do the best we can.  Steve Gibson, our host for the last 10 years of Security Now!.  Hi, Steve.



STEVE GIBSON:  Well, the first and last 10 years of Security Now!.



LEO:  And we'll continue as long as, what is it, the good lord willing and the creeks don't rise. 



STEVE:  And there seems to be no slowdown in things for us to talk about.



LEO:  Oh, man.  Yeah.



STEVE:  So we have a Q&A this week.  This is Episode 4 - sorry, 534, I was looking at the last digit, 534, Q&A #223.  Lots to talk about, in addition to great questions from our listeners.  We of course will cover the story about Dell stepping in it big-time.



LEO:  Oh, boy.



STEVE:  And then answer the question, has LastPass stepped in something, too?



LEO:  Uh-oh.



STEVE:  We'll cover Windows 10's various recent struggles briefly.  There is an interesting document, 43 pages, that I'm just going to summarize briefly, from the Manhattan DA about their position on smartphone encryption...



LEO:  Oh, I can imagine.



STEVE:  ...that I want to cover.  We got a bunch of updates and miscellaneous fun stuff.  An important piece of errata from something I got wrong a couple weeks ago.  And then a great Q&A.  So lots of good stuff.



LEO:  A jam-packed show for you.  Can't wait.  I've got the questions, Steve's got the answers, and a lovely cup of joe, it looks like.  That looks good, whatever you just sipped from.  Let's get into the security news.



STEVE:  So our Picture of the Week is our top story, or at least our first story.  And this is a picture that someone was nice enough to tweet from their own Dell machine, which shows a certificate that was issued by eDellRoot, issued to eDellRoot.  In other words, it's self-signed.  Interestingly enough, it's valid from 4/7/2015, so it's been around for a while.  They weren't using any of the benefit of expiration, so their own certificate which they created expires on New Year's Eve of 2039.  So they intended that thing to sit around in the Dell machines forever.



And the other interesting thing to note there is that certificates always have restrictions on what they're permitted to be used for.  And this certificate has no restrictions.  For example, GRC's certificates say it can be used for authenticating the identity of a web server or authenticating the identity of a web client.  This is all issuance policies and all application policies.  So it could also be used for code signing.



So anyway, so here's what happened.  Essentially, this has caused a huge concern in the industry because this is another instance, and we've covered this from so many different directions in the past, another instance of some third party putting their own certificate authority certificate in the root store of the machine.  And in this case, the private key is also available, and that's the piece that is normally protected with all the power a certificate authority has because what they're doing is they're, well, I guess we've covered the whole certificate PKI infrastructure over and over ad infinitum because it's something that we depend upon to such a degree.



But so what this is being compared to is Superfish, that of course we covered in the past.  Then we've also seen various antimalware packages installing their own certificates.  All of these are bad.  However, there is a degree of badness to them.  For example, if each antimalware package generates a certificate and then plants it in the root store for the machine, then at least all the certificates are different.  In this case, all of the Dell machines that have this, have the identical certificate, which means they have the identical public key and private key.  And that makes it trivial to break into their communications and to essentially intercept what they're doing, raising no alarms or warnings of any kind.



So, for example, Ars Technica's coverage, Dan Goodin says:  "Dell does a Superfish, ships PCs with easily cloneable root certificates.  In a move eerily similar to the Superfish debacle that visited Lenovo in February, Dell is shipping computers" - oh, and by the way, notice this is two months later.  Two months after the Superfish  debacle, Dell said, oh, let's do that.



LEO:  Well, I do wonder how this happened.  But probably whoever decided to do this said, oh, but we're not going to use it for advertising, as Lenovo did.  We're just using it for support so we can get your Dell ID tag.



STEVE:  Well, yes, technically.



LEO:  That's harmless; right?



STEVE:  Right.  So Ars says:  "Dell is shipping computers that come preinstalled with a digital certificate that makes it easy for attackers to cryptographically impersonate Google, Bank of America, or any other HTTPS-protected website."  Blah blah blah.



I'm going to skip down to Robert Graham of Errata Security, who is a well-known expert in the industry.  He says in his blog post, "It was discovered this weekend that new Dell computers, as well as old ones with updates, come with a CA, eDellRoot, that includes the private key.  This means hackers can trivially eavesdrop on the SSL communications of Dell computers.  If I were a black-hat hacker, I'd immediately go to the nearest big city airport and sit outside the international first class lounges and eavesdrop on everyone's encrypted communications.  I suggest international first class because, if they can afford $10,000 for a ticket, they probably have something juicy on their computer worth hacking.



"I point this out in order to describe the severity of Dell's mistake.  It's not a simple bug that needs to be fixed, it's a drop-everything and panic sort of bug.  Dell needs to panic.  Dell's corporate customers need to panic.  Note that Dell's spinning of this issue has started, saying that they aren't like Lenovo because they didn't install bloatware like Superfish.  This doesn't matter.  The problem with Superfish wasn't the software, but the private key.  In this respect, Dell's error is exactly as bad as the Superfish error."



So several things have happened.  Among them, there are two exploitability test sites, the links for which I have in the show notes.  One is https: - you have to remember that you're trying to test a certificate, so you want to make a secure connection - https://bogus.lessonslearned.org.



LEO:  A great URL, by the way.



STEVE:  Yes.  And so this is a...



LEO:  Now, I'm doing it on my Dell, which I already know, because this came out in January, and these Dells were only infected starting in August.  Although you said there was an update.  I never got a update that added that root certificate.  But this is what you want to see; right?



STEVE:  Correct.



LEO:  There's a problem with this website certificate.



STEVE:  Right.  And then the other one is edell.tlsfun.de.  And that's a little more user friendly.  That's the link that our listeners are going to want to send to their friends who they know have Dell laptops because it gives you a yea or nay and some explanation and background and other links and things:  edell.tlsfun.de.  So those are two sites which have popped up to - essentially, they have synthesized their own bogus certificates, which no one's normal correct root store would honor.



And, by the way, Firefox won't honor it.  In fact, when I tried to go there, that site said, well, you're using Firefox, so you were never in any trouble, even if you're using a Dell laptop.  In fact, that's one of the short-term mitigations, although we already have Dell's permanent one I'll get to in a second, is simply use Firefox.  As we know, Firefox brings along its own root store because it has its own security library system as part of it.



LEO:  Is this not the case for Chrome?



STEVE:  No.  It's really interesting.  It's the certificate security portion of Windows that for some reason Chrome shares.  And you can see that because, if you inspect the certificate in Chrome, you get Windows dialogues that are identical to what IE or Edge will show you because Chrome is actually using a Windows API.  So it didn't do its own.  It's sharing Windows's.  So the risk is IE, Chrome, and Edge on a Dell laptop or actually any laptop with that certificate, but presumably only Dell.



LEO:  Yeah.  I don't think anybody else is going to put in eDellRoot on theirs.



STEVE:  Well, I mean, the problem now is bad guys could, or people wanting to play around could stick that on your machine.



LEO:  So make that clear, because they all use the same private key, and that private key is revealed, stupidly, in the certificate.  Anybody could do a man in the middle and say, with this fake certificate, say "I'm Bank of America, baby."



STEVE:  Well, correct.  And so, for example, an arguably legitimate, although worrisome, use is a corporate firewall that insists on scanning into secure connections.  A growing number of corporations are doing this because HTTPS is becoming more prevalent.  So there will be, on the perimeter of the corporate network, there will be an intercepting proxy which will disallow any secure connection that it can't see into.  And so part of what the corporation has to do, every computer inside that network will have a certificate from that appliance.  And so it's the certificate from that appliance which has been added to the normal collection of certificates that gives that appliance the unique ability to intercept and inspect all the traffic leaving and coming into the corporate perimeter.



And so the point is that, because all of these Dell laptops were including this certificate with the private key, it would be possible for anyone to act just like that kind of deep packet inspecting filter anywhere on the Internet and intercept any Dell communications, decrypt it, look at it, and then reencrypt it, and it would provide no warning to the user.



Now, the coolest utility is one that we've talked about before.  And that's - I've got the link also in the show notes.  It's Windows Apps by FS1, and the app is a tiny little 40K executable for Windows.  It's at trax.x10.mx/apps.html.  We've referred to it before.  It went away for a while and came back.  What this does, this RCC tool inspects your certificate store for anything that shouldn't be there and provides you with a little audit.  So very handy.  Anyone running it on a Dell machine, this thing would immediately, even before this was known publicly, would have raised a flag and said, wait a minute, what's this eDell certificate sitting around doing?



But anyway, Dell has, and again, a link in the show notes here, their official remover has now been issued.  And I've got the link here.  It's too long for me to stick into the podcast audio, but it's eDellRootCertFix.exe.  What Dell said yesterday in a CYA-style response is they wrote:  "Today we became aware that a certificate (eDellRoot), installed by our Dell Foundation Services application on our PCs, unintentionally introduced a security vulnerability.  The certificate was implemented as part of a support tool and intended to make it faster and easier for our customers to service their system."  Makes it easier for anyone to service your system.



"Customer security and privacy is our top concern and priority for Dell.  We deeply regret" - I'm sure - "that this has happened and are taking steps to address it.  The certificate is not malware or adware."  Okay, big comfort.  "Rather, it was intended to provide the system service tag to Dell online support, allowing us to quickly identify the computer model, making it easier and faster to service our customers.  This certificate is not being used to collect personal customer information.  It's also important to note that the certificate will not reinstall itself once it is properly removed using the recommended Dell process."  However, note:  If you simply remove it from the certificate store,  the Dell service will see that it's gone and reinstall it.



LEO:  Oh.



STEVE:  So you have to - yeah.



LEO:  Thanks, Dell.



STEVE:  It comes back.



LEO:  They could have done this without doing - I don't even understand why you do a self-signed certificate if all you want to do is identify the machine's tag.



STEVE:  Se, that's just it.  I haven't had a chance, because I've just been...



LEO:  [Crosstalk], don't you think?



STEVE:  ...pulling all this together.  But this really, this seems odd to me.  The only, well, the only thing I could imagine is that they've got a server somewhere, or some automated appliance.



LEO:  So it's almost like you're logging into a VPN kind of situation.



STEVE:  Well, or there's something autonomous that they set up where they want to have a secure connection.  And rather than simply buying a certificate for it from any of the existing certificate authorities, in which case all of the Dell computers could connect to that with no trouble, they got fancy.  And they said, well, we don't want to, we don't need to buy one of those nasty certificates from someone else because then we'll have to renew it every couple years, we'll have to pay the money, blah blah blah. So we're just going to install our own root CA in all of our machines so that those machines are able to talk to our own private certificate that we don't have to buy and won't expire ever, essentially, till 2039.



LEO:  As always, the worst thing in technology, the worst thing in IT is somebody who's half smart.  Right?  Smart enough to install a self-signed certificate, but not smart enough to understand the implications of what they just did.



STEVE:  Right.  And 60 days after the Superfish debacle that did the same thing.  Because that thing was signed in April of this year, and Superfish was in February.  So, like, okay.  And I think probably the good news is this has been a huge kerfuffle, at least, I mean, Dell is a substantial company with a huge corporate customer base.  And corporations must be going crazy.



LEO:  All of our finance computers are Dells.  All of our editors' machines are Dells.  My laptop is a Dell.



STEVE:  They make nice hardware.



LEO:  I've been recommending Dells.



STEVE:  And it's feature complete, Leo.



LEO:  Yeah, no kidding.  Right down to the self-signed certificate.



STEVE:  So the good news is Lenovo, that happened.  Now it's happened with Dell.  Hopefully other people are listening.  Somehow Dell didn't get the message.  I don't know how many more times we're going to have to go through this.  But of course this is a lesson that we're going to have to learn, obviously more than once.



Anyway, in the show notes, this RCC.exe for Windows machines, which of course are Dell machines, is a neat little quick auditing tool that spots anything.  In fact, many people have tweeted that they found that their antimalware had installed its own cert in their machine.  And again, it can technically be done in a safer way.  If the antimalware is in your machine, and the cert's in your machine, then it's only locally that there's any decryption.  I still don't like it.  But if you want your secure traffic to be deeply inspected, then this is the way that happens.  Even Microsoft's Fiddler tool sticks a cert in the store because it wants to be able to audit your secure communications.  So if it's local, and if the certificate is - if they're all different so that it's degenerated fresh, then it's more acceptable.  What isn't is that anybody who gets a copy of this cert can essentially get into the communications of Dell machines.



LEO:  Don't take this the wrong way, but you trust this Sven guy; right?



STEVE:  Yeah.



LEO:  Okay.  Because he's Cuban.  The site's hosted in Mexico.  It's closed source software.  I mean, really?  You trust this guy.  He's okay.  FS1, like he's cool.



STEVE:  Think so.



LEO:  Okay.  Just saying.  All right.  What else?



STEVE:  Boy, Leo, we've really made you paranoid.  Ten years of this podcast...



LEO:  I've become paranoid.  I don't, you know, when I see ".mx," and then I see he's Cuban, I just, you know, I'm sure he's a nice guy.  His name is Sven from Cuba.



STEVE:  And I do think I'm probably too trusting.  I'm too focused on the technology, and I think, oh, isn't that cool.  Look, it's a 40K exe, and it audits my root store.  Well, you're right, I don't...



LEO:  What could possibly be wrong with that?  You can, by the way, and I should probably say, you'd be better off to either use the Microsoft console management tool to remove this by hand.  Of course, then Dell's going to reinstall it.  And then they can run the Dell app after that.



STEVE:  Yeah, the thing to do is, if you look, if you open the Windows Services app, you will see Dell Foundation Services.  Stop it, and then switch it from automatic to disabled.



LEO:  Ah.



STEVE:  That'll shut it down and stop it from autostarting.  Then you can delete the certificate, and it'll stay gone.  But if you want to, Dell also now has an "oops, we're sorry" tool, and you can simply run that, and it does the same thing.



LEO:  Cool.



STEVE:  So next up, LastPass.



LEO:  Oh, yeah.  Now, I'm worried about this one.



STEVE:  So two security guys, Marvin Vigo and Alberto Garcia presented at the recently concluded - I was so tempted to call it Hamsterdam because of course I did love "The Wire."



LEO:  That would be the anything's legal zone.  Right?



STEVE:  Yes, yes, exactly, Hamsterdam.  Anyway, there was a Black Hat conference where they presented the talk, "Even the LastPass Will Be Stolen, Deal With It."  And earlier in the week - the Dell news was recent, so this was most of my Twitter feed for the last 24 hours.  Prior to that, and for days, it's been oh, my god, Steve, can't wait to hear what you think about this and so forth on Security Now!.



So these guys did a beautiful job of deeply reverse-engineering the LastPass system, not only the client, but even the server-side API, with an eye toward, I mean, really deeply digging into it.  And they did find some things that LastPass could have done better, and immediately fixed, that we'll talk about.  But mostly what they found, and there's some really good lessons here, are the things that any local attack would have available.



For example, and we've touched on this a number of times, but the headlines in the popular press got everybody worked up.  And the press guys don't really understand this, they're just doing a quick cursory overview of the presentation outline that's been posted so far.  So far we don't have the video up of their actual presentation.  But, you know, and saying, oh, my god, LastPass has been hacked.  These guys go out of their way, they take pains to say it has not been hacked.



But here's the problem.  If I'm using LastPass, and I want the convenience of staying logged in while I'm using my computer, so that when I go to a site the login fields get populated for me, and if I've told LastPass to even hit the login button, it does that, but at least the login fields get populated, what does that mean?  That means that, without me doing anything, no fingerprint, nothing that I know, nothing that I am, I mean, and not even me, somebody else could walk up to my computer, open a page in my browser, go to a site, and bang, they've just, you know, LastPass logged them in.



So the point is software can do that, too.  In order to get the convenience that we want, unfortunately, we've had to empower our computer to be able to log itself into all of the websites we visit.  So if malware gets into our machine, or if forensic software - I wouldn't call what these guys did "malware."  There was nothing malicious about it.  They just wanted to pry it apart to see how it works and see what vulnerabilities they could find.  If software is able to inject itself into the browser, and the browser has the ability to access your vault for the purpose of getting passwords and usernames, then that software has access, too.



So that's essentially what these guys did, like sort of phase one.  There were three different aspects to what they did, I mean, they deeply went after this.  So the first is the so-called "vault decryption attack," where they were able to locally, with full access to the local system, if the user was logged in - and I'll note, if you're not logged in, they couldn't do anything, and they acknowledge that.  Or if you had multiple accounts, then by default none of the other ones would be logged in, and they couldn't get into those.  So it required that the user be logged in.  And then the system was able to log you in, so they were able to get access to the vault.  It's not surprising, but it should all give us pause.  I mean, that's a consequence of the power that we have given to this password manager.  And, by the way, not just LastPass.  This applies to them all, every single one of them that operates this way.



Then they found something else, going further, and they call this the "disabled one-time password attack."  And this is something, again, we talked about years ago, and it's another tradeoff which LastPass, a.k.a. Joe, carefully made.  And that is, what do we do if a user forgets their password?  I mean, this is a problem for a practical solution.  What do we do?  Do we tell them, sorry, you're out of luck?  You no longer have any access to any of the Internet.  No.  And so they decided that was not practical.



So they create a disabled one-time password.  You'll remember that LastPass has a one-time password facility, and you can create some one-time passwords and, for example, print them out or carry them in your wallet, if you want to, as sort of "get out of jail free" cards.  But there is, by default, and you can turn this off - and by the way, you can turn off "keep me logged in."  So these various features, which were there for convenience or password recovery, you can disable them.  And our listeners, now understanding this better, may choose to.  It's their choice.  Less convenience, but more security.  So it's the classic tradeoff.



There is, by default, a disabled one-time password.  And by going to "recover my password" at LastPass, it jumps you through some hoops, communicates with your browser, ends up reaching into the vault and reenabling the disabled one-time password in order to give you account recovery, so that there is an answer to, "Oh, my god, I've lost my password."  And so once again these guys tore that protocol apart and figured out a way, if they're local - and so this gives them - this is a get-around if the user's not logged in.  If the user's logged in, it's not that difficult for anything to get access to the vault because the browser can.  If the user's not logged in, as I said, it's just you fall back to a brute-force attack, which is impractical.  They found some way they felt of maybe reducing it from a 256-bit to a 128-bit attack.  But even that, you know, 128 bits in today's world is still an extremely strong level of encryption.  We can always add bits and get stronger, but a lot of Internet connections are using 128-bit symmetric key, once the public key is used, in order to negotiate that.



So the disabled one-time password attack says, if you have that feature enabled, which it is by default, to solve the problem of, oh, my god, I forgot my password, and you're local, these guys very cleverly, with a lot of work, figured out how to get in there and reenable that in the same way that LastPass reenabled it remotely with the whole web interface and conversation, and then be able to open up the user's vault in order to get access to it.  So those are the local side.



They also did LastPass side.  That is, what about a malicious employee?  What about the NSA compelling them to do something?  What possible evil LastPass power is there?  Well, now, that's a tricky thing to answer because we are trusting LastPass.  We're running a plugin from LastPass.  We're assuming that the plugin does what they promised us and that the plugin encrypts stuff so that they get a blob that they cannot decrypt.  We understand that's always been the key concept.  But nothing says it always must be.



It turns out, though, they did find something that worried them, which was something called custom_js, custom underscore js, which was some JavaScript which LastPass can inject onto web pages when the LastPass plugin is unable to parse the DOB, the Document Object Model, which is the structure of the page, which it needs to do in order to find the username and password fields.  So it's sort of a helper JavaScript for specific sites, for whatever reason, like specific popular sites where for whatever reason the generic parser doesn't work.



And so these guys realized that that was a way that someone evil at the LastPass side, or maybe under order from the NSA, I don't know the law enough to know whether the NSA could compel LastPass to make a change under certain criteria.  LastPass can say we can't decrypt it.  The NSA maybe, I don't know, can say, well, change things for this user so you can.  Anyway, so these guys did note that that, they felt, represented a vulnerability.



And then finally there is, in Firefox, all of the plugin settings are gathered together in a single file called prefs.js, which is just a blob of plaintext, readable, I think it's XML format, file which Firefox maintains, where all of its preferences and all of its plugins preferences are stored.  That's the local storage for that kind of stuff.  And it includes on Firefox the user's encrypted credentials.  So the concern there has been that they're technically sensitive.  You'd like them to stay, they are encrypted, and so we're back to the brute-force attack on them; but it's better not to have them wandering around.



The problem is that some users unwittingly post their prefs.js file from Firefox to various Internet forums for other people to look at and say, hey, you know, such and such is broken, can you look at my prefs.js file and tell me what's wrong?  And Google will happily, if you put in a phrase from that file or from, it's like browserplugins dot LastPass dot, something like that, you put that into Google, Google turns them up because lots of people over time have posted them.  And so, again, they're not decrypted.  You'd need a brute-force attack in order to get anything back from it.  But it's better not to have those things lost.



So they wrapped up their presentation with recommendations for LastPass users, saying that there are two versions of the plugin.  There's the compressed obfuscated JavaScript version, and there's a binary version.  They felt that using the binary version of the plugin was better because it was just - it's a binary blob.  It's not subject to more ready editing and manipulation.  They said do not store the master password, which means don't tell LastPass to remember it, and you have to be providing it all the time.  And Leo, I know how you love providing your password all the time.



LEO:  They've heard me complain a few times about this. 



STEVE:  Yeah.



LEO:  That's when I love that LastPass shows up and says, I'll fill that for you.  I feel like, oh, love that.



STEVE:  Yeah, it's so convenient.



LEO:  Yeah.



STEVE:  And again, as long as your local environment is secure, you're fine.  And notice that two years ago, right around this time, when I gave the first unveiling of SQRL, what I talked about was, in this post-Snowden era, who's going to trust a third party?  And so SQRL's power is that there is no such thing as the cloud with SQRL.  There's no LastPass.  There's no third party.  There's nobody but you and the site you want to log into.  The user does have the problem of, what if I forget my password?



Which is why there are a couple of mitigations.  One is that the client prints out a page for you to put somewhere in cold storage.  But more easily than that, when you create an identity, you get something called a "rescue code."  It's 24 digits, which is - think of it as one and a half credit card numbers because a credit card number is 16 digits.  And I make you write it down just once.  Write it down just once and put it away.  And that is your "get out of jail free" card.  It's offline.  It's never stored.  But the beauty is nobody else has it, and no third party has it, and it doesn't matter what the NSA has to say about it.



You can argue, okay, well, that's kind of a pain.  But, yeah, you only have to do it once maybe for your entire life.  So that was the design choice I made that sort of prevents all of this other, I mean, all of the problems of, oh, my god, I forgot my password, well, that means that there needs to be some sort of recovery.  And LastPass doesn't want the responsibility, so they store that in your machine.  And so that creates the vulnerability.



So anyway, in terms of recommendations for LastPass users, activate the new account recovery over SMS.  They say, and this I think is kind of impractical, audit your vault for malicious JavaScript payloads.  I'm not sure how the common user would do that.  Don't use the password reminder.  Activate two-factor authentication.  And then they also say add country restrictions.  And their point there is that would prevent somebody who had exported your stuff from being able to log in as you somewhere else.  And that's definitely - that should be top of your list, as long as you're not a frequent international traveler, in which case that would befuddle you.  So add country restrictions and disallow Tor logins because that's of course another way for a bad guy to get into your system is just through using Tor.  And those are both features that you can disable for heightened security.



And then they also gave LastPass corporate, Joe, some suggestions.  They said get rid of the custom_js file.  Change the way they're encrypting the vault to do it in one chunk.  And they also used ECB encryption.  I forgot to mention that earlier.  ECB, that's the acronym for Electronic Code Book.  And that's the non-cipher mode encryption.  Famously, we've all seen that Wikipedia page that talks about encryption where you see the Linux penguin in all of its glory, looking black, white, and yellow, and then it's encrypted under Electronic Code Book, and it turns it into gray fur, but you can still see the penguin there.



The point is it's not statistically sound.  It's probably all they needed.  But the point was that one of the things that Electronic Code Book is, is it doesn't cause one encryption to rely upon the output of the previous one.  The chaining, you know, cipher block chaining, we've talked about CBC and all of the other chaining modes, they create an interblock dependency so that the blocks don't stand alone.  And even the first block typically has an initialization vector that influences it.  And the IV, initialization vector, is a nonce that changes all the time, and it can be known.  It's just good if it's unique because then you can't tell anything about what the first chunk of the encryption is, the first block.  But with Electronic Code Book, there's no chaining.  You're encrypting each block by itself.



So what it does is it does leak information because under the same key, anytime you encrypt the same thing, you get the same result.  So you could see easily, for example, if the user were encrypting the same password on different sites because an identical encrypted version would appear on multiple sites.  So they're saying, don't do that.  And they also wanted them to strengthen their password-based key derivation function, suggested using certificate pinning rather than just relying on the public key system, actually look at the serial number or the hash of the certificate.



They also suggested that LastPass embrace open source.  I'm not sure how they do that, though, as a commercial company, but it's a nice ask.  And then, they said with a little smiley face, adopt a retroactive cash reward bug bounty program.  Although...



LEO:  Pay us.  Right?  Retroactive means, "And we want some of that."



STEVE:  Yeah, but they didn't find any bugs.



LEO:  Good point.



STEVE:  There were no bugs found.



LEO:  Good point.



STEVE:  This was a rigorous analysis.  And I would argue any other password manager probably suffers this or more problems.  One of the beauties of LastPass is that it has been pounded on for quite a while.  In their conclusions, I quoted them in the show notes:  "Password managers are a great tool that everyone should use.  Even though we exposed weaknesses" - they say, I wouldn't say that, but I'm reading what they wrote - "in LastPass, it is still a solid tool," they wrote, "and a better option than using the same password, or only changing the last characters of your password, everywhere.  There are ways to harden your LastPass configuration" - which we talked about - "that can avoid some of the explained attacks.  Watch the talk and slides for more details on that.



"To finish, we want to point out that the security team at LastPass responded very quickly to all our reports, and a lot of the issues were fixed in just a couple of days.  It was very easy to communicate and work with them."  So really, you can't ask for more than that.



LEO:  Yeah.  In fact, everything's going to have vulnerabilities.  I say this all the time.  Every computer's going to have a problem.  It's how they respond.



STEVE:  Yes.



LEO:  How quickly they fix it.  Whether they even listen to you.  And so many times you hear security researchers say, yeah, we told them about this again and again and again.



STEVE:  We gave them six months.  We never heard.  So we're going public because, you know, sorry about that, you had as much time as you need.



LEO:  So thank you, Joe, for - his stewardship of LastPass continues to be excellent.



STEVE:  Well, and the only real issues were caused by convenience.



LEO:  Right.



STEVE:  So unfortunately, power users could say, oh, I'm going to turn off that disabled one-time password feature.  Good, turn it off.  Make sure you never forget your password because, if you do, they won't be able to help you.  But that's the tradeoff.  And if the idea of something in your machine getting into your LastPass vault unnerves you, then because your browser has to be able to do that, you have to take that ability away from it, in which case you're having to put in your LastPass password all the time.  And then the problem is you're tempted to weaken it to make it easier to put it in.  And then you're back to it being subject to a brute-force attack.  So there are some things that don't have an answer, but a set of convenience versus security tradeoffs.  That's the world, I mean, that's the real world.



LEO:  And something we don't do often enough, but I'm sure you do mentally, and I think our audience should do, is kind of rank the threats.



STEVE:  Yes, yes.



LEO:  Nothing's perfect.  But if you rank the threats - you say all the time, for instance, if somebody's got physical access to your machine, that's a very different issue.



STEVE:  Yes.



LEO:  And so it's less of a threat if it requires physical access because once somebody has physical access, kind of all bets are off.  So rank the threats.



STEVE:  So, for example, yes, all of the worms that we suffered early, in the early days of this podcast, those were from ports that were open.



LEO:  Right.



STEVE:  Windows had left ports open.



LEO:  That's a big threat.



STEVE:  And, yeah, that's a remote threat.  And bang, you know, takeover.  It's like, how many millions, tens of millions of machines?  Very different to have, finally, with XP Service Pack 2, and they enabled the firewall, I mean, overnight that just ended.  And it's like, okay, Microsoft, it sure did take a long time.



LEO:  I guess my point is it's better to use a password manager that's less of a threat than using the same password on every site, or an easily guessable password on every site.  That's more of a threat than this kind of somewhat less of a threat with the password recovery.



STEVE:  Yeah.  And it's just about understanding.  And that's what we're here to do with the podcast.  So I got some interesting tweets about Windows 10 and the question of it becoming a bit heavy-handed.  What's happened is there have been many reports of Windows 10 silently removing software, which people had previously installed, after this early November update, which apparently has been causing Microsoft lots of headaches of sort of still undisclosed nature.  And I heard you talking about it earlier, Leo, so I know you know something about what's going on with this, what is it, is it 1511, I think, is the number of the update.  But in this case, for example, some coverage said:



"Microsoft's first big mistake" - I'm sorry, "Microsoft's first big update" - boy, Freudian.  "Microsoft's first big update for its operating-system-as-a-service is deleting some user-installed apps without asking Windows owners for permission, according to dozens of complaints on message boards and forums.  The affected programs include hardware monitoring tools CPU-Z and Speccy, as well as the AMD Catalyst Control Center for tweaking your Radeon graphics cards.  In these instances, the programs apparently no longer functioned properly with the newest version of Windows 10, and Microsoft claims the apps were causing crashes and blue screens of death.  While this may help most people who don't want to deal with troubleshooting their system to figure out what is wrong with it, some PC power users are taking issue with Windows 10 removing software without asking."



One poster on Reddit sort of put it nicely.  He said:  "Microsoft should ask for permission, and not for forgiveness.  I would be fine with it if Windows 10 said, 'Hey, this application can cause problems, and we recommend that you uninstall it.  Do you want us to do that for you?' and then," as this guy wrote, "shuts its mouth about it if you say no.  But they shouldn't just uninstall it without prior warning."



And so my observation from 10,000 feet is that Windows is evolving into a different sort of beast.  It's evolving into a connected service, rather than what we have traditionally known as an [crosstalk].



LEO:  That's exactly right.  Even Microsoft has kind of said that; right?



STEVE:  Yeah.



LEO:  One Windows.  They've said this is - that's the kind of implication of things like "This is the last version of Windows."



STEVE:  Right.



LEO:  From now on it's just forever to be updated.  It's SAS.



STEVE:  Yeah.  And I think what we're probably going to see is this creating more pressure for diehard Windows users to give alternatives a look.  Maybe Linux will inherit a percentage of previous Windows users who just sort of finally say, you know, this isn't what I want.  And which is fine.  Microsoft doesn't want them either.  That's not who Windows 10 is for.  Windows 10 is for the majority of people who do, sort of more like the profile of the Chromebook user, who just wants it to work.  Doesn't want to have lots of problems.  Just please make it work.  But they need to use Windows apps, so Microsoft is sort of heading in that direction.



LEO:  Yeah.  Yeah, remember Microsoft - Windows is still primarily a business operating system.



STEVE:  Right.



LEO:  And I think they're trying to do - it is a communication issue.  He's right.  They should have asked.  Be a simple thing to pop up a dialogue saying, hey, we know that whatever it is, [ZCPOUID] doesn't - causes crashes.  We'd like to remove it.  I think it's a little easier to explain the AMD Catalyst Control Center because that's essentially the video driver, and so it's an out-of-date video driver.  I'm sure for years they've been taking those off.



STEVE:  So I saw something in digging around that said that Microsoft had deliberately muted its install.  And it's possible that this is a mistake.  I mean, we're seeing Microsoft making more mistakes with Windows 10.  You probably know from talking to Paul that they hugely cut back their testing side, so much so that developers are now having to test their own code, rather than there being a - I mean, and I know as a developer I can't test my own code.  It's why the GRC newsgroups are so fabulous for me is it's just not possible.



LEO:  Yeah, it's like an author proofreading his own copy, yeah.



STEVE:  Exactly, yeah.



LEO:  And I also think that this is also driven somewhat by mobile, that the expectations people have with their mobile phone is that all of this - this would be normal behavior probably on a mobile phone.  And so Microsoft saying, hey, well, this is how we do mobile operating systems.  Why shouldn't we do desktops this way?



STEVE:  Yeah.  And so, yeah, I think the nature is changing.  I'm going to surprise people with this next one.  This is a report of the Manhattan District Attorney's Office on smartphone encryption and public safety.  It's a 42-page report, although only half of it; the second half is all kind of addenda and references and things.  It's important enough that I created a bit.ly link for it.  And what's the first bit.ly link?  Because I remembered that I put an "a" on the end because I'd already used the first bit.ly link.  



LEO:  I don't see any...



STEVE:  What did I do?



LEO:  Maybe you made a mistake the first time.



STEVE:  What happens if you do...



LEO:  Without the "a."



STEVE:  ...a bit.ly, bit.ly/sn-535?



LEO:  Now, kids, don't try this at home because...



STEVE:  Yeah, something's going to come up.



LEO:  It says "Wyoming Oil & Gas Conservation Commission."



STEVE:  Oh, my god, I forgot.  Oh, my lord.  Yes, that's down for the Miscellany.  So [crosstalk].



LEO:  We will do this later today.



STEVE:  Yeah, don't anybody put that in.  Okay.  So, but if you add an "a," bit.ly/sn-535a, then you will get a PDF that I'm going to refer to.  And I would commend some listeners who are interested to take some time.  I'm just going to read through the foreword and one paragraph from the executive summary, to give you a sense for it.  But also, I mean, it's interesting.



"Foreword:  Most people today live their lives on smartphones; and, in this regard at least, criminals are no different.  While in the past criminals have kept evidence of their crimes in file cabinets, closets, and safes, today that evidence is more often found on smartphones.  Photos and videos of child sexual assault, text messages between sex traffickers and their customers, even a video of a murder victim being shot to death, these" - I know this is overly dramatic, but hold on - "these are just a few of the pieces of evidence found on smartphones and used to prosecute people committing horrific crimes."



And this is a little pointed, but still:  "Last fall, a decision by a single company" - we know where they're aiming - "changed the way those of us in law enforcement work to keep the public safe and bring justice to victims and their families.  In September 2014, Apple Inc. announced that its new operating system for smartphones and tablets would employ, by default, what is commonly referred to as 'full-disk encryption,' making data on its devices completely inaccessible without a passcode. Shortly thereafter, Google Inc. announced it would do the same.  Apple's and Google's decisions to enable full-disk encryption by default on smartphones means that law enforcement officials can no longer access evidence of crimes stored on smartphones, even though the officials have a search warrant issued by a neutral judge.



"Apple and Google are not responsible for keeping the public safe.  That's the job of law enforcement.  But the consequences of these companies' actions on the public safety are severe.  That is why my office has been working with our law enforcement partners around the world to craft the solution recommended in this report.  We believe there is a responsible way to balance safety and security."



And then I'm skipping down to Part V in the Executive Summary, which follows the Foreword, where they write:  "Part V?" - and this is the summary of Part V - "sets forth a proposed solution:  Congress should enact a statute that requires" - and listen to the wording carefully - "any designer of an operating system for a smartphone or tablet manufactured, leased, or sold in the U.S. to ensure that data on its devices is accessible pursuant to a search warrant.  Such a law would be well within Congress's Commerce Clause powers and does not require costly or difficult technological innovations."  And I agree.



LEO:  What?



STEVE:  Yes.  I think that's...



LEO:  Really.



STEVE:  ...the right solution, yes.  I think that's where we're probably going to go, and I think that's where we're going to end.  This does not mean a backdoor.  This means essentially that, under court order, Apple can be compelled to provide something or to unlock a phone that they are given, much as they have been able to prior to iOS8.



LEO:  It's a backdoor, but Apple has the keys.  Only Apple has the keys.



STEVE:  Well, and, yes, and that's the point.  That's why this proposal makes sense.  And they're not asking for data in flight.  They're not asking for on-the-fly decryption.  They're just saying, it is the case that phones are massively evidentiary.  And we live in a country, in the U.S. I'm talking about, of course, where if law enforcement gets a judge to agree, your home can be broken into.  You may not like it, but your home can be searched.  Your car can be searched.  I mean, that's the balance that has traditionally been struck and that we're all living with rather happily now.



The question has been how does technology confound this?  And the point here is this is not a key that the government has.  This is not any sort of a master key.  This would not be an algorithm where, if it got loose, suddenly all Apple iPhones and iOS devices would then be subject to break-in.  Apple could do it right.  And what "doing it right" means is Apple has an ongoing relationship with all the devices that are tethered to them.  It would mean a high-quality random key stored in that secure element which would be unique and unchangeable in every phone, which Apple would secure at their end, and which under subpoena from law enforcement would enable the phone to be unlocked.  And to me, the remaining issue is that does this create a slippery slope.  Is there, like, oh, well, if we can have that, what more can we get?



LEO:  Well, you know, I was thinking that because really a lot of criminals meet in private in homes and apartments, exchange child pornography, plan terrorist attacks.  I think apartment buildings should be required to put a microphone in every apartment, and then that way with federal law enforcement subpoena or warrant, could turn those microphones on.  I think that's another good idea.  The problem is, I think law enforcement - look.  I understand.  We would like to catch criminals and bad guys.  But I think law enforcement overreaches a little bit.  And this sounds like an overreach.  I can't agree with you, Steve.  This is an overreach.



STEVE:  Okay.



LEO:  I mean, really?



STEVE:  Yeah.



LEO:  Okay.  I mean, you're right, this is not saying - it's not a key escrow.  It's not, you know, it is with warrant.  It's no different than it was a few years back.



STEVE:  Correct.



LEO:  I didn't encrypt my Google phones usually, but now of course all my Google phones since Android 5.0 and all my iPhones are encrypted.  I didn't do it.  They just do it automatically for me.  It's an interesting question.



STEVE:  Yeah.  I think it's going to happen.  And if it does, I could live with it.  I think that's my point is I don't think there's an argument, a sound argument on - and I should say, Leo, I also get your point.  I mean, completely.  And so there will no doubt be an interesting debate.  But there are huge technological arguments that we have discussed that make this probably impossible for data in transit.  And that's not what's being asked for here.  This is...



LEO:  Yeah.  You know, one of the reasons I think Google started doing this and Apple started doing this is not because of the U.S. government, but because of countries like China, which by the way could say exactly this paragraph, except replace the words "manufactured, leased, or sold in the U.S." with "manufactured, leased, or sold in China."



STEVE:  Yeah.



LEO:  And what Google doesn't want to do, remember Yahoo! was forced to turn over emails from a Chinese dissident who was then prosecuted and executed.



STEVE:  Yeah.



LEO:  I think Google and Apple both saw the writing on the wall, and it wasn't the U.S. government they were worried about.



STEVE:  They don't want the responsibility.



LEO:  They don't want to be put in the position where a government of any kind, U.S. or Chinese, could come to them and say, "You've got to reveal this information."  So that's why they really don't want this.  And as soon as this happens, of course, it's not just going to be the U.S. government.  It's going to be every other government in the world.



STEVE:  Yeah.



LEO:  And so I don't think Apple did this particularly to protect our privacy.  I think they wanted to get out of the fray.



STEVE:  Well, and you can imagine, you know, we covered the stories of the three-month backlog that they had in the iOS7 era where essentially they were having to brute-force their own customers' phones because brute-forcing was possible.  And so law enforcement would get a subpoena...



LEO:  They hated it, yeah.



STEVE:  ...would hand them the phone and say, you know, we need this as soon as possible.  And Apple was like, ah, well, we've got about a 90-day backlog at the moment, which upset law enforcement.  And so you can imagine Apple just saying, you know, let's just fix this.  And let's sell privacy.  And we know that Tim's been selling privacy.  It's been a benefit.  But...



LEO:  Is it unreasonable to say to law enforcement, well, you also had other means than looking at somebody's smartphone of finding and prosecuting criminals.  You didn't always, you know, and it wasn't necessarily because you could see into their data.  Is it not unreasonable to say there are plenty of other police methods, I mean, torture works, too, but - or maybe it doesn't.  There's some debate over that.  But assuming that torture works doesn't mean you should use it.



STEVE:  Yeah.  I mean, I'm with you completely.  But I also am watching what's going on.  I'm sure you've heard McCain announcing that there will be hearings.  And it's like, oh, okay, here we go.



LEO:  No, I think you might be right.  I think it's going to happen.



STEVE:  I don't know how this issue gets resolved.



LEO:  Yeah.  Well, I know how I would like it to get resolved, which is stay out of my stuff.  And if that, you know, I think there's very clear evidence that law enforcement would love to implement mass surveillance.  Oh, wait a minute, they already did.  So let's not make this any easier for them than it is.



STEVE:  Yup.



LEO:  But I understand, on the other hand, being a good liberal, I'm listening to your point of view, and I understand what you're saying.  I think you're absolutely right.  It's a very tough question.



STEVE:  I guess to me, and I'm not a legal scholar nor a constitutional scholar.  But this feels proportional.  It feels like this is like what we have with existing subpoenas and court orders, where a neutral judge weighs the evidence and says, okay, yeah, there's reasonable reason to believe and that law, I mean, we want law enforcement to be effective.  We'd like bad guys to get caught.  And frankly, I mean, and the argument that I don't have anything on my phone, well, we know that's not the argument.  It's should the phone have content which is protected, absolutely inaccessible.



LEO:  Well, to make a point in your favor, with a warrant, law enforcement could come into your home, search your file cabinets, search all your possessions.  As long as there's a warrant, they have a right to do that.  And I think you probably - I would submit that there's much more private stuff in your home than there is on your smartphone.



STEVE:  Yeah.



LEO:  So why should the smartphone have some sort of special protection that your home does not?  So that's the argument on the other side.



STEVE:  So this document also had a couple of little tasty tidbits that I knew that our listeners would find interesting, I mean, just as fact.  Under "The Difficulty of Getting Passcodes from Defendants," there was some interesting new information, to me.  They wrote:  "Case law holds almost universally that a defendant cannot be compelled by, e.g., a grand jury subpoena or order of the court to provide the government with her or his passcode" - of course we've talked about this often - "because such compulsion would violate the defendant's Fifth Amendment right against self-incrimination.  There are two potential exceptions to this rule," which is what I found interesting and wanted to share.



"First, it is an open question whether, instead of being compelled to provide the government with a passcode, the defendant might be compelled to unlock her or his phone using the passcode.  There have been no cases considering this precise question; and, although a court might conclude that it is no different from the situation in which a defendant is compelled to provide the government with the passcode, it might also determine that the situations are somewhat different," meaning don't tell us your secret, but here's your phone.  You must use that secret, which you're allowed to keep secret, in order to give us access, in order to unlock the phone.  So the point was that's an open and different question.



And then, secondly, "If the existence of evidence on the phone is a foregone conclusion, then the defendant may have no Fifth Amendment privilege with respect to the contents of the phone, and thus may be compelled to provide the government with the passcode.  It would be difficult in most circumstances, however, for the government to establish with the requisite degree of certainty the existence of evidence in a phone that would clear the 'foregone conclusion' hurdle."  But anyway, from a legal standpoint, this is the kind of stuff that Denise knows cold.  But what this says is Fifth Amendment privilege only extends where there's suspicion but essentially not proof, but the idea being they would be able to demonstrate what is in the phone, and then that would not allow the person to claim Fifth Amendment privilege.



LEO:  I don't think that's anything new.  I think that's consistent.



STEVE:  Right, right.



LEO:  Yeah, that's consistent with prior law.



STEVE:  And then they just finish:  "In any event, even if the government could lawfully compel a defendant to disclose her or his passcode" - meaning even if those other things applied - "or to open her or his phone using the passcode, there is substantial likelihood that any defendant who faces potentially serious criminal charges would simply refuse to comply with the subpoena or order, and go into contempt."  So anyway...



LEO:  So if let's say Google and Apple decide, you know, lawmakers pass a law, and Google and Apple comply and turn off the full-disk encryption, or make it optional, is there...



STEVE:  Oh, no, no, not that.  Neither of those.  It would be...



LEO:  A backdoor.



STEVE:  Well...



LEO:  Well, their backdoor.



STEVE:  That's a loaded term.  Have the ability...



LEO:  To decrypt; right.



STEVE:  ...under court order, on a phone-by-phone basis, that they are able to unlock it.  That's what this asks for.



LEO:  But, okay.  So TrueCrypt does full-disk encryption.



STEVE:  Yup.



LEO:  Maybe because of the nature of the mobile platform, you can't go out and get a third-party full-disk encryption utility on your smartphone.



STEVE:  Right, right.  Now, for example, somebody...



LEO:  But what about - wouldn't government want to ban TrueCrypt at the same time?  Otherwise the same problems.



STEVE:  Somebody using Threema, for example.  Threema has in your phone a log of your dialogue.  Yet it is stored encrypted.



LEO:  Right.



STEVE:  So if you were using Threema, then Apple unlocking your phone would give nobody visibility into Threema because its security is absolute.  So there.



LEO:  Well, that kind of is my point, which is...



STEVE:  Right.



LEO:  Who's this going to catch?



STEVE:  Right, yeah.  This is going to - this turns back the clock a couple years to the way we were before, where...



LEO:  But the good news is terrorists can still use encrypted communications, so we're okay.



STEVE:  Wait, now, say that again?  The good news is...



LEO:  Terrorists and pederasts...



STEVE:  ...terrorists can still use...



LEO:  ...can still use encryption.  So we're okay.



STEVE:  No.  The good news is Mom and I can discuss...



LEO:  Yeah, you don't get any privacy.



STEVE:  ...cooking for Thanksgiving, and nobody can see it.



LEO:  No, no.  You get no privacy.  It's the bad guys who will have the incentive...



STEVE:  I've got Mom up on Threema.



LEO:  You've got Mom using Threema?  Wow.



STEVE:  So the NSA does not know what Mom's cranberry sauce recipe is because that is secret.



LEO:  Definitely there's now a flag on you and Mom in the NSA headquarters, I might add.  And by the way, what's next?  You've got to ban TrueCrypt; right?  You've got to ban...



STEVE:  Well, you know, this is why I backed away from CryptoLink, my own nascent VPN, was that I was worried that what's coming is no one can offer encryption without providing a backdoor.  So, but my point is...



LEO:  Yeah.  See, that's the slippery slope is that once you accept...



STEVE:  That's the slippery slope part.



LEO:  Once you accept the premise that government needs to be able to search anything, and encryption confounds that, then, oh, well, the nice thing is it's easy to do on a smartphone.  You just tell Apple and Google, keep a key, would you?  But then you've accepted the premise.



STEVE:  Yes.



LEO:  So now, well, if nobody has the right to encryption that's invulnerable to a search warrant, then we've got to ban all these other things.  Or maybe get them to put a backdoor on it.



STEVE:  Like I said, Leo, I just love...



LEO:  Bye-bye, BitLocker.



STEVE:  I love this era that we're in.  It is so full of interesting balancing questions.  And, I mean, really good ones because, again, we would like law enforcement to have the information it needs, but not at the cost of sacrificing global privacy.



LEO:  Right.



STEVE:  And so my point is this particular niche doesn't sacrifice global privacy.  This comports with the way the U.S. Constitution provides search in the instance of reasonable suspicion.  And so to me, I don't know how you resist this.  But I certainly acknowledge the slippery slope problem [crosstalk].



LEO:  Yeah, because you really haven't solved anything just by the cell phone thing.  You've got to really go farther if you want to stop these child molesters.



STEVE:  Yeah.



LEO:  Yeah, it's just so - it's so difficult.



STEVE:  Okay.  It is.  Interesting.  So I just wanted to mention that a bunch of my followers have been tweeting that they're in receipt of Let's Encrypt beta invitations.  So as 2015 nears the end, Let's Encrypt is kind of incrementally and carefully rolling its service out, making it available to sites.  I think this is exactly the way you do something like this is you get some experience, you fold that back, and you deal with any problems before you turn the whole world loose on it because I think it's going to be quite popular.



So miscellaneous goodies.  I did want to mention that, while it seemed like last week our discussion of the whole crypto controversy, where we've been spending a lot of time, might have been a rehash.  Many people got a lot from it.  I think in some ways we took it further than we had, used some different analogies than we had.  And it ended up being really useful.  And one favorite tweet that several people sent me, I don't know that Ben Hughes was its originator, but it's such a perfect gotcha that I had to share it with everybody.  So he tweeted:  "If banning encryption would stop terrorists from using it, why don't they just make terrorism illegal and be done with it?"



LEO:  There you go.



STEVE:  Which I thought, ooh, boy, that's perfect.



LEO:  That's the variation of, if they outlaw guns, only outlaws will have guns.



STEVE:  Yeah, precisely, yeah.  Exactly.  Also, look at that screenshot on the next page, Leo.



LEO:  Okay.



STEVE:  I wanted to let people know, I just wanted to close...



LEO:  Showoff.



STEVE:  ...close the loop here.  I've been, and our listeners and viewers know, we've had zero problems.  We're back to, like, fabulous connections.  The initial switchover from my pair of T1s was causing some trouble due to my LAN issues, as I was recabling and changing switches and things.  Then a friend of mine in Atlanta with Cox sent me a beautiful Netgear CM600, which is the now available, recently certified by Cox - he was just waiting for Cox to certify it - 24 downstream channels and 8 upstream channels.  So I am now on multiple different bandwidth meters getting 341Mb down and 33Mb up.  For, let's see, that's - when I had the two T1s, they were bonded, so I was getting 3.54Mb.  In other words...



LEO:  Symmetric.



STEVE:  ...one one-hundredth of what I'm getting now.



LEO:  Probably for a lot more money, even; right?



STEVE:  Yes.  And I was paying something like 460 a month.  This is something like $70.  And, I mean, I'm not even sure of that.  It might be less.



LEO:  Now, which speed test did you use for this?



STEVE:  This one is Speedtest.net.



LEO:  Yeah.  I'd be careful because...



STEVE:  I know.  I used DSL and a couple others.  And they were all comparable.



LEO:  There's some evidence that ISPs note which one you're using and tune their performance suitably.



STEVE:  Well, yes.  It's absolutely the case that they know what IP I'm going to, and they could unthrottle my connection [crosstalk].



LEO:  Turn him up real quick.



STEVE:  Yup.  However, I have to say, last night when I downloaded the first episode of the new Syfy "Expanse" series that we'll be talking about in a minute, it came down very nicely.  Oh, and I finally found a good use for my iPad Pro.  But anyway, we'll get to that in a second.



LEO:  Oh, you're not giving it back, huh?



STEVE:  Unh-unh.  Actually, the darn Pencil hasn't shipped yet, and so I can't...



LEO:  You've got to wait for that.  You've got to wait for that.



STEVE:  Yeah.  I have to have that experience.  But I also wanted a quick Auralux follow-up.  It's very clear from many of the tweets - agonizing, in some cases, tweets - that overall productivity among a significant subset of our listeners has...



LEO:  Damn you, Gibson.



STEVE:  ...significantly collapsed this past week as a consequence of Auralux.  And I'm just - everybody is thankful, not only for Thanksgiving, but they're thankful that there's a four-day weekend coming up, so they may be able to make some progress on Auralux.  So it's been a huge...



LEO:  I made it my pick for the app cap for iOS Today.  I just - it's so much fun, and it's so challenging.  This is hard.



STEVE:  Now, remember when you were saying, oh, it's so slow?  And I was thinking, oh, Leo, just wait.  I'm like, I'm going bing bing bing bing bing bing bing.  I'm like, you know, marshaling forces and sending them and, yeah, I mean, it really is.  And there are some, I mean, there's one I'm still scratching my head on.  So, yeah.



LEO:  Yeah, yeah.  This is normal.  They call this one a "normal" one.  There's some of them are really hard when you get into the hard ones.  They're like, hey, they get to, wait a minute, they get to start with four planets, and you got one? What the what?



STEVE:  And the other thing, you notice where like they set up sort of a streaming effect where the last guy sends it to the next guy, who sends it to the next guy, and it builds up this current.  I mean, anyway, it's just wonderfully...



LEO:  It's fun, yeah.  It's hard, though.



STEVE:  Yeah.  And so for anyone who missed last week's podcast, available on iOS platform and on Android, Auralux, A-U-R-A-L-U-X.  It's a goodie.



LEO:  I'm trying to get - if I get this center star to build up, I might have a shot.  I want to get the orange and the green.



STEVE:  Yeah, but unfortunately, you've got to get your little blue guys in, in order to...



LEO:  I know.  Look it, I just lost this planet, I know.  And now they're going to invade me.



STEVE:  Oh, I hate that.



LEO:  I want to play against real humans, though.  They need to add an online version of this because the AI, like the AI should, when one of the - when, like, Orange gets the center planet, Green should try to get him out of there.  Instead, he's still attacking me.  It's like, come on, pay attention.  Don't bother with me.



STEVE:  Yeah.  Going for each other.



LEO:  Oh, I just lost the whole game.  There it goes.  It's over.



STEVE:  I know.  It really is frustrating.



LEO:  It's over, man, it's over.



STEVE:  Okay.  So yesterday Syfy channel, and I spelled it wrong here, S-Y-F-Y, unfortunately, released a tease for the December, I think it's December 10th the series officially starts.  And this is the "Expanse" series.  We knew it was coming, oh, about nine months ago, I guess, because I read the whole series because the books are always better.  And so I read them in advance of seeing the movie, just so that I would know.  It's available on Apple TV, iTunes, the Google Play Store, and Comcast on Demand, and probably other places.  I looked for it on Fire TV, but I didn't see it there.



So this is the first episode, 44 minutes, blessedly commercial free.  And you can see where the commercial breaks are.  And I don't know.  The very first opening vignette, and you know I'm not going to give any spoilers, was extremely awkward and unclear.  Whereas, of course, I know exactly what happened because I read the book.  But nobody watching the first beginning of the first episode would have any idea what that was.  So I'm worried that the book, which was rich with narrative, may not translate very well.  But we do have a new sci-fi series starting officially in early December.  And you can see the first episode now.  So I wanted to make sure that our sci-fi avid listeners knew.  And I know that we've got a bunch of them.  Okay.  Back to that bit.ly/sn-535.



LEO:  I kept it around just in case you were going back to that one.



STEVE:  This week's difficult-to-beat "You're Doing It Wrong."  Everybody, bit.ly/sn-535, all lowercase.  This is from the Wyoming Oil & Gas Conservation Commission.  And in little tiny fine print in the bottom it says "This page requires a pass word" - and those are two separate words - "which allows the user to locate wells for filing of Sundries Form 4.  Please call if you have any questions or problems."



Now, unfortunately, the page which has this fill-in for your password explains that you should be very careful not to use any special characters, and it gives them all to you, because the SQL server which they have interpreting what you send will pick that up and treat them as SQL commands.  So it's like, okay, you know, wow.



LEO:  My password is Little Johnny Drop Tables.



STEVE:  Little old Johnny Drop Tables, yup.  Now...



LEO:  They even tell you ahead of time, hey, just so you know, try not to use any SQL commands in your password.  Just, you know...



STEVE:  They're using a GET query rather than a POST.  I saw somebody who actually did put something in there, say that what they put in was in the URL.  So once again, you know - and someone commented, it's like IT set it up for the office secretary to use. 



LEO:  Yeah.  Just make the monkey123 and be done with it, come on.



STEVE:  Wow.  Yeah.



LEO:  It's written in ColdFusion, if that tells you anything.



STEVE:  Wow.



LEO:  Wow.



STEVE:  Now, I tweet the show note link every week, and I get people asking me for the show note link.  I also tweet things that I think will be interesting, like last night I tweeted that the first episode of "Expanse," of the "Expanse" series was available.  And of course I don't tweet a lot, I'm not a high-volume tweeter.  Many people are still not on the Twitter.  I get it.  I understand.  But I wanted to make sure that people knew that it would be possible to, for example, follow me or any other people, low-volume tweeters, with SMS.  That still works and exists.  And the other problem is people who are on Twitter sometimes follow 3,000 people, so my very occasional tweets are just going to be lost in the noise.  You'll never see them.  They'll scroll right off into oblivion.  So in the U.S., all the carriers use 40404.



And so, for example, if you were to tweet the string "follow sggrc" to the recipient 40404, that's telling Twitter that, when I tweet something, which I rarely do, but that you don't want to miss, you'll receive it as a text message.  So I just wanted to make sure people knew there was, for whatever reason, people not using Twitter who are sending me email, actually, I don't see tweets from them because they're not on Twitter, but email saying, hey, where's the link for last week's show notes?  Well, you know, I always tweet it.  So people can follow me, if they care, just using SMS, which is something some people forget.  You don't have to even have a Twitter subscription.



Now, errata.  It turns out that I completely - and when the moment - I'm interrupting myself.  But the moment I saw this it's like, oh, my lord.  It's like seeing a typo where you say your and you meant Y-O-U-'-R-E, but you write your, Y-O-U-R.



LEO:  Oh, I hate doing that, yeah.  Because people might think you didn't know better.



STEVE:  You know better.  You know the difference.  But that's the way it came out.  So anyway, I appreciated finding this in the mailbag from someone who I guess his name is Haykan, although he's got some unicode craziness in his name.  He is in Sweden.  He says:  "Hi.  Regarding wildcard certificates, I think you mixed things up a bit."  Oh, boy, did I.  "Wildcard certificates do not require SNI.  SNI only matters if the server wants to use multiple certificates on the same IP.  There's no problem with just multiple names supported by the same certificate on a single IP.  You can use a single wildcard certificate, supporting all the subdomains you like, with no need for SNI."



Now, to wind the clock back two weeks, that was me mis-answering a question from someone whose hosting provider was saying, oh, you've been a loyal customer, thank you for renewing.  We're going to give you secure access to your website.  And they were doing it, I was sure, by having a cert that was *.alshostingservice.com.  And then I got all mixed up, saying that that required Server Name Identification, which is SNI.  It doesn't.  So thank you very much for the correction, and I wanted to make sure I corrected the record because, for example, GRC has three different domains which are covered, but I use an EV certificate that does not allow wildcards.  And if I had a "*." certificate, then that doesn't need SNI.  So I explained the SNI thing correctly last week about the need to select the certificate on the fly, except I mashed it together with the wildcard cert, which does not need server name identification because it's the same cert is being matched with the pattern of all, thus the asterisk.  And finally...



LEO:  [Crosstalk] the short code thing, I don't know if this would happen to everybody.  But turning on your short codes on Twitter now means that everybody else, I'm getting everybody else's texts, as well.  So...



STEVE:  Turning on...



LEO:  So as soon as I said I should follow SGgrc, I'm now getting Don Lemon from CNN and Jason - in other words, my text messages are filling up.  So I think what you're - you might be turning on in general.



STEVE:  Oh.  Is the setting in your Twitter account for "enable mobile." 



LEO:  Yeah.  And if you have a mobile number registered with them, it'll say, oh, I know this number.  Let me send you everything.



STEVE:  Ah.  Got it.



LEO:  And that's not what you want.  So you might have to go into your settings and modify [crosstalk].



STEVE:  Sorry about that.



LEO:  You know, that's - I just wanted to clarify that because some people are going to have that happen.



STEVE:  Yeah, good, good.  Keegan R. Griffiths in Australia, I found this in the mailbag, on the 20th of November said:  "Hello, Steve.  I've been watching/listening to SN for about six months now and absolutely love it.  I have a question about SpinRite.  In recent podcasts, some SpinRite stories have mentioned running it on SSDs, and I'd like to ask if and how SpinRite can repair issues on SSDs as it was developed for mechanical drives that are quite different to their solid-state counterparts.  Keep up the great work.  I hope Leo and yourself continue this wonderful service for many years to come."



So I have covered this in the past.  But Keegan, and anyone who's joined more recently, I'll just explain that it is true that SpinRite, obviously, was developed in the pre-SSD era.  But what has come to light in recent increased SSD use and density and popularity and reduction in prices that's made them affordable, is the solid-state drive manufacturers have unfortunately played the same game that the hard drive manufacturers have played.  And that is, they've allowed the pressure to increase densities and lower costs to push their technology, different as it is, into sort of a gray zone where they're relying on math in order to, where necessary, resolve ambiguity in the data that's recorded.



And the point is that density is so high that they can't always get back the ones and zero bits exactly the way they wrote them.  They can get them mostly back the way they wrote them, and then they rely on error correction to correct those that were a little too fuzzy and that read back as the wrong bit, or the bit set the wrong way.  So much as we would like to believe that SSDs are like RAM, like they're solid-state, and they're not prone, unfortunately that's not the case.



And in fact we just saw some coverage of them adding more bits to the cell.  For example, the SSDs I managed to purchase were single-level cell SSDs a few years ago.  I don't even think you can get those anymore because the idea being the single-bit cell would only store a one or a zero, that is, a voltage, a charge of either fully charged or fully discharged.  But that meant that cell only had two states, one or zero.



Then someone said, hey.  If we store either no charge, a third of a charge, two thirds of a charge, or a full charge, that's four states, or two bits.  And so we can double the density of the SSD, like for free.  Unfortunately, of course, it wasn't quite for free because now your charge discriminator has to be much more accurate, and you're going to tend to be more in the gray zone.  And but what we again recently heard was they'd gone to three bits, meaning eight different levels of charge.  And again, more reliance on correction.



So it turns out that, by happy coincidence, all of the technology that I developed for doing really deep hard drive recovery exactly maps onto the same technology - actually, almost.  Because I do some seeks back and forth in order to get the heads repositioned in a different location every time I do a read.  That's obviously not going to help us with an SSD, and that'll be one of the things that 6.1 eliminates when it sees that it's on an SSD because it'll be explicitly SSD aware.  So SpinRite will get better with SSDs, but already is able to recover because it turns out there's enough similarity in the way they both store data that SpinRite is able to recover from either.



LEO:  Nice.  It's a happy accident.  I have your PDF with all the questions.  Let me open it, and we will get underway.  Questions.  Starting with Justin in, now, I never know how to pronounce it [Oh-lay-tha].  Is it Olathe, Kansas?  Is that correct?



STEVE:  You know, I was glad you were going to have to because I thought, you know, I messed up Guinness or Guineas or whatever it was I did last week.



LEO:  Guineas [crosstalk], Guineas Book of World Records, yeah.



STEVE:  Yeah.



LEO:  I think it's Olathe.  Chatroom?  It's Olathe; right?  Anyway, he says:  I received an automated email - this is interesting - from - let me close out the slideshow mode.  Thank you, I don't want to see a slide show.  I received automated email from Amazon saying, as part of routine monitoring which they perform on email addresses and passwords included in lists of non-Amazon related breaches and hacks - wow - they found the email associated with my Amazon account and preemptively reset my password.  Whoa.



This is the first time I've ever encountered a site that proactively scanned the lists.  Maybe they were using Troy Hunt's HaveIBeenPwned.com, he posits, or a similar list Amazon maintains.  Are you aware, is this a common practice among companies with large web presences like the Amazons of the world?  I can't wait for SQRL to be widely available and hopefully provide a robust solution to these continual password woes.  I might add to that, by the way, Amazon turned on two-factor authentication just recently.



STEVE:  Yes, or made available two-factor authentication.



LEO:  Right.  They didn't turn it on.  You have to turn it on.  But it's now available, which is good news.



STEVE:  So Justin's note was nice enough to enclose the email from Amazon, which says:  "This is an important message from Amazon.com.  At Amazon, we take your security and privacy very seriously.  As part of routine monitoring, we discovered a list of email address and password sets posted online.  While the list was not Amazon-related, we know that many customers reuse their passwords on several websites.  We believe your email address and password set was on that list.  So we have taken the precaution of resetting your Amazon.com password.  We apologize for any inconvenience this has caused, but felt that it was necessary to help protect you and your Amazon account.  To regain access to your Amazon customer account:  1.  Go to Amazon.com."  And I love that they didn't say "click this link."



LEO:  Good.



STEVE:  They said "Go to Amazon.com and click the 'Your Account' link at the top of our website.  Click the link that says 'Forgot your password?'  Follow the instructions to set a new password for your account.  Please choose a new password, and do not use the same password you used with us previously."



LEO:  Reasonable, yeah.



STEVE:  Otherwise you're going to get another email from us tomorrow.



LEO:  I hope so, yeah.



STEVE:  "We also highly recommend that you choose a password that you are not using on any other sites.  We look forward to seeing you again soon."  Hopefully the person doesn't disappear forever now.  "Sincerely, Amazon.com."  So, first of all, very impressive.  I mean, this being proactive like this is...



LEO:  Yeah.



STEVE:  You know, I echo your reaction upon learning of this, Leo.



LEO:  Yeah, good job, Amazon.  



STEVE:  It's like, wow.  And very nice that they didn't say "click this link."  The danger is that, if this practice became widespread, then it's a perfect way for phishers, P-H-I-S-H-E-R, phishers, to send phishing mail where they would make a slight change and say "Click this link to go to Amazon.com," and then of course send you to Amazone.com or some slight variation and hope that you don't notice the difference and then tell you to enter, log on with your old credentials so you can change it to your new ones, and of course that would allow them access.  So anyway, very, very impressive.  And I just loved how proactive they were.



LEO:  This comes to us from Marco Silva in Funchal, Madeira Islands, Portugal.  I'd like to go there soon.  He needs some browser configuration help.  He says:  Hi, Steve and Leo.  In Episode 531 you re-mentioned the issue on the weak Diffie-Hellman export-grade crypto because the guys who found this issue also noticed that most servers are only using the same common 1024-bit prime.



In your show notes, you have a link to an EFF article called "How to Protect Yourself from NSA Attacks on 1024-bit DH."  In that article, they present some practical tips to protect yourselves.  However, in the web browser section, they also show us how to remove the Diffie-Hellman crypto from various browsers.  But they say, "It's important to note there is a trade-off here:  Removing your client's support for DHE ciphers will eliminate the risk of this attack, but it may also remove Forward Secrecy support altogether for some sites."  Ooh.



So what I would like to ask you is what should we do?  Remove the DHE cipher, or leave it there in order to maintain Forward Secrecy support?  I've been listening almost since the beginning and love the show.  I hope Leo is able to come - oh, thank you, I will, I'll be right there - come to the Madeira Islands some time in the future. It's a very beautiful place, and I'm sure he'd love it here.  He will also like our Madeira wine.  I do love Madeira.  It was used to celebrate the independence of the United States.  I think Steve will like it here, too.  Madeira is...



STEVE:  And I'm never going to go.



LEO:  What?  Why not?



STEVE:  Well, because I like it right here.



LEO:  Are you not a traveler?  You don't like to travel?



STEVE:  I've got great wine.  No, I'm not a traveler.  In fact, we've been trying to see whether there's any way to get me up for The New Screen Savers, and...



LEO:  You don't even want to come to Petaluma, let alone Madeira.



STEVE:  Well, the problem is really, as they say, there's no way to get there from here.  The problem is on the weekend I keep hearing every one of your guests talking about the traffic.



LEO:  Oh, yeah, traffic's terrible, yeah.



STEVE:  But the good news is, in talking to, oh, shoot, Tanya, she believed that you guys could get me into the local airport.



LEO:  Yeah, easily.



STEVE:  It turns out, well, that's only from LAX.  But at the end of March the Orange County airport will start a direct flight to the airport that you have up there.  And then you're just not going to be able to get rid of me, Leo.  I'm going to just be underfoot.



LEO:  That would be a good way to come, actually, yeah.  We take those planes.  There are not very many a day, so you have to arrange your schedule a little bit.



STEVE:  I only need one.



LEO:  Yeah, one's enough.



STEVE:  Yeah.



LEO:  And we'll send a helicopter down for you some time.



STEVE:  So, okay.  So Marco, what he's saying is that, as has been in the press, as we've talked a couple weeks ago, there were - remember we discussed this originally months ago.  Then it kind of came back around because the original problem was the weakening of Diffie-Hellman, what was revealed was that, due to the past export limits, which shortened the maximum allowable number of bits on public key crypto to 512, there were still servers that supported 512 Diffie-Hellman.



And so what was done was that, quickly, servers were told, just stop doing that.  Turn that off.  And you can go to SSL Labs, GRC, and there are test pages that will show you GRC.  I turned those off a long time ago.  But then what came back was that, while the 1024-bit version doesn't have the brute-force ability problem, it has a different problem, which is it's a pre-computation problem where, because everyone used - because technically you can reuse the same, one of the same primes in Diffie-Hellman.  It's still not a good idea.  But it turns out most of the Internet uses the same one.  So the idea then is disable this Diffie-Hellman cipher.



Well, now, this is confusing, and this is what kind of caught Marco because there are two flavors of Diffie-Hellman.  There's DHE, which is Diffie-Hellman Ephemeral, and it's the ephemeralness that we want.  That's the Forward Secrecy part, where if in the future the server's private key became known, it would not be possible to go back and decrypt everything that that server had exchanged during the lifetime of that key.  Which is the way it is now, if you do not use an ephemeral cipher.  So the trick is that the elliptic curve ciphers are secure, but they're not as widely supported.  They've come along more recently.



So this note that was made about if you disable DHE ciphers in your browser, remember that the browser, the client and the server negotiate the cipher suites that they have in common.  And these are cipher suites that we're discussing.  If you disabled the DHE that is almost certainly available, then your browser and the remote server might end up not negotiating the elliptic curve Diffie-Hellman ephemeral cipher, which is increasingly available, but you have less guarantee.  And so then they fall back to a non-Diffie-Hellman key agreement protocol, which wasn't offering the perfect forward secrecy that the ephemeral Diffie-Hellman does.



So, he says, what should I do?  I would say do nothing.  This is going to be solved for us by the browsers.  There's already conversation in the industry about retiring the DH, the non-elliptic curve Diffie-Hellman, just removing it from the browsers.  What will happen is the metrics will be put in place.  Notice will be given, very much like the SHA-1 issue.  Servers will be told, you really want to start supporting elliptic curve.  We'll make sure that it's available, so there's no reason why servers won't be able to support it.  And then we'll just say, you know, Diffie-Hellman non-elliptic curve, your day is past, thanks very much.  So I think that's what's going to happen.  I don't think users really ought to mess with this.  Browsers will take care of it.  And we know how preemptive browsers are being about the security of their users.



LEO:  Thank goodness, yeah.



STEVE:  So I think you need to do nothing.  And that wraps our podcast.  We will pick this up next week.



LEO:  I see the clock on the wall says 4:00 p.m. Pacific time.  Which means that the witching hour has arrived.



STEVE:  And we've given our listeners an hour and 57 minutes, which I'm told is several commutes' worth for most of them.  So that ought to tide them over till next week.



LEO:  I don't know, this family's got to go back to Sonora.  Can we do three or four more hours?  It'd just really be helpful for them.



STEVE:  I'll just go make some more coffee.



LEO:  Steve's at GRC.com, the Gibson Research Corporation.  That's where you'll find all the stuff he does.  Of course SpinRite, the world's best hard drive maintenance and recovery utility, but also the Perfect Paper Passwords, SQRL, Password Haystacks, all the free stuff he does, ShieldsUP!.  People still use that, right?  It's still really a great way...



STEVE:  No, it's cranking away.  We're approaching 100 million users.



LEO:  That is amazing.  That is amazing.  He also puts the podcast there, so you can get audio, 16Kb, if you want, and 64Kb, as well, and full transcriptions.  Elaine Farris writes those nice transcriptions for us.  That's all at GRC.com.  We also have the show, audio and video, as well, at TWiT.tv/sn.  It's also on YouTube, YouTube.com/securitynow.  It's also on every podcast application in the world.  And even now, on Apple TV, there are four Apple TV apps for TWiT, and all of them have Security Now!.  So there's lots of ways to watch.



If you want to watch live, we're here about 1:30 in the afternoon every Tuesday, that's 4:30 Eastern, 21:30 UTC, so you can watch live, or you can do like this good-looking family has done and just pop in, and we'll entertain you.  I think we put the six year old to sleep, but the rest of them have been wide-eyed for the whole thing.



VISITOR:  They slept in the car on the way.



LEO:  Yeah.  They're going to sleep from now on.  Just email tickets@twit.tv.  We'll make sure there's room for you.  Let's see.  I guess that wraps up.  Have a great Thanksgiving.  You going to stay home?



STEVE:  I'm going to stay here.  I go out, we have a great restaurant we go to.  A group of my friends and some local neighbors get together, and we all go down.  And then I'll be up for Christmas.  But staying down here.



LEO:  Good.  Well, have a great...



STEVE:  And I should mention, I referred briefly about some work on SQRL.  In the last week we hammered out a local application authentication solution, which we are not going to implement, just for the sake of time.  It's time to ship this puppy.  But I wanted to go through the logic of it and nail it down so that it was known that it could do that.  So it can be used to authenticate, not only to remote servers, but local applications will be able to use it with absolute full security.



So, for example, you could use SQRL to log into LastPass, as an example, instead of using a username and password, even though it's a local app.  So we figured out how to do that with a tiny little extension to the protocol, which it turned out very elegantly.  But we're going to save that for Version 1.1 or whatever and get SQRL finished.



LEO:  Yay.  Looking forward to seeing it.  Thanks, Steve.  Thanks, everybody.  We'll see you next time.



STEVE:  Thanks, Leo.



Copyright (c) 2015 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#536

DATE:		December 1, 2015

TITLE:		Listener Feedback #224

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-536.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We've got, of course, security news.  We'll get you up to date on all of that.  And then we're going to answer questions from our audience, some really great ones, and of course Steve's great answers, coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 536, recorded Tuesday, December 1st, 2015:  Your questions, Steve's answers, #224.



It's time for Security Now!, the show that protects you and your loved ones online with this man here.  He is the Explainer in Chief, Mr. Steven "Tiberius" Gibson, from his Fortress of Solitude in beautiful Irvine, California.  Hello, Steve.



STEVE GIBSON:  Hey, Leo.  So we're going to give another try for a Q&A.  Last week there was just so much to talk about, and we spent so much time, that we ran out, and we only got two out of the targeted 10 questions.  So I've got the eight that we didn't get to, and I found a couple more to round it out to 10.  So this will also be a Q&A #224.  There were a couple big stories, interestingly, I think deep technical, that I was initially thinking, well, maybe we can, like, squeeze it in.  But I thought that hasn't worked out so well for us recently.  So they will probably be the topics for next week's, and perhaps the week after, podcast, rather than trying to get too much news in.  And we didn't have, you know, it hasn't been a crazy week.



I did want to briefly follow up on my controversial comments, which drew a huge amount of friendly fire from our listeners, about law enforcement and iOS unlocking under warrants.  I found an interesting note about Mozilla's life after Google.  Microsoft has responded to Dell's epic mistake with the self-signed certificate, including the private key.  Turns out that Arris cable modems are in the doghouse for...



LEO:  Oh, no.



STEVE:  ...a bad reason.  BlackBerry has said no to a major government.  Sixty-seven - actually the press is covering it as 66, but one just got filed - 67 companies are being sued for their use of HTTPS TLS Elliptic Curve Crypto by, guess what, somebody in East Texas.  And we know what that means.



LEO:  Uh-oh.



STEVE:  Then we have another welcome nail in the Adobe Flash coffin, which actually I cribbed that phrase, the nail in the coffin, from TechCrunch, that noted this story.  A little bit of miscellany.  And 10 questions and answers from, well, questions from our listeners.  Answers...



LEO:  Answers from you.



STEVE:  ...from me, yeah.



LEO:  Sometimes listeners have answers.



STEVE:  So a great podcast.



LEO:  Well, we're excited.  And...



STEVE:  Pursuant to this, I will do this a little bit out of order because I had this down in miscellany.  But I got a tweet from clearly a listener of the podcast this morning, Bill Griffith, who said @SGgrc, he said, "'Why Zebras Don't Get Ulcers' is on sale on Audible for 4.95."



LEO:  Oh.  I already bought it, yeah.



STEVE:  And he said, "I got it.  Excellent call.  Thanks again for your recommendations."



LEO:  This is the one that's about cortisol and stress and, yeah, it's great.



STEVE:  Well, yeah.  It's one of the things that I've just sort of, in my interest in health and longevity, I've recently been sort of looking at the whole issue of stress in people, in society, and so forth.  So this is not written by, as some books like this are, by a so-called "science writer."  This is written by Robert Sapolsky.  He's got a Wikipedia page which begins:  "Robert Morris Sapolsky (born 1957) is an American neuroendocrinologist, professor of biology, neuroscience, and neurosurgery at Stanford University, researcher and author."



LEO:  So don't let the name fool you, is what you're saying.



STEVE:  Yes.  Well, and also don't let the title fool you.  This was recommended by someone who, it's like, okay, well, thank you for the recommendation.  You know, "Why Zebras Don't Get Ulcers," you sort of think, okay, well, is it illustrated?  Are there going to be pictures of zebras sitting under a tree, gazing off into the distance?  No.  This is serious, wonderful, but also kind of humorous, but still very hard science about the nature of stress, and the fact that the same sort of causes of traditional survival stress are being triggered by worries about credit card payments and mortgages and teenage daughters and the things that stress people out these days, and that the problem is that this sort of environmental stress isn't acute, it's chronic.  And our body wasn't equipped to handle continuous low-level sort of background chronic stress.  And all kinds of things go wrong.  And there's an argument to be made that stress in our lives is one of the major deleterious factors in long-term health.



And anyway, for what it's worth, I completely agree with Bill.  This is a great book.  And so it is available everywhere, and also on sale right now, or at least when he sent the tweet.  I don't know how long it took him to read it or listen to it.  But at the time it was 4.95.  So don't use that for your free one, use...



LEO:  No, yeah, exactly, yeah.



STEVE:  Save this one for one you want to get on sale.  But I recommend it as Bill did.



LEO:  Audible does a lot of sales.  I mean, we're no longer in the ad, but they do a lot of sales, and they do a lot of giveaways.  I notice they just have, for free if you're a member, which means if you signed up you could get this for free, "A Brief History of Holiday Music."  This is - I've taken the Great Courses that Robert Greenberg does on hit music.  It's the best thing ever.  I mean, if you want to understand music, it's incredible.  He's got a little single chapter on holiday music, and I think I'm going to download this one because he's great.  It adds to your appreciation to understand the history and the back story to what's going on.



STEVE:  Oh, which is the case for, like, even classical music.  If you understand...



LEO:  Well, yes, exactly.



STEVE:  ...the environment in which it was written, why it was created, what the point was, it makes it so much more easy to appreciate.



LEO:  That's his classic course, how to listen to and understand great music.  It's all about classical, the origins of classical music.  And I've found so much great stuff in it.  Yeah, it's wonderful.  I've listened to this, and it's fantastic.



STEVE:  So our Picture of the Week on the front page of our show notes is Mozilla saying "We don't need Google's money anymore."  Which, to me, comes as a huge relief because I still need Firefox.  And I really believe that the industry needs Firefox in the way that it needs Chrome because Microsoft will have its browsers, Apple will have Safari, but these are our interfaces to the Internet.  And I see a role for Firefox.  And so I was a little worried, I remember, toward the end of last year when the announcement came, toward the end of 2014, that they were getting off of the Google gravy train.  Essentially, Google had been financing the Firefox browser.



So the good news is Mozilla has just posted their 2014 numbers.  And they had revenue of $330 million, and that's up from 2013's revenue of $314 million.  So they're not in trouble.  This doesn't mean, oh, darn, Firefox is going to wither and die; which, again, to me, I'm breathing a sigh of relief.  And I know that a chunk of our listeners are diehard Firefox users, as I am.  What, of course, Mozilla has done is they're getting a lot of revenue from the default settings of the search engine in the browser, and they've moved from a single Google global strategy into a regional search engine relationship strategy, where they now have by default Yahoo! as the search engine in the United States, Baidu in China, and Yandex in Russia.  At the moment, Europe still uses Google by default, though not under a paid relationship with Google.  So anyway, I saw this.  It kind of flashed by, and I thought, oh, yay.  Good.  Because I want Firefox to endure.



And I did want to mention, I wanted just to acknowledge everyone's outrage at my suggesting last week that Apple being able to arrange to unlock locked iOS devices under court order seemed like a reasonable thing.  I mean, I'm not changing my position.  But I wanted everyone to know I heard them.  I listened.  I read all the outrage.  Some people wrote blogs about it, specifically about my comment.  And I read them to see if there was any point that I had missed.



And it's not that I'm saying I don't want the iOS devices to absolutely remain as secure as they are today.  It's that I'm watching Washington, and I know how politics goes, and I breathed a huge sigh of relief over the Obama administration's statement a month or so ago that they weren't going to push for sweeping cryptographic effort.  But then we've got, post-Paris attacks, Congress is rumbling again.  And to me, if we had to give something, this seems like something in keeping with precedent.  And again, we could be absolutist, but I think maybe some compromise will be warranted.  Again, I'm not saying I want it.  But I did want to acknowledge everybody who just, like, fell out of their chairs, as I knew some of our listeners would.



LEO:  Incidentally, this just in.  Mark Zuckerberg and Priscilla Chan, his wife, had their baby just a few hours ago.



STEVE:  So now he's off for two months.



LEO:  He's off for two months.  Their baby daughter Max came into the world with a post on Facebook on Tuesday.



STEVE:  So Maxine is maybe the full name?



LEO:  I don't know.  It just says Max here.



STEVE:  That's interesting.



LEO:  Of course it's the Daily Mail.  I should probably read the Facebook post and see.



STEVE:  Well, congratulations to him and them.



LEO:  Yeah.  Yeah.  



STEVE:  So Microsoft has responded to the news we covered last week of Dell's dangerous certificates.  And of course Dell themselves, sort of semi-reluctantly dragging their feet, oh, this is not malware, this is not the same, blah blah blah, it's like, okay, fine.  Anyway, Microsoft has a technology called the CTL, the Certificate Trust List, which has been present by default from Windows 8 onward, and which can be installed back at Vista, and from Vista on.  So Vista and Windows 7, and also on the synchronized server platforms.  They just posted yesterday this notice.



And in fact, because for Vista and 7 it's not by default, I also made it the bit.ly link of the week.  Bit.ly/sn-536 will take you to this Microsoft page, where Microsoft just wrote yesterday:  "Microsoft is aware of unconstrained digital certificates from Dell Inc. for which the private keys were inadvertently disclosed.  One of these unconstrained certificates could be used to issue other certificates, impersonate other domains, or sign code.  In addition, these certificates could be used to spoof content, perform phishing attacks, or perform man-in-the-middle attacks against Dell customers.  This issue affects all supported releases of Microsoft Windows.  Microsoft is not currently aware of attacks related to this issue.



"To help protect customers from potentially fraudulent use of these unconstrained digital certificates, the certificates have been deemed no longer valid by Dell Inc., and Microsoft is updating the Certificate Trust List (CTL) for all supported releases of Microsoft Windows to remove the trust of these certificates.



"An automatic updater of certificate trust lists is included in supported editions of Windows 8" - and then they go on from there, 8.1, RT, RT 8.1, Windows Server 2012, 2012 R2, Windows 10 and so forth.  And they even mention Windows 10 v1511, which we know was just recently.  And they said, oh, and for devices running Windows Phone 8 and on.  Then they make it clear for  systems running Windows Vista, Windows 7, Server 2008, Server 2008 R2 that are using the automatic updater for certificate trust lists, and then they have a link to a Knowledge Base article, customers do not need to take any action as these systems will be automatically protected.



But that was in addition, we talked about it at the time that it was released, some time ago.  If users are not sure, it certainly makes sense, if you're still using Vista and 7, to add that to your system so that this and other future certificates can get yanked, can be essentially marked as untrusted preemptively by Microsoft in order to deal with this kind of problem.  So it's a good thing that Microsoft did this.  I noticed they are clearly happy with their relationship with Dell and worded it accordingly.  So they didn't want to upset Dell.



LEO:  Incidentally, I finished the long letter that Mark Zuckerberg wrote to his new daughter, newborn daughter Max.  At the end of it, kind of a stunner.  He says, "We pledge we're going to give away 99% of our net worth in our lifetime for public good, including health and education initiatives."  That's $45 billion. 



STEVE:  Today.



LEO:  Today.  Yeah, who knows what it'll be over that length of time.  So quite an astounding letter to his daughter that he posted on Facebook.  It's very long, so it took me a while to get through it.



STEVE:  Well, and if he holds back that last 1%, that's, what, $500 million.



LEO:  No, yeah, that's plenty.



STEVE:  That's still plenty.



LEO:  Yeah.  And Bill Gates did the same thing, by the way, pledged he would give away all but 1% of his value.



STEVE:  Yup.



LEO:  And I think that that, boy, they're setting a very good precedent and standard for these tech billionaires.



STEVE:  And there's a group of people who are all doing this; right?



LEO:  Yeah, well, Bill Gates has created a group to try to lobby other wealthy tech folks to do this.  We will give 99...



STEVE:  He and Warren Buffett and so forth?



LEO:  Yup, yup, with mixed success, oddly.  "We will give 99% of our Facebook shares, currently about 45 billion, during our lives to advance this mission of personalized learning, curing disease, connecting people, and building strong communities."  That's just really great.  Amazing.



STEVE:  That's neat.



LEO:  Yeah.



STEVE:  So, okay.  Arris cable modems in the doghouse.



LEO:  Yow.  Because, you know, I went out and bought an Arris to replace the modem that I was using, my Comcast-supplied modem.  Motorola bought Arris not so long ago.



STEVE:  Correct.  And Motorola has had a good name and label.  In fact, that's what I was using until my friend at Cox said, oh, no, no, no, you need this Netgear CM600.  That's the one that I mentioned a couple weeks ago that has now - it's got so many bands, I'm measuring 300Mb down and 30Mb up.  And it's like, okay, thank you, that's a hundred times what I had with my two T1s.  So welcome Gibson to the 21st Century.



Okay.  So here's the story.  It has been known since 2009 that there is a type of backdoor in Arris modems.  It's a daily changing password based on a seed which is in the firmware such that the firmware algorithm generates the password of the day.  And so it is possible, if you know the seed and what day it is, to potentially access these cable modems remotely.  The various news coverage is calling this a "double backdoor" because there's a second password you need.  But it turns out that is simply and always the lower five digits of the device's serial number, which can be obtained without knowing it.  So once you know that, and if you happen to know the seed used in the algorithm to generate the daily password, you've got a problem.  Turns out most of the manufacturers never change the seed.



LEO:  Of course not.



STEVE:  They leave it set to the default.



LEO:  Of course they do.  That'd be too much work.



STEVE:  Of course they do.



LEO:  This is getting to be an old story, isn't it.



STEVE:  It really is.  All capitals, write this down, M-P-S-J-K-M-D-H-A-I.  That's the seed.  That's what all the modems use.  And so all the bad guys know it.  So the history here is that recently Bernardo Rodrigues, who is a vulnerability tester with Brazil's Globo TV network, he was looking at the firmware in some of his company's cable modems which they were going to be providing.  And he found an undocumented library, "libarris_password.so."  It provides this backdoor which allows, given that you had this information, privileged remote login, given that you know what day it is.



So he then looked at three different models, the TG862A, the TG860A, and the DG860A.  All three of those have the firmware, have this vulnerability, and using the Shodan search engine that we've talked about often, Shodan is this unnervingly powerful, it's like Google for Internet of Things, or Google for everything on the 'Net where it's indexing, not web pages and websites the way Google does, it's indexing anything that responds to packets anywhere on the Internet.  It has found more than 600,000 of these devices publicly - well, of course a cable modem is public.  It's publicly facing.



So whereas their IP address may change, that is, so Shodan may not be good for absolutely nailing for sure a device by IP because, as we know, ISPs can and periodically do, or at least may, change the IP address on specific physical modems at customer premises, still there's way over half a million of these.  And you can imagine, now that this news is public, that the bad guys are going to start having a field day.



So this guy did contact Arris, and they asked him not to reveal details about the modem's password generation algorithm.  And he didn't.  But he doesn't need to because this is the problem with these sorts of things is it relies on secrets.  And we know, well, it relies on a secret which is unfortunately identical, unless changed, for every single modem.  Now, it's worth noting that Comcast told DSL Reports that they don't use the default.  So until everyone finds out what Comcast uses, Comcast subscribers will be safe.  But as soon as someone looks in their firmware and figures out what Comcast is using, then again we have a problem.



So the lesson here is that it just - there's no way to offer something like this with anything that is universally defaulted.  I would argue that the biggest problem is that these backdoors are in place and may well not even be used.  No one may be using them.  So here's like a feature, a bullet point, which was made available for the cable providers that allow them to access for who knows why.  Maybe that's the way they update their firmware.  You can also - so this does create, Bernardo wrote, a full busybox Telnet/SSH shell session that allows you to do anything you want to on this.



So these little guys are running some version of Linux, or a small Unix or something, and this lets anybody get in.  So the only way to do this safely, if this is what you want to do, is the random number per device, where, for example, when a cable company first pairs themselves up with the cable modem, they generate a random number, they stick it in the cable box, and they make a note of it in the associated file.  And of course now the problem is, if you lose or forget that random number, you'd have to tell the customer hold the reset button down to do a factory restore or something like that.  But it just - there isn't a way to equip 600,000 devices, no matter how clever you are - you could say clearly they tried to be clever.  They created a seed that generates the sequence.  The sequence creates a changing every day password.  Then they also, beyond that, they also use the lower five digits of the serial number.



So, okay.  The problem is, once that becomes out, once that information escapes, now everybody has access to 600,000 cable modems and can get up to all kind of mischief.  So the problem is this is the kind of secret that is never kept.  It cannot be preserved.  So the only way to do this is, for example, maybe have it disabled by default.  If the number is blank, then the backdoor is not even open.  Of if a cable provider wants to do it, then generate a random number, rather than a clever algorithm, because then at least every single one of these 600,000 cable modems would have a large, absolutely unknown, random number that is associated with nothing else, not with the modem, with the vendor, with nothing, completely random.



And it would be as good as any of our crypto is in terms of protecting that, with the obligation that it somehow needs to be, you know, that random number cannot be algorithmically generated, and in fact the cable modem company cannot have a secret algorithm that generates it because, once again, when that gets loose, that one algorithm, then all the devices that were keyed by that algorithm are vulnerable.  It's got to be just pull a number out of the air.  It's the only way to do it securely.  And so, again, who knows?  This is a great lesson about security and how to do it wrong and why even being this clever didn't work.  You can't be.  If you're going to have the security, you have to sacrifice the convenience.  But then you get real security.



BlackBerry says no to Pakistan.



LEO:  Yay.



STEVE:  Yes.  Pakistan, I think it was earlier this year, it was in July, said to BlackBerry, we give you till the end of November to give us full, "unfettered" was the word they used, access to BlackBerry's servers.  BlackBerry said no then.  The deadline has been extended by one month.  Pakistan said, oh, maybe you didn't hear us correctly, so we'll give you through December 30th.  Then we're not kidding.  BlackBerry still says no.  So they had said previously they would pull out of Pakistan rather than comply with a demand for full access to content on the BlackBerry enterprise service.  The company says the Pakistani government wants the ability to monitor all traffic in the country, including every BES email and BES BlackBerry Messenger message.  BES communications, BlackBerry says, are routed through the company's servers in Canada.



BlackBerry did say they'd be willing to work with Pakistani authorities to protect public safety, but that the privacy of its customers is paramount and something on which it will not compromise.  Marty Beard is BlackBerry's chief of operations, and said that the company recognizes the need to cooperate with lawful government investigations of criminal activity, but they have never permitted wholesale access to BlackBerry servers.  And we'll remember, because we talked about this five years ago, that back in 2010, back when BlackBerry was still relevant, when I was carrying a BlackBerry and loving the little physical keyboard, both Saudi Arabia and the UAE were threatening to ban BlackBerry if they didn't provide essentially the same technology after various terrorist activities that they felt would give them the visibility they need.  BlackBerry never complied, but did arrange a compromise more along the lines of, on a case-by-case basis, we'll consider individual requests.



So it'll be interesting to track this.  I mean, this is a fascinating aspect of the times that we're in, as we know, with this fundamental tension between governmental need to have access to communications and the prevalent, trivial it has become, capability of technology to make that impossible.  So, okay, now, Leo...



LEO:  I love it when you - I know something's coming when you do that.  All right.  I'm ready.



STEVE:  Yeah.  Patent troll.  When you hear the Eastern District of Texas...



LEO:  Always.



STEVE:  Yeah, mixed in with patents, we know we're in trouble.  We've discussed this before.  There's some strange court in the Eastern District of Texas that just thinks that anybody with a patent is golden.  Doesn't matter anything else about it.  You nasty infringers, what do you think you're doing, you're robbing these companies of their livelihood.  And in fact remember that Samsung has been the victim of this court, so much so that Samsung began sponsoring the sports events, like built them a stadium and had "Samsung" on the Lexan panels around the fencing, in order to say, look, we're good guys.  Please stop picking on us.



Okay.  This is really interesting.  This is going to be another interesting thing to track because this company, CryptoPeak, has sued 66, says the press, but I checked, and it's now 67 because there's one that was filed on the 25th.  So this is a patent which was originally filed on May 28th of '97, so quite a while ago.  And as patents go, it took a few years.  Typically the patent, you send it off, and then you wait a year.  Then they come back and they say, yeah, we're denying this for the following reasons.  Then you and your patent attorneys get together, and you explain basically to the Patent and Trademark Office why their interpretation of what you said isn't correct, or why the prior art samples that they have shown don't apply to your invention.  So you go back and forth, back and forth, back and forth a few times.  And as happened on March 13th, 2001, okay, so like four years later, almost four years later, this patent was granted.



Now, patents have a life of 17 years currently.  So that means, if this was granted on March 13th, 2001, it will expire on March 13th, 2018.  So here we are about to start 2016, so a little more than two years, what, 28 months, something like that, 27 months.  So these guys, apparently earlier this year, Adam and Marcel Yung, Y-U-N-G, apparently sold this - we don't know what the terms and conditions were - to this company CryptoPeak that has no presence on the Internet, is not actually apparently using the patent that they purchased which has 27 months left of life on it before it expires.  Instead, they've decided, starting in July of this year, so this summer, early summer, to start suing people who they believe infringed this patent.  Now, what's controversial about this is that, by their reading of the patent they purchased, the use of elliptic curve cryptography is a breach of this patent.



LEO:  No.



STEVE:  So they've sued Sony, Macy's, AT&T, Pinterest, Netflix, Yahoo!, Hyatt Hotels, Priceline, Best Western, Expedia, GoPro of all people, Progressive Insurance, and about 50 others.  And in fact, Leo, there's a link here in the show notes, the search.rpxcorp.com.  If you click that, it'll bring up a list of what was 66, is now 67, companies.  And they're all major large companies that are doing secure transactions on the Internet.  I mean, like, all these companies.  Sony needs to have security,  Macy's, AT&T and so forth.  I mean, so it's every...



LEO:  A lot of retailers, too, though, like Barnes & Noble and Bed Bath & Beyond, I mean, that's kind of an interesting - Kohl's, Groupon, Shutterfly, Netflix, Etsy.  Holy cow.



STEVE:  Yeah, I mean, and there's no particular logic to it.



LEO:  No.  Macy's, VUDU, I mean, it's weird.



STEVE:  Yeah, well, although you'll notice, like, Priceline, Best Western, Expedia, sort of like they say, oh, let's go after the online travel companies.  And so they just - and they probably go over to SSL Labs and see whether those companies are using elliptic curve crypto; and, if so, they rubberstamp the complaint that they've already synthesized.  And in fact, if you look at the dates, you can see they're in batches.  There's like a whole bunch in one batch, and then they...



LEO:  Yeah, it's very easy and cheap to do this, a few hundred dollars to file these.  By the way, notice the number of closed suits.  That means they've settled.  They didn't go to trial.  They just gave them money.



STEVE:  I know.



LEO:  And that bankrolls the rest of the suits.



STEVE:  I know.



LEO:  Yeah, wow, 67 defendants.



STEVE:  So the complaint says, I mean, it even says this:  "Upon information and belief, Defendant has infringed and continues to directly infringe one or more claims of the" - and it's called the "'150 Patent."  In patent litigation they typically just refer to the long number, which is now seven digits, by its last three digits, so it ends in 150 - "the '150 patent, including at least claim 1, by actions comprising making, having made, and/or using one or more websites that operate in compliance with the standards of Elliptic Curve Cryptography (ECC) Cipher Suites for the Transport Layer Security (TLS) protocol," which now in parens says (the "Accused Instrumentalities").  "A representative example of a website of Defendant that operates in compliance with this standard is" - and in this case it was livevol.com - "is secure.livevol.com."



So anyway, this is much in the news.  I got a bunch of tweets about it yesterday and more today because it's beginning to be picked up.  Of course The Register jumped on it immediately with their particular style.  And then ZDNet picked up on it.  And hopefully it's the kind of thing that the EFF will decide they want to deal with.  I mean, this is - oh, and I should mention that Netflix has filed a motion to dismiss, alleging that this is - and in the show notes in a copy of their motion, if anyone's interested.  So the problem, well, of course, there are many problems with our current patent system.  But one is that anybody can be sued.  And even defending yourself against a specious lawsuit is not inexpensive, as, Leo, you have found out because there was the patent troll who was going after podcasters for a while; right?



LEO:  Thank god he's gone, yeah.



STEVE:  Yeah.  But one of the interesting things about patent law is that it's not the designer of the invention, I'm sorry, it's not, well, it's the person using the invention, even if, for example, none of these companies designed this, or wrote it, or recreated it.  Microsoft wrote the crypto suite in Windows, and an open source community wrote the crypto in OpenSSL.  Yet the users of that are, the way patent law is, responsible for their use of a technology which may be subject to patent.  So hopefully all these companies, and any others that are named, will band together, pool their resources, and arrange to get this resolved in a way that minimizes the expense that any of them have to go through because you get sued, you have to defend yourself.



LEO:  Yeah, or settle.



STEVE:  Yeah.  And also...



LEO:  Of course they always try to price it so it's cheaper to settle than defend yourself.



STEVE:  Yes.  I didn't spend enough time with this to, like, parse this.  And, boy, it is impenetrable legalese.  I mean, you would need Denise to go into this and figure out what it means.  But it looks to me like it doesn't in fact bear on the technology.  But unfortunately, that doesn't matter because, exactly as you said, Leo, it is cheaper to write these people a check and have the lawsuit go away, as some of the smaller companies appear to have done, than it is to argue in court because, boy, you're talking tens of thousands of dollars immediately before you even stand up and say "Your Honor."  And it's a shame that that's the way the system is set up and that companies like this are allowed to operate as they are.



So as TechCrunch put it, Flash gets another nail in its coffin.  Adobe just announced today, or maybe it was yesterday, that they are renaming what has always been called Adobe Flash Professional to Adobe Animate CC.  And I guess "CC" must be, what, Content Creator?  I'm just guessing.



LEO:  Oh, no, Creative Cloud.



STEVE:  Ah, Creative Cloud.  I did see that terminology there, too.



LEO:  That's their phrase for their subscription service basically.  



STEVE:  Okay.  So what they said was, and they were clearly a little self-conscious about this, they said:  "For nearly two decades, Flash Professional has been the standard for producing rich animations on the web.  Because of the emergence of HTML5 and demand for animations that leverage web standards, we completely rewrote the tool over the past few years to incorporate native HTML5 Canvas and WebGL support.  To more accurately represent its position as the premier animation tool for the web and beyond, Flash Professional will be renamed ?Adobe Animate CC?, starting with the next release in early 2016."



They said:  "Today, over a third of all content created in Flash Professional uses HTML5, reaching over one billion devices worldwide.  It has also been recognized as an? ?HTML5 ad solution? that complies with the latest Interactive Advertising Bureau" - that's the IAB, as we know - "standards, and is widely used in the cartoon industry by powerhouse studios like? ?Nickelodeon? and Titmouse Inc?.  Animate CC will continue supporting Flash (SWF) and AIR formats as first-class citizens.  In addition, it can output animations to virtually any format, including scalable vector graphics, through its extensible architecture."



So this is just good news.  This is Adobe saying, well, I mean, for example, as we know, Flash won't run on any iOS devices.  And Leo, I heard you mention in your previous podcast, MacBreak Weekly, the percentage of Black Friday sales that went through iOS.



LEO:  Yeah, it was like 80 something; right?



STEVE:  Yeah.



LEO:  Eighty-three percent, 84 percent, amazing.



STEVE:  Right.  So although we note that iOS instances are dwarfed by Android, in terms of dollar volume transactions happening on them, iOS dwarfs Android.  And so the fact that iOS won't run Flash means that Flash-based ads won't work on the mobile platform, whereas HTML5 can.  So I think it's clear that it's going to take it a long time to go away, it always takes these things forever to finally disappear, but they're probably going to.



And I found a nice note that lets me explain something that I wanted to about SpinRite, from just two days ago.  Cornel DeLorean, who is in my hometown, San Mateo, California, his note, as I'm going through the mailbag for the Q&A, said "SpinRite saves the day again."  He wrote:  "Hi, Steve.  I'm a longtime listener and owner of SpinRite.  I purchased my copy back in 2009 to support you and the podcast; but I also figured at some point I would get a chance to rescue a disk, and after all these years that time came.  I was helping a friend with his laptop.  It was running slow and hanging.  So after poking around for a bit and removing some unneeded and expired software from McAfee and so forth, I rebooted, and it refused to boot up.  I tried every trick I learned from doing many years of desktop support, but nothing worked.  So I thought, let's see if SpinRite can save the day.



"I started the scan on Level 2, and it happily got to 48% after about 40 minutes, but then it slowed way down.  It ran overnight, and by morning it was at 51%.  When I got home from work at the end of the day, it had crawled up to 53.  I let it run overnight again and it was finally finished when I checked it in the morning.  I rebooted it with fingers crossed; and, sure enough, it booted right up.  I backed up all of his data and advised him it was time for a new laptop."  And then he says:  "But it ran fine for a number of months until he did get a replacement.  Thanks for such a great product and podcast."



So I just wanted to take this - this is like a perfect case history of SpinRite zipping along to halfway, to nearly halfway, 48%, where it encountered trouble.  And then it sat there and just essentially refused to take no for an answer from the drive.  And it was clearly slow for a while, from like 48% to somewhere past half, like 53.  So had it never hit trouble, it would have zipped all the way through, and maybe even fixed some things that were less recalcitrant.  In this case, it had to really struggle.  But this was a case of all or nothing for this person.  And so he let it go, it fixed the problem, the drive worked fine, and he eventually replaced the laptop.



So the problem that SpinRite has is that it actually has to read all of the sectors on the drive in order to check them all.  And drives have gotten so big today, nothing does that anymore.  Not even formatting.  Formatting doesn't read the drive.  It used to, back when it could.  But Microsoft said, wait, we can't take a week to format a drive any longer.  So we're just going to do the so-called "quick format."  Well, what the quick format does is just lay down the architecture of the format.  It lays down the root directory, and the various tables at the front of the drive, and bitmaps showing all sectors unallocated.  And then it says, okay, it's formatted.  That's the quick format.



So the problem is drives, as we know, are becoming ridiculously large.  The good news is, in the work I did on the next release of SpinRite, which will be 6.1, the first thing I did was look at speed and performance and made through some really fun trickery a huge increase in performance.  It clocked at two hours per terabyte, that is to say, half a terabyte per hour.  So that makes it feasible to run SpinRite on a 4TB drive overnight, in eight hours, which makes it supremely practical.



And as I've said before, we're making good progress with SQRL.  I'm finishing the rewrite of the semantics page, which actually required a rewrite because we had changed so many things down here toward the ends, simplifying it, tightening it, just really nailing it.  And as soon as we get SpinRite out the door, I mean released, then I'm back to - did I say SpinRite?  I meant SQRL, sorry.  Soon as I get SQRL out the door, then I'm back to working on 6.1 and getting it into everyone's hands, as I have said, for a free upgrade that will give us this performance boost.  So I thank everyone for their patience.  And in the meantime, it's still rescuing drives every day.



LEO:  Very nice.  I have questions.  Are you ready?  Let me open the magic PDF, and we'll get your Q&A fired up.  We start in Hamburg, Germany.  Michael Walther notes assembly language is climbing the charts.  The Top 10 of programming languages.  This is TIOBE software, the TIOBE index.



STEVE:  Yeah, check out that link.  I know that you're a fan of languages, Leo.



LEO:  Oh, I always look at this.  I look at this all the time because I find it fascinating.



STEVE:  Yes.



LEO:  And I guess the way they do this is courses, third-party vendors, engineers worldwide, search engines, they have a methodology that I think is pretty good.  We're not talking about best programming language.  We're talking about literally lines of code that have been written.  And of course Java is number one still.



STEVE:  So, yeah, what's interesting is Java is number one.  And I wonder if you think - I know that it's used in corporations because it is still a multiplatform language.  You put the Java Runtime on a system, and then you're able to host your applications anywhere.  But I'm wondering also if it might be Android.



LEO:  Yeah.



STEVE:  Which is, you know, Android apps [crosstalk].



LEO:  It's the language of choice for Android, so.



STEVE:  Yeah.



LEO:  You can use other languages, but Java's the main one.  What's interesting is C is still number two.  



STEVE:  Yeah, isn't that interesting.  And in fact if you scroll past the bottom of that chart, there's an interesting graphic that shows the evolution of language popularity over time.  



LEO:  Java's been going down, then went up.  It's really interesting.  This climb here from - it had been declining.  This sudden climb I really think has to be Android.



STEVE:  I think it has to be.



LEO:  It has to be Android; right?



STEVE:  Yeah.



LEO:  Because it's been steady for, you know, since 2001 it's been...



STEVE:  C is the language.  I mean, that is because it's flexible enough, multiplatform, yet it's also highly transportable when you wrap it with the right libraries. 



LEO:  Yeah.  And then next is C++.



STEVE:  Yeah, really, I thought that was really - and to Michael's point, assembly - and I don't quite understand why it's there.  But it's like number 11.



LEO:  Number 11.



STEVE:  The bottom of the Top 10 is Perl, which is slipping a little bit.  Ruby on its way up.  VB.net is there at number eight, JavaScript just above it at number seven.  But assembly language is 11.  Now, of course, that doesn't say which chip assembly.



LEO:  Right.



STEVE:  And I'm wondering if it might be, for example, like ARM assembler for all, you know, the Internet of Things, sometimes...



LEO:  Yes, that's what it is.



STEVE:  ...you're running very memory-constrained environments where you can't afford Linux, and you can't afford the inefficiency of any compilation.  All compilers are generating code much bigger than somebody who writes in assembler.  So I'm thinking that, for example, the little button that Amazon sells, well, it makes sense to them to have the code written in assembly because then they can dramatically shrink the chip by using much smaller ROM.  And that absolutely maps to cost.  So in high volume, highly cost-sensitive areas, assembly language is still what people are going to use because there's no way to get more efficient.  And I bet that's driving the interest, or at least, even though it's not in the Top 10, it's number 11.



LEO:  That's amazing, really.



STEVE:  Yeah.



LEO:  Although, if you look at number 12, Delphi, you realize, well, mm-hmm.  Then Visual Basic.  Objective-C, which is Apple's language for iOS, surprisingly, number 14 and plummeting.  It was number three last year.



STEVE:  How could COBOL be number 20?  And coming up?



LEO:  Up-and-coming, it's an up-and-comer, COBOL.  R, plummeting.  PL?  Pascal, MATLAB, Swift is coming up.  Interesting, though, the plummet in Objective-C.  I guess that's the growth of Swift.  It's directly comparable to the growth of Swift.



STEVE:  Yeah, that does make sense.



LEO:  Yeah.  Wow.  That is fascinating.



STEVE:  I just always think it's sort of interesting.  It's sort of, what, the social network within the developer ecosystem.  Interesting.



LEO:  Yeah, yeah.  I love that stuff, frankly.  Thank you, Michael, for the TIOBE index, T-I-O-B-E.



STEVE:  Yes.  I don't think it's my assembler, though.  I don't think it's x86.  I have a feeling it's...



LEO:  Yeah, I bet not.  I wish they would tell us by processor.



STEVE:  Yeah, I think it's probably little embedded things.



LEO:  Yeah, you're right. 



STEVE:  And unfortunately, Intel has, like, zero penetration in there at the moment.  They're trying to get in, but still not there yet.



LEO:  Justin in Austin hit a snag with HSTS and router redirection.  He says:  The other night my internet connection went - oops, that's the wrong lower third.  Let me put yours up.  There we go.  The other night my Internet connection went down, but the symptoms were surprising.  I was attempting to navigate to a site I frequent which, unknown to me, uses HSTS.  The result was my web browser informed me the site was known to use HSTS and was attempting to serve me a non-secured page.  And the browser said, that's it.  It completely prevented me from viewing the insecure page, with no other option.



Eventually I discovered, hey, it was not my browser, it was my router intercepting the web page request and returning its own "No connection, please contact support" page.  But the browser's protective interface masked the true problem.  If all sites implemented HSTS, it would have taken me longer to figure out.  I guess I'm just writing to say that this was a surprising interaction between my router and HSTS.  I imagine a WiFi network that has one of these "click to agree to our terms" redirects might show the same symptom.  What's going on?



STEVE:  Yeah, this is really interesting.  And we would broadly categorize this as another one of these things where the best intentions of fixing stuff that's wrong don't always work perfectly.  So HSTS, of course, is the HTTP Strict Transport Security.  That's the reply header which a site, a web service, a web server can provide to a browser, declaring that it's able to always and wants to only have secure connections.  The browser caches, that is to say, remembers that declaration.  And that gives the browser permission to promote any non-secure queries it might have otherwise made to that server to HTTPS.



So Justin surfs around the 'Net as any of us do, and his browser requires knowledge of all of the HSTS sites, like GRC.com.  Mine's one of them.  And then something happens.  He loses his Internet connection, which causes his router to display an intercept page.  And the router's trying to be helpful.  The router is showing a page saying, hey, I've lost connection to the Internet.  But it's not secure.



So because the router is intercepting the browser's attempt to connect to a secure site, the browser interprets the lack of security, which is not coming from the site, but is coming from the router, as a failure of HSTS, and puts up the wrong message.  It doesn't - the browser doesn't say I couldn't get to the Internet because it got to something.  It got to the router that intercepted the legitimate attempt to get to the site over a secure connection.  And so the browser says, oh, sorry, this site that you're trying to get to, there's something wrong because it said only connect to me securely, and we tried, and it's not accepting a secure connection.  Well, because the router intercepted it.



So again, this is sort of one of those oops, unforeseen side effects of a system which we're trying to make more secure.  But this whole concept of HSTS, we have to call it a kludge.  Yes, it's a useful kludge.  It's giving us more security.  As we know, it's preventing the problem of a bad guy being a man in the middle and stripping the HTTPSes out of all of the responses coming from a site in order to strip the security and be able to, for example, acquire session cookies when an unwitting user logs in.  So this was sort of there was an edge case of a problem where the industry's response was, oh, we can fix that.  And so this kludge, useful and workable, but still an afterthought, was added to the HTTPS and generally sort of the web protocol to enforce security through this clever mechanism.



And unfortunately, it was a little too clever for its own good; and, exactly as Justin notes, if you went to a web portal that was trying to intercept you, I would imagine that you'd get the same sort of confusion from the browser.  Now, maybe, if this becomes more prevalent, browsers will just do a better job at explaining the situation.  The browser could understand better what's going on and present something that's less confusing.  And Justin's point about, if all websites were doing this, what he meant was, he just tried a different site, and it worked.  So, oh, I'm sorry, he tried a different site, and it didn't work because the problem was not the site he was trying to get to.  The problem was he lost his Internet connection.  Unfortunately, that was being masked by this kludge that was all put in place in order to keep us more secure.



LEO:  Huh.



STEVE:  Yes.



LEO:  Two steps forward, one step back.



STEVE:  Yes, and if we keep doing it, we do actually make progress.



LEO:  Yeah, bit by bit.



STEVE:  But not always as fast as we want.



LEO:  Walt in San Fernando Valley wonders about DDoS attacks:  We've all heard of DDOS - Distributed Denial of Service - attacks against individuals and businesses.  I've never heard of an ISP being attacked.  Is such an attack possible?  If so, why are bad guys not doing it?  Or maybe ISPs just don't tell us when they're attacked?  Many thanks.



STEVE:  So this is sort of an interesting question.  And I think there's a couple answers to it.  Normally, DDoS attacks are an attack launched by a individual or group against an entity for  some perceived cause, some perceived slight of some kind.  So it's like Company X does something that this group disagrees with philosophically, and attacks them.  Now, and so my point is that ISPs, who are generally just carriers of content, are by that nature less targets of people's angst, I think.  Which is not to say that people can't also get upset with ISPs.  But that's part two of this, is that the nature of a distributed denial of service attack is that the traffic coming from all over the world, typically, is concentrated through many different ISPs, down finally to the subscriber's ISP, and then to the subscriber.



And depending upon the size of the attack, the ISP's routers at some point generally get overwhelmed when the concentration of traffic begins to saturate the bandwidth capability of either the router or the outbound links from the router, so that it just can't allow all the traffic through.  So ISPs are sort of indirectly attacked when any of their customers are attacked.  But exactly as Walt also suggests, maybe they're just too big.  What they are mostly is a large ISP will have, as we've talked about, peering with other ISPs or Tier 1 providers, will have many different contact points around the Internet.  Many different contact points means that the traffic is far more diffuse in nature.



And, I mean, I guess you could attack an ISP's website.  I was about to say that an ISP doesn't have an IP address in the same way that one of their clients has an IP address.  An ISP has large blocks of IPs, which are then assigned to their customers.  So you could certainly attack an ISP's website, where it lives.  But by its nature, an ISP itself is potentially millions of IP addresses, rather than just one.  So there really isn't anything to attack.  And even if there were, the traffic is inherently spread out to a much greater degree.  So I just sort of think they're sort of part of the cloud, and they're sort of part of the fuzziness that you attack through, rather than trying to attack it itself, because itself it's sort of amorphous.



LEO:  Makes sense.  Gregg Penn, Oakland, CA wonders about blocking ads only from running scripts.  By the way, I don't know if you heard Triangulation yesterday.  We talked...



STEVE:  Did not have a chance to catch it, but I know that you had those guys on.



LEO:  Two people from Adblock Plus.  We talked about the "acceptable ads" policy and all of that.  And then Dean Murphy, who is the guy behind the Crystal adblocker on iOS.



STEVE:  Right.



LEO:  And, yeah, it was a really good conversation, I thought, along the lines of stuff we'd talked about before.



STEVE:  Sure.



LEO:  But in some detail.  So that was yesterday's Triangulation.  Anyway...



STEVE:  It's one of the other tensions that we have in the industry right now.



LEO:  Yeah, yeah.  Gregg writes:  Steve, I've been listening - mostly reading actually, thanks to Elaine's work - to Security Now! for a few years.  I find the discussions about adblocking to be very useful and interesting for the different perspectives everyone has on it.  I was wondering if it makes sense to try to have a lighter touch on adblocking by combining it with suppressing scripting.  Instead of blocking third-party data like ads, stopping scripting, or both, what about blocking only scripts that come from third-party sites?  Wouldn't that improve security?  Would it prevent the website owner from getting credit for the ad view?  You could still see most ads without them running Flash or JavaScript.  It would be a lot less annoying.  And finally, do any current ad or script blockers include this functionality?  And then I think you have a screenshot here of uBlock Origin.



STEVE:  Yeah.  So, yes.  The current favorite tool of mine and many now of our listeners is uBlock Origin.  And it does have specifically, and this screenshot shows it, there's a line item there, third-party scripts.  And it's not normally accessible to a user until you turn on the advanced mode.  So you need to go to whichever browser you have it installed, whichever one you're using it on, to the configuration.  And on Firefox, I'm looking at it, it says "I am an advanced user."  Which is not checked by default.  You turn that on, and then you will find some little plus and minus signs to the left of the requests blocked and the domains connected verbiage on the UI.  If you click that, it opens this whole next level of drilldown panel.  And one of the items there is third-party scripts.



Now, conservative as the author of uBlock Origin is, this is not enabled by default.  You can experiment with it because he has both local and global settings in the way this operates.  If you're not familiar with this, check back on the podcast where we covered uBlock Origin in much greater detail [SN-523] because there is per-site and global options.  So you could block third-party scripts and see how it goes.  The problem is that ads which may detect that they are being blocked are third-party sourced, and many ads are now using scripts.  We've talked about this.  And for me, it's an annoyance, which is why I brought uBlock Origin up, and I'm unfortunately feeling I need to block pretty much everything, although I am making static exceptions for sites where I want to support them.  And it looks like they're doing what they can to have a useful ad policy.  But for what it's worth, uBlock Origin is an example.  It gives you all the bells and whistles that you need in order to say, I'm going to try blocking third-party scripts and see how it goes.



LEO:  uBlock Origin to the rescue once again.  Brett in Dubai wonders whether we ever really even needed TrueCrypt:  I completed my offsite backup moments ago, and I suddenly realized I'm completely happy with using my Mac-encrypted filesystem on removable disks.  He's talking about Apple's FileVault, I guess.  It's easy and, as far as I know, secure.  I was using TrueCrypt on your recommendation for years and was really upset when it became unsupported.  So I switched to using the readymade built-in OS encryption systems in Mac - actually systems because Mac uses FileVault, Windows uses BitLocker.  Do you think they're good enough, or are we missing something?



STEVE:  I guess the question is what's your need?  What's your application?  That is, what degree of encryption assurance do you want?  I think they're absolutely good enough to protect your content in the cloud, to protect your backup, and to protect your system.  I can't help but be nervous about BitLocker.  Just, I don't know, Microsoft just - I have less of a feeling of comfort with Microsoft than I do with Apple.  I think Apple has - maybe just because Apple has been so vocal and so adamant about their stance on their enforcement of user privacy.  And I understand what they're saying.  Microsoft just doesn't say anything.  And so I just - I don't feel like I have the same sense of confidence from Microsoft.



But, yes, they are strong encrypted file systems.  I think you are always, in an absolutist sense, always better off using an open source, third-party solution, just because it's better if it comes from somewhere else for absolute ultimate security.  But I don't know that everyone absolutely needs that.  And there's a huge convenience factor in simply turning on the Mac FileVault and having an encrypted file system.  I really think it's fine.



LEO:  Steve's not being blunt enough.  If you're worried about government, then you might not want to use a corporate solution, a closed-source corporate solution because - and I don't care if it's Apple or Microsoft, whatever they say or don't say.  Both are subject to U.S. law, and both may be required to provide a backdoor in their encryption.  So if it's government, the U.S. government you're worried about, then open source would be safer.  I've always said, if you're going to use encryption, use open source.  But it is a lot less convenient.  And people have - no, I wasn't talking to you, Siri.  We have - I don't know why she woke up.  Oh, Apple wanted to hear what I had to say, okay.  Did you get that, Apple?  That's really the issue; right?  If you're worried about just common garden variety thieves and snoops, of course FileVault and BitLocker are fine.



STEVE:  Yes, absolutely.



LEO:  It's the U.S. government.  That's the difference.



STEVE:  Yes.



LEO:  Ronnie in Montgomery, Alabama has an idea for fingerprint scanning:  I just had a wild idea, says Ronnie.  I've liked the idea of fingerprint scanning.  I don't like the idea of it being the only form of unlocking my phone because I can be compelled to use my finger to unlock it.  But what if the fingerprint scanner was programmed to check two or even three prints for multiple fingers?  Only I would know which fingers, and in which order.  No one would be able to just cut off my index finger thinking that was the one that unlocks it.  It would be something I know - oh, because only he would know the order.



STEVE:  The sequence.



LEO:  Yeah.  So I couldn't be compelled to reveal the exact pattern.  Oh, that's clever.  This, of course, wouldn't be very practical.  But for the ones who require that extra level of security, this could be an ideal solution.  What do you think?  Be gentle if it's dumb.  Ronnie.



STEVE:  So I don't think it's dumb.  But I think that probably the answer is a little simpler.  And that is to have a panic mode finger.  So I hesitate to say that you would give your phone the finger if the authorities wanted you to unlock it.  And I doubt that it's the kind of thing that we would see Apple support.  But it sort of feels like the thing that maybe Android could offer, where you would register the finger that you intend to use for unlocking, and then you would register the panic finger.



And if you really wanted to be safe, your regular finger would be unusual, like the pinkie on your non-dominant hand, so that no one would expect that to be your normal unlock finger.  And your what would expected to be your normal unlock finger, like your dominant hand index finger or thumb, that would be the panic.  And so you would comply.  You would say, oh, okay, fine, you got me, I'll unlock my phone, and you just give it one finger, and now it's bricked, essentially.  I think that's probably the practical way, only because doing a multiple finger salute every time you want to unlock your phone probably would get tiresome, if you had to do three different fingers in sequence.  I mean, yeah, you'd feel like James Bond, but I think you'd get tired of being James Bond pretty quickly.



LEO:  Continuing on with yet another question for you, Mr. G, via a private tweet from someone who wishes to keep his identity private, a little DM action here.  He writes:  I never thought I'd be caught by CryptoWall - oh, no - but it happened.  However, it happened because of a Windows feature I didn't know about, the Microsoft Windows Scripting Host.  Oh, WSH.  I was looking at a JavaScript file sent to me in a bogus email, and I accidentally double-clicked the .js file.  It was immediately parsed by WSH and ran.  Well, duh.  Have you discussed this vector before?  Why on Earth is this a built-in feature of Windows?  I understand the need and value of scripting, but damn, allowing invocation of a downloaded JavaScript file with no warning?  Wow.



STEVE:  So this is something we've never talked about.  We've talked about JavaScript running in browsers.  But it turns out that somewhere along the way Microsoft decided that they would allow JavaScript to be interpreted natively.  On Microsoft's page discussing this they say:  "The Windows Scripting Host" - which is WSH - "supports scripts written in Microsoft Visual Basic Scripting Edition or JavaScript.  When you start a script, the scripting host reads and passes the specified script file contents to the registered script engine.  The scripting engine uses file extensions - .vbs for VBScript, .js for JavaScript - to identify the script, instead of using the script tag used in HTML.  Because of this, the script writer does not have to be familiar with the exact programmatic ID of various script engines," which in Windows jargon you would otherwise need to use in order to invoke the scripting engine.



And they conclude, saying:  "The script host itself maintains a mapping of script extensions to program IDs and uses the Windows association model, that is, its file extensions, to start the appropriate engine for a given script."  So I could empathize because, as a security person, there have been times when I've been messing with live viruses or live malware.  In fact, CryptoWall was one of them.  And it is just really unnerving.  I mean, it's like we've all seen science fiction movies or various - or maybe even not science fiction, where somebody's dealing in a Level 4 biohazard lab with live virus, and you just really need to be careful.  And our instincts about clicking and double-clicking, I mean, he clearly meant to select it, click once to drag and drop.  Well, and Leo, you're making a face.  But believe me, it's so easy.



LEO:  This is why we say don't open attachments, because there are many, many executable extensions besides EXE.



STEVE:  Right.



LEO:  You could, you know, a .pif file is an executable.  You know that, I know that, because we're old DOS guys.  But you can't look at it and say, well, I wonder what happens when I double-click it.  Don't.  And by the way...



STEVE:  I know.  No, and so but his point was that he's a Security Now! listener.  He knows how to DM me.  And he never thought he'd be caught by CryptoWall.  So he was deliberately inspecting, because he was curious, a JavaScript host...



LEO:  Maybe he thought it would open up in text edit or something.



STEVE:  Well, exactly, or he may have intended to right-click on it and then select "open with."  I mean, it just - it is so - there's a weird thing that happens when you know you're dealing with something...



LEO:  [Crosstalk] accidentally double-click it.



STEVE:  Yeah.



LEO:  But JavaScript by itself wouldn't infect you.  You'd also have to have a vulnerable system, wouldn't you?



STEVE:  The Windows Scripting Host is extremely powerful.



LEO:  It runs at a high...



STEVE:  You can do stuff in there that you can't get from the command line.



LEO:  So CryptoWall is not an EXE, it's a JavaScript file?



STEVE:  No, no.  But, for example, it could have gone out and fetched it.  That's the kind of thing...



LEO:  And run it?



STEVE:  Oh, yeah, the scripting host...



LEO:  Without a UAC warning?



STEVE:  The scripting host can do all kinds of things.



LEO:  This guy turned down the security on his system.  Or he has vulnerability...



STEVE:  He might be running as admin.



LEO:  Yeah.



STEVE:  Yeah.



LEO:  Well, not just running as admin.  You would get a UAC warning, I'm sure of it, before it would allow a program to run, be downloaded and run by JavaScript.  Well, maybe not.  I don't know.



STEVE:  Remember that you're not in the browser.  The browser has a different...



LEO:  No, I understand, it's WSH.



STEVE:  Yeah.



LEO:  No, I understand.



STEVE:  Yeah.



LEO:  But UAC runs system-wide.  It's not just in the browser.  It runs system-wide.



STEVE:  But UAC is not just a run a program.  It's saying something you're doing is needing elevated privileges.  And I don't know whether CryptoWall...



LEO:  Maybe not, maybe not, yeah.



STEVE:  Yeah.



LEO:  Guy Smiley in the chatroom said, no, you wouldn't get a warning.  So it wouldn't have to be an exploitable computer, and you wouldn't see a UAC warning, it would just be running it.



STEVE:  Yeah.  And again, I really wish I had like an extra year to mess with the PowerShell because, boy, what Microsoft has built into Windows is so amazing.  But that's not what I'm doing right now.



LEO:  WSH is great.  PowerShell has kind of superseded that, I think.  But WSH is the engine that can run ECMAScript and these other - VBScript.



STEVE:  Right.



LEO:  Nathan Rae (@nathanrae) tweeted @SGgrc.  Long tweet:  Steve, I have a question.  As most crypto is based on large prime numbers, how many primes are there to choose from?  I looked it up and there are about a billion, but I don't have - what?  But I don't have any idea of how many there could be in a 128-bit binary number.  My brain doesn't work with numbers that big.  Well, that's an interesting question because there's an infinite number of primes, but in a constrained space there would be a number.



STEVE:  And isn't your intuition - it turns out this is a place where our intuition is wrong because we know that a prime is a number that is not divisible by any number other than itself and one.



LEO:  Right.  



STEVE:  Of course everything's divisible by one.



LEO:  Right.



STEVE:  But no other numbers in between one and it are divided evenly.



LEO:  Right.



STEVE:  And so, you know, we start one, three, five, seven, nine, then 11 and 13 and 17 and 19 and so forth.  But sort of intuitively, if you actually write them down, you notice they start getting further and further spaced apart because there are more opportunities for them to be divisible by one of the things that came before.



LEO:  Right.



STEVE:  And so your intuition sort of assumes, well, we're going to kind of run out.  Like way, way out there...



LEO:  Way, way.



STEVE:  There are just so many other numbers that have come before, certainly one of them would be able to divide by that.  And so it's a really interesting characteristic of primes that they continue to be richly available forever.



LEO:  Yeah.



STEVE:  And in fact the way primes are chosen for crypto, like when we get two primes and want to multiply them in order to do a crypto operation, is a pseudorandom number generator, high-quality of course, just makes one up.  And then what's called a "primality test" is done on it to see if it happened to guess one that's prime.  And if not, it guesses again.  And its primality is checked.  And so on.  And it turns out that, no matter how far out you go, that there are still primes like all over the place, which to me was a bit of a revelation when I first encountered it.  I thought, isn't that interesting.  They don't get more rare.  They're just all - they're just scattered.  And actually they're still - they're prevalent, even.



So it's not like they're really hard to find, and the fact that they're hiding because they're hard to find makes them more valuable.  In fact, that would make them less valuable because, if they became really rare when they were really big - we need them to be really big for security.  If they also became very rare, then it would be much easier to guess what they might be.  But the fact that they're all over the place when they're really big, and a high population of them, means that that doesn't confer an advantage on somebody who's trying to guess what the primes might be that you chose by random and then worked with.  So I just - I love this stuff.



LEO:  But I guess in 128 bits there are a limited number of primes.  Any subset of the infinite.



STEVE:  Well, and that's where I mentioned he's sort of confusing things because 128 bits is...



LEO:  Just the size...



STEVE:  ...only relevant to symmetric cryptography, where you choose your key at random.  All of the primes are useful for public key crypto; and maybe, well, in an RSA crypto you're dealing with primes like 1024 and 2048 bits.  So really much longer ones.  You would not be using primes down at 128 bits because they're just not - there are not enough of them down there to have security.  There it really does become too small.  Nobody uses 128-bit public key crypto.  We use 2048 public key crypto.



LEO:  So I thought I'd try this.  I saved a little JavaScript file as a text file to my desktop, just to see if I could just double-click it and run it.  This is Windows 10.  And yes, indeed, the Windows Script Host ran it without warning, and that was it.  So I stand corrected, and I apologize to our anonymous tweeter.  In fact, yeah, if you have a .js file, and you double-click it, whether it's an attachment or just on your desktop, it runs.  No warning.



STEVE:  Yeah, and clearly he knew that he got bit because he double-clicked out of habit.



LEO:  Right.



STEVE:  I'm sure, as you said, Leo, he wanted to inspect the JavaScript, just out of curiosity.  But instead he launched it.  And he was a little bit surprised that Windows runs JavaScript.



LEO:  So don't.  Yes, it does.  It's an executable.  Don't run it.  It's an executable.  I'm kind of impressed that CryptoWall can use a .js file to install itself.



STEVE:  It's only because that Windows Scripting Host is unbelievable powerful.  You can edit the global profiles.  You can do...



LEO:  Oh, it's great, yeah.



STEVE:  ...group policies.  It's just incredible.



LEO:  Yeah.  Mike in San Francisco brings us the "You're Doing It Wrong" Foible of the Week.  Not fable, foible.  So, recently I tried to log in to Wells Fargo.  My first mistake.  The site informed me I must pick a new username and password to meet its new security standards.  Oh, that's scary.



STEVE:  Mmm.



LEO:  I looked at what was required and changed my username slightly.  Then I tried to enter a new password generated by LastPass.  Despite the fact that Wells Fargo's own new password hint suggestions were indicating a password up to 14 characters and all sorts of other rules, it wouldn't take anything longer than eight characters.  This took a while to untangle.  It kept rejecting everything I tried despite telling me the length was right, until it occurred to me to ignore that and backspace one character at a time, trying the submission each time.  When I finally whittled it down to just eight characters, my new password was considered valid and accepted.  This is pretty bad in this day and age.  It's even worse the password hint text doesn't even match its own validator.  What?



STEVE:  Wow.



LEO:  Wow.



STEVE:  This sounds like a committee that needs to have more meetings, even though committee meetings are notoriously awful.  It's like, how, like, three different groups are all working on their own aspect of this, and they're not talking to each other.  And, you know, wouldn't you think someone would have tested this?  That, like, how did this not get tested on a password longer than eight characters, when the whole reason Wells Fargo was insisting this happened is their new security standards.



LEO:  Yeah.



STEVE:  Wow.



LEO:  I'm going to guess that it's also possible that maybe there was a disallowed character in the other characters that he deleted.



STEVE:  That could be.  That could be it.  It's like character nine could have been a curlicue or something, and...



LEO:  But, boy, eight characters is not enough, is it?  Even if it's...



STEVE:  No, and eight characters...



LEO:  [Crosstalk] upper and lower and numbers and combinations.  It's not great.  



STEVE:  Even with a big alphabet, that's just - you cannot get enough entropy into eight characters.



LEO:  Yeah.



STEVE:  If we assume about a six-bit entropy per character, which is a good rule of thumb, then we've got six eights is 48.  So that's 48 bits of entropy, assuming completely random.  That's just not - 48 bits is not enough security.



LEO:  Alan Ambler is our last question from in Cincinnati.  He brings us the NetWorx feature Tip of the Week.  What's NetWorx?



STEVE:  Okay, so NetWorx is what I talked about, that really cool network monitoring app a couple weeks ago.



LEO:  Oh, yeah, yeah, yeah.  Right, right, right.  Now I remember, yeah.  He says:  I've been using NetWorx for two or three years.  You're right.  It rocks.  My fave feature is the ability to set an alarm for streaming below a "per minute" threshold when automatically doing stream capture recording.  In other words, it alarms and notifies me if the connection drops.  If a certain level of bytes per minute are not achieved within a three-minute interval window, I get the annoying three-tone phone company disconnected alarm.  It's great for unattended downloading of huge files which might not complete.



STEVE:  Well, and so I just wanted to mention it again, N-E-T-W-O-R-X.  I got a lot of positive feedback from my recommendation.  And one person mentioned that he uses it, not to monitor his own machine's bandwidth, but his entire network's.  And it's like, oh, that hadn't occurred to me.  Turns out right there on the UI, where you select which network interface of your machine you want it to monitor, if you have more than one, there is a clickable link, "Monitor my router instead."



And what is so cool is that there's a protocol, I don't think we've ever talked about SNMP, Simple Network Management Protocol.  SNMP is a UDP-based, very simple messaging protocol.  You send a UDP packet to port 161, which is the default SNMP listening port, with a query in the form of a long dotted number.  It's crazy.  It's all standardized.  They're called MIBs, M-I-B's.  And so it'll be like 20 dotted numbers.  It looks like an IP address from, like, three times over.  But many routers support SNMP, that is, you can ask them things.  And one of the things you can ask them is for the count of bytes in either direction on one of their interfaces.  They just total them all the time.  And so if you ask every second, and you get two totals, you subtract the second one from the first or the first from the second, and that gives you the number of bytes in that interval of time between queries, which converts then to bandwidth.



So the point is that just by clicking that little link on NetWorx - oh, first it said - it didn't come up with a list of interfaces.  And I thought, ah, I'll bet I never turned on LAN-side SNMP on my pfSense software on my little router.  So I logged into pfSense.  Sure enough, SNMP was not turned on.  I enabled it.  It took a second, then it came up.  Then I went back over to NetWorx, said I want to monitor my whole network.  Now it showed me all of the interfaces.  I chose the one for the LAN.  And ever since, I've been watching the bandwidth, not only of my own machine, but of everybody, all of the systems and iOS devices and so forth on my network.



So again, props to NetWorx.  It couldn't be easier to do that.  I know I went into a lot of detail and made it sound complicated.  But there's no need to look up MIBs and dig around or do anything.  It just said, hey, yeah, I want to monitor my whole network.  So very cool little piece of freeware.  And thanks, Alan, for bringing it back up, and all of our listeners for saying that you know about it, or that you were glad for the reference.



LEO:  Great.  I've got to try that.  Steve, we're done.



STEVE:  Yay.



LEO:  We got them all in.



STEVE:  Still the same day, too.



LEO:  Wow.



STEVE:  It's still Tuesday.



LEO:  Did you have a good Thanksgiving? 



STEVE:  Yes, very good.  Just went out with a bunch of friends to a nice restaurant, relaxed, and had a couple bottles of '05 Jordan cab and...



LEO:  Nice.



STEVE:  Yup.



LEO:  Yeah.  I know the Jordan family.  They do a very nice job.



STEVE:  My favorite cab.



LEO:  Is it?  Oh, that's good.



STEVE:  Yup, it is, yeah.  I ran out, I was drinking '03 Silver Oak for a while.  I ran out of the '97, wait, no, the '07.



LEO:  You love that Napa stuff.



STEVE:  I do, yeah.



LEO:  I know the Silver Oak people, too.



STEVE:  I'm a California cab boy.



LEO:  I know all of those people.  That's funny.  I served on the school board with the Silver Oak family and the Jordan family, Judy Jordan and Tim Duncan of Silver Oak.  They're very nice people.



STEVE:  Well, they make very good cabernet.



LEO:  I'm not on the board anymore, or I would get some for you.  We do this show every Wednesday at about 1:30 Pacific, 4:30 Eastern time, 21:30 UTC.  If you want to watch live, we love it.  But if you can't, and I understand, you like to listen in the car or while you're on the treadmill or whatever, this is always on demand, and that's at GRC.com.  That's where Steve has his audio versions.  He also has great transcriptions from Elaine, as you've heard.  Some people just read the show.



STEVE:  Or they read along.



LEO:  They read along.  I think that's a good idea, actually.



STEVE:  Yeah.



LEO:  We also have audio and video at TWiT.tv/sn.  It's on YouTube.com/securitynow.  It's on every app.  We've got TWiT apps everywhere, including four now on the Apple TV.  If you want to watch, you could do that.  Stitcher, Spotify, iTunes, everywhere.  Just subscribe.  That way you won't miss an episode.  And I know there are lots of schools that use this for curriculum.  Thank you.  Thank you.  This show is, you know, all of our shows are growing, but this show's growing faster than any of them, and it probably has something to do with the subject matter, but I think it also has a lot to do with you.  Nice job, Steve.  Thank you.  If you want to get SpinRite, you ought to.  That's at GRC.com, as well, along with all the free stuff Steve offers all the time, including ShieldsUP!, all that stuff.  Thanks, Steve.  Have a great week.



STEVE:  Next time we'll do, I think, a deep dive techno episode.  So everybody get ready.



LEO:  You know what the subject's going to be?  Or is this...



STEVE:  We'll have some fun.  There's two topics.  There's Australia did a really bad, some sort of chip-and-pin standard that Matthew Green had some fun with, that I haven't had a chance to dig into yet, but I'll see about that one.  And then there's also a horrible security device which is like a residential security system that apparently got everything wrong.  So it might just be a gourmet episode of, boy, are you doing security wrong.



LEO:  And I begged Steve, and I know he's tabling or considering it, to do a block chain episode.  We've done Bitcoin, but block chaining in general.



STEVE:  Yes, we need to, right.



LEO:  Because I think I need to understand better how it's used for things beyond currency.



STEVE:  Yes, and that is a...



LEO:  By the way, we record this Tuesdays, not Wednesday.  The chatroom's saying, what are you talking about?  This is Tuesday, Tuesday, 1:30 p.m. Pacific.



STEVE:  This feels like Wednesday by the time we're done.



LEO:  It's my Thursday, but I don't want to confuse people.



STEVE:  That's all right,



LEO:  Thank you, Steve.  We'll see you next time.



STEVE:  Thanks, my friend.  



Copyright (c) 2015 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.










GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#537

DATE:		December 8, 2015

TITLE:		A Mega News Week

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-537.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm	



DESCRIPTION:  This first week of December brought us the early Christmas present of an amazing amount of interesting and important news.  This entire episode is chockful of reports and discussion of everything that has happened during the past busy week in security and privacy.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  And this was such a big news week, we're just going to spend the whole show talking about kind of a potpourri of big news stories.  We'll kick things off with Microsoft's Patch Tuesday, next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 537, recorded Tuesday, December 8th, 2015:  A Mega News Week.



It's time for Security Now!, the show where we cover your security and privacy.  We wrap it up tightly in a nice double layer of tinfoil, and you're safe forever.  Mr. Steve - by the way, tin, not aluminum.  Mr. Steve Gibson is here.  He is our Explainer in Chief from the Gibson Research Corporation, GRC.com.  He joins us every week for the last 10 years.  It's amazing.



STEVE GIBSON:  Yeah, yeah.  In the show notes for this week, since we're just past the first week of December, I said that we got an early Christmas present of just an unbelievable amount of interesting security news this week.  So there is no - we've done two Q&As in a row in order to have time for some questions in the last two weeks.  And normally I like to do, like, some sort of a focused topic.  But I'm not even sure we're going to get through all the news.  So this is just a pure mega news week episode.  Lots of interesting things have happened.



LEO:  Not what you would have thought.  In fact, didn't we say last week we thought it would be slow for the rest of the month?  Ha.



STEVE:  Right, right, right.  Not so slow.



LEO:  Not so slow.



STEVE:  So just to give people sort of an overview, of course we just had the earliest Patch Tuesday possible because it's always the second Tuesday of the month, and the first of December landed on last Tuesday, which was our previous podcast.  So this is Microsoft's Patch Tuesday.  We've got new machinations that Microsoft is making towards forcing people to move to Windows 10, pretty much whether they want to or not.  Dell, AOL, Lenovo are all in the doghouse for the things they've added to, well, actually Dell and Lenovo for the things they've added to people's PCs; AOL for just - this is chilling, how long there's been a problem with AOL's desktop.



We have news about Let's Encrypt; a brief little comment on one line in President Obama's Sunday address from the Oval Office; some reactions, some early maybe overreactions from France in the wake of their terrorist attacks; and also Kazakhstan is making some noise.  ISIS has an app for Android.  Mozilla has made a couple good decisions and has a new piece of iOS freeware aside from Firefox.  CryptoWall is back with a worse version.  And then a ton of miscellaneous stuff.  So like I said, we've got a lot to take care of this week.



LEO:  You're a busy, busy guy. 



STEVE:  Yes.  And our Picture of the Week is a kick.  Martin Chadderton sent this to me.  He said, "@SGgrc, didn't know you were branching out, Steve."



LEO:  Steve Gibson Ukulele Event.



STEVE:  For those who are not looking at the video, it's a strange blue LED-illuminated sort of like, I don't know, backyard chunk of a fence.



LEO:  A bamboo prison guitar rack.



STEVE:  Yeah, I don't know what that is.  Anyway, I'm certainly not the only Steve Gibson.  Because of my Internet presence, when you google me, I am the first few pages' worth.  But, for example, I'm not Steve Gibson on Twitter, and that poor guy gets my tweets all the time.



LEO:  Oh.  Oh, I didn't know that, oh.



STEVE:  Oh, yeah. 



LEO:  Whoopsies.



STEVE:  He's like, uh, no, you want to send it over here.  It's like, okay.



LEO:  Well, there's a guy, I can't remember, I think it was jim@aol.com, who can't even use his email, of course, because jim@aol.com?



STEVE:  Jim?  Oh.  Well, and I heard you correctly noting on something, maybe it was on The Tech Guy on the weekend.  You were commenting about the problem of using just a name on a domain.  



LEO:  Yeah, yeah.



STEVE:  Oh, it was, it was the military guy, or he was...



LEO:  It was the Air Force, yeah.



STEVE:  ...unable to get his benefits because of the mess-up that...



LEO:  Do you believe that mess-up?  Apparently somebody had signed up on the same government site and must have mistyped the email address.  This guy, the caller thought, well, is it possible for two people to have the same email address?  No.



STEVE:  No.  



LEO:  And so this guy must have mistyped his because it's just a mess.  And of course the Air Force has no way of resolving this.  So what the guy's going to have to do is create a new address and just - I think he can change his address on his account and just do that.  And I don't know what the other guy's going to do.



STEVE:  Your advice was great because you explained that, if you did use something like jim@somedomain, you would immediately start getting spam.  And I've watched GRC's email server, I mean, I've looked at the packet layer, and random servers connect to mine and just do an alphabetic name attack, essentially.  They just go from Abigail to Zeke, right down through every name you can imagine, just hoping to get lucky.  They have no reason to believe any - there's never been a jim@grc.com, but he's trying to receive mail here.



LEO:  Yup.  Same thing at Leoville.  Just goes through all the lists.  It's incredible.  Well, let's go to Kazakhstan, Steve Gibson.



STEVE:  We'll get there in a few.  First, because Microsoft's Patch Tuesday is today, and they don't always release them, well, they don't release them a day early, they release them somewhere in the morning, I never have time now to dig deeply in.  But while the deep dives have been interesting in the past, the resulting admonition is always the same.  Update soon. 



LEO:  Do it, just do it, yeah.



STEVE:  Yeah.  So this month we've got a bunch, 12 patch bundles, and lord knows how many individual vulnerabilities are fixed within each bundle.  Eight of them are critical, so two thirds of them are critical.  The other four are important.  The critical ones are remote code execution vulnerabilities, which, as we all know, that's like the worst.  In Office, Uniscribe, Silverlight, they called it the "graphics component," that's something different than Silverlight, a graphics component.  So that was in the title, and as I said, I didn't dig any further.  DNS, of all things, apparently someone found a remote code execution vulnerability in that and reported it privately to Microsoft.  And JavaScript, or JScript, as Microsoft insists on calling it, and VBScript.



So those are all the critical problems, although - and then also critical problems which may or may not be remote code execution because they didn't elaborate in the title, for both of their browsers, both the Edge and the IE browsers.  So there's a bunch of problems.  You certainly want to get them fixed.  But those problems are dwarfed by Adobe's update to Flash, also today.



LEO:  I'm getting that from Microsoft right now.



STEVE:  Yes.



LEO:  So it's not just - you don't have to necessarily go to Adobe to get it.



STEVE:  Correct.  And in fact, I think - I've never been very impressed with Firefox's update.  It's supposed to, Adobe's supposed to - you can give Adobe the ability to update itself.  It may be...



LEO:  Which you should; right?



STEVE:  Oh, yeah, because it's absolutely time to do that.  We know that both IE and Chrome proactively take responsibility for their users in fetching and installing the latest updates.  But for Safari users and Firefox, you may need to be a little more proactive.  So what Adobe said was "Adobe has released security updates for Adobe Flash Player.  These updates address critical vulnerabilities that could potentially allow an attacker to take control of the affected system."  How many?  78.



LEO:  Oh.  Saving up, are we.



STEVE:  Merry Christmas.



LEO:  Wow.  So now, the update I'm getting from Microsoft is for IE, but will that update Flash in general?  Or is it like Chrome and Firefox, where it just updates it within the browser?  Right?  If you do the Firefox update, you still want to do a general Flash update.



STEVE:  Yes.  And in fact the version numbers that IE updates to is different than the version number that Firefox updates to.  So there's not quite synchronization.  But you can go to, I think it's - just search for "Adobe Flash update."  You'll get a link that you can use to check your version.



LEO:  It's a tester; right.



STEVE:  Yes.  And mine was behind on Firefox, and so I updated and then restarted Firefox, and now - although Flash is - I've set Flash in the add-ons for so-called "click to play," which is absolutely what everyone wants to do.  We've talked about how you can do that over in Chrome.  There's the setting there.  And in Firefox, what that does is it shows a little Lego block.  That's the icon that Mozilla chose.  And so it's just a sort of a gray panel with a Lego block saying there is a Flash object here, which we didn't fetch, and we're not rendering, unless you explicitly say that you want to do that.  And then when you click on it, you get another dialogue, in the case of Firefox, that says, oh, you sure you want to do this?  And you can say yes or no and so forth.



So that click-to-play is crucial because any advertisements that you do display, great to go have the browser fetch it.  Then it's going to see that it's trying to mess with Flash and then say, whoa, okay, hold on, that's a bridge too far.  So again, 78 potential critical vulnerabilities...



LEO:  Amazing.



STEVE:  ...that can allow an attacker to take control of your system.  I think you want to keep Flash updated, just on the off chance that you use it for something.  By the way, I did see, someone tweeted me the news - and thank you, whoever you were - that there's a beta.speedtest.net which does not use Flash.  Speedtest.net was one of many bandwidth-testing sites, but you had to lower your shields and allow it to run Flash because it was a Flash-based test.  They have an HTML5-based test.  I also saw someone say, although I didn't have a chance to follow it down because I was furiously putting all this together last night and all of this morning, that Adobe themselves are officially encouraging HTML5 authoring over Flash.



LEO:  Yeah, this was the big news last, or, yeah, I guess it was last week.



STEVE:  Oh.



LEO:  So they are now - let me see if I can find the story, just so I don't...



STEVE:  Now, last week...



LEO:  Basically they're deprecating Flash.  But we talked about that.



STEVE:  Yeah, exactly.  We talked about they had renamed it from Flash, whatever it was, studio, to Content Creator or something, I don't remember what it was.  We talked about it last week.



LEO:  Right.  I think that's what I'm talking about.



STEVE:  So maybe that...



LEO:  Yeah.  Yeah.  Basically, if you're using Adobe Creative Cloud, they're telling you don't - you're not going to be coding in Flash.



STEVE:  Right.



LEO:  You're going to be coding in something else from now on.



STEVE:  Right.  And they're saying we're not abandoning Flash, for those who for whatever reason need to keep using it.  But you're right, its days are clearly numbered.  And, for example, the advertising whatever, the IAB is also saying use HTML5, don't use Flash.  And as we said last week, the fact that you can't run Flash on iOS, period, means that... 



LEO:  Yeah, that was the nail in the coffin.



STEVE:  Yes, yes.  Especially when you look at the Black Friday sales through iOS devices.



LEO:  Oh, yeah.



STEVE:  Clearly, advertisers want their ads to operate in mobile platforms.  So that's a really nice side effect of Jobs making a decision that he absolutely will not allow Flash to run on his iPhone, and then later the iPad.



So speaking of absolutely refusing to run something, many users of Windows 7 and 8.1 are absolutely refusing to upgrade to Windows 10.  Microsoft, however, is not taking that lying down.



LEO:  I saw this story.  I was kind of shocked.



STEVE:  Yeah.  So several things are going on.  There is a really neat tool, which I've just loaded after learning of it, called GWX Control Panel.  GWX, of course, is the abbreviation for Get Windows 10.  GWX is the thing that Microsoft has been installing in people's machines since, what, early summer.  Remember the whole "reserve your copy," like as if they were going to run out.  And it caused people concern.  They thought it was malware, what's all this.  And then people have been discovering that 2GB of Windows 10 binary has been downloaded into their pre-Windows 10 machines without their knowledge or permission, Microsoft just saying, well, you know, we're going to get you sooner or later.  We'll send Windows 10 to you so that it's just a button-click away.



Anyway, this guy Josh Mayfield has GWX Control Panel.  It used to be called, it was formerly known as "GWX Stopper."  But he's renamed it as it's become more capable.  He just recently updated it on November 24th so that it had the opportunity, or the feature, of running continuously in the background because what his users of previous versions, where it just checked on demand, they were reporting that their endeavors to say no, I don't want Windows 10 were being reenabled.  Which is to say Microsoft was flipping these switches back on to override their explicit request not to get Windows 10.



So with this update - and by the way, this is free.  He does have a PayPal donate button.  And I'd drop him a couple bucks if you think it's worth it.  I'm very impressed with it.  I just gave Wikipedia a bunch of money because they've been asking, and I use them so much that I wanted to support Wikipedia.  This guy says only about one in a thousand downloads ever pay anything for it.  So it'd be nice to support him, if you think it's worth it.



So this runs in the background.  And since the update he's been getting much more feedback from his users, confirming that Windows is trying everything it can to ignore these settings.  And Microsoft themselves have said that, starting, like I think they said this month, and in fact I carefully scrutinized that block of today's Patch Tuesday downloads to see whether they had snuck in what they had said they were going to.  And the idea was they were going to move this from an app in your tray, which you can say no thanks, or it keeps annoying you and so forth, they were going to actually move it into an optional download category of Windows Update.



And so this redefines Windows Update from patching the current version of Windows to upgrading you to Windows 10 because Microsoft, for whatever reason, is desperate for us, you know, to get everybody over to Windows 10.  And then, sometime in 2016, the plan is that they're going to move it from an optional update to a recommended update, to again further up the ante.  And that means that users who don't look through the list of recommended updates, and most users don't, you just say, oh, yeah, fine, I want all of my monthly updates, it'll be enabled by default.  You'll click yes, and you'll be downloading the permission for your system to be updated to Windows 10.



Now, you will be told before this happens.  So it takes more than just downloading this update.  So there will be a chance to say no.  But essentially Microsoft is flipping all of the defaults in the direction of getting Windows 10.  And of course one of my trademark concepts on the podcast is I call it the "tyranny of the default" because defaults tend to be what people use, and they rule the day.  So Microsoft really, really, really, really wants everyone to move.  And from their standpoint, I totally get that it is a huge burden on them to continue backporting all of the changes that they're needing through multiple versions of Windows.



My problem is that Windows 10 is something I actively don't want.  I mean, I absolutely don't want it.  So it's not like it's something that's like, okay, yeah, fine.  I mean, I absolutely don't want it.  And so the idea that Microsoft is pushing something on people which we've already talked about, the various controversial aspects of it.  I know Paul rolls his eyes; but it's like, okay, Paul, you're welcome to your opinion, and I am to mine.  And I know a lot of people are with me.  And it's like saying, no, that's not what we want.  And so there is freeware to turn off all of this excessive communication that Windows 10 does back to the mothership.  And so my problem with them pushing it this hard is that it's really something I don't want, and they're making it really hard not to get it by mistake.



LEO:  You're safe because you're not using 7 or 8; right?  Or are you?



STEVE:  Right, I'm still, no, I'm happily on XP still.



LEO:  So don't worry.  They're not going to force you.



STEVE:  No, but in fact you and I are talking through Windows 7 right now because I have Windows 7 machines all around me, just not - and I would be using Windows 7 on my main system if it were easy to switch to it, but it's not.  Microsoft has never made changing versions actually work.



LEO:  Well, here's the good news.  Microsoft's never made it so easy to go to Windows 10.  Yeah, actually the thing that's even more disturbing, and Paul and I have talked about this, and he's just as disturbed, is there seems to be some number of people, it's hard to confirm, that are actually getting upgraded whether they want to or not.  They're actually being moved to Windows 10.  My suspicion is it's kind of along the lines of what you just talked about.



STEVE:  Defaults.



LEO:  They're just saying, yeah, I want updates, and getting it by accident, although...



STEVE:  The dialogue...



LEO:  ...it seems that it should warn you a few times, you know we're upgrading your operating system.



STEVE:  But again, remember what Microsoft has demonstrated is they want it installed.



LEO:  Right.



STEVE:  I mean, that's what they're showing us.  And so it's not going to give you multiple opportunities because it really wants to override the user's choice.  I mean, if it's flipping the switches back on, and Josh confirms, now that he has a monitoring tool, he said starting the beginning of this month, December 1st, he started getting a flood of reports from people saying, "I had turned that off, and it's back on again."  And apparently several times a day it gets flipped back on.  So he's now digging in.  This is just recent, so he's digging in to figure out what's going on.



But really I could recommend this GWX Control Panel.  I have it installed on my Win7 now.  It's very nicely written.  You can get it as an installer or just a standalone, if you don't like installers.  And it shows you, oh, just it's neat.  It shows you whether the directory where Microsoft stages the Windows 10 files exists yet or not.  So, like, have they snuck the binaries in behind your back?  And a bunch of other information.  So it's super nice, GWX Control Panel.



LEO:  Nice.



STEVE:  So now a series of disturbing add-ons by OEM vendors of machines.  We've of course now for several weeks been talking about Dell's disastrous inclusion of a certificate which included the private key in all of their systems that were recent and that had been upgraded.  They responded and fixed that.  However, they didn't actually address the main problem.  LizardHQ.org, back at the end of last month, took a look at the disposition of the so-called Dell Foundation Services after that patch was applied.



It turns out that it still, right now, starts an HTTP server which listens for connections on port 7779.  They fixed this so-called "service tag leak" previously by removing the JSONP API.  That's the JSON with Padding sort of convention for passing information back and forth API.  But now there's this web server running on port 7779 which offers a SOAP service.  SOAP is a protocol that runs on top of HTTP, which is S-O-A-P, stands for Simple Object Access Protocol.  And it's been around now for years.  And it's sort of a - it's a simple way of using the web connectivity to do way more than just web page stuff, to basically use it for any kind of client-server transactions.



So it happens that over the SOAP service, which is running on this web server, which is started by Dell Foundation Services by default, listening on this port, after all of the recent kerfuffle, you are able to perform a complete WMI - that's the Windows Management Interface - enumeration of the system, which allows anyone who can connect to that port to query for the system's hardware, installed software, running processes, installed services, accessible hard drives, file system metadata, filenames, file sizes, dates, and more.  Basically, it is a powerful sort of scriptable API to give you complete access to the user system.  You can do pretty much anything you want through the Windows Management Interface.



And this is where I remind people to, first of all, to sort of take a breath because hopefully we're all behind our own border router.  We're behind a NAT router, and that's preventing an open port on any system in our LAN from being visible externally.  But of course that also assumes that there have been no holes punched through the router which Universal Plug and Play makes trivial to do.  For example, famously, the Xbox uses UPnP in order to do port mapping through a typical consumer router so that it's able to get unsolicited incoming packets over to the Xbox.  There are legitimate reasons for doing that.



The problem is, as we talked about years ago, when UPnP first surfaced, and I said, oh, this does not look good, because there was no security model with it at all.  It was just there, and anybody on the LAN could probe for Universal Plug and Play service and get essentially low-level access to the port mapping in the router.  So hopefully everybody is behind a router and has disabled Universal Plug and Play, which does then transfer to you the burden of mapping ports manually that the UPnP interface would otherwise do for you automatically.



Unfortunately, there's no middle ground.  You either have it on or off.  And if it's on, you have no control over it whatsoever.  And you can't even see in the router's browser-based interface what UPnP has happened behind the scenes.  The UI doesn't show you those things.  So there's not even a way to manage it.  It's just it's always been a disaster.  On the other hand, it turns out that this LizardHQ group, who found this port 7779, I guess I'll call it a vulnerability because it's really bad, turns out that our friend the Shodan search engine finds many vulnerable hosts on the Internet.



So somehow there are Dell systems running the Dell Foundation Services, not behind any kind of NAT or firewall.  It's probably the case that Dell Foundation Services does open ports through its local Windows Firewall so that it can be accessed from the outside.  But they probably aren't able to access through someone's NAT router, and we know they can't if you've got Universal Plug and Play disabled.  On the other hand, it is accessible through the LAN because your router won't protect Intranet access among devices.  So potentially, in a large corporate environment, this could be a problem.



So, boy, you know, just what we're seeing is we're seeing our OSes finally getting bolted down, where, I mean, it took a long time for Microsoft to get the clue about how to make their systems secure.  It took until Service Pack 2 of XP, after they had 98 and Windows 2000 out on the consumer side, to finally turn a firewall on in order to foreclose all the open ports that they had that caused NIMDA and Code Red and MS Blast Worm, all of these problems that we had fun explaining in the early days of the podcast.  That's finally calmed down.



Unfortunately, none of those lessons have been learned by the OEMs, who are now essentially repeating all of those mistakes by saying, oh, well, we're going to add Foundation Services, which probably nobody even wants, but it's there, running on everyone's newly purchased Dell machine, creating this kind of vulnerability behind everyone's back.  Not good.  Oh, boy.



And here's one.  Actually, I'm going to do this a little out of order because I'll stay with the corporate faux pas.  Lenovo is back with another problem.



LEO:  Come on.



STEVE:  And actually hauntingly similar.



LEO:  Aw.



STEVE:  Yes, yes.  Now, this is the Lenovo Solution Center.  Lenovo is in a panic right now, telling everyone to turn it off, stop running it.  Because it turns out, when you run the Lenovo Solution Center, which is one of those icons that's installed down in the tray, that's all part of the value-add that Lenovo provides, it creates a process called the LSC, for Lenovo Solution Center, Task Service.  And that task service runs with full admin rights.  It opens port 55555, five fives, and listens for incoming connections on that port over an HTTP protocol.  So it can be instructed via GET and POST HTTP requests to, get this, execute code in a directory that a local user can access.



It can also - it executes with full privileges and can execute programs found in an arbitrary location on disk, which the user can write to so that any malware placed there will be executed with admin rights, and it can be induced to perform remote transfers.  And finally, any visited web pages are able to pass commands to that local LSC web server to execute with full privileges because we now have in JavaScript the ability to access whatever ports we want to on localhost.  That is blocked in Edge - no, no.  It was going to be disabled by default.  But at the last minute, Microsoft left it enabled.  It is a setting where you can block localhost servers.



So essentially what we have is another big problem with Lenovo where, very similar to Dell, they are opening a port and listening for connections.  And behind it is a powerful abusable server which, I mean, again, echoes the mistakes that Microsoft was making for years.  Now the OEMs are making similar mistakes.  Wow.  And we have search engines like Shodan that's out there enumerating them, listing them.  So it makes them easy to find.



LEO:  So sad about Lenovo because...



STEVE:  Yeah, boy, yeah.  Okay.  So AOL Desktop.  I don't know, actually I do know at least several people who are non-techie friends that still have AOL email accounts, and they still use the AOL Desktop.  I look at their computer, and they think it is the Internet.  It's like, well, this is my Internet.  Okay.  So we have to turn the clock back to understand this because the AOL Desktop dates from 1993, so way back when no one had high-speed Internet connections, when AOL was operating over a dialup modem.



In order to provide a rich environment, this AOL Desktop environment, they designed their own scripting language, which is called FDO.  FDO stands for Form Definition Operator.  And in AOL's FAQ they said:  "AOL communicates using this programming language.  For example, after clicking any icon or button in AOL, FDO code is sent by the AOL system and interpreted by your AOL to create a window.  So the FDO language is the language used to describe forms on the AOL client, that is, the AOL Desktop client.  This site has focus on learning how to program in FDO" - they actually documented this back in the day - and they said, "and provides a surfeit of examples and tutorials" - there's a word you don't hear often - "for those who want to learn."



So essentially AOL created a homemade protocol which was designed to minimize its bandwidth utilization.  It is a compiled-into-bytecode language.  So what you see going over the line is bytecode, basically hex binary blobs which represent verbs and then have arguments following them, which the AOL Desktop interprets.  What has just come to light is that there is no authentication on the protocol.  It runs, not over SSL, but over a plaintext connection.  And anyone who is able to interfere with the connection, a man in the middle, is able to alter and inject, because there's no authentication of encryption, any scripting of this FDO language that they wish.  They're able to cause the desktop to go fetch files and run files.



So it completely opens AOL Desktop users to a massive breach of their security.  There are tokens, they're the fm_* series of tokens, "fm" for file management, which allows the script to cause the client to read and write files on the Internet.  And there's a token 0d19, which is the async_exec_app opcode, which tells it to go run an app, a file, on your system.  So essentially, ever since - and this has been in place since 1993.  It's still in use today and exposing anyone using AOL Desktop to this kind of power.



So once again, well, this is sort of a different sort of mistake.  This is a system that was never secure, back in a time when really we weren't nearly as focused on security as we are now.  So it's legacy insecurity and way too much power in today's Internet, where we have lots of people who could easily make an AOL Desktop, an FDO script sniffer, see when somebody has traffic using AOL Desktop, and then use it in order to get a wedge into their system.  Oh, and under "mitigation advice," it was "uninstall AOL Desktop."  Meaning you don't need it anymore.



LEO:  I get a lot of calls about it.



STEVE:  Do you, do you.



LEO:  Well, yeah, you know, the radio show.  Understand we get a lot of older people who probably, I mean, there's still people who use NetZero and all sorts of weird, you know, WebTV.  And it's hard.  You always want to say, when somebody says, well, I'm having trouble with my AOL, you always want to say, please, please.  The answer is get rid of it.  But, now, the Desktop, that's really old.  That one I think you could safely say just use the web version.



STEVE:  Have you seen it?  Looks like Romper Room.



LEO:  Oh, yeah.



STEVE:  It's just, I look at it, and I go, oh, wow.



LEO:  Even AOL replaced that essentially with AOL.com long ago.



STEVE:  So that you go to their website instead of using the Desktop.



LEO:  It has the same functionality.  I don't know if it's AOL.com anymore.  But for a while the web portal had the same functionality as the Desktop.  Even to their "You've Got Mail" and all that stupid stuff.  Hey, by the way, I don't know, it's not on your rundown, but Wired magazine thinks they found Satoshi Nakamoto.



STEVE:  Wow.  Again?



LEO:  Yeah, again.  But this one, remember, it was Newsweek who famously fingered some poor old Japanese fellow who really didn't know what was going on.  This one's a little more credible.  It's an Australian fellow, Craig Steven Wright, and there's a...



STEVE:  We should remind people who that is, if they don't recognize the name.



LEO:  Oh, inventor of Bitcoin.



STEVE:  Yes.



LEO:  Guy who published a paper in 2009, anonymously, under the name Satoshi Nakamoto, that effectively created Bitcoin, did the math and all of that stuff.  And, boy, the evidence, I'm just looking at all the evidence they have, including his use of a PGP key that is tied to Nakamoto.  So he said, if you want to get in touch with me - this is back in 2008 - use this PGP public key.  And that's the same public key used by Nakamoto on his Vistomail address.  So it's pretty hard, you know, either he is Satoshi Nakamoto or is trying, and has been trying since before the paper came out, to convince people he's Satoshi Nakamoto, and has built a paper trail.  It's really interesting.



STEVE:  Wow.  And, well, it'll be fun to see how this develops because I would like to understand why he's hiding.  I mean, like, why does he want to stay under wraps?



LEO:  Kind of hiding in plain sight.  He even says that.  They lead off with his appearance at a Las Vegas Bitcoin Investors Conference in which the moderator says, why are you on this panel?  And he said, well, I have a couple of masters, a couple of PhDs.  And then...



STEVE:  I invented Bitcoin.



LEO:  Well, and then the article goes on, one of the panelists said, well, how did you first learn about Bitcoin, as if trying to determine Wright's significance.  Wright paused for three full seconds.  "Um, I've been involved with all this for a long time," he stuttered.  "I try and - I keep my head down."  He seemed to suppress a smile.  The panel's moderator moved on.  But basically the suggestion Wired makes is he really just wanted to say "I am Satoshi Nakamoto."



STEVE:  This is just good.



LEO:  But there's his post, his blog post the morning before the Bitcoin paper came out, saying it was going to come out, a post which has since been taken down, but caches exist.  I mean, there's a lot of evidence.  So I'll let you review it.  But the article just came out today, like an hour ago.  And pretty interesting.



STEVE:  Wow.



LEO:  It's just a fun game.  It doesn't really matter.



STEVE:  Yeah, it is, it is.  So Let's Encrypt public beta has gone live.  So it is now officially live.



LEO:  Fantastic.



STEVE:  Yes.  And a bunch of sites are using it.  There's even a - and I thought I had it in my notes.  I know I captured it, but I'm not seeing it here.  There was a government site, I think it might be - it had a funky URL because it was https://https again, dot I think it might be cert.org.  I'm not sure that it was cert.org or .gov.  I don't have it written down.  And some people were confused because they didn't get the double https part.  But they're issuing certificates, and I've seen a lot of feedback from our listeners who have been really, really pleased with it.



So what's happened is a really nice ecosystem is already beginning to form around it.  The protocol is ACME, A-C-M-E, which is the way, the protocol you use for interacting with the Let's Encrypt service, where you ask it for a certificate for the domain.  It sends you a challenge, which you answer by demonstrating you have control over the domain.  You say, okay, I'm ready to have you verify my challenge.  It does that.  Then it gives you the certificate and so forth.



So basically we've automated the entire domain validation, that is, the lowest level of assertion of identity, just saying that this is a server that has control of this domain, which is exactly what we want.  It's not the OV, the Organization Validation, or the EV, the Extended Validation, where much more background checking is done, that really does need some human aspect to verify, like people call your phone number and verify that you're a corporation operating at the phone number that's available in your WHOIS, or Dunn & Bradstreet records and so forth.  So this is just saying, I'm a server that is on this DNS name.  I want a certificate so that I can offer, now and forever, TLS, HTTPS connections.  This now makes that for the first time automated and free.



Now, what's cool is this ACME protocol is in the process of being IETF standardized.  So it's going to be a standard protocol of the Internet.  And we're seeing an ecosystem already sprouting up around it.  There is a way to issue certificates using Let's Encrypt for Windows, which was not initially supported.  It was Linux and Nginx were the two out of the gate.  But now both IIS and Apache, when Apache's hosted on Windows, have add-ons that allow them to use the Let's Encrypt system.  There's even a command line free certificate generator.



So there's a project called Let's Encrypt No Sudo, you know, no S-U-D-O.  And the guy writes on GitHub:  "The Let's Encrypt initiative is a fantastic program that offers free HTTPS certificates.  However, the one catch is that you need to use their command program to get a free certificate.  The default instructions all assume that you will run it on your server as root, and that it will edit your Apache/Nginx config files."  He writes:  "I love the Let's Encrypt devs dearly, but there's no way I'm going to trust their script to run on my server as root, be able to edit my server configs, and have access to my private keys.  I'd just like the free SSL certificate, please.  So," he writes, "I made a script that does that."



So lots happening.  There is also on GitHub, it's GitHub.com/kuba/simp_le.  And that's a Simple Let's Encrypt client.  So I expect we're going to see a bunch of this happening now.  And the days of having to pay every couple years anything for just a DV certificate are over.  And the curmudgeonly grumbling about, well, I don't want to offer security because I don't want to support the whole public key infrastructure system and sort of the Richard Stallman belief system, there's really no justification for that anymore.  So this does what I think we've been hoping for, and that is, it removes any additional barriers from someone being able to say, yeah, I want to be able to have my server secured.  It's free and automated, and that's going to be a good thing.  I think a year from now the terrain is going to look very different than it does today.



And speaking of that, I listened to President Obama at 5:00 p.m. Pacific time, 8:00 Eastern on Sunday.  And I paused and backed up and listened to a few times one sort of chilling line.  I don't know what it means.  I just wanted to put it into the record.  We'll be waiting to see what it means.  But quoting him, he said, and I'm just jumping right in the middle here, said:  "And we constantly examine our strategy to determine when additional steps are needed to get the job done ... and that's why I will urge high-tech and law enforcement leaders to make it harder for terrorists to use technology to escape from justice."  Of course this is in the wake of the San Bernardino attacks here in Southern California and the most significant terrorist-inspired attack since 9/11.



So anyway, we were celebrating not long ago that the administration had come down in favor of the overwhelming majority of academic and industry technologists and crypto people, saying, look, backdoors don't work.  This is a bad idea.  And now we have the President saying high-tech and law enforcement leaders need to make it harder for terrorists to use technology to escape from justice.  So as I have said before, we live in interesting times.



Meanwhile,  France is considering blocking Tor and public WiFi after the Paris attacks.  Now, this is just-proposed legislation.  And like the legislation we've talked about that's sort of being ruminated over in England, this isn't law yet.  But, oh, and I should mention that, when I was looking at this, this was a story on The Verge, there was something over on the side panel that caught my attention, which was news of - it was a little animation, and because it was moving it caught my eye, of a flamethrower mounted on a quadcopter.  And that led to the question of drone-mounted firearms.  And I thought, what?  But this is something that never got on my radar.  Apparently this was back in July.  Anyway, we're deferring this to the miscellany at the end of this podcast.  But it leads to some interesting concerns.



So what The Verge wrote was that French security forces have drafted proposals that would ban public WiFi and access to the Tor network.  And actually this was reported in the French newspaper Le Monde.  And I went there, and it was all French to me.  So I had to take The Verge's translation, which cites internal documents from the Ministry of the Interior.  And there are two different proposals.  I'll make clear what they are and how they work in a second.  The antiterror proposals come three weeks after Islamic extremists killed 130 people and injured more than 300 in a series of attacks across Paris, which of course we all know about.



"According to Le Monde, the documents outline two legislative proposals that French police and security forces would like to implement in the wake of last month's attacks."  [Yabba dabba do in background]  And I forgot to silence one of my devices.



LEO:  All right, everybody.  Everybody run and buy a copy of SpinRite, and we'll hear a lot more Fred Flintstone.



STEVE:  Sorry about that.  I run around before the podcast and turn everything off so that we're not being interrupted.



LEO:  It's great.  I actually love it.



STEVE:  It is fun.  It drives my brother-in-law out of his mind.  Whenever I go up for the holidays, he'll, like, pick me and Jenny up at the airport for this little shuttle ride over to San Mateo.  And if Fred ever does a "yabba dabba do," he just says, "That really bugs me."  You know, since it's his house, it's his rules, so I silence my phone for the duration.



LEO:  A buzz is all you need.  You don't need the sound.



STEVE:  So anyway, so The Verge continues, saying one of these pertains, one of these legislative proposals pertains to the country's current state of emergency protocol - actually, I think I wrote this after figuring out what the difference was.  The other concerns France's counterterrorism laws.  Both could be formally presented as early as January, next month, the newspaper reports, adding that the ministry has yet to decide on the measures they outline.  So again, nothing except a proposal.  So on the Tor side, this would be non-emergency counterterrorism, meaning that it would be permanent.  The emergency measure is just for now and has been extended for an additional three months.



But the point is those provisions, under the emergency measures, would ultimately expire.  So but this Tor, this potential Tor ban they're proposing would not be that.  It would be part of the permanent counterterrorism measures, which would forbid and block communications over the Tor network within the country.  And it also includes a measure that would oblige VoIP services to hand over - and of course VoIP, that's phone.  That's smartphones.  They're all VoIP.  Well, I guess they're not, technically.  They're still cellular, aren't they.  Anyway, so I'm not sure how far this extends - would oblige VoIP services to hand over encryption keys at the request of the government.  And the Tor project, which runs of course the Tor network, did not immediately respond to a request for comment.  For what it's worth, China has been blocking Tor since 2012, and both Iran and Russia have been targeting Tor, as well.  But all three of those countries are very different than France.



LEO:  Understand, though, this is the equivalent of our Director Comey at the FBI saying, "You know, we really ought to ban encryption."  It's just the law enforcement people saying we would like this.  So far there's been no move to make this the law.



STEVE:  Right.



LEO:  But you're right, I mean, we have to keep an eye on these things.



STEVE:  Keep an eye on it.  Now, what's really interesting is the second part because I just - I have always come at this stuff from a technology standpoint.  And that's this public WiFi blocking.  The measure to block free and shared WiFi connections falls under the proposed state-of-emergency changes, which would mean that it's temporary while the state of emergency exists.  "The documents obtained by Le Monde argue that public WiFi networks should be blocked because it's difficult for security forces to identify users connected to them."  Yeah.



"Police also proposed changes that would allow them to search vehicles and luggage without consent and to conduct identity checks without providing justification."  And it goes on, but that's the gist of it.  So again, it's like, wait a minute.  You, like, loudly proclaim that everyone offering free and shared WiFi needs to discontinue that?  I mean, I guess. You just make sure everyone...



LEO:  Just in case of emergency.



STEVE:  Yeah.  But, like, exactly.  Under the current state of emergency.  So it wouldn't be permanent.  That measure would expire if it were ever even to pass once the state of emergency had been - was no longer in place.



LEO:  Well, you know, Donald Trump said we've got to call Bill Gates and turn off the Internet.  So...



STEVE:  Has he said that?  That one I hadn't heard.



LEO:  Oh, this is yesterday.



STEVE:  Oh, I heard a lot yesterday, but I didn't hear...



LEO:  I'll find and play the clip for you.



STEVE:  Oh, he actually said "Call Bill Gates"?



LEO:  Yeah.



STEVE:  Oh, lord.



LEO:  It doesn't - I hope it doesn't matter.



STEVE:  It's just entertainment.



LEO:  It's just entertainment at this point.  God, I hope it doesn't matter.



STEVE:  Wow.  Now, here is another little interesting tidbit.  The Republic of Kazakhstan - Kazakhstan?  How am I...



LEO:  Kazakhstan.  That's where Borat comes from, yeah.



STEVE:  Kazakhstan is considering requiring all Internet users to install new communications certificate.  We know what that...



LEO:  Oh, who issues that?



STEVE:  Yes, and we know what that means.  We've been talking about this.  On the smallest scale, your corporation requires you to install a communications certificate so that they can decrypt encrypted traffic at the corporate Intranet border to do deep packet inspection, which is otherwise impossible, unless they're able to decrypt your connection.  And that requires that they be able to proxy the connection to a remote secure server and have your browser be happy with that.



The next stage of concern is where, and we've discussed this, and I'm not looking forward to the day that I read this blurb of news into this podcast, where an ISP has decided that they're going to require all of their subscribers to install a certificate in their machines.  But I hope that day is not coming.  Now we have the larger sphere, where a government requires that all of its citizens install the government communications certificate in any device which they wish to use for communication outside the country.  That's what this is.



This was posted on November 30th. Now, it's significant that it has since been taken down.  We don't know now the - I grabbed the link.  I grabbed the text the moment it got posted, and it's gone now.  So I don't know what's happening behind the scenes.  But so this reads, and the English translation is rough, but this is what it is:



"Kazakhtelecom JSC notifies on introduction of national security certificate from 1 January 2016," meaning, and this was meant to be a one-month notice, a 30-day notice.  "From 1 January 2016, pursuant to the Law of the Republic of Kazakhstan Committee on Communication, Informatization and Information" - well, it says information and information - "Ministry for investments and development of the Republic of Kazakhstan introduces the national security certificate for Internet users.



"According to the law, telecom operators are obliged to perform traffic pass with using protocols that support coding using security certificate, except traffic, coded by means of cryptographic information protection on the territory of the Republic of Kazakhstan.  The national security certificate will secure protection of Kazakhstan users when using coded access protocols to foreign Internet resources.



"By words of Nurlan Meirmanov, managing director on innovations of Kazakhtelecom JSC, Internet users shall install national security certificate, which will be available through Kazakhtelecom JSC Internet resources. User shall enter the site telecom.kz and install this certificate following step by step installation instructions," underlined Nurlan Meirmanov.  "Kazakhtelecom JSC pays special attention that installation of security certificate can be performed from each device of a subscriber from which Internet access will be performed - mobile telephones and tabs on base" - that one got me - "of iOS/Android, PC and notebooks on base of Windows" - oh, so base is operating system - "PC and notebooks on base of Windows and Mac OS.  Detailed instructions for installation of security certificate will be placed in December 2015 on site telecom.kz."  Signed the PR Department of Kazakhtelecom JSC.



So it's not clear whether this was put up.  They're saying that it's pursuant to a law.  What backlash this may have generated, whether it's still in place and moving forward.  But it's clear that what this said was that they're going to, that Kazakhstan is going to be installing decrypting proxies of exactly the sort we've been talking about being installed on corporate Intranets at all of the Internet connections to the country and so that only communications encrypted under their certificate, which all users inside the country who wish secured egress from the country will be required to use, only their certificate will be allowed to pass through that international border.  So if anyone doesn't have their certificate, and just tries to connect to some remote secure service, it'll be blocked at the border.  You'll need to get their certificate in order to access the secure Internet outside of Kazakhstan.  And so, again, I hope we are not seeing the beginning of wider spread of this.  But this is the way it would look.



LEO:  Here's what candidate Trump proposes.  See if I can get this to play for you.  It's just a 20-second clip.



STEVE:  Yeah.



LEO:  It's not playing.  I guess it's something to do with Flash, no doubt.  Oh, well.  I'll have to...



STEVE:  Keep working on that, and I've got...



LEO:  If he starts talking, just shut up.  That'll be the new requirement, incidentally.



STEVE:  So, okay.  Oh, boy.  So now ISIS, the infamous Islamic State, has released its own smartphone app.



LEO:  How do we know this is really from ISIS?



STEVE:  I'm sorry?



LEO:  How do we know it's really from ISIS?



STEVE:  Well, Telegraph.co.uk reports that "The Islamic State has released its own app for Android smartphones, which it uses to spread propaganda, including videos of beheadings and messages about terrorist attacks in various parts of the world."



LEO:  I guess it is.



STEVE:  "The existence of the app was uncovered by the Ghost Security Group, which is a vigilante collective which has been aiming to and has been disrupting ISIL's online operations.  Rather than using the Google Play Store, which of course would allow Google to take such an app down, ISIS is distributing installation links through encrypted Telegram App messages.  Although thousands of Twitter accounts have been taken down, and Telegram has banned dozens of ISIL channels already, the use of its own app" - that is, Telegram - "would allow ISIL to avoid" - or, I'm sorry, use of its own app, that is, this app that ISIS has developed would allow it "to avoid such attempts to police and block its communications."



So you're right, I don't know how, I don't know what evidence there is that this is ISIS.  But it certainly makes sense, unfortunately, that they would say - so essentially what this means is that they now, rather than using Twitter and other outlets to post their propaganda, which are then quickly responded to and taken down, they're using those outlets to post links to an app that then allows them to establish their own channel.



So unfortunately, what we've seen is that this group is taking advantage.  In the U.S., at least, we're constantly talking about how they have much better social media than our own government does.  And they leverage social media with a great deal of skill.  And so it's hardly surprising that they're going to develop an app that allows them to establish a persistent connection.  Hopefully there'll be a way to respond to it and block it and thwart it.  But, again, it's the technology being used.



I was glad to see this.  Mozilla has cancelled its plans for browser-based advertising.  We talked just last week about how well Mozilla was doing with its, what was it, $330 million, something like that, that it had generated in 2014, and that the numbers for 2015 weren't out yet, but we would see those early next year, and they were going to be even better.  And this is after their contract with Google expired because they are doing web-browser associations in other countries with search engines, Yahoo! and Baidu and in some cases Google on a nonpaid basis.  So I was really glad to see that Darren Herman, the VP of Content Services, did a blog posting, what, four days ago.  And it's short, so I'll just share this in its entirety because it gives also a sense for where they are.



"One of the many benefits of the web is the ability to create unique, personalized experiences for individual users.  We believe that this personalization needs to be done with respect for the user, with transparency, choice, and control.  When the user is at the center of product experiences, everyone benefits.  Over the past two years, we've ideated" - whatever the hell that means - "built, and scaled a content platform that respects users.  We served tens of billions of pieces of content.  We experimented with all content, including advertising.  We proved that advertising can be done well while respecting users.  We have learned a ton along the way.



"Our learnings show that users want content that is relevant, exciting and engaging.  We want to deliver that type of content experience to our users, and we know that it will take focus and effort to do that right.  We have therefore made the decision to stop advertising in Firefox through the Tiles experiment in order to focus on content discovery.  We want to thank all the partners who have worked with us on Tiles.  Naturally, we'll fulfill our current commitments as we wind down this experiment over the next few months.



"Advertising in Firefox could be a great business, but it isn't the right business for us at this time because we want to focus on core experiences for our users.  We want to reimagine content experiences and content discovery in our products.  We will do this work as a fully integrated part of the Firefox team.  Finally, we believe the advertising ecosystem needs to do better.  We believe that our work in our advertising experiments has shown that it can be done better.  Mozilla will continue to explore ways to bring a better balance to the advertising ecosystem for everyone's benefit, and to build successful products that respect user privacy and deliver experiences based on transparency, choice, and control."



So, yay.  I wouldn't have minded the advertising tiles if it kept my favorite browser alive.  But clearly they've decided they don't want to do that.  They want to sort of maintain at least some purity, I guess limited only to the paid default search engines in the browser, which I think that's a nice tradeoff.  So I'm glad for that.



And also, just today, they released Focus, which is the Mozilla content blocker for iOS9, of all things.  Now, I'm a little puzzled by it because, for example, many people tweeted to me over the last week that Firefox was now available in the U.S. iOS iTunes store.  I did know that, and I tweeted the news last week sometime.  So this thing doesn't work in their own browser.  And apparently it's because their browser doesn't have, apparently doesn't have access to Apple's content blocker API.



LEO:  Right, that's right, yeah.



STEVE:  Yes.  Which only Safari has.  So what Mozilla has essentially done, for reasons I don't really understand, is to create a kind of a weak "me, too."  It's simple to use, so it's not feature replete the way our favorite, 1Blocker, is.  They call it Focus.  And they say it helps you improve the privacy and performance of your mobile browsing experience.  You control what types of page content are allowed.  It is free.  It's based on Disconnect.me's open source block list.  So it's based on that list, as are many of these, although of course 1Blocker is based on EasyList and a whole bunch of other things, and lots of user control, which is why it's the power user tool of choice.



So you have five just toggles:  block ad trackers, block analytics trackers, block social trackers, block other trackers, and block web fonts.  So you can choose to turn those on or off.  In the screenshot sample that I saw, they were all on.  I don't know whether they default to on or not.  I imagine that they do.  And of course the content blocking itself you need to manually turn on in order to get that added to Safari.



And by the way, Leo, I'm having all kinds of - I was listening to Andy complaining, or maybe it was, no, I think it was...



LEO:  It was Jim Dalrymple.



STEVE:  Jim.  And, you know...



LEO:  He was angry.



STEVE:  I was glad to hear it because iOS is collapsing on me.  I use it extensively, and it is just so full of bugs.  In fact, the icons on - I just was updating, I was running around updating my pads to 9.2, which was just released a couple hours ago.  And I turned one pad on, and it was in TweetDeck.  And I went back to the home screen, and the icons were scrunched so that they were almost touching each other.  And I thought, oh.  Now, if I just could have that by default, I'd be really happy.  But of course I...



LEO:  But that was a bug, of course.



STEVE:  It was a bug.  And it's got so many bugs now.  Safari, I'm seeing Safari lock up.  Pages come up blank.  Sometimes I have to force close Safari, then reopen it, and then the page displays.  It locks up.  It's just doing all kinds of sad sort of crumbly-feeling things.



LEO:  Well, there's an update out today.



STEVE:  Yes.  We can hope that they know about those, and they fixed a bunch of them.  But I just wanted to vent a little bit.  I was so glad to hear Jim saying, you know, this is really annoying.



LEO:  He's really bitter about Apple Music, yeah.  It's just not been a good thing for him, yeah.



STEVE:  So in the world of malware, we've talked about the Angler Exploit Kit in the context of malvertising because it's the one that many high-profile sites that hosted ads were - it was the way people were getting themselves infected.  We then talked about sort of the shift to infecting probably lower profile websites, only because their security is probably on average more tightly curated.  You know, high-profile sites like Google and Amazon and eBay, they've got a big team responsible, I mean, understanding the importance of that web-facing service being secure.  But there's a bazillion sites out there, servers, many of them in closets or on hosting providers or people that have created a site and then just walked away from it.  They're relatively low traffic, but they may not be zero traffic.  And they may well be using add-ons, third-party plugins, that are vulnerable.  In fact we talked about shopping cart plugins and what a problem those are, just in the last couple weeks.



So what's happening is there's a shift in the attack to these kinds of sites, to infecting vulnerable websites, web servers, one way or another, with malware, which then attempts to, in turn, infect anyone who visits that site.  So what's happened is there's this new campaign is multi-payload.  And the reason this thing popped up on the news is that it first loads a well-known data thief tool called Pony, which systematically harvests all usable, accessible, usernames and passwords from the infected system.  So it gets itself in a position of sufficient privilege, and then knows where all the apps in the system that it's aware of store usernames and passwords.  And so from its admin privilege, from essentially root-level access, it harvests them all and sends them off to remote servers.  It does that before it then loads the Angler Exploit Kit, which is dropped into the user's machine.



Angler, which we've talked about a couple times, scans for vulnerabilities in popular third-party software and in known insecure Microsoft Windows processes if the system hasn't been absolutely kept current.  Once security holes are found, Angler exploits them and force feeds CryptoWall 4.0 into the victim's system.  At the moment, AV detection is extremely low for this new campaign.  And the FBI, I caught in the coverage of this that the FBI is estimating that CryptoWall is costing its victims somewhere in the neighborhood of $18 million annually.



LEO:  Oh, I bet it's more than that.  Oh, it's got to be more than that.



STEVE:  Yeah, I imagine it's, right, it's way more.  And you're hearing from people on the weekend about this.



LEO:  All the time.  All the time.



STEVE:  Yeah.



LEO:  And people pay because they don't have backups.



STEVE:  Yeah.  And then you take them into a Carbonite sponsorship.



LEO:  Then we do a Carbonite ad, and then we think about [laughter].  If only...



STEVE:  Well, in that vein I will take us into a SpinRite sponsorship.



LEO:  Okay.



STEVE:  Because I have a fun one.  Now, the title gives it away a little bit.  But he's a great writer, and he tells a nice story.  This is Jeff Barr.  He's a listener of ours, but he didn't post it in my mailbag.  He sent it to Sue, who forwarded it to me.  The subject was "SpinRite Saves the Walking Dead."  And so he says, "Thanks, Steve, for a wonderful product.  Longtime Security Now! listener, yada yada.  I've been using SpinRite for years, running it on all my hard drives every year or so, and nothing seems to be happening, just like it should."



He says, "But a couple weeks ago I finished DVR recording the latest season of 'The Walking Dead' on my Dish Network VIP 722K DVR, all eight episodes ready for a weekend of 'Dead' fun watching.  The DVR got unplugged for some reason, probably the dog, but that's not important.  When it powered back up, I was presented the error of 'Failed hard drive.  Call for support.'  Well, a call to support told me to return the unit for replacement, and there was nothing that could be done.  Returning the DVR would lose all my shows with over 30 hours of fine-quality HDTV.  Unacceptable."



He says, "I do not endorse opening a Dish DVR.  They are a cranky company" - I love that, a cranky company - "but there were no 'warranty void' stickers on my box, so who will know?  I opened it up and extracted the hard drive, a normal everyday-looking Seagate SATA hard drive.  I plugged it into my SpinRite machine and fired it up."



LEO:  Aha.  Everyone should have a SpinRite machine.



STEVE:  Everyone should have a SpinRite machine, just some old bucket of bolts that's not useful for anything else.



LEO:  Empty case, yeah, with all the SATA and IDE connections.



STEVE:  That's right.  "SpinRite grudgingly reported no devices connected.  I investigated.  The BIOS registered the drive, but every time I ran SpinRite there was no device.  The Internet told me there are some tricks with Dish drives, using power from the DVR and SATA from the computer."  I thought, when I read that, I thought, what?  No.  He says, "Several power-up sequences with swapping cables.  None of these worked for me."  So there was some bad information on the Internet, not surprisingly.



But he said, "Finally, with little hope left, I downloaded and created a Ubuntu boot USB stick, and fired up for one last try.  Using the hdparm tool I unlocked the 'power-up in standby mode'..."



LEO:  It's a TiVo, that's - yeah.



STEVE:  Yes, exactly, "...on the drive."  And he gives the command hdparm -S 0 /dev/sda, which of course is UNIX terminology for the first drive.



LEO:  Yeah.  So Dish licenses TiVo for its DVR.  That's...



STEVE:  Right.



LEO:  And, yeah, TiVo - SpinRite should have no trouble with TiVo, but they do weird stuff to the drive, yeah.



STEVE:  Yeah, in fact, exactly.  So, and in fact there is this thing...



LEO:  You have to bless it.



STEVE:  ...this power-up in standby mode, where you then need to unlock it.



LEO:  Right.



STEVE:  So he says, "After that, I poked around a little bit on the drive in Linux and found plenty of files and directories with all but cryptic names.  My task complete, I booted my SpinRite CD yet again and hoped for the best.  This time SpinRite found the drive and was happy to scan all four Dish partitions.  After running for six hours on the 500GB drive, it marked four sectors as unrecoverable, but at least it ran and recovered everything else.



"I returned the drive to the DVR unit and waited for the eternal Dish power-up sequence.  The unit booted, and all my TV shows are back.  I then spent the weekend watching 'Walking Dead,' and I am now all caught up.  I don't know if you mentioned Dish Network hard drives before" - we haven't - "and it took a bit of 'above and beyond' to get the drive visible.  But hooray, SpinRite saved another drive.  I am now transferring all important shows to portable hard drive and will send this unit back.  Thanks again for bringing the 'Dead' back to life.  Jeff in Tempe, Arizona."



LEO:  Very nice.  Very nice.



STEVE:  Jeff, thank you for the report.



LEO:  Yeah, once you know it's a TiVo drive, then you can do the research.  That's...



STEVE:  Exactly.



LEO:  It was looking for "Dish" probably that made it hard to find.  But, yeah.



STEVE:  Yeah.



LEO:  I recognize hdparm.  Ah, those were the days.



STEVE:  Those were the days.  So now a potpourri of miscellany things.  Okay, first of all, as I promised earlier, I was just, like, whoa.  It never occurred to me to mount a firearm on a quadcopter.



LEO:  Why not, Steve?



STEVE:  And unfortunately, it's going to occur to bad guys.



LEO:  Yeah.



STEVE:  Think of that.  Now, I have to say, being a physicist, the first thing that occurred to me also is, wait a minute.  If you shoot a high-velocity projectile out the front...



LEO:  Back goes the drone.



STEVE:  Exactly.



LEO:  Also, most drones can't handle, can't carry anything really heavy, so...



STEVE:  Right, right.  And apparently there is a history of this, but they have been largely spoofs.  So there have been videos of this before.



LEO:  Oh, yeah.  There's a guy and his brother, they put Roman candles on the drone, and he shoots at his brother.  It's quite funny.



STEVE:  Oh, my goodness.  



LEO:  But putting an actual heavy metal weapon on there would require a fairly industrial drone.  And you're right, you know, Newton's Law, what goes out one end...



STEVE:  For every action, there is an equal and opposite reaction.  So quoting The Verge and this story from July 16th, they said:  "This isn't the first video we've seen of a firearm attached to a consumer-grade drone, but this is the most convincing.  The 14-second clip, uploaded to YouTube last Friday [of July] claims to show a 'homemade multirotor with a semiautomatic handgun mounted on it.'  The drone fires four times, with the recoil from each shot pushing it backwards in the air.  If the footage is real, then the craft is certainly illegal, at least from the perspective of the Federal Aviation Authority (USFAA), which regulates aircraft and drones."



And then The Verge notes there have been fakes before, but "While the FAA certainly doesn't want people mounting guns on quadcopters, there's no reason that people might try to claim" - I don't think I transcribed it right.  But anyway, it says "that this activity is their right."  The question is, "Does the Second Amendment apply to drones with guns?  Legal scholars have already investigated similar claims covering robotic weapons, for example, with one law clerk, Dan Terzian, suggesting in a 2012 paper titled 'The Right to Bear (Robotic) Arms' that there is a 'very real possibility of robots being defined as arms under current Second Amendment doctrine.'  Presumably the same interpretation might also cover drones."



So my concern, of course, is that this creates an incredibly devastating weapon because drones are ubiquitous.  They have video cameras on them, so you can see what they're seeing.  Or if you, I mean, I don't want to, you know, this is - I'm not giving anything away because this would be obvious to any horrible person who wanted to do this.  But you add a laser sight, and then the camera on the drone can see the red spot that the gun is aiming at, even though you're not able to sight down through the gun's sights.  And this thing you can fly wherever it can go, remotely.  It's horrifying.



So anyway, I just thought I'd put that into the podcast because, yikes.  Just unfortunately it's the kind of thing where what can happen, does happen.  And this is horrifying.  This had never occurred to me before.  They were talking about a flamethrower, which I guess has been done.  A pump was purchased from Amazon, and it works, apparently.  And that's the video on The Verge that caught my eye.  But then, when I followed that link, it talked about this, it's like, whoa.  That's unsettling.



Many people, on the topic that we talked about last week - and Leo, you were correct that there had to be something strange going on with this guy's Wells Fargo password where it wasn't until he shortened it to eight that it worked.  You were surmising maybe that the ninth character was illegal, and it wasn't actually the length, but it was an illegal character, which it wasn't reporting.  Many people said that they are using 14-character Wells Fargo passwords.  So who knows.  Maybe it was the way he came into this, where like the reason for changing it, or maybe the script happened to download with an error, who knows.  But I wanted to mention that everybody had said, yeah, that doesn't seem to be the case, for what it's worth.



I also ran across an update to libsodium that I wanted all of our coding listeners to know of.  Libsodium is the library which I chose two years ago, which incorporates Dan Bernstein's fabulous Curve25519 beautiful elliptic curve cryptosystem that allows encryption and hashing and Diffie-Hellman style public key exchange.  Basically it is an absolutely complete library.  And Leo, if you click that link, they have a page showing the language bindings.  This thing has language bindings you cannot believe.  Any language anyone is using, you can use to link to libsodium.  I was back using it at 0.0, or I think it was 0.7 was where I was.  It's now at 1.0.6.  And it is just a beautiful, complete, cryptographic toolkit that I wanted to just make note of.  Look at all those languages.  I mean, it's like the Who's Who.  I don't know if there's anything that's missing from that.



LEO:  Hey, it's got Common LISP and Clojure, so I'm happy.



STEVE:  Yup.



LEO:  Look at that.  Erlang, Go, Java, JavaScript.  That's great.  Yeah, you're right, this is a pretty good place...



STEVE:  PHP, Python, R.



LEO:  Racket, I like Racket.



STEVE:  Ruby.



LEO:  Swift, there's two implementations.  So, yeah, there's no excuse not to use it.



STEVE:  No.  And it is, as we've said, do not roll your own.  Here it is.  Really good people are running it and moving it forward.  And in fact the thing that brought me up short was that they implement an authenticated encryption which they didn't have back in 0.7.  I ended having to write my own.  I did my own implementation of AES-256 GCM when Ralph, who was the early author of the Android client for SQRL, he didn't like the fact that I was using Phillip Rogaway's sort of proprietary but really nice authenticated encryption.  Phillip and I had talked because I wanted to use that back with CryptoLink.  And he said, oh, my god, of course, you're welcome to use it freely.  And he just, you know, he said it was never my intention to profit.  But - I'm blanking on his name.  I just said it.  The Android author.



LEO:  I don't know his name.



STEVE:  Anyway - Ralph, Ralph.



LEO:  Ralph.



STEVE:  Ralph I thought made a good point that GCM was a publicly available authenticated encryption technology.  And I changed it.  I dropped the use of Phillip's patented but available technology and switched to GCM, wrote an implementation.  The good news is any - oh, and that's what SQRL uses to encrypt userIDs.  There are two blocks in the identity.  Each are encrypted with authenticated encryption to prevent anything from being changed.  And also that's how we verify the user's password is after decrypting the password, we attempt to use the result of that decryption to decrypt the identity block, and then we check the authentication tag and see whether it works or not.



The point is that now that libsodium has it, nobody else will have a problem using the encryption that I chose for SQRL.  It's now part of libsodium.  And in fact all of the other algorithms I'm using, even scrypt, which is the basis for the mcrypt algorithm that I designed on top of scrypt to give us much longer and controllable decryption times, even that's there.  So it's essentially the only package you need, that anyone needs, in order to implement all the functions that SQRL uses, but also any general purpose crypto needs.  It's wonderful.



Oh, and in fact I remember now how I stumbled on it.  Somebody tweeted me, asking a question about public key crypto.  And I went to libsodium to update myself in order to give him the link, and then I discovered that there'd been a lot of progress recently.  So, yay.  And let's see.  Oh, there was just a observation from a follower, and I don't know how to pronounce this.  Moriturimax I think is how he would - or maybe Moriturimax.



LEO:  Morituri, which means those who are about to die, Max.



STEVE:  Oh.  Morituri - well, thank you.  Is that Japanese?



LEO:  No, the gladiators used to say it to Caesar before the battle.



STEVE:  Just before they... 



LEO:  Morituri te salutant.  We who are about to die salute you.



STEVE:  They probably screamed it in that case; right?



LEO:  Yeah.  Well, it was a big Coliseum.



STEVE:  Anyway, so this was on giving law enforcement the wrong finger.  And he notes, he says, "One thing about the podcast where a panic finger was mentioned regarding law enforcement.  If they wanted to make sure you were using the correct finger, couldn't they lift your fingerprint from the Home button/sensor and compare them?"  Of course, brilliant.  "Overkill maybe, but they do that stuff for a living.  Cheers, thanks again."  So I appreciated his tweet.  And I thought that was clever.  Yes.  That button is shiny, and it no doubt carries the fingerprint that you always use for properly unlocking your phone.  And so they check that first, and then they look at your fingerprints, and they say, uh, we'll take this middle one on your left hand instead of your thumb.  So I thought that was clever.



Now, I talked about how many primes there were last week.  Turns out there are many, but nine is definitely not among them, which unfortunately I glibly cited as I went one, three, five, seven, nine, 11, 13, 17.  And of course our astute listeners, many of our astute listeners said, uh...



LEO:  Excuse me, Steven.  As you know, nine is divisible by three as well as one.



STEVE:  You're not really going to try nine, are you?  So the question is how many.  And that's interesting.  It turns out you can ask that question to WolframAlpha.



LEO:  Oh, of course you can.  They would know.



STEVE:  And you say, "number of primes under 2^1024."  Right?  So that's how many - so 2^1024 is the number of primes that would fit in a 1024-bit public key.  The answer is two, approximately - and there's an equation that actually knows this, so it's, you know, I love mathematicians - 2.53274x10^305, okay, 2.53x10^305.  So we know that 128-bit absolute security, symmetric security, or if you really want to go crazy, 196, or really crazy, 256, is crazy brute-forceable-proof security.  So this is 10^305, meaning - and in fact I actually...



LEO:  So I said 2^24.  What is the number that you're looking for?  Is it...



STEVE:  2^1024.



LEO:  1024.  You know what I find interesting in this plot?  It's a linear number.



STEVE:  Yes.



LEO:  The primes are evenly distributed, which I did not know.



STEVE:  Isn't that interesting?  Yes.



LEO:  I did not know that.  Should have.



STEVE:  It's just very cool.  Counterintuitive as heck.



LEO:  Oh, look, it goes off the page.



STEVE:  Oh, my, oh, you asked for the exact count?



LEO:  That's the number.  That's the number.  Holy cow.  All right.  That's the approximate number of primes.



STEVE:  But we won't tell anybody if you use the last 15 digits as a password, Leo.



LEO:  Wow.  That's awesome.



STEVE:  Yup.  Plenty of primes.  Plenty of primes in the sea.



LEO:  Wow.  I love it that it's a linear - and I wouldn't have seen that with 2^1024 because it's such a big number.



STEVE:  Correct.



LEO:  Because when you do 2^24, you see a graph showing you how many primes there are as you go up.  And it's a straight line.  



STEVE:  Nice.



LEO:  Isn't that interesting.  So you don't run out of primes, in other words.



STEVE:  Yeah, we're not going to run out anytime soon.  And speaking of aluminium, which we were talking about the other day?



LEO:  Yes?



STEVE:  Someone tweeting as Infinity Hammer said, "Something came to mind when you and Leo were discussing the number of syllables in the word 'aluminium.'"



LEO:  Uh-oh.



STEVE:  Or aluminum.  "I noticed that you often say the word 'mischievious,'" which he actually notes as "mischievous," with four syllables, "as if there were an 'I' after the 'v.'"



LEO:  That's because you're an Okie.



STEVE:  And I thought, "mischievious," don't people say that?



LEO:  No.  You're an Okie.



STEVE:  And I always say "mischievious."  So...



LEO:  Yeah, I think Grandma used to say "mischievious."



STEVE:  Mischievous, yeah, "mischievious" seems more mischievious.



LEO:  Yeah.



STEVE:  You know, it's a little more twist the knife, oh, you little mischievious rascal.



LEO:  But it is just mischievous.



STEVE:  Mischievous.  So...



LEO:  It's hard to say "mischievous."  That might be it.



STEVE:  Yes, you're right.  Your mouth likes that extra little "i" in there, "mischievious."



LEO:  Yeah.



STEVE:  Anyway, thank you for the correction.  Now, important sci-fi news.  Don't know how it's going to be, so don't blame me.  But Arthur C. Clarke's famous 1953 - you heard that right, two years before I was born, 62-year-old novel "Childhood's End" has been made into a six-hour, three-part, three-successive-night miniseries.



LEO:  But no spoilers because this has a massive twist in the last sentence of the book.



STEVE:  I'm not saying anything.



LEO:  Right?  Isn't this the one that has the massive twist?



STEVE:  Yes.



LEO:  So six hours, five hours and 59 minutes in, your jaw will drop.



STEVE:  So it starts next Monday.



LEO:  Oh, where, where?



STEVE:  On Syfy.



LEO:  Oh, they do crap jobs.



STEVE:  I know, I know.  So you get what you pay for.



LEO:  It's going to be cheesy.



STEVE:  Yeah.  So it's two hours Monday, two hours Tuesday, two hours Wednesday, three successive nights.



LEO:  I'll TiVo it.  Why not?



STEVE:  Oh, yeah.  Well, yeah.  I mean, well, yeah, of course.



LEO:  But read the book.  You know what, read the book.



STEVE:  I was going to say, it's been so long since I read it that - and the book is always better.  And it's a classic...



LEO:  In this case, absolutely.



STEVE:  ...classic sci-fi book.



LEO:  It is one of my favorites.  I read it probably as a teenager.



STEVE:  Yeah.



LEO:  But I still vividly remember it.  Yeah, you know what?  This would be a good opportunity to reread it.  It's not very long, I don't think.



STEVE:  And that Monday is also the official kickoff of "The Expanse" series.  The preview has been out and floating around.  That is, sort of the prerelease of Episode 1.  But immediately following this first two hours of "Childhood's End" is a repeat of the first "Expanse."  So if you already saw it, because, I mean, it's everywhere, it's on Play Store and iTunes and Fire and everywhere, and I think Hulu and Vudu and so forth.



Anyway, they're starting that series.  And that will be running for some time.  And as I talked about a couple weeks ago, it's like, eh, I'm not sure.  The very first scene was a mess, and it was kind of important, and no one watching it would have any idea what was going on, which is of course why I read the whole book series when I knew that Syfy was going to be creating it.  But for what it's worth, next Monday, you've been warned, three nights in a row, two hours each, "Childhood's End."  And...



LEO:  By the way, "mischievious," I take it back.  The nonstandard "mischievious" is not a new phenomenon.  According to the OED...



STEVE:  Whoa.



LEO:  ...this spelling has been in use as a variant since the 1500s.  It was also common for the word to be pronounced with the stress on the second syllable, mis-chiev-ious, at least until 1700.  It's now viewed as nonstandard and tends to be seen in regional, colloquial, or humorous use.  But it is...



STEVE:  And on this podcast.



LEO:  On this show.  But it is a venerable and respected construction.



STEVE:  Well, thank you for that.  I've had some people grumbling about not knowing, my not having a list anywhere of the sci-fi that I like.  And I realized that's because it's been a while since I reminded people that I did, at our listeners' request, produce a PDF.  It is bit.ly/sgscifi, spelled correctly, scifi.



LEO:  None of this Syfy.



STEVE:  Yes, scifi, bit.ly/sgscifi.  And that will bounce you to a PDF, which is I think it's three or four pages, where I just took the time a couple years ago to write it all down.  And if it's there, I'm standing behind it.  It's all the good stuff - Peter Hamilton, Michael McCollum and his great trilogies, just a bunch of wonderful stuff.  Oh, all of the - it's been so long I've looked at it or thought about it.  There's about six or seven book series, I can't remember the name now, of really good space warfare stuff.  I want to say David Drake, but that's something else.  Anyway, for anyone who's interested in my reading guide, bit.ly/sgscifi.



Also, my recommendation of Auralux was a huge smash.  Many people wrote and said they loved it.  And I got a kick out of having Andy note on MacBreak Weekly what I have here in the show notes, which I was going to make sure people know.  I tweeted it the moment I found out about it late last week, and that is that Monument Valley, another fabulous, just a visual feast of beautifully rendered 3D graphics, is my style of you're not in a hurry, no one's pushing you, puzzle game software, is free only until midnight tonight.  Unfortunately, listeners of this podcast who receive this after tonight who didn't also see my tweet last week or my tweet this morning, because I did it again, asking my followers to verify that it was still free.  The reason I did that was that it was free last week, and I received a tweet saying it was free today.  And it's like, wait a minute, well, where's the boundary?



And so a listener, Barry Wallace, said, yes, Monument Valley is still free.  There's generally a new free app every week, starting on Thursday evening Pacific time, he wrote, and it stays free until the next Thursday.  Except that in this case, maybe he meant Tuesday because it is, we are told, in fact the publishers of Monument Valley tweeted in their own feed that, you know, get Monument Valley for free until midnight tonight.  So again, anyone listening to this who likes my style of kind of relaxing but interesting, you know, there's no timer running, nothing's going to kill you, you just solve the puzzle.  Monument Valley is another one way up at the top of my list.  And I know, Leo, that you love it, too.



LEO:  Yeah.  Great game.



STEVE:  And, lastly, and you just tweeted something earlier this morning, Leo, about Outlook.  One of the many things that bothers me about iOS, especially Mail, is that I sometimes receive mail that, when viewed in the iOS mail client, all there is "This message has no content."  For some reason, email from a friend of mine in Canada, whom you've met, Leo, Bob, he often, when he's sending, he's using Eudora still, so maybe it's this email came from a client that's too old to be taken seriously, I don't know.



But anyway, the point is that I got so tired of seeing that, that I thought, okay, what else is around?  Well, of course Outlook, Microsoft's alternative client is around, and it displays it perfectly.  So just a little tip.  If any other iOS users out there receive email from people whose clients don't generate, for whatever reason, email that the iOS mail client sees as valid, and thus says this message has no content, at least using Outlook, having Outlook, it's free to download, having it configured as a backup allows you to open your mail in Outlook and read the message correctly.



And we'll wrap up this two hours by maybe a tease for what I'm going to talk about next week.  And because Phillip Rogaway, who I was just mentioning, he's the cryptographer at UC Davis.  I mean, he's deep into crypto.  Many crypto algorithms are to his credit, and patents, and academic work, and he's very involved.  He just gave a talk last week, on December 2nd, in Auckland, in New Zealand, at the Asiacrypt Conference.  He wrote a paper which is long, it's 42 pages, so I have not yet had a chance to digest it.  But it raises an interesting issue, coming from a serious major cryptographer.



So the abstract of his paper reads:  "Cryptography rearranges power.  It configures who can do what, from what.  This makes cryptography an inherently ?political? tool, and it confers on the field an intrinsically ?moral dimension.  The Snowden revelations motivate a reassessment of the political and moral positioning of cryptography.  They lead one to ask if our inability to effectively address mass surveillance constitutes a failure of our field.  I believe," writes Phillip, "that it does.  I call for a community-wide effort to develop more effective means to resist mass surveillance.  I plea for a reinvention of our disciplinary culture to attend, not only to puzzles and math, but also to the societal implications of our work."



So I'm, of course, these issues are something that fascinate me and that we've discussed often on this podcast.  So I'm going to make time to read his paper.  And if I think it is worthy of discussion, we'll take a look at it next week.



LEO:  Great.  Always looking for a subject to talk about.  Maybe we'll talk about Satoshi Nakamoto.



STEVE:  Ooh, yes.



LEO:  You've got to read that article.



STEVE:  If there's more revelation.



LEO:  It's pretty compelling.  Although he's not the kind of guy you really wish that, like, he's not, you know, I don't know.  It's just some...



STEVE:  He's not like a superhero being unmasked?



LEO:  Not a superhero.  He's just a normal person.



STEVE:  He's just like the guy next door.



LEO:  He does own a million bitcoins, however.  One of the reasons they're pretty sure it's him is because there's one big cache of a million bitcoins that almost every agrees must be Satoshi's.



STEVE:  Oh, my lord.



LEO:  Nobody's saying who owns it, but there's, well, read it.  You'll see.  There's evidence that he owns it.



STEVE:  You know that Mark Thompson's entire garage is wall-to-wall mining machines?



LEO:  You were lucky.  You got in early.  You got 50 bitcoins.



STEVE:  I did.



LEO:  And I think it's too late at this point.  Well, Mark knows what he's doing.  He probably has...



STEVE:  Mark is net positive $22,000 a month.



LEO:  Oh.  What?



STEVE:  Yes.



LEO:  Is he including his power bill?



STEVE:  Yes.



LEO:  Okay.



STEVE:  That's the key.  Arizona Power is incredibly inexpensive.



LEO:  Ah, yeah, Boulder Dam.  Ah.



STEVE:  Yes.  And I checked in with him when I saw that jump.  Remember the prices went up from - they jumped like 450, and then back, they settled back down to around 350.  But he's positive $22,000 a month.



LEO:  A month.



STEVE:  Yes.



LEO:  Good on him.  That's a nice little side job.



STEVE:  He had a second 50-amp power added to his home.



LEO:  See, you can't even do that here.  I mean...



STEVE:  No.  No, you can't do it.  And our power is really expensive.



LEO:  Yeah, yeah.  And he's obviously got - does he buy those specialized bitcoin miners with, remember, the special ASICs and all that?



STEVE:  Oh, believe me, Leo.  We both know him.



LEO:  He's no fool.



STEVE:  He is so deep in...



LEO:  If he's going to go after this, it's got to make sense, yeah.



STEVE:  He's actually turning the hardware over following the increase in power up the curve...



LEO:  You have to.



STEVE:  ...paying for it from his earnings, in order to stay there.  Oh, it's just a brilliant concept.



LEO:  It's one of the brilliant little things Satoshi did was make it harder and harder to get bitcoin as the supply increased.



STEVE:  Exponential curve, yup.



LEO:  Yeah.  Computationally more difficult.  So that's why you got in, you got in at a perfect time.  You just had an old PC.  You turned it on, and a day later, ka-ching.



STEVE:  Yeah, this thing was sitting here doing Skype.  And I woke up in the morning, and there was 50 bitcoins.  Like, oh.



LEO:  That's pretty funny.  Now, what is Mark's strategy for selling them, though?  See, that's the trick; right?  Because now it's a volatile market.  You want to sell them now, you want to hold onto them...



STEVE:  Well, and actually he took profit.  When it hit 450, he was smart.  He said now's the time to pull profit out.  And then, you know, he's putting it back into his system.  But it's just sort of a fun thing for him to play with.



LEO:  I'm willing to bet that the vast majority of bitcoins are now being mined in Arizona, only because of the power; right?



STEVE:  Yeah.  Yeah, they're - actually, he knows where it is.  There's somewhere in, I want to say Tunisia, under a hydroelectric dam.



LEO:  Oh, yeah, that would be good, yeah.



STEVE:  Where power is so inexpensive that it's like the largest cluster of bitcoin mining farms.



LEO:  And they're probably not Tunisians.  They're probably foreign nationals who said...



STEVE:  Who are, like, leasing space.



LEO:  ...where is the cheapest power in the world, yeah.



STEVE:  Yup.



LEO:  Wow, fascinating.



STEVE:  Yup, interesting.  Crazy times.



LEO:  Yes.  And we don't know where Mark lives, and so don't ask us.  Or his bitcoin wallet number.  Thank you, Steve Gibson.  I know where Steve lives, GRC.com.  That's his home on the Internet.  You go there, and you might find some amazing things.  Of course SpinRite, the world's finest hard drive maintenance and recovery utility.  But you could also go there and find so many free things.  The Vitamin D thing we were talking about, that's there.  SQRL, that's there.  Lots of freebies.  And this show, amazingly enough, including transcripts, lovingly done by a human being.  And lots of other stuff.  Just go there, GRC.com.  You can find audio and video of the show here, TWiT.tv/sn.  Or subscribe, and you'll get it each and every week that way.  Didn't we see somebody who just downloaded all the shows and started listening to them?  Maybe that was...



STEVE:  Yeah, there was something in your Twitter feed this morning, I think, somebody saying that he'd grabbed them all.



LEO:  Grabbed them all.  All right.  One more time...



STEVE:  There was somebody pulling 80Mb from GRC for about an hour not long ago.



LEO:  Don't do that to Steve.  If you're going to download them all, download them from me.  You see everything like that because you monitor your traffic.  Let me see one more time if I can get the Donald.  I can't.  I don't know why.  This video will not play.



STEVE:  Anyway, so what you remember from it is that he's saying...



LEO:  I'll read it to you:  "We're losing a lot of people because of the Internet," says Donald Trump.  "We have to see Bill Gates and a lot of different people that really understand what's happening.  We have to talk to them about maybe in certain areas closing that Internet up in some ways.  Somebody will say, oh, freedom of speech, freedom of speech.  These are foolish people."  So as far as I can make out, it's not completely clear, he thinks that he can talk to Bill Gates to shut down the Internet.



STEVE:  Well, gosh, you know, that's who you want to talk to.



LEO:  He's the guy, the boss of the Internet.



STEVE:  Probably give Ballmer a call first, see what Steve thinks about that.



LEO:  Ballmer doesn't run Microsoft either anymore.



STEVE:  I know.



LEO:  Yeah, all right.



STEVE:  He's busy with his basketball team.



LEO:  He's got a nice basketball team for himself.



STEVE:  Yeah.



LEO:  But I can bet one thing.  Donald Trump will preserve the value of that bitcoin.  Or maybe not.  I don't know.  I'll have to think about that.  Ladies and gentlemen, thank you so much for being here.  I wish I could have played this.  You know what, whatever you think of him, he's fun to watch.  He's very engaging.



STEVE:  Oh, this has been the most entertaining election pre-season that we've ever had.



LEO:  Oh, my adblocker's preventing it.  Let's try it without an adblocker, says John.  You know, you forget that the adblocker does stuff.



STEVE:  Yeah, it's in there.



LEO:  It's in there.  No.  Not yet.  Just some mystery that we will never know.  Thank you, Steve.  Have a great day.  We'll see you next time.



STEVE:  Okay, my friend, thanks.



Copyright (c) 2015 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#538

DATE:		December 15, 2015

TITLE:		Listener Feedback #225

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-538.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  There's of course a ton of security news for him to talk about.  And then we're going to try to answer 10 questions from you.  And I'll give you a little preview.  The first question is so great that Steve will spend the rest of the hour doing that.  It's coming up next on Security Now!.



LEO LAPORTE:  It's time for Security Now! with Steve Gibson, Episode 538, recorded Tuesday, December 15th, 2015:  Your question, Steve's answer, #225.



It's time for Security Now!, the show - it's my lunch hour show.  The show I think - and I bet you I'm not alone.  A lot of people go, all right, I'm going to take a break for lunch, put in the headphones, and you listen to Steve, the master of security and privacy, really the master of technology and engineering, talk about a variety of subjects.  To me, this is like...



STEVE GIBSON:  I will help you stir your stomach contents.



LEO:  We used to, at TechTV, we'd have brown bag lectures from time to time.  And I know a lot of big tech companies do that, too, where you bring your brown bag lunch, and you learn something.



STEVE:  Yeah.



LEO:  This is your brown bag lecture for the week.  Hi, Steve.



STEVE:  And I guess I've seen that, like, setting in corporations where everyone has, like, the little transparent clamshell salad, and they open up their meal, and they munch on salad while someone's showing them things.



LEO:  Exactly.  Exactly.



STEVE:  So this is a Q&A.  It's our 225th Q&A, Episode 538.  And this one is special because, going through the mailbag last night, I hit a question that I think is quite possibly the coolest question that has ever been asked, or that I've ever been asked.  I mean, and we have had, obviously, many questions.  What, 225 episodes, about - for a while we were doing a baker's dozen, but then they started - we didn't have, you know, then there was so much news happening that we didn't have time to do 12, so we cut it down to 10.  But so arguably 2200-plus questions.



This is just so good.  For a while I thought, okay, I'm just going to cancel all the other nine questions.  And but then I thought, okay, no, that's going a little too far.  So, but I did bring it down to eight because it's just - and for our listeners, who are by-and-large techie and technical, I'm going to suggest after the pet question is posed that everyone pause the podcast and contemplate the answer themselves.  See, you know, see what you think.  Because, oh, it's just a great question.



But we have, before that, of course, we've got news.  We've got updates on the government or various governments versus crypto.  You mentioned on the previous podcast, on MacBreak Weekly, what we'll talk about, another chilling discovery, thanks to the Shodan search engine.  We are two weeks away from the sunsetting of SHA-1, and people are finally really beginning to get a little upset because it turns out that 40 million people, estimated, will be cut off from having any security on midnight of December 31st.



LEO:  When you say "security," you mean encrypted web traffic, like HTTPS, or...



STEVE:  Yeah, yeah.



LEO:  Yeah.



STEVE:  Yeah, exactly.  So because they are still using browsers, there are, it's estimated, 40 million browsers that do not support the next-generation of certificate signing, which uses the SHA-256 hash.  They only understand SHA-1, that of course has been acquiring dents over time as cryptographers have successfully found increasingly unsettling things.  Also we talked a couple months ago maybe about how Google was upset with Symantec over some mishandling, Google felt, of some certificates.  And Google's announced it's going to yank support for a Symantec root, which is kind of surprising.



There is a bad horror story involving Bell Canada wireless routers that we need to essentially warn Canadian listeners about.  And we're going to revisit the question of what do we know about Satoshi, since now we think we know less than we thought we did.  And I know you've been following this story closely.  



LEO:  Oh, yeah.



STEVE:  So I want you to bring everybody up to speed because I haven't dug into it that much.



LEO:  So fun, it's so fun, yeah.



STEVE:  We've got a master's thesis that was written that analyzed the Telegram messenger's, ahem, homegrown crypto.  And if that doesn't tell us in advance what the outcome is, I can't think of anything that would.  Then some miscellaneous stuff.  And then, like I said, a Q&A with only eight questions because number one is just, oh, it's like, thank you for asking this question.  What a - it's a fabulous question.



So the Picture of the Week actually involves this SHA-1/SHA-2.  SHA-1 is just one hash.  SHA-2 is the family of successive next-generation hashes, whose size differs.  There is SHA-256, 384, and 512.  So three different SHA-2 hashes, all, even the weakest of which, though, is 256 bits, way stronger.  As we know, when bits are doubled, you don't double your strength, you two to the doubling number increase your strength.



LEO:  It's 2^128 bit or something like that.



STEVE:  Yeah, exactly, it's just like, whoa.



LEO:  It's a lot better.



STEVE:  So, yeah, way better.  So but this Venn diagram shows, unfortunately, there are some systems, notably Android 2.x, old, yes, but still in use.  Windows XP SP2, because it wasn't until SP3 that the security of Windows XP was updated to add SHA-2, that is, SHA-256 support.  And one of the main streams of OpenSSL, remember there are, like, there's a v1 point whatever, but there's always been 0.9.8, for a long time that doesn't, that also doesn't have SHA-256 support.  So, and then there's a group in the middle that offer both - Safari, Firefox until or up through v36, Chrome up through Chrome's v38, and Opera from 9 on, support both.  But then there are some, the really more recent ones.  Edge has no support for SHA-1, does support SHA-2; Firefox from 37 on only supports SHA-2; and Chrome from 39 on.



So anyway, so this we'll come back to when we talk about essentially what this means in terms of the way the industry is evolving.  And CloudFlare has, as you mentioned, a great blog posting.  There's a link in the show notes.  But significantly, Facebook announced that they're going to be doing this, too.  So we'll talk about that.  But first I wanted to talk a little bit, just sort of generically about, you know, the interesting times we're in relative to states and encryption and just the tension that exists there.



I picked up in a website, or I guess one of my listeners actually did send me the link, because we talked last week about Kazakhstan's apparent intent, although the fact that the press release announcing it was pulled without explanation, I haven't seen anything about that since, I don't know if there was a huge backlash or what.  But remember that the idea was that we were going to from the local style man-in-the-middle SSL or TLS interception, which some antiviruses do on users' machines, or corporations do for their networks, up to the next, well, I guess two steps.  Because the next step would be ISPs, and that's frightening, in case that ever hits us.



But the one beyond that would be state level.  And that's what of course Kazakhstan, we discussed last week, has formally, there was a press release that went out that said anybody who wants to be able to communicate with security, that is, you know, web-style, certificate-based, public-key crypto security, which is to say establish a secure connection to any website outside of Kazakhstan, where the traffic needs to transit Kazakhstan's border, will only be able to do so if they load their device, whatever it is - PC, mobile phone, tablet, whatever - that wants to communicate, with an official Kazakhstan certificate.



And so this is at the state level formalizing this, exactly the same sort of secure connection interception capability.  What that means is that, when you attempt to connect to a service, a server outside of Kazakhstan, assuming this happens, Kazakhstan will themselves synthesize a certificate and sign it for that site.  And that's what your browser will connect to.  Well, because your browser has previously accepted the Kazakhstan national security certificate, it won't care.  No warnings, no alerts, nothing.  It'll trust it.



And what this means, though, is that Kazakhstan's border will then decrypt all of the traffic, you know, your username and password, which if there isn't additional encryption - and that's something worth noting because now that we've got JavaScript in browsers to the degree we do, nothing prevents some, you know, potentially some other layer of encryption being employed.  But absent any additional encryption, your username and password will go in, essentially has a moment where it's in the clear before Kazakhstan's border then connects to the remote server, hopefully also securely, reencrypts your data, which at the border they could briefly examine, and then on it goes outside of the country to the world.



So anyway, this website Defense One's headline that caught my attention read:  "Kazakhstan's New Encryption Law Could Be a Preview of U.S. Policy."  And it's like, whoa, [choking], what?



LEO:  I don't think so.



STEVE:  No.  Now, the good news is the article, they must have gotten paid by the column inch.  So I read through it looking for anything, and there was nothing there.  It was just like, well, okay, and maybe not.  So but anyway, I found it interesting that this is sort of what's in the wind.  Something else that's in the wind was reported by Motherboard.vice.com, reporting on a new position that our good friend FBI Director James Comey has taken.  Of course, you know, this relates to the existing tension and sort of the unsettled question of encryption in the U.S., which U.S. law enforcement has a need, they believe, in when they can demonstrate it in order to see into connections.



So Motherboard reports with the headline "FBI Chief Asks Tech Companies to Stop Offering End-to-End Encryption."  So the short version is, well, okay.  You're saying that there's no way to do a backdoor.  You can't give us a master key.  There's no way.  So just don't do it at all.



So Motherboard writes:  "After the recent attacks in Paris and San Bernardino, encryption has once again become a political target in Washington.  Despite there still being no solid evidence the attackers benefited from or even used encryption."  And in fact we heard right after the Paris bombings that a phone was found.



Anyway, Motherboard says:  "In at least one case, they coordinated via distinctly unencrypted text messages.  [Nevertheless] law enforcement and national security hawks have used the tragedies to continue pressing tech companies to give the U.S. government access to encrypted communications, even if that means rolling back security and changing the nature of their businesses."



So, and this is based on a Senate Judiciary Committee hearing which occurred last Wednesday, so the day after our last podcast, wherein "FBI Director James Comey went so far as to suggest that companies providing users with end-to-end encryption might simply need to, well, stop doing that."  And then, quoting him, he said, quote, and this is Comey:  "It's not a technical issue."  Okay.  We won't take issue with that.  "It's not a technical issue," he says, "it's a business model question."  And he said:  "Lots of good people have designed their systems and their devices so that judges' orders cannot be complied with, for reasons that I understand.  I'm not questioning their motivations.  The question we have to ask is: should they change their business model?"



So, again, this is not actionable.  I'm not suggesting it is.  But this is, I just want to keep our podcast listeners up on the machinations and the ruminations.  I did also pick up some thread about the present Obama administration's statement that they would, by the end of the year, make some sort of declaration, like readdress this in some formal way.  So maybe within a couple weeks we will have at least something a little more firm than this testimony in front of the judiciary committee. 



In another interesting twist, Russia has been for some time unhappy with the idea that non-Russian Internet service providers, I mean, like Google and Twitter and Facebook and, you know, like the rest of the world, are storing Russian citizen data outside of their borders.  So they put into place some legislation around the middle of 2014 that sort of never got pushed and wasn't acted on.



But they've been saying now, more recently, that by January, I don't remember if it was the beginning or the end, I hope it's the end because apparently people still need some time, but the idea being that they're going to enforce, and I guess they can do so technically, so they're going to enforce a ban on access to Internet properties outside of Russia that store Russian citizens' data externally.  Now, they have deployed the same sort of powerful NSA-style encryption technology throughout the country.  They have their own central monitoring facility and devices installed in all of the various Russian ISPs in order to give them taps, essentially, to give them access that they require.



So in September, a couple months ago, Apple rented space in Russia to house the data of Russian citizens.  And then some other companies, a messaging app Viber, also eBay, PayPal, and Booking.com, have decided to comply, meaning that they will create servers inside Russia where Russian citizen data will reside.  But the big three - Twitter, Google, and Facebook - have said nothing.  They've remained silent.  Although there is a belief that they've got representatives that have been in private talks about what to do about this.



LEO:  Yeah.  Just because they don't do a press release doesn't mean they're not, you know, talking with the Russian authorities.



STEVE:  You're right, I mean, they have to be saying, look, this is what it's going to take, or, yeah.



LEO:  Negotiate, yeah.  Do you want Facebook in Russia?  Well...



STEVE:  Yeah.



LEO:  The real issue is you can store the data - well, you know, I'm not saying - I'm not telling you anything.  But the problem is they need to replicate data, and they're going to - it gets replicated globally.  There's no way you can say only stored in Russia.  Because then I, if I have a friend in Russia, I wouldn't be able to see the data.



STEVE:  Well, and I'm glad you interrupted me because, I mean, like my flow, because I meant to note that there's a fundamental problem with this.



LEO:  Yeah.



STEVE:  Which is it isn't the way the Internet works.



LEO:  Yeah.



STEVE:  I mean, it's what, you know, it's what Putin presumably, or his...



LEO:  But isn't it where you have box in Mountain View, with everything, the whole Facebook is on box in Mountain View.  So move that box to Russia, and I'll be happy.  Not how it works.



STEVE:  Yeah, and so, yeah, that's, for me and our listeners, that's the key issue is it's like they're trying to mandate behavior of some specific major providers, but there's lots of other providers.  I mean, you know, we sell copies of SpinRite to Russians.  I'm sure I've got Russian data on my servers from, you know, their licensed SpinRite owners.  So, what?



LEO:  That's another issue.  You're right.  You're right.  That's a very good point.



STEVE:  Yeah, I mean, the problem is this may be what they want, but it just - it isn't, I mean, it's fundamentally, at the deepest molecular level, not the way the Internet is.



LEO:  Data doesn't recognize national borders.



STEVE:  Right.  Which is like, good.  I mean, it's like...



LEO:  That's why we like the Internet.



STEVE:  It's why it works.  It's why it's, you know, it's why AOL, and we're not still dialing into AOL.



LEO:  Right.



STEVE:  This is the way it should be.  And they're saying, uh, no.  So anyway, I thought that this was interesting.  But thank you for giving me a chance to take a breath because this was a point I had intended to make when I was putting this together was, you know, you can ask.  I mean, and these guys could even do something to placate.  But basically it's just not the way everything else works.



LEO:  Yeah.



STEVE:  And I had here in my notes the story about MacKeeper,  this sort of much maligned, and apparently deservedly so, really not a great reputation, Macintosh maintenance, I don't know what, D&C (dusting and cleaning) tool of some sort, I mean, it just...



LEO:  It's not, you know, it's like the equivalent of a registry cleaner.  You know, it deletes temp files.  It's just...



STEVE:  Anyway, so the story, the part of this that our listeners will get a kick out of, well, sort of, is that a bored IT help desk guy, Chris Vickery, one evening sort of thought, well...



LEO:  Oh, I didn't know that.  I thought he was a security researcher.



STEVE:  Oh, no.



LEO:  He's just some guy.



STEVE:  Yeah, he's an IT help desk guy.  You know, he answers the phone and tells people, okay, plug it into the green port.  So he was just - he was poking around using Shodan.  We've talked about Shodan.  It's basically, in the way that Google spiders port 80 and 443, which is the HTTP and HTTPS ports, Shodan spiders everything else.  So you could think about a web search engine is going to - it just, you know, it follows links and indexes things, the contents of servers that connect, that answer connections to port 80 and 443.  Shodan says, eh, there's 65,533 more ports.  What's there?  Maybe there's some other new stuff there.  And so it indexes those.



So Chris, bored one evening, asks Shodan, what do you have on port 27101?  And it returns a bunch of IPs.  It's like, yeah, there's things answering 27017.  I'm sorry, I got it - now I'm not sure because I have it 101 in one place and 17 in the other.  But one of those two ports.  I think it's 017, 27017.  Turns out the very popular Mongo database, when it sets up, it opens a listening connection, a socket, on that port and will accept requests, queries, database queries, on that port.  Of course, you never want to have that exposed.  That's in your Intranet behind, hopefully, three or four layers of firewalls and NATs and all kinds of stuff so that there's no way that Shodan, wandering around the Internet, is going to get an answer from your database server.  But in this case he found four IPs.  Shodan responded to Chris's query.



And by the way, this has been fixed since.  Chris acted very responsibly, found four IPs belonging to Kromtech, which is the publisher of this MacKeeper utility.  It turns out - and so he was like, oh, interesting, logs into their database server.  He's not even a Mac user, but this just turns up.  So he figures out, he does a little googling and figures out how to log into MongoDB, does so, and finds 21GB of remotely accessible Kromtech MacKeeper customer data.  I mean, just everything that they've got on these people.  Now, the good news is he informs them.  They quickly closed the public exposure, and they claim that looking at the login records of their database, nobody else ever did that.



LEO:  Mm-hmm.  And then they called the guy and asked him, and he said, no, I didn't do anything wrong.  So I feel better.



STEVE:  And you and I were talking about this before.  This is one of the other problems we are sort of struggling with, sort of as an industry, and conceptually, and of course with pressure unfortunately from the entertainment industry that's got its own agenda in the form of the DMCA, the Digital Millennium Copyright Act, is it can be illegal to look at somebody else's copyrighted cryptography.  But the problem, I mean, all the lessons we learn here on this podcast is that you have to have other eyeballs on this stuff.  It's Google's people and their Project Zero that are examining, not only their own code, but other code, and finding things we're glad they found.  I mean, we want this to happen.



Anyway, so there's a danger that Chris faced because these guys, if they were really evil, could say, oh, well, you know, you connected to our servers.  You knew that was wrong.  We're going to go after you legally.  Good news is that didn't happen.  They thanked him.  He said, you know, you're welcome, and then presumably he's going to be poking around at Shodan some more.  We may be hearing more from Chris in the future.  But, boy, the idea of these database servers like that being publicly exposed is horrifying.  And then the idea that you could have a global search engine that you can query, says, uh, what do you - give me some IPs for things that answer this port.  And then it says, oh, here's a list.  And then you sort of go, okay, and go through them.



LEO:  It's super valuable though; right?  I mean...



STEVE:  Yeah.  Yeah, super valuable for, again, for security research.  Also, unfortunately, when you find out that, like, all the light bulbs people have installed have a bad server that allows you to break into everyone's LAN that their light bulb is sitting on, uh, it's not - that's a problem.  So a mixed blessing.  But if, you know, if Shodan didn't exist, somebody else would just do it themselves privately because it's not a hard thing to do.



Okay.  So SHA-1.  We've talked about this often.  It was in October, a couple months back, that a full round collision was computed using a wall of graphics processing units, PlayStations or something.  And this is not a collision of the whole hash.  But what we've seen is we've seen reduced-round collisions, that is, where you, for example, SHA-1 does - it does a stirring of the pot, essentially, 80 times.  Well, if you only stir it 10 times, it turns out the bits haven't become sufficiently scrambled to prevent them from being unscrambled.  So it's the unscrambling the egg problem.  It hasn't really been scrambled enough.  It's like, okay, we can make this look like an egg again.  Eighty rounds of the full SHA-1 has never been - a collision has never been created.



The reason that's important is that, if you could deliberately synthesize an SHA-1 outcome - or put it a different way.  If you could create something different that produced the same result, say that somebody wanted to create a fraudulent certificate, the certificate is signed with a, for example, an SHA-1 signature, for which only someone you trust, like we'll just pick on Google for the moment.  They've got the private key.  This is the Google certificate.  They signed it.  And you can verify the signature.  So that's why you trust what the certificate asserts.



But if it's possible to create a different certificate that has the same signature, then that different certificate, with the same signature, essentially reuses the signature that Google created with their private key.  And so you would trust that, too, even though Google never saw it.  Google never signed it.  But it's got a valid signature.  So that's why the hash collision is a problem.  You want to make it - and that's the promise of a hash.  The guarantee is you can't do that.  There is no way, I mean, if the bits are so scrambled, essentially, there's no way for it to be computationally feasible for two different certificates to deliberately collide, to have the same hash.



But SHA-1 is getting older.  Computers are getting faster.  PlayStations are always getting faster.  So there's a lot of computing power available that we didn't used to have.  And we talked about Bruce Schneier's famous guess about, like, what year it would be.  And he was right about the shape of the curve.  But things have moved a little faster than he predicted.  So I think it was 2016 he was - no, no, it was 2020 maybe.  And it ends up more like, oh, more like maybe 2016.  So Bruce was just, you know - and this was a prediction made, to his credit, a long time ago.  So when you consider when he said this, he was shooting pretty accurately in terms of when we would have enough computing power that we would have to seriously look at going to a stronger hash.  Which is what SHA-256 is.



So we are two weeks away, and a couple days, from the end of 2015.  If anyone looks at GRC's certificate, you will see that all of my certificates, my EV certificates, expire on midnight of New Year's Eve, and they are today signed with SHA-1.  And that's on purpose.  Many people say, Steve, you know, you're still using old certificates.  It's like, yeah, because, first of all, there's nothing that is super important that we're keeping secret in the first place.



But you can only reach GRC over a secure connection.  And it is still the case that a significant percentage, not huge, but significant, on the order of about 40 million people, would not be able to connect to GRC for the last six months or so, or at any point, if I had dropped SHA-1 and switched to SHA-2.  I have them standing by.  DigiCert's been great.  They made, at my request, because of GRC's particular needs, SHA-1 certs that would expire on that date because, if they expired in 2016, then Chrome would be warning people that my site is using a certificate still valid in 2016.



So it's like, okay.  That forced me to kill them on midnight.  And my intention is to switch.  I will finally switch over.  And I'll actually do it at the beginning of that last week, like the beginning of next week, or the week after - yeah, it's the week after - because we know that if people's clocks are wrong, and people's computer clocks often, they're sometimes off by a few hours or a couple days.  So the expiration of the certificate is judged by the client.  So anyone whose clock is off is, like, running fast five days, if I waited till the very, you know, to New Year's Eve, for that period of time they would think the certificate was expired, when in fact it was their clock that was telling them it was already 2016.  So I'll swap my certificates.



Okay.  So this is the problem we have, is a substantial percentage of the Internet still cannot connect with SHA-256.  And that was the Venn diagram we showed at the top of the podcast.  Android 2.x, anybody using XP at SP2, and there was a third one that I'm blanking on that was - oh, oh, the OpenSSL 0.9.8 version branch.  Okay.  So an interesting compromise has been proposed.  And I first picked up on this thanks to somebody who tweeted me a blog from last Wednesday by Alex Stamos, who is a security guy at Facebook.  And it's not very long and provides some nice background, so I wanted to share it.



He says:  "Like many engineering fields, the practice of  information security in the real world is all about finding an appropriate balance between two desirable goals.  One of the most interesting areas of balance is between making systems secure against new attacks and providing security to the broadest population.  This dynamic is readily apparent in the debate around the upcoming sunset of the SHA-1 hash algorithm, and my colleagues and I at Facebook believe that the current path forward should be reexamined.  Our friends at CloudFlare have written an excellent post on the subject of SHA-1 certificates, and I would suggest you read their post for a good background on the issue."  And for anyone interested, I have one little brief paragraph that I snipped out of it, but of course the link is in the show notes.



"Facebook's data shows" - that is, their own Facebook, Alex's Facebook data shows - "that 3-7% of browsers" - that is, browsers connecting to Facebook servers - "currently in use" - is in use today - "are not able to use the newer SHA-256 standard, meaning that tens of millions of people" - and it's estimated about 40, so four tens of millions of people, he says - "will not be able to securely use the Internet after December 31st.  A disproportionate number of those people reside in developing countries, and the likely outcome in those counties will be a serious backslide in the deployment of HTTPS by governments, companies and NGOs that wish to reach their target populations.



"After discussing the issue with my colleagues at Facebook, we came together on the following two points:  One, the recent advancements in generating SHA-1 collisions do indicate that the industry should transition to SHA-256 certificates.  Two, we support the removal of SHA-1 support from the latest browser releases.  Facebook has found success running" - and here it's really interesting.



"Facebook has found success running a large TLS termination edge with certificate switching, where we intelligently choose which certificate a person sees based upon our guess as to the capabilities of their browser.  This allows us to provide HTTPS to older browsers using SHA-1" - and by that he means which can only use SHA-1 - "while giving newer browsers the security benefits of SHA-256.  We don't think it's right to cut tens of millions of people off from the benefits of the encrypted Internet, particularly because of the continued usage of devices that are known to be incompatible with SHA-256" - like all of these old Android devices that are not going to get upgraded, and they're still in use.



"Many of these older devices," he goes on, "are being used in developing countries by people who are new to the Internet, as we learned recently when we rolled out TLS encryption to people using our Free Basics Platform.  We should be investing in privacy and security solutions for these people, not making it harder for them to use the Internet safely.



"Taking these ideas into account, I support CloudFlare's proposal for a different approach.  Namely, the CA/Browser Forum should create a new type of" - he calls it an LV, a Legacy Verified.  Remember we've talked about DV, Domain Validation; OV, Organizational Validation; EV, Extended Validation.  So here's LV, a "Legacy Verified certificate that should only be issued to organizations that have demonstrated they are offering SHA-256 certificates to modern browsers."  So sort of a, you know, a compromise intent certificate.  "Such verification," he continues - and I just hit space, and I've just paged down by mistake.



LEO:  You know, there should be something like space for page up.



STEVE:  Yeah.  "Such certification can be automated or manual, and appropriate measures can be put in place to reduce the risk of a collision attack.  Those protections could include requiring LV" - that is, the Legacy Verified - "applicants to have already passed OV or EV verification, as well as technical best practices such as serial number randomization.  If this change cannot be implemented by December 31st" - okay, this is only two weeks from now - "then we call on the CAB Forum to delay the implementation of the SHA-1 rules for the period necessary to establish standards for legacy certificates.



"Facebook has already open-sourced the code we use for certificate switching as part of our Proxygen HTTP library, and all are welcome to use it under the terms of our BSD-style license.  This is not an easy issue," he finishes, "and there are well-meaning people with good intentions who will disagree.  We hope that we can find a way forward that promotes the strongest encryption technologies without leaving behind those who are unable to afford the latest and greatest devices."



And I have a link to Facebook's GitHub code, which jumps to line 381, showing a little six lines which - and I had already guessed how it had to work based on reading this, and our astute listeners who follow this stuff may be able to also.  And that was validated by Facebook's code.  Remember that when a browser or operating system operating on behalf of the browser, because some of the, like in Windows, the browser doesn't have the crypto library, and that's the same thing for Chrome on Windows.  They both use Windows' native crypto library, whereas Firefox brings its own.  Either way, the client of the client-server relationship, in its so-called "client hello" packet, it lists all of the cipher suites it supports.



Well, among the parameters of the cipher suite are the signature algorithms it supports.  So this simple and clever hack has the server look and modifies the server's actions upon receiving the client hello packet to scan the list of supported signature algorithms to see if the client is declaring that it supports SHA-256.  And, if so, that's the certificate the server chooses to send, to use in its ongoing TLS negotiation.  It sends a server hello and so forth back and forth.



If among the certificate suites, I'm sorry, the cryptographic suites that the client says it knows, if there isn't any 256 - and so, for example, for a Windows XP system, no matter running IE or Chrome, that is, Service Pack 2 because they added it in Service Pack 3, but Windows XP SP2 or an older Android - all of their connections will list the cipher suites they understand.  There will be no SHA-256 enumerated among them.  So then one of these, sort of these SHA-1 fallback servers would say, oh, this client, I'm not able to give it the strongest certificate available, so we'll go with SHA-1 because the alternative is the client has just said, "I can't do SHA-256.  These are the ones I can do.  Help me out here."  And so this allows the server to do that.



I think it's very clever.  The thing that immediately comes to a security person's mind is the potential for a downgrade attack.  That is, and we've seen downgrade attacks in many different forms.  It's not obvious how you would do that, that is to say, there are other measures that prevent that.  For example, remember that one of the things that happens in the finishing exchange is they each send the other essentially the signatures of their entire previous conversation.  So if anybody tried to go in there and to remove SHA-256 declarations from the client's hello packet, thus convincing the server that it needed to downgrade to SHA-256 signed certificate, well, then the client would see that what the server saw was different than what it sent and shut down the whole connection.  So it looks like it's safe for downgrade attacks.



And I think this is really clever.  And I just snipped out one thing from a very long blog posting by CloudFlare.  The link is in the show notes for anyone who's interested.  They just said:  "The seemingly good news is that, globally, SHA-2" - and this is, again, this is the CloudFlare blog - "SHA-2 is supported by at least 98.31% of browsers.  Cutting 1.69% off the encrypted Internet may not seem like a lot, but it represents over 37 million people.  That's the equivalent of the population of California not having access to encryption unless they upgrade their devices.  As SHA-2-only sites proliferate" - and, for example, GRC's going to have to become SHA-2 only because Google has said otherwise we're going to freak people out about your connection, tell them that it's not secure.



So, yeah, I'm switching.  I'm waiting for the last minute, but I'm switching.  So they said:  "As SHA-2-only sites proliferate, if these users on SHA-1-only browsers try and access an encrypted site, they'll see an error page that completely blocks their access."  And then they note that China, for example, 6% of users today in China cannot do SHA-256.  So the concern has been that, in those areas where there are repressive regimes and tougher economics, so that they just - it's not feasible for them to upgrade their cryptography as the rest of the world already has and will continue to do so, maybe we need to say, hey, you know, here's a solution.  Because SHA-1, as I have said, isn't actually broken yet.  No one has created a collision that we know of and academically reported it.  It just worries us.



So to me, this is brilliant.  This is a tremendous compromise.  And believe me, I'm not wishing - I'm wishing as much as I could that I wasn't using IIS and Microsoft server platform because I don't have access to this technology until or unless Microsoft decides to add it.  And this doesn't seem like the sort of thing that they're going to do.  I wish, because there will be, I'm sure, if this happens, more companies who are saying, hey, you know.



Remember we talked about this, oh, boy, I don't remember how long ago it was.  It was when Mozilla themselves changed their server to SHA-256, and they lost millions of downloads of Firefox.  And what was sad is that, since Firefox does bring its own crypto suite with it, if those millions of users, those millions of downloads that couldn't happen, if they had happened, then the users would be updating to a Firefox that does know 256-bit signing and then be able to use the rest of the Internet securely.  But they couldn't get to Mozilla because Mozilla changed their server.  So it's not just a theoretical, hypothetical, oh, you know, a tiny percentage.  Unfortunately, the Internet is now so important that even a tiny percentage is 40 million people.



LEO:  Yeah.  Well, what is it, 8% of a billion users in China, or was it 6%, is...



STEVE:  Yeah, 6%, but still, yes, that's a lot of people in China.



LEO:  Six million people; right?



STEVE:  And their, you know, Chinese citizens would like to have encryption.



LEO:  Right.



STEVE:  You know, in three weeks.



LEO:  Yeah, I'm glad CloudFlare wrote this article, yeah.



STEVE:  Yeah.  And it is, as I said, it is a really cool hack, the idea of looking at the client's declaration and dynamically choosing a certificate.  I mean, TLS already does that.  For example, in SNI, we've discussed this, Server Name Identification.  The certificate says this is the domain that I want to connect to.  Then the server dynamically chooses the certificate for that domain when you've got - this is not wildcard certificates, remember, I corrected myself on that, but completely different domains, so there is this on-the-fly capability already.  Well, let's extend it to cipher suites.  It doesn't appear to be a downgrade problem because of, like I said, we will detect any change in the certificate on the fly.  And this buys everybody some time.



Oh, and by the way, CloudFlare has deployed it on their entire network.  All of their servers, all of the sites that CloudFlare hosts, will not go dark on New Year's Eve for all of these people.  And now we know that Facebook won't, either.  There is an option in the CloudFlare control panel.  If for some reason you absolutely don't want that behavior, you can turn it off on a site-by-site basis.  But otherwise it will be a seamless transition.  You won't suddenly see your traffic drop on New Year's Eve.



LEO:  I think our audience is sophisticated enough that we're not going to have to worry about that.



STEVE:  Right.



LEO:  I hope.



STEVE:  So Google drops the other shoe.  Ryan Sleevi, a software engineer who I follow and keep an eye on, he and Adam of course are very much in the security side of Google.  We discussed several months ago, maybe it was a month and a half or so, that Symantec had been found misbehaving with some of their certificate issuing policies.  And this is so interesting that, again, I don't want to risk misquoting Ryan.  But you come away from reading what he posted thinking, I wonder what is really going on?  Because this just seems like, okay, there's more to this story.  There's something else happening.



So Ryan posted:  "Over the course of the coming weeks, Google will be moving to distrust the Class 3 Public Primary CA root certificate operated by Symantec Corporation, across Chrome, Android, and Google products.  We are taking this action in response to a notification by Symantec Corporation that, as of December 1st, 2015" - so that's two weeks ago - "Symantec has decided that this root will no longer comply with the CA/Browser Forum's Baseline Requirements."



So then Ryan says:  "As these requirements reflect industry best practices and are the foundation for publicly trusted certificates, the failure to comply with these represents an unacceptable risk to users of Google products."  And as I said, this is why it's like, okay, what's really happening here?  "Symantec has informed us they intend to use this root certificate for purposes other than publicly-trusted certificates."  Okay.



"However, as this root certificate will no longer adhere to the CA/Browser Forum's Baseline Requirements, Google is no longer able to ensure that the root certificate, or certificates issued from this root, will not be used to intercept, disrupt, or impersonate the secure communication of Google products or users.  As Symantec is unwilling to specify the new purposes for these certificates, and as they are aware of the risk to Google's users, they've requested that Google take preventative action by removing and distrusting this root certificate.  This step is necessary because this root certificate is widely trusted on platforms such as Android, Windows, and versions of OS X prior to OS X 10.11, and thus certificates Symantec issues under this root certificate would otherwise be treated as trustworthy."



Now, the only way I can read between these lines is Symantec knows they lost control.  That is, they're saying they no longer have confidence that they didn't lose the private key for this certificate.  That must be what has happened.



LEO:  Geez.



STEVE:  Pure conjecture.  But that's, you know, they're saying we cannot comply with these baseline requirements.  Well, one of the requirements is you absolutely know beyond a reasonable doubt that nobody has - you've never lost control of the private key.  They must have.  They must no longer be able to assert that that hasn't happened.  And so this is the deeply politicalese of how that statement is made, and then Google saying, okay, we're yanking trust from that certificate.  Message received.



LEO:  Geez.



STEVE:  Wink, wink.  Yeah.  So really interesting.  Okay.  To all Bell Canada listeners with HomeHub brand, apparently 1000 and 2000 series routers:  It has been discovered that, even if you're a faithful podcast listener, and you, as a consequence of that immediately disabled the frightening WPS support in your router's WiFi access point radio, even if you did that, it turns out what's been found is that these HomeHubs will indeed stop broadcasting in their beacon that they are supporting WPS.  That goes away.  The assertion disappears.  Yet authentication doesn't.



And anybody with a little bit of packet-smithery capability can, to anyone of these, request over the radio WPS authentication, using the PIN 12345670.  That will succeed.  The router promptly responds with the WPA2, the good security, the WPA2 passphrase.  And the attacker can then use that passphrase to connect.  It takes less than a second, no brute-forcing is required, and it's a huge flaw in these Bell Canada HomeHub series routers.  The news surfaced from a posting on DSL Reports.  There was a bunch of back-and-forth.  It was independently verified by several people.  The poster originally said 12345678.  But the old-timers among us will remember when we beat WPS into submission years ago.  There was a very clever hack where this eight-digit PIN could be, due to the bad protocol - this was always a bad protocol.  The way WPS authentication worked, you didn't need to submit the whole eight-digit PIN at once.  You were able to sort of independently check the first four digits.



And you'll remember when we talked about this, Leo.  You could independently check the first four digits and determine whether they were correct, and then the next four, that is, the second four.  Except that there's also a checksum, and the checksum is just, you know, it's a sum of nines checksum.  Which means that the last digit must always be the sum of nines of the previous seven.  So it's actually only a seven-digit PIN, which you can crack into a four and a three.  Which means 10,000 possibilities on the first four, and then only 1,000 possibilities on the second three, and then you're in.  Which is why everybody should turn off WPS authentication.  On this family of Bell Canada HomeHub routers, you can't turn it off.  You can turn it off, and it says, okay, it's not being offered.  But turns out it still is.



LEO:  They must have bought them from Linksys.



STEVE:  Anyway, so the poster originally said the PIN was 12345678, but that fails the checksum.  It turns out it's 12345670, which passes the sum of nines checksum, and the router gives you the WPA2 password, which you then use to log in.  So anybody can get onto anyone's network who has these HomeHubs.  And let's hope that this comes to the proper attention and gets fixed soon.



Now, Leo, your turn.  Satoshi Nakamoto.  Of course I guess the news had just broken last week.  Wired said that they thought they knew who it was, and this was a guy who was participating in a Bitcoin investors conference, and he smirked or giggled or averted his eyes or did something, I mean, he was just sort of acting a little squirrelly.  And of course we didn't talk about it, but you probably heard about the Australian government breaking into his home?



LEO:  Yeah, like the same day that he was outed, and then said, but it doesn't have anything to do with bitcoin.  But I find that hard to believe.  But, yeah.  So this, I mean, it had just broken, and we talked about it.



STEVE:  In fact, yeah, we were doing the podcast, and you saw the news, I think.



LEO:  Yeah, I saw the story as it broke.  And it turned out we saw the Wired piece, but Gizmodo had a very similar piece.  And in both cases the information they were working on had been provided by, well, Gizmodo called him a "hacker."  Wired called him a "source."  But a shady source, at that.  And in both cases it appears that it could be that the information was provided by the guy himself.  Apparently he's been going around kind of trying to convince people that he's Nakamoto. 



STEVE:  Hey, nobody else is, so maybe he is, you know, or maybe I am.  How do you know I'm not?



LEO:  It seems that some of the documents might have been forged.  The PGP key that seemed like a real smoking gun was backdated and possibly forged.



STEVE:  Right, right.



LEO:  And the blog posts maybe weren't really from that date, but were post-dated.  And so I think that there's - it's unclear, but I think increasingly just doesn't smell right.  It's yet another one.



STEVE:  Well, I would say the guy got his just comeuppance by having the authorities break down his door.



LEO:  Which explains why Satoshi Nakamoto, whoever he or they are, isn't stepping forward with any speed.



STEVE:  Not me.  It is not me.



LEO:  It's not me, either.



STEVE:  I did not - even though I explained how Bitcoin works a long time ago, I am not Satoshi Nakamoto.



LEO:  The thing that's interesting is that there's believed to be a block of 1.1 million bitcoins that must be owned by Nakamoto, and they haven't been touched or accessed in any way in years.  And that's what's really interesting because that supports...



STEVE:  Satoshi, if you're out there somewhere, and your hard drive crashed that had that bitcoin wallet, talk to me.



LEO:  Call Steve.



STEVE:  Because we could do something.  I could...



LEO:  Because that's worth more than 400 million in today's bitcoins.  It was more than that, even.



STEVE:  Well, and of course it was the tax authorities are the ones who said, uh, you know, are you sitting on a gold-studded couch over there?



LEO:  But this is also why I and others have kind of always thought of crypto currencies as kind of, in a way, a pyramid scheme because whoever creates the currency can cash in, you know, when it's easy to generate bitcoin.  And it's never easier than the first person to do it can kind of cash in on this thing.



STEVE:  We're just beta testing it, Leo.  We're just - this is the beta test.



LEO:  And if it catches on, which most don't, if it catches on it could be worth a lot of money.  And Bitcoin did.  So it is worth a lot.



STEVE:  Yeah, there were, like, 10 of them for a while, weren't there.  And then they just sort of died off, or just never got...



LEO:  Oh, there's Dogecoin.  There's lots of blockchain-based coinages.  And there's others, crypto currency and nongovernmental currency, all kinds.  Canadian Tire has some nongovernmental currency you can use.



STEVE:  I wonder what kind of router they have up there.



LEO:  Might be easy to access.



STEVE:  So, okay, this story, I just - this was on Fox News.  And I just - I got a kick out of it.  I found this in the mailbag, and it didn't really fit down in the Q&A.  But a listener of ours, Troy Frericks, provided this.  I just got a kick.  The title of the Fox News story is "Suspected Hit-and-Run Driver Caught in Florida After Her Car Called Cops."  So this is, again, sort of a...



LEO:  What?



STEVE:  Okay.  The future that we are sliding ourselves into.  The story reads:  "Police caught a driver linked to an alleged hit-and-run in Florida after her own vehicle called the cops, local media reported."



LEO:  I've been in an accident.  Quick.



STEVE:  Come help me.



LEO:  AMC Gremlin does what?



STEVE:  "Investigators received an automated call from the Ford's emergency response system..."



LEO:  That's so funny.



STEVE:  "...offering to let them speak with the driver if they pressed zero, according to [Station] WPBF.  So a dispatcher talked to the driver, Cathy Bernstein of Port St. Lucie.  She denied there had been a crash and said she hadn't been drinking, [the] police reported."  I don't know if she offered that.  I wonder if there's a breathalyzer in her sun visor.



LEO:  No, I haven't been drinking.  What do you mean?



STEVE:  Yeah.  "But cops say they saw significant front-end damage to the vehicle when they went to her home.  Bernstein then claimed she had hit a tree, according to police.  Eventually she admitted to the hit-and-run, police said, adding that she was actually trying to escape from an earlier crash."



LEO:  Oh, boy.



STEVE:  Her luck was really not with her that day.  "Bernstein was arrested, WPBF reported."  Yes, because her car turned her in.  So, oh, boy, yes, Internet of Things.  Let's all connect everything and see what happens.  Unanticipated consequences.



So we've talked about Telegram a number of times.  And I'm on record a month or two ago, just saying, eh, you know, the security's fine for texting your mom and telling her that you can't wait to see her for Christmas, but that already there's really well-known, well-vetted instant messaging platforms where we know how they work.  And the really stomach-twisting thing about Telegram is that it's the most bizarre, homegrown crypto you've ever seen.  I mean, it is deeply messed up.  And the problem is somebody made it, after all of the way to do it right was already in the public domain.  So it's like, okay, wait.  What?  So...



LEO:  Yeah, why bother, yeah.



STEVE:  Yeah, exactly.  Just use one of the many good ways to do it.  So Jakob Jakobsen, who just acquired his master's in computer science at the Aarhus University in Denmark - largest university, second oldest university there - did his master's thesis taking a hard look at Telegram.  And in the abstract at the top, he just says:  "The number one rule of cryptography is never create your own crypto.  Instant messaging application Telegram has disregarded this rule and decided to create an original message encryption protocol."



And we've talked in years past about the 13 year old who comes up with a bit scrambling algorithm, he says, oh, I've got this fabulous cryptography system, and it scrambles the bits up really good.  No one is going to be able to unscramble them.  It's like, oh, okay.



Anyway, so Jakob says:  "In this work we have done a thorough cryptanalysis of the encryption protocol and its implementation. We look at the underlying cryptographic primitives and how they are combined to construct the protocol, and what vulnerabilities this has.  We have found that Telegram does not check integrity of the padding applied prior to encryption, which lead us to come up with two novel attacks on Telegram.  The first of these exploits the unchecked length of the padding, and the second exploits the unchecked padding contents.  Both of these attacks break the basic notions of security and are confirmed to work in practice.  Lastly, a brief analysis of the similar application TextSecure is done, showing that, by using well-known primitives and a proper construction, provable security is obtained.  We conclude that Telegram should have opted for a more standard approach."



So that's really the whole story.  In his table of contents he shows a random padding vulnerability, reply and mirroring attacks in older versions, timing attacks, known attacks on primitives.  Then there's experimental validations of the two padding attacks he mentions, and also shows a malicious server attack.  So it's a catastrophe.  And so essentially that's the story is that, yes, I don't know if he earned himself half a million dollars.  Probably not.  He probably just did his master's thesis and said, okay, I'd rather have my master's degree than win their bogus award because it's already been demonstrated that people offering awards isn't a proof of security.  It's like trying to prove a negative.  So the proof of security is having somebody who takes the time to tear something apart and find the problems, which this guy did.  So again, I'm not telling anybody don't use Telegram.  Just don't use it if you actually do want security because it isn't.  



Okay.  A couple miscellaneous bits.  I mentioned, and it's funny because I was already, like, self-conscious about this, last week I referred to myself as a physicist.  And what I meant was someone who likes physics, I mean, who's intrigued by physics, not that I have a degree in physics.  So I just - I got a couple tweets from people saying, in fact, one guy said, "I was listening to Episode 537, and you said, referring to yourself, 'being a physicist.'"  Then he says, WHAT?!  And it's like, okay.  So I just wanted to, for the record, yes, I'm not a physicist.



LEO:  You are not a physicist.



STEVE:  I took advanced physics in high school, and in fact the poor teacher gave me my own project.  I duplicated Millikan's oil drop experiment and didn't have to go, didn't have to attend class.  I just took the final because that was, you know, mechanics.  And I just - I understand the nature of mechanics of physics so well that, I mean, I could just do the test on day one.  So he gave me a sort of a special project to work on, and I was the number one final in my freshman year at Berkeley in Engineering Physics 5.  So, yeah, I mean, I love physics, but I'm not a physicist.  So I didn't mean to say that I was.  Just that that's what I meant.



A Chris Wronski tweeted something he, again, listening to last week's discussion of the AOL Desktop client and its unauthenticated FDO scripting language, and I was criticizing it for having no authentication, he reminded me that this does come from, it heralds from the days of point-to-point modem connections.  And although I did refer to that, I wanted to make a point.  It's like, yes, I mean, it's when they went to the Internet, that was time to enhance it with authentication, or scrap it.  And certainly there's no better time than now, if anyone is still using that.  But I just wanted to raise the point that, yes, correct, once upon a time there wasn't like the kind of packet-switched, inherently man-in-the-middle-capable connections that we have today, thanks to the way the Internet works.



Oh, and I got a nice tweet from the guy behind the GWX, the Get Windows 10 Control Panel.  Ultimate Outsider was the site, and he just offered for us to contact him if we ever have any questions or comments, and thanked us for the shout-out.  And finally, someone else asked, he said, Steve, you keep talking about your - or actually I don't keep talking about it.  I did mention my sci-fi PDF.  And he said, "When was the last time you updated it?"  And the answer is the last time I read a really good science fiction book.  It's been a while.  I read the Expanse series, and it was good, but it wasn't Michael McCollum or Peter Hamilton.  It wasn't something that it's like, oh, my god, you have to read these books.  That's what's on my sci-fi PDF.



And by the way, the series I could not remember last week when I was blanking on it, and that was the Lost Fleet series by Jack Campbell.  That's a pen name, but the Lost Fleet series is, like, six or seven, and still there's even more books, "Beyond the Frontier" and all kinds of other things that he's working on.



I'll just note I tweeted to remind everyone yesterday that we had both "Childhood's End" and "The Expanse" series beginning.  I liked the first two hours of "Childhood's End."  I thought it was fun.  I mean, I don't have super high expectations, especially coming from sci-fi, but this was way beyond the typical horrific quality of things that the Syfy channel produces.  So last night was the first two hours.  Tonight is the second two.  And tomorrow night is the third two.  And I thought it was great, for what it's worth.



LEO:  Good.



STEVE:  I wanted to, for those interested in health, I got another comment that I thought I would just dip into quickly because I get this a lot.  And it's on the topic of magnesium.  Carl Engelbrecht said, "Steve, which magnesium supplement would you recommend?"  And I guess I've talked about it sort of in passing.  We've talked of course about Vitamin D in the past, and I've touched on other topics.  Maybe, Leo, one of these days, when things calm down, when I catch up on my projects, we'll have some more time to sit down and create some more talk about health and my interest in it.



But for what it's worth, I believe that magnesium is another element which we don't get enough of.  It's estimated that about 80% of Westerners are not receiving sufficient magnesium.  And that's sufficient at the RDA level, which is, I'll remind people, not set for the level that produces optimal health, but it's the level below which disease states begin to emerge.  So it's not like that's all you want.  You want probably as much as you can get within reason.  The problem is that crops are pulling nutrition out of the soil for themselves.  NPK fertilizer is what's put back in - nitrogen, phosphorus, and potassium.  But magnesium is not added.  And so we're beginning to see mineral-poor soil, which is producing mineral-poor plants, and that's where we would normally be getting magnesium.



The trick about magnesium, that is, supplementing magnesium, is that you just can't take a magnesium pill, just like the raw material.  So what is commonly done is it is complexed with, it is turned into a complex molecule by adding some kind of salt to it, basically creating a magnesium salt.  And, for example, there's oxide, magnesium oxide, magnesium carbonate, citrate, malate, taurate, and so forth.  The problem is that those disassociate those dissolve in our stomach, and then we're back to having the other component plus magnesium, and it's not well-absorbed by our intestinal tract.  And the consequence of that is, if you take enough of it to be meaningful, you'll end up giving yourself diarrhea because osmosis pulls water into your intestines.



LEO:  Milk of Magnesia.  You're actually making that.



STEVE:  Yeah.  And in fact that's the stuff, if anyone's ever done a colonoscopy, you go to the pharmacy and get an empty jug...



LEO:  You drink it, yeah.



STEVE:  ...with some powder in the bottom.  That's magnesium oxide.  And so you fill it with water, shake it up, and start drinking it, a glass every hour or so.  And before you know it, there's all kinds of rumblings, and you're all cleaned out and ready to have your innards looked at with a scope.  So the point is that's not - you don't want to do that all the time.  That's not good for you.  But you may want to supplement your diet, if you're a person who likes to supplement, with magnesium.



So one company has figured out how to do this.  It's a company called Albion Minerals, A-L-B-I-O-N Minerals.  What they cleverly do is they create dipeptides.  Instead of a salt, they take two amino acids and bind it to a magnesium molecule.  And they prefer glycine because that's the smallest amino acid that there is, in fact it's the smallest one you can have.  And so there's magnesium bisglycinate, they call it, or sometimes they use a glycine and a lysine molecule.  The point is - and that's actually the one I take.  Doctor's Best is the brand I buy.  And the result is it is highly absorbable.  When you ingest it, they've chosen the strength of the molecular bond such that it does not dissolve in your stomach.  It gets down into your intestinal tract.  And then you get to use active transport to get it into your bloodstream.



So the upshot is there's many different - Albion supplies the raw material to many different companies who sell it.  There's a seal that they use called TRAACS.  So you want to see that on the label.  And so anyone's magnesium that is sourced from Albion that has a seal TRAACS, that's what you want.  And you end up being able to take a lot more, if you wish to, before you see any negative effects on your digestion.  And it means that, even if you're only taking a little, you're actually absorbing a much greater percentage of it, rather than it just getting washed through you.  So there's our little health diversion.



LEO:  Mm, mm, mm. 



STEVE:  And finally, an interesting question that I ran across, also in the mailbag, from Juddson in Pennsylvania, with a question about SpinRite on SCSI RAID drives.  He said:  "We recently had a major drive failure on a RAID storage array at my place of work.  Not sure of the configuration, but I don't think it matters much for my question.  Apparently, one of the drives had a failure some time ago, and no one had noticed."  Huh.  And remember I told the story about that happening with my own employee, Sue.



"So when the second drive failed, people of course noticed immediately.  It contained critical financial data and company records, so there was a bit of panic going around.  I'm not on the sysadmin team, I'm just a developer on the software team, so I was not directly involved.  However, I was aware of the issue, as were we all since this was a corporate server, and that one of the options on the table was to send the entire array back to the drive manufacturer for recovery, with a price tag upwards of $10,000.



"I own a copy of SpinRite," Juddson writes, "and pictured myself swooping in to save the day," he says, "With the assumption that my company would be more than happy to pay for a SpinRite site license, having saved them $10,000.  Upon recommending the solution to our lead system administrator, I was essentially chastised for having even mentioned SpinRite.  The drives were SCSI drives, and it seems as though SpinRite, in the eyes of professional data recovery firms, is akin to a homeowner trying to fix their own septic system failure.  You're just going to make it worse; leave it to the professionals.



"Is there," he asks, "any way that SpinRite could have helped the situation?  I was imagining that we could pull the failed drive out of the array, mount it individually, run SpinRite on it, and return it to the array.  Is there any way to do this easily with a SCSI drive?  How do you respond to the notion that SpinRite will just make your problem worse, I assume by performing heavy" - I think he said "heaving."  Maybe he meant heavy.  Yah, so he wrote "heaving" - "read/write operations on the disc and thereby worsening the drive wear?  I know that's not your position; otherwise, you wouldn't provide the product. I'm mainly curious as to how to respond in future situations when I experience SpinRite skepticism.  As far as the array in question, we apparently were able to recover from a backup, which we initially thought had been lost, as well. I still wish we would have tried SpinRite, just to see what it could have done, if anything.  Thanks."



And so, interesting question.  And the answer is yes.  I essentially did exactly that, although it was not a SCSI drive, it was just a SATA drive that Sue had in her mirrored RAID array.  One drive died.  She ignored the warning every time she booted her machine until the second one died, and then I got a call.  So very much like happened there.  And I really, again, I'm reinforcing my feeling that, boy, RAIDs, even RAID 5, it might just consider stopping.  You know, like maybe waiting till 2:00 a.m. when nobody's doing anything, when there's no file activity, and then deliberately taking it offline so that it comes to the attention of IT, and they can say, oh, okay, we'll put it back online, but we're also going to rebuild the array with a new drive.  That would be nice.  Seems like we need something like that.



But anyway, so the trick here would have been to run SpinRite on the SCSI drive.  You would have to have a non-RAID SCSI controller, just so that you could plug the drive into the system and run SpinRite on it.  But that's all.  And then you run SpinRite, it fixes it, as it generally tends to, and you're back in business.



So Juddson, thanks for the question.  And, yeah, we can solve that problem, too.  And I remember hearing a long time ago - this may be apocryphal, I don't know.  But when I had a tech support department with a whole bunch of people, and SpinRite was in its youth, we did hear that professional data recovery services simply saved themselves a lot of time and trouble by themselves running SpinRite.



LEO:  Yeah, which may be why they didn't want you to do it.



STEVE:  Yeah, they'd rather get $10,000, yeah.



LEO:  Yeah, there's no way SpinRite could damage data.  I guess if there were physical damage to the drive, any use of the drive could make it worse.



STEVE:  Yes.  It's important to understand that all it's doing is using - it's very clever, but it's just reading.  I mean, there's maintenance things it does.  There's ways it has of reading incomplete sectors.  I mean, there's a lot of depth to it, which is why it succeeds so much.  But the only concern is, if a drive has really, like, got minutes remaining, then SpinRite could theoretically...



LEO:  Every minute counts.



STEVE:  And it's more of a concern than something we've ever seen, but it could push the drive over the edge.  But anything else was going to, too.  Just trying to back it up would have done the same thing because SpinRite is just reading the drive.



LEO:  You know, it does raise the issue, though, I sometimes tell people, before you start doing any file recovery stuff, you might want to image the drive.  But the problem is that even isn't - because if you can't read the drive, imaging it's going to not read those sectors.



STEVE:  I was just going to say, many people run SpinRite when the drive won't image because the imaging program just stops cold.



LEO: I can't read it, yeah. 



STEVE:  It just says, you know, like it just won't go any further.



LEO:  Imaging makes sense if the issue with the drive is, you know, the file allocation table has gotten corrupted or something like that.  Then doing a sector-by-sector image of the drive, at least you have that, that you could go back to.  But there's so many other kinds of errors.



STEVE:  Well, and for example, you know, law enforcement, in forensics, the first thing that they do is make an image of a suspect's drive.



LEO:  And work on the image.



STEVE:  So that they're able to have a chain of custody.  They're able to say we did not alter in any way this drive.  And that prevents the suspect's defense attorney from saying, you know, whatever.  And then they work on the copy of the original drive.



LEO:  Right, right.  Somebody's saying if the drive won't mount, you can't image it.  Yeah, if the drive won't mount, you can't SpinRite it, either.  You do have to at least get to that point.  That's kind of the problem with drive recovery.  There's a vast range of issues.



STEVE:  Although it is the case that a drive that is online, but the OS can't see...



LEO:  That's different.



STEVE:  That won't image, but that will SpinRite.



LEO:  That's right, that's right.  And what am I telling you?  You know that.  I'm agreeing.  Yes, that makes sense, yes.



STEVE:  And after this sponsor break comes - I put it number one.



LEO:  The question.  



STEVE:  The number one question, perhaps the coolest question of all time.



LEO:  Oh, so exciting.  Does it have to do with the deity?  He's looking around, what deity?  Of which deity would you speak?  All right, Steverino.  I've got a Carnac here?



VOICE:  Do a Carnac.



LEO:  I'm going to do a Carnac?  You didn't tell me what the answer is.  Oh, let's see what the question is.  I've received in an envelope - does this have to do with I've got the conn?  The answer is, "Take the conn, No. 2."  



STEVE:  No. 1.



LEO:  And the question is - No. 1.  Well, No. 1, No. 2, whoever.  The answer is 42.  I don't know why I was just handed that.  But there are no Star Wars spoilers on this show, and I should have said that right upfront.  Did you know there's a Google Chrome extension that will block all Star Wars spoilers?  I know people, including our own Patrick Delahanty, our programmer, who are off Facebook until they see Star Wars.



STEVE:  Wow.



LEO:  We're going Thursday, 22 people from TWiT, all of the TWiT staff, we're all going.



STEVE:  In two days.



LEO:  Two days.



STEVE:  No, three.



LEO:  Thursday.



STEVE:  Thursday.



LEO:  Day after tomorrow.



STEVE:  Nice.



LEO:  What?  Twenty-six is the answer?



VOICE:  No.



LEO:  What's the question?  Twenty-six of us are going.  That's pretty much everybody now.  That's more people than work here.  Go ahead.  I'm sorry, Steve.



STEVE:  I'm - I've always been more...



LEO:  Are you not a Star Wars fan?  You're a Star Trek.



STEVE:  I'm not.  I liked the first, the original three.



LEO:  Oh, and then it really went downhill.  I agree.



STEVE:  I just, it's like, okay.



LEO:  Jar Jar Binks [raspberry].



STEVE:  And apparently he's still in, like, in where we're going.



LEO:  No.



STEVE:  Oh, yeah, there's Jar Jar is in there.  I hope...



LEO:  No spoilers.  I don't think so.



STEVE:  I have it on pretty good authority.



LEO:  Really?



STEVE:  Yeah.



LEO:  Some people have seen it now because the world premiere was last night in Los Angeles.



STEVE:  Yeah.  So I'm hoping what we're doing is starting a whole new franchise.  I mean...



LEO:  Like J.J. did with Star Trek; right?



STEVE:  Yes.  Yes.



LEO:  Which I loved the reboot.



STEVE:  Yes.



LEO:  No, I - this is a great director, a brand new studio.  I think this is going to be great.  I like the new stars.  Well, I'm not going to say more.  Because there are actually some people who will not watch the trailer.  They don't want to see...



STEVE:  I've watched Harrison on a couple of talk shows, and he's just so wonderful.  I just love the way he's evolved.  I mean, he's just - he's a neat guy.



LEO:  I'm trying to [crosstalk].



STEVE:  And so, and it's fun to have him.



LEO:  So will there be a drinking game for the sun flares?  How early before the first J.J. Abrams lens flare?



STEVE:  Is it people's belief that there's, like, some reveal?



LEO:  Yes.



STEVE:  I mean, like, is it just a nice story?



LEO:  There will be spoilers.



STEVE:  Could someone say something where it would just destroy it for you?



LEO:  I think so.  In fact, I don't even want to say what it is, what the speculation is about because that could be a spoiler.  But just between you and me - and there are some people who have not watched the trailers.  But people are looking closely at the trailers, and they are seeing things that are missing, and they are questioning why.



STEVE:  Wow.



LEO:  Some say I look at what is, and ask why not?  But I think you - anyway.



STEVE:  You know?  And for people who are that much into it, I think that's great.



LEO:  Yeah.



STEVE:  You know?  I mean, they're having a ball speculating.



LEO:  They're serious, oh, yeah, it's fun.



STEVE:  I think that's wonderful.



LEO:  That's really what this is all about.  And there's a big sign on the movie theater that we're going to go see this at.  We're going to go see it in 3D.  There's a big sign saying you can wear a costume, but no masks or light sabers allowed into the theater.



STEVE:  And please, no really high hair.



LEO:  Yeah, please.



STEVE:  Because that would be...



LEO:  I'm concerned.



STEVE:  ...an alien with really high hair.



LEO:  Because even though we have tickets, which guarantees us a seat, we don't have reserved seats, and there's going to be a long line.  The line starts at 7:00 a.m.  The show starts at 7:30 on Thursday.  And we've got 26 people.  I don't think you can go get two seats in the line and then 24 other people show up and say, oh, thanks for holding the place for us.



STEVE:  No, that would not go over well.



LEO:  I don't think so.



STEVE:  So do you not have a reserved seating theater?



LEO:  No.



STEVE:  Ah.  We do.  We're big on those in Southern California.



LEO:  Oh, I would go for that.



STEVE:  Yeah.



LEO:  I would go for that.  Otherwise, because if you don't get in line, you're sitting in the front row.  May not be a bad thing.



STEVE:  Yeah, and in 3D, like, aagh, in the front row.  But, yeah, I think Star Wars you have to see in 3D.  The good news is Jen loves 3D.  In fact, she will not see a flat movie - I know. She will not see a flat movie if it's available also in 3D.



LEO:  Really?



STEVE:  Yeah, she won't.



LEO:  So she drags you to these 3D versions?



STEVE:  Yeah, and sometimes they don't have them at convenient times, like several of our theaters only do them in the evening.  And I like to go in the late afternoon to avoid...



LEO:  That way you can get to the Denny's Early Bird Special at 4:30.



STEVE:  That's right.



LEO:  Very handy.  You know, there's nothing like being a senior citizen.  Both you and I are headed that way soon, sad to say.  You know what, though?



STEVE:  You caught up about a week ago.



LEO:  I'm 59.  But I bought a camera that's older than me.



STEVE:  Nice.  I like that.



LEO:  This Leica M3 was made in 1955.  I was made in 1956.  So I don't feel so old when I use - I love this camera.  It's a beautiful thing.



STEVE:  Actually, technically you were made in 1955.



LEO:  No, born November 29th, 1956.



STEVE:  Okay.  You squeaked out of the conception window.



LEO:  Yes, now, well, the egg of which I was partially made.



STEVE:  That's true.  That had been around for a while.



LEO:  Been around since '33.  So technically I've been through this whole century, this last century.  Come on, let's get to the big question.  You ready?



STEVE:  I was going to say, we rarely go down the rabbit hole on this podcast.



LEO:  Well, Star Wars is worth a rabbit hole or two.



STEVE:  That's true.



LEO:  This comes to us - oh.



STEVE:  And we may be back to only one question, Leo.  We're at an hour and 40 minutes.  And I could spend - I'll spend easily 10, 15.  So I think we'll just do one, and we'll...



LEO:  Don't rush.



STEVE:  We'll do the other ones next week.



LEO:  This is not television, this is our own little fiefdom.



STEVE:  And I don't think anybody will be disappointed, so here's perhaps the coolest question of all time.



LEO:  Comes from where my son Henry goes to college, Boulder, Colorado.



STEVE:  Yup, where it's very cold right now, I hear.



LEO:  Just had a foot of snow.  Henry says,  "They closed all the classes.  Some people got out of final exams, but not me."



STEVE:  Ah.



LEO:  And it's Steven Bussinger of Boulder, Colorado poses the coolest question of all time:  Hi, Steve.  I realize this is not in your wheelhouse, but seeing as how you're interested in health, and you have a penchant and talent for explaining complicated electronics concepts to the layperson, I was hoping you could shed light on this for me.



I was reading a recent study about the circadian rhythm of cyanobacteria.  It was in phys.org, but that's not important.  At the end of the article, the study author elucidates a potential explanation for the existence of circadian rhythms.  You know what's so weird, Steve?  We were talking, I kid you not, about circadian rhythms with Dr. Kiki on Sunday on TWiT, and about the cave study.



STEVE:  Nice.  Oh, yes, right, right, right, where they disconnected people from the 24-hour cycle.



LEO:  Right.  And I invoked your name because I was talking about the, what do you call it, the bifurcated sleep cycle?



STEVE:  Yeah.



LEO:  Whatever that is that you do?



STEVE:  Or that people used to do before we had Republican debates and the second installment of "Childhood's End" to keep us awake late at night.



LEO:  Yeah, that keeps you awake.  Here's a quote from the end of that article:  "In the historical development of electrical circuits, engineers found that synchronizing each step of a computation to an internal clock made increasingly complicated tasks possible, ultimately leading to the computers we all use today.  Perhaps in the future we'll be able to use synthetic clocks in engineered microbes in a similar way."  What?



What I'm trying to understand, and hope you can explain, is why synchronization makes more complicated tasks possible.  Do you know what specific circumstance he is referring to in the realm of electrical circuits?  I'm wondering if there's an inherent property of synchronization that makes more complexity possible, or at least makes current systems more efficient.  Thanks for your help, and thank you for your show.



STEVE:  So I invite our listeners to hit pause.  You heard the question.  What is it about the way our systems work?  Because when you think about it, all of our stuff has clocks.  Every, I mean, everything has a clock which is, you know, and we talked about...



LEO:  That's why they say 4GHz processor.  That's the clock.



STEVE:  Exactly.



LEO:  The original IBM PC had a 4.77MHz clock.



STEVE:  Right.



LEO:  That's the clock.



STEVE:  Right.  So, you know, it's always present.  What is it about that?  And so, you know, pause the podcast, and we'll be right here when you hit play again.  Don't worry.  So pause the podcast and think about your answer.  What do you think?  And then, okay, one, two, are you paused?



LEO:  Pause now.



STEVE:  Pause now.



LEO:  Okay.  I'm pausing.  Okay.  Now, okay, I'm thinking, and I have not read this ahead or anything.



STEVE:  No.



LEO:  I was thinking concurrency it makes sense because synchronization will allow you to have concurrent processes without a race condition.  But this is pre-concurrency.  Why would you want it in lockstep?  In other words, why would you want an add to take exactly the same amount of time as a move?  Is that kind of another way of saying it?  Like one operation takes exactly the same amount of time as the second operation?  Actually, sometimes not because some operations take multiple cycles. 



STEVE:  Yeah.



LEO:  So it's not that, is it.  Hmm.



STEVE:  What happened?  And this is the reason I just thought, oh, what a fabulous question, is there was a change in thinking, probably around the middle of last century, like the 1950s, maybe the '40s, maybe the '50s.  Anyway, one of the ways it's sometimes fun to attack these questions is to look at an extreme example.  Imagine wiring, that is, with gates, you know, like coming up with an electronic solution to a spreadsheet.  That is, where you - or an accounting system, that is, where you're like, that's what you're trying to create is an accounting machine, and you do it with wires and gates.  I mean, you just sort of say, okay, well, you know, if I connect these things, this battery to this light, it lights up.



So if I'm going to do an accounting machine, I would have to have some sort of a register to put one of the numbers in, and then another register.  And then somehow, like, add them using some circuits, and then show that in lights.  But that's only, you know, that's not accounting.  That's just addition.  So my point is you can see how rapidly a problem explodes if the tool you have is like just electricity, or even electronics, but just like circuits.  And so the answer to the question, what it was that happened in the historical development of electrical circuits...



LEO:  Is it okay to unpause now?  Oh.



STEVE:  ...is the concept of breaking a big problem into tiny pieces.  I mean, that was the aha.  That was the big thing that happened was, rather than just - because, for example, there used to be analog computers, where you actually had an integrator which was a constant current source feeding a capacitor.  And the constant current increased the charge on the capacitor over time, which actually is integration at the rate at which the current flows.  And then you'd have two of those, and you'd then have something else that summed the two charges into - and that was addition.  But you literally did it with analog flows of current and voltage.



And so the big change - and the idea was that you set this whole thing up, and then you started it, and it worked out the problem.  We actually went through a stage like that.  But the thing that happened that suddenly required a clock was this concept of breaking an insurmountable, I mean, an intractably large, complex, electrical problem, essentially, into pieces, into events.  And I've told the story before about Wozniak's design for the floppy disc controller on the Apple II, where I'll never forget looking - I had an Apple II, of course, because I did the light pen for it.  I looked at the controller; and, you know, controllers were complicated things.  They were typically, you know, the Apple, you could have a really long board that would even have to get cut off, it had to have its nose trimmed off so it could slip under the keyboard, that sort of sloped down in the front.



So, like, there were graphics cards you could add that were just crammed with components.  You couldn't get any more chips on these things.  And here was Steve's design with, like, five chips on it.  They were lonely chips.  They were like, hardly even worth having a circuit board for.  And I kind of wondered why they just didn't build it onto the motherboard, but they wanted, not everybody, back then you used cassettes sometimes, and you had cassette input and output audio, sort of like with a modem, in order to store and retrieve programs.  So this was an extra cost option.



And the brilliance of what Steve did was he created essentially a microcontroller out of this just a couple chips.  And when I figured out what it was he had done, I was just - I was so impressed with the details.  But there was a period of time when circuit designs went from just being a bunch of gates laid out and interconnected to do a job, and then the concept, and people will recognize this, but it occurred earlier than people think, of microcode.  That is, instead of just sort of having the gates do their thing, when we had access to even small memories, and that was the thing that was missing for so long, some kind of a memory.



Then what you could do is, just with two chips, you have a memory chip where you - and say that this was a ROM, because these were typically read-only memories.  You would have a bunch of addressing pins, which addressed the location in the ROM, and a bunch of outputs.  So, like, say, eight input pins, so you have 256 bytes in the ROM, eight inputs, and eight outputs.  So you have eight bits come out, and a pattern of eight bits selects the location.  Then we also had something called "latches."  And so a latch was, again, one chip, where it had inputs and outputs.  And when the clock, like, dropped, when the clock level fell, what was at the inputs at that instant was transferred to the outputs.  And then even if the inputs changed, until the next clock edge, the falling edge occurred, the outputs wouldn't change.



And so the brilliance, and this is what Steve did, and designers were doing this at the time, was if you took the outputs of, for example, this four-bit latch and fed them into the ROM, and took four of the eight bits out of the ROM and fed them back around into the latch, what you have is a rudimentary computer.  You have a rudimentary two chip, and they're not fancy chips, it's just a ROM that stores a pattern of bits and a latch that, on the falling edge of the clock, transfers its inputs to its outputs.  Because, if this was a four-bit latch, and you've got four lines going into the memory, well, that's 16 steps.  And then the other four inputs to the memory would be four circuits, four signals that you need to sense, and the other four outputs, or you could also use some of the circulated, the ones that are being fed back into the input through the latch.  Those go do other things.



And the point is that what you have is something where, when that clock falls, the combination of the current four inputs to the latch, plus the state of the other four inputs to the memory, determines the next step.  It is a very crude programmable state machine, and it transformed the way stuff was built because it would have taken a huge number of discrete logic gates and all kinds of crazy complexity with signal paths and delays and just confusion.  And that was distilled into something very simple where - and if you got it wrong, you just changed a couple bits in this ROM, and it would fix it.



So we had the first concept of programmable electronics.  And from the first instant that happened, we had to have synchronization.  We had to have a clock in order to create phases in time so that in this interval of time we're in this state, and then in the next increment of time we move to the next state.  So we created a state machine which could then accept other inputs and generate outputs in a way that was driven by data, a pattern of data in the ROM; and you had a very early, crude, you really would be pressed to call it a computer, but the essence of the idea, the concept.



And what that did was instantly change the way designers created circuits.  Not all problems could be solved in this way; but, after understanding the elegance and the power of the solution, it would be the first thing a designer would consider is okay, wait a minute.  Or maybe three quarters of it.  They could take three quarters of their problem and collapse it into a couple chips and then have to do some other things sort of the old-fashioned hard way.  But it was an overnight change that we've never come back from.



The two things it needed, it needed the concept of a ROM, that is, the idea that there was somewhere to store this intent of how we move from one state to the next.  Because that's really all PCs are.  CPUs are big, very complicated state machines, where they're in a given state, and upon the event of a clock, the current set of inputs moves it to its next state.  And of course this little simple two-chip solution itself had no memory.  It just sort of had intent.  It just expressed its intent and dramatically simplified the way circuits were designed.



Now, of course, generations later, there's a huge amount of context in the processor that controls what it does.  So it's gone crazy.  But the essence, which is what Steven was asking, was throughout, from the first moment this happened, it was this concept of moving from one state to the next.  And it's not clear how synthetic clocks in engineered microbes might work, but it's not that far of a reach because it is an incredibly powerful technology to go to a way of breaking a problem down.  It's sometimes like not as quick as if you sort of did a brute-force solution, but you can often trade speed for simplicity.  And of course that's that solution.



So I just loved the question, and I thought our listeners would probably get a kick out of, well, first of all, seeing if they guessed what I was thinking as the right answer, and I've no doubt that the mailbag and my Twitter feed will fill up with people saying, you know, how about this?



LEO:  Well, so I'm thinking, and a little clarification, I wasn't too far off with the notion of this concurrency notion because, for instance, an Enigma machine, which has no clock, but does calculations, the calculations are like a choo-choo train.  There's the first one and the second one and the third one.  And you don't need a clock because they just all succeed one another; right?



STEVE:  Actually, it was clocked.



LEO:  It was clocked.



STEVE:  The Enigma machine was because it went from one state to the next, as quickly as it could.  Everything advanced, and then the circuits were checked to see if it had a solution.  And if not, then everything advanced again.  And if a solution was found, then it just locked up, it stopped.



LEO:  You're talking about Alan Turing's solution.



STEVE:  Oh, you're right.



LEO:  But the original encryption machine was just cranked.



STEVE:  I'm sorry, you're right.  I was talking about cracking the Enigma machine.



LEO:  Cracking, well, that was going to be my question was...



STEVE:  Not the encipher machine.



LEO:  Encipherment was in fact just a logical progression, didn't need clocking.  You do this, this, this, and this.  One thing follows another.



STEVE:  You might argue that - remember that when you pressed the key, it advanced the rotor.



LEO:  So that's a state.



STEVE:  That's a state.



LEO:  Yeah.



STEVE:  And so it moved it the next state.  And so it was manually clocked by the operator typing on the keyboard.



LEO:  So I guess, I certainly would understand how it would need to be like a choo-choo train.  Car two must come after car one, and car three must follow car two.  But that doesn't have to have a regular metronomic clock to that.  That just means it has to be sequential; right?



STEVE:  True.  And remember that we, for example, laptops, they have a variable clock.  They slow down in order to conserve battery and heat sometimes because the clock causes a dissipation of energy.



LEO:  So really it isn't so much clock as we think of it as a time.



STEVE:  Right.



LEO:  As it is sequence.  It needs to be sequential.



STEVE:  Right.



LEO:  You can't do operations out of order because - then of course, as soon as you do concurrency, and certain some gates have concurrency in the sense that things happen, and then they interact, those would have to - you'd have to make sure those happened, not merely sequentially, but kind of in lockstep.



STEVE:  Yeah, and that's, if we go a little bit further, that's sort of the way the design has evolved is there are things called "propagation delays" where it takes a while for the circuit to assume its new condition and sort of settle down.  And in fact, in my little simple example, where we had the latch whose output goes into the inputs of the memory, and some of the memory's outputs feed back around to the latch, back then the memories weren't very fast.  So there was a maximum speed at which you could run that clock because you had to, when the clock occurred, if the latch's outputs would change, causing a different address to be given to the memory, so it would look it up and then send its outputs back around to the input.  So you had to - so you'd do the clock, and then you'd sort of wait for things to settle down again to get ready for the next event.



LEO:  Another way to think of it be more like a traffic cop saying, okay, wait.  We're going to wait for everybody to be done.  Okay, now you can go to the next step.  Right?



STEVE:  Yes, yes.



LEO:  All operations must complete.  We are now in a known state.  Next step.



STEVE:  Yes.  Yeah.  And, you know, a four-way controlled signal works that way.  It moves through stages in a preprogrammed fashion with different amounts of time spent.  But these people go, then those people go and so forth.  So, and it's really good.



LEO:  You need a traffic cop.  Otherwise it all happens at once.



STEVE:  Otherwise it's a big mess.



LEO:  It's that a Robin Williams line?  Time is God's way of keeping everything from happening at once.



STEVE:  That's right.



LEO:  By the way, and I think we're probably going to wrap at this point; right?



STEVE:  Yup, yup.



LEO:  I did want to mention one thing that just broke, that apparently a security researcher, dfir-blog, has discovered a flaw in Kerberos, the authentication system used in Windows.



STEVE:  Oh, that's been around for ever.



LEO:  Kerberos is really old.



STEVE:  I think MIT designed that.



LEO:  Yeah.  In fact, I'm kind of stunned that Windows still uses it.  I'm reading an article from The Register, so I'm not sure, I mean, I'm just seeing this right now.  It says the vulnerability cannot be fixed.  The only solution is to use Microsoft's Credential Guard program to prevent passwords from being stored in memory.  I'll have to read the blog post.



STEVE:  And we'll talk about it next week for sure.



LEO:  Yeah, dfir-blog.com, Kerberos attacks.  I seem to remember Kerberos attacks before.  This is not new.  But wait a minute, he says this is not a new flaw.



STEVE:  Ah.



LEO:  I don't know why the media is reporting this as a new flaw.  Okay, never mind.  Forget I mentioned it.  My mistake because I read the Register article.  Then I went to the original.  Always go to the source.



STEVE:  Yeah.



LEO:  Because remember there have been Kerberos issues.  This is ancient.



STEVE:  Yeah, well, yes.  It was one of the very early solutions for doing secure online authentication.



LEO:  Right.  Okay.  Never mind.  Forget I mentioned it.  Steve Gibson is at GRC.com, a great place to go if you want SpinRite, THE place to go, the world's best hard drive recovery and maintenance utility.  Don't listen to those other guys who say, oh, you can't run SpinRite.  That's just so they can run it and charge you $10,000.



STEVE:  Yeah.  And, by the way, I'm happy to give people a refund.  That's always been our policy.  No questions asked.  If you're not happy - some people buy it because they think that it, like, reinflates their car tires.  And Sue says, "Uh, no, sir, we'd be happy to give you your money back."



LEO:  You can have your money back.



STEVE:  Normally it works for people, and so we're still here.



LEO:  Actually, the interesting tie-in with the Kerberos flaw is it is a clock, it's an asynchronization flaw.



STEVE:  Yup.  I was going to guess because it is a time-based protocol.



LEO:  So this is the concurrent proof of why you need a clock, and a good one.  We also can find many other fine things at GRC.com like SpinRite, like his SQRL research, soon to be a major motion picture near you.



STEVE:  Yup, getting close.  The protocol's nailed down.  I'm going to revise the client, revise the server, and then nail down some things that I just haven't gotten to.  And then we'll be doing a fun podcast. 



LEO:  Lots of health information there, including the original Vitamin D research.  Oh, my gosh, it just goes on and on.  ShieldsUP!.  Go to GRC.com.  You'll also find copies of Security Now! there, the audio, the text file.



STEVE:  We have a menu across the top, just like many sites.



LEO:  Look at the menu.



STEVE:  Just sort of float your mouse cursor and look down in there, and you'll find all kinds of stuff,



LEO:  People probably say that.  Well, I can't find anything.  Where is it?  Well, just the menu will - you can see everything's there.  It's nicely organized.  16 and 64Kb audio at Steve's site of this show.  The transcripts from Elaine Farris, those are great.  We have 64Kb audio and a variety of video formats, as well, at our site, TWiT.tv/sn.  You should also subscribe.  All the podcatchers everywhere, iTunes, Apple TV, Windows, everywhere you can find it, Roku.  Just subscribe so you don't miss an episode because you're going to learn.  You're going to learn, as we do every week.  Steve, have a great week, and I guess we have seven more questions we can do then.



STEVE:  Yup, we do.  I'll add three to that, to the seven we already have, and we'll tackle them next week, along with - lord knows what the week's news is going to bring.



LEO:  Steve Gibson.  Talk to you next week.



STEVE:  Thanks, Leo.



Copyright (c) 2015 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#539

DATE:		December 22, 2015

TITLE:		Listener Feedback #226

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-539.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!, the last episode of 2015.  And you think, you know, it's Christmas time.  The hackers must be relaxing.  No, no.  There's all sorts of news from the front, including a horrific story about security on Juniper routers.  Steve will talk about hotel and other public WiFi access points and the risks therein.  And we'll answer some great questions from our audience.  Security Now!, the last episode of 2015, is next.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 539, recorded Tuesday, December 22nd, 2015:  Your questions, Steve's answers, #226.



It's time for Security Now!, the show that protects your security and privacy, with this guy right here, Steven Gibson.  He is the man in charge of Security Now! and GRC.com, the Gibson Research Corporation, where he purveys the finest hard drive maintenance utility known to man, SpinRite, and lots of other free stuff.  Hello, Steve.  Happy holidays.



STEVE GIBSON:  Yo, Leo, the last podcast of the season.



LEO:  Yes.



STEVE:  So I get a week off.  You're going to go off on vacation, which is cool.



LEO:  Yeah, so exciting.



STEVE:  And we'll come back all bright-eyed and bushytailed and do our next - the first one of 2016 on January 5th.  This week, lots of news.  We're going to reprise our attempt at a Q&A.



LEO:  This time we'll do more than one, I think.



STEVE:  I expect we'll get to more than one.  But there are some juicy deep things for us to cover.  Also, of course, the Juniper router catastrophe.  Really, really interesting story there.  And I want to talk about Oracle getting smacked by the U.S. Federal Trade Commission.  What happens if you press backspace 28 times in a row when you're trying to log into Linux?  I wanted to talk about WhatsApp's run-in with Brazil.  A little note on some misreporting of Hillary's call for a Manhattan-style effort to break encryption, as unfortunately Ars Technica misreported it.  Some update on web privacy via an interesting automated audit.  Microsoft has increased the controversy over Get Windows 10 yet again.  We have some miscellany stuff.  And then questions.  And I didn't even try for 10.  I put eight in because I figured, well, we'll just use them as filler with whatever time we have remaining after we deal with all of the main show content.  And I did get your mail this morning.  



LEO:  I was going to ask.  I didn't mean to add new content.



STEVE:  No, no, no, yours is so good I want you to kick off with that because I did not have this in the notes, and I heard you talking about it over on MacBreak Weekly, so I know you're up to speed on it.



LEO:  Yeah.  And I wanted to get your input on it because, A, I wanted to see if this actually made sense.  It is a year-old article from a Dutch journal, and I am not going to attempt to pronounce the Dutch.



STEVE:  So for what it's worth, for our listeners, before you explain what it is, I listened to you explain it, and it is 100 percent accurate.



LEO:  Okay.



STEVE:  Everything that you said makes sense.  And it is a perfect snapshot into the vulnerability of any public, non-encrypted WiFi.



LEO:  And then I also want to ask you about my solution.  But let me show you this.  What's nice is this was translated to English from the Dutch De Correspondent.  And the author of it, here I go, I'm going to ruin this, is Maurits Martijn.  But the title is probably good:  "Maybe Better If You Don't Read This Story on Public WiFi."



"We took a hacker to a caf, and in 20 minutes he knew where everyone was born, what schools they attended, and the last five things they googled.  And he did it with a hardware device."  And I'm not sure what the hardware device is.  They simply describe it as a small black device about the size of a pack of cigarettes with an antenna on it.  And he did really kind of some clever stuff with it.  He got the password of the WiFi network, had the hardware device join the WiFi network, then had his computer, probably using, I don't know what software, but some software on the computer, to then see all the devices on the open WiFi access port.  But more than that, to also see which other WiFi networks the devices were previously connected to.  I thought that was interesting.



STEVE:  Yup.



LEO:  And then using that to do a man in the middle by spoofing those preconnected networks, their home networks or whatever.  It just was fascinating.  I presume it was a man-in-the-middle attack.  It's hard to, you know, this is an article designed for kind of a general public, so it's not very deep in the technical details.



STEVE:  Right.



LEO:  But essentially, as far as I can tell, and I guess you've read it, and so you can confirm this if it's true, it looked like he made a man in the middle using spoofed WiFi access points and then was able to see a whole lot of stuff, including people's previous searches, you know, and scanning for names, passwords, sexual orientation.



He found a woman who had just recently moved to Holland, and she was searching for health information, all sorts of stuff, where she was born, where she studied.  She has an interest in yoga.  She's bookmarked an online offer for an anti-snore mantra, recently visited Thailand and Laos, and shows a remarkable interest in sites that offer tips on how to save a relationship.  So I read this, and I got scared enough that I said, we're going to be on a boat.  Normally I just - I tether or hotspot to my phone, and it's LTE, instead of using an open access point.  Usually that's faster.  And that's safer; right?



STEVE:  Right, absolutely.



LEO:  So I tether the phone, and I use that.  But on the boat I'm not going to have a choice because we're at sea.  We have to use the satellite Internet provided by the boat.  That is a viciously open WiFi network because it's 5,000 other people on it.  So I immediately went out, and I probably won't get it in time, and ordered a tiny hardware firewall.  I've used these before.  Hotspot VPN offers them.  They're free if you subscribe for a year for 91 bucks.  That seems like a good deal.  And it's just one of those little Marvell or some other small processor-based device that will join the WiFi network, or an ethernet network.



STEVE:  Establish a VPN tunnel out to the Hotspot VPN.



LEO:  And then create either a WiFi hotspot or another ethernet connection.  But it also can run a Tor connection through that, as well, which seemed like a nice - this is newer hardware and so can do more than the old hardware I had.  And so that seemed like a good idea.  Yes?



STEVE:  Yeah, I think so.  So the problem with WiFi is that it's like a hub in the traditional wired ethernet sense where the way a hub worked is that any data coming in to any port of the hub was rebroadcast out of all the other ports of the hub.  So it was very easy to do so-called "promiscuous sniffing."  Basically, any person who was just sucking in the traffic on their port of the hub was seeing all of the network's traffic.



Now, this is not as easily done when you change to an ethernet switch because it intelligently learns, on the fly, what MAC addresses of devices are connected to which ports.  Even if it's a few switches downstream, it still learns, oh, down this wire is this collection of MAC addresses.  So ultimately, only one device is on a given switch port, and that switch, the ethernet switch, has learned who to send that MAC address's traffic to.  And so the beauty of that is that they are, while they're not super secure, they're way more secure than a system which simply broadcasts everything on the network to every other person on the hope that someone, somewhere, is the recipient.  So moving from hubs to switches was a great step forward.



Well, in that sense, going to open WiFi is a great step backwards because we're back into radio, which is inherently promiscuous, so that everything anyone sends is in the air.  And where there may be some segmentation, I assume on a sufficiently large yacht or boat or chip, that they'll have multiple...



LEO:  They've got to have some VLANs or something, yeah.



STEVE:  Yeah, well, they'll probably have multiple access points, and probably have those connected with a switch.  So you may not be able to see the traffic of somebody at the other end, you know, if you're on the bow, you may not be able to get the traffic from someone on the stern, but you would certainly - and this is certainly the case in a single access point coffee shop scenario - have access to all the traffic of everyone there.  And what I liked about your stumbling over the story is that it takes us out of sort of this theoretical, oh, well, yeah, you know, ARP spoofing, maybe that can happen, or access point spoofing, maybe.  And very much the way Firesheep, we remember, back in the days before Facebook, to name one prominent website, went to TLS HTTPS connections, where Firesheep was simply using promiscuous sniffing on open WiFi to collect all the unencrypted traffic from everyone there.



And what Firesheep was doing was grabbing the cookies which were being sent in the clear after the person had logged into their service.  So somebody would, you know, back then, Facebook would bring up a secure connection only to protect the username and password.  Then Facebook would respond to the browser's query with a cookie, setting a cookie in the browser, and then drop security, switch back to unencrypted connections, because it was believed, and there was some truth to it back then, that computers were not fast enough to do encryption in addition to everything else, and that it would slow things down, and especially at the server end because all of these encrypted connections were being concentrated into Facebook servers.  They said, eh, we only want to do that, you know, only when we really need to.



So that was sort of old-school thinking, which increasingly has been abandoned because we now have hardware coprocessors that are able to handle the overhead of the crypto establishment.  We have faster crypto, the elliptic curve crypto, which is the term we're going to be hearing later today about the whole Juniper mess.  That's way faster than the traditional RSA-style handshake establishment.  So we've had progress in crypto.  We've had progress in machine speed.  Power is going up; cost is coming down.  Now it's more economically feasible to encrypt everything all the time.  But even in that environment, it is still possible in a WiFi environment to send a user's machine a disassociate packet, which is the normal connection shutdown for a WiFi connection.  And so if a disassociate packet is sent, that breaks the wireless connection.



And from reading between the lines of what is, what was published in that story, the guy was able to acquire from the various users' broadcasts of the SSIDs that they know of, a list of their SSIDs.  Most people had their systems set to automatically connect to known, to previously known access points, like when you're back at home, you don't want to be harassed to need to do anything, so you just say, yeah, fine.  So he was able to, with this little bit of hardware, to spoof the SSID of the beacon of a known access point, having obtained that from a client's machine that he had disassociated with the coffee shop system, and it connected without complaining.  Now he had a direct connection to it and was able that way to establish himself as a man in the middle.



Now, it's still the case that, without being able to force a certificate on the user, he wouldn't be able to crack their encryption.  But he may be able to do things, for example, like do an HTTPS or TLS downgrade, where there would be some way to get that user not to use encrypted connections, and then get nonencrypted traffic on the fly and start gathering data.



LEO:  Yeah, because sniffing a certificate, there would be evidence of that.



STEVE:  Yes, yeah, exactly.  The user would be notified that the site they thought they were connecting to was trying to use a certificate that was not known to their browser.  And browsers used to let you push past that.  Now it just says no.



LEO:  Nope.  Not going to do it.



STEVE:  They're just, sorry, go somewhere else.  So anyway, this is the danger of current nonencrypted WiFi when there's really a malicious actor present.  You can do the Firefox, the old Firesheep tool, it was a passive sniffer.  It was just sniffing the traffic that was more or less nonencrypted at the time.  But if you step up your game to an active attack, and this guy certainly was, but it's wireless so no one knows what he's got in his backpack, that he's able to do this.



So I agree with you completely, Leo.  In an environment where you're going to be spending a lot of time, I mean, a ship like you're going to be on is very much like a hotel.  A hotel, as we've talked about in the past, is another very high, you know, a target-rich environment, if the hotel was using hubs.  Or now, of course, hotels are often using WiFi now.  And so there once again they're creating a problem, if they're not an encrypted WiFi.  



LEO:  Yeah, and I feel a little bit bad because I have been saying to people, yeah, you know, it's a pain in the butt to use VPN.  So what you should do on an open WiFi access point is, A, only do stuff you don't mind if somebody sees what you're doing; and, B, if you're doing something like using a credit card or banking, as long as it's HTTPS, a secure link, you're probably safe in that regard.  And you want to make sure most importantly that your email password is secure, and your email transactions are secure.



STEVE:  Yeah, and you know, that's a very good point.  It may well have been that email was the way in for this guy because email is still, if you're connecting to SMTP, more often that not, it's not encrypted.  And once you see a username and password, then he's able to get in.  And if you're using IMAP to pull however many, you know, like current repository of undeleted email is there, and rifle through it, and find out all kinds of things; and, as we've seen, even obtain password reset links which are incorrectly coded and aren't expired and allow them to reset the password for something that - because, I mean, people are typically forgetting their password all the time because they're still not using password management to the degree that they should.  So we're in a mess.  There's just no two ways about it.  Right now the industry is in a mess.



LEO:  Do you think, I mean, I'm also going to assume that I'm a target more than, you know, just some stranger on the street, that it seems like I should maybe pursue something more aggressive than just being careful about what I do online in public.  So that's why I got the hardware device.  I don't know if it's necessary for everybody to do that.



STEVE:  Well, and remember, too, that if you were to use a hotspot, I'm sorry, a VPN, on your various machines, then that solves the problem, too.  So anybody who's in, you know, the non-hardware approach is simply use proXPN.



LEO:  Right, right.



STEVE:  Install the client on your machine, and when you're away from a secure environment, simply bring up a VPN tunnel, and at a little cost of performance, because everything has to go through there and then disseminate, so there will be a little bit of tradeoff.  But the tradeoff is absolute local security, so that your traffic is encrypted out of the frightening environment.  Now, of course the problem is, to be really secure in your environment, you've got to have, like, what, your camera and five different phones and a couple of MacBooks and some iPads and things.  And so the beauty of that...



LEO:  This device becomes a WiFi access point...



STEVE:  Yes.



LEO:  ...because it allows four devices to connect.  So I'm going to tell Lisa and Michael, use this as your WiFi access point, not the ship.



STEVE:  Right, right.



LEO:  Probably won't do anything.



STEVE:  In fact, my best friend travels a lot and was worried about his security when he was recently in a hotel.  And I can't remember now the device I found for him.  But he said, you know, what do I need?  And it might have been a TP-LINK.  I don't remember.  But it was only, like, 20 bucks or so.



LEO:  Yeah, these are made by TP-LINK, some of them, yeah.



STEVE:  Ah, good.  And it specifically supported the comment you made on MacBreak Weekly, and that is the problem of a captive portal.  Because with some of these, you somehow need to say yes, I agree to your terms of service.  And that needs to be done before everybody else connects to it, without needing to independently authenticate themselves.  And this device specifically knew how to do that.  I will find the note and talk about it in two weeks because I know that our listeners will be saying, oh, well, what was it, what was it?  And I don't have that in front of me.  Maybe I can find it.



LEO:  And I'm sure everybody's going to say, what was the device the bad guy was using?  And I think many of our listeners can figure it out.  Some in the chatroom already have.  I'm not sure we want to really talk about how.



STEVE:  No.  No, we don't want to enable people to do that.  The good news is it's not simple.  At this point it's not a turnkey thing you can get.  It was just - and these are available.  It was a wireless WiFi transmitter that gave the computer low-level promiscuous access to all of the radio.  Most receivers in laptops won't do that.  But you can buy some that are little USB dongles.  I have one because I've been curious in the past, and I've poked around, sucking in all of the traffic at Starbucks.  And it was an eye-opening experience back in the day.  Not so much anymore because there is more security, and you need to go active in order to do this.  But there are, in the gray areas of the Internet, all of this stuff is open source and free and available for someone who wants to pursue that.



LEO:  But it's kind of a multilayer, multistage thing that uses some skill, it looks like.



STEVE:  Oh, you've got to know what you're doing, yes.



LEO:  Got to know what you're doing, yeah.



STEVE:  Yes, yes.



LEO:  Thank goodness.



STEVE:  So our Picture of the Week on the first page of the show notes, we'll loop back around to this when we talk about this interesting audit that was made of web privacy.  But the numbers just make you just shake your head.  This is, of the top 1,000, so it's 1,000 most popular websites.  This is a histogram of the number of cookies which were given to a spidering test browser that was written in Python, so they created sort of a pseudo browser in order to crawl the top 1,000 sites, and for it to then act sort of as a database also to record and count the number of different assets that it received.  So, for example, almost half of the sites, half of the top 1,000 only gave up to 49 cookies.  Zero to 49 cookies were offered by 473 out of the top 1,000 sites.  But if we slide down the curve, 47, for example, sites gave between 200 and 249 cookies.



LEO:  What?  What?



STEVE:  And there were 26 sites, not of those 47, but another 26 sites that were over 350 cookies.



LEO:  Wow. 



STEVE:  So, I mean, so this shows us how out of control this has gotten.  I mean, yeah, 26 sites out of the top 1,000.  That's not a lot.  But 350-plus cookies from those 26 sites among the top 1,000?  That's insane.  This is the feeling that I've been trying to articulate all year is it's just, it really - and this is what happened, I mean, this is why Apple finally said, okay, fine, we're going to put some filtering into, you know, we hear our listeners.  We hear our users.  We're going to put some filtering into Safari because of what has happened to the mobile web.  You try to surf these sites on a bandwidth-constrained or bandwidth-metered mobile device, and one of 47 of the top 1,000 sites wants to give you up to 250 cookies, it's like, ow.  That's going to slow things down.



So anyway, it's a great audit.  I'm not going to go through it in great detail even when we get to it later in the show.  But I do have a link for people who are interested because it's just eye-opening.  Again, the problem has been, as I have said before, one of perverse incentives.  There was zero cost, virtually zero cost, and some minimal incremental benefit for sites to put more crap on their pages.  And users bore the brunt, and the sites got little snippets of revenue from all these various parties that said we'll pay you, we'll make a micropayment to you if you'll put this little bit of JavaScript on your page and provide you with who knows what, instrumentation about what's going on.



And so they said, okay, yeah, fine, you know, we're trying to support ourselves from traffic to our site.  And this is what happens because there wasn't any pushback.  It was increasingly slowing things down.  But sites were making a little bit more money from each additional one of these things that they said yes to.  So the good news is we're really beginning to look at it now, so there's some pushback.



Okay.  So our network-aware listeners will know the name Juniper.  Juniper is right up there with Cisco as providing the major Internet infrastructure backbone.  When I go into my datacenter where GRC's servers are, it's racks of, like, just crazy optical fibered Cisco and Juniper gear.  This is the so-called "big iron" routers and switches that route the traffic of the Internet.  So that's, for people who aren't familiar, who aren't as familiar with the name Juniper, it's because they're not a consumer device.  And really Cisco wasn't until they bought Linksys, that much.  Cisco also was more of the old-school Internet plumbing sort of equipment.



Okay.  So very quietly last week Juniper published or posted the news of an out-of-cycle important security update.  They just sort of said, um, this is important.  We would like everybody to update their equipment, their Juniper equipment, as soon as possible.  And there's two vulnerabilities that this update fixes, thank you very much.  And that's all they said.  No details.  Just sort of, here, we changed something.  Fix it.



LEO:  Always makes me suspicious when that happens.



STEVE:  Oh.  So that's exactly what happened was that a number of the names we talk about, Adam Langley was involved, Matthew Green, HD Moore, it's like everyone's like, wha-what?  Because, I mean, this is not like a camera sold by Ali Baba like for $4 has an update.  This is Juniper.  And this is the so-called ScreenOS, which is like their - it's like, actually I was going to say it is actually called IOS, Cisco's, it's the Internet Operating System, which is completely separate from Apple's iOS.  So this is their ScreenOS.  So this is big news.  But they didn't say anything.



So all that we were left, we the security community, left to do was the standard reverse-engineer the patch, which is get the firmware from the previous release and the firmware in this release and do what's called a BinDiff, a binary difference, of the two.  That'll give us some idea what bytes are different.  Then you use something called IDA, I-D-A, the Interactive DisAssembler.  You have to tell it what the processor is.  And this thing takes the machine language and disassembles it into the equivalent assembly code.



Now, it needs to be interactive, though, because what happens in firmware is everything is mixed together in a pile.  That is to say, the data and the instructions are comingled.  When you see the source code, they're typically separate, or at least they're clear.  But when it's been compiled down, it's just a blob of hex.  So you need to go through, and this IDA tool is - it's evolved over time.  It's very good about helping you.  So it's able to build essentially a flow graph with blocks of code that jump to each other, showing calls to other blocks.  Typically things are not labeled because the symbols which normally are left in to help with debugging, those have been stripped out.



But there are still interesting little tidbits.  For example, it turns out that the ScreenOS uses OpenSSL for its security.  And OpenSSL has macros which expand to common sequences of bytes which previous people who have reverse-engineered compiled code using OpenSSL have already figured out, oh, look, it's left little signposts all over the place, just as sort of a side effect of the way the code was put together.  So people who are really good at this know how to take an updated firmware and dig in.



So what they found is phenomenal.  And so, okay.  So there were two different things found, both of them backdoors.  I forgot to say that Juniper did say something else that certainly raised people's curiosity.  Juniper said we have found unauthorized code, that is, unauthorized source code, in our master source.  Meaning that what Juniper confessed was somebody, without their authorization, somehow got into Juniper's master source code repository and made some changes.



So this all happened in '09.  So this is six years ago.  And some sort of a review that Juniper did, they didn't say how this came to light.  But so that other key phrase, that unauthorized changes were made to their source, that was just too good for the security community not to pick up on.  So I want to share the beginning of Matthew Green's blog because he puts it just beautifully and, like, frames this right.  And I'm only going to read the first, like, third of it.  But it almost reads like a crypto sci-fi novel.



So Matthew Green, of course Johns Hopkins cryptographer, writes:  "You might have heard that, a few days ago, Juniper Systems announced the discovery of 'unauthorized code' in the ScreenOS software that underlies the NetScreen line of devices.  As a result of this discovery, the company announced a pair of separate vulnerabilities."  And then he enumerates them, and he says, "and urged their customers to patch immediately.  The first of these CVEs (#7755) was an authentication vulnerability, caused by a malicious hardcoded password in SSH and Telnet."



Okay, now, normally that would be a deal - that would just, like, that would stop the wheels.  Wait a minute.  Someone added a malicious hard-coded password into the secure shell and Telnet of our equipment.  That would be a big deal.  Anyway, no, that was, I mean, it is a big deal, but it wasn't sufficiently juicy.



Okay.  So Matthew continues:  "Rapid7 has an excellent write-up of the issue."  And I have a link in the show notes for anyone who's interested.  Matthew continues:  "This is a pretty fantastic vulnerability.  If you measure by the impact on security of NetScreen users.  But on the technological awesomeness scale it only rates only about a two out of ten, maybe a step above 'hit the guy with a wrench.'  The second vulnerability is a whole different animal."



LEO:  Uh-oh.



STEVE:  "The advisory notes that CVE-7756, which is independent of the first issue, 'may allow a knowledgeable attacker who can monitor VPN traffic to decrypt that traffic.'"  Matthew continues: "This is the kind of vulnerability that makes applied cryptographers cry tears of joy.  It certainly did that for me."  And the he quotes in his blog posting his December 18th tweet from four days ago, where he said:  "I'm really invested in the idea that this Juniper encryption vulnerability is going to be amazing.  Like, Flame-level amazing."



LEO:  Oh, boy.



STEVE:  That's what Matt tweeted four days ago.  And this was, like, back then we didn't know anything.  Now we know everything.  So he continues:  "And while every reasonable person knows you can't just drop 'passive decryption vulnerability' and expect the world to go on with its business" - so let me just make sure we understand where we are at this point.  What Juniper said was that a knowledgeable attacker could passively monitor Juniper's VPN traffic and decrypt it.  So that's, well, first of all, how is the big question because this is not man in the middle.  This is not spoofing anything.  This is, well, we know, for example, the NSA has taps, and they're sucking all of the traffic of the Internet in.  And so if there were some incredibly obscure flaw that would allow them to passively decrypt it, that's big news.



So he says:  "While every reasonable person knows you can't just drop 'passive decryption vulnerability' and expect the world to go on with its business, this is exactly what Juniper tried to do.  Since they weren't talking about it, it fell to software experts to try to work out what was happening by looking carefully at firmware released by the company.



"Now," says Matthew, "I want to be clear that I was not one of those software experts.  IDA (Interactive DisAssembler) scares the crap out of me," he wrote.  "But I'm fortunate to know some of the right kind of people, like Steve Checkoway, who I was able to get on the job, mostly by encouraging him to neglect all of his other professional obligations.  I also follow some talented folks on Twitter, like HD Moore" - of course HD Moore is the original father of Metasploit, that whole Metasploit framework - "and Ralf-Philipp Weinmann.  So I was fortunate enough to watch them work, and occasionally, I think, chip in a helpful observation.  And, yes, it was worth it because what Ralf and Steve and the rest found is beyond belief.  Ralf's excellent post provides all of the technical details, and you should honestly just stop reading now and go read that."  And I have a link in the show notes.



"But since you're still here, the TL;DR is this:  For the past several years, it appears that Juniper NetScreen devices have incorporated a potentially backdoored random number generator, based on the NSA's Dual_EC_DRBG algorithm."  Which we've talked about in the past, but I'll remind our listeners what that is in a second.  "At some point in 2012" - so there was a reference to '09 and now here 2012, so it may have only been - only - the past three years - "the NetScreen code was further" - oh, okay, right, there were two changes.  There was the '09 problem and then 2012.



"The NetScreen code was further subverted by some unknown party, so that the very same backdoor could be used to eavesdrop on NetScreen connections.  While this alteration was not authorized by Juniper, it's important to note that the attacker made no major code changes to the encryption mechanism.  They only changed parameters.  This means that the systems were potentially vulnerable to other parties, even beforehand.  Worse, the nature of this vulnerability is particularly insidious and generally messed up."



Okay.  So enough of what Matt wrote.  So here's the deal.  We talked about before, previously, and for several weeks running, the revelation about the so-called "Dual_EC_DRBG."  This was one of four, I think it's four, might have been three, maybe four, official NIST, formally approved, National Institute of Standards and Technology.  These are the algorithms you should use if you want random numbers.  And the listeners who've been following the podcast for a long time will remember the controversy, and it must have been, was it post-Snowden?  It may have been Snowden-related revelations that the company, RSA, received a chunk of money, I want to say a million dollars, it's been a while, I don't remember the dollar amount, from the NSA to weight - this was never proven, but the allegations were that they received this money a long time ago to make this the default for the RSA sort of industry-standard crypto toolkit that RSA sells.  And I have one.



LEO:  You have it on the shelf behind you?



STEVE:  Yeah, I do.



LEO:  Wow.



STEVE:  I can't - BSAFE, it was called BSAFE.  And I bought it from them years ago, and actually after this was changed.  So mine was safe.  But I wouldn't have used the defaults anyway.  You know me, I would go through and pick exactly what I wanted.  So this algorithm was the default.  In '07, some security researchers discovered a vulnerability, a fundamental vulnerability in the algorithm.  The algorithm has two constants.  It uses two constants, P and Q.  And they are supposed to be chosen at random.  And those represent some points on the elliptic curve such that, when you use those, this DRBG, the Digital Random Bit Generator, is a pseudorandom number generator.



So we know what it means.  It means that from a given starting point it then follows an externally unpredictable path, as long as you don't know these secrets, as long as you don't know what those constants are or the internal state of the algorithm, that is, its starting condition, the idea being that you're not supposed to be able to reverse engineer its state from what it puts out.



What they discovered is that, if P was related to Q by a secret constant, that is, if they weren't independently chosen at random, but if they were deliberately chosen so that there was a - technically it's a finite field multiplicative relationship between the two, where you multiply a secret number E by P, and then do modulus the field size, and that becomes Q.  If that's the relationship, that is, if they're not random, then what they figured out was, taking a very small bit of the output, an attacker who knew there was a special relationship between P and Q could very quickly, with a tiny bit, 30 bytes is the number that has been recently quoted, they could figure out the state of the algorithm and then predict all future random output.  So that was known about DRBG.



What Juniper did was just change Q.  And so when the reverse-engineer guys in the last four days saw that Q was changed of the DRBG, they said, what?  Wait a minute.  So what had happened was somebody got in, in 2012, and changed that one 32-byte constant to something else.  And the only way this makes any sense is if it was somebody who understood this vulnerability, who knew that Juniper was using this now, I mean, completely deprecated algorithm.  No one would be using this.



And in fact, back when this came to light, Juniper did acknowledge their use of this, but said that it was being used with their own arbitrarily arrived at constants, and not in any place where it could cause a problem.  So it was sort of a nonissue.  Still, it's like, okay, why is this still in there?  But as we know, the industry tends not to change things that it doesn't really have to.  So they left it alone.



So then, looking at this, what they realized was that this pseudorandom number generator was - its output was not being used directly, but rather it was being used to seed a second high-quality pseudorandom number generator, another standard in the industry, which happens to use 3DES as its pseudorandom mixing function and uses three different 3DES functions with some XORing and outputs fed around in circles and things.  And it does produce, it's well known to produce, to be a very good source of pseudorandom numbers.



And so for a day the industry, the security researchers were puzzled because the exploit, for this to be an exploit, you have to know, you have to be able to determine the state of the DRBG pseudorandom number generator, which is then being used to seed the actual pseudorandom number generator, which generates the data which is available, like it's the raw crypto keying material that would be sniffable over the wire, or derivatives of it would be.  So they couldn't figure out, okay, how that's a problem.



Then another researcher found a very convenient mistake in the code where a pointer to a buffer is in a "for loop."  When the code is first loaded, the buffer pointer is set to zero.  The for loop increments it by eight, checking to make sure that it is less than or equal to 31.  So it runs that loop four times, moving this buffer pointer forward by eight each time, to essentially copy 32 bytes from one place to another.  The mistake is it is never - oh, and I should say, and that data is coming from, that is the output of the DRBG into the reseeding of this next pseudorandom number generator.  The mistake is it is never again reset to zero.  So all reseeding of this fails.  And the result of the second pseudorandom number generator isn't used.  Instead, the direct output from the DRBG is used.



So essentially what happens is there was a bug in the code such that they were never actually, except after initially, when the system was first started up, no reseeding of the secondary PRNG, pseudorandom number generator, was ever done.  So that the DRBG data was - it was pseudorandom, but now we know that, if an attacker chose the P and Q constants and had access to just a little bit of its direct output, not obscured by the intermediate PRNG, they would have decryption.  And that's what was found, a bug in the code that allowed this bad and completely deprecated DRBG algorithm to have its data exposed in VPN and presumably other connections, all of the various entropy that the router was using such that somebody who knew the change, knew of the bug, knew that this was there and what was happening, would be able to do passive, just sniffing, decryption of all the VPN traffic.  I mean, it's like crypto sci-fi.  I mean, it's just like, you know, we never see this.  And so...



LEO:  And how long has this been going on, until now?  They patched it now; right?



STEVE:  Patched it now, for three years.



LEO:  Three years.



STEVE:  This constant was changed in 2012.  Somebody...



LEO:  So nobody has known about this for three years.  But if you're using Juniper equipment, people could have been watching you for three years.



STEVE:  Yes.



LEO:  Wow.



STEVE:  Yes.  And we don't know who.  We don't know if it was a foreign state actor.  We don't know if it was our own intelligence services.  There's no record of it.  No one knows.



LEO:  Hence the issue...



STEVE:  As far was we know, Juniper doesn't know.



LEO:  ...as Rene pointed out, of having a backdoor in something is a backdoor can be used by anybody who discovers it.



STEVE:  Yes.  And in fact Matthew, toward the end of his blog post, and I have a link also in the show notes for anyone who wants to read the whole thing, notes exactly that.  He says that he's been running around all over Washington, trying to explain to politicians exactly this kind of thing, why, if there's a backdoor, there is just no way to keep it secret.  There is no way to prevent it from the possibility of abuse.  And so the nice thing is that this just fell in our laps as an early Christmas present for all of us who want to make that point.



LEO:  The counterexample.



STEVE:  And the question is, who made the change?  Somebody made it, and there's just, you know, it was a little annoying back when we were first discussing this Dual_EC_DRBG because the evidence was so circumstantial.  It was like, oh, and remember, I remember somebody saying, oh, well, a million dollars isn't much to RSA.  Oh, but RSA of that day, that was one quarter's worth of their revenue back then.  So that was in the early days, when they were much smaller.  And they never changed the default after presumably, or allegedly, receiving a payment from someone, we believe the NSA, to make it the default.  And so this thing still lives.  If these people used OpenSSL, I wouldn't be at all surprised if they also used the BSAFE package from RSA, and built it in, and left with the defaults. 



LEO:  And it might not be malicious.  Yeah, it might have just been, you know, they used the default.  Well, you can trust RSA; right?



STEVE:  Well, except that the change of the parameter, that's the difference.  And thank you, because I hadn't finished my thought.  It was annoying back then because all of this was circumstantial.  It's like, if P and Q - oh, and I forgot to say that it is known that those constants came, the original DRBG constants from RSA did come from the NSA because the NSA, back again 20 years ago, we believed they had our best interests at heart.  The DES, the Data Encryption Standard, that's an NSA cipher.  And we believed that the NSA had, and maybe at some point it was true, the best cryptographers in the industry, I mean, in the world.  And they may still today.



So there was no documentation of where that constant came from.  For example, a perfect solution would be to take a passage from the Bible and hash it, and that be the P constant, and a different passage and hash it, and that be the Q constant.  Because what that would enforce is that P and Q were not deliberately chosen.  If known texts were hashed, we know that the action of a hash is to produce an unpredictable output, that is, no one has any control over it.  That would prove no one chose them.  But we have no such proof in the original DRBG constants.  They were simply, you know, from on high they were given to the NIST standard, without comment or explanation of where they came from by the NSA.



So that's why, when the researchers then discovered that, if they were deliberately chosen, if there was a special knowledge of their relationship, that would allow this pseudorandom number generator to be cracked.  And again, same rule applies here.  If it were possible for only the NSA ever to possibly know that, then, okay, there's a backdoor that only they could have access to.  Except that we've just demonstrated it's math.  It's not possible for these secrets to be kept.  And so the point was that there we never had any formal proof of exploitation.  All we had was strong suspicion.



Now, what's different today, is that Q was changed, four years ago, three years ago, by probably a malicious actor.  And other bugs, other subtle bugs in the code allow the direct output, basically bypass an intermediate security stage, which is that inline secondary pseudorandom number generator to directly expose the DRBG's output.  And that's the prerequisite for being able to reverse engineer its state and then decrypt everything that that piece of hardware does until it's rebooted.  And then you have to wait a little bit, and then you can start again.  Just incredible.



LEO:  Yeah, no kidding.



STEVE:  Really, really cool.  So I can imagine, I mean, this is just like, as Matthew said, this is what applied cryptographers live for is just a cool super mystery like this.



LEO:  Well, we'll never know, I don't think.  I mean...



STEVE:  No, we won't know more.  But we do know that here's another example.  Basically a backdoor was found in a core Internet backbone device.  And then, you know, how was this done?  Because, I mean, it's been assumed that the NSA may be infiltrating deep sleeper agents into key Internet-oriented companies, and they have their own agenda which just never becomes public.  I mean, unfortunately, this is the world we live in.  It sounds like science fiction, but somehow a constant got changed in their source.  Wow.



So Oracle was smacked recently by the FTC over, believe it or not, Java's security.  There was a complaint that was settled, essentially, because the FTC, the U.S. Federal Trade Commission, was charging that Oracle deceived consumers about Java software updates, that is, like the security of them, and that the company will now be, as a part of the settlement, will be required to notify consumers of risk, of the true risk of Java, and provide tools to uninstall insecure older versions.  So the FTC had a release to the public and the press when this settlement went public.



And they said:  "Oracle has agreed to settle Federal Trade Commission charges that it deceived consumers about the security provided by updates to its Java Platform, Standard Edition" - that's the Java SE software - "which is installed on more than 850 million personal computers," which of course they brag about whenever you have to update Java and turn off all the extra crap they're trying to install on your system.  "Under the terms," writes the FTC, "of a proposed consent order, Oracle will be required to give consumers the ability to easily uninstall insecure, older versions of Java SE."



Jessica Rich, who's the director of the FTC's Bureau of Consumer Protection, was quoted: "When a company's software is on hundreds of millions of computers, it is vital that its statements are true and its security updates actually provide security for the software.  The FTC's settlement requires Oracle to give Java users the tools and information they need to protect their computers."  So then the release goes on, saying:  "Oracle's Java SE provides support for a vast array of features consumers use when browsing the web, including browser-based calculators, online gaming, chatrooms, and 3D image viewing.



"According to the FTC's complaint, since acquiring Java in 2010, Oracle was aware of significant security issues affecting older versions of Java SE.  The security issues allowed hackers to craft malware that could allow access to consumers' usernames and passwords for financial accounts and allow hackers to acquire other sensitive personal information through phishing attacks.



"In its complaint, the FTC alleges that Oracle promised consumers that by installing its updates to Java SE, both the updates and the consumer's system would be 'safe and secure' with the 'latest security updates.'  During the update process, however, Oracle failed to inform consumers that the Java SE update automatically removed only the most recent prior version of the software, and did not remove any other earlier versions of Java SE that might be installed on their computer, and did not uninstall any previously released versions prior to Java SE version 6 update 10.  As a result, after updating Java SE, consumers could still have additional older, insecure versions of the software on their computers that were vulnerable to being hacked."



And I'll just stop for a second and say we talked about this years ago, the fact that the older versions are explicitly addressable by code running in browsers that can say, "I want this version of Java," and the browser will use that version of Java if it has multiple versions to choose among.  So this was really being exploited on an ongoing basis, and nothing about what Oracle was saying made this explicit.



So finally they said:  "In 2011, according to the FTC's complaint, Oracle was aware of the insufficiency of its update process.  Internal documents stated that the 'Java update mechanism is not aggressive enough or simply not working,' and that a large number of hacking incidents were targeting prior versions of Java SE's software still installed on consumers' computers."  So basically Oracle was just saying, eh, you know, implicitly saying we don't care about that.  We're updating Java, but oh well.



So, "Under the terms of the proposed consent order, Oracle will be required to notify consumers during the Java SE update process if they have outdated versions of the software on their computer, notify them of the risk of having the older software, and give them the option to uninstall it.  In addition, the company will be required to provide broad notice to consumers via social media and their website about the settlement and how consumers can remove older versions of the software.  The consent order will also prohibit the company from making any further deceptive statements to consumers about the privacy or security of its software and the ability to uninstall older versions of any software Oracle provides."  So, smack.  Yikes.



You know, Java was a major topic, and not in a good way, of this podcast for years.  And it was sort of like the pre-phishing email topic.  We've gone through phases of the podcast over the last decade, and Java, you know, it was just a constant whipping boy because it was just a constant source of problems.  And I do remember that there was some overt reason why older versions had to be kept around.  Now, remember that the distinction is what your browser has access to.  It's the browser plugin that interfaces your browser to Java installed on your system.  That's the problem, that bridge between the Javas, maybe plural, on your system and the web browser.  That's the source of the vulnerability.



And unfortunately, what Java has traditionally done was to offer up its services as a plugin, just like Flash.  And unfortunately, just like Flash, Java is a huge massive old library written in the dawn of the Internet, pre-security focus days that is just riddled with areas in the code which work, but which can be exploited.  And so it was just - it was a cat-and-mouse game for years of bad guys finding problems and exploiting them until it became public.  People got hurt.  Then Java, or Oracle, originally Sun, then Oracle, would update it and push out a patch.



I think, though, that there was a reason, as I recall, there was something about an earlier release that some people had to have.  It was like, you know, their corporate software depended on this version of Java, and they could not update, or it would break some critical corporate software whose programmers had long since left, and they'd lost - they took the source code with them, or they deleted it, or they lost it, or no one knew how to recompile it.  They couldn't maintain it.  And so it became a fragile system that they couldn't change.



So I can kind of see a little bit of that problem.  But it is the case that, if Oracle's own internal documents are saying, you know, we really ought to be doing a better job of this, that they probably should have been.  And now they've got a big slap by the Federal Trade Commission, and they're going to - it'll be interesting to see what the next Java release looks like for us.  I have several things I need it for, but there is no presence of Java, which is in my system, there's no presence in my browser.  There's no way for anything, any site I run that I access, to run Java.



LEO:  That's key because a lot of people want Java.  If you're into Minecraft, you need Java.



STEVE:  Yes, yes.  Perfect, perfect example.



LEO:  As long as you don't have, yeah, as long as you don't have it launch in the browser, you turn it off in the browser, you're safe; right?



STEVE:  Yes.



LEO:  And don't download, obviously don't download JAR files and run them, random JAR files. 



STEVE:  And say, oh, I wonder what's in here.



LEO:  Wonder what's going on?



STEVE:  And left-click instead of right-click.



LEO:  Actually, that does happen because there are a lot of Minecraft mods out there.  And I see Michael, who's, as with all 13 year olds, he's really into it.  He'll just download anything from anywhere.  And there are modifications for Minecraft.  But of course they could be anything.  We don't know.  I mean, it's just...



STEVE:  Yup.  And as it becomes more popular, it becomes a greater, a larger target. 



LEO:  Yeah.  That's why I made him a limited user in Windows.



STEVE:  Nice.



LEO:  Yeah.



STEVE:  So, okay, this one was a - this was fun.  The industry got a kick out of this.  The good news is it's not a remote exploit for Linux.  It is a local exploit only.  But Ubuntu, Red Hat, and Debian all immediately released emergency patches.  Okay, so Grub is the abbreviation for Grand Unified Bootloader, G-R-U-B.  And we're at Grub2 now, which is used by most Linux systems to boot the OS.  And so what you get is a password prompt from Grub saying, you know, what's your password, and then we will go ahead and boot your Linux.



Well, it turns out that there was an innocent buffer or integer underflow in the Grub code.  It had been in there since Grub v1 point - oh, my god, this is where I got 2009 in my head.  Sorry.  It was 2012 for Juniper.  It was December of 2009 for Grub v1.98.  That's when this problem, it was introduced in a single code commit.  And since 2009, anybody who, when presented with that Grub password bootloader prompt, if instead of guessing, they simply pressed backspace 28 times...



LEO:  [Laughing]



STEVE:  It's all you have to do.



LEO:  Oh, that's funny.



STEVE:  It crashes out of the prompting and launches the Grub rescue shell, which allows unauthenticated, no authenticated access needed to the computer, with the ability to load another environment.  Researchers have verified that, from this shell, which you access by hitting backspace 28 times, a local attacker, somebody at your machine, could gain access to all the data on your computer and can misuse it to steal or delete all the data, install persistent malware, rootkits, whatever they want.



So not good news.  Again, only vulnerable at the keyboard, and the various major Linuxes, the distributions have all said whoops and updated to Grub 2.03.  I think that's it.  So under Grub v1.98 to v2.02 this has been present.  And so 2.03 or later this will not be a problem.  But, so if you forget your password, just try hitting backspace 28 times.  Maybe you'll get in.



And I heard you talk about this over the weekend, Leo.  It was sort of interesting.  And also I got a kick out of the fact that Zuckerberg was making a comment, apparently from the nursery, after this happened.  And that is that WhatsApp was banned by a judge in a lower court in Brazil for 48 hours, that is, for two days, as punishment for refusing to allow law enforcement access to some encrypted communications that they wanted.  So this is interesting in the dance that we're beginning to see start in 2015, that I have very little doubt is going to be playing out next year, through 2016.



So Reuters picked up on this.  There was an update posted to the original story because the blockage or the ban was overturned by a higher court, by an appeals court, after only 12 hours.  Yet some interesting numbers came out of this.  So after about 12 hours - I'm paraphrasing from the Reuters report - a Brazilian appellate judge on Thursday ordered the lifting of a 48-hour suspension of the services in Brazil of Facebook Inc.'s WhatsApp phone messaging application, overturning an order from a lower court.  The interruption of WhatsApp's text message and Internet telephone service caused outrage in Latin America's largest country, where the country estimates it has 100 million personal users, and led to angry exchanges on the floor of Congress.



WhatsApp is installed on 92.5% of Android devices in Brazil, making it the single most installed app in the country, according to an Internet intelligence and marketing company, SimilarWeb.  By comparison, the rival messaging system, Telegram, noted on Twitter that it had received one million downloads in Brazil in one day due to the outage.  Telegram was installed on 2.35% of Android devices before the blackout of WhatsApp, and Facebook Messenger on 74%.



So that's pretty much the story.  A judge in an industrial suburb of Sao Paolo had ordered the suspension of WhatsApp services from midnight on Wednesday for 48 hours.  And that order was made after WhatsApp, despite a fine, failed to comply with two judicial rulings to share information in a criminal case.  Then the judge who overturned the lower court order said:  "Considering the constitutional principles, it does not look reasonable that millions of users be affected as a result of the company's inertia to provide information."  However, this overturning judge then recommended that a higher fine be imposed on WhatsApp.  So it's not like they were off the hook, but rather don't do it this way, let's just fine them more.



So the Reuters story ends by saying:  "The incident highlighted growing international tensions between technology companies' privacy concerns and national authorities' efforts to use social media to recover information on possible criminal activities."  And then Zuckerberg said:  "Until today, Brazil has been an ally in creating an open Internet.  I am stunned that our efforts to protect people's data would result in such an extreme decision by a single judge to punish everyone in Brazil who uses WhatsApp."



And then, finally, according to BandNews TV, the criminal case involves a drug trafficker linked to one of Sao Paolo's most dangerous criminal gangs.  The trafficker allegedly used WhatsApp services while committing crimes, and the court wants access to his communications with others.  And then WhatsApp has said that it was unable, not unwilling, to comply.  So of course this is smack dab in the middle of the huge controversy about this.  And in fact...



LEO:  At this point, though, WhatsApp should just ignore anything because they know there's no punishment that Brazil can mete out.  What, are you going to turn us off?  Go ahead.



STEVE:  Yeah, see how your people like it.



LEO:  Ninety-three percent of all Brazilians use WhatsApp because of the predatory pricing on SMS messages in Brazil.



STEVE:  Yes, yes, exactly.



LEO:  Sorry.



STEVE:  Now, I listened to the Democrats debate as I listened to the Republicans debate just after our last podcast last Tuesday.  The Democrats debated on Saturday.  And I was a little annoyed by Ars Technica's coverage.  And I understand that oftentimes people who write the body copy of the column don't put the titles on.  I was often upset when my TechTalk column, back in the days of InfoWorld, had a title which was really misleading.  It was like, wait a minute, that's not, I mean, sometimes it actually was the reverse of what my column said.  And I wondered if whoever it was on an edit desk somewhere had actually read my column.



But anyway, Ars Technica's headline read:  "Hillary Clinton wants Manhattan-like project to break encryption."  And then the subhead was "Presidential candidate Hillary Clinton has called for a Manhattan-like project to help law enforcement break into encrypted communications."  And so many people retweeted this that I just wanted to say, no, she didn't say that.  Not at all.  What she said was, and this is I expect what we're going to be hearing next year, she called for - or maybe 2017.  Maybe everyone's just going to punt until we have a new President, who knows.



She called for the tech community and law enforcement to work together to solve this apparently, and I'm paraphrasing, really hard problem.  And so her allusion to the Manhattan project was of course the codename given to the U.S. effort to develop the atomic bomb.  And so she's saying, you know, we need, like, all of the really smart people in Silicon Valley and the encryption community and the tech community to work with law enforcement and come up with a solution.  And it's like, okay.  We all believe there isn't one.  And we've talked about how people are now understanding that maybe the word "backdoor" is too loaded or not what we want.  But they're just saying, okay, yeah, well, fine, give us an answer.



And of course those who understand math appreciate that there isn't a way to do this without incurring obligation.  And I can certainly understand companies like Apple - and I also, thanks to you, Leo, who turned me on to that, that he was going to be on "60 Minutes" on Sunday, where Tim Cook was interviewed - I can understand that they're not wanting the responsibility of having the ability to decrypt this.  So it's better from a business model standpoint for them to be able to say no.  And WhatsApp said, I'm sorry, we would be happy to comply, but we can't.  Our technology doesn't let us.  But wow.



LEO:  Which is interesting because I don't - is WhatsApp, do they even pretend to be encrypted?



STEVE:  Yeah, they do.  And they have pretty good encryption.



LEO:  I guess they do, okay, good encryption.  Oh, never mind.



STEVE:  Yeah, way better than Telegram, at least, because we know how Telegram's encryption is.



LEO:  Yeah.



STEVE:  So I already spoke about this Web Privacy Census.  I won't dig into it any deeper.  For anyone who's interested, the link's in the show notes.  It is really just eye-opening to see - they also show over time, over the last couple years, the massive growth we've seen.  So it's not like people just a few months ago finally got tired, although we did.  But what happened is over the last few years there's been exponential, I mean, literally the curve is exponential shaped, explosion in the use of tracking and loading hundreds of kilobytes, often multiple hundreds of kilobytes of JavaScript, just because some site says, oh, we're going to get a little bit of money if we put this little bit of code, or we add this tag to our pages.  And they do, and users suffer the consequences.



So anyway, this group put together, as I mentioned at the top of the show, wrote a Python bot which spiders the 'Net and acts like a user.  They had what they call - they had two different levels of depth, a deep exploration where the bot randomly clicked on two links to acquire, like, sort of to simulate what a user might do if they were clicking on links on pages, and then just the top level bot.  And the stats I showed were just the top level because I don't think that the deeper bot is as representative of what, you know, just going to a page on one of these sites gives you.  But, boy, it really has gotten crazy.



Meanwhile, Microsoft has upped the ante yet again.  Woody Leonard, who is Woody on Windows is his InfoWorld column, the title of his column was "Microsoft narrows Win10 upgrade options to" - and this is just great.  The dialogue that comes up now has two big buttons on it.  The left one says "Upgrade Now."  The right one says "Upgrade Tonight."  Instead of "No."



LEO:  Either now or tonight.



STEVE:  Yeah, you've got a - now we're giving you a choice.



LEO:  Oh, man.



STEVE:  We took away "No, thanks."  Now it's "Upgrade Now" or "Upgrade Tonight."  And so he says, "Microsoft's nagging 'Get Windows 10' campaign has hit a confusing new low, and user backlash is vocal."  And he wrote:  "It's hard to imagine any marketing campaign worse than Microsoft's ongoing 'Get Windows 10' debacle."



LEO:  Yeah, I agree.



STEVE:  "Microsoft is pushing hard for Windows 7 and 8.1 customers to upgrade to Windows 10, and the backlash from users has been vocal and very negative."  He notes that:  "Paying Windows 7 and 8.1 customers have been subjected to surreptitious installation of a potentially unwanted program, GWX, starting way back in April," which of course we talked about when people were worried it might be malware because they'd never seen Microsoft offering an upgrade, and they were suspicious, rightly so.



Then, "Incessant nagging by a balloon notification in the system tray that 'Your upgrade is ready.'"  And remember "Get your reservation," even though it's like, what?  You're going to run out of bits?  And then they were forced to download three to five gigabytes of unwanted installation files, which was done behind their back, again surreptitiously.  And then "Accidental" automatic launching of the upgrade program.



Finally, last week, Woody notes:  "PC World's Brad Chacos detailed the evolution of the nagging GWX balloon notification into a full-fledged, and nearly full-screen, Get Windows 10 window with these two options:  'Upgrade now' and 'Start download, upgrade later.'"  And so Brad at PCWorld wrote:  "To be fair, you can still simply close the window with the X in the upper-right corner; and, if you click through the itty-bitty inconspicuous chevron" - the little menu icon, those three little bars - "on the upper right-edge of the window, there may be a 'Nope' prompt somewhere further down the line."



And he says, "I closed the prompt before exploring the auxiliary pages.  But having the only two large, clearly actionable options on a pop-up page both lead to a Windows 10 download feels inherently icky, like Microsoft's trying to trick less-savvy computer users into downloading the operating system with tactics often used by spammers and malicious websites."  So that's what it's come to.  They really are determined to get people onto Windows 10.  And you've got to wonder why.  I mean, I do.  I mean, it'd be - it's a pain to have to support older operating systems.  The problem is, a lot of people don't want to go.



LEO:  Yup.



STEVE:  Okay, miscellaneous.  I know we're not doing any Star Wars spoilers.  I have not yet seen it.  I'm seeing it with Jen on the 28th.  And I know you guys saw it, and you're biting your tongue.  How long do we have to bite our tongues for?  Like how...



LEO:  Forever.  Forever.



STEVE:  Forever?  Okay, at some point...



LEO:  Yeah, it's ridiculous.  It's ridiculous.



STEVE:  Okay.  What we'll do is we'll wait a few more weeks.  And then at the end of the podcast, I think that's - I was thinking about this.



LEO:  Yes, say "Tune out if you haven't seen it yet."



STEVE:  Okay.  So if you - yeah.  Leo and I and the listeners who have seen it, we need to be able to talk about this.  We can't be held hostage forever. 



LEO:  Right.



STEVE:  So at the end of the podcast we will then have a Star Wars discussion.  But not now.



LEO:  I can't wait.  I m dying to talk about it.



STEVE:  We did note, and I'm sure everyone knows, that it broke all first weekend sales records in history.  Nearly a quarter billion dollars in the first weekend, and worldwide I think it was at half a billion.  So, and still going strong.  It's all sold out around me until the week after Christmas.



LEO:  This is a movie you're going to want to see at least twice.



STEVE:  Neat, neat, neat.  And, boy, Leo, Season 6 of "Homeland" finished.  I'm sorry, Season 5 of "Homeland" finished.  God, I've got my notes all tangled up.  Are you a "Homeland" watcher?



LEO:  I watched the first two seasons.  I haven't seen it since then.  So I have some catching up to do.



STEVE:  Oh, boy, you have.  I mean...



LEO:  I liked it a lot.



STEVE:  I know you're done with, or maybe you're not done yet, maybe you're not...



LEO:  Finished "Fargo," yeah, yeah, yeah.



STEVE:  Okay.  So I would argue this is even better than "Fargo."  And this fifth season ended, it was just - it's probably my absolute favorite series on television.  It's just so well done. 



LEO:  Got to watch it.



STEVE:  And the good news is there will be a sixth.  My number one question two nights ago, last Sunday night's final episode, is okay, is - because kind of like they left us in a way where they could have, like, finished the series.  But apparently it's just too successful.  Showtime is just knocking it out of the park.



LEO:  Was Season 3 not great?



STEVE:  I think that's what it was.  I think that it hit kind of a rough patch.  But, boy, it really did recover.



LEO:  Okay.



STEVE:  Four was really good.  And I wasn't even that crazy about Season 2.  It kind of continued some of the character line from the first season.  It was like, okay.  But it has really - it hit its stride.  Just these latest seasons are just fabulous.  And you don't have to watch them all, for anyone who's interested.  But it's better to have the back story of the characters because the character development is really deep and really rich, and so it just would mean more.  And, boy, for anyone who likes to binge watch over the holidays, let me fully recommend "Homeland" on Showtime, five fabulous seasons that I think people will like.



And I got an interesting tweet to a link to someone's posting about how SpinRite saved his DVR.  And we've talked about this before, so I won't drag everyone through it.  But I did want to mention something by way of DVRs that have always made me uncomfortable.  And he actually posted the SpinRite screens from the scan, which did repair - it was a Humax 1000 or something DVR.  And so he showed, like, he took it apart, opened it up, pulled the drive out, hooked it to a PC, ran SpinRite.  SpinRite found problems, and now everything's working fine, you know, the standard SpinRite recovery story.



But people have talked about recovering the problems with their webcam or security camera recorders.  And DVRs are the same.  The problem is, if a drive is not actively recording when the power fails, it's probably okay.  But, for example, most DVRs don't have a power switch.  My TiVos have no - no TiVo I've ever owned, I've owned Series 1s, and now I've got the Premieres or, I'm sorry, the Roamios.  No power switch because it's just - it's supposed to be always on.  It's got a power cord.  You plug it in, and it boots and says hello.



But the TiVos are always streaming several most recently chosen live channels.  The Roamio will record six things at once.  And if I step through the most recent channels that I've selected, my 30-minute playback buffer is live for all of those.  Meaning it's busy all the time.  Yet there's no way to turn it off.  You pull the plug.  And this is the same thing for security cameras that are recording to hard drive.  And so the point is the reason that - and this has always made me uncomfortable.  And I've never really been able to understand it.  The reason that SpinRite is finding problems on security camera recorders and people's DVRs, I mean, we talk about SpinRite recovering DVRs relatively often.  It's because people treat it, not like a computer, which is like right in the middle of working, but rather a consumer device.



Our computers, we shut them down.  And when we shut them down, they're very careful to stop everything that they're doing and carefully power the drives down.  But when you just pull the plug on a box that doesn't even have a power switch, it's in the middle of recording data on the hard drive, as fast as it can, for multiple security cameras or TV cable streams, and it's going to wreck the sectors.  It's going to destroy the low-level format in those areas.  So I guess the calculation must be, oh, well, we want this to be a consumer device, a consumer product that people don't have to shut down or anything.



So I'll just - here's a tip for any TiVo or other DVR user.  Reboot the device and then pull the cord.  In the UI, you can do a reboot.  There is no - you can put it in standby, but it still records in standby.  So you have to initiate a reboot.  And shortly after the reboot starts, pull the cord.  And that gives it the equivalent of a shutdown, and it is in the process of getting started from ROM and hasn't yet had a chance to bring the streams up.  And that's a safe time to then, for whatever reason, unplug it to vacuum underneath it or move it to a different room or whatever.  But reboot it, and as soon as it starts the reboot, pull the plug.  That's a way of preserving the surface of the hard drive.



They must figure that, oh, well, we'll just skip over that bad spot.  The problem is, depending on where the damage is, it can damage recordings that you care about, which SpinRite is able to fix, or it can cause deeper damage.  Because we talk about where there have been instances where the device, you know, the DVR was restarted, and then it didn't come up.  We talked about that just a couple weeks ago.  So just a little tip for everybody.



LEO:  Very nice.  You want to do questions?



STEVE:  I think we ran out of time again.



LEO:  Not really.  I mean, there's no newscast at 4:00 anymore.



STEVE:  Okay.



LEO:  So if you want to go a little longer, I don't mind.



STEVE:  Well, yeah, let's go till 4:00 because we're at an hour and 35 at this point.  So we'll give everybody about two hours' worth of...



LEO:  Nobody ever said I want less Security Now!.



STEVE:  Yeah.



LEO:  Bill Fink, he was a programmer, worked for Microsoft, lived in Belleville, Illinois, passed away, I'm sad to say.  But I have a feeling that he had a great sense of humor, and he must have written his own obituary because this is how it reads:



"William Ralph 'Bill' Fink, 46 [sad to say], of Belleville, Illinois, encountered an unhandled exception in his core operating system which prematurely triggered a critical 'STOP' condition on Wednesday, December 16th.  Diagnostics indicated multiple cascading hardware failures as the root problem.  Though his hardware has been decommissioned, Bill's application has been migrated to the cloud and has been repurposed to run in a virtual machine on an infinite loop.  <END OF LINE>"



STEVE:  That's wonderful.



LEO:  We salute you, Bill, and your sense of humor.



STEVE:  I think he must have had some notice that there was a pending Blue Screen of Death, yeah.



LEO:  Yeah, yeah.  Beautiful, though.  I mean, really, that's what I want mine to say.  That's awesome.



STEVE:  That is neat.



LEO:  All right, now, questions.  Let's get to them.  Remember we got one in last time.  We're going to do better this time.



STEVE:  And I have to say I loved your intro to last week's podcast, where you said, instead of "Listeners questions and Steve's answers," you said "Listeners question and Steve's answer."



LEO:  It was a good one.  I really enjoyed it.



STEVE:  Perfect.



LEO:  The first one comes to us from Funny Gazelle on the Twitter.  And I know why he calls himself Funny Gazelle, because his Twitter handle is ridiculous.  Is it hex?  I don't even know what it is.  @edool9Chah5fe2a wants to circumvent his provider:  Steve, is it possible to circumvent the provider-level SSL decryption, where you have to place a certificate from the ISP on your machine, can you get around that with a VPN?  When they decrypt one secure connection, can't I just place another secure connection inside that one, like kind of nested?



STEVE:  So, okay.  I've seen questions like this, and I want to make sure I haven't confused people.  Because as far as I know, unless your provider is your corporation...



LEO:  Yeah, businesses do this.



STEVE:  Yes.  And of course we heard that Kazakhstan, which is sort of a super provider...



LEO:  They want to do it, yeah.



STEVE:  Yeah.  They were considering it.  But to my knowledge there is today no ISP who is requiring that you accept their certificate in order to use security on the Internet.  I mean, it's frightening, and that's why I've been talking about it, because it seems like in some future Orwellian universe that may happen because it does represent an obvious choke point where law enforcement could require ISPs to install monitoring taps.  And then the way to do that would be for the ISP to take responsibility on a per-subscriber basis for users putting certificates in their machine.  That's going to be a day I hope we don't see for quite a while.



But the answer to Funny Gazelle's question about a VPN is that, well, it's sort of two ways.  First of all, a VPN done right cannot be intercepted.  Now, that's Juniper's VPN done wrong notwithstanding.  But a VPN done right will pass through, like, any connection that's being made.  And it just - a VPN looks like a standard network connection.  So anything you do over it, whether you then add your own encryption, like with HTTPS, TLS, or not, or just email, everything is encrypted by that tunnel.  The issue will be whether ISPs will then start blocking VPNs because it could be read as a means for their subscribers to avoid ISP-based taps.



And so a VPN would definitely work.  The problem is it would be encrypted, and it could very well be that, again, in some horrible Orwellian future, that subscribers at the user level are denied use of VPNs by ISPs.  Again, that seems like a stretch.  It's hard to imagine.  And until then, even if encryption were what the ISP was doing, a VPN would solve the problem.  Maybe law enforcement would attack the VPN providers and say, okay, if you're going to provide VPN services, you need to allow us to set up monitoring on your exit node, you know, on the VPN server.



LEO:  And that's why you use an internationally-based VPN; right?



STEVE:  Correct.



LEO:  Preferably run in a nation that doesn't do that kind of thing, although I don't know how many nations will be around that don't.



STEVE:  Boy.



LEO:  Yeah, after reading that WiFi thing, I thought, you know, I'm not worried so much about some Joe trying to get into my stuff as I am about a day when a government really wants - once a government really decides to spy on its citizens, it's going to be really tough, frankly.  It's going to be very hard.  And now is a good time to start listening to Security Now! and develop the skills you need.  I'm not kidding.  Seriously.



STEVE:  Yeah.



LEO:  And I also told Lisa, I don't know if she's going to go for it, I want to get a gun and learn how to use it.  But that's another story.



STEVE:  Oh.



LEO:  She's always teased me about, oh, I've got a Glock somewhere in the closet and that kind of thing.  Then as soon as I said, "I want to get a gun," she said, "No, you don't.  What are you talking about?  Stop.  No, you can't."  So I think it was all just a little bluster.  Vern Mastel with the Bismarck Public Library, Bismarck, North Dakota - I love that town because of public broadcasting in Bismarck, North Dakota.  He oversees a large public WiFi network:  Steve, I administer a public wireless system at the Bismarck Public Library.  It consists of a Meraki router, 17 access points.  It connects to the Internet via a cable modem connected to our local cable ISP.



I installed the Meraki system three years ago in 2012, to replace a system that was built with consumer grade Netgear Access Points and a Smoothwall router.  Hey, I like this guy.



STEVE:  Yeah.



LEO:  He obviously knows what he's doing.  I had become accustomed to the existing system, which could only tell me how many logins there were per month.  I was not prepared for the wealth of data the new system would supply.  Now the system's logging, and I can see almost in real time how much traffic is flowing, what devices are connected, what traffic is being generated by whom.  Devices are identified by MAC address, machine name and operating system.  Many have an easily identifiable machine name, like TommyBoy or CheezEater.  Obviously from Wisconsin.  It will tell me what access point a device is currently associated with.  At the end of every month I have a nice detailed report listing traffic by type like BitTorrent and Google Video, traffic by device and user, and by access point.



STEVE:  Wow.



LEO:  Yeah.  When I discovered the extensive data gathering features, I asked Meraki, how do I turn that off?  I didn't want to have user identifiable data in case the authorities ever came calling with a court order.  Meraki told me, not possible, the data gathering cannot be turned off.  And I receive a DMCA warning letter at least once a month warning me about copyright violations on the cable connection.  What a surprise.  Given that BitTorrent alone accounts for about 10% of our monthly public wireless traffic, the real surprise is I'm only getting a letter a month.  What, kids go to the library now to share music?  Wow.  So in my limited experience, my WiFi is not an anonymous communications system.



Finally, I'm astounded by the number of WiFi hotspots that exist.  I have the system configured to warn and react - oh, this guy's good - when anything broadcasting as a hotspot comes within range.  As you should because a bad guy setting up spurious hotspots; right?



STEVE:  Yup.



LEO:  Guess what?  The system logs 500 to 700 every month.  Wow.  Thank you.



STEVE:  So I just really liked this little report from the field, that here is, as you said, obviously a tech-savvy Security Now! podcast listener who is running a major WiFi installation, 17 access points.  So this is a substantial public installation with lots of activity.  He's tried to be proactive in saying, no, I don't want access to this information.  He doesn't want to have to serve information on people who use the library, assuming that it's an access-friendly location.  And this information is being generated, like it or not.



LEO:  Wow.



STEVE:  Wow.



LEO:  That's too bad.  Michael O'Rourke, Cambridge, England poses a question about assuring privacy:  From a privacy perspective, how can an ordinary law-abiding person determine if they're being placed under surveillance - oh, this is good - in their ordinary PC usage?  Within reason, are there any telltale signs to be aware of in ordinary, day-to-day usage of their PC?  I bet the bad guys already know.  So what should the good guys be aware of, within reason?



STEVE:  You know, this was, as you said, a great question.  And the problem is that what we're telling law enforcement, you know, we the security community, since we're saying no, you cannot have backdoor access to encrypted connections, we're saying you need to get access before it's encrypted or after it's decrypted.  So this of course is why, back when the Snowden revelations first occurred, people like Google and Facebook and others were immediately implicated because that would be the decryption on the far end, where the encryption has been removed.  And the question was, you know, are these major companies complicit in helping law enforcement to have access to the post-decryption data?



The other side is the pre-encryption, which is the famous keystroke logger.  And we know that law enforcement has malware, or what we would call malware - they don't, I'm sure they call it surveillance-ware - because we know, for example, that recent company that had its whole database breached, it was selling its surveillance software to U.S. law enforcement companies through shell corporations so that it wasn't obvious who was buying it.  And so they were arranging to install things on people's computers.  And so that's the get something, get a shim installed before the encryption in order to monitor what a person's machine does.



The problem is these are stealth things.  They're rootkit technology.  They are very good at hiding themselves.  They're typically undetectable by antivirus systems.  We know that our - we've been talking the last few months that there are now BIOS-resident technologies that get themselves installed even before the machine boots.  So the fully honest answer is it's a great question without a great solution.  How does a law-abiding person know if you're under surveillance?  I think, unfortunately, in this day and age there probably isn't a way to know, and you for that reason should stay law abiding.  



LEO:  Assume surveillance.



STEVE:  Yeah.



LEO:  Denny in Portland, Oregon worries about knowing someone's password length:  Steve and Leo, listener since Episode 1.  Whenever I've had conversations about online security, the topic invariably turns to password length.  Usually someone will mention the length of a password.  For example: "My Amazon password has 20 characters."  I cringe when this happens.  It seems to me revealing the password length would allow bad people to focus their brute-force attacks because they could ignore all the other lengths.  Saying a password has a maximum of 20 characters seems very different from saying it "is" 20 characters.  Should I be keeping my password length secret?  Or is this a non-issue since it would effectively save 100 years from a 10,000-year brute-force attack?  What are your thoughts?  Thanks, Denny.



STEVE:  Well, he answered his own question.  I agree that, I mean, it's always the case that you want to provide the least information possible.  And of course, as we mentioned before, the reason some people think that the math is wrong on my Password Haystacks calculator is that they assume that I'm only calculating, in this case, the length of time to crack a 20-character password.  But I recognize that attackers don't know the length.  And so what the calculator does is to sum the number of combinations of 20 characters, 19, 18, 17, 16, 15, and all the way down, to get a substantially larger number.  But if your password is 20 characters, and if it's high entropy, if it's 20 random characters, then you have nothing to worry about.  So be proud that it's 20.  I agree with Denny, it's not good to say it.  On the other hand, he says that this is someone mentioning it.  Well, the attacker...



LEO:  Don't post it on the Internet.



STEVE:  Right.



LEO:  But saying it to someone, I could tell you my password length.  I just don't want to announce it to the world.



STEVE:  Exactly.  Exactly.  And so the spoken length over coffee isn't going to represent any decrease in security because a bad guy scanning the 'Net and finding a machine isn't going to know anything about this particular guy and can make no assumptions.



LEO:  Right.



STEVE:  So but I thought it was an interesting question.  And I think...



LEO:  It is a good question, yeah.



STEVE:  Yeah.



LEO:  Question 5 comes from an anonymous listener.  And I figure he was representative of maybe 58,000 emails you got about this subject?



STEVE:  Uh-huh, exactly.



LEO:  Steve, you call for a law compelling Apple and presumably others to have the ability to decrypt on a phone-by-phone basis.  You are assuming Apple would not have a Snowden to leak that ability, in whole, to the world or bad guys.  If the NSA could have a Snowden, what makes you think Apple wouldn't also?



STEVE:  Okay.  So you're right, Leo, I got, of course, my saying that I thought Apple's ability to respond to a court order was probably the compromise we were going to see.  We'll see.  I hope I'm wrong.  But I'm acutely aware of this tension.  And the tension is not going away.  And we do not have - I also am acutely aware of Congress often making bad decisions.  The DMCA is a bad idea.  I mean, so bad things can happen.  And this would be - I'm not saying I wish things were different than they are now.  I love the way they are now, that Apple can say "We cannot decrypt."



So, but he did mix two things.  And so the reason I wanted to mention this is there is a difference between a backdoor and what I said.  And in his question is the essence of the confusion.  He said, "You're assuming Apple would not have a Snowden to leak that ability."  No.  I'm not suggesting that they add an ability.  And that's the difference.  If there was a secret, one secret, which we would call a backdoor, which if the government knew the secret they could access anyone's phone, that's a backdoor.  What I was proposing is that Apple maintain a database for which there is no algorithm, where on a person-by-person, on a phone-by-phone basis, a high-entropy random value is generated, and Apple stores it.  And that's the master key for that one phone.



Now, there is a huge obligation that Apple has to protect that database.  So, yes, it creates a vulnerability.  There again, that's - there's no way to do this without creating a vulnerability.  And so all I'm saying is it's not a backdoor.  I'm not saying that I think it's a great idea.  I've been a proponent of what Apple is doing and this kind of security.  And it's because I wasn't sure I would be allowed to have this kind of security that I killed the CryptoLink project that I had already made a big investment in.  So, again, I watched Congress do dumb things.  And this seems like a compromise that I wouldn't be surprised to see happen.  But again, it isn't something where a single secret unlocks the keys to the kingdom.  It is explicitly not that.  It is individual phones would be kept in a database.  And if Apple had to respond to an individual court order to unlock a phone that had been captured, for example, after an attack, they could do so.  So it is a compromise, and maybe one that we're going to be forced as an industry to make.  We'll see.  We may not have to wait long.



LEO:  Yeah.  Norman Davie of Vancouver, BC, Canada brings us our "You're Doing It Wrong" faux pas of the week.  You're doing it wrong:  Microsoft recently sent an email telling people to upgrade their Windows Live Mail with a link to click on to perform the patch, instead of just telling them to go to Windows Update.  So it took no time for virus writers to copy the content and point the link to a TeslaCrypt infection site.  Norman Davie, President, Exceptional Computer Services, Inc.  And he sent us a link.  Oh, doesn't work anymore.



STEVE:  Okay.  Well, I did capture, I captured it from his Facebook page link.  And this is what it looks like.  And, I mean, it's 100% official Microsoft looking.  It's in the show notes here.  It says Outlook.com, "Important information about your email service."  And, you know, Dear User.  So it's Microsoft's letter.  But they actually sent it out with a link to click here.  And in this day and age I hope everybody and their spouses and significant others and kids have been told over and over and over, never click on links in email, no matter who it comes from.  If it comes from Grandma at Christmas time with a Christmas card, just do not click on it.  Go to Outlook.com and follow from there.  Again, the best wisdom of all is, if you did not go looking for it, do not do it.



LEO:  Joe in Cleveland wonders about the future of NAT routers:  Steve, will IPv6 make NAT routers obsolete?  Long-time listener, first-time questioner:  You've mentioned many times how NAT routers are important to IPv4 after the address shortage, and for security.  But what's going to happen when we shift to IPv6 and everything has its own IPv6 IP?  We won't need NAT to separate public and private.  And without NAT we'll lose all the protections we have from it today.  It seems like we'll need a new type of home firewall appliance.  How do you think we'll handle this in the future?  Thanks for all you guys do.



STEVE:  So it's a great question.  And I've been sort of following loosely the various discussions going on.  With 128-bit IPs, again, this is one of those things where our brain doesn't get around it very well because 128 bits only seems like, well, that's only four times more bits than we have now.  We have 32.  If you double that, you get 64.  You double it again, you get 128.  It doesn't seem like that big a deal.  Oh, my lord.  I mean, it's a crazy number of IPs.  So much so that there is discussion, and this isn't all settled yet, and there may be some ISP-to-ISP variation, but it may be that individual subscriber networks like a person at home would have their own 64, wait, no, 32-bit chunk of the Internet.  I think ISPs get 64 bits, and they might be then allocating 32-bit chunks.  Which means an ISP would have 4.3 billion subscribers, each with an Internet size with 4 billion IPs.  I mean, that's how many we have.  When we go to IPv6, it's crazy.



So as we know, the reason NAT is being used in consumer routers is that right now we get one IP from our ISP.  And because this sort of hails from the day that we used to have one computer on the DSL dialup or something, you know, that was what we did.  And then NAT routers allowed us to use network address translation to get many more.  It looks like when we move to IPv6 we will at least get, you know, the number doesn't matter.  You'll get more IPv6 IPs than you could ever possibly be using at the same time.  So they will all be present.



The good news of this is that there are problems that NAT creates.  And we talked about this.  The Universal Plug and Play problem where, for example, UPnP was created to allow a device like an Xbox to be able to tell the router to open ports so that unsolicited packets could get to it.  Increasingly, we are seeing peer-to-peer network systems.  Peer-to-peer networks have a problem because - it's called "NAT penetration."  The fact that the term "NAT penetration" even exists is testament to the fact that NAT has to be penetrated somehow.  I mean, and the users want that.  But it's a technical problem.  The good news is that goes away.



So there will probably still be a NAT router, or a router, which probably does IPv4 NAT, but is also IPv6 aware.  So it'll be more sophisticated.  And the Xbox, for example, will get an IPv6 address.  And the router, without even being told, will automatically send incoming IPv6 packets on that IP, on the Xbox's IP, to the Xbox.  The point is that right now, with normal consumer NAT, all the traffic outside has that one IP.  So it's up to the NAT to then distribute them inside.



When we go to IPv6, what we'll start seeing is, from this one consumer, a myriad of IPv6 packets emerging from the border, from the consumer's network, going out onto the Internet, and IPv6 addressed return packets will come right back through and back to the equipment.  So there may still be a stateful firewall, where, for example, unless it's told it may, unsolicited incoming traffic still gets blocked.  So that it's - and that's the way I want to run, once this happens.  I absolutely don't want my internal network to be scannable, if that's what we're talking about.  We're talking the same way that the Internet can be scanned by Shodan to find problems, individual consumer networks could be scanned by Super Shodan to, like, find all their light bulbs and other nonsense that they've got hooked up in their network.



So we absolutely don't want that kind of lack of protection.  So I think we'll still see a stateful firewall feature, yet devices inside the network will have unique IPv6 addresses from a big block that the ISP has allocated to them.  And incoming traffic that is expected, solicited by having some outgoing traffic first, it won't have to, like, wonder what device it goes to.  It just goes back into the network.  And then the network, as any network does now, routes it to the proper device.  So, wow, you know?  If IPv6 ever happens.  It's still struggling.  Here we are at the end of 2016.  What, we were talking about the death of IPv4 a couple years ago.  And, yeah, we're all still using it.  But ultimately, as we know, the industry only makes moves when it's exhausted every other possibility.



LEO:  And there are, I presume, some issues with IPv6, you know, things that, problems that have to be solved and stuff; right?



STEVE:  Yeah, that's the problem is compatibility.  It's like no one wants to have any problems, so they just don't use it.



LEO:  Right.  Don't blame them.



STEVE:  Yup.



LEO:  Eric Sarratt in Sylva, North Carolina wonders how he can determine whether his SSL email truly is secure:  Steve and Leo, is there anyway to tell if my IMAP (port 993) SSL email connection is secure?  I often send email from my personal laptop from my place of work, and I want to make sure my employer is not intercepting and man-in-the-middling my SSL connection between my email client, which is Thunderbird, and my email server.  How can I tell if the connection is being tinkered with?  Yeah, that's a good point because within a browser you could see the certificate.  Is there some easy-to-use website that will check the connection for me?  If not, an explanation of "the hard way" will also work just fine.  Thanks, Eric.



STEVE:  So the problem is that you want to know whether the connection from your laptop to a remote server is encrypted.  So, and that's a problem.  You can't really use a remote site because that's going to be coming from a different direction through a different network to your email server.  I poked around because I was curious about this myself, because I thought it was interesting.  And it turns out that you can use OpenSSL to establish a connection to your - I don't know if he mentioned IMAP.  I think he did somewhere because he was talking about...



LEO:  Yeah, 993 is IMAP, yeah, for SSL.



STEVE:  Yeah, yeah, his IMAP port 993.  Right.  So, again, this is the hard way.  But OpenSSL is available safely for download from, like, legitimate repositories like OpenSSL.org, where you could load it in Windows or Mac or whatever you're using.  It's a command line tool.  And in the show notes I gave the two commands that you could use to cause OpenSSL to connect securely to an IMAP - in my example I used imap.remote.com.  See, the problem is you want to see the certificate because maybe you would know if your personal laptop was bearing a certificate from your employer, in which case there's a chance they could be, and this is exactly what Eric's worried about, man-in-the-middling his connection.



So the only way to really know - because, for example, a browser you can examine the certificate.  You click on the URL, and you say show me the certificate, and you can see if it's like your employer, or if it is a legitimate certificate issued by a legitimate root certificate authority.  You don't have the ability to do that in an email client.  It just does it magically behind the scenes.  So what you need to do, you need a way to see the certificate which a remote server is returning to see if it looks like it's not from somebody who might be in the middle.



And what these two command lines I gave, for example, it's openssl s_client -connect, and then the domain :993, telling it you want to connect to imap.whatever, you know, your IMAP server name is on port 993.  OpenSSL will make that connection and then dump the certificate which the remote server provides.  And then you can examine it and determine exactly what - because this is exactly what your own email client making the same connection would receive.  So definitely the hard way, but it's the way to get the information.



And it's, you know, kind of cool to mess around with OpenSSL.  You hear us talking about it all the time.  It's both a library which can be built into code for its own internal use, but it is also a command line, an amazing toolkit that allows you to examine certificates as they fly around the 'Net.



LEO:  How did this happen, Steve?  We got through all eight of them.



STEVE:  Oh, my god.



LEO:  Steve Gibson is at GRC.com.  That's where you can find SpinRite, the world's finest hard drive maintenance and recovery utility.  It's Steve's bread and butter, so go buy a copy, even if you don't need it.  You will.  You will.  He also offers a lot of free stuff there, including this show, 16Kb versions of the audio, 64Kb as well.  And something unique to Steve, a full, beautiful, human transcription of the entire show, so you can read along as you listen.  You can also search it, which is really the chief value of it.



STEVE:  I use it all the time in order to refer back to previous podcasts.



LEO:  And Google indexes it, so you can use Google to search it, yeah.



STEVE:  Yup.



LEO:  We have audio and video, as well, of the show at TWiT.tv/sn.  You can also find a subscription pretty much everywhere podcasts exist.  I can't think of a single place that wouldn't have Security Now!, one of the oldest, best [crosstalk] podcasts.



STEVE:  It's funny, in the early days of the podcast, I used to google it, you know, in the way that some people google their name, because I could sort of see it spread.  And now it's like, now it's not even - I haven't - it's been years since I bothered.



LEO:  Not necessary.  Not even necessary.  It's everywhere.  Steve, lots of fun.  Next week we're going to do a Best Of, an episode we haven't heard in, I can't believe it, almost five years.



STEVE:  Six.



LEO:  Six.



STEVE:  Yes, it was '09.



LEO:  The Vitamin D episode.  And it doesn't have anything to do with security, but it really does have to do with your health.  And I think over the six years intervening, the medical community has absolutely come around to your point of view.



STEVE:  Yeah, we were early on this.  I read a couple books, and I - I think people, even if you're not, if you don't think that sounds like it's interesting, I surprised everybody because I take a deep and sort of historical biochemical approach to define and explain the power of that hormone.  It's not a vitamin because our body makes it.  It's actually a hormone.  And almost everybody is unfortunately deficient because we're no longer running around naked in South Saharan Africa near the equator, hunting and gathering during the day.  We've got clothes on.  We're behind glass, which blocks UVB.  And the only real source is our skin, which synthesizes it.  But it's crucial.



So I think people will actually like it.  And it'll be a refresher for people who've been listening since before '06, but I know we've got a ton of people who have maybe heard us refer to it briefly from time to time.  But, yeah, I think it's really important.



LEO:  Great stuff.  And then we'll be back, as you said, on January 5th.



STEVE:  Yup.



LEO:  And every Tuesday thereafter at 1:30 p.m.



STEVE:  For the rest of time.



LEO:  For the rest of time, 1:30 p.m. Pacific, 4:30 Eastern, 21:30 UTC, right here at TWiT.tv.  Thanks, Steve.  Have a merry Christmas.



STEVE:  You, too.  Have a great Christmas vacation, and I'll talk to you in two weeks, my friend.



LEO:  Happy New Year.  See you in 2016.



STEVE:  Right-oh.



LEO:  On Security Now!.



STEVE:  Bye-bye.



Copyright (c) 2015 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#541

DATE:		January 5, 2016

TITLE:		New Year's News

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-541.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm	



DESCRIPTION:  The last two weeks of 2015 generated so much news that this first podcast of 2016 catches us up on everything that happened since our last podcast of 2015.



SHOW TEASE:  It's time for Security Now!  A brand new year, and there's so much to talk about.  Steve Gibson has the latest security news, some interesting tidbits and factoids, as always, about things like IPv6.  I'll demonstrate, or at least the setup of, this Tiny Hardware Firewall, just came a moment ago.  All that coming up next on Security Now!.  Happy New Year.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 541, recorded Tuesday, January 5th, 2016:  New Year's News.



It's time for Security Now!, the show where we save you and your loved ones from the perils of the Internet, thanks to this man, our captain, the man who sails the mighty ship Security Now!.  It's Steve Gibson of the Gibson Research...



STEVE GIBSON:  Or if we're not able to save you, at least when it all goes bass-ackwards you'll know why.



LEO:  He's the guy.



STEVE:  It's not a mystery when suddenly something pops up and says, "All of your files are encrypted, sorry about that."



LEO:  And Steve, I want to say this about you, and I really appreciate it.  You're not an "I told you so" kind of guy.



STEVE:  No.



LEO:  No.  I am, though.  And I will...



STEVE:  I don't have that.



LEO:  No, you don't.  You just say, "Oh, I'm so sorry."  But you should be listening to the show.  Then we don't have to say "I told you so."



STEVE:  That's a good point.



LEO:  So what are we doing this week?



STEVE:  This week, because we skipped a week, there's just too much to talk about.  So I just titled this podcast "New Year's News" because, as I was making notes, as events happened, it was one of those "a lot to talk about" weeks.  So we just have a great podcast full of everything that happened since the last, since two weeks ago when we left off on 539.  540 was our holiday episode.  And I have to say I got a ton of positive feedback from people who really appreciated hearing the Vitamin D podcast from '09, I think it was, six years ago.



LEO:  You know what we didn't realize is that there was no video of that show.



STEVE:  And I watched your introduction to it, and you were explaining that this was, you know, I was reluctant to aim a camera at myself.  And look, you can see why.  And so you were moving to video, and I was saying, eh, everybody's listening to this.  Why, you know, why...



LEO:  Well, you were right.  I mean, there's no - it's talking heads.  You don't need video.  But it's funny because it wasn't that long ago, and yet there is no video version exists.



STEVE:  I will say, though, that you were correct in predicting back then that bandwidth would expand, capacities would expand.  I mean, it was a bigger pull originally to get video.  Now it's websites are showing it to you without asking for it.  So obviously this has - it has changed, and it's become a lot easier to get to.



So all kinds of things happened.  We've got an update on the Get Windows 10 (whether you want it or not), a Windows 10 market share snapshot, some hysteria over the news of Windows 10 sending disk encryption keys, your disk encryption keys to Microsoft, and why it's actually not a surprise.  We'll look back at the security vulnerability counts of 2015 and see what they mean.  Google has issued some critical Android updates that we need to talk about.  Ransomware has gone multiplatform, and we'll talk about that.  There's a new Internet of Things WiFi standard which has finished all of its ratification.  We'll talk about how that's different from what we've got.  A new side channel attack using Smartwatches, of all things.  IPv6 is 20 years old.



LEO:  But that's the new thing.



STEVE:  That's right.  And it's just about getting ready to take off.



LEO:  Any day now.  



STEVE:  And then we have just a ton of miscellaneous stuff, courtesy of our great listeners, people sending me things over the course of the holidays, the most interesting of which we'll share.  So I think another great hour or two.



LEO:  Well, these are a few of my favorite shows, just kind of a tossed salad of security lettuce.



STEVE:  Security Lettuce.  There's a name.  Yeah.



LEO:  That was one of the rejected names for the show.



STEVE:  Security debris.



LEO:  We were thinking of calling it, yeah, Security Debris.  And we decided not to, thank goodness.  Why are you smiling at me like that, Steve?  You got something up your sleeve?



STEVE:  How do you know I was smiling at you?



LEO:  I can tell.  I'm like your fifth-grade teacher.  I can see out of the corner of my eye.



STEVE:  Apparently.



LEO:  Yeah. 



STEVE:  So our Picture of the Week at the top of the show notes is kind of fun.  Although IPv6 is now celebrating its 20th anniversary...



LEO:  And Vint Cerf, who was like one of the guys really lobbying hard for this for the last 20 years - he's now at Google, by the way.



STEVE:  Yeah.  And, I mean, these guys were right to realize that, wow, you know, we thought that 32 bits, oh, my god, that's 4.3 billion IPs.  We will never need more than that.  Anyway, that was like the 640K RAM ceiling.



LEO:  Oh, we'll never need more RAM than that.



STEVE:  The Apple II had 64K.  We're going to make the IBM PC, we're going to give it 640K, 10 times as much.  We'll never need more than that.  Well, so it is probably safe to say, certainly in our lifetimes, Leo, we will not need more than 128 bits of IP, which IPv6 gives us.



LEO:  That's a big jump.  From 32 bits to 128 bits is a big jump.



STEVE:  Yeah.  Again, it's difficult for our human brains to wrap ourselves around the idea that every bit we add doubles the number because 128 doesn't seem like, you know, it's only 96 more than 32.  And it's like, eh, okay, that's only four times more bits.  But, oh, boy.  It's 2^96 times - it's 2^96 Internets, essentially.



LEO:  It's enough IP address for every grain of sand, every molecule.  I mean, it's incredible.



STEVE:  Well, yes.  So much so that ISPs are just giving their individual single subscribers a block of 64K IPs.  It's like, "Here you go.  This ought to be enough for your light bulbs."  Anyway, so this chart on the first page, the Picture of the Week, is Google's measurement of IPv6 adoption.



LEO:  If you squint, it looks pretty good.



STEVE:  Well, yes.  This is, however...



LEO:  Like a hockey stick.



STEVE:  This is the most recent 10 years.  So for the first 10 years it was flatline.  It was like, you'd have to have another one of these charts over to the left that just shows nothing.  So, and the bridging technologies existed briefly.  You can see the little red line that kind of was making an effort, then it kind of faded out.  That was the IPv4/IPv6 bridging stuff.  But now, I mean, it's doing a nice - it's not quite exponential because it ought to be accelerating more, if it were.  We're still showing some reluctance.  So it's sort of a straight line with an exponential liftoff.



But the point is Google is measuring the - what they do is some small fraction of Google visitors get a little bit of extra JavaScript added to see if they're able to directly access IPv6 resources, which would indicate that they have a local IPv6 stack operating in their system.  So this is a way for Google to sort of salt their followers, their users, with little probes.  And that's how this chart has been developed.  What's significant is that - and I don't know how, on what side of this you would stand.  But we are now at 10%.



LEO:  That's what I mean by, if you squint, the curve looks positive.  But the top is only 10%.



STEVE:  Yeah.  And in fact, one of my own personal pet peeves is graphs that are not zero-based.  Now, this is.  But it's not - but they didn't set the top to a hundred.  If they set the top to a hundred percent...



LEO:  You know why they didn't.



STEVE:  Yeah.



LEO:  It looks stupid.



STEVE:  Yeah.  And it's like one of the ways of lying with charts is you use non-zero-based...



LEO:  I agree.  People do that all the time.  It's terrible.



STEVE:  ...scales.  And it completely artificially inflates the differences between things.  Which, you know, just sort of always seems like a cheat to me.  But anyway, in this case the shape is nice, and the timing is nice.  It sort of began to happen five years ago, at the beginning of 2011.  And 2012 was maybe about twice that.  2013, a little more than twice 2012.  2014, it's accelerating, so about 2.5 times, and so on.  And clearly this is where we're headed.  No one expects this is going to stall out or anything.  But it'll be fun to see over time what the shape of this is, if it does in fact begin to sort of flatten as there are people holding out, keeping their IPv4 because it works, and not feeling the need to move.



And as we know, there are countries - this is probably - it'd be interesting also to see a geographic distribution.  Actually, there was one on the page that I got this from.  But the map that showed the geography didn't have a key.  They had, like, red zones and green zones.  But then I looked, it's like, okay, what do those colors mean?  And there was nothing shown.  I didn't dig down too deeply.  Our friend Simon Zerafa sent the link to me that I found this.  But I'm sure what we would see is a huge amount of geographic non-uniformity where countries that are - oop, there it is, that's the chart.  Now, does that show anything?  Can you see what red and green...



LEO:  Yeah.  Green is - the darker the green, the greater the deployment.  Orange, which is a little too close to red for my  taste, but orange is where - I'm sure the Google engineers are colorblind.  Orange is where IPv6 is more widely deployed, but users still experience significant reliability latency issues connected to the IPv6 websites.  And regions where IPv6 is not widely deployed and unreliable is bright red.  So then there's some pink.  I don't know what the pink means.  But apparently the U.S. is strongest in this.



STEVE:  Yeah.



LEO:  As well as Portugal, which has a whopping 24% adoption for IPv6.  That's almost as much as the U.S.  Greece, where apparently the drachma is strong because it's got 20%.  Belgium, 44%.  That's the EU talking; right?  And Switzerland, which is 30%.  The U.K. is a woeful 2.96%.  I'm sorry, U.K.  But so Canada is 7.4.  Brazil is 6.5.  Ecuador, bad news in the latency, 40ms latency.  Zero percent adoption in Botswana, and 40ms latency.  So there you go.  Botswana's the worst, so don't go there for your v6.



STEVE:  Yeah.  Stay on a boat.  I heard that your cruise ship was just like amazing Internet connectivity.



LEO:  Oh, my gosh, yeah.  Sometimes if you want I'll talk a little bit about how that technology worked because I got the lowdown from Kirk Harnack, who's apparently worked with some of the people who installed that stuff.  There is satellite Internet that's pretty darn good.



STEVE:  Nice.



LEO:  Apparently boils down to basically a dedicated satellite aiming at the ship, like this is yours.  It's not cheap for them.  But the boat cost $1.4 billion.  It's not...



STEVE:  Well, and you've got to figure, I heard you mention that it was $10 per day.



LEO:  $15, yeah, for the Internet.



STEVE:  Oh, I'm sorry.



LEO:  Unlimited, which is very unusual on a ship.  It's very unusual.  Almost always they have significant bandwidth caps.



STEVE:  $15 a day.  And would there be anybody on the ship that would not have Internet service?



LEO:  No.  Well, you pay for it.  Everybody can have it.



STEVE:  Right, and so...



LEO:  They have two WiFi networks, one for crew and one for guests.



STEVE:  So I'm just thinking it is a revenue generator for them.  Wouldn't you say?  I mean, if like a huge population, a percentage of the people on the ship... 



LEO:  5,000 times $15 a day, yeah, I think they could afford it.  This is - the technology is 03b Networks, if you want.



STEVE:  Yeah, see, we need to get that for Elaine because - although I think she had an upgrade to her HughesNet satellite some time ago.  Things seem to be better for her now.



LEO:  Yeah.  Yeah, this is, well, I mean, yeah.  Maybe you saw my speed test at 3:00 a.m.  I had to get up in the middle of the night to kind of guess what the maximum was.  It was about 25Mb down.



STEVE:  Gosh.



LEO:  Really surprising, I mean, in the middle of the Atlantic.  That's pretty impressive.  O3b Maritime, if you want to read up on more.



STEVE:  So we've heard some reports on the 'Net of the disabled "Get Windows X" switching itself back on.  We now have our own listeners reporting that it has happened to them.  Charles Killmer was one, who tweeted to me and made it into my notes.  He said, "This morning the GWX Control Panel" - which is the app we talked about recently - "alerted me to OS updates being reenabled.  I have not installed anything recently.  Update history shows only Windows Defender updates."  And he said, "Thanks for the tip on GWX Control Panel."



So I wanted to remind our listeners, who may have heard about it, meant to deal with it, but didn't, that if you just google "GWX control panel," it'll take you to UltimateOutsider.com, which is the guy who developed this.  And it's becoming quite popular because it's the way to keep control.  Essentially, for whatever reason, and it just must be because Microsoft is determined to push Windows 10, even if you turn it off, Microsoft just unilaterally turns it back on.  So we now not only have sort of a generic report from the industry, but our own listeners are saying the same thing.



And the other bit of news that's related came from someone whose handle is OneEye Rabbit, who tweeted.  And he said, "Steve, in 539 you talked about GWX."  And he said, "For me, I tried WinX from the 7th of December through the 22nd of December.  Finally I had enough and tried to revert to my previous Windows 7.  Microsoft said you have 30 days to revert, but for me after two weeks that option was no longer available."



LEO:  Yeah, I've had the experience, too, that it doesn't always work, yeah.



STEVE:  Yeah, he says, "I used a restore point to get back to Windows 7.  Now I'll have to deal with GWX again."  So I did want to note that apparently, again, for whatever reason, maybe Microsoft is starting the counter earlier than users choose to install it, who knows.



LEO:  Well, it's not an inconsiderable amount of space, remember.  You know, saving an image of your previous install.



STEVE:  Yeah, yeah.  And of course downloading beforehand...



LEO:  The next one, yeah.



STEVE:  ...the number of gigabytes of Windows 7.



LEO:  So it may be - it may have something to do with free space.  I mean... 



STEVE:  That's a good point.



LEO:  ...there's a lot of reasons why it might not work.  I've had it work, and I've had it not work.  So I always advise people not to trust the 30-day rollback.  You should make a copy, make an image.



STEVE:  Right.  Good, good, good.  And speaking of Windows 10...



LEO:  I don't know - by the way, I'm going to mention real quickly...



STEVE:  Yeah.



LEO:  We had the CMO of Microsoft on Windows Weekly two weeks ago.



STEVE:  Right.



LEO:  Chris Capossela, who's great.  And I asked him specifically about this GWX thing.  And he was, I think, is it fair, listeners, to say he was a little embarrassed by it?  He knew about the problem.  He'd heard about it.  And they felt like they maybe misstepped a little bit.



STEVE:  Well, it's generating a lot of negative press.



LEO:  Yes.  And I think he's aware of that.



STEVE:  I mean, so you don't want that.



LEO:  Right, right.



STEVE:  So Windows 10 market share is climbing and now getting close to where Windows 8.1 was.  There's a neat site, and I want to commend our listeners to it, just because I really like these sorts of time change charts.  And the site is - I've got two pages here in the show notes.  But it's gs.statcounter.com, gs.statcounter.com.  And you can, there, you can select a number of different charts over time.  And but the one that I pulled out shows that the black line in their chart is Windows 10 adoption, which took off from zero on July 2015 at launch.  And it initially climbed a little faster.  Now it's sort of on a linear trend.  And it looks to me like it's more than 10%, actually, it's sort of maybe like 12%.



The biggest loser, but which of course proportionally makes sense because it has the largest market share of Windows, actually of all because iOS is in there, as well, as is OS X, is Windows 7.  Windows 7 was up at 50%, and it's been pulled down to 40%, pretty much almost in line with Windows 10 going up.



LEO:  Yeah, it's kind of what you'd expect because those are [crosstalk].



STEVE:  Yeah, and 8.1 never got above about 15%, and it's been pushed down to looks like about 11%.  So just sort of I really like these time varying charts.  I also have a pie chart that sort of shows where everything is overall, showing Windows 7 with still the majority OS in the entire industry at 55.68%.  XP, yeah, XP's in number two, 10.93, followed by  Windows 8.1 at 10.3.  And then Windows 10 at just shy of 10%.  So this chart looks like it's a little bit dated.  The pie chart did come from a different site.  So it's either different data collection, or it's a little bit older because it looks like in the chart that we were just talking about, Windows 10 had a higher adoption, and actually 7 had been pushed down from 55 down to about 40%.



LEO:  Where does StatCounter get its stats?  How do these, I mean, this is not from Microsoft, obviously.



STEVE:  No.  I didn't dig into it.



LEO:  Microsoft says 200 million installs.  Which would be actually a higher number, I think, a much higher number than this shows.  But they also admit that they're including Xbox One.  Not that that would make a huge difference.



STEVE:  And then while I was at StatCounter, I was curious about - they also offer browser utilization.  And I thought this was really fun.  I pushed it all the way, I pushed the starting date all the way back to as old as they were collecting.  And more than anything else, this shows the crash of IE and the rise of Chrome.  From January, the beginning, actually a little bit earlier, it was about midway through 2008 it begins.  And IE at the time was at 70%, and it's collapsed to about 14% now.  And Chrome was at zero back then, and it's now the dominant browser at looks like well over 50% of share.  Of course Firefox has been depressed.  It never had the starting share that IE did, but it's pretty much taken the brunt of the rise of Chrome.  And Safari's sort of been puddling along.  Or, no, wait, where's Safari?  So Safari's been growing, but then in the last year and a half sort of stopped its growth for whatever reason.



LEO:  Now I remember StatCounter.  People used to use this on the web all the time.  Remember you'd have a hit counter on your website.  It was a free little JavaScript bug that would do a hit counter.  So I guess my question would be I don't know how many sites still use this.  There's a lot of sites that probably would avoid it because their users would say, "What the hell are you counting me for?"



STEVE:  Or they're just blocking scripts on their site now.



LEO:  Right.  So I don't know how accurate their numbers are because it's basically, in order for this to work, the websites have to install this on their website.  I mean, it's probably, I mean, it's a smaller sample size than the total, but it's relative numbers [crosstalk].



STEVE:  Yes.  And really it's the shape of the curves.



LEO:  Right, right.



STEVE:  So, okay.  There was a lot of concern, I mean, everybody got into the mix.  The Intercept has an article.  Cory Doctorow spoke up.  SlashGear wrote articles.  Ars Technica got in.  Because the news was it struck everyone apparently by surprise that when you were using a Windows 10 machine, your hard drive encryption keys were sent up to the cloud, up to Microsoft, where they were available to help you recover if something should happen.



Now, the reason this is not news is this so-called "device encryption" was introduced in Windows 8.1 back in 2013.  So this is what Microsoft has been doing for a while.  So I think this has people digging deeper into Windows 10 and saying, hey, wait, you know, wait a minute.



LEO:  Well, you remember how it used to be.  Before they started doing this as a service, you had to save your certificate for your whole disk encryption.  And if you neglected to do so, which most people, I think a lot of people didn't, you were out of luck.



STEVE:  Right.  And so, for example, this is the case where all the responsibility rests on the user.  TrueCrypt famously made you burn a CD and then made you insert the burned CD to prove to it that you had actually done that.  I mean, so that they did everything they could to help you keep yourself out of trouble while not sending your TrueCrypt master key elsewhere.  So exactly to your point, Leo, if you're in a really Trust No One mode, then you have the responsibility for managing your keys.



So this is, I mean, this is the tradeoff that Microsoft decided was in their users' best interest, which is export the keys to the cloud.  Well, and for example, in BitLocker and in whole drive encryption, the TPM, the Trusted Platform Module, contains the key. But that could get struck by lightning, or your motherboard could die, and so that it would - you no longer have access to it.  So exactly as you said, Leo, you are able to export your key locally, but most people don't.



LEO:  Can you turn it off, though?  Can you say don't upload it?



STEVE:  Actually, you can't.  The best you can...



LEO:  Ah, that's a problem, see.



STEVE:  That is the problem.  There's no notice.  There's no opt-out.  It always uploads it.  Now, what you can do is go and delete it.  The problem, of course, is that the keys have already been uploaded.  So Matthew Green weighed in, our often-quoted Johns Hopkins cryptographer.  He said:  "The gold standard in disk encryption is end-to-end encryption, where only you can unlock your disk.  This is what most companies use, and it seems to work well.  But there are certainly cases where it's helpful to have a backup of your key or password.  In those cases, you might opt to have a company store that information.  But handing your keys to a company like Microsoft fundamentally changes the security properties of a disk encryption system.  Your computer is now only as secure as that database of keys held by Microsoft, which means it may be vulnerable to hackers, foreign governments, and people who can extort Microsoft employees."



And of course other people observed that Microsoft could be served with a subpoena that compels them to turn over the decryption keys for an arbitrary user's hard disk, which presumably they would have to do if they had that information.



So you are able to delete the key that's been sent.  And I was a little confused because Microsoft has done, of course, their normal thing where the Home version is different than the Pro, which is different than the Enterprise.  Because Home doesn't have BitLocker, as I understand it, it has something called Device Encryption, which is sort of a weaker or watered down or less UI or something than BitLocker.  But there is information, for people who are concerned, to allow you to change your key and not have that change uploaded to Microsoft.  So you can get back to TNO.  And then of course the caveat is make sure you've got your keys backed up, if you take the trouble to do this.



So my only issue, I guess - and it isn't a big one because I recognize that Windows 10 is not for me.  It's not for many of our listeners who fundamentally want an OS that is more on their side.  So, but that's not most people.  Most people would like to have encryption so, if their laptop gets stolen, then bad guys don't have access to what's on it, and the idea of having access to the keys to decrypt it through their Microsoft account.  Oh, and this is tied to the Microsoft account.  That's the other thing.  If you go through that extra procedure of not using a Microsoft account, but only use local, create a local identity, then your keys never get sent to OneDrive, which is where this is, because your computer isn't associated with a OneDrive presence in the cloud.



So there are ways around this.  But by default, everyone's encryption keys are being held by Microsoft.  So the first step back from that would be simply to make a local copy or copies, make sure that they're secure, then delete them from the cloud.  And then the stronger solution is change your key in a way that doesn't resend it to the cloud.  Then you've regained full TNO security.  I've got links to various articles, and there's been a lot of discussion over the last two weeks, ever since this arose.  And again, this has been going on since 8.1, but it generated a lot of headlines and generated a lot of tweets to me from people saying, oh, boy, what's this about? 



LEO:  Before we...



STEVE:  And Microsoft...



LEO:  Go ahead.



STEVE:  I was going to say Microsoft...



LEO:  I'm going to interrupt before you get to the next subject.  But go ahead.



STEVE:  Yeah, I was going to say Microsoft has confirmed that it automatically uploads Windows 10 disk encryption keys to its servers and said that it's a deliberate decision based on weighing the worst-case scenarios.  And they feel that it's better for them to be able to provide restoration keys in the event of any catastrophe that would cause the user to otherwise lose all the data on their drive.  



LEO:  It's a tough one.  I mean, I don't know what to - you understand, I mean, LastPass apparently, in its new version which came out today, has now allowed support for key recovery of some kind.



STEVE:  Yup, LastPass 4.



LEO:  Yeah, I presume you'll talk about that at some point.



STEVE:  Yup.



LEO:  But I understand why you want to have key recovery.



STEVE:  Yes.



LEO:  And the thing is to implement it intelligently.



STEVE:  Yes.



LEO:  Because people are going to make mistakes.



STEVE:  Yes.  And what I've done with SQRL is, I mean, recognizing that there is no third party, and that's on purpose because we don't want one, is to come up with what we call a rescue code, very much like TrueCrypt.  I make people write it down, and I make them type it in just once.  And all it is, it's one and a half times the length of a credit card number.  So it's 24 digits.  And that's all you need.  Just write it down and put it somewhere, and that will always recover your identity.  And it's long enough, and it's purely random, so it's full entropy, that it's infeasible for it to be attacked.  But that was a tradeoff I made.  And it is the case, I think what we're seeing is LastPass is trying to find ways to compromise on a rigid security model where you would be up the creek and say, okay, yeah, it would be nice, but that's not practical.



LEO:  Right.



STEVE:  So to make a practical system for an increasingly expanding user base, who are not super technically oriented, you know, you have to back off a little bit from that.  So sending your drive encryption keys to Microsoft is the tradeoff Microsoft made.  The only thing I guess I would wish for is more clarity.  Microsoft should present a dialogue that says...



LEO:  Yeah, explaining this, yeah.



STEVE:  ...for your safety, well, and also...



LEO:  And an opt-out.



STEVE:  Imagine that you didn't know that your keys were backed up, and you had a catastrophe.  You'd go, oh, crap, now what?  And you wouldn't be able to take advantage of the fact that they were backed up in the cloud.  So you really do need to know that.  So Microsoft should say this is what we're doing, and maybe give you the option not to.  Or maybe say, if you're really sure, or maybe say we already did this.  If this is really not what you want, go there and delete them.  But if you do that, make sure you've made copies first.



LEO:  Don't hold us responsible.



STEVE:  Exactly.



LEO:  All right.  We're going to talk about what was the most insecure OS of 2015 in a little bit.



STEVE:  Oh, lord, yeah.  So I love that you led into this next topic with the most or the least secure operating systems because what I wanted to highlight is that a count of vulnerabilities is meaningless.  VentureBeat had a article, and actually a neat table.  You want to click that link, Leo, and bring up the whole chart titled "Software With the Most Vulnerabilities in 2015:  Mac OS X, iOS, and Flash."  And sure enough, if you look at the - and we often talk about the CVE numbers, the Common Vulnerabilities and Exposures.  That's from the National Vulnerability Database, where vulnerabilities are registered as they are found.



So sure enough, Mac OS X leads the pack at 384.  iPhone, or iOS, is number two at 375.  Flash Player, actually I would say this one is more deserved, in the third place at 314.  But to give you a sense for why just a number is meaningless, OpenSSL, which has been the source of massive scurrying all over, is way down the bottom at 34.  So it's not the number.  It's the fact that, for example, in the case of OpenSSL, they were doozies.  I mean, they were industry grind to a halt, run around with your hair on fire.



LEO:  All you really need is one really bad one; right?



STEVE:  Exactly.  And so it is the case, you know, I mean, here's Apple tweaking their software and fixing problems, I would argue none of which have been, like none of those 384 were as bad as any one of the Flash Player 314.  You know, every one of the Flash Player vulnerabilities was really remote code execution by visiting a web page sort of problem.  Whereas Mac, the Apple stuff is like, oh, yeah, we found some stuff that somebody privately reported, and we fixed it, so...



LEO:  In some ways you're penalized on this list if you are forthright about the problems.



STEVE:  Yes, yes.



LEO:  Because the number, I presume that number ultimately comes from the company.  Right?



STEVE:  Yes.  It is the company registering vulnerabilities with the National Vulnerability Database.  The other thing that's misleading, if you scroll down a little bit from where you are, is like the Windows versions.  They show, like, all these vulnerabilities with Windows, except we know that they're all the same vulnerability.



LEO:  Right.



STEVE:  So it's one problem that is across all of the common codebase of these.



LEO:  Right.  And Windows 10, which is fairly low on the list, number 35 with 53 vulnerabilities, it's brand new.



STEVE:  Right.



LEO:  So it was only out for five months of the year.



STEVE:  Well, and remember that they didn't rewrite Windows.  They gave it a new sugar coating, but basically it's the same Windows.  You just keep seeing the same dialogues after you drill down a couple layers of the froufrou UI.  It's like, oh, yeah, there's the actual dialogue that I've had since XP.  So Windows 10 basically has the advantage of the maturity of the codebase, and it's all the new things they've added that have the problems.  The bulk of the code is still, is now becoming more time-tested.  So I just sort of - I wanted to put a little reality check on the fact that just a number of vulnerabilities, I mean, if they're trivial, we're fixing this because we can, as opposed to OpenSSL, oh, my god, this has been out there for six years, and it's exposed everybody.



Oh, the other thing with OpenSSL is notice that it's a library that has been, that is massively cross-platform.  So it's being blamed for, I mean, it shows 34 vulnerabilities, but all of the Linux distributions were using this vulnerable version of OpenSSL.  But they're not counting independently the OpenSSL vulnerability, even though this is a library.  So anyway, the numbers are sort of interesting, but really need to be taken with a grain of salt.  And so a headline that says Mac OS X had the most vulnerabilities is like, eh, okay.  But Flash did the most damage.  And so I think it's - and OpenSSL, arguably.



LEO:  Be hard to measure that, though.  I mean, it'd be hard to have like a chart of who was the most vulnerable or whatever.



STEVE:  Yeah, yeah.  Only the NSA has that.



LEO:  Yeah, they know.  They know.



STEVE:  They're using it.  Meanwhile, Google did patch five critical Android security flaws.  They're doing a OTA, an over-the-air update as part of their Android Security Bulletin Monthly Release process, they call it.  And once again, receiving a multimedia message allows for remote code execution.  That Mediaserver library is just causing a real bunch of pain for them.  They must be really regretting the day that they just said, oh, yeah, we'll incorporate this into Android.  Because, I mean, it's just replete with bugs.  Five of the dozen that are being fixed in this are critical, meaning remote code execution.  And then they dropped down to moderate and severe.



So anyway, again, as we've discussed, I think it's becoming increasingly clear that sort of the telco or the smartphone model needs to incorporate the same kind of on-the-fly continuous security patching that we're now all accustomed to in all of our desktop OSes.  You just can't have a phone that has a operating system as sophisticated as Android is that, once purchased, is then abandoned, because there will be problems.  Everything we're seeing teaches us that.



Meanwhile, the first instance of, get this, JavaScript-based ransomware has been found in the wild.  Now, when I saw this, I thought, wait, no, you can't have JavaScript-based ransomware because the presumption is that JavaScript is tightly sandboxed by the browser.  We know that.  We know that JavaScript has no access to files in the OS.  Well, it turns out that this is JavaScript in the same sense as we were discussing a few weeks ago, where remember someone left-clicked on a .js file and ran it in Windows because Windows has its script engine bound to files with that extension.  And so that was running JavaScript natively on the platform where it is not sandboxed at all.



So what's happened is a well-known JavaScript kit called Node, the Node-Webkit, that's now known as the NW.js, which is, you know, NW stands for Node-Webkit.  That's now available, bound to an EXE wrapper.  So essentially what this means is that someone has written ransomware, meaning just like CryptoLocker, where it goes out and encrypts your files.  In this case there's a sort of a weird model where the developers are offering this as a service, and they're taking a piece of the action from the miscreants who get it from them and then arrange to get it into users' computers.



So we're now sort of seeing a two-tier system where authors of the ransomware are making it available under a software-as-a-service (SaaS) model to people who then figure out how to get end users to run it and get themselves encrypted and then have to pay up.  There's a security researcher, Fabian Wosar with Emsisoft who said that, by using NW.js, Ransom32, that's the name this thing's been given, could easily be packaged for both Linux and Mac OS X, even though so far it's only been seen in a Windows EXE format.



And of course, as we were saying, although JavaScript in the browser is heavily sandboxed, NW.js allows for much more control and interaction with the underlying operating system, which enables JavaScript to do the same things that native programming languages like C, C++, and Delphi and so forth can do.  So that's not good.  It means that we have ransomware that's cross-platform.  And given a platform-specific wrapper, so Linux would need its own wrapper, Mac OS X would need its own in order to get that script to be able to run.



But the Node.js, I'm sorry, the Node-Webkit.js, it provides the cross-platform interface, essentially making it easier to do.  So when we first saw ransomware a couple years ago, it was immediately clear to us that we were in trouble, that this was going to make money, and if it made money, we would get more of it.  And we're seeing, ever since, we've been seeing more of it.



We've been talking about security certificates, root certificates, and how various packages add certs to users' machines.  Sometimes corporations will add a cert.  And it's a constant question now I'm getting, how do I tell if my system is infected?  Or, well, not infected.  Well, maybe you consider it an infection, you know, that AV software is doing it, employers are doing it.  We've seen rumblings about governments doing it.  And I'm worried about the day that ISPs will do it.



Our friend Mark Russinovich has a cool utility.  Remember that he used to be Sysinternals, and Microsoft bought Sysinternals in order to get him, mostly.  He has a utility called SigCheck, which is not yet at v2.4.  Right now it's at v2.3, and it's one of his, sort of that Sysinternals, very nicely written, lightweight, I think it was something like 180K.  It's just a simple program that runs.  You don't have to install it.  Right now it's a utility for verifying signatures of files, showing you the signing chain and expiration dates and verifying the signatures of files and so forth.



In beta is v2.4.  I was alerted to it by a friend of the show who tweeted me about it, and I've got my eye on it, too.  2.4 will add a check for non-Microsoft root certs.  And that will be great.  So I've got my eye on it, and I wanted to let everybody know that it's coming.  And as soon as it happens, I'll mention it again because something from Mark would be the way to do this, just to verify that your root store is still clean, and nothing has added anything to it.  Or at least to enumerate what has been added so you know that it's things you want or maybe need, and not something that has crept in under the radar.



Okay, now, this - this is just too wonderful.  This is old.  But it is still apropos with everything that's going on with certificates.  I just saw, didn't have time to get it into the show notes, that Let's Encrypt has crossed the quarter million certificates mark in, what's it been, maybe a month?  Maybe six weeks.  They have issued more than 250,000 domain validation certs through the Let's Encrypt facility, meaning that there are - it may be that they are replacing existing standard, issued-from-certificate-authority certificates.  Or, more likely, these are sites that have never been encrypted before, that want to add TLS and HTTPS.  And we're now at plus a quarter million, thanks to this effort.



LEO:  That's awesome.  That's incredible.



STEVE:  It really is great.  However, our listeners who've been listening from the beginning will remember that the podcast when I shared my shock over opening up, I think it was probably Windows XP, maybe 2000, I don't remember how far back it was, probably XP, I looked at the certificate manager.  And back in the day, as they say, there were maybe, oh, 10 certificate authorities.  And it was like, okay.  And I remember, I looked at XP, and there were 400.  And of course that's when we began beating up on the Hong Kong Post Office, because it was among those that I was just scratching my head at, saying, okay, why am I trusting, is my machine by default trusting certificates issued by the Hong Kong Post Office?  Among many, many, many, many others.



So we've never really talked about the process by which an entity, any of these 400, appeals to or submits a request somehow, what's the process for getting yourself certified so that you're going to be a certificate authority?  Well, there was an application submitted to Mozilla back in 2011 by an entity calling itself Honest Achmed.  And this is - it's in Bugzilla, which is how these things go.  In Bugzilla it's Bug 647959.  And the title of this submission was "Add Honest Achmed's root certificate."



LEO:  Oh, of course, yeah.  He's honest.



STEVE:  Yeah.  Well, and if you had any doubts.  And so this says, "This is a request to add the CA root certificate for Honest Achmed's Used Cars and Certificates."



LEO:  [Laughing] I thought maybe it was flying carpets.  But okay, used cars.  That's good, okay.



STEVE:  This, well, because we're not so sure about flying carpets, used cars, yeah.  "This requested information as per the CA information checklist..."



LEO:  Oh, lord.  Oh, lord.



STEVE:  "...is as follows.  Name:  Honest Achmed's Used Cars and Certificates.  Website URL, and this is priceless:  www.honestachmed.dyndns.org."



LEO:  Yeah, because he doesn't know.  He's getting ready - he's a mobile guy.



STEVE:  It's on his kitchen table.



LEO:  Yeah.



STEVE:  Yeah.  This makes Hillary's email server in an ISP's closet look good by comparison.



LEO:  This is tongue-in-cheek, though.  Steve.  This must be somebody pointing out the ridiculousness of this.



STEVE:  It's so wonderful because organizational type is an individual.  And then it says, parens, "(Achmed, and possibly his cousin Mustafa, who knows a bit about computers)."  And then the primary market/customer base - and these are all the questions that are part of Mozilla's form.



LEO:  Right, right.



STEVE:  And he says, "Absolutely anyone who will give us money."  Impact to Mozilla users:  "Achmed's business plan is to sell a sufficiently large number of certificates as quickly as possible in order to become too big to fail (see 'regulatory capture'), at which point most of the rest of this application will become irrelevant."  And then, under technical information about each root certificate, the certificate name that this was being applied for was, of course, Honest Achmed's Used Cars and Certificates.  The certificate issuer field, Honest Achmed's Used Cars and Certificates.  Under certificate summary:  "The purpose of this certificate is to allow Honest Achmed to sell bucketloads of other certificates and make a lot of money."



LEO:  Yay.



STEVE:  And then remember how...



LEO:  He's honest, you know?  He's Honest Achmed.



STEVE:  Yeah.  And that's been reinforced here.  Notice how, as we've talked about it, certificates have a bit mass, essentially, a bit field of things that they are enabled for.  For example, some certificates can be used to sign code.  But a code-signing certificate cannot typically also be used to represent a domain because it's a different application.  And some certs are intermediate certs, so they're established that way, but they're not able to sign other certs, whereas root certificates can, so forth.  So anyway, under requested trust bits, which is another field in the Mozilla form, Honest Achmed has said:  "All of them, of course.  The more trust bits we get, the more certificates we can sell."



And finally, under CA hierarchy:  "Honest Achmed plans to authorize certificate issuance by at least, but not limited to, his cousin Osman, his uncles Mehmet and Iskender, and possibly his cousin's friend Emin."  So anyway, if anyone is curious, the link is in the show notes.  There's more.  I excerpted from it.  But somebody had a lot of fun.  And I got a big kick out of the fact that it was taken very seriously by Mozilla, who declined the application.  However, this bug had a huge trail of responses which are equally fun.  So if anyone enjoys this kind of thing, it's there.  Thought you should know.



Gizmodo reported on the story that our smartwatches can now determine what we type.  And of course immediately upon knowing that, it would be obvious to anyone that the motion sensor in your smartwatch could detect what you're doing.  And so this video on the Gizmodo page that Leo's showing right now is of someone entering a number on a 10-key pad, and the smartwatch, just from the relative motion, determining what they're entering.



And so of course this is yet another so-called "side channel attack."  We've talked about these.  And they occur in movies.  For example, a famous one is someone reading lips at a distance through a window, where you can't hear what the person's saying, and they may be even under the cone of silence.  But if you can see them, then essentially a side channel leakage is somebody who is a gifted lip reader can determine what they're saying.  Or lifting a fingerprint - huh?



LEO:  "I read your lips, Dave."



STEVE:  Right.  Oh, yeah, that's a perfect example.



LEO:  It was Hal; right?



STEVE:  Yes.  Or lifting a fingerprint from a glass and then reusing that lifted fingerprint, dusting it with powder, making it optically visible, and then using it to gain entry somewhere.  And we've talked about more high-tech approaches like the way encryption algorithms sometimes change - they don't have a linear path through the code.  But if the key causes different jumps to be taken, then you can actually get bits of the key by looking at the power deviations caused by the processor taking jumps or not.  I mean, wow.



But your first thought is, oh, yeah, but, you know, really?  And it turns out, yeah.  Grad students or master's thesis kids who have time on their hands try it, and it turns out it's able to work.  So, and of course, and we've talked about how a smartphone lying next to a keyboard, the vibrations from typing on the keys, or even listening to keys being typed.



LEO:  Remember Van Eck phreaking; right?



STEVE:  Yup.  Yup, there's Kevin.



[VIDEO CLIP]



KEVIN:  You're sitting at home, you know, you're doing a little web browsing, surfing around on the...



LEO:  You're broadcasting.



KEVIN:  You're broadcasting.  Those frequencies are going outside of your monitor.  Someone could potentially sit there and then pick up a mirror image of exactly what you're doing, just by picking up those frequencies and then reinterpreting them with [crosstalk].



[TALKING OVER CLIP]



LEO:  I think he demonstrates this.  This is an old Screen Savers episode.



[CONTINUE CLIP]



KEVIN:  There have to be a lot of things in place to make that happen.



LEO:  Now, before we make everybody paranoid and crazy and looking for [crosstalk].



[TALKING OVER CLIP]



LEO:  So, and this is 2004.



[CONTINUE CLIP]



LEO:  We should say we don't know that this is possible.



KEVIN:  We don't know that this exists.  But the government did have a top-secret program called Tempest.



LEO:  Tempest.  This is in the '60s or '70s, yeah.



KEVIN:  In the '60s and '70s.



[END CLIP]



LEO:  Yeah, to prevent Van Eck phreaking; right?  Yeah.



STEVE:  Yup.  And Snowden's documents had a lot to say about this, too.



LEO:  Yeah, yeah.



STEVE:  There were a lot of little passive eavesdropping gadgets that we talked about that...



LEO:  Bluetooth, or wireless keyboards.  Remember we talked about how poorly encrypted those were.  



STEVE:  Yes, like four bits of, quote, "key," unquote.



LEO:  Yeah, yeah.



STEVE:  Yeah.  So, and then of course we've also run across, more recently, a high-res photo of an old-school metal door key.  It turns out there aren't that many positions, and you can get close enough, just taking a picture of the key that we all have dangling in our pockets, if you leave it out.  So anyway, I thought, here is yet another one.  Smartwatches are able to, you know, naturally.  Although only on the hand where the watch is.  And so my first thought was, wait a minute, people typically wear their watch on their non-dominant hand, yet they would enter on a keypad with their dominant hand.



LEO:  Us lefties, though, often wear our watches on our dominant hand because the world has dictated that you should be able to wind your watch with your right hand.



STEVE:  It is annoying, too.



LEO:  So, yeah.  You're a lefty; right?



STEVE:  I'm a lefty, and I do wear my watch on my right hand.



LEO:  Do you, yeah.  A lot of people do, but you can't reach the stem.



STEVE:  Yeah.  And Apple did address this; right?  You're able to rotate the watch in order to have the stem high and on the outside.



LEO:  That's right.  Thank you, Apple, for thinking about lefties.



STEVE:  A new standard coming, it's actually been in the works, the chips exist, but it was just ratified.  It will be called HaLow, H-A-L-O-W, so that's how we pronounce it, HaLow.  And I heard you yesterday, I think, you were talking about microwaves interfering with WiFi.



LEO:  Right.



STEVE:  And maybe it was IoT stuff because, as we know, microwave ovens use the same 2.5GHz band that WiFi does.



LEO:  Every time Megan Morrone's husband would fire up the microwave to heat up a bun, she'd get knocked off her WiFi.  And I deduced, maybe wrongly, I don't know, but I deduced, well, I think that's 2.4GHz interference coming out of the oven.



STEVE:  Yup, totally makes sense.  So what we've done now, and this is 802.11ah, so they swapped the "ah" to make "ha" in order to - and then stretched it a little bit further to get "hay."  And so now - and it's a low frequency, so it's HaLow.



LEO:  HaLow, I get it.



STEVE:  Yes.  So this is...



LEO:  This is not a successor to "ac," which is the current standard.



STEVE:  Correct, this is not.



LEO:  This is an adjunct to it.



STEVE:  And what they've done is this - you can sort of think of it as the Wi-Fi Alliance's refusal to give in to Bluetooth.



LEO:  Of course.



STEVE:  So it's - yes.  So it's lower speed.  So it's also not multiple megabits, the way we have now in the high-frequency 802.11.  This is a hundred kilobits, so much slower.  But on the other hand, temperature thermometers, your light bulbs, your doorbells, all of the Internet of Things things, they're not typically media devices shooting, you know, that need high bandwidth.  And what they need is low power.



So this is a very nice tradeoff between speed and power.  It runs sub-gigahertz, down in the unlicensed or license-exempt 900MHz band.  Being sub-gigahertz, in terms of the way radio frequency propagates, lower frequency has an easier time, for example, going through walls that would otherwise block the much higher frequencies.  So this is longer range.  And get this, up to a kilometer.  So it's a kilometer range, low frequency, and a low data rate.



It's also a completely new network topology.  What we've had, essentially the way WiFi works, and we've discussed this often, is it uses the same CDMA technology, the Collision Detection Multiple Access, that wired LAN uses.  The way traditional Ethernet works is everybody who's hooked to the same wire is listening for a quiet period.  And when it's quiet, they'll broadcast onto the shared connection.  But that means two people could see silence at the same time and broadcast at the same time.  Well, so while they're broadcasting, they're also listening.  And so the collision in their broadcast would cause what they sent to be garbled.  In listening, they would say, oops, that didn't work.  Then they back off a random amount of time.



So statistically, one of them will rebroadcast before the other, and their message will get through.  Then there'll be silence again, and then the second guy will broadcast.  So what happens is this all works as long as you're not really busy.  And you can sort of imagine that, as long as the bandwidth of this shared medium is sufficiently higher than the bandwidth that the medium is trying to convey, this sort of ad hoc, hope for the best, is okay.  But as the number of transmitters or the amount they're trying to transmit begins to get up near the capacity, the collision probability goes up.  And so everybody spends much more of their time waiting for a turn and then recolliding with somebody else.



So this doesn't fail very well.  But we have no real choice with the existing WiFi.  The WiFi we're all using right now is the same model.  It uses CDMA technology.  What these guys, what the Wi-Fi Alliance has done with this next version is completely different.  It's this 802.11ah uses contention minimization.  In the spec is internode relaying to create mesh networks so that you can reach devices much further away because devices - in the protocol is the ability for an intermediate device to relay to a more distant device.  It has explicit power management with waking and dozing built into the protocol.



It is possible for devices to negotiate for higher bandwidth bursts.  For example, the Ring Doorbell might, if it were using this spec, in the normal case it could be running at a much lower power consumption.  But when it does need to transmit video, it could negotiate for a chunk of bandwidth in the network and be able to receive it.  Also in there is antenna segmentation and radio beam forming technology.



So this stuff is like next generation, but we have it now.  Chips are on the way.  And essentially the idea is that, I mean, they've deliberately made it competitive with Bluetooth in terms of power consumption, but with vastly larger coverage, and then state-of-the-art technology.  I mean, all the things I just talked about that are in this "ah" spec would - they would have been impossible five years ago to do in a cost-effective way.  Now it'll just be integrated in a little chip smaller than a thumbnail, and it won't cost anything.  And it'll be in light bulbs and everything else.



LEO:  Well, that's what we want; right?  Because the more things that are Internet connected...



STEVE:  That's what we need.



LEO:  That's, you know, what could possibly go wrong?



STEVE:  That's right.  And before our final sponsorship and we get into miscellany, I wanted to mention that GRC did, as I had planned to, switch from SHA-1 certs to SHA-256, thanks to my beloved DigiCert certificate authority, who actually was kind enough to issue both kinds to me so that I would be able to switch when I wanted to.  I did it a few days before the end of the year because I recognized, if anybody had their calendars or clocks off, they could think that it was already 2016, and these certs expired on December 31st at midnight - thank you, DigiCert - of the end of 2015.  So I did that so that Chrome wouldn't have been complaining until now.



So I'm now up to SHA-256.  I've noticed no difference.  And I didn't expect to.  But the advantage of my having dragged my heels as much as I did, despite all the people who were saying, Steve, what's wrong with you, you're still using SHA-1, is that all of those XP systems that are apparently still out there - unless they're using Firefox, which brings its own security suite along - if they were using IE or even Chrome, because Chrome uses the native OS crypto libraries, they would have been completely unable to get to GRC all of last year.  Now they are unable to get to GRC, but they're unable to get to anything else that is still using SHA-1.  I wonder how many people still are.



I guess, I mean, nothing prevents people from continuing to use it, with expirations obviously in 2016 or even 2017.  But we know that the browsers are going to be really unhappy.  And at some point browsers will just stop supporting them at all.  I think, as we've covered, maybe around the middle of this year, around the middle of 2016, browsers are just going to say, uh, there's no excuse for still using it.  And we do know that SHA-1 is no longer being issued as of New Year's.



So, okay.  On This Week in Google, I got a kick out of your - you were lamenting the whole messaging platform problem.



LEO:  Oh, my god, yes.



STEVE:  You said, "Everyone you know is on Facebook except for a few weird grumpy people."



LEO:  Like you; right?  Are you?  Yeah, okay, you're not on Facebook.



STEVE:  Exactly.  I made the jump to Twitter, but that pretty much is all I have [crosstalk].



LEO:  We're working on him.  You'll get there.  You'll get there.



STEVE:  Well, and the thought I had was what you guys - and this was already in the show notes and everything before you were talking about it at the end of MacBreak Weekly.  What occurred to me, because I've heard you lamenting that there's this fragmentation in the messaging world...



LEO:  Yes.



STEVE:  So that, for example, in my case, everybody I know is an iOS user.  And so iMessage gives me a hundred percent coverage.  But you've got a lot of people, because you're in a sort of a younger, more techie environment, who are Android adopters.



LEO:  Right.



STEVE:  And then of course there was Telegram and WhatsApp and Facebook Messenger and iMessage and on and on and on.  And so what had occurred to me was something that you did mention at the end of the MacBreak Weekly podcast, was this notion of a messaging bridge.  Because that's, to me, of course, no vendor wants to create a bridge to other people's messaging apps because they all want to be fully siloed and use the pressure that you're lamenting of fragmentation in order to force people all onto their platform.



LEO:  Right.



STEVE:  Unfortunately, it's not going to happen.  People are going to stay pretty much where they are and grumble that they can't get there from here.



LEO:  Or they'll have, as many of us do, you heard us talking about it on MacBreak Weekly...



STEVE:  Multiple.



LEO:  ...a folder on our front page of our phone with every messaging system known to man because Aunt Maude uses WhatsApp and Cousin Bernie uses Messenger and like that.



STEVE:  Yeah.  So it would be nice, I don't know, because Apple's iMessage is closed, they won't allow anybody in.  But it would be nice if there was a bridge system, like some sort of a bridge solution.



LEO:  Well, you remember Trillian and Pidgin and all of the  -- and this is how we kind of technologically solved these siloed IM solutions.  You have one client.



STEVE:  It's using a multiprotocol client.



LEO:  Right.  And that was very helpful because Google, when it started Google Talk, used Jabber, used XMPP, which was an open standard.  Then they abandoned it.  But had they continued and maybe encouraged others to do that, then we wouldn't - this would be a snap.  But nobody wants that.  And Google kind of fumbled Hangouts because they have a fully cross-platform solution, but they've kind of let it lie fallow.  The rumor is they're going to add smart agents to it, which might increase adoption.  But the problem is then I have to tell Aunt Maude, could you please get Google Hangouts on your phone.  Whereas I'm pretty sure Aunt Maude already has Facebook Messenger.  Everybody but you.



STEVE:  Yeah.  And that's fine.  Don't call me.



LEO:  And you know what?  You watch.  Yeah.  You don't want - but you watch.  Because I think that there is a subtle, and it will be a mounting pressure from the people you talk to, to adopt this.  And Facebook is just kind of the no-brainer.  I wish there were some unified solution.  There isn't.  And I hate to give in to Facebook.



STEVE:  Yeah, well, because you were holding out with Telegram for quite a while.



LEO:  Yeah, yeah.  Thing about Facebook is it has a lot of nice features, including the ability to send money, including they're going to add these smart human agents called "M."  Google's going to do search agents.  So instead of searching, you'll talk to your messenger client and do it that way.  But I think Facebook is way ahead of the curve.  And the real key is the network effect. 



STEVE:  Yes.



LEO:  You've got to have that.  And without that, you don't have anything.  So unless you do something so amazing - it's possible somebody'll come up with something brilliant that everybody says, oh, I've got to have that.



STEVE:  Yeah, I kind of think we're past that point.  Messaging is messaging, and so, like, you know...



LEO:  I don't know.  You haven't really experienced messaging until you have the ability to send animated GIFs to friends and family.



STEVE:  As you keep saying. 



LEO:  Oh, it's awesome.  It's better than stickers.  So we start with emojis, little tiny [raspberry].  Stickers, big, you know, varied, user installable.  But the animated GIFs...



STEVE:  You want to be able to see the expression on the cat hanging from a wire.



LEO:  It is, you know what it is, it's nonverbal communication.  And there's a subtlety to it that we miss in not being person to person; right?



STEVE:  Yes.



LEO:  And we need to supplement it.  And emojis and emoticons were the first way we did that.



STEVE:  And I have to, I confess, I'm a big emoji user.  I love my little emojis.  I just, you know, I often sprinkle my stuff with them.



LEO:  Better than emojis is sticker.  Better than stickers, GIFs.  I'm telling you.  Plus with Facebook Messenger, just like with Apple's messages, you could send audio and video.  You know what, today, for instance, I found some keys, and my son had been over with about 18 of his friends.  And I figured, well, it's one of them.  So at first I was going to message him, a text message:  "I found these keys, they're blue, and they have...."  And I said, what am I doing?  I took a picture of it, sent him the picture saying somebody left their keys here.  He sent it to all his friends.  It was so efficient.



STEVE:  Got them identified, yup.



LEO:  It was so efficient.  It was so efficient.  And I'm thinking, yes, this is the new era.  Instantaneous, efficient communication.  And you are going to be left out, my friend.



STEVE:  I'll let you know how it feels.



LEO:  No, you won't, because you never talk to me.



STEVE:  Okay.  So I'm not suggesting this to anyone.  I'm only wanting to make sure people who care don't miss it.  And that is that on the 14th, which is a week from Thursday - so that's, what, 10 days from now, yeah, today's the 5th - USA Network is premiering a new sci-fi series called "Colony," which is a post-alien invasion Los Angeles where you've sort of got your standard tension between the collaborators, the alien collaborators, and the resistance that's fighting them.  And so I don't know what it's going to be like.  I'm not suggesting it, recommending it.  But I'm going to see if it's any good because, who knows, maybe we'll get lucky.  "Colony" on USA Network, premiering on January 14th.



LEO:  And "Mr. Robot" is coming back.



STEVE:  Yes, yes.  They had a marathon.  My TiVo caught one of them, for some reason, I don't know why.  And it sort of got me overexcited.  But it was Episode 3 of Season 1.



LEO:  Change your OnePass to new shows plus replays. 



STEVE:  Ah.



LEO:  There's a setting for that.



STEVE:  Yes.  I know about that.



LEO:  I would have sent it to you via Messenger had you...



STEVE:  If I were only on Facebook.



LEO:  If you were only on Facebook.



STEVE:  You could shoot me a picture of the settings screen.



LEO:  Exactly.



STEVE:  And we have not talked about "The Expanse" on Syfy.  As of tonight I'll be three episodes behind, so I just haven't been watching it.  I will catch up.  But so far it looks hopeful.  So who knows.  And I did just want - I talked briefly about the Vitamin D podcast at the top of the show.  Many people want more health stuff.  And after SpinRite is done, after 6 is finished, I'm going to try to make some time.  It's just a matter of time.  My head is all full of fun supplement stuff, but I just don't have time to do it.  So, and I'm not going to steal the time before SpinRite's done because SpinRite people would be even more mad at me than they are for having taken the time away for SQRL.



I got a tweet from Nick Lozano, who said:  "Steve, I was listening to a" - or actually a DM because it's long.  "I was listening to a podcast" - oh, wait, Leo, did I hear you correctly?  Tweets are going to have...



LEO:  This is the Journal apparently published an article saying 10,000 characters would be the new tweet limit.  But now there's some people saying, no, no, no, they just misunderstood, they're talking about DMs.  Because DMs already are 10,000.



STEVE:  Right.  And I and my followers are having a great time with that.  We're sending long messages to each other.  And then I thought, oh, no, not if they're just, I mean, tweets.  Well, that would break - I think that would break too much of the existing infrastructure.



LEO:  Yeah.



STEVE:  Anyway, Nick says:  "Steve, I was listening to the podcast a few weeks back and heard some people would like to follow you on Twitter, but they don't want to create an account."  And they also probably don't have Facebook Messenger.  Anyway:  "There is an iOS and Android app called Hooks that lets you follow a Twitter user and sends you a push notification when the person you select to follow sends a tweet.  You then click on the push alert, and it opens a web version of Twitter right in the app.  No account needed.  There's also a bunch of other neat things you can do with it.  Just thought some other listeners might find the app useful for following you on Twitter without having a Twitter account.  Love the podcast.  Listen every week."



And so I checked.  It's called Hooks, H-O-O-K-S.  It is iPhone only.  That is, if iTunes is set for iPad only, it doesn't come up.  Boy, Apple needs to fix this annoyance.  But it's from Hooks Technology.  And for what it's worth, it looks like it does a whole bunch of other things, as Nick noted, in addition to allowing you to get notified from people you follow without needing a Twitter account.  So my note about that before generated a lot of interest, and I wanted to share this with people who might be iOS or Android users.  And it's free.  And it didn't look like there were any in-app purchases, so it looks like it was really free, which is refreshing.



Something to consider for the New Year:  It was interesting because this happened before today's announcement of a solution, or a potential solution.  So a DMer requesting anonymity sent me:  "I've been thinking for a long time about giving my LastPass password to a trusted individual, such as a friend."  Very trusted.  "In the event of my death, I'd like for them to be able to access my accounts without having to go through the rigmarole of proving my death to each site.  However, while I'm still alive I would like to keep my LastPass account secure.  I've been pondering using Shamir's Secret Sharing algorithm and giving parts to five different trusted people where four of them would be required to successfully recombine my LastPass password.  Note I'm presuming my phone would still be intact, so the two-factor authentication part of my LastPass account would be simple to access.  What do you think about this proposition?  What are the downsides I'm not seeing?  What are the upsides of this tactic?  Instead of going on this complex route, what might be a simpler way to ensure my LastPass legacy lives on?"



So what was just announced this morning was a major update to LastPass, taking us to v4.0.  And among the new features, basically it looks like there's a completely revamped user interface on the web interface, they also have what they call an Emergency Recovery feature.  Joe tweeted, I think it was in response to a question that Simon Zerafa had, and he also mentioned SGgrc, so I saw it, that basically they were doing the same thing they were already doing using RSA public key crypto in order to make this TNO.  I have not had a chance to dig into it, and I will, so I'll have a detailed readout for next week.



Shamir's Secret Sharing is something we've talked about long ago, a very clever approach where using some - there are two ways to do it.  One is the heavy-duty math approach, which is what Shamir - he's the "S" of RSA, by the way - designed, where you could designate how many people are in the group, and how many of those people in the group are required in order to recreate a secret.  And the idea being that - so, for example, you might have five people in the group, and any three of them are required to recreate the secret.



Now, there are some sort of simple-minded ways that you could do it, too.  You could, for example, create a very long password and physically divide the password, for example, into sixths, into six equal-sized pieces.  So say that it was 30 characters, for example, and you divide it into six five-character pieces, and then you numbered them one, two, three, four, five, six.  Well, if you think about it, you could give each person a different set of three of them, or two of them, for example, or it's possible to work it out so that you would need a certain minimum of them to guarantee that, among that group, that subset of the whole, they would each have, of the pieces that have been given, all six, and thus able to recreate the entire password.  That's sort of a simple way of thinking through what Shamir does with some serious crypto math.  So that's secret sharing.



What it looks like LastPass has done is the typical, let's come up with a deliberate, but clear, softening of Trust No One in order to add a feature.  So the idea is it looks like you can assign somebody sort of a provisional access to your account with a time delay so that they apply for access, and they can't get it for, for example, 48 hours, or presumably a delay that you specify, during which time you are notified of their application and have an opportunity to deny it.  So the idea being that, if you're dead, you know, we're not looking for this as a proof of concept, but if you didn't respond, then that time elapses, and LastPass makes your account available to them after that elapsed time.  I think that's what Joe has done.



And I have no doubt that the implementation is solid and does what they say it does in a way that isn't making it any less secure than that protocol itself is.  Clearly, this isn't foolproof because something could happen to you.  You're stuck at the bottom of a mineshaft, during which time people think you're dead, but then you get pulled up out of the mineshaft.



LEO:  I hate it when that happens.



STEVE:  Lo and behold, you're alive, but you were unable to deny this friend of yours and so forth.



LEO:  Dead man switch.



STEVE:  So anyway, I think that's what it is.  And I mention this as a New Year resolution kind of thing because this is increasingly important.  If you think about it, for example, I might, to what degree the world uses SQRL, write down my rescue code and put it in an envelope and give it to my attorney, who I trust with other things like that, so that if something should happen to me, and people need access to my resources, there's a way to make that happen.  But as more of our life goes online, this is something very much like a will, where it's neat that this person is reminding us, so, you know, we need to think about this.  What happens if our family, after something should happen, needs to get to our stuff?



LEO:  LastPass's password sharing is such a good solution.  I use that, and that seems to be the way to do it, I think.



STEVE:  So someone else asked, he said:  "Hey, Steve.  Just wondering if you consider the NSA to be U.S. law enforcement.  I ask because you refer to law enforcement when mentioning the Snowden revelations."  And actually, even more broadly than that, I use the term a little bit loosely.  I responded, saying:  "I agree.  I'm using that term loosely to mean entities with governmental powers.  While the NSA doesn't have enforcement powers, it certainly has investigatory powers."  So I said:  "Yeah, I do mean to include them, as well."  And a couple other people had said, hey, you know, NSA isn't law enforcement.



LEO:  What do you call them?  Okay, but what do you call them, if not law enforcement?



STEVE:  Yeah, I know.  So I'm going to keep saying "law enforcement."  For the record, I also mean the CIA, NSA.



LEO:  Spooks.



STEVE:  People who typically don't, I mean, more than the DEA and the FBI.



LEO:  NSA has an enforcement arm.  It's called the U.S. Army.  Strategic Air Command.



STEVE:  Yeah.  Although that can't be deployed on the homeland, can it.



LEO:  Well, nor can NSA.



STEVE:  Right.



LEO:  Right?



STEVE:  Right.



LEO:  NSA is, in theory...



STEVE:  Extraterritorial. 



LEO:  Extraterritorial.



STEVE:  Yup.



LEO:  The CIA just uses whoever's got a gun.



STEVE:  So on the fifth, I'm sorry, the 50th, this is the 50th anniversary of the creation of Star Trek.  And I thought, wow, was I 11?  I guess I was.  I got my start early.  Of course, I'd already read Asimov's stuff, so I was...



LEO:  Did you watch it in first run?



STEVE:  Yeah, oh, yeah.



LEO:  I don't think I did.



STEVE:  And remember "Lost in Space"?



LEO:  I loved "Lost in Space."  "Danger, Will Robinson, danger."



STEVE:  Yes.  And the salad monster?  I remember my sister and I, like burying our heads in a pillow.  We were terrified at the salad monster.



LEO:  [Making terrified sounds]



STEVE:  Yeah.  Yeah.  Anyway...



LEO:  Fiftieth anniversary, there's going to be a lot, I'm sure, to celebrate.



STEVE:  It turns out that Gene Roddenberry used some funky, nonstandard computers way back in the day.



LEO:  Word processor, probably; right?



STEVE:  Yes, exactly, the very - and of course naturally he would be a techno leader because of course he created Star Trek and was a sci-fi author before that.  So Ars Technica covered the story, with the headline "Files on nearly 200 floppy disks belonging to Star Trek creator recovered."



LEO:  Wow.



STEVE:  And I think it was Dan Goodin...



LEO:  I think Jerry Pournelle used the same computer.  It's a Wang.



STEVE:  And Ars, I think it was Dan...



LEO:  It's a Wang.  It's a Wang.



STEVE:  Yeah, it may have been.



LEO:  Yeah, I think it is.  See, Wang diskettes.  A Wang writer.



STEVE:  Oh, look at the colored key tops, yes.



LEO:  Yeah, yeah.



STEVE:  Custom key tops.  So I think it was Dan Goodin who wrote:  "According to a press release from DriveSavers data recovery, information on nearly 200 floppy disks that belonged to Star Trek creator Gene Roddenberry has been recovered.  The information on the disks belongs to Roddenberry's estate and has not been disclosed to the general public.  DriveSavers notes, however, that Roddenberry used the disks to store his work and 'to capture story ideas, write scripts and take notes.'  VentureBeat reports that the disks, containing 160KB of data each, were likely used and written in the '80s.



"The circumstances of the information recovery are particularly interesting, however.  Several years after the death of Roddenberry, his estate discovered the 5.25-inch floppy disks.  Although the Star Trek creator originally typed his scripts on typewriters, he later moved his writing to two custom-built computers with custom-made operating systems before purchasing more mainstream computers in advance of his death in 1991.  The floppy disks were used with the custom computers, but unfortunately one of those computers had been auctioned off, and the other one was no longer operational.  Roddenberry's estate sent the floppies to DriveSavers, which spent three months writing software that could read the disks in the absence of any documentation or manuals for the custom-built OS."



So not only were they from long gone computers, they were a format, they were not any format that is in use now.  So they had to look at them, look at the flux reversal patterns.  I'm sure they were FMs, frequency modulation recordings, so it's actually trivial to recover the binary.  But then they'd have to look at it and figure out what kind of file system it had, reverse-engineer the file system - that would have been a project I would have loved to tackle.  But anyway, it was done.  And so it wasn't so much data recovery as it was format recovery.



LEO:  I'm telling you.  Just go - they should have called Jerry Pournelle, said, "What is, this, Jerry?"  "Oh, I have one of those over here."  No problem.



STEVE:  Yeah.



LEO:  I guarantee you.



STEVE:  You're probably right.



LEO:  Oh, of course.  Jerry would look at it and say, oh, I know what that is.



STEVE:  Or, yeah, Gene got that one from me.



LEO:  Yeah, I bet he did.  I guarantee you he did.



STEVE:  And last of all, but not least, I got a tweet from Chris Ramsey.  And I titled this "Elaine above and beyond."  Chris tweeted:  "Elaine Farris at edigitaltranscription.com corrected my Hebrew when she transcribed my sermon."  He says, "The.Best."



LEO:  Wow.



STEVE:  And of course Elaine is transcribing these transcripts, and although they're not in Hebrew - in some cases for some people they may seem that way - she fixes all of the things that are questionable in what I say.  So Elaine, thank you, and on to 2016.



LEO:  Even if you say "Baruch atah Adonai Eloheinu," whatever.  Watch, she's going to get that right.  She's going to fix it.



STEVE:  She just got that right.  Now we know.  Leo, you can be fully off your leash.



LEO:  I can do it in Hebrew.  Hey, I've got a final note because, as I mentioned, I got the Tiny Hardware Firewall that I was talking about earlier.  I haven't really configured it yet, but this is...



STEVE:  And it's got the built in - there's a VPN gateway, so it just VPNs you without doing anything.



LEO:  Yeah.  So you start the configuration by turning off the WiFi in your laptop, plugging this into the Ethernet port - I had to use an adapter because no laptop has Ethernet ports anymore - and then joining the WiFi on this device.  And then you can configure it, change the password and everything.  One of the things they say right away is change the default password.  After the password has been changed, the THF - Tiny Hardware Firewall - asks you to log in with your new password.  "Your username is still admin.  Your password is now known only to you.  Please do not write it on the bottom of the unit with a Sharpie."  Good advice.  That's in the docs.



STEVE:  Actually, I would write it on the bottom.



LEO:  That's exactly where I'm going to write it.



STEVE:  Yeah.  Yeah, because you're not [crosstalk]...



LEO:  You'd have to have physical access to the hardware.



STEVE:  ...physical access, exactly.  If someone's got physical access, the game is over.  What you want is to have it handy and for no one to be able to get to it electronically.



LEO:  And they say, "And don't forget it because we can't recover it.  You're going to have to send this back and have the firmware rewritten because there's no way to recover this with a reset or anything."



STEVE:  I like their style.



LEO:  I do, too.  I'll have a report for you.  So far it's worked exactly as described.  I haven't yet started the VPN, so I don't know what the speed will be on that.  That's always the downside of a VPN is the overhead.  But I'll let you know next week.  Next week a Q&A?



STEVE:  Yes, let's do it.



LEO:  All right.  Easiest way to do that, you can tweet him - by "him" I mean him, Steve Gibson - @SGgrc on the Twitter, 10,000 letters or less, please.



STEVE:  Oh, please.



LEO:  You can also go to the website, GRC.com/feedback, and leave a question there.  We'll pick 10 and answer them next week.  That's a great place to go.  And anyway, GRC.com is where you find SpinRite, the world's best hard drive maintenance and recovery utility.  It's fantastic.  Also all the freebies.  You'll find out more about SQRL.  There's a Vitamin D section there.  There's a Health section with lots of good information.  There are a lot of free utilities.  Steve gives it all away.  And you can even get this show there.  And not only that, but Elaine Farris's fabulous, handwritten, beautifully transcribed Hebrew transcriptions.



STEVE:  Apparently in any language.



LEO:  From right to left.  And it's beautiful.  No, she writes them in English.  As long as the show's in English.  Writes in whatever language we speak, apparently.  That's all at GRC.com.  We have audio and video, crazy enough, of the show at TWiT.tv/sn.  But you can also subscribe, and I recommend you do, each and every episode available at all the traditional podcast sources.  Just find one, look for Security Now! and subscribe, you'll get it every week.  And you should because this is one show you do not want to miss.  Steve, thank you.  Happy New Year.



STEVE:  Leo, great to see you.  Glad you had a nice trip.  I had a nice vacation.  And we're back on it for 2016.  Here we go. 



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.


GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#542

DATE:		January 12, 2016

TITLE:		Listener Feedback #227

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-542.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here with an update on all the security news, including a new low in "You're Doing It Wrong."  Plus, of course, 10 of your questions and his answers.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 542, recorded Tuesday, January 12th, 2016:  Your questions, Steve's answers, #227.



It's time for Security Now!, the show that protects you and your loved ones from the dangerous environs of the Internet.  Here's your captain.  He's kind of like the captain on the Jungle Boat at Disneyland.  He's got a pistol; and, if a hippo attacks, he's ready.



STEVE GIBSON:  I have a cap.  If I was going to be the Jungle Boat captain, I should have my captain's cap.



LEO:  That's Steve Gibson.  Hey, Steve.



STEVE:  Hey, Leo.  Great to be with you again in our 11th year of the podcast.



LEO:  Whoa.  Amazing.  Just amazing.



STEVE:  Yeah, it is.  So we have a Q&A.  I dumped the mailbag and sorted through it and found a bunch of interesting stuff.  And we've got a bunch of news.  Trend Micro has, perhaps more drastically than anyone else yet, lowered the bar on how to do it wrong.  It's just unbelievable what they have done, and what is currently deployed in all of their customers' systems...  



LEO:  Oh, no.



STEVE:  ...is horrifying.



LEO:  That's an antivirus that's widely used.



STEVE:  Yes, yes.  And large corporate adoption.  Anyway, so our friend Tavis Ormandy found some problems that we'll be talking about.  Tavis, of course, is at Google.  Symantec made some mistakes of issuing SHA-1 certs after the beginning of the year, which is a big no-no.  But the way it happened is kind of a classic bug that we'll talk about.  Firefox decided that they were going to stop accepting certs issued after 2016, then had to back off for a really unsuspected reason.



This is a special day in the Windows XP ecosystem, which I am shedding a tear.  This is a significant day.  It is also Patch Tuesday, but they just came out.  And so always now on Tuesdays, when patches don't come out early, I have no chance to go through them.  So everyone should just be aware that it's Patch Tuesday and make sure you are patched.  I'm sure you'll want to.  I promised to talk about how LastPass's new Emergency Access Feature that was introduced in v4.0, how it can be TNO, how they can do this without lowering security.  So I will explain that.



I had an eye on Mark Russinovich's new version of his SigCheck utility we'll talk about.  And we've got a bunch of miscellaneous stuff, some media stuff, some sci-fi stuff, a fun SpinRite story.  I even had a tweet from someone saying - who already read the notes that I posted online, saying "I really liked that SpinRite story."  So we'll do that.  And then we've got 10 questions and comments from our terrific listeners.  So another great podcast.



LEO:  Wow.  Great show ahead.



STEVE:  In our 11th year and going strong.



LEO:  I just received a box from Wayne in Florida, one of our regular listeners.  I'm very, very excited.  He sent me a brand new BlackBerry Enterprise Edition.  He says, "Never been used.  It's okay for the Rogers and the AT&T network."  Unfortunately, I don't know if I'll be able to use it, Wayne, because it says, "To charge, drop it into your BlackBerry cradle."  And I'm afraid I don't know if I have a BlackBerry cradle.



STEVE:  That was the one with the scroll wheel on the side?



LEO:  This is the classic.  Look at that.



STEVE:  Yeah, where you scroll on the side, and then you push in, in order to select.



LEO:  Right.  That's the click.  And you know what, if I could charge this sucker, I would use it.  Although probably that network is no longer compatible.  I don't see anywhere to put a SIM card in it.



STEVE:  No.  I think, well, but now, here's the problem.  See, I have every Atari machine ever made.  All of those, the early ones, the later ones, the Apples and so forth, because I keep stuff.  And you guys were talking about Treos.



LEO:  Right, right.



STEVE:  Might have been like last TWiT or something.  And I've got my Treos, I've got all my various Palm Pilots just because, for me, I bond to them in some strange way, I mean, even the PDP-8 computers that are flashing behind me.  But now you're in this new, if it doesn't spark joy, drop it in the round filing cabinet.



LEO:  Yeah, yeah.  This sparks joy, though, wait, I've got to tell you, it sparks a lot of joy, even though it's totally useless.



STEVE:  It's nostalgic.



LEO:  Yeah.  Wow.  And you know what, this you can type with, this keyboard.  This is not like...



STEVE:  Oh, that original keyboard was so good.



LEO:  Yeah, yeah.  Wow.  I used to have one of these on my belt.  Remember?  Because they had that hard plastic clips, the belt clip, too.  Man.



STEVE:  Yup, yup.  In fact, that was the early messaging platform.  That was, more than anything else, people were using both email away from the office, strong corporate buy-in, and also it had BBM.  The BlackBerry Messenger was really strong there.



LEO:  Oh, yeah.  Somebody said, "Call your member of Congress.  They probably have a BlackBerry charging cradle lying around."  This is a Black...



STEVE:  And it's funny because I've seen, because I've been watching a lot of news, with all this crazy election stuff going on, I've seen there are still reporters carrying BlackBerrys.



LEO:  Oh, yeah.  Absolutely.



STEVE:  That's still the phone that they have.



LEO:  I think you go in a lot of boardrooms, a lot of government offices, this is probably something like you're going to find there.



STEVE:  Because of the keyboard.  



LEO:  The keyboard.



STEVE:  It's funny because we had, I think it's toward the end of our Q&A, maybe, I think, oh, I think I put it at the end, something that we never talk about is we don't do predictions on this show except, well, I guess I do predict, like, okay, from a security standpoint, what's clearly going to happen based on the conditions that have been set up.  But we don't, like someone asked for our feelings about what the next five to 10 years has in store, more broadly.  And I thought, well, that's kind of fun because we don't do that.  So we're going to today.



And one of the things that I noted was that keyboards have finally succumbed on mobile to touchscreens.  Even though BlackBerry isn't giving up, they qualify now as an outlier because it's like, well, okay, fine, but that's not what actually anybody's using anymore.  Even I gave up.  When I give up a keyboard on a mobile device, then that's a really - that's a harbinger of new things.



LEO:  That was the thing I learned with the BlackBerry Priv is I don't want to go back to a physical keyboard.  I've gotten used to the onscreen, as you have.  So you got rid of your, what was it, Ashton Kutcher, the keyboard?



STEVE:  There was a - who was that guy?



LEO:  Greg Kinnear?



STEVE:  Oh, some clown.



LEO:  I conflate all of these clowns, yeah.



STEVE:  Yeah.  You know, a big VC guy who fell in love with it.  Well, it was only for the iPhone 5.  And they did have to go to the big screen, and they did not follow it up into large-screen territory.



LEO:  Right, Steve.  Let's launch into the news.



STEVE:  Okay.  So this is just gobsmacking, as they say in the U.K.  Trend Micro, who as you noted is a major AV supplier, had a really interesting back-and-forth with Tavis Ormandy of Google, who has been responsible for finding a number of vulnerabilities in major Internet things in the past.  We've talked about him from time to time.  For whatever reason he was looking at Trend Micro's antivirus for Windows product, which by default includes and installs a password manager component, which is also set to start up at launch time.  So it's just - it's there and running.  That product is primarily written in JavaScript using Node.js, and it opens multiple HTTP RPC ports.  RPC stands for Remote Procedure Call.  And so that's sort of a term used for network-based automation, where you're able to either effect changes by sending data or request that data be returned to you, RPC (Remote Procedure Call), for handling API requests that the system uses.



So Tavis writes, and there's a log that Google had private while this was going on.  When Tavis created the entry, it started Google's famous 90-day countdown where we're notifying the company, they've got 90 days to deal with this.  And whether or not they have dealt with it, this goes public at 90 days.  And we've talked about that in years past where that's been sort of a mixed blessing.  Google themselves have sometimes not met their own deadline and so forth.  But that's what they're doing.



So now what went public is the dialogue that had transpired where Tavis first writes, he says, as a first posting in this blog, in this off - what was originally a private log, which is now public.  He says:  "It took about 30 seconds to spot one that permits" - meaning these RPC calls - "to spot one of those calls that permits arbitrary command execution."  The call is named openUrlInDefaultBrowser, which eventually maps to the ShellExecute, which is the way Windows runs anything.  So he says:  "This means any website can launch arbitrary commands" on the user's machine.



And he gives three lines of code.  The first one creates an XMLHttpRequest object.  That's newer JavaScript, which is the way that scripting is able to initiate outbound connections.  In this case, it makes a connection to its own local machine, which is famously 127.0.0.1 is the small range of IPs that are reserved for so-called localhost, that is, for the machine sort of to use its network stack to talk to itself, which turns out to be very handy.  But it can also be referred to using the term "localhost."



So in this case he gives the example localhost:49155.  So that's the port which this poorly written code has opened and is listening to for commands.  And what this means is that a browser can issue commands to the Trend Micro code in order to get it to do whatever it wants.  And in this case it's as simple as saying openUrlInDefaultBrowser? and then URL= and then c:/windows/system32/calc.exe.  Of course, calc.exe is sort of now the default classic app that you - it's always present in Windows.  And that's the benign way of demonstrating to someone that you're able to run something on their computer because suddenly the calculator pops up, and they didn't start it, which means you did.  And of course that's bad because you don't want people anywhere in the world to be able to run code on your machine.



And he notes in this log that you cannot read the response due to the same-origin policy, but that doesn't matter because the command is still executed.  So then he also added, as sort of an afterthought, Trend Micro helpfully adds a self-signed HTTPS certificate for localhost to the trust store, so you don't need to click through any security errors.



LEO:  So much easier, yeah.



STEVE:  Yeah, just, eh, we don't want to confuse people.  We'll just make it transparent.  So we'll put a self-signed HTTPS certificate, add that to the trust store.  So then some back-and-forth ensues with screenshots between Tavis and someone at Trend Micro, and they send him an updated version, which he takes a look at.  And so in the log, having looked at it, he posts:  "Trend Micro sent me a build to verify they had fixed the problem.  It looks like they're no longer using ShellExecute, so it fixes the immediate problem of trivial command execution."  He continues:  "I'm still concerned that this component exposes nearly 70 [seven zero] APIs to the Internet, most of which sound pretty scary."



So he says:  "I tell them I'm not going through them, but that they need to hire a professional security consultant to audit it urgently."  So then there's some more back-and-forth between Tavis and Trend Micro.  And he responds:  "Thanks, Jean.  I ran this on top of a Trend Micro Maximum Security 10 installation."  I guess Trend Micro Maximum Security 10 is the name of the product, which really then makes this extra sad.  And Tavis continues:  "And it looks like this fixes the most critical problem.  Honestly, this thing still looks pretty fragile.  I haven't looked through the dozens of other APIs you're exposing, and some just sound really bad.  Look at some of these I noticed."  And so he then enumerates some.



There's settings.  There's settings/force.  There's showCreateMasterPin, browserPasswordExport, getSessionKey, setProxyURL, clearSessionKeyData, exportBrowserPassword, emptyBrowserPassword, certPinningAddException, and then of course openUrlInDefaultBrowser, the first one that he found.  And he says:  "These are just the first few that jumped out at me as interesting from the list of about 70."  He says:  "I'm not planning to go through them all, but I would really suggest you get a professional audit of this."



So he posts then to the bug log, as he's continuing to look at this further, the fixed version.  He says:  "I happened to notice that the API/showSB endpoint will" - and "endpoint" is a term for RPC, technically they're called "RPC endpoints," basically a socket, or the actual code behind the socket - "showSB endpoint will spawn an ancient build of Chromium v41 with [the command line option] --disable-sandbox."  He says:  "To add insult to injury, they append (Secure Browser) to the UserAgent [string]."  He says:  "I sent an email saying, 'That is the most ridiculous thing I've ever seen.'"



So then he sends to Trend Micro:  "I spent a few minutes trying to understand how the SB shell worked, and then realized they were just hiding the global objects.  I sent this annoyed follow-up."  And so he now he's beginning to get really sort of annoyed with Trend Micro because they're not getting, they're not understanding this.  They're in typical CYA, do the minimum required, patch the one thing you show them is wrong, even though he's saying, "Guys, you have a complete architectural eff-up; and this entire thing is, like, seriously wrong."



So he starts:  "This thing is ridiculous.  WTF is this?"  And then he gives them a link to a URL that demonstrates another way of spawning the calc.exe using this showSB.  So they fixed the one he pointed to.  He looked a little bit longer and said, okay, here's another one.  How many more times do you want to do this?  So he says:  "You were just hiding the global objects and invoking a browser shell?  And then calling it 'Secure Browser'?"  And remember, he says, "The fact that you also run an old version with --disable-sandbox just adds insult to injury.  I don't even know what to say," he writes.  "How could you enable this thing by default on all your customer machines without getting an audit from a competent security consultant?  You need to come up with a plan for fixing this right now.  Frankly, it also looks like you're exposing all the stored passwords to the Internet.  But let's worry about that screw-up after you get the remote code executions under control.  Please confirm you understand this report."



So the response from Trend Micro says:  "Hi, Tavis.  This is well noted."  Whatever that means.  "This is well noted.  We have forwarded this information you have shared with our Product Team.  Rest assured that this will be investigated thoroughly."



So Tavis then wrote and posts another working exploit.  He says:  "I noticed that there is a nice clean API" - unfortunately, of course, when he says "nice clean API," he means exposed to the Internet - "for accessing passwords stored in the password manager, so anyone can just read all the stored passwords."  And then he gives them a demo link that does it.  He says:  "Users are prompted on installation to export their browser passwords."  Now, by that he means whether or not they wish to export their browser passwords into the Trend Micro password manager.



He says:  "But that's optional.  I think an attacker can force it with" - then there's an API for that - "/exportBrowserPasswords API, so even that doesn't help.  I sent an email pointing this out."  He says:  "In my opinion, you should temporarily disable this feature for users and apologize for the temporary disruption, then hire an external consultancy to audit the code.  In my experience dealing with security vendors, users are quite forgiving of mistakes if vendors act quickly to protect them once informed of a problem.  I think the worst thing you can do is leave users exposed while you clean this thing up.  The choice is yours, of course."  Trend Micro thanks Tavis for pointing these things out.



Anyway, the last thing is Tavis finally replies:  "Thanks, Roy.  I spent a few minutes looking into how passwords are stored if the user is using the password feature, or if they've exported all their browser passwords to Trend Micro.  You're prompted to do that on installation; but it's optional, and you can decline.  To be clear, you can get arbitrary code execution whether they're using it or not; but stealing all the passwords from a password manager remotely doesn't happen very often, so I want to document that."



LEO:  Or the ability to do so.  I'm sure it would happen every time, if you could do it.



STEVE:  Right.  "This will get you all the encrypted passwords."



LEO:  Good lord.



STEVE:  "For example, this will show the domain of the first encrypted password."  Then he provides a link with basically, using this very powerful showSB API, he invokes JavaScript in order to run a JSON parser to pass the password data, which is exposed, just to show them.  He says:  "Then, you can use the decryptString API to decrypt all the strings, then post them somewhere else, meaning export them to anywhere else on the Internet that you would like in order to exfiltrate them from the current machine.  So this means anyone on the Internet can steal all of your passwords completely silently as well as executive arbitrary code with zero user interaction.  I really hope the gravity of this is clear to you because I'm astonished about this."



Then finally, again:  "In my opinion you should temporarily disable this feature."  Actually, all users should temporarily remove, actually permanently remove this horrible software.



LEO:  Yeah.



STEVE:  Anyway, he says:  "...disable this feature for users and apologize for the temporary disruption, then hire an external consultancy to audit the code.  In my experience" - and anyway, he's just repeating himself there.  He says:  "Then the thread went public, and there was a bunch of back and forth" among various people who had continued to have fun.  It turns out that one of the things they did was to enforce the same-origin policy, which does help this from being exploited by a remote website whose code has been running to issue this local HTTP request.  However, people in the thread that then ensued note that there are ways around even the same-origin policy.



So what we're seeing is Trend Micro is not even providing robust fixes.  They're desperate to hold on to basically a terminally irreparably broken design, just patching it where people find problems.  This really bodes ill for it.  So my recommendation upon seeing this is just anyone who has it should yank it immediately from their systems.  It's just a hundred percent really bad code.



But Tavis is just very patiently saying, well, you know, you really should turn this off and get somebody, get a third party who, you know - because he recognizes that it's difficult for the company to fix this themselves.  It's just you just cannot get the objectivity.  They're no doubt committed on other projects.  They're behind the eight ball and probably behind a deadline.  They've got managers who have managers who don't understand what's going on, who just want to ship something or honor commitments that have just been made.  Meanwhile, this comes in, and it's just, you know, it desperately has to get fixed.  But they're trying not to have to do it.  And so it's just an incredible example of doing it wrong, you know, squared.  Wow.



LEO:  Oh, well.



STEVE:  So we know that SHA-1 certs are no longer being issued in 2016.  They may be living into 2016, but all CAs - and remember we went through the discussion, there was a thread that was launched in the so-called CA Browser Forum, the CAB Forum, where they were considering extending that because there were some companies that were saying, please, please, please, please, we really need to continue to issue SHA-1 certs in 2016.  But it was never made clear why.  Well, I think the next story may explain that.



But in this case, just as that thread had been floated, that was when that 80-round weakness in an internal component of SHA-1 was found, and that really scared everybody away from softening our determination that we really do need to start winding this down.  So no SHA-1 certs issued in 2016.  Except that Symantec did.  In Symantec's own statement they said:  "Symantec has identified a gap involving a limited use case on one of our platforms that allowed the issuance of five" - count them, five.  That's not a lot, but still it's more than zero, which is what it should be.  And they're a CA.  They're a certificate authority.  They're supposed to, like, you know, making mistakes is not okay.  So they issued five SHA-1 certificates after the 31st of December, 2015.



Symantec says:  "We have released a patch that addresses this issue and are in the process of notifying customers and revoking the affected certificates."  The nature of the bug, though, is what's so fun here.  They said under details:  "Symantec maintains an enterprise portal in which customer administrators can approve or reject enrollments for certificates with domain and organization names that have already been pre-vetted by Symantec, without requiring further Symantec review.  We identified a gap in a specific use case where the code to block SHA-1 issuance after the 31st of December, 2015, was not in place, specifically" - this is, again, classic bug - "where the certificate was enrolled in 2015 but approved in 2016."  So this was sort of - these certs were in limbo.



LEO:  Oh, yeah, okay.



STEVE:  They had been technically kind of like preliminary issuance.  It got partway through their system.  And no doubt the approval process had the date check in it.  I'm sorry, the enrollment process had the date check in it.  But the approval didn't.  So in these five cases the certificate - the total process of issuing a cert straddled New Year's so that they were approved in 2016 and had 2016 dates.  So anyway, that was found, and they did the right thing.  They fixed the bug.  They revoked the certificates.  And I'm sure, well, and they've told whoever issued them, sorry, you can't get SHA-1 anymore, so figure out how to deal with SHA-256.



Okay, but the next story is interesting because Firefox, in wanting to be as tight as possible, knowing that no certificates, no valid certificates, SHA-1 certificates, would be issued from 2016 on forever, in 43.0.3, that version of Firefox which was issued before 2016, it added code to reject SHA-1 certificates containing a not-valid-before date after 2016-01-01.  And maybe they mean, yeah, yeah, 2016-01-01.  Meaning that 2016-01-01, January 1st of this year, 12 days ago, was the first day that this certificate is valid.  So, for example, those ill-issued Symantec certs would have had a "not valid before" in 2016.



Well, it turns out Firefox began having weird problems.  People started reporting they couldn't connect.  I mean, they were having problems.  And they tracked it down.  And, oh, boy, and this is another one of these - this is under the category of unintended consequences and side effects and further sort of demonstrates just how sprawling the technology has become and how difficult it is to give up things like IPv4 for IPv6, even though we know we're supposed to.



In this case, it turns out that there are man-in-the-middle platforms, like all of these corporate proxies, that are issuing - we know that they're minting certificates on the fly.  Remember, the way they work is that they're a CA, with their CA that's been planted in the desktop and laptops of all of the corporate employees as part of the requirement for them to connect to the Internet.  When they go to any website, this man in the middle intercepts that request, on the fly generates a certificate, signs it, and returns that as - basically it's impersonating the actual site remotely.



Well, these appliances, these man-in-the-middle HTTPS proxy for whatever reason, typically content control and AV filtering, they're still signing their fake certs with SHA-1.  And so when Firefox said, with all good intentions, just never occurred to the people at Mozilla, they said, "We're not going to accept SHA-1 signed certs anymore because why should we?  No valid CA is going to issue them."  Except apparently, and now we know for sure, these appliances that have inserted themselves into users' connections and are doing this in order to crack the encryption and inspect the content, are signing with SHA-1.  So browsers still need to tolerate this, at least on a local scope.



One of the Google groups had some commentary about this that just sort of followed up and basically repeats what I've said, so I won't go through it.  But essentially what Mozilla had to do was immediately issue an update to Firefox so we are all now at 43.0.4, which removes this requirement that SHA-1 certs are only valid if they were issued before the beginning of this year.  Now, what we'd like to see is the man-in-the-middle proxies not be used, but that's not going to happen.  So they'll have to be updated so that they're signing with SHA-256.



A short-term fix would be simply to fudge the not-before date to New Year's Eve of 2015.  That way the certs would look like they had been signed at the end of last year.  I mean, the whole thing is horrible and makes you pinch your nose anyway.  So the fact that it's an invalid notBefore date seems sort of, you know, who cares because the whole idea of doing this is reprehensible.  But it's the way the world is going to be moving forward.  But anyway, sort of another example of why it's just hard to get this kind of forward progress in the industry.



And, almost predictably, it turns out that malware is being now hosted on malicious HTTPS websites.



LEO:  Oh.  I saw this.



STEVE:  Using the Let's Encrypt free certs.



LEO:  That's too bad.



STEVE:  And, you know, it's...



LEO:  Inevitable, though; right?



STEVE:  Yes.  And it has nothing to do with Let's Encrypt.  If we were ever going to have a means of encrypting for free, which we absolutely, I would say it's now proven, more than a quarter million Let's Encrypt certs have been issued.  And I've received communications from many of our listeners who, for example, had a site that was using a self-signed certificate because, you know, which always gave a warning, and everybody who visited it got a warning, but at least they were able to get some encryption up, even if they didn't have a certificate authority to verify the site's identity.  They've switched gleefully to Let's Encrypt.  I mean, it really is that easy to do.



So, and this is really not, in my opinion, that big a story.  What this means is that the content that wouldn't have been encrypted and so would have been more accessible to AV filtering catching it, is now able to run through an encrypted tunnel.  I'm not saying that's a good thing.  But as you said, Leo, it is absolutely inevitable that, if we're going to have an API-based system, notice that this is not - there was no defect found in Let's Encrypt.  In the specific instance where the story was generated, some bad guys compromised a non-HTTPS website and added a domain and then installed Let's Encrypt, used the API, got the certificate for it, and then used that compromised website, with security now, to host their malware.



And what was interesting was some interesting back-and-forth about accountability.  One of the things that has been always clear is that it is not a certificate authority's responsibility to police content.  They're not content police.  And there's been a very firm line drawn in the delineation of responsibility.  They assert exactly and only what they say they are.  In the case of Let's Encrypt or other domain validation certificates, they're only saying this is a certificate for this domain.  Well, that's all it was in this case.  Or, of course, the CAs are still in business because in some cases you want additional levels of validation for certificates like extended validation certs, where you're actually saying this is a real - this corporate entity that has this website has been issued this certificate.  So there's way more you can believe about them.



And this demonstrates it.  Here we've got malware using now the free certificate ecosystem that's been created in order to run its stuff through an encrypted tunnel.  Again, inevitable.  But this is, again, this is also why the higher level of authentication of certificates is still useful because they're not using those because that would require much more vetting, and that's why they weren't using them before.  But so I guess my sense is, yeah, it's unfortunate, but nobody who's been watching this, after we saw it, was that surprised.  And it's going to happen.  Okay, Leo.



LEO:  I love it when you sigh like that.  Okay what, Steve?



STEVE:  It's January 12th, 2016.



LEO:  It is.  I know that, yes.



STEVE:  Today, on this day.



LEO:  Yes.



STEVE:  Windows XP Embedded SP3...



LEO:  Oh, no.



STEVE:  ...Extended Support ended.



LEO:  Oh, it's over.  It's finally over.  Our long national nightmare is over.  So that was the trick you were using, right, to update Windows XP?



STEVE:  Yes.



LEO:  Does that mean you're not going to get any more updates?



STEVE:  Yeah, correct.  We were continuing to get them by adding a key in the registry that said we're an ATM or a credit card terminal or something.  We're an embedded version of XP.  That support continued until today.



LEO:  You got an extra year; right?  You got one more year out of XP.



STEVE:  Until today.



LEO:  Aw.



STEVE:  So, yup.



LEO:  Golly.  Now what are you going to do?



STEVE:  Oh, I'm staying right where I am.



LEO:  That's what I thought.



STEVE:  Yeah.  I've got too much work to do.  I would love to rebuild this system and build a new Win7 machine.  I'm completely comfortable with Windows 7 because it's almost obsolete.  So when I get caught up on projects.



LEO:  Were there any, just out of curiosity, were there any updates that you got through the embedded...



STEVE:  Oh, yeah, yeah.  Yeah, yeah, I have two laptops that are still on that.



LEO:  But, I mean, were there some issues - in other words, I guess the real question is...



STEVE:  Oh, was anything important?



LEO:  Yeah.  Yeah.



STEVE:  No, no.



LEO:  So even if you didn't update XP, there's no massive security flaw that you are now vulnerable to.



STEVE:  Nope.



LEO:  That we know of, anyway.  All right.



STEVE:  Yup.  Correct.  Correct.  Now, the problem is, for example, well, actually Service Pack 3 does support SHA-256.  But it is going to now become increasingly old.  There will be, well, for example, it doesn't support...



LEO:  But, hey, so are you and I, so...



STEVE:  Yeah.  I'll move to 7 before I die.  Of that I'm sure.  But that'll be my last move.



LEO:  Never 10.



STEVE:  Never.  No, no, no.



LEO:  Never Windows 10.



STEVE:  I'm here to stay.  I'm not doing flippy tiles.  No, thank you.



LEO:  No, thank you.



STEVE:  I got Paul Thurrott's icon in Twitter is now a flippy tile.  I think he did that just to annoy me.



LEO:  Just to drive you crazy.



STEVE:  Because, yeah.  Okay.  LastPass v4.0 Emergency Access.  How can it be TNO?  Everyone wanted to know.  And this is beautiful.  You'll get this immediately, Leo, because you're a big PGP person, or GPG, or, you know, that.



LEO:  Yeah.  I use GNU Privacy Guard.



STEVE:  Right.  So it's just - it's elegant in its simplicity.  And it's as simple as the fundamental RSA public key system.  Everybody, all the players in emergency access generate themselves an RSA key pair, meaning that, well, actually LastPass users already have one, which is the way they're able to decrypt their stuff.  But when they appoint other people to be their emergency access recovery contacts, each of those, any of those people they appoint generate an emergency recovery RSA key pair.  By that I mean that, in their computers, both a public and a private key are generated.  The private key never leaves their computer and their control.  But the public key does.  Through an API, that goes to LastPass.  Or maybe it goes directly to the user.  I didn't look down at the plumbing level because those are details, and I completely get it that Joe knows how to do this stuff right.



But the idea is that, when this emergency access enrollment occurs, the user, the main user who wants protection to enable controlled access to their vault, that their LastPass vault master key is encrypted using each of the emergency access contacts' public key.  And LastPass holds that.  So once the main user's vault key is encrypted under the various emergency access contacts' public keys, the only way to decrypt it is with their individual private keys.  So LastPass can securely escrow those blobs.  And then we have whatever mechanism is put in place to then enable LastPass to supply those.



And so, for example, like the 48-hour notice where, under whatever terms and conditions, time goes by such that - and the user doesn't reply, then that enables the mechanism by which LastPass can supply those individually encrypted blobs to the individual emergency access contacts.  They're then able to use their private key that they always kept to themselves.  LastPass escrowing it got no benefit and couldn't ever do anything with it.  All it could do is be the mediator and determine when the conditions had been met for emergency access.



So LastPass provides the blobs.  They use their private keys to decrypt them.  That gives them the decryption key for the person who wished to enable emergency access, making that person's vault available.  So a perfect classic example of the way public key crypto works and how, basically in a three-party system, you can securely have an escrow agent that has a role to play, but in being an escrow agent doesn't gain any benefit.  They're just, you know, there's no way they can.  The only thing they could do would be to collude with some of the contacts to gain access.  But assuming that the contacts are trusted, then there's no way for LastPass to unilaterally do anything with the blobs that have been encrypted using those contacts' own public keys.



LEO: I'm so glad, by the way, they did this.  I mean, and I'm glad to hear that it's TNO. 



STEVE:  Yes.  And...



LEO:  It's just a great feature, I think.



STEVE:  Yes.  And you've been talking about it, about the need to have - and here we are, new year, 2016.  Think about...



LEO:  Your demise.



STEVE:  Yeah, unfortunately.  Plan ahead:  life insurance, medical insurance, and password insurance.



LEO:  Yeah.  No, that's really - this was a great feature.  And I like the new LastPass 4.  But as far as I could tell, that's really the new feature of LastPass 4.  The rest is cosmetic.  I'm just glad they...



STEVE:  So our friend Mark Russinovich released an update that I mentioned briefly, v2.4 of SigCheck.  In his own little squib he says:  "SigCheck is a command-line utility that shows file version number, timestamp information, and digital signature details, including certificate chains.  It also includes an option to check a file's status on VirusTotal, a site that performs automated file scanning against over 40 antivirus engines, and an option to upload a file for scanning."



Then he says, sort of in his user notes, for example:  "One way to use the tool is to check for unsigned files in your windows/system32 directories with this command."  And then he gives the command, which is just - so you'd open a command prompt, and you'd say "sigcheck -u -e c:\windows\system32."  What that does is that runs through every file and verifies the signature of every file.  And he says:  "You should investigate the purpose of any files that are not signed."



LEO:  Boy, that's a great tool.  That's nice.



STEVE:  Isn't that cool?  Yes, I just think our listeners are going to love it.  So you want to google SigCheck, S-I-G-C-H-E-C-K, and you'll get right to it.  This is Mark who of course Microsoft hired from his Sysinternals, where we all loved the Sysinternals tools that he and his partner were creating.  But the thing that put this on my radar, what he added - oh, and how cool is it also that, if there's a bunch of stuff that you want to just quickly check, it'll also traverse subdirectories.  So it'll do a full multilevel directory traversal, and it will upload and verify things against VirusTotal.  So it'll just automate that whole process.  If someone wants to, like, run their My Documents directory, for example, through Virus Total, you can do that with one command.



But the thing that put this on my radar was, and what he added in 2.4, was that you can also use it to check for anything unexpected, well, or un-Microsoft, in your system CA root store using the -t, with options [u] and [v].  He says dump the contents of the specified certificate store, or you can use asterisks for all stores.  And then, he says, you can specify -tu to query the user store, although the machine store is the default.  And you can append a -v to have SigCheck - and "v" stands for verify.  SigCheck will download the trusted Microsoft root certificate list and only output valid certificates not rooted to a certificate on that list, meaning that are not associated with the official Microsoft certificate list.  And if you are offline, if for whatever reason right now at that time you cannot get to Microsoft's online site, then there is an authrootstl.cab file and an authroot.stl.  Either of those will be used instead.  So you can provide those locally.



Anyway, we've talked about tools for helping people discover unauthorized root certificates.  Now we've got an official one from Mark, which downloads Microsoft's list on the fly and then performs a comparison against it.  So that's, I think, that's the tool you want to use.  And it does so many more things, and it's tiny because Mark writes good code.



Oh, a piece of errata.  Last week Shawn tweeted me, I think he was the first person, although I found a bunch of this from our sharp-eared listeners in the mailbag.  I mentioned that WiFi used CDMA.  No, Steve.  I actually said CDMA/CD.  What I meant was CSMA.  And so Shawn corrected me, saying it's actually CSMA/CD.  But actually even that's not correct because it's not collision detection, it's collision avoidance.  So what WiFi uses is CSMA, which is Collision Sense Multiple Access, with Collision Avoidance.



And remember I also explained how wired Ethernet uses collision detection, where it's listening as it's transmitting.  And if it realizes that it just got garbled, that is, its own transmission got garbled, then that was collision detection.  Well, wireless cannot do that because, as you know, Leo, from just having recently passed your ham license, there's no way that you could have a receiver on the same antenna as a transmitter that is, like, blasting out at however many watts of power it is.  There's no way that a receiver could listen at the same time because that local transmission would completely swamp its ability to receive.  So the WiFi guys realized this, and they use an algorithm to assign essentially timeslots to devices and thereby avoid collisions rather than try to detect them.



And a little bit of miscellany.  We are, I think it's four, or maybe it's five episodes now into the new series "The Expanse."



LEO:  You know, I just started watching it.  You think it's good?



STEVE:  It is a huge win.



LEO:  Oh, good.



STEVE:  I wanted to wait until I could see where it was going to go because the very first scene was a little muddy, and I was a little weird.  And there is a lot of...



LEO:  Yeah.  That's when I, by the way, that's when I stopped watching it.



STEVE:  Yes.



LEO:  Lisa said, "I don't like this."  And I said, "Okay, well, I'll watch it another time."



STEVE:  Yeah.  And there is some - there's, like, three - there's Earth and the Martians, as they're called, only they're not aliens, they're just people who moved to Mars.  And then there's the Belters out on Ceres.  And so, as happens, because each group has different needs due to their local ecosystem, politics have become strained.  And so there is sort of a bunch of, like, background politics going on.  And I have no idea what that is.  When I was reading the book, I could follow it because you had people's names, and they kept getting repeated, and got careful dialogue.  Here it's just blah blah blah blah, and people kind of talking under their breath, and something hovers by and goes past the camera and you get distracted.



So don't worry if you're not tracking all of the political machinations between the Earthers and the Martians and the Belters because it sort of doesn't matter.  I mean, it's just tension.  But, oh, the effects are good.  The production quality is good.  I've liked a lot of like the last three weeks.  And so I want to give that a recommendation.  I thought it was really good.



LEO:  Oh, good.  I'm going to watch it, then.



STEVE:  Yeah, I think you should.  Go at least five in and see if you agree.  I think you'll get hooked by then.  I can't wait.  It's tonight, and it's like, oh ho, what's going to happen next?  Actually, I know because I read the books.  But still I want to see it.



Then there was another new Syfy show.  And I just wanted to mention it.  It's not started yet.  But it is available for download, or somehow accessible streaming.  And that's a series called "The Magicians."  Not sci-fi.  And it's a little bubblegum-y.  But I liked the first episode.  I actually watched the first episode twice.  So I wanted to let people know, just give you a heads up.  You might tag it in your DVR, check out the first episode.  Again, something's going on with Syfy because they seem to be, you know, they've really upped their game in terms of production quality.  It's gone from "Gag me" to, "Wow, this is on Syfy?"  So "The Magicians" looked like it may be fun.



LEO:  Good.



STEVE:  And Leo, without any spoilers, I will just say that I've seen "Star Wars" twice now.



LEO:  Oh, you liked it.



STEVE:  I really - it was just fun.  And I know without even - just because we have a mind meld, I know what problem you had with it.  And it's the problem other people have had with it, and I did, too.  I found myself thinking that...



LEO:  But you know, what I realized is that was the right thing.  That was a smart thing for Disney and J.J. to do.



STEVE:  I think so, too.  I think so, too.



LEO:  Now we're real - this is starting to sound like "The Expanse."  And another thing.  No, I think it was - I understand why they did it.



STEVE:  Yup, yup.



LEO:  And you know what, they have next year...



STEVE:  But it annoyed me while I was watching it.



LEO:  ...and the year after and the year after and the year after.  So there's much more to come.



STEVE:  Yes.  While I was watching it, I was annoyed.  I thought, wait, wait.  And I have to say I really - I went with my best friend.  We both enjoyed it the second time, I would say more.



LEO:  Yeah, I want to - I haven't seen it a second time.  I think I might. 



STEVE:  Because we knew what was going to happen, what to look for.  I just...



LEO:  And your expectations had been, you know, you were no longer saying, oh, this is going to be a reboot.  You kind of got, okay, I get it.  I know what's happening here.



STEVE:  Yes.



LEO:  Which is good.  You know what, it really - what it is, it's very satisfying for Stars Wars fans, and that's really the bottom line.  Right?



STEVE:  Oh, and we get two more; right?



LEO:  Yeah.  More.  Two more?  You're going to get one a year for the rest of your life.



STEVE:  Oh, you promise?



LEO:  No, Disney has already promised.



STEVE:  I guess, given the money, how could you say no?



LEO:  I mean, it made more than a billion dollars.  They only paid four billion for this franchise.



STEVE:  Now, here's a question.  I watched, as you did on Sunday, the Golden Globes.  And of course "Star Wars" was nowhere mentioned.



LEO:  Which is weird.



STEVE:  Do you think there will be any mention on the Oscars?



LEO:  Never has been.  Never has been.  Don't know why.



STEVE:  No?  Well, it just...



LEO:  Not for this, for sure.  Had this broken new ground in some interesting way, maybe.



STEVE:  Right.  It's just a pure cash-generating engine.



LEO:  Yeah.  It's great, though.  It's great.  And it makes you feel good.



STEVE:  They got my money twice.



LEO:  Yeah.  It's not - you don't - I think that you channeled me exactly right, and I channeled you back, and I think we are on the same wavelength about it.



STEVE:  Yup.  Yup.



LEO:  But I understand why, and I think it's fine, and it's made everybody happy.



STEVE:  I do, too.  I forgive it.  And think about how the whole new generation who didn't see Episode IV, and first of all wondered, wait, IV?  What happened to I, II, and III?  Unfortunately, we found out later.



LEO:  Well, when we saw IV...



STEVE:  Yes.



LEO:  ...they didn't say Episode - or did it?  No, it didn't.



STEVE:  Yes.  Yes.



LEO:  No, wait a minute.  Now, see, I thought so, in my memory.  But then I've been reading about the original.  I don't think it said Episode IV when it first...



STEVE:  I just watched it.



LEO:  It does now.



STEVE:  Oh.  And they also added a bunch of new little critters running around.



LEO:  Yeah, that was part - I think that was part of Lucas's revisions. 



STEVE:  I - but what I do remember was...



LEO:  I could have sworn it was, too.



STEVE:  Yeah.  I'm absolutely certain that we knew, like, that he did this on purpose, that he dropped us into the middle.  And lord knows why.  But he did.  And I'm sure we knew that then.



LEO:  Chatroom is saying the Episode IV was added in the 1978 re-release.  And that was my understanding, as well.



STEVE:  Okay, well, '78.  



LEO:  It came out in '77.  And so what I'm saying is when we first saw it, we'd been waiting in line a long time, we were young, young guys, and we saw it, it didn't - there was no Episode IV.  That came later.



STEVE:  But only a year later.



LEO:  Yeah, not much later.



STEVE:  So that was to clarify his mistake, essentially.



LEO:  Yeah.  He added more over the years.  But, you know, we interviewed the guy who's doing the specialized edition on The New Screen Savers.  This is his attempt to get back to that original 1977 version.  It was really - it's really interesting what he's doing.



STEVE:  Oh, cool.



LEO:  Yeah, really interesting.



STEVE:  So I've said it before.  I've already seen tweets from listeners who have thanked me for pushing people to go watch "Homeland."  We just finished the fifth season.  It was really good.  But I also wanted to mention that there was a series that is just starting that also looks really good called "Billions."  And it stars the actor, Damian Lewis, who...



LEO:  Love him.  From "Homeland."



STEVE:  Yes, who was in the first two seasons of "Homeland" playing the character Brody.  And so it's Damian Lewis and Paul, how do you pronounce his name, Giamatti or something like that?



LEO:  Giamatti, Giamatti.



STEVE:  Yes.  Those two actors and the producer and director were all interviewed by - I'm blanking on his name.



LEO:  I'm trying to channel your thoughts.



STEVE:  Charlie.



LEO:  Rose.



STEVE:  Charlie Rose.  Thank you.



LEO:  This is sad.  We're like an old couple now at this point.



STEVE:  I strongly recommend that you DVR Charlie Rose, just stick it in there.



LEO:  I will, yeah.



STEVE:  Sometimes they're not interesting.  But he has fabulous interviews.



LEO:  I do, I TiVo it.



STEVE:  Good.  Well, anyway...



LEO:  The only thing that makes me mad about Charlie Rose is he doesn't say at the beginning of the show who's on.  So I have to...



STEVE:  No, he does.



LEO:  Well, no, no, there's a long prologue, and then he finally gets around to it.  It's a little annoying because you can't, like, just look in the thing and say, oh, I don't want to watch that one; oh, I do want to watch that one.



STEVE:  Oh, you do have to watch the first few minutes.



LEO:  You have to watch the beginning of the show each time.



STEVE:  That's - yes, yes.  So I wanted to say that "Billions" is available on demand.



LEO:  "Billions."



STEVE:  For me, Cox provided it.  I watched it and loved it.  It's a little adult, I mean, this is not for the kiddies.  You'll know why in the first minute.  But it looks really good.  It's the story of Axe Industries' multibillionaire who is skating over the edge.  And the U.S. Attorney decides he's going to prosecute.  But lots of complexity.  Again, I think it's another great Showtime series.



LEO:  Good, I'll have to watch it.  All right, good.  Yeah, good.



STEVE:  And in the theater I saw "The Big Short."



LEO:  Ah.



STEVE:  I hated it.



LEO:  You hated it.



STEVE:  I hated it.



LEO:  Everybody's raving about this.



STEVE:  Okay.  Yes.  The problem is you don't want a bimbo in a bubble bath holding a glass of champagne to explain what collateralized debt obligations are.



LEO:  Yeah, probably not, okay.  But that was to make it palatable.



STEVE:  Well, now, Jenny and her mom loved it.  And for the first time ever, they say they understood what happened...



LEO:  There you go.  There you go, yeah, right.



STEVE:  ...in the whole housing collapse.  I actually already knew, and had read several books and seen all the movies about it.



LEO:  Right.



STEVE:  So it just wasn't my style.  So all I'm saying to anyone who wants to save themselves the cost of a movie ticket, if a sort of a whimsical, I mean, there were good parts to it.  But, eh, I wasn't a big fan.



LEO:  Looked a little like "The Wolf of Wall Street."  I felt like they were remaking "The Wolf of Wall Street" sort of.  But I haven't seen it yet, so.



STEVE:  Yeah, but it did - it also had, like, cartoon bubbles popping out of people.



LEO:  Oh, that, yeah.



STEVE:  And it was that.  It was the style.  Stylistically it just - on one hand, it wasn't taking itself too seriously.  But I think they were trying to pop it up in order to...



LEO:  Right, make it fun.



STEVE:  ...to make it like [crosstalk].



LEO:  Michael Lewis's books are great.  And if you haven't read that or any of his other books, he's really a wonderful writer.



STEVE:  Right.  And last piece is that I was an early contributor to the Dash earphones.



LEO:  The Bragi.  Did you get yours?



STEVE:  The Bragis.  No.  But they - I got email on the first day of CES, when they were all excited about going, saying that the first 5,000 were - that they had shipped, and they would be shipping them out through the course of CES and shortly after.  So anyway, I'm hopeful.  They do look nice.  I paid a hundred dollars less than they want now as an early supporter.



LEO:  You lucked out because they're expensive.



STEVE:  Mine were 200 bucks.



LEO:  Yeah, they're expensive.  Well, good.  Let me know.



STEVE:  And I do like the idea of them not needing a phone, that they've got 4GB of music storage.  And so you just stick them in your ears and tap them, and they work.  So...



LEO:  Hey, I have an update for you.



STEVE:  Oh.



LEO:  Because we talked last week, and I said I had ordered it, but I didn't get it in time for the cruise.



STEVE:  Oh, yes, the hardware firewall.



LEO:  The Tiny Hardware Firewall.  And I did do a review, a full review, if you want to see it, on The New Screen Savers last week.



STEVE:  I watched it, yup.



LEO:  This was the device that I got for free by buying a $91 year's subscription to tiny HotSpotVPN, which is one of, probably one of the oldest VPNs, hotspot VPNs out there, from WiFiConsulting.  They've been doing this for many years, and I've recommended them for years.  I can give you some more technical updates because I didn't mention on the review, for instance, I queried HotSpotVPN about logging.  You know, the negative on this, and one of the negatives in the review that I said was you can't choose your server.  You can't choose your country.  So for avoiding geographic restrictions it's not ideal.  But this is really a security and an anonymity device.  They do log, but they log for 48 hours only, and they overwrite the log every 48 hours.  They don't log any user interactions, they say, but they do, they say, for net sec and support reasons they log for 48 hours.  So just something to keep in mind.  We're pro no logging for a VPN solution.



STEVE:  Yeah.



LEO:  Now, how does it work?  Really great.  I mean, it's been on now, it's booted up, so I have it as a hotspot in my settings here on my Windows machine.



STEVE:  Powered by your USB key.



LEO:  Yeah.  Right now it's powered by USB.  But I was able to run it for, how many hours?  I think two or three days off of a small smartphone recharger battery.  Once you run it, oh, I guess I've never run it on this machine, so I'd have to - I won't do it right now.  You can log in.  You can turn on the VPN.  You can turn on the Tor browser.  It also does malware and adblocking built into the VPN through a proxy.  Can't use that and Tor, as well.  You have to choose your proxy.  But it's fast.  It's fairly fast, which is nice because a lot of times VPNs and Tor slow things down.  It's usably quick and very convenient.  Once you set it up on any given computer, I just carry it around in my backpack - my man purse, okay, let's be honest - and I have it any time I want to open a WiFi access spot.  And I feel like this is a really good solution for people who just want to be secure on an open WiFi access spot.  I like it a lot.



STEVE:  Right.  Very cool.



LEO:  So that is a positive review.  For the full-length review you can go to our YouTube channel, YouTube.com/twit, or watch The New Screen Savers on Saturday because I gave a much more thorough review of that.  All right.  I've got questions.  You've got answers?



STEVE:  But I've got one nice fun...



LEO:  A SpinRite?



STEVE:  A fun SpinRite story to share.



LEO:  Do a SpinRite.



STEVE:  This is from - I found this at the very end of my mailbag, so he just sent it in, Mark Clark.  The subject caught my eye, of course.  He said:  "SpinRite helped a retired vet and saved my wife's sanity."  He's in Portland, Oregon.



He said:  "Dear Steve and Leo, blah blah blah.  My wife runs a nonprofit housing company, and one of the tenants tends to visit the office when he has nothing better to do.  His computer was not working, so he was spending a lot of time in the office.  I happened to be in the office setting up a new computer, and my wife asked me if there was a computer in the office she could give him."



LEO:  To get him off her back.



STEVE:  Get him out of my hair.  "I asked him what was wrong," wrote Mark, "and he said his screen was red, and Windows would not boot.  So I told him to bring his computer" - like I guess he was upstairs - "bring the computer down to the office, and I would look at it.  I got out my trusted copy of SpinRite and let it go to work.  I did notice the screen was not getting all the colors, but I figured it was because I didn't have the video plug in all the way.  SpinRite ran and had about 8 million ECC errors and 600 seek errors."  But of course that's normal on new drives.  He says, "But otherwise it didn't complain.  Once SpinRite was finished, Windows booted up just fine, and I let him know he could have his computer back.  It was working again. He took it back to his apartment; and when he tried to connect the video, the port fell completely off the motherboard."



LEO:  That might explain the color problem.



STEVE:  That could explain the color problem.



LEO:  SpinRite did not fix that.



STEVE:  "I told him to give it back to me, and I would fix it.  I went to the computer store, picked up an inexpensive video card."



LEO:  Smart man.



STEVE:  Yeah.  "After installing" - this guy really wants him not bugging his wife.  "After installing the video card, I reran SpinRite on Level 4 just to make sure.  Now he has his computer back, which means he's not spending time in the office annoying the staff, and saving my wife's sanity.  Thank you for a great product.  Mark Clark."



LEO:  Love it.



STEVE:  Mark, thanks for sharing your story with us.



LEO:  Yeah.  SpinRite as yet cannot save you from disconnected hardware ports.  But at least the hard drive's working.  That must...



STEVE:  And it runs even if the screen is showing all red.



LEO:  Yeah, yeah.  That must have been some banged up computer there.  Steve Gibson, you should answer these questions from our fine viewers, questions we should say, just in the interest of full disclosure, Steve has carefully selected, but more to the idea to having the answer at his fingertips, not having to do any research or anything like that.



STEVE:  We got some really good ones this time.



LEO:  As always.  The best audience ever.  Charles Anderson kicks things off from Columbus, Ohio.  He wonders whether hard disk drives read by sectors or by tracks:  Steve, I've been listening to the Security Now! podcast since the beginning.  And that is a long time ago.  I purchased SpinRite to fix my TiVo, and it worked.  But every time I hear you talk about reading and writing sectors, I'm reminded of something I read years ago somewhere:  "Modern drives no longer read and write individual sectors."  Since they're not constrained by internal RAM as in the old days, when they want a sector, they just read the whole track into onboard RAM and return the part of the track that represents the data requested.  That kind of makes sense.  And then, if a request comes in for the next sector, well, they already have it locally in the cache.  And when they write a sector they read the track, replace the data in the stream that is the sector, and write the whole thing back to the platter.



So, given that, do modern drives operate on tracks and just return the sectors requested?  And, if so, how do your repeated requests for a specific sector over and over during data recovery relate to this?  How is it impacted?  Charles Anderson, Columbus, Ohio.



STEVE:  So it turns out that the truth is somewhere in between that.  So a simpleminded description, which is what he remembers, is that they no longer read and write individual sectors.  That's not true.  But what happened was, in the evolution of drives, we went from a controller that had all the brains, and where the drive was really just dumb.  There was no brain at all, no processor to speak of.  Basically the controller told the heads what cylinder to go to and then selected which head to read from.  And then the data streamed in, and the controller looked at the data and found the sector or sectors that it wanted.  So basically the controller placed the head where it needed to, activated the proper head for which surface the data was either to be read or written to or from, and then just had a real-time transaction as the data moved under the head.



Everything changed when we went to so-called IDE (Integrated Drive Electronics) drives because now there was a processor in the drive.  And over time drives got increasingly clever.  They got more and more RAM.  Of course, operating systems got much busier, too, so that lots is happening all the time.  So if you think about it, if the challenge is I'm being asked to read a certain sector on a certain track, and it might be that, I mean, it's likely that other sectors may be asked for on the same track, then what the drive does is, when it arrives at the track, because it's got ample RAM, and it's smart, it starts collecting the sectors that are passing under it while it's waiting to get to the sector that's been requested because the chances are great, especially now that we've got so many sectors per track, that it's not going to just arrive at the track as the sector starts to pass underneath.  It's going to have to wait a while.



Well, since it's not doing anything else, and it's on that track waiting for the sector that's been requested, it sucks all the ones in until it gets to the one that's been asked for.  Then it starts reading - and typically requests are multisector requests.  So it'll start at that sector and then send all of the other sectors in as it encounters them.  And at some point it may lap itself and get back around to the sectors that it was already reading before it got to the one it was asked for, in which case it'll send those in at a much higher speed.



So I guess the way to think about it is that you've got this physical system with moving heads and spinning platters, with as much intelligence as is useful, so, like, massive intelligence.  What would you do to make this thing always be as busy guessing ahead, reading ahead, getting data that it thinks you might want.  And that's what modern drives are doing.  Essentially they're just doing everything.  And as a consequence, they're really fast.



LEO:  But you, as SpinRite, still have the capability of going sector by sector, no problem.



STEVE:  Ah, yes, thank you, I forgot.  The second part of his question was what happens.  All of this comes to a grinding halt when a sector cannot be read.  If it can't read the sector, if it's not a sector that's been requested, if it was one that it was opportunistically reading, it just shrugs.  It doesn't care.  It's not going to raise an error because it's not an error in response to a request you made.  So there's no way it can complain if it could not read an opportunistically read sector.  But if you do end up coming around and requesting that sector, then it will say, oh, sorry, I haven't got that for you.



Now, if you ask for it again, it'll try again.  And there are maintenance modes that SpinRite drops the drive into.  For example, I can turn off, and I do, all of that read-ahead activity because I don't want that messing around with recovery.  So there are things you can do that are not the normal way the drive works to sort of retard them a bit in how aggressive they're being.  And that gives SpinRite much more accurate one-to-one control over what it's doing.



LEO:  Nice.  Perfect.



STEVE:  Cool.



LEO:  Thank you.  Brendan Sherwin tweets about PRNGs:  Steve, I was - prng, prong.  Shall we call them prongs?  Maybe prong.  I was hoping you could discuss how a pseudorandom number generator, or PRNG, works, and how a hardware PRNG might be more random than a software PRNG.  I think prong.  I'm going to call them a "prong."



STEVE:  Okay.



LEO:  How is a hardware prong more random...



STEVE:  No one will know what we're talking about with the prong.



LEO:  Yeah, I know, be very confusing.  How is a hardware prong more random than a software prong?  You know what, we should start a campaign, I'm telling you.  This is the way to do it.



STEVE:  And if there was more opportunity to say "prong"...



LEO:  Why not?



STEVE:  For example, it's too bad that there's no way to pronounce HTTP.



LEO:  Yeah.



STEVE:  That doesn't really work.  Prong, yeah.  But unfortunately it's a low use case.



LEO:  Yeah.  PRNG, though, that's a lot of syllables.



STEVE:  Yeah.



LEO:  He says:  I don't know if a hardware PRNG is more random.  However, it seems to be the rule of thumb with the people I've talked with.  They don't seem to have answers as to why.  So maybe you do.  Thank you.  Love the show.  Brendan.  That was a long tweet.  Is he using that new 10,000-character tweet capability?



STEVE:  Oh, I'm sure.  You wouldn't believe.  I get books now sent to me.



LEO:  Oh, lord.  And you thought that was a good idea.



STEVE:  Well, I'll tell you, it beats having a book divided up into 144 characters.



LEO:  That's true.



STEVE:  Because that has happened also.



LEO:  I'll grant you that, yeah.



STEVE:  And that's really not good.  It's like, what?  I also get, of course, I have noises for everything.  So all kinds of - it's like [crosstalk].



LEO:  [Making noises]  And it goes one, two, except it's backwards, isn't it, 443, 442.



STEVE:  Yes.  Not good.  So, okay.  Here's the deal.  What is special about a hardware PRNG, or prong...



LEO:  You see?



STEVE:  I agree, Leo, it's catchy.  What's special about a hardware prong...



LEO:  Oh, you can't do it, can't do it.



STEVE:  No, I can't do that - PRNG is it uses something truly random.  It could be, in some cases, for example - this is crazy.  Well, okay.  A classic that I loved was that Sun Microsystems used to have cameras pointing at lava lamps, looking at the wax moving around, undulating in the lava lamp, because that's a chaotic process.  And they would digitize that and use it to maybe not directly generate random numbers, but to seed a software PRNG.



There are pure hardware random number generators which use some physical property.  That's the key.  You can't just use math, or then you have a software pseudorandom number generator.  So it's actually not the case.  You wouldn't say "hardware pseudorandom number generator," you would say "hardware random number generator," and that would be a HRNG, an H-R-N-G.  So, for example, there are a number of ways that electronics can be used.  Diodes are known to be noisy.  That is, when a diode is trying to resist current, it only allows current to pass in one way.  When you push current in the other way, every so often an electron will wander across the PN junction and cause an event.



And so there are ways that you can use a reverse-bias diode to generate absolutely unpredictable noise.  It's called "quantum noise" because this is quantum phenomena.  And that's typically - it needs to be post-processed.  For example, it might be mostly ones and zeros, and some zeros.  So you need to whiten it in order to balance it.  So, for example, there is a bias in individuals.  But it turns out, if you XOR a pair, that automatically removes the bias, which is a really cool side effect of XOR in this case.  So a software pseudorandom number generator, given a known state, always produces a known and predictable, all the way out into the future, sequence of pseudorandom numbers.  If you don't know what the internal state is, then unless you get a large number of its output, it's difficult to reverse-engineer its internal state.



So what we see now is sort of hybrid designs, where real-world things, maybe not a reversed-bias diode junction, but how about the unknowable, unpredictable, precise timing of packets arriving at a network interface?  Or packets coming over from a WiFi source?  Or the number of branches not taken or mispredicted by the CPU.  It's completely, technically, that's deterministic because it's all algorithmic based.  But it basically condenses so many different, unknowable factors about the past of the processor since it was booted and everything that's happened to it since, mouse movements and packet arrivals and everything else, even the phasing of the display interrupts coming into the chip.  So that all could be used to seed a software-based pseudorandom number generator.



The reason is that sometimes these hardware events are low bandwidth.  You can't ask the hardware for a huge amount of randomness.  It's just not producing it that fast.  So what you do is you use a pool concept, where over time a pool of true entropy is slowly generated.  And then, once it's full enough, you start using it, and then you start filling, while you're using that pool, you are filling a new pool, again slowly, trickle filling it with hardware event true entropy.  Meanwhile, a software algorithm is using the entropy in the pool you've just finished filling.



The problem is you don't want to use it forever because, in theory, anybody who knew what the algorithm was and looked at enough output could eventually reverse-engineer the state of the pool and from then on predict the future.  So way before that much output has been generated, hopefully your secondary pool has now filled up enough, and again you've swapped pools.  So that's a means of having true, effective, sort of constantly reseeded - this process of swapping pools is called "seeding" the software pseudorandom number generator.  And so this is a periodic hardware reseeding of a software pseudorandom number generator.  And now you know way more than you ever wanted to about prongs.



LEO:  Or prangs.  We didn't consider prangs.



STEVE:  Prangs, or hrongs.



LEO:  I think random number generator is actually really the best.



STEVE:  I think maybe we ought to just be clear, yeah.



LEO:  We don't have to - we can leave out the "pseudo."



STEVE:  Yeah, because in the case of hardware it's true random.



LEO:  Yeah, hardware's random.  That's the biggest difference, isn't it.  It's not pseudo.



STEVE:  Oh, I forgot hard drive access timing, too.  Anything you look at with sufficient resolution is generating at least some least significant bits of absolute uncertainty, based on the timing of the request and the rotational position of the drive.  Boy, hard drives are a great source.



LEO:  How good is it when they say, okay, move your mouse, wiggle your finger or whatever, those kinds of things?  It's pretty random; right?



STEVE:  I don't have that in SQRL because it always upset me that sort of the user had input.  It's like, okay, how long should I do this?  And if I don't do it long enough, you know, and it turns...



LEO:  Did I hit random?



STEVE:  Yeah, exactly.  And it also seemed sort of more like a pacifier, like it's very much like McAfee saying that he's using military-grade encryption.  Yes, but it's John McAfee.



LEO:  Right.



STEVE:  So I don't care whose military's encryption you're using, if John McAfee was involved.  Similarly, it's like, okay, if I'm in charge of making sure my hard drive encryption is secure by moving my mouse around a lot, that just doesn't feel right to me.  And it turns out it's totally unnecessary.  If you are operating, as I am, at the machine level with SQRL, as I just enumerated, a bunch of sources of entropy, and we did that famous podcast years ago, couple years ago, called "Harvesting Entropy" [SN-456]...



LEO:  Yeah, that was a good episode.



STEVE:  ...where I talked about my design of SQRL's basically hardware true random number solution.



LEO:  And that's where we first talked about this, using a diode as a way to generate...



STEVE:  As a hardware noise source, yeah.



LEO:  Yeah, yeah.  Manuel Othenos in Santander had an idea for upgrading HTTP or HTTP [trying to pronounce it as a word]:  Great show, guys.  Been listening for ages.  When websites upgrade to HTTPS, they get the benefit of secure connection and encryption, which is often used for logons.  Some sites don't want to use HTTPS across the board due to perceived processing overheads for the encryption.  Or, I might add, the cost and complexity of adding this, which is the only, you know, we don't have logins to our system.  So we felt like, well, there's nothing we're securing.  You just come to, you know, a lot of websites, you go to the website, you read something, and you leave.  There's no personal credential.  So do you need HTTPS?  And, well, we decided to do it anyway.



But here's my suggestion:  Why don't the powers that be - I wonder who those are? - implement an upgrade to HTTP so the connection setup process is secure, but the encryption isn't used when it's not necessary?  It ought to be difficult for that connection to be interfered with by attackers.  And the lack of encryption should keep the NSA happy.  Huh?



STEVE:  Okay.  So this was sort of interesting to me, only I guess from a geeky standpoint, because that's been done already.



LEO:  Oh.



STEVE:  It turns out that, in the enumeration of existing SSL and, well, SSL, I'm not sure if it's even still in TLS, it's certainly been, I mean, no one uses it.  But SSL, remember that the way that SSL works is that there are a set of suites of cryptographic modes where you say this is the cipher I want to use.  This is the message authentication technology I want to use.  This is the way I want to do key agreement establishment.  And you sort of mix and match one from Column A, one from Column B, and one from Column C in all kinds of different ways.



It turns out that a valid cipher - and this is something we'd never talked about, which is why I thought it was a fun question to bring up - a valid cipher is null.  There are, exactly for this purpose, as Manuel sort of posits, there are SSL cipher suites where the cipher is null.  So you would get authentication using a certificate.  You would even get authentication that the message had not been tampered with.  So it's tamperproof, and it's - I'm only thinking of the word "authentication."  That's not what I mean.  When the server, you're verifying the server identity, it's...



LEO:  Uh-oh.  I'm losing the - I can't channel you.  I'm losing the signal.  I don't know what you're talking about.  Don't know where you're going with this.



STEVE:  [Laughing]  Anyway.



LEO:  Verification?  Authentication?



STEVE:  Had too much coffee.  So the...



LEO:  Authorization.  No.



STEVE:  Uh, no.  I guess you're authenticating the remote identity of the server, but that doesn't seem like the right word.  Anyway, it'll probably come to me.  But so the point is this is already built in.  And of course what it - so it prevents tampering.  You know that you're connecting to who you believe you are.  No one can mess with it.  Yet there is no encryption going on.  There's no encipher...



LEO:  Certification?



STEVE:  No.  No.  Maybe it's authentication.  I'm just not...



LEO:  It is authentication.  I mean, that seems like the right word.



STEVE:  Yeah.  So anyway...



LEO:  Validation?



STEVE:  No.  Where you know the identity, absolutely know the identity of the other party.  Authentication?  That doesn't seem like authentication.



LEO:  [Muttering]  Don't know.



STEVE:  Question number four.



LEO:  Affirmation?  Chatroom's coming up with every -ation ever invented.  We'll come up with one.  Todd Warner in Hookstown, PA wonders what the hell does ShieldsUP! actually test?  No, he didn't say it like that, I did.  He said:  Listener since day one, and several issues multiple times.  I don't recall this being addressed:  What does ShieldsUP! really test?  I ask because every computer in my house failed to achieve the TruStealth rating.  My router was enabled for one address to be a server in a DMZ, but the address was not in use.  I disabled the DMZ, and all computers became TruStealth.  Is ShieldsUP! just testing my router, or is it testing the actual computers?  My router is a Cisco Small Business RV220W.  What gives?



STEVE:  So I know this is sort of, for some of our listeners, they're like, okay, we all know this.  But there will be some people who don't.  And this is an important characteristic of a router, which is why everyone needs one.  Even if you only have one computer in your home, you need to have a router that routes to it.  The reason is that the router is the entire public presence of your home's network, that one device.  Your home, until we move to IPv6, has one IP issued to it by your ISP.  So if you have one IP, then there's only one IP for ShieldsUP! to test.  And ShieldsUP! tests that one IP.  And that's the IP of your router.



So when you had a DMZ set that was apparently going to a computer that existed, even though there was no server running, it was responding to a ping.  Thus the TruStealth failed because your entire network was not hidden because one computer was responding to a ping that the router forwarded to it.  But when you turned off the DMZ, now that incoming ping from ShieldsUP!, among the many things it's looking for, trying to get a response from your system, now it was just ignored, just got dropped by the router.



So ShieldsUP! cannot test your machines because they're using private IP addresses, these things, 192.168.  It's not possible for me for me to send packets out from GRC with 192.168.  There's nowhere for them to go because that range of IPs has been set aside for everybody to reuse inside each of their own homes.  So your neighbor has a router, 192.168.0.stuff, and you have one, 192.168.0.stuff.  So you're using the same IPs inside your home, but one public IP, which is what the world sees your network as.  And actually that was kind of good, so I'm glad I talked about it.



LEO:  Yeah.  Yeah, that's why we have routers.  Otherwise...



STEVE:  Just for clarification.



LEO:  ...you couldn't have multiple computers on the same IP address.



STEVE:  Correct.  And they make great hardware firewalls.



LEO:  And just by chance, I actually talked about that on the radio show this weekend.  It's funny.



STEVE:  Good.



LEO:  Ironic.  I'm going to botch this name, Egbert Douwes.  I know that's not how you say it.  It's probably pronounced Vincent van Gogh.  I don't know.  He's in Amsterdam, The Netherlands, poses an interesting question about encryption:  Steve and Leo, I really enjoy Security Now!, have a question for you.  AES-256 can have a key length of 256 bits, but it always has a cipher block length of 128 bits.  Does that mean that multiple keys will give the same encrypted output?



STEVE:  Okay.  This is a great question.



LEO:  Wow.  You'd better explain the question before you give us the answer.



STEVE:  Yes.  So here's what he's thinking.  He says, okay, the key has 256 bits.  So we know that there are 2^256 possible keys, right, 2^256 possible keys because that's how many combinations there are of 256 bits where each bit is either a zero or a one, binary, so that's 2^256.  So that is a number that has 78 decimal digits.  That's how many AES-256 keys, possible keys there are.  It's a number with 78 decimal digits, so a lot.  But now he's saying, okay, but if the cipher block length, the number of bits you put in at a time which this thing encrypts only has 128 bits, are there more keys than there are possible encipherings?  Okay, which is a neat question.



So now we have to answer the question, how many possible encipherings are there?  We know how many possible keys there are, 2^256, which is a decimal number with 78 decimal digits.  How many possible encipherings?  So what's an enciphering?  An enciphering is a one-to-one mapping between an input, a set of input bits, and a set of output bits, so that every possible combination of input bits creates some other - probably other, not necessarily, could go right through, but seems unlikely, but it might - of output.



So how many possible ways are there to map all 128 input bits to 128 output bits?  And we know the answer because let's take the first input, all zeroes.  Now, that's going to map to one of 2^128 outputs.  So it's going to encrypt, if we put zeroes in, it's going to encrypt to some one of 2^128 possible outputs.  Now we turn the first bit on.  That's going to encrypt to - it can't encrypt to the same thing we just encrypted to, so it's got to encrypt to one of 2^128 minus one.  And the next one, like the input value two, that's going to encrypt - it can't encrypt to either of the first two, so it has to encrypt to one of the remaining, 2^128 minus two.  In other words, factorial.



What we have is the total number of possible encipherings is 2^128 factorial, meaning 2^128, times 2^128 minus one, times 2^128 minus two, times 2^128 minus three, all the way down to essentially zero, or to one.  And you're multiplying all that because that's, as we know from combinatorial math, that's how many possible ways there are of mapping a set of inputs to a set of outputs.  Now, this is where Wolfram Alpha comes in because, in order to answer the question fully, I went over there, and I put into this incredible computing engine, I put in 2^128, surrounded in parentheses, and gave it a bang, a factorial, an exclamation point.  It chewed on it for a shockingly short time, and it told me that the answer was approximated as 10^10^40.112.



LEO:  Crikey.



STEVE:  And then I said, okay, how many digits does that have?  It has 1.296 times 10^40 digits.



LEO:  Wow.



STEVE:  Yes.  So the answer to our Amsterdam questioner is no.  There are only 78 decimal digits in the number of possible keys, yet there's a ridiculous 2^128 factorial possible encipherings.  So what that tells us is that we are selecting, using the AES 256-bit key, we are selecting a tiny, tiny, minuscule, almost unmentionable micro tiny subset of the total universe of encipherings that can exist given 128-bit input and 128-bit output.  



LEO:  Wow.



STEVE:  Loved the question.



LEO:  Yeah.  And I think I found a web page - almost as hard as the answer to that question is pronouncing his name.  This says Egbert Douwes is pronounced [electronic voice] "Egbert Douse."  Egbert Douse.



STEVE:  Wow.



LEO:  Okay?  So just - I figured it out.  And now Mark Black, which is a little easier to pronounce.



STEVE:  Much.



LEO:  Much.  Mark Black from Lancaster, United Kingdom, just encountered TCP stack OS fingerprinting.



STEVE:  Okay, now, Leo, prepare yourself for this, because as I was putting this together I was again channeling you.  But go ahead.



LEO:  Okay.  Okay.  I was doing a routine security check and came across a website which correctly identified my OS, even though I blocked all JavaScript, have a local proxy (Privoxy), double NAT, NoScript, uBlock Origin with all lists enabled, Disconnect, Random User-Agent Spoofer with no DOM or APIs allowed - nothing.  I even disabled almost everything I could in "configuration mania."  Heck, I don't even install Adobe or Java on the OS.



And then I was quite annoyed to learn that something called TCP/IP OS fingerprinting - or "tikipipos" fingerprinting - has been leaking my OS the whole time.  I completely missed that one, and I'm sad to say it took the wind out of my sails a little.  And now I am brainstorming on how to obfuscate this in my Mac.  If you have covered this in Security Now!, I apologize, as I must have missed your discussion of "tikipipos."  I really hope you see fit maybe to mention it so we can muddy the waters a little in this respect, perhaps on the show if you think it's a valid subject.  All the best from Lancaster, England, Mark Black.  What is that "tikipopos"?  



STEVE:  So this is something we've never talked about, and so Mark is right.  He didn't miss it.  He's listened to every podcast, and I don't think I've ever, except probably in passing, mentioned basically TCP/IP stack fingerprinting.  The idea is that there are a number of parameters within the TCP protocol definition which are left up to the implementation.  They just don't really matter that much.  Consequently, over time, different operating systems and different versions of the same operating system have just chosen different defaults for these values.



A perfect example, for example, is the TTL, the Time To Live.  As we know from our early discussions of how the Internet works, that's a little counter, it's eight bits, which every time a router forwards the packet, it decreases that count from what it received to what it sends.  And at some point, if the packet just keeps bouncing around the Internet, that TTL, the Time To Live, will go to zero, meaning that the packet dies, thus its name, Time To Live.  And this keeps stuff from getting stuck in loops where it just circulates around the Internet forever.  It's one of the brilliant foresightful things that the original designers of the Internet came up with.



So different OSes have set over time the TTL to different values.  Once upon a time they were like 16 because the Internet wasn't very big.  Then the diameter, the router hop diameter grew, and packets that were launched with 16 couldn't even make it to the other end, to the other side of the Internet, without timing out.  So then OSes said, uh-oh, and they went to 32 or 64, generally powers of two, or 128, and maybe 255.  So that's an example.



So the point is that people who are really interested in looking for, I mean, we're talking sort of more high-end hackers.  One of the tricks of the trade has been to fingerprint, through the network, fingerprint the OS and maybe even the version, just by the way its TCP/IP stack acts.  What's the largest TTL seen?  What's the initial packet size?  That might vary.  The window size is a parameter that allows packets to be in flight without being acknowledged.  That might just start off at a different value, and often does.  There's also something called "window scaling" because the window size was only 16 bits, so now there's an eight-bit scale factor that's been added more recently to allow larger window sizes since bandwidths have gone way up, and we might need way more data to be in flight without being acknowledged, and so forth.



So I just liked the question.  Mark is upset because it turns out that it's possible for someone to know that he's using a Mac.  And he disclosed that.  So, okay, now everybody knows.  Sorry about that.  There was a service, net - boy, I can't remember.  It was a service that sort of looked at the uptime of servers.  I tried to find it last night, but I was unable to find it, NetWatcher or something.  And I always got a kick out of the fact that it could never fingerprint GRC's servers because they're behind a custom thing that I created years ago which is sort of my own TCP/IP stack.  And it just never tried, it could never figure out what OS I was using.



There are masquerading, TCP/IP stack masquerading programs.  Unfortunately, not for the Mac.  Mark, I'm sorry, they exist for Windows and Linux and that ilk.  But as far - and maybe you could use - I'm trying to remember if I saw one for FreeBSD.  I might have.  And so there's a chance it might be - it would have to be compiled for the Mac.  Anyway, what you want to look for in googling is OS fingerprinting, or maybe TCP/IP stack fingerprinting, things like that.  You'll find a ton of resources on the 'Net because this goes way back to the beginning.  And it's an interesting topic, you know, kind of wacky, but fun.



And I don't really know if it matters.  I mean, the original idea was that OSes themselves had major flaws, and so fingerprinting was the first thing a serious hacker would do in order to attack an operating system that was on the 'Net.  If they knew what OS it was, then immediately they would turn to the subset of things that might be wrong with this particular instance of the operating system and not bother with all kinds of things that are wrong with all the other operating systems.  So it was a quick way of weeding things out.



LEO:  Are you talking about Netcraft?



STEVE:  Netcraft, yes.



LEO:  I didn't channel that one.  Jaguar in the chatroom did.



STEVE:  Ah.  Netcraft, yup.



LEO:  Martin Grigg in Vancouver, Canada wonders about the safety of links in Gmail:  I use Thunderbird for my email.  And I understand that clicking on an email link could allow a malware script to run in my user account.  We were talking about that the other day.  We found that Windows just will randomly run any JavaScript, or Java, right, even Java.  However, when I open my Gmail account using Firefox and click on an email link, isn't that safe because it's inside Firefox?



STEVE:  Alas, no.  And so basically, when you're clicking on a link in Gmail, you're in a website.  And we know that clicking on links in websites can be a problem.  Now, maybe Gmail is providing some protection, so there's that possibility.  But that's sort of not the question he's asking.  So I wanted to make sure that Martin understood that it wasn't email clients, per se, like Thunderbird, that are the problem.  It's links that are deliberately imbued with a lot of power.



Just ask Tavis Ormandy what he was able to do with some links at the top of this show, and you can see how powerful they are.  So that's a perfect example.  If one of those links that Tavis found was in Gmail, and you clicked on it, you would activate a query to the localhost running in that Trend Micro user's machine and export all your passwords to the cloud.  And that would work just as well in Gmail, if Gmail themselves didn't filter it, as it would in Thunderbird.  So it's the links that's the problem, not the client.



LEO:  Angelica Landry in Arizona notes that she is a girl.



STEVE:  And you'll know why I chose this.  This is heartwarming.



LEO:  Hi, Steve and Leo.  First introduced to Security Now! in a security class while working on my undergraduate degree.  Our professor required us to regularly listen to an episode - oh, thank you, professor - and write up a summary, including our thoughts.  At first I saw how long the episodes were, and I thought, "Gasp, how will I have time for this and all my other work?"  But after a few episodes I was hooked.



Two years later, and I still listen to you two.  And I get excited when I understand and can follow along with various subjects.  When I started getting behind and missed a lot of episodes due to life getting in the way, I began making Security Now! episodes part of my morning routine, and I listen while in the shower and getting ready.



But one thing I've noticed on Q&A episodes, there are a lot more males sending in questions and feedback.  I want to hear an occasional shout-out to your female fans out there.  Even if you don't do a shout-out, just know I'm a female listener and a big fan.  Thanks for what you do.  I appreciate you both.  Thank you, Angelica.



STEVE:  I liked that.



LEO:  It's nice.



STEVE:  And she's right.  I really, from her perspective, I could see where she's going, hey, you know, where are the girls?  And we never have any.  So now we do.



LEO:  The network itself, TWiT itself is about 95% male.  But there are women, lots of them, in chat.



STEVE:  Oh, you mean in terms of the demographics of your followers.



LEO:  Demographics.  Last time we did a survey, which was a while ago.



STEVE:  Right.



LEO:  But different shows have different percentages.  iOS Today and The Tech Guy show absolutely have far more female fans.  This show would probably have the lowest number, and that's something I'd love to fix.  It's just kind of the nature of, right now, the state of the [crosstalk].



STEVE:  Well, we'll fix it one Angelica at a time.



LEO:  Yeah.  Certainly, I hope we - and let us know, Angelica.  I hope we don't do anything to discourage female listeners.  I hope, I absolutely hope we don't do that.



STEVE:  I'm sure we don't.



LEO:  Jared in Australia brings us the Uber-Geek Tip of the Week:  Mozilla has more DIY config options than I ever knew existed.  For user convenience, Firefox trims the HTTP(S) protocol designation off the front of the displayed URL, even though it's present if you copy it to the clipboard.  But I wanted to see it.  By the way, this is a trend in browsers I do not like.  Safari does the same thing.  In fact, Safari trims everything off except the root domain.



STEVE:  You can hardly tell where you are.



LEO:  I hate it.  Although, you know, Tim Berners-Lee, the creator of WWW, did tell me, "I never thought humans would read these things, or I wouldn't have made them so non-human-friendly."  These are supposed to be machine-readable URIs, http://.



STEVE:  Oh, that's right, because he was originally burying them in hrefs.



LEO:  Right.



STEVE:  And so they were readable links, yeah.



LEO:  Machine-readable.  He never thought about browsers, people typing in URLs, all that stuff.  That just didn't...



STEVE:  Yeah.



LEO:  Remember, when he was doing this stuff, Gopher was kind of the state of the art for navigating the web.



STEVE:  And WHOIS was an exciting adventure.



LEO:  Yeah, ooh, finger me.  So in Firefox, in the about:config  page, which everybody should browse around, and we've talked about that a lot, search for the word "trim," and you'll find the option to disable that display-simplifying trimming:  Set "browser.urlbar.trimURLs" to "false."  Uber cool!



STEVE:  I really, you know, I have to say, this bothers me, or bothered me.  It hasn't now for the last day since I found, or since last night I found Jared's note.  I went to about:config, typed in "trim" into the search term.  It pulled up two instances of the bazillion little config options that are there, and I double-clicked on it, and it flipped it to false.  And now I can see http://.  I see the whole thing.



And what was interesting is that I'm cutting and pasting links a lot as I'm doing newsgroup postings and sending things to Twitter followers and so forth.  And I'm always sort of nervous because Firefox is not showing me the whole URL.  And of course I verify that it does paste it into the clipboard.  When I do a copy, it's in the clipboard, so it does then paste properly.  But I'd rather see it than not.  So Jared, thanks for the heads-up on that.  And to all of our listeners who would like to know about that, I'm glad to we do now.



LEO:  I'm with you on that.  I think that's, well, because we're old-timers.  But I think for your own safety it's really important to see where you're going.



STEVE:  Yeah, just as a double-check.



LEO:  Yeah.  So that's why I'm not crazy about that.  Charles Turner has our last question, I'm sad to say, our last question.  He's from Virginia Beach, Virginia, and he's wondering what we think the future holds:  Steve and Leo, I'm taking advantage of the holiday podcast doldrums to get caught up on back episodes of Security Now!.  Way back in Episode 231, that was January 14, 2010 - five years ago - you were rather down on Apple's looming announcement of the iPad, not knowing how the iPad would shape technology during the subsequent years.  Granted, making predictions is a precarious business.  But if you need fodder for upcoming Q&A episodes, I'm wondering, what do you see on the horizon that may shape computing, in the loosest sense of the word, technology for the next five to 10 years?  So a belated Merry Christmas and a Happy New Year.  Sincerely, Charles.



STEVE:  Sort of a fun...



LEO:  Were you down on the iPad?  I don't know if I was down on the iPad.



STEVE:  And I tell you, I mean, I...



LEO:  You loved it as soon as it came out.



STEVE:  Yes.  And I have said ever since, it is the number one device, aside from sitting in front of my whole workstation with five screens as I am right now, being illuminated in their glow, the number one device I use, I mean, second only to my main machine.  I'm a completely sucker for it.  So, yeah, I'm...



LEO:  I will stand by my statement on the day of, which was actually, now that I think about it, January 10th...



STEVE:  You know, the name we were annoyed with.  Remember we thought, iPad?



LEO:  Yeah, that was a dumb name.



STEVE:  Yeah.



LEO:  But I remember saying, after Steve's announcement, coming out and saying on our broadcast, this is the computer Apple was made to make.  This is what Steve Jobs always wanted to make.  This is the future of computing.  I think I said that.  In fact, I would say I was more bullish on it then than I am now.  I don't think it's actually lived up to some of its promise.



STEVE:  Well, and I think it hasn't grown well.  I loved the dialogue that you were having at the end of MacBreak Weekly, talking about, for example, I mean, basically a lot of what you were saying was that - you were talking about the new version of iOS, the little incremental release that adds a few things.  For example, the nighttime, the removal of blue from the screen is one that I think is very, very cool.



LEO:  Interesting, isn't it, yeah.



STEVE:  Yeah.  And, you know, all...



LEO:  So what do you think?  I mean, he's giving us a chance to embarrass ourselves five years from now.  I don't like to predict technology futures because I think one of the things that makes technology interesting is that really it's driven by the discontinuities, by the paradigm shifts, by the unpredictable shifts.  So you can predict, obviously you can predict, based on what's going on right now, where those things will go.  But what you really don't know - and Bill Gates famously missed the Internet.



STEVE:  Yeah.  And so you're right.  So there are things we cannot predict.  My feeling is that mobile technology is probably past its dramatic revolution stage, in the same way that desktop computing is.  Microsoft basically is looking for stuff to do in order to create new versions of Windows.  I mean, for example, it's why I'm using an OS that was released in 2002 just fine.  Works perfectly for me.  Nothing has happened in the last, what, 14 years that, I mean, I'm using newer applications, but not the OS.



So I think my feeling is that mobile technology, we're not seeing revolutions now, we're seeing evolution.  So I think we're refining what we have, making tweaks to things, things like UI tweaks, like the force input that Apple has just added and so forth.  And I think still unclear is whether watches will ever be more than just sort of a small market curio, maybe multifunction.  And problems will get fixed.  I remember the first laptops that were "luggables," as we called them, that bear almost no relationship to what we have now.  So the early, you know, the first-generation watch problems, I'm patient to think that they'll ultimately get solved.  And I think that stereo goggle technology, to step back and generalize all of that, the whole idea of creating more immersive gaming experiences, that's something that we're going to see.



And we really are seeing, as the cost of technology drops, new things possible.  Like I also love my Amazon Echo, which is listening to me, and then the television sets off from time to time, more than I do.  And so that kind of technology.  And clearly we're going to see what's going to happen with the Internet of Things.  Lots of ideas.  Many are dumb.  Some are good, like the Ring Doorbell.  That's a win.  That's an Internet of Things win.  Whereas, you know, I'm not so sure that something that smells inside of your refrigerator and tries to send a signal outside...



LEO:  That's a pretty funny one.



STEVE:  ...is going to catch on.



LEO:  Yeah, it's...



STEVE:  And from a Security Now! standpoint, I think we're going to see the continued decline of third-party plugins, famously Java and Flash, and them being replaced with the ever more capable native JavaScript and HTML5 platforms.  So those early sort of crutches to creating more capable web experience, that just - it's going native.  It's going into the platform.  And IPv6, I think it's - even though, I mean, we talked about it last week.  Last week's Picture of the Week was that, not quite exponential, but it had an exponential liftoff; then it was going linear.  But it was definitely happening after 20 years.  In the last few years it's happened because we actually did start running out of IPv4.



So I think, you know, certainly what'll be interesting is IPv6 being offered by ISPs, and then routers sending them into our home networks so that we're no longer 192.168, we're actually a 128-bit IP.  And then every device in our home, all of these IoT things, can have its own IP.  So, yeah, there will be some changes.  And I think a lot of refinement.



LEO:  I can make one prediction.  This show will be around in 10 years, and we'll still be talking about hacks and flaws.  And, you know what, we'll still be able to do that segment, "You're Doing It Wrong."



STEVE:  Yeah.



LEO:  Because that's not going away.



STEVE:  Nope.



LEO:  And as stuff gets more complex, it doesn't get more secure.  But I don't think the bad guys will win.  I just think that it will be a continued seesaw back and forth.



STEVE:  Think it'll be, exactly, it'll be a simmer, like we have.



LEO:  Yeah, yeah.  Well, that's good news because we need Steve Gibson here, whether there's security flaws or not, every Tuesday at 1:30 p.m. Pacific, 4:30 Eastern, 21:30 UTC.  You can count on that.  Steve never misses an episode.  And if you want to watch live, we would love it if you do, but you don't have to.  You can always get on-demand audio and video after the fact.



Steve's got the audio and transcripts, too, so you can read along as you listen, really well done transcripts that Steve pays for from Elaine Farris.  And those are at GRC.com.  While you're there, do ShieldsUP! because it works, get SpinRite because it works, and all the other great services that Steve provides.  The only one you have to pay for is SpinRite.  Everything else is free.  SQRL's coming along.  I bet we're going to get a SQRL update sometime in the near future.



STEVE:  Yeah, we just, two days ago, I just keep thinking we're done, and then it's like, oh, wait, wait, wait, we need to fix this.



LEO:  One more thing. 



STEVE:  So we just changed, we're in the process of changing the storage format.  SQRL used to allow you to change, to rekey your identify once, the idea being you may never need to, but if somehow it got away from you, you might need to rekey.  The problem is that the system only supported one - it only supported the storage of a single previous key.  And that's important because, when you went to websites that knew you by your previous key, you need to seamlessly update to your current key.  All of that works.  All of that's transparent.  It's very elegant.  But there was always some contention in the newsgroup where I've been doing all this, that we needed more.



And so, after around and around and around, we decided on four, four previous keys plus your current one.  But doing that necessitates reengineering the identity storage for technical reasons.  So I'll be doing that in the next couple days.  But we're getting very close.  Once that's done, there's one bug that was reported, and a bunch of cosmetic things.  And I was never using the term "rekey," which I'm working to be conscious of.  We used to talk about creating a new identity.  But you're really rekeying your identity, which I think is much clearer.  So I have to change some of the UI text to catch up.  I've just been working on the core technology.  But very close.



LEO:  Yeah.  Good.  Can't wait.  We also have the show at TWiT.tv/sn, and you can subscribe on every podcatcher known to man and get the apps on the Apple TV or the Roku or the, I mean, they're just everywhere.  Security Now!.  You ought to listen.  If you want to be in the studio, we do have limited seating during the show, and you can always come join us.  We have a nice couple who's here visiting us from Wisconsin.  They're falling asleep, but that's okay.  It's the afternoon.  You can always email tickets@twit.tv.  We'd be glad to have you.  Thanks, Steve.  We're always glad to have you, and we'll see you next time.



STEVE:  Always fun, Leo.  And I understand why they're sleeping.  Two raised to the 128 factorial doesn't wind everyone's clock.  But I know that we have some listeners who get a big kick out of that, so...



LEO:  That's hard. 



STEVE:  Yeah.  Thank you, my friend.  See you next week.



LEO:  Thank you, Steve.



STEVE:  Bye-bye.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#543

DATE:		January 19, 2016

TITLE:		LostPass

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-543.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm	



DESCRIPTION:  Leo and I cover another busy week of security news.  Then we focus upon the recent "LostPass" phishing hack of LastPass, revealed at ShmooCon, and discuss the Internet's serious problem with phishing of all kinds.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We're going to have a great time talking about some major flaws in Internet of Things devices like the Ring Doorbell, and even our beloved LastPass.  Is nothing sacred?  Don't worry.  It's all going to be fine, next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 543, recorded Tuesday, January 19th, 2016:  LostPass.



It's time for Security Now!, the show where we cover your security online with this guy, our Security Guru in Chief, Steve Gibson from GRC.com.



STEVE GIBSON:  Hey, Leo.



LEO:  Are you sleeping better?  You sent me a graph of your sleep.  It didn't look good.



STEVE:  Oh, boy, is it good.



LEO:  Oh, it is good now.



STEVE:  Nine and a half hours?  Nine and half hours of uninterrupted sleep.  I got up three times.



LEO:  That's what I saw.  And I thought, but, you know, we're old.  We have to pee.  Let's face it.



STEVE:  Well, a total of eight minutes awake during that.  The sum of those three events was eight minutes of awake and went right back to sleep.  An hour and a half of slow wave deep sleep.



LEO:  Nice.  Oh, I'd love that.



STEVE:  Yeah.  Anyway, so I've been focused on sleep for about 90 days.  Actually, almost exactly 90 because it was the middle of October that I decided I was going to really address the issue of insomnia, which is a huge issue for a growing number of people as our society ages.  And it's been an interesting, all kinds of fits and starts and dead ends.  But I'm zeroing in on what I think will be a very practical formula.  And you will be among the first to give it a shot.



LEO:  Good.  And you're using the Zeo still?  Is that how you're monitoring this?



STEVE:  Yeah, all of those diagrams that you saw...



LEO:  Yeah.  I still have mine.



STEVE:  ...are from the little - from the Zeo headband.  



LEO:  But just to give you a comparison, folks, he got an hour and a half of deep sleep.  Typically I'm, like, 10, 15, 20 minutes in an eight-hour night.  And I sleep well.



STEVE:  Right.



LEO:  But I don't get a lot of that deep, deep, deep sleep.  And so that's pretty impressive.



STEVE:  Right.  And that's what releases growth hormone.  There are pulses of growth hormone release during deep sleep.  And it's, you know, it's something you want a lot of.  So anyway, as soon as I have some results, we'll talk about it further.



LEO:  Good, good, good, because I want to know how to do that.



STEVE:  In the meantime, there's probably been, I mean, I'm interrupting myself.  There's probably never been more tweets about a single question than I've had since ShmooCon's presentation of LostPass, which is a look at a phishing attack, you know, P-H-I-S-H-I-N-G, phishing, basically a spoofing attack on LastPass.  And, you know, that's to be expected.  We've got a bunch of listeners, and LastPass is the password manager that we've chosen, the one I'm using, the one you're using, the one we recommend.  And certainly not the only one.  And there's nothing worse about LastPass than the others in this regard.  It's because it's the number one password manager that it's got the biggest target painted on it.



Anyway, Twitter feed just went crazy.  And so, and finally, yesterday, I tweeted that this will be what we're talking about.  Just to hopefully sort of stem the tide so that people wouldn't keep saying, hey, Steve, have you found it?  Do you know about this?  Anyway, so...



LEO:  That's my favorite one.  Did you read this?  Three weeks afterwards.  Yeah.  Yeah.



STEVE:  So we're going to talk about LostPass as our main topic.  But it's part of a broader discussion that I want to have about phishing in general.  But all kinds of things happen.  It's like IoT day, or IoT week, the Internet of Things.  We've got the Ring Doorbell question that again was another popular tweet because they're a sponsor of this podcast and the TWiT network,  D-Link webcams, Amazon sending their users' WiFi passwords to the cloud.  And there is a chant that is just going to be part of our discussion of IoT from now on.  I've said it before.  I'll have an opportunity to say it about seven times today.



Malvertising's in the news.  We've got another backdoor was discovered in a major Internet appliance, very much like the Juniper problem.  A little simpler than that one.  That one was super high tech.  This one is like, duh, but still difficult to explain and a little bit uneasy-making.  An Assembly bill that's been reintroduced into New York State.  Some Microsoft and Windows 10 news.  And of course some errata, some miscellany, and other stuff to talk about, in addition to what is this LostPass?  What does it mean?  How has LastPass reacted?  And sort of more broadly, what can we do in the industry because the problem with phishing is something that's persistent in the Internet.



And in fact, I never talked about it, but last summer we spent several months over in the SQRL group, it's one of the reasons that, like, okay, it's like, wait, what's going on?  Well, I came up with an idea that we pounded on for several months, and it ended up evolving into the spec somewhat, although we didn't end up implementing what I had hoped we could.  We've got hooks now in the spec for the future, which absolutely forecloses, sort of preemptively, exactly these kinds of problems.  So anyway, lots of good stuff.



LEO:  You saw that the Amazon Dash now is a platform.  That's the button, by the way.  Here's a little security tip.  You know, so the Dash Button, you know, it's $5, and it's a button, and it's assigned to a product, so you just push the button, and more product comes.  And I got one for toilet paper.  I thought, what better?  But I put it in the pantry, kind of at eye level for a 13 year old?



STEVE:  Mmm.  Hard not to push that button.



LEO:  We have a lot of toilet paper.  It won't order unless - until the order comes.  But, you know, with Amazon Prime, that means every other day we get another case of toilet paper.  So I moved the button.  But they're planning to put these in, Amazon's announced they're going to put these dash buttons in washing machines, in microwave - everywhere.



STEVE:  Oh, my goodness.  You mean they're going to be incorporated by the OEMs.



LEO:  Yeah.  The OEM can set it up to automatically order resupply.



STEVE:  Okay.  Now...



LEO:  Is that wild?



STEVE:  I will begin with the refrain on that note.



LEO:  What could possibly go wrong?



STEVE:  The refrain is, "All of our IoT devices need their own isolated WiFi network."



LEO:  Yeah.



STEVE:  I've said it before.  And that is the history of the first few stories in today's podcast, starting with the Ring Doorbell, which we love and is, as you know, well designed, well engineered.  What happened is some penetration testing guys said, "Eh, let's take a look at this Ring Doorbell."  And it's funny because their blog about this - which was titled "Steal Your WiFi Key from Your Doorbell?" and then it says "IoT WTF?" - their own blog posting starts off like an ad for the Ring Doorbell.



They start off saying:  "The Ring is a WiFi doorbell that connects to your home WiFi.  It's a really cool device that allows you to answer callers from your mobile phone, even when you're not home.  It's one of the few IoT devices we've looked at that we might even use ourselves.  It acts as a CCTV, automatically activating if people come close to your home.  You can talk to them, to delivery couriers, to visitors, et cetera.  It can even hook up to some smart door locks so you can let guests into your home.  It's genuinely useful."  And then they say, "Unlike most IoT devices."



So these guys are no generic fan of Internet of Things connected stuff.  But then they took the Ring apart.  And what they discovered was - and I don't know, I don't understand what the sequence of events is.  This may be a delayed posting because Ring's technology, as we'll get to in a second, already nailed this.  I mean, Ring is an example of, in my opinion, doing this as right as it can be done.  But what these guys explained is that, from the outside, as we know, using a Torx T4 driver, you unscrew the two screws on either side of the underneath, and that allows you to remove sort of the front half.  That then allows you to dismount it from the door.  And on the backside is an orange button which is part of the setup process.



And what they discovered was that, when you press the setup button, it essentially brings up an access point over WiFi which is easily discoverable.  And if you then bring up the URL /gainspan/system/config/network, that's an XML file containing a wealth of information including your WiFi password, in the clear.  And they show this in their blog post.



So of course the whole point of this post was here's a device mounted on the outside of your home which can be disassembled and, if disassembled and activated and then probed, would allow somebody who never entered your home to obtain the WiFi password that this device was using.



Now, they say, after explaining all of this, they say, "HOWEVER," in all caps, "kudos is due to Ring for responding to our vulnerability alert within a matter of minutes.  A firmware update was released earlier this week that fixes this issue, just two weeks after we disclosed it to them privately."  And they said, "Good job, Ring."



LEO:  So it was fixed before they disclosed it publicly?  Is that correct?



STEVE:  Correct.  Yeah.  So these guys acted responsibly.  They contacted the vendor, Ring, and they said, hey, you know, with just a Torx T4 and a laptop, we were able to obtain the WiFi password which you've got in your - which they have to have somewhere in their device.



LEO:  Plus they'll have video of you doing this, by the way, but that's okay.



STEVE:  Approaching the door.



LEO:  Approaching the door, yeah.  Should have a nice clear shot of you trying to get into the thing.



STEVE:  Yes.  So what they appreciated was that, unlike, you know, how many stories have we shared where vulnerabilities of even a much more dire nature were communicated to the manufacturer, and nothing was ever heard.  I mean, just like, dead zone.  Yeah, we tried to contact them every week for the last four months, and we're going to go public with this because we never heard back anything.  Instead, Ring responded in two minutes and said, yikes, thanks for that, we'll get on it, and we will let you know as soon as we have an update.  And that update was available two weeks later.  Now...



LEO:  By the way, more than available because - and this I did not know about the Ring.  They can push out an update.  So they pushed it out.



STEVE:  Well, exactly.  I was just going to say.  So here's Ring's response to this.  The title of Ring's response was "100% of Active Ring Video Doorbells Keep Your WiFi Password Secure."  And this was addressed to the Ring community, saying:  "You may have seen a report that Ring customers' WiFi passwords are currently vulnerable.  This is false.  We became aware of a potential security issue regarding WiFi passwords last year."  And this is why I'm a little confused about the timing, but I guess technically here we are only, what, a little over two weeks in.



LEO:  Yeah, yeah.



STEVE:  So I guess very late last year, to have all this timing make sense.  They said:  "...last year, and promptly developed a solution to ensure WiFi passwords are secure with all Ring Video Doorbells.  This fix was automatically pushed to all active Ring devices via a firmware update within 24 hours of us releasing the update.  No user action was required.  This means 100% of Active Ring Video Doorbells are currently operating on a secure version of our firmware, and your WiFi password is secure.



"Every day your Ring video device automatically checks for new firmware updates.  There is a chance that some Ring devices currently on store shelves have firmware that does not contain the fix.  But as soon as those devices are set up, the firmware will automatically update to latest version," which at the time of this posting was 1.6.39, "and there will be no WiFi vulnerability.  If you'd like to double check that your Ring is operating on the most up-to-date firmware," that is, v1.6.39 as of this moment - "you can simply open your app, click on your Ring device, and go to its settings page to view the version of firmware your device is running."  Then they have some screenshots.



"We at Ring, they say, work every day to keep your home, neighborhood, and community safe.  If you have any concerns or would like to speak with a Ring representative for more information," blah blah blah.  And this was Joshua Roth, their CTO, the Chief Technology Officer.  And I should mention that these Pen Test guys were, I thought, very evenhanded.  Because they noticed that the Ring Doorbell used a WiFi module from Gainspan, and that the URL was /gainspan/, you know, blah blah blah, they presume that maybe this was just sort of built into the module which Ring incorporated.



So on one hand they say:  "This is quite a fail:  walk up to a door, remove doorbell, retrieve user's WiFi key, own their network."  And then they continue:  "Did Ring ever intend to expose this functionality?"  Well, we know they didn't.  "Or was this just default functionality that Gainspan have in their firmware?  As it's a standard Gainspan URL, it looks like they just hadn't disabled the configuration."  And then they continue:  "The WiFi key is still stored" - and this is an important point that's where I want to go with this after I'm through.  "The WiFi key is still stored in the doorbell somewhere.  How well protected is it now?  It's most likely stored in the module.  Somebody with a soldering iron could possibly get it.  Having physical access to the doorbell means we might be able to upload modified firmware."  And then they say, "Your doorbell becomes a backdoor?"



Now, so two things.  This is a fundamental problem with, as they mention, any physically exposed, WiFi-connected device.  From an engineering standpoint, I could imagine a few things they could do.  They could actually arrange not to store it in the device, but pull it from a Ring server.  But then that's problematical, too, because then your WiFi password, encrypted, no doubt, but still it's off-premise.  Or it could be buried inside a chip that cannot be read from.  And we know there are all kinds of ways to do that.  There are ways that it would be possible to have the WiFi password there in a way that, like, on the same chip as the WiFi radio itself so that at no point is it exposed in any sort of transaction on any bus that's there.  But, you know, we don't know that that's what they're doing.



And what this takes me back to is the conversation we've had many times about how it was impossible for DVD players or even Blu-ray to decrypt an encrypted disk in a viewer's living room and ever think they could retain control of it.  Everything had to be there to decrypt the disk in order to display the movie.  So it was inherently an impossible problem.



So there's an aspect of this where sufficient engineering for this or any similar device - and I'm not in any way picking on Ring.  They've demonstrated, I mean, more responsibility than we've ever seen from anyone else in the industry.  And the service they're offering, the device they're offering has to be on the outside to do what it does and has to be on your WiFi network to do what it does.  So the best they can do is to make it really difficult, I mean, up to the level of effectively impossible, by embedding the WiFi password in a way that it cannot be read back.  We don't know if they're doing that.



And so that brings me to my second point, the refrain, the IoT, the Security Now! IoT refrain:  All of our IoT devices need their own isolated WiFi network.  I just, you know, I've said it before.  Routers with split WiFi are becoming now commonplace, you know, so-called "guest WiFi" access.  The one I most recently set up was some Netgear.  And it offered me to have that, and there was a setting there.  Do I want to allow the guest WiFi to have visibility to the primary WiFi?  No.  I don't.  I want the guest WiFi to have access to the Internet and not the rest of the internal network, whether wired or the primary WiFi.  I no longer think - I never did think this was an option.  It really isn't an option to put these sorts of devices on your - to have a single wireless network for your entire environment.



LEO:  That's a great idea.  I didn't even think of that.  So you set up the guest WiFi, and you put all the IoT things on that.



STEVE:  Yes.



LEO:  And then the best an attacker could do is access that.



STEVE:  Exactly.  So they get, what, free WiFi.  Well, you can get that from Starbucks.



LEO:  Right.



STEVE:  So, you know, big deal.  I mean...



LEO:  Right.  That's interesting, yeah.



STEVE:  Yeah.  So, I mean, and I just - these guys have acted responsibly.  Now, another example is our second story, and that is that a group called Vectra Threat Labs took a close look at a generic $30 off-the-shelf D-Link webcam.  So IoT.  And I'll just summarize what they said because they put it together beautifully, as well as I could.



They said:  "Reports of successful hacks against Internet of Things devices have been on the rise."  Yeah, because Internet of Things devices are on the rise.  And apparently we're going to have buttons, Buy It Now buttons on all of our things from Amazon.  "Most of these efforts have involved demonstrating how to gain access to such a device or to break through its security barrier.  Most of these attacks are considered relatively inconsequential because the devices themselves contain no real data of value," you know, no credit card information or privately identifiable information, so forth, personally identifiable information.



They continue:  "The devices in question generally don't provide much value to a botnet owner, as they tend to have lots of bandwidth, but very little in terms of CPU and RAM.  However, these devices get more interesting to sophisticated attackers when they can be used to establish a persistent point of access in a network.  Putting a callback backdoor into a webcam, for example, gives a hacker full-time access to the network without having to rely on infecting a laptop workstation or a server, all of which are usually under high scrutiny and may often be patched.  On a tiny device there's no antivirus and no endpoint protection.  In fact, no one thinks of the device as having software on it at all.  This makes these devices potentially inviting for persistent attackers who rely on stealthy channels of command-and-control to manage their attacks.  The downside for the attacker is that this class of devices doesn't usually have any persistent storage that is really usable."



So, for example, the malware that users are typically downloading on their PCs, it's megabytes, but they've got terabytes of hard drive.  So that's not a problem.  These things are typically really lean.



So these guys continue:  "Instead they use NVRAM (nonvolatile RAM) to store configuration and the flash ROM to store the running code.  So the attacker's hope for real persistence rests on being able to control what will be in the flash ROM.



"In this blog we will explore how difficult it is to create a new flash image that could contain all the tools we need to have a real persistent backdoor to the network on which the device is installed.  Once we have such a flash image, putting it in place would involve 'updating' an already deployed device, or installing the backdoor onto the device somewhere in the delivery chain" - remember, this is sort of - this is one of the things that Snowden talked about years ago - "in other words, before it is received and installed by the end customer.  For this experiment to be meaningful, it's imperative that the device continue to perform its normal function.  Otherwise it would immediately raise suspicion or cause the customer to replace the device with a working version."



Now, I've skipped most of their blog posting, but Kaspersky picked up on this and summarized it in a few lines, saying:  "The report explains the attack against a $30 D-Link WiFi webcam, starting with the researchers being able to dump the contents of the device's flash memory chip for analysis.  This particular device's firmware included a U-Boot and Linux kernel and image.  They were also able to dump the contents of the Linux image and access its file system" - and this all sounds very much like what we know people are doing with routers all the time.  So here's something of sort of similar power that just looks like an appliance with much less sophistication than a router, but it's running Linux - "where they found," writes Kaspersky, "an executable file used to verify and update the firmware.  By analyzing the process by which the firmware is updated, they were able to remotely add a connect-back Socks proxy to the Linux system."



So essentially this says that this particular $30 IoT webcam can be remotely hacked and a backdoor added to it by updating its firmware because taking one device which allows all of its contents to be dumped, and now we're seeing this is a recurring problem, that is, sort of a recurring theme of Internet of Things devices is that, if you can dump them, you can reverse-engineer them.  And so they figured out how the update system is protected and broke its protection in order to install whatever they want.



So it's doubtless the case that it would be possible to make this more secure, to actively thwart this kind of attack.  And, you know, we see, for example, that our iOS devices, they've got all kinds of strong protection against malicious updates.  This webcam doesn't.  It's a little $30 gizmo that you plug into your network.  And so the refrain is we don't want this on our primary WiFi network.  Give it its own network.  We're still in the early days of Internet of Things.  And they're just not secure yet.



I think we know that there's some work being done by various standards committees on establishing some security operability standards for Internet of Things devices.  That's good.  But it'll take a few years for that to happen.  And then we know how non-rapidly the industry tends to adopt new standards.  Just look at any of them, IPv6, SHA-256 and what a problem that's been, and so forth.  So I just - the standard operating procedure is going to have to be either get a split network WiFi router or a second WiFi hotspot, set it up with its own network, and use that for your Internet of Things stuff.



And hot on the heels of this, somebody tweeted me somebody else's tweet, so a retweet, showing a screenshot from the - and I won't say the name of the app, which is Amazon's Echo name, where they explain about how they save the user's WiFi passwords to Amazon's servers.  And in the FAQ they say - oh, and it is optional.  But they're painting it as a benefit, which many users may feel it is.  They ask themselves the question in the FAQ:  "What's the benefit of saving my WiFi passwords to Amazon?"  The answer:  "Once you save your WiFi passwords to Amazon, we can configure your compatible devices" - your compatible Amazon devices - "so that you won't need to reenter your WiFi passwords on each device."



So, and the way the Amazon supply chain works, when I buy an Amazon Fire TV box, it already is associated with my Amazon account.  So presumably it's able, maybe, to have my WiFi password in it because Amazon has it because I had previously shared, I used some other Amazon device, and they were syncing through the cloud.  So again, this is classic tradeoff of convenience versus security, and it is optional.  So it's good that it is, but it's something that users should be aware of.



And again, better to have it on its own network.  Who knows what will be revealed about the security of any of these devices over time.  I mean, we've spent years following the security of a mature family of operating systems, struggling, where security has been a huge focus, and a big deal, and often a selling point.  And so compare that to the infancy of all these gizmos that are in a big hurry to get into the market and get themselves installed and establish a foothold.  You know, they're just at the beginning of a decade that we've just gone through on desktop computing systems.



So the good news is a lot has been learned by the industry that doesn't have to get relearned, much the way Google was able to learn a lot of lessons from the browsers that preceded it when they did Chrome, so they had a lot less pain to go through in the beginning.  But still, as we know, security is not easy.  So I just, you know, the number one recommendation has got to be these gizmos, all of these IoT things, need their own WiFi network.



So we've talked about the whole advertising, adblocking, malvertising and so forth.  In the last week the Forbes website had an interesting event occur.  The Forbes readers are now being asked to turn off adblockers when they visit the Forbes site.  And unfortunately, last week, when people did that...



LEO:  Oh, no.



STEVE:  ...it immediately put a pop-under behind their browser, which all of our listeners would be immediately suspicious of.  It was the "Your Java version is out of date.  Click here in order to update."  And on Engadget a columnist who uses the pen name, I assume it's a pen name...



LEO:  No, that's her real name.



STEVE:  Violet Blue is?



LEO:  Yeah.



STEVE:  Okay, cool.  Anyway, she said:  "The real reason" - now, I have to understand she's way off, she's way in the anti-advertising side.  She said, in fact, her column was titled, "You Say Advertising, I Say Block That Malware."



LEO:  Mm-hmm.



STEVE:  She writes:  "The real reason online advertising is doomed and adblockers thrive is its malware epidemic is unacknowledged and out of control."  Now, I think that's overstating the problem dramatically.  I wouldn't say that it's a malware epidemic we have.  But it's a concern.  And so we all are aware that we're unfortunately safer if we block ads because it is now an active delivery conduit for malware.



She writes:  "The Forbes 30 Under 30 list came out this week, and it featured a prominent security researcher on the list.  Other researchers were pleased to see that one of their own was getting positive attention and visited the site in droves" - okay.



LEO:  Oh, boy. 



STEVE:  Maybe that's a little much.  I'm not sure there are droves of...



LEO:  Security researchers?



STEVE:  ...security researchers - "to view the list.  On arrival, like a growing number of websites, Forbes asked readers to turn off adblockers in order to view the article," she writes.  "In doing so, visitors were immediately served with pop-under malware, primed to infect their computers and likely steal their passwords, personal data, and banking information."  And in fact it was that, it was the trojan we've talked about often that does those things.



She says:  "Or, as is popular worldwide with these malware exploit kits, lock up their hard drives in exchange for Bitcoin ransom."  And I have a link to a tweet of the person who saw this.  If you want to, Leo, you can click on the link, and you'll see something that is very familiar to us.  I said in this instance it was a spoof of the familiar "Your Java is out of date and must be updated" message.  Which our listeners would know not to pay attention to.  And again, if we did fall back on the adage or the advice, never install anything you didn't go looking for, this certainly qualifies as something you did not go looking for.



LEO:  And speaking of phishing, they're even kind of duplicating a true Java update warning.



STEVE:  Yes.



LEO:  Yeah.  Although the site that the warning comes from is fugupdates143 dotcom.



STEVE:  Yeah.



LEO:  So I'm not - I don't know if any of our listeners would click on that.  Apparently I just did, so I apologize.  [Crosstalk], yeah, mm-hmm.



STEVE:  Yeah.  Just another example of, unfortunately, the fact that sites are, as we predicted, this was the foreseeable consequence of adblocking, with sites detecting that ads were not being pulled and saying, hey, please consider supporting the site by lowering your adblocking shields.  And unfortunately, in this instance, it was very public; and a lot of security researchers - a "drove" of them - were then exposed to pop-under malware.  Or at least an attempt at that.



Okay.  So we talked a couple weeks ago about the sort of jaw-dropping Juniper exploit, where an elliptic curve was modified in such a way that it really was suspicious and looked as though it was done in a way that would allow this router essentially to create a hidden backdoor in the router.  Well, another one has been found that's much less high tech.



There's a company, Fortinet, F-O-R-T-I-N-E-T, that's another one of these big-iron corporate security appliance companies.  And this is very reminiscent of the Juniper router backdoor.  In this case, what was discovered in the firmware was a hardcoded SSH, that's the secure shell remote login, essentially, password.  And it's just, it's a very nice-looking password, FGTAbc11*xy+Qqz27.  So not something that you're going to guess.  But it was built into the firmware so that anybody who knew that had remote access to this equipment.  That's a backdoor.



So Fortinet, of course, rejected the characterization of this hardcoded password as a backdoor.  They responded in writing, saying:  "This issue was resolved, and a patch was made available in July of 2014" - okay, so that is a year and a half ago - "as part of Fortinet's commitment to ensuring the quality and integrity of our codebase.  This was not a 'backdoor,'" they have in their response, "vulnerability issue, but rather a management authentication issue."  Okay.  What?



"The issue was identified by our Product Security team" - and that's in caps, by the way, so I guess that's an official thing, their Product Security team - "as part of their regular review and testing efforts.  After careful analysis and investigation" - okay, how careful did it have to be?  It's a hardwired password.  "After careful analysis and investigation, we were able to verify this issue was not due to any malicious activity by any party, internal or external."  Okay.  So that means it was on purpose?



LEO:  It was accidental.  We didn't mean to do it.



STEVE:  I mean, none of this makes any sense at all.  "All versions of FortiOS from 5.0.8 and later" - okay, and that's on their version 5 track - "as well as FortiOS 4.3.17 [on their version 4 track] and later are not impacted by this issue."  Okay, meaning that's when we changed it.  But what's weird is they didn't eliminate it.  We'll get to that in a second.



So from what they said, and based on there is some version history available online, so that means that the hard-coded SSH password was active in FortiOS through at least 2013 and through the first half of 2014, when apparently for some reason they fixed it.  And we don't know how far back in time, maybe even earlier, it goes.  No advisory from Fortinet about this was ever published.  So for some reason a year and a half ago they changed it.  And why I say they changed it is a researcher told Dan Goodin, who of course writes for Ars Technica, that while the exploit no longer works as it once did - meaning hello, here's the password, and oh, look, I got root - the later firmware is still suspicious because it contains the same hardcoded string.  Which you've got to think is like, what?



Okay, so now what I'm immediately thinking is that they've added some port knocking.  Right?  They've put something in front of the open port that accepts this password.  They didn't take the password out, or even change it.  But now it's no longer exposed.



LEO:  But everybody knows it.



STEVE:  I wouldn't use this crap.  I mean, yes.  So probably what we now need is a full reverse-engineering of the firmware.  And somebody is probably going to find that, if you send SYN packets in a certain sequence to closed ports, it will notice that, and that's called port knocking.  And then that will authenticate you to then access the secure shell from that IP and give it the password that we all know and is now in the show notes.  So, wow.  Uh.  I'm just speechless.



LEO:  Yeah.



STEVE:  And this is starting to feel a little creepy, that for reasons we don't understand, that no one explains, that are just sort of like, oh, well, I mean, these guys are saying more even than Juniper.  Juniper was saying, we don't know how this got into our source.  This was never meant to be here.  The moment we discovered it, which unfortunately wasn't quickly, but we fixed it.  These guys are saying this was a management authentication issue, which says we deliberately built a backdoor into all of the equipment we ever sold to all of our commercial customers and never told them.



LEO:  Ugh.  Horrible.



STEVE:  Yeah.  I mean...



LEO:  Unbelievable.



STEVE:  ...these guys need to be out of business.  This is just so wrong.  And...



LEO:  [Crosstalk] name, too.  I think there are a lot of people use their products.



STEVE:  Yes.  And they've apparently simply obscured it.  How else could you explain...



LEO:  Didn't even fix it, yeah.



STEVE:  Yeah, how else could you explain that the string is still in the firmware?  And it's like, so it doesn't work the way it did, right, because now it's harder to get to the door.  But apparently they still want remote access, and they didn't remove it from themselves.  Believe me, this is - so my point is that here's two major players, both with serious remote, remotely accessible, persistent backdoors into their hardware.  We're not getting an explanation about how this got in there.  And so far it's like everywhere we've looked we've found this problem.  It's frightening.



So, okay.  I saw this last week, and I blew it off because I did a little digging, and it was legislation that was first proposed in, like, June or July.  I remember it was a "J" month, the middle like of last summer of 2015.



LEO:  Wait a minute.  Now I have to challenge you.  In your head it's stored, the month began with "J."  I don't know which month, but I just know it began with a "J."



STEVE:  Yeah, and it's down there at the bottom of the circular calendar.



LEO:  Your brain works weird.



STEVE:  It was a "J."  And it's like, eh.  And in the verbiage of the bill it says - it starts off:  "Relates to the manufacture and sale of smartphones on and after January 1, 2016 that are capable of being decrypted and unlocked by the manufacturer or its operating system provider."  And I thought, well, okay, that deadline got past.  So I just thought, eh, you know, and it didn't make it into last week's conversation.  But someone else tweeted to me that it had been resubmitted.



LEO:  Oh, lord.



STEVE:  And indeed it has been.  Now, I've heard of Walter Mosley and Patricia Fahy.  They're both honest-to-goodness politicians.  And so this is New York State legislation proposing a ban on the sale of encrypted smartphones.  Now, when you dig into this deeper, this is actually - it would be a ban on the sale of smartphones that the manufacturer cannot encrypt upon receiving a court order...



LEO:  Decrypt.



STEVE:  Exactly, which the manufacturer cannot decrypt upon receiving a court order requiring them to do so.  So this is one of the thrusts of, you know, one of the potential thrusts of legislation.  I did hear that there was some entourage from Washington that went to Silicon Valley recently, and that they were rebuffed.  And I have - that was just some talking head that said that, and I haven't had a chance to figure out what that was about.



LEO:  You've been rebuffed.



STEVE:  Yeah, sorry, but we're not interested in talking to you.  You guys are idiots.  We've already said no.



LEO:  Yeah.



STEVE:  So anyway...



LEO:  Well, and of course, if it had, if that passed in New York State, will, that would be the end of it because that's a big market.



STEVE:  Yes. 



LEO:  So it's not only insulting to the people of New York, it's insulting to everybody else in the country.  And the world.  Crazy.  Crazy.



STEVE:  Yeah, yeah.  I mean, and again, to me, a really fascinating contest that we're in the middle of and will doubtless be looking at this year and next year to see how this shakes out because, as we've talked about it before, the whole problem of what right do people have in the U.S. under our Constitution, where we have this whole issue of protection from unlawful search and seizure, yet a legal right for a search warrant to then breach that under certain terms and conditions.  Is that the way it's going to fall out?  And, wow, I just - it's going to be really interesting to see.



Meanwhile, in sort of a related story, I just got a - I thought this was interesting.  Up in Canada, in Toronto, a woman's elderly husband died, taking with him in his head the Apple UserID for the iPad that they shared.  He had a Mac that he used exclusively, but they shared an iPad.  And she had a card game on it that she liked.  And she knew what the unlock code was for the iPad, so she was able to unlock it, get past the lock screen and play cards until something happened that required her to use her Apple ID.  Maybe it needed to be updated or renewed or who knows what.  And she couldn't make any headway with Apple, so she asked her daughter to see what the daughter could do.



As the daughter said from her story, after many phone calls and two months of what her daughter describes as her runaround - daughter was named Donna - provided Apple with the serial numbers for all the items, her father's will that left everything to his wife Peggy, and a notarized death certificate, then was told it wasn't enough.  Donna said, "I finally got someone who said, 'You need a court order.'"



And she says, "I was just completely flummoxed.  What do you mean, a court order?" she said.  "I said that was ridiculous because we've been able to transfer the title of the house, we've been able to transfer the car, all these other things, just using a notarized death certificate and the will."  To which a Toronto-based estate attorney noted that there is not currently any clear law about this, and that Apple is asking for a court order as a means of protecting themselves against any repercussions from disclosing this information.  So this of course follows on our discussion last week of the LastPass security of assigning people whatever they call it now, emergency access.



LEO:  Emergency access, yeah, yeah.



STEVE:  Yeah, exactly.  So again, what we're seeing is more and more of the Internet is going into our devices.  And that's requiring more security.  Yet security requires that people know passwords.  And here's an instance where it wasn't known.  And my first thought was, well, just reset your pad and create a new account.  And of course the answer, it was covered in the article, is like, well, then she'd have to rebuy all of the things that she and her husband had purchased over time.  So it's like, eh, okay, well, [crosstalk].



LEO:  What would you do with SQRL?



STEVE:  Actually, SQRL - she and her husband would both know, would both share their SQRL password.



LEO:  Right.



STEVE:  And so she would be able to authenticate herself.



LEO:  But he neglected to share his password with her.  That's the problem; right?  He didn't share his Apple ID with her.



STEVE:  Correct.  Correct.  So, right, it is not, you know, at that level it doesn't offer any solution.  We still have that problem.



LEO:  Right.



STEVE:  Although SQRL does have the rescue code specifically for this purpose.  And so that would typically be, that's the kind of thing you would have in your will or in a safety deposit box or something because that is your ultimate get-out-of-jail card if you forget your password.  It is for password recovery.  And so that's built into the system.



LEO:  And if you put that in LastPass, in your emergency contact - the problem is it's not so much people who listen to this show are going to have this problem.



STEVE:  Right.



LEO:  It's going to be everybody else.



STEVE:  Right.  Well, and as we know, LastPass does have the ability to preassign a one-time password, a one-time password or passcode that you're then able to sequester somewhere and only get it when you need to.



So last week, or sometime between now and last week, I'm not sure exactly what day this was, Microsoft capitulated a bit on this Get Windows 10 backlash and has created an official Get Windows 10 blocker.  That is, they've added the technology for 7 and 8.1 to formally stop those operating systems from pushing you to upgrade.  I think this is aimed at Enterprise customers who just said, look, we need to control this somehow.



I created a bit.ly link, which I tweeted with this news when it came out late last week, bit.ly/no-gwx.  So that's bit.ly/no-gwx, no Get Windows 10, which just takes you to Microsoft's support page.  Now, the bad news is there's no Fixit button, where you just click that and it fixes it, because Microsoft still really doesn't want people to do this.  But they've begrudgingly created a means.  So, and in Microsoft Speak, the title of this is "How to manage Windows 10 notification and upgrade options."  And then they explain that qualified - yes, and Leo's still scrolling down the page.



LEO:  This is ridiculous.



STEVE:  It's crazy.  "Qualified computers and devices that are deployed in your organization and that are running Windows 7 Pro or Windows 8.1 Pro are eligible for" - and apparently not Home - "are eligible for the free Windows 10 upgrade offer and will be able to update through Windows Update."  And then it says "This offer is not available to customers who are using Enterprise or Embedded editions of Windows 7 and 8.1."  Okay, so the Enterprise editions never were doing this.  This is just for Pro users.



So I'll let people go to the link if they're interested.  I've already played with it.  It works.  I played with it on a brand new Windows 7 install that did present the little white offset windowpanes icon.  You install, essentially, either one of two, depending upon which versions of pre-10 you have, 7 or 8.1.  That is, Windows Update.  So you install a Windows update.  Doing that adds the feature of being able to formally shut down presumably all future attempts.  Microsoft of course has always had the ability to go around this, and they have in previous I-don't-want-Windows-10 efforts.  So we'll see how sticky this is.



But then, as this page explains, you need to go into the Group Policy Editor and add - or actually a new item has appeared named "Turn off the upgrade to the latest version of Windows through Windows Update."  So you enable that to turn it off.  And that's buried five levels down in Group Policy.  And then they also say you can do it with the registry, but it's not clear whether you can do one or the other.  And I think the change in Group Policy pushes the change to the registry because then when I went to the registry it was already there.  And that's a DisableOSUpgrade set to "1" under Microsoft\Windows\WindowsUpdate.  So I think you can do either one of those.



But apparently neither of those removes the icon, which is a separate problem.  So then they give you a registry change which is DisableGwx = 1, set down underneath Software\Policies in the registry.  And then, with any luck, you're good to go.  Alternatively, you can just run the GWX Control Panel, and it pops up.  And by the way, it was updated just yesterday, for those of you who are using.  And I know many people who are following us do because I've had a lot of tweets about it.



As of January 18th, the author writes, he says:  "I've just uploaded version 1.7.1.0 of the program.  It has lots of usability enhancements, particularly with Monitor Mode.  This version should reduce or eliminate the occasional 'false alarm' alerts that happened in earlier versions and also includes a preferences option where you can select the kinds of alerts you'd like to receive."  And he says this user guide is now up-to-date.



And he did solicit some input.  He said:  "Also, I'm looking for information on a new kind of Windows 10 notification that Microsoft appears to be pushing out.  If you have ever experienced the kind of Windows 10 desktop pop-up shown in the following picture" - on his page.  And remember you can just google "gwx control panel" in order to find his UltimateOutsider.com blog posting.  Anyway, he shows it and asks, if you do see it, to let him know because that's something which he believes might be getting around his latest update.



And I have to say that I did install that, and it was a little noisy.  It was, like, complaining after I'd already disabled things.  And I thought, eh.  You know, and I'm not one to install things I don't need to.  So for me, when I go to 7, I will be using this official Microsoft solution.  But, boy, it's not the kind of thing you want your aunt to try to do.  So you could just tell her to use this GWX control panel and just say, yeah, protect me.



LEO:  I doubt that Microsoft will still be doing this in 2020, when you upgrade to Windows 7.  I'm sure by then they'll have stopped.



STEVE:  Well, actually, they have another strategy, Leo.



LEO:  Yeah?



STEVE:  Thank you for the segue.  They've just announced that the next version of Intel's chips, the so-called "Skylake platform," will not be backward-compatible with previous versions of Windows.  And I'm not kidding.



LEO:  Wow, wow.



STEVE:  I'm just - I'm just stunned.  It's like, okay.



LEO:  So another way of saying that is future Windows versions will require Skylake or later?



STEVE:  Yes.



LEO:  That's really a more accurate - that's a crazy way that they said that because it implies it's Intel's fault.



STEVE:  Well, what's different is that Intel has always cared about being scrupulously backward-compatible.



LEO:  Yeah, no, it's not Intel's fault.



STEVE:  Right.



LEO:  Right?



STEVE:  Right.



LEO:  It's Microsoft.



STEVE:  So The Verge covered this.  And they said:  "Microsoft says new processors will only work with Windows 10.  Windows 7 and 8.1 won't be updated for future processors, starting with Intel's Skylake platform.  Soon," writes The Verge, "when you buy a new PC, it won't support Windows 7 or 8."



LEO:  What?  How the heck - what?



STEVE:  I know.



LEO:  So it isn't what I said.  It's not that Microsoft is requiring something in Skylake or later.  Somehow they're breaking compatibility.



STEVE:  Yes.  "Microsoft has announced a change to its support policy that lays out" - this is The Verge - "that lays out its plans for future updates to its older operating systems, and the new rules mean that future PC owners with next-generation Intel, AMD, and Qualcomm processors will need to use Windows 10."



LEO:  That's bizarre.



STEVE:  I know.  "It's not usual for old PCs to fall short of the minimum requirements of a brand new operating system."



LEO:  But this is the [crosstalk].



STEVE:  "But in this case, the opposite is happening," writes The Verge.  Microsoft and its partners will not be putting in the significant work necessary to make new hardware work with older versions of Windows.  The old operating systems, at best, will merely lack the latest updates; at worst, they may not function properly.



LEO:  It seems like you'd have to backwards patch the old versions to make them not work.  I don't understand.



STEVE:  Or do some - or literally...



LEO:  Unless it's Intel doing something.



STEVE:  ...sacrifice backward compatibility.



LEO:  I mean, is Intel doing, I mean, this sounds like Intel's doing it.



STEVE:  But it's all three manufacturers.  So on January 13th, Microsoft's blog posting was titled, and get this, "Windows 10 Embracing Silicon Innovation."  That's the way they sell this.  And Microsoft writes:  "Going forward, as new silicon generations are introduced, they will require the latest Windows platform at that time for support."  This is huge.



LEO:  The only way they could do this is if, for years, they've been putting into older Windows versions a CPU check.  And if it doesn't check, like if it said, well, are you a Core 2?  Okay.  If you're - wait a minute.  What is this Skylake?  You've never heard of that?  Don't run.



STEVE:  You're right.



LEO:  They must have done that.



STEVE:  You're right.  And they're [crosstalk]...



LEO:  Because Intel's still x86.  This is not - they're not abandoning x86.



STEVE:  The second line of their posting says Windows - oh, wait a minute.  It doesn't have to be all along.  It just has to be in the last few months.



LEO:  An update went out.



STEVE:  Yes, a security, a, quote, "security"...



LEO:  But you know what will work?  XP.



STEVE:  Yes.



LEO:  XP should work, if that's the case.



STEVE:  So the second line of their blog, of Microsoft's blog, says:  "Windows 10 will be the only supported Windows platform on Intel's upcoming Kaby Lake silicon, Qualcomm's upcoming 8996 silicon, and AMD's upcoming Bristol Ridge silicon."



LEO:  Okay, now, the chatroom's saying, no, no, no, it's just optimization.  It'll still run.  You're saying it won't run.  Like I got a new Skylake processor, I try to put Windows 7 on it, and it won't work.



STEVE:  Okay.  So The Verge says...



LEO:  What is it we're saying?



STEVE:  The Verge says:  "This new policy doesn't mean that Windows 7 and 8.1 are no longer supported in general.  The two operating systems will continue to get updates through January 14, 2020," okay, "and January 10, 2023."  That's their standard updates.  "But that's only if you're using hardware that was contemporaneous with those operating systems."



LEO:  So you're just not going to get updates.



STEVE:  "For current PC owners, the detail to note is that Intel's current sixth-generation processors, known as Skylake, are the first that won't support either of the older versions of Windows."  So you're going to have to ask Paul about this.



LEO:  This is really unclear.  That implies that Intel's doing it.



STEVE:  This says "Intel and Microsoft say that the platform and Windows 10 were designed for each other."



LEO:  Yeah, yeah.  I know that.  And they made a big announcement that they had been working together.  And it sounds like they're colluding.  I would go right to court.  They're colluding, if that's the case, because...



STEVE:  I'm speechless.



LEO:  Well, I want to know more.  I'm not ready to jump on the hangman's noose here.  Scott Michaud in the chatroom says they're just saying, if we release a patch that breaks it, then we're not going to fix the patch.  Sorry, but it sounds like they're going much farther than that.  I don't understand.



STEVE:  Yeah.



LEO:  I don't understand.  Okay.  I'm going to have to part - yeah, I'm going to ask Paul.  He'll probably say, oh, it's no problem.  I want to read - the problem is The Verge, now, it's Tom Warren, probably, who knows what he's talking about.  But I'd like to read...



STEVE:  Well, and Microsoft's own posting, yeah.  At your leisure...



LEO:  Yeah, I'm looking at it right now.  All right.



STEVE:  ...read what Microsoft said.



LEO:  It's Terry Myerson, who knows what he's talking about.  Okay.



STEVE:  Yeah.  Yeah.  And speaking of talking what they know about, I have an errata because I jumped the gun with my heavy sigh last week over the end of XP's support.  It's the Embedded version of XP whose support is ended, which is different from the point-of-sale, the POSReady.  It continues for another happy three years, through April 19th of 2019.  And sure enough, my little XP machine that I use for weighing and printing stamps, it got some updates on the second Tuesday of January.  So indeed, that's all still alive and well.



So thank you, people, for catching my mistake, and I'm correcting it.  The little hack to add the POSReady still works.  I even actually used it over the weekend on a different XP machine, and it happily continued to update itself.  So it all works.



LEO:  Here's a relevant paragraph.



STEVE:  Yeah, yeah, good.



LEO:  "For Windows 7 to run on any modern silicon, device drivers and firmware need to emulate Windows 7's expectations for interrupts, processing, bus support, and power states because Windows 7 was designed 10 years before any x86 or x64 systems on a chip existed.  This is challenging for WiFi, graphics, security, and more."  So what they're saying is, all along, in order to keep older versions of Windows running on new processors, we have had to send out patches, firmware updates and device drivers, to make it work, and we're not going to do that anymore.



STEVE:  Well, and they clearly don't want to.  I mean, is there any stronger message that we've had, you know, since last summer about how Microsoft feels about Windows 10?  I mean, so it's like, well - so anyway, I will, you know what I'll be doing, I'll be buying some really fabulous state-of-the-art heavy iron hardware for my next machine, which will be running Windows 7, and I won't wait until I really need it.  I'll buy it now because who knows what the future holds.  I mean, what it ultimately holds is me moving away from Windows, but not till SpinRite is done.



LEO:  It's a fascinating issue.  I hadn't, I mean, this is the first time I've ever heard that, when you're running Windows 7 or Vista or XP on modern Intel processors, you have to do some sort of emulation and modification to make them run, that they wouldn't run otherwise.



STEVE:  Right.  It's certainly the case that you might not be able to run a current operating system on old hardware.  That we're all aware of.



LEO:  That's fine.  I understand that.



STEVE:  But so far, Intel has always given us backward compatibility so that, when newer hardware comes out, it runs on older OS.



LEO:  Well, maybe not.  It sounds like Microsoft saying, no, we had to write software for compatibility reasons.



STEVE:  Well, one thing we can do as a canary in the coal mine is see what happens with Linux.  If Linux doesn't have any problem, then that says, okay, why does Microsoft's Windows 10 have a problem?



LEO:  I have to say it's pretty typical, when you install Linux, if you want to install it on an old processor - oh, it's the other way around, though, isn't it.



STEVE:  Yeah.



LEO:  If you want to install an old Linux on a new - well, Linux, you don't have to worry about it because it's free, and you just install the latest version.  Why would you install an old version?



STEVE:  Well, but my question is, that allows us to determine if it's actually a problem, or if this is something Microsoft...



LEO:  Could you run an old version.  Okay.  Could I run an old Linux kernel on Skylake.



STEVE:  Yes, yeah.



LEO:  Because it never heard of Skylake.



STEVE:  And all of its peripherals and drivers and things, if it just goes, oh, yeah, fine, no problem.



LEO:  Hmm.  An interesting conundrum.



STEVE:  Yeah.



LEO:  Yeah, we'll be talking about it tomorrow, I'm sure.



STEVE:  Yeah.  Okay.  So people keep asking what happened to Episode 540?  So I just wanted to say that was our Christmas episode.  We jumped from 539 at GRC...



LEO:  Didn't we number it 540?



STEVE:  Yeah.  But the problem is on my page, I guess I need to put it in page.



LEO:  Didn't put it out, yeah.  I think we put it out.  Right.



STEVE:  I didn't, yeah, I didn't submit anything.  And so people see on my page it goes from 539 to 541.  And so I guess what I'll have to do - I'll do that when I post today's podcast on the 'Net, I'll just add something to say, look, go to TWiT if you want this.  It's a rerun of the Vitamin D episode.



Oh, and Leo, we were talking last week about the cool, interesting, Bragi in-ear Bluetooth headphones.



LEO:  Yeah.



STEVE:  I got a kick out of this.  They were of course making a big splash at CES.  And as a backer I received a note from them that I thought our listeners would get a kick out of, as would you:  "Dear Backer, all units that were in transit and about to be delivered were held back by UPS, our freight forwarder.  In an inspection of the goods, they discovered that the LED of Dash is blinking in the packaging.  They thought that Bluetooth was therefore active while the Dash was blinking and stopped all shipments.  All goods are going on aircraft, and no Bluetooth is allowed to be active during flight, especially when you have thousands of devices," all blinking away on a pallet.



"UPS was correct in holding back goods.  We were able to convince them that the Dash is in its power save mode" - I hope the LED wasn't blinking often - "and not in active Bluetooth mode just because it is blinking.  UPS has accepted to ship the goods after documentation on power modes from Bragi - we had to get an employee to Hong Kong to clear up the situation - and will resume shipping tomorrow.  The units that were supposed to be shipped already are being shipped to EU hub tomorrow and on Monday," blah blah blah.



"We're incredibly sorry.  This is really our fault, but we didn't know that the blinking could be mistaken for active units and didn't declare that Bluetooth isn't active during blinking."  So I just got a kick out of that little whoops, you know, unexpected snafus.  Which, and this is the kind of thing that we see with Indiegogo and the DIY manufacturing sites.



LEO:  Guy Smiley is saying in our chatroom he ran Ubuntu 8.04, which is pretty old - we're at 15 right now - on Skylake last week.



STEVE:  Imagine that, Leo.



LEO:  Shocking.



STEVE:  Incredible.  Shocking.



LEO:  How dare you?



STEVE:  Without any problems.



LEO:  How dare you run an old version of an operating system on new hardware?  That's just horrible.  I don't, you know, I, yeah, I'm really curious about all that.  It's very interesting, yeah.



STEVE:  Yeah, we'll find out.



LEO:  That's why you use Linux, frankly, is because you don't have to worry about shenanigans.



STEVE:  Well, and, yeah, you don't have Microsoft forcing you to do what they want you to do.



LEO:  That's a seven-year-old operating system.



STEVE:  Wow.  So I got a note, a nice note, which is only sort of tangentially about SpinRite, more about archiving, but I thought our listeners would find it interesting, from a Jeff Rocchio in Charlotte, North Carolina.  The subject was "Archiving Data:  Better to keep running with SpinRite or to power off?"  And he said:  "This isn't so much a security question as an availability question.  I've been listening to your show for about a year now, and I've been enjoying the SpinRite stories, which have prompted a question.



"I had kids in the era of the Sony 8mm camcorder and have a bunch of videos on tape.  About two years ago I bought two 1.5TB hard drives, configured a Linux workstation with the necessary video software, and captured all the videos off the tapes, digitized them, and now have two copies of them all on the two 1.5TB hard drives.



"So my question:  How do I best guarantee long-term storage of these?  I thought about a cloud service, but I think the capacity I'd need to buy is a bit much.  It would take two many writeable DVDs to store them that way, and those can also be questionable long-term.  So then I thought I'd take them out of my PC, put them in thick plastic bags, and store them in the classic 'cool dry place.'  But then I began to wonder about the parts degrading over time, or even the magnetism losing its strength so they'd become unreadable.  But leaving them running in the PC for years seems stressful, as well.  But if I did this with SpinRite watching them, would that be better than powering them down and just leaving them sit on a shelf?  What do you think?"



So a good and classic archival data storage question.  Remember that the problem we've talked about before, for example, with DVDs is that those need to have a drive to read them, and at some point in the future it may be hard to get one.  So make sure you have a DVD reader, if you were going to use DVDs, with the latest interface.  It doesn't want to be, probably doesn't want to be IDE.  It wants to be SATA now.  And if that changes, or maybe USB 3.0, I mean, who knows?  The problem is all of this is a moving target.  And archiving really is a challenge.



I did, after seeing this question, jump over to Amazon Glacier and see what their pricing for putting things in cold storage in the cloud is.  And they charge $0.007 per gigabyte month.  So that's $7 per terabyte month, which would be about $10 for a not-quite-full 1.5TB drive.  And I'm assuming he's duplicated this on two drives.  It wasn't clear whether each drive is a copy of the other, or he's got actually nearly 3TB of data.  But still, $10 per month is a lot of money.  That's $120 a year for, what, 12 years, $1,200.  Who knows?



So I guess probably the right thing to do is the thing that's the biggest pain, which is I would say you don't want to leave them powered up and running, just because you sort of have a wear-and-tear problem on the bearings.  But neither do you want to let them sit for a decade in their plastic bags.  You sort of want a compromise.  You want to dust them off or take them out of their bag, you know, annually, and put them in a machine, and then do give them a SpinRite.  SpinRite will - and you want to run Level 4 because that rewrites the data.  So it reads it, inverts it, reads it, inverts it, and writes it a final time, and then verifies it.  So that sort of exercises it and refreshes it to make sure that it's all still readable.



You know, six months or a year even sitting quietly isn't going to cause much problem.  But then you'll know that it's still good.  The other thing you'll know is that you still have a system that can run that drive.  I mean, like everything required, because the lord knows, maybe tomorrow's chipset won't be compatible with old hard drives.  Who knows?  So something you care about, it'd be nice if you could absolutely forget it.  And I would argue sending it to the cloud probably allows that with reasonable cost, but not for free.



So the alternative is that you have to become a little bit of the maintainer.  You really want to do like an annual reminder to, like, get them out, give them a SpinRite run, and then seal them up again and put them away.  And I'd hold onto that Sony 8mm camcorder and all the tapes, while you're at it.  I think that's a digital technology, so imprinting would not be a problem over time, which analog tape storage tends to have.



LEO:  Oh, that's interesting.  Yeah, I mean, Hi8 could be analog or digital.



STEVE:  Okay.



LEO:  And I have a lot of Hi8 tapes, and I've been really worried about them aging out.  But you're right, that's a good point.  The digital ones are probably fine, will be fine for a while; right?  Until the mylar flakes off the iron-oxide.



STEVE:  That's the problem.



LEO:  Then I'm screwed.



STEVE:  I have some of the old - of course I do - PDP-8 DECtapes.



LEO:  Oh, wow.



STEVE:  Back from there.  And a good friend of mine who's sharp this way noted that, you know, mylar on really old mag tapes is a problem...



LEO:  Because it ages, yeah.



STEVE:  ...because it can delaminate, the oxide can delaminate from the mylar.  What's interesting about the DECtape is their mylar sandwich with the oxide in the middle.  So for some amazing reason, they're just meant to be really durable.  They're still running on people who have them running on really early '70s-era DEC equipment.



LEO:  All right, LostPass.



STEVE:  Okay.  So here's what this amounts to.  We've talked often about the fundamental problem with phishing, where typically email, very convincing-looking email, gets sent to someone.  And oftentimes it's specific to them, like a focused attack.  It's an administrative assistant at RSA, and the email is, like, focused on their business.  I mean, it seems, you know, the targeted attacks do everything they can to look as convincing as possible.  And we're just human.  We go, oh.  It's like, maybe it's something you're expecting.  Or it's like the email that you've been receiving.  Of course then the other hook for this kind of attack is where someone you know gets infected, and you receive email from someone you know.  In that case it's you're trusting the sender implicitly, even though they didn't send it to you, malware sent it.



So now what we have is the first highly publicized phishing attack against LastPass.  And this was a security researcher, Sean Cassidy, who's the Chief Technology Officer of Praesidio, presented this attack at the recent ShmooCon in Washington.  And he called his presentation "LostPass."  What he did was essentially clone the UI of LastPass, which is entirely cloneable because it exists as web page elements.  That is, it's a dialogue that's displayed by the browser using HTML and style sheets.  And so you can capture that.  And another site can display the same-looking dialogue.  And these are the dialogues that LastPass uses for soliciting your username and password, and even your second-factor authentication.



So the whole exploit was you go to a site which is either malicious itself, or a good site that has a server weakness that allowed some page injection, the idea being that the "you are currently not logged in" bar which LastPass owners are familiar with, it's a red bar that shows in the page, at the top of the page, it comes up and says, hey, you know, you're not logged in.  Log into LastPass.  This, of course, in this case is fraudulent.  It's a spoofed presentation, not from LastPass but from the attacker, injected into the page.



One of the other things that's possible, because LastPass the plugin needs to communicate with LastPass the HTML, that is, these dialogues that are running, there's a plugin API.  So that allows the bad guy who's managed to inject some code into the page of a site you trust, or has tricked you into going to a site that you don't know not to trust, that code on the page can actively log you out of LastPass so that you are now actually logged out.  Then the bad guys presents you with, essentially overrides LastPass's presentation of the login prompts, and you provide your credentials to the bad guy through this browser-based UI.



And the problem is, because it's browser-based, it looks the same as LastPass's authentic one.  That means that the bad guy is able to acquire your username and password.  And when the bad guy submits that to LastPass, the LastPass server API says, oh, you need now to provide your second-factor authentication.  So then the bad guy says, oh, this guy has second-factor authentication, pops up the two-factor authentication, prompts you for that, intercepts that, returns that to LastPass, which is valid second-factor authentication.



And this of course is a man-in-the-middle attack.  So this is a phishing man-in-the-middle attack.  And as we've talked about before, nice as second-factor authentication is, it is not protection from a dynamic man in the middle that can intercept what you put in on the fly and then forward it on the bad guy's behalf to the authenticator.  So that's what this is.



Sean contacted the LastPass guys, probably Joe - although he refers to a GM, I guess the General Manager, and maybe that's Joe, I don't know whom he spoke to, he doesn't use any names - and says that he contacted them.  In Sean's presentation FAQ on his page he says, or he's asked: "Why did you develop this attack?"  And he says: "I think that the security industry's view of phishing is nave at best, negligent at worst.  Phishing is the most dominant attack vector and is used by everyone from run-of-the-mill CryptoLocker types to APTs," the persistent threats.



"The standard refrain is that we need better user training.  That's simply not good enough," he writes.  "The real solution is designing software to be phishing resistant.  Just like we have anti-exploitation techniques, we need anti-phishing techniques built into more software.  Security software evaluations should also include how easy it is to phish the software."  And that's a really good point.  That's not something which is typically done in a security evaluation.



And then his FAQ asks: "Did you tell LastPass?"  And he says:  "Yes.  I informed them in November, and they acknowledged the bug in December.  This has been a long and confusing issue," he writes.  "At first LastPass understood this bug to be mainly a result of the logout [cross-site request forgery] CSRF," the cross-site request forgery.  And that's the part where part of this is his ability to actually force a logout so that you are logged out of your LastPass client, and then he's able to operate as a man in the middle for the re-login process.



And he says:  "Then they suggested it wouldn't work because of the email confirmation step."  And what LastPass was doing was, if you were not using two-factor authentication, and you were logging in from an unknown IP, they would then do email confirmation.  So they said that would be a mitigation.  The problem is that, if you are using two-factor authentication, LastPass felt that was strong enough, better even than the email loop.  So they didn't perform an email confirmation from a different IP.



LEO:  Interesting.  So you're actually more vulnerable if you use two-factor.



STEVE:  Yes.  Yes.



LEO:  How interesting.  Hmm.



STEVE:  He said:  "One of the fixes they implemented to fix LastPass" - or, sorry to fix LostPass - "was to warn users when they type in their master password to some website.  However" - meaning to some website as opposed to their dialogue.  So what he's saying is that they've modified the LastPass plugin to watch what you do on any website you visit and to catch you putting your LastPass password into any website rather than into them.  So that's a clever mitigation.



He said:  "However, they display a warning message in the browser viewport, like all of their messages."  And the point being they really don't have a choice.  They're a browser-based plugin.  "On an attacker-controlled website, it's trivial," he writes, "to detect when this notification is added.  Then the attacker can do whatever.  In LostPass, I suppress the notification and fire off a request to an attacker server to log the master password.  We as an industry do not respond to phishing attacks well.  I do not blame LastPass," he writes, "for this.  They are like everyone else.  We need to take a long look at phishing and figure out what to do about it.  In my view it's just as bad, if not worse than, many remote code execution vulnerabilities and should be treated as such."



Now, LastPass of course immediately responded.  And they explained everything that they had done to change LastPass back in December, well in advance of Sean's presentation just last week at ShmooCon.  And so, for example, they now prevent logout.  They write:  "The first line of defense that LastPass has introduced is preventing the malicious page from actually logging the user out of LastPass.  Even though the malicious page shows a fake LastPass notification saying the user has been logged out and needs to log in again, the user can see that the LastPass extension itself in their browser toolbar is still logged in."



Well, okay.  That's kind of a weak mitigation.  Unfortunately, I mean, I do look to see if my little LastPass icon is dark gray or showing that nice LastPass red.  But, you know, I think if you get a big banner across the top of the page saying you're logged out, you're going to tend to fall for that.  But still, again, they've done everything they could.



Then, what if the user misses that they're still logged into LastPass and clicks on the fake LastPass notification to log in again?  So LastPass says:  "Warning that the master password was entered on a non-LastPass page," which again is a nice mitigation.  "Last Pass will detect if the user enters their master password on a non-LastPass page and pops a strong warning, even before the user submits it to the page.  The user will know immediately that their master password may have been compromised and can change it."



And then they also made a change to requiring verification for logins from unknown locations or devices:  "LastPass," they write, "has a verification process that is required whenever a user attempts to log in from an unknown location or device.  Cassidy claims in his research that it is possible for the malicious page to suppress any message LastPass tries to show in the viewport, thereby potentially preventing the user from seeing the above master password warning.  So if the user does not see the warning and still enters their master password and their two-factor data, the attacker could then attempt to remotely log into their LastPass account.  However, upon attempting to log in, they would be unable to gain access to the account without also completing the email verification steps.  This requires access to the user's email address, or their security email address if enabled in their LastPass login."



So what LastPass did in response was that they removed the convenience of the email, or the inconvenience of the email loop in the event of two-factor authentication.  That is no longer an exception.  You will always be prompted for the email loop verification, even if you're using two-factor authentication.  And they now also have added a warning in case your master - because they're checking now to see if you, by mistake, enter your LastPass password into a website that would probably be malicious, rather than into their own UI, they also have to make sure that you're not reusing your LastPass master password on any other sites.



So they now do that.  They alert users when it detects that their master password is being used as a password on other websites because, of course, they want to warn you that you're using your LastPass password, probably in a way you don't intend, to log into some other site.  But I could imagine users who wouldn't have understood the importance of keeping them separate.



So anyway, the problem is that this is a plugin that inherently can alter web pages, but cannot do things outside of the so-called browser viewport.  They did ask the Google guys four years ago for some plugin API enhancement that would give a plugin special powers, like some other way of notifying other than an in-page, sort of an inline, in-page notification.  And that's not something that for whatever reason the Chrome guys have moved on yet.  But LastPass is still hoping for that.



And I ought to also, just to put things in context, as I mentioned at the beginning of the show, this is, you know, LastPass was the target of this because they're the big guy.  I would argue that, because they're getting tested like this, they're now even stronger than they were, and much stronger than any other solution.  So, for example, I'm not changing.  I'm not going anywhere.  I'm glad Sean did this and poked at this solution and came up with some clever ways of fooling the user, and then LastPass's response is, okay, thank you, we've added mitigations to those.  Glad you brought it to our attention.  And all of this was fixed long before this went public.



So this is the way the system is supposed to work.  I'm glad that LastPass is able to update this on the fly.  I'll note that all of the problem here is because this is entirely in the browser.  A standalone LastPass app doesn't have this because then the bad guy's not able to cause the standalone app to do anything the way, you know, to emulate the browser-based behavior.  But that's the whole thing.  That's the story of LostPass.



In general, this is a problem.  Phishing in general, the idea of bad guys being able to emulate anything, whether it's email or a website we trust, emulate it maliciously, inject content into something we trust, or even pretend to be a password manager which we trust.  This emulation problem is, and I completely agree with Sean, a huge problem that doesn't have an obvious, easy solution.



LEO:  Ah.



STEVE:  Yeah.  But, again, LastPass, those guys responded, I think cleverly, and addressed the things that Sean brought up, and essentially preemptively foreclosed on his attack.  Which, by the way, he has published on GitHub, so anyone who's interested can experiment with it.



LEO:  Take advantage of it.  Is it fair to call it a bug in LastPass?  Doesn't seem really - it's not like a flaw.



STEVE:  I wouldn't call it a bug, no.



LEO:  A failure to do something correctly.



STEVE:  No.



LEO:  It's a vulnerability, I'll agree with you, but it's not a bug.



STEVE:  Yeah.  It is a vulnerability that was identified and responsibly disclosed and fixed before...



LEO:  Mitigated.



STEVE:  And mitigated, yes, before it went public.



LEO:  And it's because it's a Chrome extension.  Is it the same issue on Firefox?



STEVE:  Yeah, yeah.



LEO:  It is.



STEVE:  Yeah.  In fact, in Sean's posting he shows - he says that Firefox was a little less easy, for some way that I didn't quite follow because I didn't dig in.  But he shows his dialogue versus the real one, side by side.  And he says, "Guess which one is real?"



LEO:  You can't.



STEVE:  I mean, they're identical looking.  You can't tell.  Yeah.



LEO:  Yeah.  Phishing is the issue.  In the past we've always said in phishing scams, just check the URL, the browser URL bar.  But of course, because I realized, I said that on iOS Today yesterday.  And I realized, no, no, that's actually not going to work because it's a Chrome extension that says "chrome colon."  It doesn't give you a certificate or anything. 



STEVE:  Yes.  And in fact he got chrome-extension.pw.  He bought that domain name so that it would even look like an extension domain.



LEO:  They look the same.  And there's no - can you check a certificate?



STEVE:  Yeah.  But who's going to, is the point.



LEO:  Okay.  So you could still say, oh, wait a minute, yeah, I understand a phishing scam, you know, people are being proactive.  I could have been bit by this easily because I never thought to check the veracity of the URL.  If it looks right, it looks right.



STEVE:  Yeah.



LEO:  Yeah.  All right.  And the mitigation, what does that mean for us as LastPass users?  Do we not have anything to fear, or should we still be aware?



STEVE:  Well, we should always be aware.  I mean, I do look around when I'm being prompted for things.  Does everything look right?  Does the URL look right?  Do things make sense?  In order for this to work, you had to be entering your LastPass master password into something other than LastPass.  But because LastPass is there, it can monitor that.  So it has completely shut this down.  It has blocked this problem.  I don't see any way around that.



Now, he says, and they didn't really address this, that their notification can be blocked by his malicious page, and maybe that's still true.  So maybe, I mean, maybe this is an arms race, and he's upped the ante.  But it's still possible for an updated attack to block LastPass trying to notify you that you are entering your master password into something that's not them.  So, I mean, so this is just a weakness of the fact that it's browser hosted.  But that's of course the great convenience of LastPass.



What we need, and we don't have it, is for plugins to be elevated to a higher level.  The whole elegance of the plugin is just, you know, it participates in the browser space.  And if it needs to say something, then it just uses the same browser viewport, which is what LastPass has been doing.  But we need to make them a higher class citizen.  We need to make the plugins' presented content special so that no malicious page or server can emulate what our plugins are showing us, and we don't have that today.  But really it's something that browsers ought to immediately provide.



LEO:  Yeah.  Okey-dokey.  I appreciate it, Steve, and I guess I'll keep using LastPass.  Although somebody makes a good point.  As soon as you've put all of your passwords and your life into something you don't fully control, you're at risk.



STEVE:  Yup.



LEO:  And I'm wondering if I should start looking at another - because really everything is in there, including passports, driver's licenses, social security numbers, I mean, it is a rich target.



STEVE:  Yeah.  Well, the thing to do would be to find something multiplatform that is a standalone app.  And it's not going to give you the integration that we enjoy with LastPass. 



LEO:  I could live with some inconvenience, knowing the risk involved.



STEVE:  Yeah, cutting, copying, and pasting.  But it needs to be multiplatform because it's got to go on Android and iOS and Mac and Windows.  And I don't know if it'll be compatible with the next generation of Intel chips.  That's a problem.



LEO:  Nothing is, including Windows.  Oh, dear.  Oh, dear.  We'll talk about that on Windows Weekly tomorrow with Paul.  I'm sure he'll have something to say.



STEVE:  I look forward to it.



LEO:  Thank you, Steve.  If you want to watch Security Now! live, you can.  We do it every Tuesday, 1:30 Pacific, 4:30 Eastern, 21:30 UTC.  It's a good live watch.  You can watch me choke on a lentil, gasping for air, come back, recover - oh, I'm sorry, we edited all that out, so you never saw that if you watched the recorded version of it.  You can get those recorded versions at Steve's - I didn't really - at Steve's site, GRC.com.  He's got audio.  He's got transcripts, nice transcripts.



And of course once you're there you might as well pick up a copy of SpinRite.  Why not?  It is the world's best hard drive recovery and maintenance utility.  And really, if you've got a hard drive, you need SpinRite.



STEVE:  I have a very short slogan for it.



LEO:  Oh, good, what?



STEVE:  It works.



LEO:  It does.  It does.  It does.  You should.  He also has lots of freebies there.  And find out about SQRL and Vitamin D.  It's all there.  And sleep.  Do you have a sleep page?



STEVE:  It's a smorgasbord.



LEO:  It's a smorgasbord.  Do you have a sleep page?



STEVE:  I'll be doing a sleep page shortly.



LEO:  Good.  You can also get it from our site, TWiT.tv/sn for Security Now!, or wherever you get your podcasts.  You should subscribe.  You don't want to miss an episode.  This is one show where really it's an encyclopedic look at computing, at technology, not just security, but everything.  If you listen to all 543 episodes, you've got everything.



STEVE:  Sort of the whole gestalt.



LEO:  The whole thing is there.  The whole enchilada, if you want to use...



STEVE:  Yeah, we have, we've covered every base.



LEO:  We have.  And I love it.



STEVE:  Many times.



LEO:  I've learned many things from listening to this show, from doing this show with Steve.  Thanks for joining us, and we'll see you next time on Security Now!.



STEVE:  Thanks, Leo.  See you next week.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#544

DATE:		January 26, 2016

TITLE:		Listener Feedback #228

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-544.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We're going to talk about the latest security news.  Here's the good news.  There's not a whole lot.  That means things were quiet.  But we will talk about that CrashSafari website, and we will also answer 10 of your questions.  So it's Q&A day on Security Now!, next.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 544, recorded Tuesday, January 26, 2016:  Your questions, Steve's answers, #288.



It's time for Security Now!, the show where we protect your security, now, with Mr. Steven Gibson, the man in charge of the Gibson Research Corporation, creator of SpinRite, world's best hard drive maintenance utility.  And here he is in the flesh.  Well, in the Skype, anyway.  Hey, Steven.



STEVE GIBSON: In the Skype.  And Leo, great to be with you again, as always, as we plow into an interesting 2016.



LEO:  Yes, yes.



STEVE:  We talked about LostPass extensively last week, so it's Q&A time, time for our Listener Feedback Potpourri.  So we're going to do that.  It was a rather light news week, not really much to talk about.  I've got a few things that are sort of interesting.  And I've got much more detail on the Safari crash exploit that I thought you'd get a kick out of from the 22-year-old San Francisco software engineer who thought it would be fun to do this.



LEO:  You saw his demo.  It really is kind of amazing that there's no control... 



STEVE:  And I'll explain why.



LEO:  Yeah, okay.



STEVE:  I know exactly why, so...



LEO:  Good, yeah.



STEVE:  Yeah, we'll do that.  And but we have some really, really useful questions, where we'll spend a little more time than usual answering some, because there was feedback, some questions about the nature of second-factor authentication and why it could not withstand man-in-the-middle attacks.  Someone saying, hey, here's a product that does.  It's like, uh, no, it doesn't, and explaining, like, it's funny because this is a particularly difficult problem to solve.  It's one that, despite all of SQRL's strengths, that we've spent a lot of time focusing on because it's sort of intrinsic to the way the 'Net works.  So we'll let our listeners' Q&A drive some of this conversation, and also catch everybody up on what little news occurred.  I don't know, it was a sleepy week for everybody.



LEO:  Really.  Well, that's good.  I like it.  You know, in this business a sleepy week is a good week; right?  You don't want...



STEVE:  No news is good news.



LEO:  Yeah.  I don't know if you noticed, but I screwed up our website this morning, and that's what I was...



STEVE:  I heard you mention that on MacBreak.  



LEO:  We have a very fancy, you know, our website was a quarter of a million dollars.  It was very fancy.  And one of the reasons we did that is we wanted to do something called "Headless Drupal."  So we have Drupal...



STEVE:  So you have a database backend with an API.



LEO:  You got it.  And then the site itself, when you go to our site, is not running Drupal, it's running Node.js, which is a very modern, state-of-the-art, beautiful language.  It gives you great site.  And then we use caching.  There's caching all along the way.  But one of the cache services we use is called - is based on Redis, R-E-D-I-S, Redis Labs.  And it's one of those little minor details.  It costs us 40 bucks a month.  It's inexpensive.  And I just missed the bill.  It was tied to a credit card which expired, and I just missed it.  So...



STEVE:  Ahh.  And so they turned you off.



LEO:  They had been sending me emails every month saying, hey, [stammering].  But I get a lot of email, engineering-style email, and I just have a filter, and I didn't see it.  



STEVE:  It was very much like Cogent, who was telling me for several months, we're out of the T1 business.  We're going to be turning off your T1s.



LEO:  Right.



STEVE:  And it's like, well, I didn't get that email.



LEO:  There's a high level of noise in email, and I just - I get a lot of email.  And I don't pay bills.  I mean, everybody else is, you know, we have accountants, we have people to do that.  But what I didn't know is - I just thought, well, everybody's getting this bill, so I don't need to pay it.  I don't have to pay attention.  But apparently I was the only - this is the one service we use - and we use a lot of them for this website, it's like six different things running - this is the one service we use that no one else was getting that email.  



STEVE:  And I would say you got it back up pretty quickly.



LEO:  Well, I feel bad because I - we started at 7:00 in the morning.  I'm calling, and I'm trying to get a hold of them.  And I guess they're a small company, and nobody's answering the phone.  And then, because I didn't have an account, I couldn't log in to use their support.  The support line was hidden, and the support - so I'm emailing them, I'm calling them and leaving - finally I tweeted.  Which is the nuclear option.  I got a response right away.  And I wasn't - I don't think I was mean in the tweet, and I completely admit it was my fault.  It wasn't their fault.  But I hate to have to tweet somebody.  But, boy, when you need customer service, sometimes that works.  Anyway, we're fine now.



STEVE:  You mean because it's so public.



LEO:  Yeah.  It's a public complaint.  And they suddenly woke up and said, "What do you, uh, what, huh?  What do you need?  We'll fix it."  And they fixed it within a half an hour.



STEVE:  So the day after our last podcast, last Wednesday, I just wanted to note that this issue is, as I said, is going to be with us for a couple years, until we resolve it.  And that's another bill has been put into a state assembly, in this case California, surprisingly.  Jim Cooper, who is a Democratic assemblyman from - I wrote it down, I don't remember where now, somewhere in California, the city didn't ring a bell - has put into the California Assembly a bill that basically does the same thing, basically saying that, I'm sorry, the same thing as the New York bill that we talked about last week, which attempts to limit the sale of smartphones that don't provide some means for allowing law enforcement to get access.  His angle is different, though.  His is human trafficking.



And so Ars picked up on the story and said that:  "A second state lawmaker has now introduced a bill that would prohibit the sale of smartphones with unbreakable encryption.  Except this time, despite very similar language to a pending New York bill" - and by the way, Jim says they didn't base their legislation on the New York legislation at all, his staff arrived at this independently.



And Ars writes:  "The stated rationale is to fight human trafficking, rather than terrorism."  And then Ars wrote:  "Specifically, California Democratic Assembly member Jim Cooper's new bill, introduced last Wednesday, would 'require a smartphone that is manufactured on or after January 1, 2017, and sold in California, to be capable of being decrypted and unlocked by its manufacturer or its operating system provider.'"



Jim then had a phone interview with Ars where he, Jim, who's a 30-year veteran of Sacramento County Sheriff's Department, said:  "If you're a bad guy, law enforcement can get a search warrant for your bank, for your house, you can get a search warrant for just about anything.  For the industry to say it's privacy, it really doesn't hold any water."  We're still quoting Jim.  "We're going after human traffickers and people who are doing bad and evil things.  Human trafficking trumps privacy, no ifs, ands, or buts about it."



LEO:  No, no, no, no, nothing should trump privacy for innocent people.  And that's the issue; right?



STEVE:  Yeah.  Exactly.  Exactly.  And...



LEO:  Although this is kind of what you were saying, which is let's go back to the pre-default encryption days, right, so that Apple could do it.



STEVE:  Well, and I thought about this some more.  And I've tightened my suggestion even further, remembering the way things used to be.  And that is to have it require both physical access and Apple themselves, or the manufacturer themselves.  So you can't even transmit like an unlocking key for a specific phone electronically.  It's the way it was, which no one really had a problem with.



Now, again, taking something away from people that they have is never easy.  But as we covered on the podcast several times, law enforcement used to physically send a phone that they had acquired from a subject and a court order saying, yes, this needs to be unlocked, to Apple.  And what law enforcement was complaining about was the multi-month delay because Apple had some laborious process they went through.  Basically they had a way of brute-forcing the relatively short passcode out of a smartphone and thus unlocking it under court order and then discovering the code, probably writing it down, and returning it with the phone to those authorities.



So an updated version of that would be some solution that still requires physical access and isn't algorithmic, that is, requires something random per phone that only Apple knows, so that there's no algorithm that can escape.  I mean, it's very much more like a traditional cipher, where the algorithm is known, but the key is not.  And even the key cannot be algorithmically derived.  It has to just be randomly chosen, and Apple would maintain a database.



But again, my sense is the reason I talked about it before when I saw something, I remember I shared a few months back, and I took the controversial position of saying, you know, this mimics the traditional American constitutional right to privacy and against unwarranted search and seizure.  But under court order those rights, exactly as we've talked about, you can get your bank account records, you can get your phone records, you can have authorities enter your premises, which are otherwise your sovereign territory, under particular conditions.



So to me, this echoes that.  And I wouldn't be surprised if we end up there.  I hope we end up with something no weaker than that because we certainly, you know, I agree with everyone that we don't want a "backdoor."  This, however, this seems to be the way we're seeing some legislation sort of proposed.  So we'll see what happens.



LEO:  So do you think it's a really bad idea?  Or...



STEVE:  I don't think it's a bad idea.  I think it's a reasonable compromise.  And the pure privacy people don't want any compromise.  They want the phone to be unique in our lives in that no level of authority can cause its inspection.  But that's not - we don't have anything else like that.  So I don't know why that makes sense to have as an exception when law enforcement can demonstrate reasonable suspicion and to a judge who says, okay, I can understand you have reasonable suspicion that this phone contains evidence material to a case.  I will grant you an order to compel its manufacturer to open it for you.



LEO:  Yeah.  And this is the process that goes on with, you know, if I have a trunk...



STEVE:  Everything else, yes.



LEO:  ...in my studio over here that's locked...



STEVE:  Yes.



LEO:  ...the police, without a search warrant, can't come in here.  They have to go to a judge and say, "We want to know what's in that trunk."



STEVE:  And the judge has to...



LEO:  And the judge has to approve it.



STEVE:  And they have to also demonstrate some...



LEO:  A reason.



STEVE:  Yes.  It just can't be a fishing expedition, where it's like, well, we don't know what's in here, but we want to look.  It's like, no, that's not okay.  You have to demonstrate why it is you believe there's, you know, you have a reasonable suspicion...



LEO:  That's a longstanding process.



STEVE:  Yes.



LEO:  It's not like that's a new capability or new right.  That's been around since forever.



STEVE:  That's the way, in America, that's the tradeoff that we have...



LEO:  And we can contend with that.



STEVE:  Yes, yes.  And so I think physical access is important because by that I mean that Apple would have to have it, or an Apple satellite facility or something.  So that prevents it from being just remotely electronic.  But it duplicates, exactly as you said, Leo, it duplicates the existing tradeoff between privacy, yet an ability for law enforcement to do their jobs.  And we want them to do their jobs.  We want terrorists caught.  We want all of the cliches, the child pornographers and the human traffickers and all these people caught.  We want their phones opened, but not our phones.



And so there's no way to do it except to put a human judge in that loop, require a judge to make that judgment, and then design the system so that it is not prone to abuse.  That is, it's not an algorithm that the hackers can get.  It's not a backdoor that law enforcement, once they have it, they can open anyone's phone.  Every single phone would require physical access and a randomly derived key that was set into it initially and stored in a secure vault at Apple is accessed in order to get access to the phone.  And that duplicates what we have in the United States.



LEO:  The real problem is we've all been - we all feel burned; right? 



STEVE:  Yes. 



LEO:  We all feel like, wow, we can't really trust these guys.  For instance, I think you make a good, a very important point.  They have to have physical access.  I don't know if that bill that you just cited says that.



STEVE:  No, and this is the problem is - this is why I'm talking about it.  I actually got quoted on the podcast on a really prominent blog, I think it was The Daily Beast, a couple weeks ago, did pick up on this nuance and also said, you know, I'm in a different position than all other security people.  It's like, well, yeah.  I'm not taking an absolutist position.  Everyone can.  But my worry is that, if we don't compromise, there's the chance much worse legislation could happen, I mean, really, really dumb legislation.  This to me feels like it echoes a set of tradeoffs that we've been living with.  And again, not easy to take anything away from someone.  Right now our iPhones are absolutely encrypted, and so no one wants to give that up.  It's like, well...



LEO:  And hasn't Apple, hasn't Tim Cook been adamant about saying we're not taking a step back on this?  This is a vital right?  I mean, he - I wonder how much of this is because Apple really sees this as their commercial distinguisher from any other, from any competitor.  They're the ones that are the privacy protectors.



STEVE:  Well, I think there's that.  And there's also, I mean, what I just described does place responsibility with Apple.  On the other hand, how much money did you say they...



LEO:  Yeah.  They don't like that, do they.



STEVE:  How much money did you say they just paid?



LEO:  Yeah.  Holy cow.  We just got the earnings report is starting to come in from their first quarter.  What did I - I forgot.  They made...



STEVE:  Like 83 billion or something.



LEO:  Seventy-five billion for the quarter in revenue, that's $25 billion in revenue, and the profit was something like $6 billion a month.  $25 billion in revenue, $6 billion a month in profit.  Like here's $6 billion.  You get to keep that.



STEVE:  Yeah.



LEO:  And since their tax rate is 25%, you get to keep a lot of that.  That is just amazing.



STEVE:  Yeah.  So I guess my point is that Apple can...



LEO:  They can afford this.



STEVE:  Apple has the profit and the money to create the biggest, thickest, deepest vault ever known by man.  I mean, Apple knows encryption.  They could protect this.  They would rather not have the responsibility.  I think, I wouldn't be surprised if the way this turns out, the manufacturers of these consumer devices are going to end up with the responsibility.  And remember that there will still be third-party solutions for people who want to add that to the existing device.  But I do think it makes sense to turn the clock back a few years with updated technology.



LEO:  We certainly don't blame them for not wanting to get in the middle here.



STEVE:  Yeah.  Speaking of smartphones, the Dutch Consumers Association, the DCA, has sued Samsung.  And this was foreseeable.  We've almost predicted it on the podcast for, like, ever since StageFright, when I started saying, you know, phone manufacturers are going to have to stop believing that they can just wash their hands of responsibility for security vulnerabilities in what are essentially pocket computers after they have sold them.



So last year's StageFright vulnerabilities, which we covered, which our listeners will remember, were a little frightening, well, very frightening because the exploitation was just the reception by an Android phone of a multimedia text message which was processed, if it was deliberately malformed in the right way, processed in a way that allowed the bad guys access to your phone.  They were able to get in and take over.



So what we're coming to understand is that, as we know, smartphones really are more computers than phones.  And as such they will be rampant with vulnerabilities that will only be discovered over time.  No one wants that to be true.  But all of our experience with all of these computer technologies continues to show us that these problems are - new ones are being created at at least the rate that the old ones are being found and removed.



So as we often say here, the podcast has long legs.  Plenty of future here.  And these things will be filled with private data, so users are going to want to keep those secure, exactly as we were saying.  But what this means, the fact that smartphones are computers more than they are phones, they're going to have vulnerabilities, and they're going to be filled with private data means that they must have the same sort of update mechanism that we now take for granted in our desktop operating systems and our browsers.  All of the desktop operating systems and browsers are now, I mean, this whole idea is crazy of not keeping your patches up to date on these devices that are exposed to the Internet because problems are being found constantly.



So according to this group, the Dutch Consumer Association, their research showed that at least 82% of Samsung smartphones available in the Dutch market, which they examined, had not received any software updates on the latest Android version in two years.  So this failure to provide software updates left the majority of Android devices, 82%, vulnerable to issues of security and others which have been found.  So the DCA says that the agency has previously contacted Samsung many times and discussed the matter privately with the manufacturer to resolve the situation, but was never able to reach an agreement with the company, so it's decided to go to court.



And also the Ars story, I think it was Ars that I was quoting, said that the more recent high-end Samsung Galaxy S6 series may have received StageFright patches, but Samsung has not provided StageFright fixes for its majority of midrange and entry-level Android devices.  And we've talked about this in the past.  And none of Samsung's devices currently runs the latest Android 6 Marshmallow - or as I call it, Mushroom - even now, three months after it officially launched.  So the DCA wants Samsung to - the DCA is demanding in this suit that Samsung updates all of its smartphone devices to the latest version of Android operating system for two years from the handset's purchase, not its launch.



LEO:  That's fair enough.



STEVE:  Although it is a big ask because, I mean, and there could be technical problems that would require more work from Samsung to, I mean, exactly like we were talking about with the Skylake chips and Windows 10, where some newer version of Android might have features that would require extensive work on Samsung's part in order to bring up on their older hardware.  But again, I agree with you, Leo.  It's like, okay, two years from purchase, wouldn't consumers want to know that, for two years, they're going to have the benefit of any major advances?



The DCA also want Samsung to treat software updates as part of the warranty that has its length mandated in the EU for two years.  So when you buy something like this in the European Union, it comes with a two-year mandatory minimum warranty.  And so the DCA is saying software updates ought to be part of that.  And then in a quote they said:  "We're demanding that Samsung provides its customers with clear and unambiguous information about this.  Also, we're demanding that Samsung actually provides its smartphones with updates."



So apparently there has been dialogue where Samsung said, oh, yeah, yeah, we'll look at this, and we'll think about it, and blah blah blah.  But, like, none of this ever went anywhere.  And so finally the Dutch authorities have just said, okay, enough of this.  This needs to get fixed.  So as we predicted on the podcast, because these are computers, something has to change.  It's no longer acceptable for them to be considered turnkey, sell-it-and-forget-it computers.  They're connected computers.  They need to be kept current.



Google has been quietly working on a next-generation compression for the web.  Compression, we've talked about many times in the last 10-plus years, is very important because web pages, the body of web pages, is text, which is highly compressible.  And images are also highly compressible.  And so the idea being, then, that the web server has the uncompressed original text and, either once or per request, is able to compress it to a much smaller size so that it is able to move to the browser in a fraction of, I mean, like 10% of the time it otherwise would.  And then the browser decompresses that back to its original size for display.



And of course the famous compression is Gzip, which is based on a Lempel-Ziv - those are two researchers back at Bell Labs in 1977.  If memory serves, they got a patent on what was called Lempel-Ziv, or LZ, compression.  And we did a podcast on it for anyone who's interested [SN-205].  Really fascinating, the way it works.  The idea is that you retain at the sending end, the compressing end, a buffer of everything you have sent.  And as new stuff comes along, you check to see if any of it or how much of it might already be in this recent history buffer.  And so you match as much of what's about to be sent as you can, performing a longest string match.  And instead of sending that, you send a pointer to where it is in your buffer.  And so all that goes across the wire is a pointer.



Well, the receiving end is mimicking the sending end.  It keeps a history of everything that it has received.  So basically this is a clever way of the sender and the receiver maintaining duplicate buffers, even though they don't ever share it, and it's grown incrementally over time.  And the buffer evolution, the way the buffers age is also synchronized, just by agreement.  So when a pointer comes in, the recipient uses the pointer into its own buffer in order to expand that pointer back into some text that it knows the recipient just saw.



And so that's the way LZ works.  And in my model I described it as a communication system, where you have a receiver and a sender, but they can also just be static processes.  You can have a compressor that you run something through that produces this smaller thing.  And then that file exists, and we have compressed image files where the uncompressed image, like the raw image from a camera, oh, my god, we know how many megabytes those things are now, and more all the time.  But so the camera compresses it into, for example, a JPEG or a PNG or whatever, down into a much smaller size using various types of algorithms.  JPEGs work very differently than what I've just described because they're a so-called "lossy" compression, as opposed to a "lossless" compression, that gets back, in the case of a lossless compression, exactly what you put in.



So over the years there have been continual tweaks to this basic concept that I just described, all kinds of fancy things you can do, and we have talked about various things.  Huffman encoding of the tokens, which is a frequency-based encoding so that, rather than everything being the same size, if you're able to look at an alphabet of how many times different things occur, you assign shorter tokens to the things that occur most often.  That was actually part of the key to Morse code is that Samuel Morse made the things that occur more often shorter so that, I mean, because it just makes sense to do that.



So Google's been working on something called, let's see, the original name was Zopfli.  It's like, oh, please don't let's call this Zopfli for, like, all time.  Because at least Bzip is kind of fun.  Zopfli, I mean, there's a "P" in there, Z-O-P-F-L-I.  And I'll explain why in a minute.  But anyway, the good news is it's not Zopfli, but it's not better.  It's Brotli, B-R-O-T-L-I.  Which, you know, really sounds like a vegetable that I have an intense dislike for.  So anyway, it's good for you, high fiber, you should eat your Brotli.  Anyway, so this has moved to what Google calls internally their "intent to ship" status.  So what this is, what Brotli is, is further tweakings on the Zopfli compression, moving it forward further.  Zopfli was Deflate compatible, meaning that - and Deflate is one of the terms, there's Deflate and Gzip that have been the longstanding compressors on the Internet.



And so, for example, when a browser says in its request, it has a header that says Accept-Encoding.  It'll say "deflate common gzip."  And what that tells the server is that the browser knows how to decompress any content that is encoded using those algorithms.  So that gives the server permission to compress what it's going to send using whatever encodings the browser has said it understands.  So what Brotli adds is a new encoding, "br."  So where we have deflate and gzip, we now add br for Brotli.  It is not Deflate compatible.  What "Deflate compatible" meant was that what Zopfli was doing...



LEO:  Oh, my goodness.



STEVE:  I know.  What Zopfli - this is better than the Honey Monkeys.  What Zopfli was doing was cleverer compression, doing a better job of analyzing, for example, more of the data, larger buffers of history, and more clever assignment of tokens such that the result was smaller, but it could be processed by the same decompressor.  Thus it was Deflate compatible.  Brotli makes up whole new rules.  And it is serious, I mean, for people who have a fascination with compression, it's become a standard.  Google has put it in the public domain, made it widely available.  Now, it's secretly been in use by all of our browsers because the next generation of fonts, the so-called WOFF2, which is the Web Open Font Format v2, they've all been using Brotli, Brotli with parts of...



LEO:  How dare they?



STEVE:  Brotli was part of it, of WOFF2.  So the good news is not much more will be required for our browsers to support it.  What it gives us, what it gives us over Zopfli, is...



LEO:  You're making this up, aren't you.



STEVE:  ...20% higher compression ratios.  And in Google's comparisons, they were able to - there's a really neat chart in the PDF.  There's a Gstatic.com link in the show notes here to Brotli.  You might want to bring it up, Leo.  There's a neat chart that shows speed versus compression ratio.  And this has always been a longstanding challenge because you could sometimes compress things better, but at a huge expense in performance, which you don't want because - yep, there's the chart.  And you can see where Brotli is, way up at the top.  And it's made some compromise in performance.  It's not as high as the very, very best.  But it is very fast and better than a lot of the older compressors that are lesser in performance...



[http://www.gstatic.com/b/Brotlidocs/Brotli-2015-09-22.pdf]



LEO:  And lesser in compression.



STEVE:  ...but way lesser in ratio, yes.  Okay, so here's where Zopfli and Brotli came from.  Google writes:  "As with Zopfli, the new algorithm is named after Swiss bakery products."



LEO:  Oh, no.



STEVE:  So Brotli, oh, and this has an umlaut over the "o."



LEO:  Brotli, that's Brotli.



STEVE:  Means small bread in Swiss German.



LEO:  Great.



STEVE:  So there we go.  Br will be the encoding.  It's able to outperform Gzip.  What we're all using now pretty much is Gzip.



LEO:  Bzip's really kind of come on strong, I think.



STEVE:  Yes, but it never made it into the web.  So, like, Bzip things...



LEO:  Oh, I see what you're saying, yeah, yeah, yeah.



STEVE:  ...are like, you know, static files are Bzipped.  And it's a great, especially Bzip2, it's very good compression.  But its performance is such that it didn't justify the cost.  Brotli, however, has made it.  So Brotli outperforms Gzip, which is what we have now, for typical web assets by between 17 and 25%.  So, for example, over Gzip, it can give you 17% additional savings of when it just compresses JavaScript on the Alexa Top 10,000 Sites.  So that's worth doing.  Same thing for minified JavaScript, 17% savings.  And it can squeeze a CSS, already compressed with Gzip, another 20%.  So again, Google is trying to make the web faster.  Precompressing the data and squeezing it before it goes over the bandwidth to the Internet, through the Internet to us where possible, makes a lot of sense.  So Brotli is coming soon.



Oh, and let's see, it is, as I mentioned, it's been in the WOFF2 format for a while, so it's not expected to have any compatibility issues because it's already been implemented.  Developer interest is high, so it looks like we're going to see adoption pretty quickly.  This WOFF2 format, which already means there is a Brotli decompressor present, is supported in Chrome, Opera, and Firefox.  Support for this next open font format is in Safari, and this next format is under consideration for Edge.  And the Edge team has indicated an interest.  So far no word from Safari.  But certainly, if this becomes a standard, it'll happen.



So what it'll mean is it'll be a transparent migration.  Browsers that start being able to support it, not only for fonts, but explicitly for all content, will simply add that "br" to their accept-encoding request header.  And then to the degree that servers start supporting it, servers will see that and go, oh, and compress with Brotli rather than with Gzip when they send stuff over the wire.  So just more moving forward.



Now, we did have a little bit of backward moving, however, with CrashSafari.com.  Do not go there.



LEO:  Whoa.



STEVE:  Because it's not just CrashSafari.  There's actually, what is it, I think it's three domains.  There's CrashSafari, CrashChrome, and I think there was a third one.  I can't remember what it was.  But...



LEO:  CrashSafari worked on Chrome, I might add.



STEVE:  Oh, and it works on Firefox, too.  I did.  I did.  Because, you know, like Jerry Pournelle used to say, "I do these crazy things so you don't have to."



LEO:  Yeah.  I did it on the air, and that was crazy.



STEVE:  I watched, yeah.  Okay.  So what this is, and you'll get a kick out of this, Leo, because there is the JavaScript, the four lines - only because I have line breaks, it could easily be one line - of JavaScript, showing what this does.



LEO:  Wow, that's not much.



STEVE:  No, it's not.  And what's really funny is, well, sort of, is this has been known since 2014.  This is not even new.  This was a 22-year-old application security developer named Matt Bryant, working in San Francisco, who sort of stumbled over this and thought, oh, this will be kind of cool.  So he got the CrashSafari and CrashChrome dotcom domains and just put this little piece of JavaScript in the page.  That's all it is.



Okay.  So here's the problem.  It's the HTML5 spec two years ago got the so-called "History API."  The History API is the URL history that your browser maintains, technically per frame, but we see it as per tab.  So when you hit the back button, back back back back back, or when you hold it down in some browsers and then it opens up a list of all of the sites you've come from, that's the history that that tab has.  What HTML5 did was give programmers programmatic access to it.  So, for example, a page could push a different URL into the history queue deliberately, so that when you hit the back button, you go back to where it wants you to go to.



Now, this is useful for, for example, Gmail, that wants to be more of an application than a web page, so that when you click on something in Gmail, you will go to, for example, a message.  But when you use your back button, you don't leave Gmail and go back to Facebook or wherever you were.  Instead, you go back to the panel or the pane, the view of links to different articles.  So you can see that a web-based app needs to override sort of the global function of the back button.  So that's what this does.



Here's the problem.  It turns out it is computationally expensive to update that history.  That is, just the nature of the way it's done means it's far faster to push something new into the history queue than it is to update the queue.  And the browsers, because the browsers don't want you to have to wait, that is, they don't want the UI to hold up while they update this history, they decouple them.  So the call to the API returns instantly.  And then the work to do the job of pushing the history works in the background.  So all this is, is a fast-executing loop which builds a growing string of nonsense and pushes it into your history.  And it crashes all browsers.



Now, what's really interesting is it doesn't just crash the browser in Safari on iOS.  It crashes the OS.  And that's actually - that's arguably a mistake.  And but what's happening is the browser is consuming main memory at a frantic pace.  If you display your computer's memory and run this, and I did, it's just like a straight line going up to the death of something.  So anyway, that's what CrashSafari is.



The problem is, as you guys talked about on MacBreak, is that people are not just posting that link because, okay, who's going to click on that unless they actually are prepared to see what it does, with the expectation that it's going to crash something.  The problem is, of course, URL shorteners turn it into something that is perfect for clickbait.  And so what's happening right now is, especially because this has become very popular, it's all over VentureBeat, Engadget, 9to5Mac, TechCrunch, BGR, I mean, everybody has picked up on this because it's a simple little story.  And hopefully, you know, and they're wanting their own people to click links to come and find out what this is about.  It's now going rampant through Twitter and Facebook, people posting links saying that there's something else tricky or seductive and saying here, you know, click this.



LEO:  For Anna Kournikova pictures.  So I ran it on my Linux box because then I can run a top.  And it's using - I have two Chrome processes.  One is using 153% of the CPU and 75% of the memory, going up, by the way.  And I imagine when it gets to 100% I'm going to be sorry.  And then the second process is using 104% of CPU.  So I'm kind of - I'm curious what's going to happen when it gets to - it's at 89% of memory right now, 90%.  I probably should kill this process pretty quick here.



STEVE:  And you do have a thick skin on that ball you're sitting on; right?



LEO:  Oh, it's going down.  See, it only goes to 10,000, I notice, in this for loop.  So you could really weaponize it and make it go to a million or something; right?



STEVE:  Yeah.  I think he went that far because...



LEO:	That's enough.



STEVE:  ...nothing survived that far.  That was far enough to take things down.



LEO:  It's plenty, yeah.  It's funny.



STEVE:  And so it's been noted that there are, I mean, for a while there have been ways to perform little script games that would, like, lock up a tab.  The problem is, as you found out, this doesn't just lock up a tab.  It tends to lock up the whole browser because, again, this uses worker threads and ties them up, like core data structures, and so that they just, you know, you end up with more work than the browser can do and consuming huge amounts of memory.  But, and so it's just not a matter of, like, dialogue popping up and saying, this script seems to be misbehaving, would you like to close it, and you say yes.  This brings down the browser.



So what we'll see is, in no great urgency because this doesn't seem to represent any kind of a security flaw, and no one is suggesting that it does, it's just an annoyance, I expect there'll be some specific management of this.  And again, it's not news.  There was discussion among the developers back in 2014 that this push state history API was expensive to do, yet easy to ask for, and that could cause a resource problem.  But meanwhile, Matthew Bryant got himself in the news.



LEO:  Oh, yeah?  What did he do?



STEVE:  There is a new Firefox that dropped just this morning for Windows, Mac, Linux, and Android.  It adds something which Chrome 42 got last April, which is sort of controversial.  Maybe you've seen, when you visit a website, a pop-up saying would you like to receive notifications from this site?  That's a new feature of, again, the HTML5 growingly and increasingly supported API, which allows you to give your browser permission to receive future notifications from sites you're not even visiting.



So the good news is no browser - you know, 10 years ago, if this had been a feature, we could foresee that browsers might say, oh, fantastic, and they would just implement it.  Thank goodness we're 10 years downstream, and everybody has learned a lot of painful lessons, which is ask the user before you do something like this.  So all the browsers do prompt when the site says it would - the site is actively saying we would like to provide future notifications to the user, which conceivably could be useful.  Expedia, for example, might want to notify you of some change in itinerary, and so this would allow them to preemptively do that.  So anyway, this is part of the spec.  It's been around in Chrome since April of last year.  Now Firefox 44 has it.  And so far I don't think I've ever said yes.  Generally I want to deal with sites that I'm working with.



LEO:  That's annoying.



STEVE:  Yes, and not start getting pop-ups, like out of nowhere.  Also Firefox formally dropped all support for RC4, meaning that it no longer, in its TLS client hello packet - remember that the browser sends, when it's establishing a TLS secured connection, it offers a suite of security, well, it offers a set of security suites using different types of encryption and hashes for authentication and so forth.  Among them historically has been RC4.  And back in the day it could be running on as weak a key as 40 bits.  That was the old - it was RC4 that was running with 40-bit encryption, which was then phased out because it became too insecure.  Even at 128 bits, RC4 itself started to just get wobbly under the analysis that we now know how to provide and the power that contemporary machines have.  So, gone.  It was dropped last week from Chrome 48, and now from Firefox 44 today.  These mainstream browsers just don't even offer it.



So 44 also has a bunch of very snazzy-looking new web page authoring tools, improved warnings about certificate errors and untrusted connections.  If the system has an H.264 decoder available, it will now make it available.  They backed off from that for a while, but now it's back.  And they've also enabled WebM, which is that VP9 version support, is enabled on systems that don't support MP4 or H.264.  And support for Brotli compression format.



LEO:  Woohoo, Brotli.



STEVE:  Oh, I forgot to say, I forgot to mention also, one thing that's completely arbitrary and annoying, but it's like, okay, only supported over HTTPS.



LEO:  Oh, that's interesting.  Why is that?



STEVE:  For no reason.  For no reason except that Google wants everything to be HTTPS.  So they're just saying, okay, one more reason to switch.  By agreement, no one is going to support Brotli, although they absolutely could, I mean, the TLS tunnel that everything runs through has no impact whatsoever on the compression or not of what runs through it.  So this is completely arbitrary.  But they just said we're not going to support it under HTTP.  It's like, okay.  So yet more reason to run secure, as you'll get an incremental increase in performance.  Probably nothing you'll even notice, but it's good.  It certainly benchmarks nicely.



They offered a bunch of security fixes.  They removed a couple CAs.  Firefox will no longer trust the Equifax Secure Certificate Authority 1024-bit root certificate, so that's just been phased out.  I mean, there are others that all of their recently signed certificates support.  So this, you know, it makes sense to remove those.  And then they did also add a built-in JSON reader, which allows people to view, search, copy, and save data without needing third-party extensions added to the browser.  So some nice incremental movement forward on the browser that a bunch of people are using.



Okay.  Miscellaneous stuff.  I wanted to let our listeners know that "The Expanse" continues to get better.  Have you started doing any watching, Leo?



LEO:  Yeah, no, I haven't.  I've been watching "Billions."  I love it.



STEVE:  Good.  I am, too.



LEO:  Yeah, great choice on that one.



STEVE:  Yes, really looks fun.  So "The Expanse" has been compared to, and I agree, "Firefly."



LEO:  Well, now I have to watch it.  Boy, that's...



STEVE:  It's reminiscent of "Firefly."  Someone tweeted me named Peter.  He said, you know, how can this be so much better than anything Syfy has ever produced?  And I wrote back, I said, "I have no idea how they're making it so good.  And I agree, it has become absolutely fantastic."  And I said, "And, since I read the books, just wait for this week's episode.  We get to see the first real hint about the much, much, much, much bigger thing that's actually going on."



And I have to tip my hat to the guys that are putting this together because there is something that was briefly hinted at in the first very awkward couple minutes of the show that they haven't, like, that no one has any idea about, if you didn't read the book.  The book was able to spend much more time on that first thing.  And so we know much more about it, normally, if we were reading the book at this point.  But based on the little previews from last week, I can say that tonight's episode is going to be amazing.  We're going to see something that no one who hasn't read the books, who's just watching this, really will have understood.  And it completely changes everything.  It's really good.



So then, out of nowhere, I got a tweet from someone named Ben Roberts.  He said:  "@SGgrc Thanks!  Glad you're enjoying the show!"  And then #TheExpanse.



LEO:  What?  Who's Ben Roberts when he's at home?



STEVE:  And so I clicked on that because I was wondering.  Turns out he's the senior VP of TV with Alcon Entertainment who produces "The Expanse," "Ice," "Sinatra" on HBO, and many more coming soon.  And he formerly developed AMC's "The Walking Dead."



LEO:  What?  Wha-wha-what?



STEVE:  There is some production capability.



LEO:  I think you should tweet him back and say, "Can I come see the studio?"  Go see it.  Go see it.  It would be fun, wouldn't it?



STEVE:  Anyway, so I just have to say to everybody, if you like sci-fi, I mean, S-C-I hyphen F-I, and hate S-Y-F-Y, and I completely understand that, this is an exception.  It is really good.  Oh, and last week was the first two, or no, sorry, last night was the first episodes of "The Magicians," which is another series based on a book series.  And it seems like Hogwarts for adults.  But it was fun.  And I saw...



LEO:  I don't know how you find time to watch this much TV.



STEVE:  Actually...



LEO:  That's why I haven't watched "The Expanse."  I just don't have time.



STEVE:  People think I watch a lot of TV, but I don't watch anything you don't hear about.



LEO:  Right.



STEVE:  So that's like a couple hours a night.



LEO:  No, it's not that bad, yeah.



STEVE:  So, you know, if that.  I did find in the mailbag, from Dave White in Auckland, New Zealand, a fun story about SpinRite.  He said, "Hi, Steve.  A quick SpinRite story for you.  I bought a copy of SpinRite from you about two months ago, not because I needed it at the time, but just to give you a 'yabba dabba doo' in appreciation for the Security Now! podcast..."



LEO:  Yabba dabba doo.



STEVE:  "...which I listen to religiously every week."  And he says, "(I'm also filling in my drive time by starting at Episode 1 again)."  Talk about having time on your hands.



LEO:  Geez.



STEVE:  But actually there are - I received so many favorable replies from our holiday repeat of the Vitamin D episode, not necessarily because, or not only because, of its content, but because, I mean, it turned out to be important to say again after six years.  So I have to say to our listeners, just because these are old doesn't at all mean that there's not a ton of interesting relevant stuff.  We did a series on how the Internet works which I tried to repeat by doing it again, but we just keep getting buried by news.  We just don't have time to do like I used to.  So there is back there, waiting for you...



LEO:  There's a lot of stuff.



STEVE:  ...like the evolution of processor technology from the beginning transistors and on upwards, how the Internet works, all kinds of stuff.  And Dave White, while he's on his commute, is going to be learning about those things.  So for what it's worth, there is lots more to fill your drive time with that I think you'll find interesting.



Anyway, he says, "I am a freelance IT guy in Auckland, New Zealand, and look after IT needs for a number of small businesses.  This morning I heard my cell phone ringing before I'd even gotten out of bed - never a good sign.  It was a customer whose main Windows 7 PC," he says, "(the one with their shared files and database on it) was getting stuck on the welcome screen immediately after logon.  Once I got to their site," meaning physical location, "I was able to boot it into safe mode and attempted a system restore, which also failed with an error indicating a problem with the drive's volume shadow copy.  I tried it a second time, and this time got a BSOD."  Which we know is the Blue Screen of Death.



He says, "I booted back into safe mode and ran chkdsk /r."  "R" is for "recover" on chkdsk.  "Forty minutes later it reported there were no problems on the disk.  But my gut was telling me otherwise.  I unplugged the PC, took it back to my office, and booted it up with my SpinRite disk.  Three hours later, I was on my way back to the customer with a fully working PC on the back seat.  The customer was of course delighted, so thanks a million for making me look good.  One last thing:  It may be my overexcited imagination, but I swear that PC ran faster after the SpinRite repair than it ever had since I installed it five years ago."



LEO:  I don't think that is your imagination.



STEVE:  "Thanks again.  Regards, David."  And of course we know it can be because sectors can become difficult to read.  The drive will give them many spins before it gives up.  Not nearly as many as SpinRite, but that way a drive can slow down while it's still working.  And of course that is one of the clues that you need to run SpinRite.  SpinRite will fix it before it gets this bad, and also speed it up again.



LEO:  All right, Steve.  I have questions.  And I didn't write them.  They're from our audience.  Let me pull them up here, and we'll see what you have to say, starting with Question 1 from an anonymous listener - this is related - who once worked for a company with backdoored products.  Whoa.  



STEVE:  Yeah.



LEO:  Steve, I worked for many years for a succession of major telecom firms, and I spent a long time working on that software for them.  Some of our products had backdoors.  For all I know they still do.  The reason was a desire to be able to undo the effects of someone who had legitimate access and decided to, I don't know, change all the passwords, for example, in the event of a disgruntled employee taking preemptive action, or a union member in the face of an upcoming lockout where management personnel would be required to perform regular maintenance.  Here's the thing:  People will always come up with what they think are good reasons to add a backdoor.  Sometimes it stems from a reaction to a previous bad experience.  You should assume backdoors exist and must therefore take steps to mitigate against them, just as we do in the face of insecure IoT devices.



STEVE:  I thought this was interesting feedback from the trenches.  And I guess I understand, I can understand his position.  What I'm hoping is that, if the big iron backdoors that we're seeing are deliberate, that companies are coming to understand that what may have been common practice in the past must absolutely change.  We know, you know, how many routers, how many consumer routers have we covered where backdoors were discovered?  Where Internet-facing, undocumented passwords or ports were left open, in some cases with complete command libraries of things that could be done.  Clearly, some manufacturer thought, oh, you know, we'll put this in there so ISPs are able to remotely manage the router.



The problem is this is the kind of thing that is incorrect, where once some information gets loose, anybody is then able to exploit it.  That's the problem, this sort of backdoor.  We talked last week about the Fortinet big iron hardware or appliance that had, yes, it was a good password, it was all cryptographic and crazy, but it was in the firmware.  And once you know it, you know it for all of the devices because they all had the same one.  This was, like, their secret way of accessing the device remotely.



So [stammering], I'm speechless.  The only thing I can think of that consumers can do is to, if you have control over the Internet-facing hardware - this is the problem.  The big problem is the Internet-facing hardware.  It's a fact that these big iron appliances were on the Internet, protecting a corporation, and could be accessed remotely; or that consumer routers provided by an ISP are the way the ISP interfaces to the user's local network.  And again, those devices are Internet facing.  We've seen some mitigations where, for example, only the ISP would have access to the backdoor.  That could be done using protocols that don't require routing because, for example, the ISP doesn't need routing.  It has direct connection to your device.  So that's not such a big problem.



The problem is, when an ISP-provided device is not something that the user has any control over, what do they do?  I would say you get your own device and put it inside of the publicly exposed device over which you have no control.  We know that it's possible to chain routers.  We'll talk a little bit about that again later on in the Q&A today for a different purpose.  But in this case, you want anybody that gets into the publicly facing router not to be able to go any further, not to have access to your internal network.



Well, the way to do that is have it chain to a second router, which is your choice, running probably, hopefully, open domain or well-vetted, or just simple.  It only needs to be a very simple NAT router, something stripped of features that only does one thing well, and that is keeps anything unsolicited from the outside from getting in.  And it won't slow anything down.  Basically it's sort of working more like an intelligent switch that only allows outbound traffic to go out to the public-facing router.  That's the only thing I could see that someone can do who's worried that they've got a router on their border, bordering the public Internet, over which they have no control because we see over and over and over that apparently deliberate backdoors are there.



And in some cases you could say, well, it's just oversight.  But it doesn't matter because bad guys are able to get in.  And now we know that they're even creating worms, creating botnets of routers that have these exposures.  This would not prevent that.  It would not prevent your border router from being taken over, but absolutely putting a router inside would protect your network from anything that that router did.  And that's the only thing I can think to do.  At a corporate level, they really - corporations are going to have to hold companies that they get this big iron from to account, explicitly ask them, put in a contract, that this device has no undocumented remote access feature.



LEO:  Ooh, I like that.



STEVE:  So that, if it turns out it does, they can take them to court.



LEO:  You're on the hook, yeah.



STEVE:  Yup.



LEO:  I like that idea.



STEVE:  This is the kind of thing that could have buried Sony, for example, or any of these major networks that were taken over.  Big companies have big iron technology, and now we've got two examples of these things having revealed known backdoors.



LEO:  Mark in Ann Arbor, Michigan with a special case problem.  He's a road warrior using a VPN:  Thanks for all the great information you and Leo provide.  I've been listening since about Episode 30.  I never miss a week.  I'm also a happy SpinRite owner, and it has earned spousal support on more than one occasion.  Yeah.  It's important.  You hang SpinRite on the wall, spouses approve it better.



I work in the healthcare field, and therefore security is something of which I'm very aware.  My question concerns VPN, Virtual Private Networks, and being secure when out of the office.  While I generally use my iPhone as a hotspot - actually, he just said "phone," not "iPhone" - occasionally I must use hotel and airport WiFi.  I've been using the D-Link AC750 portable router - which I use also and recommend, it's a great little router that can also just be a battery pack - to pick up the WiFi and then connect my device to this.  I then run my corporate VPN on the computer.



Would you consider this method secure?  Unfortunately, with this solution, if I want security, I believe I must run a VPN tunnel for each device that connects to the router.  In Episode 541 you and Leo discussed use of the Tiny Hardware Firewall so that all traffic running on the router is protected.  But for this I must use their VPN server endpoint rather than my corporate VPN.  I need to use my VPN in order to connect to drives and servers at my medical center.  So your advice?



STEVE:  Okay.  So what he's saying is that he has a need, when he's on the road, to use his corporate VPN in order to access his corporate resources.



LEO:  Right.



STEVE:  But when he's doing that, then other devices don't have the advantage of security.  And if he uses something like the Tiny Hardware Firewall or the - oh, I guess he uses the D-Link portable router with his corporate VPN.



LEO:  Yeah.  It's just a portable router, yeah.



STEVE:  Okay.  So here's the deal.  Nothing prevents a VPN from tunneling within a VPN.



LEO:  Oh.  Hmm.



STEVE:  What you want to make sure, and this is normally the default, is that you use UDP protocol for the VPNs.  We've talked about this a couple times.  Essentially you want an encrypted tunnel which doesn't add its own error recovery because the protocol brings its own recovery with it.  And if the tunnel does error recovery, and the protocol being carried by the tunnel both do error recovery, then you can have things like - it's called a "tunnel stall," where they get into sort of battle over who's going to do the packet retransmit request, and they both end up doing it, and things get confused.



But the major point here is that it is very likely that he could use the D-Link, or I'm sorry, he could use something like the Tiny Hardware Firewall to bring up an umbrella VPN that would protect everything from his location, all devices that use it through the VPN, and it would still be compatible with running his corporate VPN through it.  That is, nothing prevents a VPN from being run in a VPN.  Performance, eh, that would suffer a little bit because you're going to go out to some other location.  But you're then going to emerge from the outer VPN tunnel, and your traffic is going to go directly over to the corporate VPN.  So I think it should work, too.



So I would say give it a try.  It will probably work.  And then you've got the best of both worlds.  You've got a VPN protecting everything at that location, and you can still get a hold of your corporate assets over a specific VPN.



LEO:  I had no idea.  I thought that double, there would somehow be double overhead or something weird going on.



STEVE:  No.  Should work just fine.



LEO:  Nice.  Nice to know.  So get the Tiny Hardware Firewall.



STEVE:  Yes.



LEO:  Mark in Ann Arbor has a Part 2, but it needed its own question.  Another related question to VPNs:  How do I know my connection is running through the VPN?  I see the icon for the program in the system tray, but I realize programs - web pages and email clients and so on - do not have to reconnect to their server.  How do I know that the more secure connection is actually ongoing?



STEVE:  Yes.  That's a great question.  And the easiest, cleanest generic answer I know of is to ask other websites to tell you the IP they see.



LEO:  Right.



STEVE:  That is, if you ask, for example, you can just, in Google now, I think you can put in...



LEO:  You say, "What is my IP," yeah.



STEVE:  Yes, "What is my IP?"  And it will show you the IP from which your traffic is emerging on the Internet.  That's the key.  So when you don't have a VPN up, and you do "What's my IP," you'll see the IP address of your location.  It'll be the Marriott, or it'll be whatever.  But remember what that is, then bring up the VPN and do it again.  And that IP should be different.  And, now, you can go one step further.  So one thing is to see that the IP differs with and without the VPN running, which says that your traffic is emerging onto the Internet, either from where you actually physically are, or at the exit of the VPN tunnel, wherever that server is.



But you can go one step further, and that is, try to do what's called a "reverse lookup."  DNS we've talked about often, converts friendly names like Google.com, GRC.com, TWiT.tv, converts those friendly names into an IP address.  It turns out that many, but not all, DNS servers - but probably more and more now, it was rarer in the past, it's becoming more common, at least from what I'm seeing - also do the reverse.  There's something called "reverse DNS" which, as it sounds, you give it an IP, and it tells you something, at least something about the IP, often the matching domain name.



And so, for example, all of GRC's IPs have reverse DNS.  So you could put 4.79.142.202 into a reverse lookup, and it would say, ah, that's www.grc.com.  There are some simple web-based tools.  And I don't know, I didn't think to ask, to see whether Google will do that for you.  In the same way that it does a forward lookup, maybe it'll do a reverse lookup.  But there's one, for example, MxToolbox.com/SuperTool.aspx.  I have three links in the show notes for anyone who's interested.  That was my favorite of the three that I listed.  There's also DNSGoodies.com that tends to be a little more techie.



But the point is, once you've got an IP address without the VPN and one with the VPN, sort of for fun, do the reverse lookup, and you might find that, oh, look, sure enough, the IP that I get with the VPN up is what I expect.  It's the company whose VPN server I am using.  And the reverse lookup without the VPN up is, oh, yeah, it's the Marriott or something where I'm staying for the night.  So anyway, that's really, I think, the best way to tell.  You could do, like, traceroutes, maybe.  But I think the cleanest solution, and it's pretty much foolproof, is just compare IPs with and without.



LEO:  Nice.  By the way, somebody, Andy in the chatroom, says you can just type "IP" in Google, and it'll give you the IP, which it does.



STEVE:  Nice.



LEO:  Yeah, it makes it really easy.  I do that with Tor, too.  It's fun because first you turn on the VPN, and all of a sudden you're coming from Chicago.  Then you turn on Tor, and all of a sudden you're coming from Belgium.



STEVE:  Yes.



LEO:  I love that.  Question 4 comes from Stockholm, unless he's using Tor.  I'm going to be in Stockholm in September.  Olivier wonders about phishing attacks:  Guys, great podcast.  You rock.  In your "LostPass" episode, you seemed to imply that even two-factor authentication wasn't able to protect against phishing attacks.  But of course not all two-factor authentication systems are equal.  Why doesn't two-factor authentication protect from phishing, and particularly this phishing attack?



STEVE:  Yeah, okay.  So this is...



LEO:  There are two-factors that would work, by the way, with LastPass because there are some that use that weird - I don't even understand how it works, where you click a link, or you do a weird thing when you're in your app, and it just suddenly works.  Anything where you'd enter in a six-digit number would be at risk; right?



STEVE:  Correct.  And it turns out the thing where it just works is also not secure.



LEO:  Oh.  Good to know.



STEVE:  That's Question No. 5.



LEO:  Okay.  Yeah, Microsoft offers something like that.



STEVE:  Yeah.  So here's the problem.  And I chose these two questions because it's really important for our listeners to make sure they understand this because this is like the next frontier of exploits.  And the problem is that, when you're seeing a page which you think is the site you're authenticating to, but somehow a man in the middle has managed to get you to go to their site, they've redirected the traffic, they've redirected DNS, they've changed a link and maybe given you a certificate, I mean, all the things we talk about that we're increasingly getting better at preventing, there are still ways that people get tricked.  Clicking on something in email that tells you that you're going to go to Amazon, and you think you're there, but you're at Amazone instead, and you don't notice.



Now, here's the problem.  This is why two-factor doesn't help you, is that when you brought up the login page, thinking it was Amazon, back at this bad guy's server, they connected to Amazon.  So they've got the connection to Amazon.  And in fact they may be in fact feeding the Amazon page through them to you.  So you're even seeing the Amazon page that you would normally see, but it's been relayed through them.  So when you put your name and your password in and hit Submit, you're sending it to them.  You think you're sending it to Amazon because it looks like you are.



But this is where - and this is the problem.  We just go by the way things look.  And the fact is the page came from somewhere else.  So the data we submit goes back to that somewhere else.  They then take it, and they have your username and password.  And they forward it to Amazon because, remember, they're the only ones actually connected to Amazon.  You're not.  So Amazon says, oh, correct username and password.  Ah, but you've enabled two-factor authentication.  So your phone should beep and tell us your six-digit key.  So that echoes on your screen.



Sure enough, your phone beeps, and there's your six-factor key that Amazon has just sent you through the second-actor app.  Which of course you enter into your browser.  And remember, the other guy is still in the middle.  So when you submit that, it goes to them.  They submit that same six-digit second-factor key to Amazon.  Amazon thinks they got it from you, doesn't know there was a relay, that there was a man in the middle hiding.  And they now have your login.



Now, what they don't have is the ability to log in any time they want in the future because that does require a dynamic second-factor authentication.  But they're logged in once, and if they've just logged in, they may be able to get up to all kinds of mischief.  So I just wanted to explain that the second-factor does add an aspect to the attack.  That is, whereas a username and password are unchanging, and thus they can be captured and reused by a man in the middle, whereas the second factor's nature, a changing second factor, can't be captured, it can still be used dynamically to allow someone into your account, and they will have a fresh login.



And even Amazon allows someone who has just logged in to do a lot of things without requiring additional authentication.  And of course Amazon security tends to be better than many because Amazon does tend to make you reauthenticate when you do things that require, like, reverification that you're still you; whereas most other sites don't bother with that.  So it can be even more damaging elsewhere.  So anyway, I just - I liked the question because many people were wondering, and there is a difference between static information and dynamic.  But if the attack is dynamic, even dynamic verification doesn't help, or at least doesn't guarantee.



LEO:  And I will ask, I'll defer because I'm looking at all the other forms of authentic 2FA on LastPass.  And there's, besides Authenticator, Toopher and Duo and Transakt and Grid.  And so I'll defer on that one because you say we're covering that later.  And I guess you probably should throw in YubiKey, as long as we're talking.



Carl Thompson in Leeds, U.K. has a solution for LostPass:  I just wanted to bring your - oh.  Okay.  I just wanted to bring your attention to the two-factor authentication system called Transakt, that's with a "k" instead of a "c," that works with LastPass.  And Duo does kind of the same thing.  When you log onto LastPass, the Transakt app on your smartphone pops up and asks you to confirm the login.  Twitter does something kind of similar to this.  And Microsoft has an app that does this, too, for two-factor on their account.  You simply confirm or reject the logon request, and that's it.  As this is out of band and does not require you enter numbers on your computer, well, that would eliminate any phishing issues; right?  So two-factor is not broken with LastPass.  It's alive and well as long as you choose the right type of two-factor authentication.



STEVE:  So let's run through the scenario.



LEO:  Okay.



STEVE:  Same setup as we had before.  Some guy, some entity has arranged to insert themselves, has tricked you into going to their site, and you believe you're somewhere else.  So when you attempt to log into LastPass, LastPass presumably notifies them, this provider, of your identity and to confirm that you want to log in.  So the phone rings, and you say, yes, I want to log in.  So, and if someone has imposed themselves in the middle, you have just authenticated their login to LastPass, rather than yours, because again they're in the middle.



So the fact that it is out of band and doesn't go through the same browser channel doesn't provide you any protection whatsoever.  You're expecting LastPass to prompt you for your second factor, in this case Transakt or any of the others.  So your device says, "Are you logging into LastPass?"  And these things brag that it's like accept or decline.  It's either a big red or a green button.  So since you're expecting this to come up, you say yes.  And you've authenticated the attacker's login, rather than your own.  So again, it's an additional factor.  It unfortunately doesn't help you.



LEO:  Hmm.  Interesting.  Would a YubiKey or a FIDO key help with that?  Or same  problem?



STEVE:  Same problem, unfortunately.



LEO:  Because you could be spoofed, yeah.



STEVE:  Yeah.  The way we solved this with SQRL is that the SQRL token, that little barcode, embeds the IP address of the entity that requested it.  So if a bad guy is intercepting you and tries to log in, they obtain a SQRL code with their IP, which they then present to you.



LEO:  Ah, clever.



STEVE:  Uh-huh, trying to get you to authenticate for them.  But the SQRL client running in your phone or on your computer has a different IP.  And so the server, there's the bit flag in what we call the TIF byte, the Transaction Information Flags, where the server notes that the IPs are different and should not be different and immediately shuts down the transaction.  So SQRL has solved the man-in-the-middle problem.  As far as I know, it isn't otherwise solved.



LEO:  Very cool.  Again, another reason to like SQRL.



STEVE:  We're getting there.



LEO:  I just, you know, I feel like the powers that be are going to have their own solution, and they're just never going to think about anything else.  Google has FIDO2 and...



STEVE:  We have a lot of corporate interest, where individual corporations want to use this for their own solution.  And I just think...



LEO:  That's great.



STEVE:  ...if it's better, it'll be organic.



LEO:  Yeah.  Yeah.  I always think that cream should rise on the Internet.



STEVE:  And if not, I had to do it anyway.  I mean, it had to be done.  And there are a lot of people who have helped over in the newsgroup, working to refine this.  And we'll see what happens.



LEO:  I hope it happens everywhere.  It'd be great.



STEVE:  It's just so simple and lightweight.



LEO:  Yup.  Steve Gibson, Question 6 comes to us from George Kapp in Clinton, New Jersey.  He writes:  Steve and Leo, thanks for many years of great podcasts.  I'm a listener since Episode 1.  Wow.  I have a question regarding how certificates and domain names match.  My company uses a security training service, blog.knowb4.com, that allows us to simulate phishing attacks and keep our users on their toes.  That's a great idea.



STEVE:  Yeah.



LEO:  Fake phishing attacks.  That's what happened in "Billions."  Oh, I won't say anything.  I recently visited their site and - you watched the second episode Sunday?



STEVE:  Oh, yeah.



LEO:  I'm feeling like it's getting even better.  I'm loving it.  I recently visited their site, and I checked the certificate before downloading a file.  The site showed up green with the lock icon showing in my Chrome browser.  However, the name of the site did not seem to match what was on the cert, secure006.hubspot.com on the cert VS.blog.knowb4.com.  I found this alarming until I noticed a list of 20 to 30 DNS names attached to the certificate, including blog.knowb4.com, along with several other sites I use and many I've never used.  It does look legit, but this is not working how I expected.  What's going on here?  Thanks for all your great work over the years.  George.



STEVE:  So this is something that is sort of, I don't want to say disreputable or cheesy...



LEO:  Go ahead, say it.



STEVE:  But I have.  In fact, Leo, if you go to https://secure006.hubspot.com in your browser, and then examine the certificate, you know, click on the padlock or however you do, look at the certificate, and then look at...



LEO:  Ooh, 22 connections from this site, 140 from other sites.  Wait a minute, no, that's cookies.  Hold on.  I've got to zoom in.  I'm blind now.  So let's see.  The connection is not private.  Permissions.  That's cookies.  The identity of this website has not been verified.  Your connection is not encrypted.  Well, that's not what I thought I was going to get.



STEVE:  Ah, so did you do HTTPS?



LEO:  Maybe that's why.  All right.  I just clicked the link.



STEVE:  Ah, right.



LEO:  Oh, now I - well, do I?  Yes, there's a certificate.  Okay.  Your connection...



STEVE:  Okay, so now...



LEO:  ...is encrypted using a modern cipher suite.  Fantastic.



STEVE:  That's all good.



LEO:  Yeah.



STEVE:  So you want to look at the certificate itself.



LEO:  Right.  We're watching it over here.



STEVE:  And what you're looking for is something called...



LEO:  [Crosstalk] cert?



STEVE:  Yeah, look at the cert.



LEO:  Details.



STEVE:  The subject alternative names field.



LEO:  Whoa.



STEVE:  There it is.  Yes.



LEO:  What the what?



STEVE:  So this is something I don't know if we've talked about much.  But there is no practical limit on the number of explicitly enumerated domains that a certificate can use.  And when I was talking about sort of cheesy or budget, I mean, the advantage is that a site like that only has to issue one certificate, or pay for one certificate, and it covers a huge number of domains.  Now, if they're domains in different countries, for example, and there are, for example, there's hubspot.es and .en and .jp and .com and .net and so forth.



LEO:  That's what I'm saying, yeah.



STEVE:  Then I think it makes sense because there's no reason these people should have to pay for, like if they're related properties, or they're all owned by the same company.  I have seen certificates that are just a scattershot of a hundred completely unrelated domains.  And that's sort of freaky.  What that says is that maybe that cert is only on one server, and that server is doing multiple hosting of all of those domains.  But it's also likely that that one certificate has been put on servers all over the place, and that can create some security problems because now you've got a - you go to the site for a specific domain, yet your connection technically is valid for all of those domains listed in the certificate.  So it does open up an opportunity for exploitation.



But for what it's worth, that's what's going on.  It's called SAN, Subject Alternative Name.  And so the certificate itself will have its primary name.  In this case it's secure006.hubspot.com.  But both the server and the client look at all of the names, the main name and all of the enumerated domains in the subject alternative name field, and will match on any of them.  So it's like, you don't like to see certificates like that.  But I can see the need.  And the good news is something like Let's Encrypt will be able to obsolete that by allowing individual servers as needed to get certificates for the domains that they're hosting.



LEO:  Okey-doke.  Well, that's good to know.  They are doing a lot of business.  They own Sidekick.com, too.  Interesting.  They're a...



STEVE:  Oh, that's a nice domain name.



LEO:  Yeah.  They're an interesting company.  Hmm.  They're kind of a demand media company.  They have an interesting business model.  Moving on here, Question No. 7.  You know what's weird, I clicked that link, and it did have an HTTPS in the link, but I didn't get an HTTPS site.  So I don't know what that means.  Adlai Chapman in the U.S. sees a worrisome connection in his netstat:  When I run netstat -o with no Internet connections open, I keep getting back an established IP address.  I looked at the IP address on Google, and it's in the Czech Republic, company T-Mobile.  The IP address:  193.85.216.235.  I have two computers, and this IP address keeps showing up on them.  What's going on?



STEVE:  Okay.  So I don't want to freak people out, but one of the most useful things you can do...



LEO:  Is run netstat.



STEVE:  Yes, is what Adlai did.  And again, everyone should be sitting down.  Don't have too much coffee first.  And then open up a command window in whatever operating system you have because netstat has been around since the UNIX days, meaning it's a core network utility that all operating systems have copied.  And this shows you the current set of connections that your local computer has to the outside world.  And it's an education.  I can't, there's no way to diagnose - oh, Leo just did it, for those who don't know why I was laughing.



LEO:  Boom.  There's quite a few.  So some are websites I'm on, but some are services running in the background.



STEVE:  Yes.  Now...



LEO:  I don't know what a lot of these are.



STEVE:  Yeah.  So the thing to do is to just sort of go through them and try to account for them, try to - if you do -o, it may only show you established connections, rather than listening ports.  So that's more useful for most users.  And in fact, if you do netstat under Windows, space slash question mark, you get a short little help screen of options.  But it is...



LEO:  On the Mac, netstat doesn't have -o, unfortunately.  So I don't...



STEVE:  Oh, okay.  Maybe something that shows connections.



LEO:  Connections only, yeah.



STEVE:  Yeah.



LEO:  I'll have to figure it out.



STEVE:  I sometimes do, what, the -an on Windows.  I'm not sure what that was, "netstat -an"?  Anyway, it's a useful thing to do.  I can't understand or explain what Adlai is seeing, but it doesn't look good.  Something, what this says is there is something about his computer or in his computer that is establishing a connection to that remote IP.



LEO:  Wow.



STEVE:  There really is no other explanation.  So it's useful, just sort of as an inventory-taking exercise, open a command window, "netstat -an" I think is the one I tend to use under Windows.  He gave the example of -o.



LEO:  Sounds like a Windows-specific command.



STEVE:  Yeah, and just sort of go through and make sure that it looks reasonable because one of the things that are going on behind your back are establishing persistent connections to the Internet.  Google has some for me.  My news client has one to GRC's news server.  And a site that you visited recently, those connections may not yet be torn down.  So again, don't worry about it too much.  And one thing you can do is do a clean reboot, also.



LEO:  Yeah.



STEVE:  Restart your system.  That'll flush all that.  And then once it settles down, do a netstat before you do anything else.  And that'll give you some sense for what it's doing just as like the built-in stuff.  And make sure they make sense to you.  I'm glad he mentioned it because I have not talked about it often enough.  It's somewhat frightening.  Again, so don't get too worried, but it's worth taking a look.



LEO:  Dash "o" displays timers.



STEVE:  It's completely under - I'm sorry, what?



LEO:  Dash "o" displays timers in the UNIX command.  I don't think that's what you want.  You just "netstat -a" will give you all the listening ports.  I think that's probably enough.  And you can do -help to see.  I see more commands here on the UNIX side, on the Linux side.



STEVE:  Yeah, actually -o in Windows is a good thing.  So for what it's worth.



LEO:  Okay.  For some reason that's something in there.  All right.



STEVE:  Yeah.  



LEO:  Include information related to networking timers.



STEVE:  Yup.  Different on - and I should mention that they're not all synchronized, all these netstats, especially from Windows and any of the other UNIX and Linux derived.



LEO:  Well, that's the thing.  Mac is using, is BSD.  And so this Linux - or these are both Mac or UNIX commands.  Let me try it on my Windows machine.  Anyway, go ahead.  We don't need to keep going.  Netstat -help.  "O" displays owning process ID associated with each connection.  Ah, see, that's not - that is useful.



STEVE:  Yes. 



LEO:  That says what process owns this.



STEVE:  Right, who opened this up.



LEO:  Yeah.  And I only have one active - oh, sorry, many more coming in now.  Takes a while sometimes.



STEVE:  Yes.  Actually the -o option takes a while for that enumeration to occur.



LEO:  Yeah, yeah.  But they're coming in.  I don't see Czechoslovakia.  You know what, this is - it's nice because we're on the corporate network here, and this Windows machine doesn't really have much going on.  And so it's pretty clean.



STEVE:  Yeah.



LEO:  All right.  Good, good question.



STEVE:  Yeah, it is.  It just - it's always there.  It's easy to do.  And you'll spend some time unraveling it.  But it gives you a good sense of confidence if you know that nothing's going on that shouldn't be.  But also it's like, wait a minute, that thing's still connecting to somewhere?  Let's remove that.  So it's just a nice thing to check on.



LEO:  James in Christchurch, New Zealand wonders whether there are any "right" ways to allow government censorship:  Steve, reading the news today, our New Zealand Chief Censor - wow.



STEVE:  Yeah.



LEO:  I'm glad I don't live in a country with a Chief Censor.



STEVE:  They even have a title of that.



LEO:  Geez.



STEVE:  Wow.



LEO:  Is calling for a discussion about whether there is a place for widespread filtering - God bless the First Amendment - to help protect New Zealand from the often-debated harmful effects of online pornography.  References were made to the U.K., where users can opt out of filtering.  Actually, I think it's the other way around in the U.K.  You have to opt out.  You're opted in by default.



I'm wondering if you have any thoughts or technical solutions for whether there can be a balance achieved between best-effort filtering of this content for those who want it, while still ensuring their privacy and security, for example, not doing HTTPS inspection.  Perhaps ISPs would need to provide alternative DNS servers, like OpenDNS, which would block content based on publicly auditable block lists.  Thanks for the podcast.  Listener from Episode 1, et cetera, et cetera.



STEVE:  So, you know, I thought this was a good question.  And of course I agree with you, Leo.  I thank goodness for the First Amendment free speech rights that we have in America.  The problem is, when we've discussed any kind of filtering, is that not only is somebody else making a decision about what is acceptable and not, but the Internet was not designed for it.  It's one of those things that is, like is trying to be added as an afterthought.  And it just - it isn't going to work right because it isn't designed to have censoring.



I often, where I hang out, I use the Verizon available public WiFi because there's a Verizon store two doors down.  And it's like, hey, might as well do that than use my cellular.  So I do that.  But I'm often poking around in medical research recently, and I occasionally come to a site that the nanny protector has decided I can't view because of this, you know, it's bad content.  But it's like, no, it's a link for Medscape, you know, hosted by the NIH.  And it's like, it's not wrong.  But that's what these things do.



And of course now that we're moving into, and as James mentions, now that we're moving into an HTTPS world, either preventing people from getting DNS, which somebody decides is bad, the way OpenDNS has provided an optional filter that allows you to do that, you need to crack open connections if you're going to do deeper inspection.  And then of course that has huge privacy implications.  So he poses the question, is there a right way to allow it?  And so the first question is should government censor?



LEO:  No.



STEVE:  And putting that aside, is it practical?  Can it be done?  And I don't think there is a technology that works well enough that it makes censoring even technologically possible, if you decided that it was something that you wanted.  The Internet just - it fights it.



LEO:  It routes around censorship.  That's the whole design.



STEVE:  Yes.



LEO:  Hmm.  Dan Sullivan in Florida suggests the Ring Doorbell on the guest network may not be practical:  I don't think putting a Ring Doorbell, or I guess we could say any IoT device on this, on the guest network of a Netgear wireless router is a practical solution.  For your smartphone to communicate with the Ring, it has to be on the same network as the doorbell.  Not true.  By default, devices on the Netgear guest network cannot communicate with each other.  That's why you use it.  I'm sorry.  I'm annotating.  Enabling devices on the guest network to communicate with each other also enables devices on the guest network to use the main network, too.  So that defeats the purpose, of course, of putting the Ring on a guest network.  He's not understanding how the Ring works.  The Ring uses the Internet, the public Internet, to talk to your phone.



STEVE:  Right.



LEO:  You don't have - now, Sonos would be another matter.  So Sonos you do need to be on the same network as the Sonos.  But that's not trying to communicate with the outside world.



STEVE:  Right.



LEO:  So obviously the issue with the Ring Doorbell is it's communicating to the Internet.  That's how it talks to your phone.



STEVE:  Right.  And so it's certainly the case that if your phone was outside by virtue of being on cellular, obviously it would be able to get to your Ring, whether you're away from the house or at home.  



LEO:  Right.



STEVE:  What I didn't know was if your phone was on a WiFi network other than the Ring, is it still able to get to it?



LEO:  No, but it doesn't need to.  Well, wait a minute.  Maybe, no, it doesn't need to.  I was thinking maybe - and I'll have to remember back in configuration.  In the process of configuration it might.  But it doesn't matter.  When it's on the home network, you're still using the public Internet to notify the phone.  It doesn't switch to the local network.



STEVE:  So, however, I liked Dan's question, and it is emblematic of a number that we received after we were talking about this, this idea of using a guest network.  And he mentions that enabling devices on the guest network to communicate with each other also enables devices on the guest network to use the main network, too.  So if you do inter-guest isolation, then they only see the Internet.  But there are applications where you want cross IoT, like the Sonos example.  You want devices on WiFi to be able to talk to each other.  And then there's the question of not all routers have a guest network, or we're not quite sure exactly how it works, what it provides, what it allows, and what it doesn't.



So although it's not as easy as flipping a switch, which may not be available in your router anyway, the fallback, which is really a better solution, if you're concerned about this, is to get a second router, maybe it's the older generation WiFi router that's now in the closet or in the garage, and plug it into your main router.  It's your guest router.  Now give it its own password.  Everything on that WiFi router will be able to see each other fluently, with no trouble at all, because it's just a regular WiFi network, although it's your secondary, it's your IoT WiFi network.



And by virtue of it being plugged into your main router, it will have outbound-only access to the Internet.  There is no way that anything, any mischievous behavior of the IoT devices can get over, can like jump through the router that controls them and then through the exterior router, which has your primary non-IoT WiFi, and the rest of your Intranet.



So just using the older generation, the wireless router that you've retired, make that your IoT router, plug it into your main router, that is, plug its WAN connection into one of your primary router's LAN connections, and it'll get an IP, and your IoT devices will have their own little world to play in, and you don't have to worry about the precise behavior of a guest network...



LEO:  Yes, good idea.



STEVE:  ...setting on your main router.  I like that much better.



LEO:  Yeah, that's a great way to do it.  All right.  Last one, my friend, comes to us from Scott T. in Cleveland, Ohio.  He has a clever Harry and Harriet's Tip of the Week:  Steve and Leo, blah blah, Vitamin D, very low carb, blah blah.  I was listening to the LostPass episode and heard Leo mention that women's razors tend to be less sharp than men's razors.  My wife and I employ a cost-saving and sharpness-conscious solution to using Harry's cartridges.  Oh, I'm not sure I like where this is going.



STEVE:  I know.  Everybody now can guess what it is.



LEO:  Yeah.  I don't think Lisa's going to go for this.



STEVE:  Uh-oh.



LEO:  I start with a new, fresh Harry's cartridge on Monday mornings.  I then shave with it all week.  After I've used it for a week, carefully making it less sharp, I put my week-old blade on my wife's Harry's handle.  This way we each get a new, to us, blade each Monday, and we only pay for one new blade a week for the two of us, thus cutting the cost in half.  That's why, by the way, we tell everybody to go to Harry's.  It's inexpensive enough.  I get a brand new blade each Monday.  My wife never has to think about how sharp her razor is, or ever worry about changing blades.  We've been using this approach for over six months now, and she's completely happy, as am I.



Well, Scott, there you go.  I could try that.  Lisa uses the Harry's and is perfectly happy with that.  She doesn't mind a sharp blade.  In fact, when we were told that, I think it was Harry's that told us that, she said, "What?  I never heard of that."  But Harry's told us the blades sold for women tend to be duller for some reason.



STEVE:  Well, Scott has a clever solution.



LEO:  Good solution.



STEVE:  I just wanted to share it with our listeners.



LEO:  Good solution.  Not going to work in my house.  Hand-me-down blades?  Oh, hell, no.  Oh, no, you didn't.



STEVE:  Lovingly desharpened.



LEO:  Yeah, there you go.  Well, that's different.



STEVE:  I've rubbed them on my face for a week for you, honey, and they're lovingly desharpened.  Because we wouldn't want you to nick yourself.



LEO:  Don't want you to get hurt.



STEVE:  They're safer now.  So, yeah.



LEO:  Yes, absolutely.  Steve's at GRC.com.  You might have figured that out by now.  That's where you can find out more about SQRL, about SpinRite, the world's best hard drive maintenance and recovery utility.  That's where you can find out about Vitamin D.  You can listen to this show, too.  He's got the podcast there, audio versions, along with transcripts, text transcripts, at GRC.com.  We have the audio and the video at TWiT.tv/sn, and you can find it of course wherever podcasts exist.  But Steve's the only one with the transcript, GRC.com.



We'll be back next week, next Tuesday, 1:30 p.m. Pacific, 4:30 p.m. Eastern time, that's 21:30 UTC.  So please, tune in.  Watch live if you can.  But as I said, you can always download it later.  Thanks, Steve.  We'll see you next time on Security Now!.



STEVE:  Thanks, Leo.  



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#545

DATE:		February 2, 2016

TITLE:		Three Dumb Routers

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-545.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm	



DESCRIPTION:  Steve and Leo catch up with the past week's small amount of security news, then they talk a bit about Steve's discovery of a rare and wonderful true EEG sleep monitor and various other miscellany.  Then Steve digs deep into home consumer router operation to explain why no fewer than "three dumb routers" are required for full, true, securely isolated network operation.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson's here.  Once again we talk about the Internet of Things and how to secure your home from all these little doohickeys that are online.  Turns out Steve's got the best way to do it.  We've mentioned guest networks before.  We've mentioned a two-router solution.  But the real robust way to do it, three dumb routers.  Stay tuned.  Security Now! is next.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 545, recorded Tuesday, February 2nd, 2016:  Three Dumb Routers.



It's time for Security Now!, a show that in this case is very aptly named, two dumb routers, plus a third, just you.  No, no.  Steve Gibson is here.  We are going to talk about routers in just a little bit.  He is the guy at GRC.com, the creator of SpinRite, the man who does the best job ever of explaining, not just security, but technology in general.  And now, 10 years in, people are loving this show, I know.



And I hear from people all the time.  Who did I just get an email from?  Oh, I know what it was.  I just read a post, "My Favorite Podcasts."  And the fellow who wrote the post is on Medium.  What did he write?  I've got to find the quote because he wrote a very nice thing about Security Now! and how geeky the show is.



STEVE GIBSON:  Oh, and believe me, we will not disappoint him this week.



LEO:  So, Steve-o, hello.  What's on the...



STEVE:  Yo, my friend.  So we did not have a lot of news, which is just as well.  That and the Iowa Caucus.  I knew I wasn't going to get, you know, because I'm a complete political junkie.  And so yesterday was - there was no way I could be producing a 20-page podcast of notes beforehand.



LEO:  Wait a minute.  What were you doing?  I mean, what were you watching?  You were watching Iowans gather and...



STEVE:  I was watching slow counts of delegates.



LEO:  Very slow.  Very slow.



STEVE:  Come in to see whether Bernie was going to actually get ahead of Hillary, or whether she was going to eke out a...



LEO:  You do take this seriously, if you take Iowa seriously.  Did you see our podcast, our Triangulation yesterday?



STEVE:  No.



LEO:  Oh, you should see it.  The guy was the, for four years, advisor to then-Secretary of State Clinton on innovation and technology.  And he's a Silicon Valley guy.  And I asked him to give us kind of an inside-the-beltway view of what it looks like to Washington wonks...



STEVE:  Neat.



LEO:  ...when the real world, you know, and so forth.  It was really very interesting stuff.  But we both concurred, Iowa is the craziest way to start this campaign season.  It all comes down to Super Tuesday.  There are so many delegates then.  And until then, it's not really that important.



STEVE:  No, and in fact for me as a junkie - it's funny, too, because I was thinking about your comment about my enthusiasm for various TV series that I watch.  And last week you said, wow, you know, you watch a lot of television.  And I thought, you know, Leo, how many hours of sports do you have on your television?  Because I have zero.



LEO:  I don't watch that much sports.  I watch, maybe I watch an NFL game for 16 weeks a year, once a week.  No, I'm not a big sports fanatic.  But I do, I watch - no, hey, I'm not critical because I watch a lot of TV, too.  Lately I've been playing more Minecraft.  But that's another story for another day.



STEVE:  You have been, really?



LEO:  Oh, yeah.



STEVE:  Because I know that for a long time you haven't, like, understood what that was all about, and I've watched you...



LEO:  I didn't get it.



STEVE:  ...the last few weeks beginning to sort of, like, understand the whole Minecraft phenomenon.



LEO:  Well, Lisa's son Michael, who's 13, has been a Minecraft buff for, like, five years, since it really came out, and is quite adept at it, really adept at it.  And he's been begging me to create a Minecraft server in our house.  Actually, it ties in very well to the subject of the show today because I've always said to him, "Oh, no, no, it's too dangerous to run our own server.  You can rent Minecraft servers.  There's public servers.  Just use those."



But finally I got a Raspberry Pi, and I was trying to think, what could I do with this Raspberry Pi?  And I thought, you know, this actually would be - it's just a little Linux, $35 Linux computer.  This would be a great Minecraft server.  So I set it up.  And it was so easy that I said, gosh.  But you can only get five people in at a time because it's not very powerful.  In fact it kind of lags.



STEVE:  And so is that the reason for having a server is that he would then be able to host his own groups?



LEO:  His own clubhouse, yeah.



STEVE:  Ah.



LEO:  Servers, the nice thing about Minecraft is the work you do is persistent.  So it creates a world which is then "the world," and you and your - and it's infinite.  It's huge.  Not completely infinite, but I think it's limited to 30TB of data.  So it's functionally infinite.  And it's persistent.  So if you build a house and come back tomorrow, the house is still there.  So he and his friends come in, it's like their clubhouse.  And now with kids today they don't really get to go play, right, go out in the street and play.  You can't do that anymore.



STEVE:  No, no, you might, like, actually...



LEO:  Stranger danger.



STEVE:  You might skin your knee.



LEO:  Yeah.  So, and he's kind of inclined to sit in front of the computer anyway.  So I thought this would be great, and it night be a way for us to bond a little bit.  So we set up this server.  Then I realized, I need a more powerful computer.  And I had that Mac Pro in a corner.  So it's running on a very powerful computer now.



STEVE:  Yeah.



LEO:  In fact, so much so that I've put two more servers because then I thought, well, that was easy.  Maybe I - I wonder if I could find the old TWiT Minecraft server.  And it turned out...



STEVE:  So is there a Minecraft server for Mac?  Is that, like, [crosstalk]?



LEO:  Yeah.  And I'm running a third - oh, there's many.  There's the official...



STEVE:  And what was Minecraft written in?



LEO:  Java.  That's why.  Java.



STEVE:  That's what I thought, yeah.



LEO:  So it runs everywhere.



STEVE:  I remembered there was something about it, yeah.



LEO:  It runs everywhere.  And the server, because it's not a GUI, is really easy to be portable; right?  So it's Linux, Windows, OS X, whatever.



STEVE:  Well, we will, in this podcast, as you said, it's perfect because I will explain to you why, if the Minecraft server was known by bad guys to have a flaw, that would allow them...



LEO:  Right, right.



STEVE:  ...to completely get into and take over your home network.



LEO:  See, that's my concern.  Because of course I'm using port forwarding.  I don't DMZ the computer.  



STEVE:  Correct.  Doesn't help you.



LEO:  It's one single port, UDP, TCP/IP.



STEVE:  Doesn't help you.



LEO:  They go in.  But you're right, if there's a flaw in the server - and by the way, there probably is, it's just...



STEVE:  How could there not be?  Look at the stuff we talk about, like OpenSSL.



LEO:  Right.  And this is just some kids wrote it; right?  I'm using a third-party server.



STEVE:  Yeah, exactly.



LEO:  Yeah, yeah.  So, good, I would, A, it behooves one to keep it up to date; but, B, I'd like to know how to make it a little bit safer.



STEVE:  Okay.  So today's podcast is titled Three Dumb Routers.  And not Three Blind Mice, Three Dumb Routers.  First I titled it Router Topology.  I thought, well, that's just sort of dry and boring.  So, and Three Dumb Routers is actually a much better title because what I'm going to explain, and this is going to be a deep in the weeds, we're going to be talking about ARP broadcasts and IP-to-Mac address resolution.  I want to explain why no two-router solution can work.



Last week I suggested that the IoT devices be put on what I would call the "interior router," the router inside your main router.  And I got a whole bunch of people saying, "Oh, Gibson, you got that backwards."  Well, yeah, I understand that.  Ten years ago - and Leo, in fact, if you go to - there's a link to it at the very end of the show notes, but also just in the GRC menu it's under Research > General> NAT Router Security, I think I called it.



Ten years ago, in 2006, in August, I first presented this idea of daisy-chaining routers, chaining them together.  And I drew a picture of a router, sort of like one-way valve where stuff could go out, but it couldn't come back in.  And on those pages I did put the high-security network on the inside.  The problem is, that's not secure, either.  So my point is that no two-router solution...



LEO:  Yup.



STEVE:  There's the picture.  So I sort of showed it as a valve with a flap, where stuff could go out, but it couldn't come in.  And if you scroll down about halfway, you'll see a diagram with two routers, further down, a little more, down, down, down, further, yup, there it is.  So there's the super-secure LAN on the internal NAT and the semi-secure LAN sort of in between the two.  And the problem is that's got problems.  So it really doesn't matter which way you put them.  And I was trying to compromise, and I shouldn't have.



So this week is the zero-compromise, this is the way you do it if you have dumb routers and you just want absolute security, absolute network isolation between an Internet of Things network and your regular home network.  There are all kinds of ways to do this with fancy routers, with, like, pfSense and firewalls and rules and so forth.  You really probably want to use VLANs, Virtual Local Area Networks, in order to get true what's called "broadcast domain" isolation.  Anyway, I'm going to explain all about that at the end of this podcast.  That's the topic.  And we didn't really have much news.



LEO:  Second week in a row.  Those hackers are getting - they're slackers.



STEVE:  Has been quiet.  One thing I got a kick out of, speaking of Java, is that, in a sort of a, well, we're not the first people to give up on browser plugins, the so-called Java Platform Group at Oracle formally announced the end of the browser Java plugin.  And it's like, I mean, if anything, this podcast could be called "Why Has This Taken So Long?"  Because for years, you know, 10 years ago, Leo, for years, starting at the beginning of the podcast, it was email viruses.  It was like, "Okay, Microsoft, turn off scripting in email.  Turn it off."  And it just took forever.  And similar, it was like, "Microsoft, turn on the XP firewall by default."  Well, that took them until Service Pack 2 to get around to doing that.  So this is, you know, "Oracle, kill the Java plugin."  And, yes.



LEO:  There's only one left now, and it's Flash.  And kill that, and then we're done; right?  Everything's going to be secure.  Everybody's going to be happy.



STEVE:  Exactly.  I got a kick out of this blog post because this was like, okay, so here's what they said:  "By late 2015" - so, right, a couple months ago - "many browser vendors have either removed or announced timelines for the removal of standards-based plugin support, eliminating" - this is Oracle speaking - "eliminating the ability to embed Flash, Silverlight, Java, and other plugin-based technologies."  So of course, not that it was always a horrible idea.  It's that, well, you know, everybody else is saying they're not going to support this anymore.



So continuing, Oracle says:  "With modern browser vendors working to restrict and reduce plugin support in their products, developers of applications that rely on the Java browser plugin need to consider alternative options, such as migrating from Java Applets, which rely on a browser plugin, to the plugin-free Java Web Start technology.  Oracle plans to deprecate the Java browser plugin in JDK [that's the Java Development Kit] 9.  This technology will be removed from the Oracle JDK and JRE [that's the Java Runtime Engine] in a future Java SE release."  And then they give some links about JDK9, talking about how it's coming.



So, yes, this got picked up by the tech press saying, yes, finally, Java is being removed from the browsers.  And mostly what Java is saying is, well, you know, we didn't want to give up, but the browsers are refusing to host our plugin anymore in one form or another.  So we're not going to fight it, we're killing it off completely.  And then so what they'll have is they'll have this Java Web Start technology I've not taken a look at yet.  But it's not a plugin in the browser.



And let's just hope it doesn't have its own set of catastrophic problems.  It sounds frightening.  I mean, the only thing that might save it is if it requires a lot of user interaction and verification before it runs something that you obtain from just promiscuous web surfing, which is never safe when Java is your target.  I mean, Java's a full-strength programming language.  As you were just saying, Minecraft was written in it.  You can do anything with it that you need to, which is also part of its benefit.  The problem is you don't want to stick it in a web page for all the reasons we've been talking about for the last decade.  Also yesterday...



LEO:  Is NPAPI the plugin that they're referring to?  That's the deprecated plugin from Firefox.  It must be, the NPAPI.



STEVE:  No, NPAPI is Netscape's own browser API.  So, but there's Java plugins for all browsers historically.



Okay, so yesterday Google gave us their Nexus Security Bulletin for Android.  And these are fixes for February.  Short version is you want to, if you have a Google Nexus device, you'd absolutely want to update because these are not really bone-chilling, but they're a concern.  And it's funny, as I was looking through this and pulling this together for the show, I thought, okay, this sounds exactly like a set of security notices, like that we've been covering for years, for like a Mac or a PC.  It's like, oh, yes, Android is a full-blown operating system.  Even though it's hiding in a smartphone typically, it's as much of a connected OS as any of the ones we've been discussing.  So it's good to see that movement in the direction of this consumer device, which is as much an OS as the desktop devices, being given the same kind of attention for security.



There were two critical vulnerabilities found and fixed by this update yesterday, found in Broadcom's WiFi driver, which is part of Google's Nexus build for Android.  And the concern is that anyone who leverages this vulnerability can potentially execute code remotely, but only if they're on the same WiFi.  This is why I said this wasn't as bone-chilling as some that we've seen before.  So there are two remote-code execution vulnerabilities, but they involve the way the Broadcom WiFi kernel driver deals with wireless control message packets.  So it's a subtle problem, only affects WiFi LAN, that is, it is not exploitable at a great distance.  So it would be somebody on the same WiFi network as you.



The problem is that, if this doesn't get patched, if it can be turned into a remote code execution vulnerability, no one is saying yet that that's been done.  All they're saying is that they're able to corrupt kernel memory, which typically means that externally provided data can be forced into the system.  And once the bad guys figure out how to execute that externally provided data, that gives them a remote code execution opportunity.  So that you want to fix.



Mediaserver, this very troubled module, which of course gave us StageFright and lots of coverage last year, is continuing to deliver.  We've got two critical security vulnerabilities, additional ones, that have just been found and fixed in it.  And those, unlike this Broadcom WiFi problem, are remotely exploitable.  Again, this is somebody sends you something from anywhere, and that can cause problems.  So web browsing, email, MMS files, just basically your device needs to process a maliciously crafted media file.  Anything that some bad guy can do to get that to happen can potentially compromise your security.  And then there were some moderate and - there were four high-severity and one moderate.



But anyway, as I said, as I was going through this, it's like, wow, this sounds just like a regular OS getting its security fixed.  And in fact that's what it is.



Our friend Mary Jo Foley noted in her ZDNet column, and the Hacker News and Beta News and everybody picked on the fact, that Windows 10 upgrade has, as promised, moved Windows 10 upgrading from optional to recommended in the Windows Update event.  So I imagine, here we are on February 2nd, the first Tuesday of the month.  On the 9th, next week, which will be Patch Tuesday for Microsoft, we may find that there is now a recommended update for people who haven't yet from Microsoft.



So if you haven't yet, if you don't want Windows 10 for whatever reason, you won't want to wait more than a week before doing what you can.  And we've talked about that often, the various, like the GWX Control Panel is the slam-dunk easy thing to do to block Windows 10, and there are, as we covered last week or the week before, Microsoft has now actually got an update that adds features to Windows 7 and 8.1 to allow you, using Microsoft's sanctioned approach, to prevent the Windows 10 update on a system where you don't want that to happen.



I got two tweets that I thought were interesting, I just wanted to share, on this whole ongoing and very interesting dialogue about where we stand with encryption.  Matt tweeted me yesterday  morning, he said, "@SGgrc You keep talking about Apple being able to do safe warrant access crypto.  What about all the others that can't, but would have to?"  And I thought, wow, that is a good point.  It's not something that I had even thought of.  And so I wanted to thank Matt for bringing that up and wanted to share it because, I mean, that's - I think it's a good point.



I have talked about Apple's billions of dollars and their budget and their clearly proven ability to create the equivalent of a very high-security safe where individual unlock keys for every single one of their phones would be kept under this hypothetical solution that I proposed as sort of a compromise, which would not be a backdoor, but would be a way of allowing Apple under court order to provide a key.  And then of course last week we also talked about the idea of also requiring physical access.



But what I hadn't considered and that Matt brought up is that, well, okay, but what about all the other companies?  I mean, if this was the way things worked, suddenly everybody would have big safes of users' keys.  And that's clearly a deal killer.  I don't trust, I mean, I barely trust Apple.  And all of our experience is that, in general, companies can't keep secrets.  It's incredible difficult to do.  And as a result, people are having all their personal details published and passwords lost, and everyone's having to run around and change their passwords all the time.  So anyway, I'm really glad that Matt brought that up because it just - it wasn't on my radar; and it's like, whoa, that's a very good point.



And this came in a DM, and I didn't have the guy's permission to share it, so I won't share his name.  But he said, "The U.S. might have laws preventing unreasonable search, but a lot of countries in which Apple does business have no such protections.  If you make the phone technically accessible to U.S. authorities, you make it technically accessible to every country's authorities."  And that's not necessarily the case.  So I wanted to rebut that a little bit and use that opportunity to clarify that this sort of compromise I've been talking about would require that the vendor of a technology like a smartphone keep a safe of individual keys.



Now, it's true, if, for example, a foreign government required those keys to be stored in their country, then that might limit the vendor's control and security management of those keys, and once again we're in trouble.  So maybe there's no way to do this.  I mean, I think this has been, if nothing else, a useful thought experiment because that's the only compromise I can come up with.  But holes are getting punched in it that are good holes.  So I wanted to share those.



We talked last week about Netstat as a useful, ubiquitously available since the beginning of UNIX, well, the beginning of the Internet on UNIX, which is where the Internet was born, command line tool.  And a number of people tweeted and reminded me that our friend Mark Russinovich has TCP View.  It is a Windows-only solution.  So one of the reasons I wanted to talk about Netstat is it is available for the Mac and Linux machines.  I mean, if you have a TCP/IP stack in your machine, along with it will be commands like ping and traceroute and netstat.



But I did want to mention TCP View because there are so many Windows systems, and it is free.  It's a cute little, I think it's 285k download, nicely written like Mark's stuff, doesn't require registration.  It's just an EXE that you run.  The first time you run it you agree to a license, and I think he must make a mark in the registry or something because it doesn't ask you every time, but you don't have to even install it.  It's just an EXE that you run, very much like mine.  And it does provide a very nice dynamically updating GUI display as opposed to a command prompt.  So I would say that's way more practical for most users who are using Windows.  And there's likely utilities for the other OSes that are similar.



So I've been talking a little bit about sleep.  And Leo, you know that I've been focusing on sleep and insomnia.  And I mentioned last week that I was working on refining a solution which was going to work for me to keep me asleep all night.  The particular type of insomnia I have is where I'm able to go to sleep very quickly; but, after about four hours, like around maybe 3:00 a.m. or 4:00 a.m., my eyes open.



LEO:  Right.



STEVE:  And I'm, like, wide awake and then in the past have laid there for a couple hours, trying to go back to sleep, sometimes succeeding, sometimes not.  When my friends at Starbucks see me, it's on mornings when I just gave up, and I went in and was at Starbucks when they opened.  I also mentioned previously that, when I decided I was going to tackle this, back in like around early, I guess toward the middle of October, I purchased a couple so-called "sleep monitors."  And these were things like one was the Jawbone UP3, and I also got the top-of-the-line Fitbit.  Did some research; they looked like the best things available.  And, sadly, they're very limited.  They're so-called "ActiGraphs," or they use "actigraphy," which is to say they monitor how active you are.



LEO:  It's a fancy word for "Did he move his arm?"



STEVE:  Yeah, exactly.  No, and they have, you know, they can measure body temperature, heart rate, maybe respiration.  You get respiration, interestingly enough, because whenever we exhale, our heart rate slows down just a little bit.  And when we inhale, our heart rate increases.  And so by doing beat-to-beat, inter-beat interval measuring, a device which is monitoring your heart rate can also determine your rate of respiration.  So there's a lot they can get.  But as I had mentioned before on this podcast, unless you are hooked up to someone's head, you just don't know what's going on inside.  There is no way.  And as you just mentioned, if you lay really still and aren't flopping around in bed, it thinks you're asleep.  So I purchased, tried, and returned both of those.



LEO:  Oh.



STEVE:  Because they were just junk.  I would compare what they said to what I knew had happened, and there was no correlation.  I mean, yes, am I disco dancing, or am I in bed?  That it could determine.  But it had no idea otherwise.  So as you know, because I shared this with you a couple months ago...



LEO:  In top secrecy.



STEVE:  Top secrecy because I knew the moment I mentioned this they would disappear, and I wanted my closest friends to have access to this technology, and then in successive spheres I would make it more available.  There was a company founded in 2003 called Zeo.  It was originally named Axon, cool name, Axon Labs, founded by four Brown University students at the very end of 2003.  And their goal was to create a true, practical, real EEG sleep monitor.  They ran for 10 years.  And during the course of those 10 years, from 2003 to 2013, they produced three products.



The first was a bedside clock radio format where it had a display, and it was an electroluminescent display, and you put this headband on which went around your head, sitting on your forehead, and it had a little pod on it about two inches by one inch.  And the headband snapped onto the pod.  And on the inside were, in three in a row, three silver cloth sort of, well, they were electrodes which were able to measure your EEG, your brainwaves, from the front of your forehead.  And also, due to their position, they were able to pick up what's known as "muscle artifact," which is the electrical signals caused by your eye muscles.  And of course that's useful because rapid eye movement, REM sleep, is one of the acknowledged stages of sleep.  So by being positioned above your eyes, on your forehead, they could actually get your brain waves and pick up your eye movement muscle artifact.



The problem was, well, okay.  So that product was developed and existed.  And it could dump out onto an SD card, and then you were able to use the SD card to transfer it to other things.  This was sort of, what, 2003.  Where was the Internet in 2003?  I'm not completely clear on that.



LEO:  It was on my server.  No.



STEVE:  Was it beginning to happen?  It was probably...



LEO:  Oh, yeah.  No, it was happening big-time.  Remember we even had the bust by 2000.



STEVE:  Oh, that's right, okay.  So...



LEO:  It's funny, that was a long time ago, though, wasn't it.



STEVE:  It was.  It's like, wow, okay.



LEO:  Twelve years ago, yeah.



STEVE:  What did we have then?  Then they did a less expensive version that had a docking station that you docked this pod in.  And then, finally, their very last one, and I actually...



LEO:  Steve's reaching over to get it.



STEVE:  Yeah, reaching, is this thing, which was called the Zeo Sleep Manager Pro.  And they reduced it down to just the pod with the headband and a smartphone because later in the company life they could assume that everybody had smartphones.  The original device was not dependent upon a smartphone.



Okay.  So it turns out this is the real deal.  And, I mean, it works unbelievably well.  If you go to GRC.com/zeo, you will find a web page I just put up this morning.  What happened is a surplus reseller on eBay purchased a bunch of stock of these final Zeo units - the pods, the headbands, their charging cord, and so forth - and have been selling them.  The problem was they didn't have enough.  I wrote to them and said, okay, I know that there are people who listen to my podcast who are going to think the idea of actually monitoring their sleep is cool.  But 10 isn't going to do it.  So how many do you have?  And they responded that they have many hundreds, maybe a thousand.



So I've been waiting until they relisted them, which happened on Saturday.  So I tweeted the news.  First I let everyone in GRC's health newsgroup know so that they could get them.  Then I tweeted the news on Sunday so that my Twitter followers would know.  And now I'm telling everybody on the podcast, which is essentially the entire universe.  So what's cool is that they are selling these brand new, never used, sealed, not in the final packaging because the packaging doesn't exist.  This was just - these were purchased from, probably out of bankruptcy or after the company closed as it was liquidating its assets.



But for $40 on eBay right now, these little Zeo pods are available.  You must have a Android device because Google Play store still has the Zeo software, but iOS yanked it shortly after the Zeo company died.  So it did run on both smartphone platforms, but you can't get it anymore for iOS.  So it requires an Android device.  I bought, for this purpose, an Amazon Kindle Fire so that I had something to receive the signal.  So again, GRC.com/zeo will take you to the page where I have links to the two eBay sales.  One is the $40 pod, headband, and charger.  The second one is the headbands only.  And the headbands, Zeo said, you should replace them about every 90 days.  But users with experience said that they lasted as long as a year.  And I always wipe my forehead off with an alcohol wipe in order to get a better connection for my night's EEG reading.



I also, lower down on that page, have a couple links so that you can see what EKG or - I'm sorry, I keep saying EKG - what EEG the Zeo produces, which I've been recording.  And I have to say I am getting very near having a practical formula.  It has already worked for a couple other people who've been following along and experimenting with what I call my "alpha release" of the HSF, the Healthy Sleep Formula.  So I think I'll have something to say about that before very much longer.



But I did want to let anyone who's interested in monitoring their sleep at night for what I consider a bargain of $40 - there's only, like, 90 of them there because they just - they keep not - I don't know if they're going to raise their price, or if they're going to relist them.  They saw a large number of them sell, a couple hundred, after I tweeted on Sunday.  I'm sure that this current auction will get wiped out quickly.  But they do have more.



So if you follow the links, and it may say that it's been relisted, follow the relisting.  I'll update the links as I find that they've been relisted.  But I can say that I've been using it now for 10 weeks, about 70 nights, seven zero nights, and I have a complete chronology of a breakdown showing the amount of time spent in REM, in light sleep, in deep sleep, and waking up in the middle of the night and trying to go back to sleep.  I also separately have a complete log of all the supplements that each night generated.  And I'm beginning to see correlations now out of this mass of data that I have collected.  So Zeo Sleep Manager Pro.  Oh, I should mention, too, that there's now a Zeoband.com company considering launching to create replacement bands, Zeoband.com.



LEO:  Oh, that's nice.



STEVE:  Zeoband.com.  At this point they're just gathering interest.  So anyone who's interested should go there.  People from - shoot, can't think of the name.  There's a neat hobbyist electronics company that manufactures all kinds of crazy widgets for makers.  It'll come to me.  And I have it on that page.  They produce, or they offer for sale, silver-impregnated cloth, exactly like what the Zeo headband uses.  And people have successfully repaired their headbands after the silvering of the cloth has worn off.  That's what happens after some number of nights of use is that the electrodes start losing conductivity because the silver just flakes off.  So SparkFun.  That's the name I was trying to come up with.



LEO:  Oh, neat, yeah, yeah.  They're great.



STEVE:  SparkFun has three different links to three different grades and types of silver cloth.  And if you Google "Zeo," Z-E-O, there's a huge culture of users.  People have made third-party firmware.  You can get other displayers and viewers of this information, all kinds of stuff.  So there's, I mean, this thing was popular enough and successful enough that it created an ecosystem of its own that has continued to live on.



I should mention that the one caveat, aside from the headband's un-infinite life, is that inside is a 3.7-volt LiPo cell.  And these things cannot be user opened.  At some point we will all be cracking ours open in order to replace the LiPo cell.  It's the same one used by the little microcopters, the little micro quadcopters.  So it's a very small but widely available 3.7-volt lithium polymer cell.  Those, of course, have a limited life.  So, and it's not just shelf life that's limited, but it's also cycle life.



So at some point I expect that our Zeo pods will start dying.  I just want to give everyone a heads-up.  If I'm still into this and tracking my EEG sleep, I'm sure I will tackle cracking mine open and share the information about how to do that.  But so will the ecosystem that exists.  So anyway, GRC.com/zeo, Z-E-O.  That'll take you to my page where I've got links to the auctions, and also links to show the graphs that I've been producing using mine.



We were talking about Syfy, and like on the question of what has happened?  How was "Childhood's End" so good?  Why is "The Expanse" so good?  And by the way, all morning - I tweeted this yesterday - all morning Syfy has been doing a marathon of all previous episodes leading up to tonight's double episode season finale.  And when I saw last week that it was the season finale, it's like, what?  It's like, oh, crap, you know, now we have another thing like...



LEO:  "Game of Thrones."



STEVE:  Exactly, like "Game of Thrones," where the seasons are short, and you have to wait a year between them, which is [crosstalk].



LEO:  Well, you know, they put a lot of effort into these, obviously, yeah.



STEVE:  Anyway, so a number of people were happy to have that.  But I wanted to answer the question, what has happened at Syfy?  And there was a Wired podcast during which they recently interviewed Bill McGoldrick, who is the new head of programming at Syfy.



And Wired said:  "This past week Syfy premiered 'Childhood's End,' a six-hour adaptation of Arthur C. Clarke's classic first contact novel.  The show is part of an ambitious new slate of book-to-TV adaptations being overseen by Bill McGoldrick, Syfy's new head of original programming.  And while Hollywood is known for misguided rewrites of sci-fi classics, McGoldrick was determined to create a faithful adaptation of Clark's novel.  McGoldrick said:  'We all just wanted to honor the book and really give him [meaning Arthur C. Clarke] the recognition that he was just so prescient because all the themes and all the things he was writing about are still so valid today.'"



Then Wired writes:  "For years, Syfy has tried to broaden their appeal beyond science fiction fans, populating the channel with ghost hunters, pro wrestlers, and low-budget creature features like 'Sharknado' and 'Mansquito.'  And while that did pull in new viewers, it also alienated sci-fi fans."  And I'm adding, and how.  "McGoldrick was brought in with a clear mandate:  Lure the fans back with smart, ambitious shows.  Adapting classic books is part of that plan.  McGoldrick said:  'We want to honor that core fan base that is passionate about the material.  We're really trying to focus on that core audience.  And I think the way to do that is to respect the stuff that they really liked in the first place.'"  Which of course is music to my ears.



And Wired says:  "One thing fans are passionate about is space opera shows like 'Farscape,' 'Firefly,' and 'Battlestar Galactica.'  But in recent years, Syfy simply lacked the budget to create those kinds of shows.  McGoldrick said:  'If you don't have the budget to go up into space and try to make that feel authentic, you might have to do some things that don't play to the core as much as sci-fi fans would like.'"



And then Wired finishes, saying:  "But things have changed.  The success of core genre shows like HBO's 'Game of Thrones' and AMC's 'The Walking Dead' have persuaded Syfy's parent company, Comcast, to invest big in the channel.  That means new sci-fi shows like 'Childhood's End' and 'The Expanse' are full of gorgeous visuals and jaw-dropping special effects.  McGoldrick promises that future book adaptations, which include classic works, will have a similar focus on quality.  McGoldrick says:  'The wallet will open for the right show.  And that's what makes it so exciting to have this job right now.'"



And I, of course, say, "Yay."  And again, "The Expanse" is turning out to be 100% worth watching.  And the ratings, IMDB, it's all up in the high 8s and 9s out of 10 every single episode, and it deserves it.  It had a little bit of a rough start.  But I think it's found its footing.  And so let's hope we have many more seasons of it.  And at only 10 episodes per, they've got a lot, I mean, and believe me, I read the four books.  This thing can go for - it can outlive the podcast.  There's even that chance.



LEO:  Who wrote "The Expanse"?



STEVE:  Oh, shoot, I don't know.  If you google it, you'll find it instantly.  It's not an author that I recognized, and I've read nothing else he's done.



LEO:  Yeah.  All right.  Interesting.



STEVE:  Did it come up?



LEO:  I haven't googled it yet.



STEVE:  As far as I know, that's all he's done.



LEO:  I thought the chatroom might...



STEVE:  Ah.



LEO:  Let me google it real quickly here.



STEVE:  And Leo...



LEO:  It is by James S. A. Corey.  Oh, he is...



STEVE:  Yes.  Oh, yeah, and he does have a lot of other books.



LEO:  That's actually two people, interestingly, Daniel Abraham and Ty Franck.  And they did "Leviathan Awakes," which I liked quite a bit.  You recommended "Leviathan Awakes," actually.



STEVE:  And that's the title of the second of tonight's two episodes.



LEO:  Okay.  So that's one of "The Expanse" stories?



STEVE:  Yes.



LEO:  Didn't realize that.  Okay.  Now I'm putting two and two together.  Yeah, because I read that on your recommendation.  All right.



STEVE:  Yeah, and it's good science fiction.  I absolutely enjoyed it.  And for what it's worth, if people like - if watching the - I guess we ought to find out if it's available on Audible.  I didn't think to do that.



LEO:  Oh, I'm sure it is.



STEVE:  If watching the series has whet your appetite...



LEO:  That's how I listened to it, so I know it is, yeah.



STEVE:  Oh, okay, good.  So available on Audible.  Then that's what you want to do for your Audible picks because you could jump ahead.  The books are always going to be better than a...



LEO:  That's my problem with filmed or taped sci-fi, frankly.



STEVE:  Yeah.



LEO:  You cannot spend enough money to do what you can do in your imagination.  Ever.  You just...



STEVE:  Well, and I would argue that the medium doesn't provide the richness of description.  Actors have to act what they're thinking, where the author can give you, I mean, detail what's going on in their head.



LEO:  Yeah, precisely.



STEVE:  Okay, now, this is more - this is not a joke.  It's real.  But you'll get this because we've talked about this from time to time.  I received an email today, the Temperfect Mug Update #34.



LEO:  Oh, lord.  Yeah.  Yeah.



STEVE:  And it was titled "2016:  The Year of the Fire Monkey."  And so I got a kick out of it.  Then the email is trying to make me feel special by saying "For backers only."  And I was thinking, you know, guys, at this point you really don't get to limit your audience or pick who gets to read this.  And to give everyone a sense for this, first of all, I'll remind everyone, the Temperfect Mug was a Kickstarter project that - who even knows how long ago?  It was one of the founding projects of Kickstarter.



LEO:  It was a long time ago.



STEVE:  And with a very cool idea.  The concept was that, when you initially make a pot of coffee, it's too hot to drink.  And so you have to wait for it to cool down.  Then it passes through a range of drinkable temperature, after which time it becomes too cold to be very interested in being drunk.  So these guys said, okay, we're going to...



LEO:  I like how you put that.  The coffee is uninterested in being drunk at this point.  I'm sorry, you may not drink me.



STEVE:  I'm not longer interesting to you.



LEO:  No.



STEVE:  The idea was to not use a vacuum containment, or not only a vacuum containment, because the problem with that would be that it would successfully keep the coffee at the uncomfortably hot temperature for too long.  So you first surround the coffee container with something with high thermal inertia, like rock.  Or copper, a huge copper, a thick copper sleeve would be wonderful because then - but so their concept was you pour the super hot coffee into this thing.  And the environment, the surrounding sleeve immediately takes up that excess heat which was making the coffee too hot to drink, bringing it immediately down to drinkable temperature.  Now you've heated up this collar around the coffee.  And around it is a vacuum.  So the heat cannot get out, thanks to vacuum containment.  And but you've taken the heat away from the fluid into the solid.  And that now holds your coffee at the Temperfect temperature for hours.  And wouldn't it be nice if anyone actually had one of these.



LEO:  Why is this so hard?  By the way, you know that the reason this came up is that there is now a cup called Ember, which is actively maintaining the temperature.  You set the temperature, it's got a heater and a cooler, I guess, some sort of heat pump system, and it's actively maintaining the temperature.



STEVE:  Right.  You can do that with a Peltier cell.



LEO:  Yeah, something like that, yeah.



STEVE:  In order to pump the heat.  Anyway, so to give everyone a sense for this, Update #34.



LEO:  Oh, lord.



STEVE:  "January saw much progress on the Temperfect Mug project."



LEO:  Oh.  How exciting.



STEVE:  "Things are coming together."



LEO:  Yes, indeed.



STEVE:  "A number of sourcing subprojects were conducted successfully.  Loose ends were tied.  And all mug parts and supplies from several factories were brought together in one place for the culmination of the Made in China phase of this project, the 'stuffing' of the shipping container arranged by our sourcing agency to bring everything to the U.S.  Early in the month we wrapped up the trials and final adjustments to the lid mold, which was the last tool to be finished, and all the lids for our Kickstarter rewards got made on time.  All the plastic and rubber parts are now molded, inspected, consolidated, and ready to go into the container.  These are the lids, gaskets, sleeves, feet, and shutter pivots that dress the stainless steel mug bodies.



"And the bodies?  Most of the parts for those were made during my last trip to the factory in December.  Forty-five bodies were assembled without trouble and finished and looked good before I left.  Then later in December..."



LEO:  What?



STEVE:  "...the factory had a problem that..."



LEO:  Something went wrong?  No.



STEVE:  "...that required a large number of those assemblies to be scrapped."



LEO:  Oh, crap.



STEVE:  "(They were not strictly following the work instructions, the problem reported in last month's update)."  That would be Update #33.  "In January, the factory started to have other difficulties with the assembly, it seems because a machine was maladjusted."  Yeah.  Yeah.  Not only the machine.



LEO:  Okay.  This is starting to sound like a work of fiction.  I'm sorry.



STEVE:  Oh.  "After some time they found a solution and were able to rework the parts and get back on track with production."



LEO:  Oh, hallelujah.



STEVE:  In the interest of our listeners' ears bleeding, I skipped a chunk and finished with, I just couldn't resist this one last paragraph:  "We do know we won't be getting the shipment out of China before Chinese New Year."



LEO:  Oh, man.  Well, these things happen.



STEVE:  "Elvis has left the building.  The workers" - they actually wrote that.  "The workers are heading home to celebrate, and there's no one there to finish and pack and ship our mug parts.  They'll be back February 19th."  Stay tuned for Update #35.



LEO:  Oh, my god.  It is possible that these are well-meaning, well-intentioned people who've just had a...



STEVE:  Oh, Leo, I've not been sharing the updates.  For six months we went through the battle of not liking the way the shutters were being bent.



LEO:  They're perfectionists, these guys.



STEVE:  They are.



LEO:  Yeah.



STEVE:  And I love them for that.  Then there was the vacuum containment problem.



LEO:  Well, you know how that is, yeah.



STEVE:  Not only in Zurich with the Large Hadron Collider has there been a vacuum containment problem...



LEO:  Yes, no, yes, yes.



STEVE:  ...but with the Temperfect Mug, as well, both using similar technology.  Three of the four...



LEO:  There you go.  It's Large Hadron Collider technology.  There you go.  No wonder.  In fact, it's amazing that it works at all.



STEVE:  And you and I have - I remember you're down for one, and I am, too. 



LEO:  How much did we spent on that?



STEVE:  I think it was $189.  I got the Darth Vader black one, I think, the fancy one, because I was absolutely convinced this thing was going to be the answer to my coffee prayers.



LEO:  Well, it sounds like a great idea.



STEVE:  So, yeah, we'll see.



LEO:  I'm sure it is.



STEVE:  Speaking of answer to someone's prayers.



LEO:  Yes.



STEVE:  I won't drag everyone through a long testimonial.  I'll just mention that Dennis Stevens publicly tweeted yesterday afternoon, and I saw this, and I thought, okay, I'll just mention this on the podcast.  He said:  "Steve.  I use for my job" - oh, I'm sorry.  He said:  "@SGgrc System I use for my job, work from home, died."  So that's a system he has at home, he works from home, he uses for his job.  So work from home died.  "Ran my copy of SpinRite overnight.  No errors reported.  System booted fine.  #Happy."  So to Dennis and everyone else who's having success with SpinRite, I thank you for your support and for letting me know and sharing your successes.  And I wanted to mention that 76 Zeo pod systems have sold in the last hour.



LEO:  Already?  Just now? 



STEVE:  Yes.



LEO:  You're a monster.  They should never have gone out of business.



STEVE:  Well, and see, what happened was that they were unable to compete with the ActiGraph.  It's like, oh, wait, you mean it'll count my steps, and remind me that I'm not standing enough and that I need to walk more and what my heart rate is, and also monitor my sleep?  Oh, well, then, what do I need this Zeo thing for?



LEO:  Right, exactly.  



STEVE:  Except of course none of them can tell you what's actually going on in your head, unless they're measuring the electrical activity in your head.  So nobody who might think this will be cool will be disappointed.  So, with the caveats that the headband wears out, the battery will need replacement at some point...



LEO:  And it's not good for television personalities because you come into work with four dots on your forehead.



STEVE:  And I wanted to ask you because you mentioned the three divots.



LEO:  Yeah.



STEVE:  But that doesn't last more than 10 minutes; does it?



LEO:  Oh, yes.  It lasted all morning.  In fact, I went in...



STEVE:  Maybe you had it too tight.



LEO:  Yeah, could be.  I don't want to know how badly I'm sleeping.  I am sleeping terribly.  I know that.



STEVE:  Actually, Leo, I truly am about to have a solution.



LEO:  I'm going to wait for the solution.  I'm going to let you do the guinea pigging.



STEVE:  Yeah, that's what I do.



LEO:  He's the guinea pig.



STEVE:  Yup, I'm happy.



LEO:  Guinea pigging.



STEVE:  Happy being a guinea pig.  Anyway, so this is a - we'll call this a benefit to the listeners who listen to the podcast live.  They were definitely able to get the Zeo pods if they wanted them.  I know, I've already had conversation with the seller this morning because they wrote to say, "What happened?"  And I said, "I told you I was going to tweet about this.  And now I'm going to do a podcast about it.  And so you ain't seen nothing yet."  So if the links don't work, if it's sold out, then I'll update the links.  So be patient.  And I'll have an update, a brief update, I promise I'll make it brief, next week to remind people, if there are any still left in their big box.  They said they had hundreds, and they've only sold at most a couple hundred because I've been keeping an eye on it.  So they probably have lots left.  I hope.



Okay.  So the question is, what we're going to answer, what I'm going to explain for the balance of this podcast is why no fewer than three dumb routers can create true network isolation.  I'll explain why I was wrong last week, why I chose that last week,  why what I have on the web page that's 10 years old, it was dated August of 2006, why I did it that way then, and why that was wrong because - okay.  So, well, and exactly what the problem is.  Why is it that this is the only solution?



So the goal is to create robustly, knowably isolated networks.  There's no question, none, that we're going to be seeing Internet of Things security disasters.  Anyone who's been listening to this podcast couldn't believe for a minute that that's not going to happen.  We're seeing them weekly with mature operating systems from companies whose entire technical focus is on not having problems, instead of some Chinese light bulb manufacturer that wants to sell light bulbs, and for whom security, I mean, absolutely couldn't care less.



So the danger will be that there will be devices which phone home, or which map a port using Universal Plug & Play, or as we call it here, Universal Plug & Pray, through your router to allow some web management system to access the device.  Then Shodan, the search engine for the Internet of Things, will scan the port space of the Internet and will find that light bulb where security was an afterthought.  And that will mean that the instant that a problem is found, you know, it will have to buffer overruns.  There will have to be exposed telnet ports, I mean, all the kinds of things like even supposedly secure routers have.  You have to know that other things that are wanting to be on the Internet just for the sake of being on are going to have problems.  And they will be exposed to the 'Net.



The problem then is that bad guys, the moment a vulnerability is found, can use Shodan to find the 50,000 of those which are currently plugged in in random people's homes the world over and use that to create a beachhead, to get into the device, and essentially create a connection back through the router into the user's LAN.  And once there, they can do whatever they want to.  They are essentially a bad guy has gotten onto a device on your network, and we know what that means.  Not good.  So it is imperative that, I mean, truly it is imperative that this class of what we know are going to be sketchy security, yet connected to the global network, devices not be connected to your internal LAN.  So really for the first time there's a big need for network isolation.



In the fullness of time, I expect that router manufacturers will address this, that we have this notion of a guest network.  Although we talked about last week how, at least in the case of one Netgear router that one of our listeners wrote in about, when the secondary network is put in isolation mode, to isolate it from the primary network, then the individual devices on that guest network cannot see each other.  And it's also a huge question, what is the nature of this isolation?



And I'll explain when we get into talking about IP-to-MAC address mapping and ARP, the address resolution protocol, which is what we're about to do, why that idea worries me.  It's one thing to isolate at the IP level.  But it is entirely possible that these things would not be isolated at the Ethernet level.  And it is completely possible to operate at the Ethernet level, not the IP level.



So the question is, how good will the isolation be in the future, when we really get it?  And is it too much isolation?  Because there are instances where we want the various Internet of Things devices to see each other.  NEST has now a growing family of devices that are all on the same network and may need to be talking to each other.  So having them physically isolated, each essentially on their own little guest spoke of the network, that may not work, either.  So we want absolute bulletproof isolation which is independent of how any router functions, so that we don't - so that it's brain-dead, I mean, just brain-dead simple.



So that's why I titled the podcast "Three Dumb Routers."  Because it turns out that, if you have three dumb routers, three absolutely feature-stripped, they don't have to know how to do anything except be a router, then you can achieve absolute security.  The reason I have been reluctant until now to promote this is just because it seems like a lot to go through.  Three routers.  That's two more than one router.  And one router is what most people have.  And two routers gave you more security.  And I'll explain why it's not enough security.  So you can have one router with no security, or cross your fingers; two routers with better security; but it does take three to have absolute security.



And the reason I do like this solution is, over the course of the last 10 years, routers have dropped in cost so that you can get them for 15, 20, 25, 30 bucks.  The main router doesn't even have to be WiFi.  I should explain this is in a Y connection as opposed to a series connection, so that you have two primary routers, a secure router, and we'll call it an insecure router.  And they both have their WAN ports connected to sort of the root or the hub router which connects to the Internet.  So they're connected to its LAN ports.  And you could put other stuff on that first router, but it's better not to.  It's better to keep everything behind these routers.



And if you needed a third completely isolated network, then you could go to a four-router or a five-router.  That is, the idea being that networks, to be isolated, have to be behind their own router.  And those routers, however many you have, two or more, then need to share the primary, sort of the - we'll call it the root router.



Why?  Why all of this?  The problem is that it is possible for something malicious that gets on your network to either use IP protocol or one of the Ethernet protocols in order to obtain access to your network traffic, which you absolutely don't want.



So let's first discuss the scenario that I described last week, which is the reverse of what I proposed 10 years ago.  Last week I said that the IoT devices should be on the inside router.  So we just had two routers daisy-chained, that is, linked in series.  And frankly, I'm not sure why I said that last week.  I've thought, okay, what was I thinking?  Because it's difficult  to come up with a justification for that configuration, compared to what I had 10 years ago, which makes more sense.



The problem with last week is that, while, I mean, I know what I was thinking, and that was that the external network, the middle network, the one between the two routers would have a different network address than the one behind the secondary router.  So anything malicious that was scanning its own network behind the second router, which is what I proposed last week, it would only see all of its other IoT devices.



However, a number of people pointed out that the weakness with this is that, if one of those malicious devices behind the second router did a traceroute out to the public Internet, the first hop of the traceroute returns its own gateway IP.  That is, it's the IP of its router where it sends packets that are bound for the Internet.  The second hop of a traceroute would be the external router's gateway IP.  In other words, the second hop of a traceroute would reveal to something malicious on the innermost router the intermediate network's network numbering.  And it could then scan that network.  If it sent IP packets out to the Class C network, the 254 IPs in that network, the router, the gateway IP would tell it, essentially it would allow it to infer the network numbering of the exterior network.  And then probes sent out to those IPs would get routed to devices on the intermediate network, which is bad.  We don't want that.



So the problem is, if the secure network, I'm sorry, if the potentially malicious network is inside, on the inside router, it can - and again, we can't depend upon security by obscurity, so we have to assume that the malicious network is as smart as it needs to be, or a malicious device on the IoT network is as smart as it can be.  A simple traceroute, that is to say, setting your packet with a TTL of two, a time to live of two, the first router, its own router, decrements that packet's TTL to one and forwards it to the first router.  It decrements that TTL packet to zero, the TTL in the packet to zero, and sends back an ICMP message saying that this packet is expired.  The ICMP message contains the IP of the interface that bounced the packet back.  That will be the gateway IP that allows something malicious on the inside network to determine the exterior network's numbering, and then it can simply use standard IP probes to scan the network in the middle that I was saying was secure.  And that's bad.



Okay.  That's how that breaks.  Now let's reverse it.  Ten years ago, when I created the NAT security chaining idea, I said we're going to put the super-secure stuff on the interior router, still just two, and they're daisy-chained.  Super-secure stuff on the interior router.  The idea being that the router, functioning as a NAT, prevents unsolicited packets from coming in, only allowing them to go out, and so only solicited things come back in.  So that's very much like the routers we all have  now.  We have routers on the Internet.  Lord knows the public Internet is a hostile environment.  So our routers are right now protecting us, our single routers are protecting us from the hostility on the Internet getting into our LANs, and we know that works.



So that was the model I had proposed 10 years go.  But there's a difference between the Internet and a LAN because what this would mean would be, in this configuration, the Internet of Things devices, the potentially malicious devices would be sitting on the network in between the two routers.  That always made me uncomfortable because that meant that the traffic from our secure, what we want to be our own super-secure private LAN, that traffic is passing through the environment, the network, where a potentially malicious device could reside.



Well, what could that device do?  The device can scan that local network and might even find that there's - might even be able to determine that there's a router there.  But it can't get in, anymore than somebody out on the Internet can get into the routers that we have right now protecting us from the Internet.  But devices on a LAN have an additional power that things out on the Internet don't have.  And that's that they're on the same Ethernet network.



So let's step back for a second and remember a little bit of the dynamics of how Ethernet works.  We have covered this in complete detail in past podcasts.  If anyone's interested, go look for Address Resolution Protocol, ARP, Address Resolution Protocol.  We did a podcast that explained it once [SN-029].  But for now, I'll sort of summarize that.



The idea is that nothing about Ethernet - Ethernet was a networking technology that was developed at PARC, Palo Alto Xerox PARC, Xerox's Palo Alto Research Center, by Bob Metcalfe.  And it was used to connect systems together, completely separate from the Internet.  It doesn't use packet routing.  It doesn't use IP addresses.  There are no IP addresses on Ethernet.  That was all grafted on later.  Ethernet uses MAC addresses, Media Access Control, MAC addresses.  And our network-savvy friends have probably seen them.  They are expressed as six pairs of hex digits, typically with colons separating them, so it'll be like 00:FE:02: and so forth, six pairs of hex digits.  That represents, since each pair of hex is eight bits, that means that three of those is 24 bits, and six of those is 48 bits.  The MAC address is a 48-bit ID.  And by convention, the first three are a manufacturer ID, and the second three pair is a serial number.



So the idea was, in the original concept for Ethernet, every single Ethernet NIC, as they were called, Network Interface Card, it would have a globally unique address.  That meant nowhere would two different NICs, Ethernet adapters, have the same address.  And this was very clever, especially back then.  This was a long time ago.  This was in the '80s.  The idea being that, if every single thing that could ever be hooked up had a unique address, then you didn't have to worry about them having the same address.  You didn't have to have jumpers to, like, set the address.  Everyone remembers, you know, IRQ disasters and COM port jumpers and all of the mess that happened when you didn't have a guarantee of uniqueness.



Well, Ethernet solved that from the beginning.  The idea was, if every manufacturer had their own high 24-bit number, and that manufacturer never made two adapters with the same lower 24-bit number, you can by definition never have two that had the same 48-bit number.  And that's the way Ethernet is.  But none of that had anything to do with the Internet Protocol, which came afterwards.



So now we have a problem.  We've got Ethernet, and we love the way that works.  Things are wired together.  Ethernet works.  Who was the company, Leo, the early networking company?  With an "N."



LEO:  3Com?  With a "N."  Oh, Novell.



STEVE:  Novell.



LEO:  Novell, yeah.



STEVE:  Yeah, 3Com and Novell.  Novell was really big in the early days.  And remember, these Network Interface Cards used to be full-size.  They cost a couple of thousand dollars, a thousand dollars each, just for one of these things.  And I remember at GRC back in mid-1980, we had a big - the office was sort of two suites put side by side.  And our Ethernet backbone was a single "U" that - it was a coax cable that was terminated at each end.



LEO:  It was serial.  So if anybody unplugged their computer...



STEVE:  Right.



LEO:  ...the whole network went down.



STEVE:  Right.



LEO:  Like Christmas lights.



STEVE:  That was one way to do it.  The other was you had taps.



LEO:  Right.



STEVE:  So you had this...



LEO:  You'd have a ring, yeah.



STEVE:  Exactly.  It was called 10Base2.  Or, wait, no, 10Base...



LEO:  10BaseT.



STEVE:  "T" was twisted pair.



LEO:  Twisted pair.



STEVE:  10Base2.  Oh, yeah, I think it was 10Base2, and then 100Base2 was when we went - so it used to even be 10Mb, which back then was blazing speed.



LEO:  Mm-hmm.



STEVE:  So anyway, the point was that it worked.  Now along comes IP.  And we want to give machines, computers and routers, we want to electrically connect them with the Ethernet, which we already have, and it works.  But we need to give them, not these wacky MAC addresses, but IPs.  Because the other thing about the MAC address, it is not routable.  The whole Ethernet technology is a nonroutable technology.  It is, by definition, point to point.  Everything is on the same big network.



And because everything has a unique IP, you just say, hey, you just send something to that - I mean, sorry, not a unique IP, a unique MAC address.  You just send something to that MAC address, and it gets it.  I mean, because - oh, and what happens is everything is listening all the time.  All Ethernet devices listen to everything going on.  So they're sucking in all of the traffic because they're all connected to the same big single backbone, tapped off of it.  So they're listening to all the chatter going on.  And as every packet is received, they check to see whether the destination for the packet is their MAC address.  And, if so, it's for them.  And so then they process the packet.  If not, they discard it.  But, and this is key, they do receive it.



Okay.  So we want to add a routable protocol.  That was the brilliance of the IP protocol, was this notion that we would take 32-bit addressing, and we would partition at an arbitrary place.  We would cut that 32 bits so that the uppermost chunk of bits was a network number, and the balance of the 32 was a device on that network.  And so what makes this routable is that this forms a hierarchy of networks that allows routers all over the world to look at the destination IP and figure out where to send it to get it closer to its destination using routing tables, which are able to be efficient due to the same hierarchy.



Okay.  So we need to add a routable numbering system to a network Ethernet that doesn't have any.  It's just MAC addresses, point to point, no, there was never a concept of routing back then.  So what was created was an additional protocol called ARP, Address Resolution Protocol.  Like its name sounds, it is used to resolve addresses.  And the way it works is as follows:  Every device that is on the Ethernet, and there's like one Ethernet, gets an IP address.  And that's manually assigned.  That's why, for example, DHCP assigns an IP address to our computer when we ask the router for one.  We just say, yeah, I don't care what my IP is, just give me one.  And so the router hands it out.  Or we manually configure an IP address.  Typically, you don't manually configure a MAC address.  You can, more recently, override the default MAC address that NICs have.  But typically you don't need to because they're still going to be globally unique.



So the individual endpoints are assigned kind of arbitrary IPs.  They have to be on the same routable network so that they can talk to each other, and so that things outside that network know how to get in, and so that those devices know to send things to the gateway IP if they're bound for outside the network.  So you still need to obey IP routing rules.  But the particular IP any given device with an Ethernet adapter receives doesn't matter.



So one of the things that is configured for any IP device is the IP address of its gateway.  By definition, the gateway is the IP to which will be sent any packets bound outside the network.  And so I'm sure anyone who's looked at their IP configuration has seen, oh, look, there's my gateway IP.  And it's, on 192.168 networks, it's typically 192.168.0., sometimes 0.1, more commonly .0.255 or 254.  It's up at the end of the block of IPs.  Or sometimes .100.  It doesn't really matter.  Again, as I said, IP numbering is arbitrary, as long as it is consistent over the use of that device on the network.



So when a computer turns on and comes up on an Ethernet network, in the background, part of the booting up process, is the kernel driver knows that it's been assigned a certain IP, and that it's been told the gateway has a certain IP.  So it needs to know the MAC address of the gateway.  That's the key.  Remember that it's hooked to Ethernet.  And Ethernet uses MAC addressing to send packets around, not IP addressing.  IP is sort of - it's an associated layer on top.  But the actual packets are sent to MAC addresses, not to IP addresses.



So in order for this computer to connect to the outside world, it has to know the MAC address of the gateway.  So what it does is it sends out what's known as an ARP broadcast.  The Ethernet protocol, just like the IP protocol, has a concept of a broadcast address.  It's an address to which something can be sent that everybody will receive.  And the ARP broadcast uses the ARP protocol.  In the Ethernet packet header is some bits for protocol number.  And so, very much like with IP, where we have the TCP protocol, UDP, ICMP and so on, Ethernet had bits reserved for different protocols, and ARP is one of them.



So that's what makes a packet an ARP packet is it's got the protocol bits set to ARP.  And this particular one is a broadcast that says to everybody, who has this IP?  And so it uses the address resolution protocol specifically created for the IP protocol to say, hey, listen, everybody, do you have this IP?  And everybody receives it.  And if, for example, you're asking for the IP of the gateway, you're asking for 192.168.0.255, for example.  And so you say, "Who has that IP?"



Well, the router receives that ARP broadcast, which is an Ethernet broadcast, and looks and says, oh, that's me.  And so it responds to that device, saying I am the MAC address that is responsible for this IP.  Now the computer that we've just turned on knows how to send its IP packets over the Ethernet network.  It knows, if it wants to send it to the gateway, that they need to be addressed to that MAC address.  So ARP creates this mapping.



The problem is that there's no other security protocol in place.  That is, this assumes everybody on the network can be trusted.  And in our deliberately adversarial, malicious, IoT device model, that's absolutely what we don't have.  We need to tolerate a malicious device on whatever network it's on.  And where we left off with this was good stuff goes on the inside, IoT stuff goes in the middle.  And after we hear from Leo, I'm going to explain why that breaks.



LEO:  We got caught in an ARP hole.  But we're back.  And now we get to the valves.  That's next.  You know, actually, "valve" is a good description.  Isn't that what they used to call, what the Brits used to call radio tubes were "valves."



STEVE:  Yes, because they are.



LEO:  And transistors are valves; right?



STEVE:  They're electron valves.  



LEO:  Yeah, one-way tickets.  All right, Steve.  Three Dumb Routers, Part 2.



STEVE:  Okay.  So we have the address resolution protocol, which is used to allow Ethernet devices, which are on the same Ethernet network, because remember, Ethernet is nonroutable, to allow them to navigate and negotiate routable IP addresses.  Oh, and by the way, I was going to mention, you can now understand how it is that you can have multiple IPs on the same device.  It's often called multi-homed, the idea being that a single Ethernet adapter could be assigned multiple IPs.



At first people think, wait a minute, how is that possible?  Well, now we know.  Remember that the ARP broadcast says, "Who has this IP?"  And so if the OS behind a single MAC adapter, you know, NIC, if it has been configured with three, for example, Internet protocol addresses, IP addresses, it says, "I do.  I'm the one who gets packets that you want to send to that IP."  So that's how you can have a many-to-one mapping of IP addresses to Ethernet adapters.



The problem is there is no security in this system.  And this was all designed back in an era when we assumed everybody was going to be a good actor on the Ethernet.  So there are terms like "ARP spoofing" that have been used, and people may have heard about, if they don't know the details.  Well, here's the details.  We have to assume that a malicious device is sitting, like a light bulb, is always on, listening to the network, knowing what's going on.  The mapping, this ARP technology, has a timeout.  And there's additional complications I won't get into.



But it means that, from time to time, devices will be needing to refresh their mapping.  That is one of the ways that allows devices to change their IP address and eventually be recognized by equipment at a new location within the same network.  So this is not something you only do once.  The reason I mention this is that, if you screw in a malicious light bulb at some point in the future, so that it's late to the conversation, it's still going to be able to monitor all of the Internet traffic.  And if it sees, or I should say when it sees, a broadcast asking who has the gateway IP, and of course it knows the gateway IP...



LEO:  I do, I do.



STEVE:  Sorry?



LEO:  I do, I do, I do.



STEVE:  Yeah.  It can respond with its own MAC address before the router does.  And so...



LEO:  Oh, clever.



STEVE:  Yes.



LEO:  So it can infect the whole network.



STEVE:  Exactly.  A malicious device, sitting on an Ethernet, will hear the "who has, who has, who has" from every device on the network.  And if it's been designed to be quick, or just is quicker, it's able to get its response back to the querying device first.  And that device will think it's the gateway.  Which means that all of the traffic goes to it, rather than to the gateway.  But even without that, in a shared environment, if, for example, some of these devices are wired, if they're not behind a switch, then it's just like the old days where everything is on the same physical wire, and all the packets are on the wire.



So there are active and passive ways that something malicious on an Ethernet network can, in the worst case, monitor what's going on, but very likely create its own man-in-the-middle position.  If it were to respond to the interior router before the exterior router can, the interior router will send everything bound for the Internet to the light bulb's MAC address.  And that then becomes a man in the middle, able to filter all of the traffic.  And it would then forward it to what it knows is the real MAC address, so that it would also remain invisible.  All the traffic would be going through it.  Nothing on the interior network, which believes it is super secure, would know.



So that's why super-secure inside, with malicious network able to see and receive the traffic in the middle, doesn't work.  And of course we first covered why the reverse doesn't work because something malicious on the inside router can figure out the exterior network.  Now, routers block Ethernet.  Routers are IP routers.  They are not Ethernet routers.  So, for example, ARP doesn't, it doesn't make any sense for ARP packets, the address resolution protocol, to go through a router.  They don't.  They are always constrained to a single LAN.  So what that makes is that these dumb routers are just smart enough to route IP, but not to route Ethernet because Ethernet is by default a nonroutable protocol.  So they block, they all, absolutely all, because it makes no sense, block the address resolution protocol.



So now what we have is we want security.  And as I said at the beginning of this, and I have now demonstrated, the problems with any two-router configuration is that either the router, the malicious router on the inside could gain IP access to the IP network on the outside, that is, in between the two routers, and that's not good.  It can't get Ethernet access, and it can't use ARP, but it doesn't need to.  It can use IP packets and use the routers to route the data into the network that you wish was more secure.  If we switch things around, now the malicious device can use the Ethernet because it's on the same Ethernet as the link between the routers, and it can use Ethernet protocols, like ARP, in order to get up to mischief.  So neither of those work.



The only secure solution, and the beauty of this is it is utterly bulletproof, is we put each of the networks behind their own router.  That constrains them to their own LAN, and the routers block Ethernet and block ARP in any way for them to get out.  So each of those networks behind their own router is able to send data out.  Now, in the worst case, let's say now that one of them is malicious.  It could do what I first proposed, is it could do a traceroute.  If it did a traceroute, it would see its own router.  Then it would see the shared router, which is the one, the Y'ing router, where these separate routers' WANs are plugged into the LAN connections of this root router.  It could determine that router's gateway IP.  That could tell it that intermediate network's IP numbering, but nothing is on that intermediate network, this "Y" network, except other routers' WAN connections, and we know those are safe because those are what right now protect us in a single-router configuration from the Internet.  Of course, assuming that those routers don't have security problems or other problems.



But this gives us what we want.  It means that essentially, by having a single root router with then spokes off to additional routers, each of those networks, and it doesn't matter now which one is secure and which one is not.  You could have three.  You could have four.  You could have as many as you want, all concentrating down to a single shared root router that goes out to the Internet.  And each of the interior routers completely isolates its network from all the others.  That's secure.



I've been shying away from going this far because three routers is a bigger pain than two routers, which is a bigger pain than one router.  But the beauty is they're cheap now.  Probably you've got some in the closet, so it may not be a problem.  That root router could be a non-WiFi router.  In fact, it probably does not want to be WiFi, unless maybe you used it for a guest network.  But it's really better if nothing, if it has no devices on it at all except other routers.  Those are where you would want to have your WiFi for your truly secure network and your probably not-so-secure Internet of Things network.  Many of them are going to be hooked up with WiFi, like the various NEST devices and so forth, and the infamous light bulb that is trying to break into our network.  That's the only way I can see it being secure.



The beauty is this doesn't require any configuration, anything fancy, any settings of any kind.  It's just it uses the basic NAT concept that all routers share.  It blocks Ethernet, it routes IP, and it fully isolates the networks that are behind each of these routers so that they cannot see each other.  And I don't think there is any - I don't think there's a simpler way to do this.  Yes, if you have a fancy router, if you've got a firewall, if you're using pfSense, if you really know what you're doing, you could pull this off with a single device.  But for I think 99.9% of us, if we're going to start playing with Internet of Things devices, give that its own router, take your main router, and have them both feed into a router that goes out to the Internet.  Then you've got isolation, and you don't have to worry about any of their settings.



LEO:  Are you going to update your page to reflect this new setup?  Because I think I need a map.



STEVE:  Yeah, just I don't want to...



LEO:  No.  I guess not.



STEVE:  I've got to work on SQRL.  So I'm...



LEO:  Let's see.  How do we, I mean, I have the show notes.  I guess that's the best way to do it, right, is to have people...



STEVE:  The show notes don't really show anything.



LEO:  They don't have a diagram.



STEVE:  Actually, the current page, there is a link on that page, the router configuration, where I go into much more detail.  And so there's two pages there.  There's the main page linked off of the GRC website menu.  And several times I refer to another page.  If you read those, you will not have any problem setting up a "Y" configuration.



LEO:  Oh, okay.  All right.



STEVE:  You'll have everything you need.



LEO:  Yeah.  Because I think I need to do that.  And you're right, I have routers all over the place.



STEVE:  Yeah.  We have all got - we have all of the old ones that we're no longer using.  This is the way to do it.  Simple.  At the expense of a few more routers, it creates absolute network isolation.



LEO:  Yeah, yeah.  Somebody in the chatroom said, "Leo, here's your map.  The letter 'Y'."  Yeah, that's true.



STEVE:  And I think you'll find it just works.  You just plug them together, it's like, oh, it works.  And that's what people are going to experience.  It just works.  And the beauty is it is absolutely secure.



LEO:  So none of them in bridging mode, each of them doing their own NAT.



STEVE:  Right.



LEO:  That's the key.  And the bottom of the Y is coming to public, is out to the outside world.



STEVE:  Exactly.



LEO:  The center part is of course your main...



STEVE:  Your root router.



LEO:  You have a root router.  And then you have your two subsidiary routers, one of which is an IoT router.



STEVE:  Yup.  And doesn't matter which is which.  And you could have three, if you wanted to have three isolated networks.  What this does is each router... 



LEO:  Can have a menorah, if you want.



STEVE:  Menorah, yes.



LEO:  Have a menorah.  The whole idea is that there's that root router, and then they're all subsidiary off of that, and none of them talk to each other.  Each of them, it's basically a handmade VLAN, is what it is.  If your root router could do VLANs, that's exactly what it would look like.



STEVE:  Yes.  Yeah.



LEO:  Yeah, yeah.  But segmenting is not enough.  It really - it needs to be a VLAN.



STEVE:  Yeah.  And a VLAN you need to be careful with because there you're using VLAN tags to differentiate networks.



LEO:  Right.



STEVE:  But unless you have a switch, which is also isolating networks based on VLAN tags, then you still have a situation where something on the Ethernet can see all the packets.  You just don't want...



LEO:  Where this falls down, of course, is if you're on one leg of the Y, and you somehow need to talk to the IoT device.



STEVE:  Correct.



LEO:  Because it's isolated.  You can't.



STEVE:  Correct.



LEO:  And that's the whole point.  It can't talk to you, and it can't hijack you.



STEVE:  Correct.



LEO:  And some IoT devices, of course - but you could just join that network.



STEVE:  Yes.



LEO:  It looks like another network.



STEVE:  Exactly.  The idea would be your iPhone, for example, has that WiFi network in its list.  And so if you need to talk to that device, you just switch over to that wireless network, talk to it...



LEO:  You name that WAN "Caution:  Insecure IoT Network."



STEVE:  "Don't stay here."



LEO:  "Don't live in this."



STEVE:  "Visit briefly."



LEO:  And you want to make sure, and unfortunately way too many devices do this, that you don't have devices that will automatically hunt between different access points.  Because you don't want it to actually get in there.  I guess you'd have to forget it manually each time.



STEVE:  Well, as long as it did not know your...



LEO:  Right.



STEVE:  As long as it didn't know your WiFi password...



LEO:  You have to forget it.  But it does, the minute you use it, it does.  Now you have to forget it after using it.  So "Caution:  Insecure IoT network, do not use, and make sure you forget it after you use it, otherwise it will automatically log into it next time."



STEVE:  I see.  Right, right, right, yes, yes.



LEO:  It's a long SSID.  I don't know what the limit is.  Good stuff.  Again, it's GRC.com slash...



STEVE:  I don't have an IP for that.



LEO:  Okay.  A subdivision or whatever, yeah.



STEVE:  I mean, I don't have a simple URL.



LEO:  Okay.



STEVE:  It's Research.  Then the first...



LEO:  Under the Research menu.



STEVE:  The first item under Research > General > NAT Router Security.



LEO:  Okay, that's easy to find.



STEVE:  That's easy to find.



LEO:  The thing that's so great about GRC is it's his, you know what, it's Steve's Minecraft server.  He's been digging holes there, building edifices there for years.  And there's so much stuff there, and it's really fun just to browse around.  Now, of course I've got to remind you that the main thing, the thing that pays the bills for everything else, is the great SpinRite, the world's best hard drive maintenance and recovery utility.  That's it.  That's the only thing you have to pay for there.  Everything else is free, including Security Now!.  He has audio versions and transcripts, written transcripts of each and every show there, plus the show notes, and you're going to want to read these show notes, I think.  That's at GRC.com.



Now, we also have copies of the show, audio and video, for no apparent reason, at our site, TWiT.tv slash - well, people like to look at you - at TWiT.tv/sn.  That's the URL for that.  But it's also, you know what, you can subscribe to this show, one of the oldest podcasts in the world.  Ten years we've been doing this.  It's on every podcatcher there is.  And if it's not, shame on them.  I mean, and there's five Apple TV apps, and it's on every one of those.  And there's a Roku app, and there's like an infinite number of apps on iOS and Android and Windows Phone.  Get a TWiT app, or get a podcast app if you don't want to get a TWiT app, and subscribe because you do not want to miss this show.  In fact, what you want to do is burn DVDs of the show and put it on the shelf because it's an education.



STEVE:  Hey, don't we wish we had tapes of all of the old Call for Help and Screen Savers episodes.  And so, you know...



LEO:  I do.  I mean, somebody does, I guess. But that would be great.  You know, they found Super Bowl I.



STEVE:  So someday this will be the same way.  I don't know if you and I will still be around, but still...



LEO:  I've got the archive.  They found Super Bowl I.  And the NFL doesn't want it, but they won't let the guy sell it.  It's like, come on.



STEVE:  Wow.



LEO:  Nah.  Anyway, thank you, Steve.  We will see you all next time.



STEVE:  My friend, a pleasure.  We'll do a Q&A next week.  And we're down to only four Zeo pods left in the auction, down from a hundred.



LEO:  Wow.



STEVE:  So our live listeners got the benefit.



LEO:  Wow.



STEVE:  And I'm sure that they will restock, and there should be more available for those who are picking up the podcast on their...



LEO:  I'm glad I got mine.



STEVE:  On their devices.



LEO:  Wow.  I bought, like, four of the refills, so I figured that'd get me through a year, anyway.



STEVE:  Good.  And I'll have a healthy sleep formula soon.



LEO:  I need the healthy, healthy sleep formula.



STEVE:  Many people do.



LEO:  Thank you, Steve.  We'll see you next Tuesday, 1:30 Pacific, 4:30 Eastern, 21:30 UTC for Security Now!.



STEVE:  Bye.  



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#546

DATE:		February 9, 2016

TITLE:		Router Q&A Follow-up

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-546.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  After catching up with the most interesting security news of the past week, Steve and Leo address three representative questions posed by listeners regarding last week's "Three Dumb Routers" episode.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We have a few questions about the router "Y" configuration we talked about last week, plus security news, and the Hack of the Decade.  The hack of the - that's what Steve says.  It's actually pretty cool.  All coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 546, recorded Tuesday, February 9th, 2016:  Our Router Q&A Follow-up.



It's time for Security Now!, the show where we cover the latest news in the security and privacy realm with this guy here, Mr. Steven Gibson of the GRC Corporation, of SpinRite fame.  Hi, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be with you again, as always.



LEO:  Yeah.



STEVE:  For our 11th year of this podcast.



LEO:  Geez.  So ever since Year 4 or something, we've been doing a Q&A in every other show.  Although...



STEVE:  Yeah.



LEO:  ...sometimes the news intervenes.



STEVE:  Yeah, I like - I think it's been very effective.



LEO:  I do, too.



STEVE:  It engages our audience.  It lets them, well, it gives me great feedback into, like, what things had traction, what they care about.  So it's allowed me to tune the podcast over the years.  In this case, last week's topic, the "Three Dumb Routers" topic, was of overwhelming interest because I think it's clear to everyone, in fact, Brian Krebs has his most recent posting is about this.  And it just happened, and I didn't have a chance to look at it, so I've got it bookmarked for next week.  But he's talking about the Internet of Things problem.  And anyone who's been following security and device security understands that the Internet of Things is going to be a problem.



So last week's idea was to really get down in the weeds more than we have.  And several people did note, either by Twitter or email, that, you know, Steve, you've talked about this "Y" configuration several times.  It's like, yeah, I know, because it's the one.  But we never went into it in this level of detail.  And I think, as the questionable security of a growing number of tantalizing things that would be hung off of one branch of the "Y," as that becomes increasingly worrisome but prevalent, because I think Internet of Things is clearly in the process of happening, then the security, the need to somehow isolate those that are almost certainly, I mean, we could say absolutely are going to have problems becomes increasingly important.



As a consequence, last week's episode had a ton of traction, but generated the majority of responses via Twitter and the email bag.  So what I've done is - and we sort of ran out of time, and we had a full two-hour episode last week because I wanted to get into this and explain.  But there are some subtleties about inter-router routing, or IP routing, that I didn't get to, which raised some questions.  So I have three questions that actually happen to all just have come in via Twitter that I selected, which we will put at the end of today's other stuff, the week's news and miscellany and trivia and so forth, in order sort of to keep with the theme; but, again, driven by our listeners.



So, and we had an interesting week.  Not crazy.  There was of course the famous, what is becoming infamous, I guess, Error 53 that we'll talk about.  Comodo has done something, and in my notes I wrote down:  "Comodo's Crummy Chromodo Browser."  They actually took the Chromium source and created the Chromodo Browser and did something so awful, I mean, that Tavis Ormandy at Google is running around with his hair on fire again, and rightly so, as we'll see.  So we'll explain that.  And I just feel sorry for people who go to a site and say, "Oh, look, here's a super secure browser from Comodo."  And we'll explain why in a minute.



There was an interesting audit of Windows 10.  I think I heard you talking about it yesterday on TWiT, how promiscuous Windows 10's communication to the 'Net is.  Unfortunately, the Slashdot posting that got all the attention was completely incorrect in what it stated.  So it turns out it's not nearly as bad as people who just read the headlines would be led to believe.  I have some experience with GWX and a recent Win7 install of mine that I want to share.



Then I ran across the amazing clever hack of the decade.  What is this, 2016?  Yeah, of the decade.  Certainly the funnest, most cool idea in the last six years.  So of the 21st Century.  And then a little bit of update on what's going on with Zeo and sleep monitoring.  And we'll actually then, believe it or not, go back to routers and talk about that some.



LEO:  Now, I notice that your show notes don't, as they often do, have an Illustration of the Week.  So I'd like to proffer one...



STEVE:  Oh, please.  



LEO:  ...for you.  This comes from a tweet from Randy Krum, who listens to the show.  And you may remember I was saying we need a new diagram for the router, the "Y" router setup that you describe, because your page is outdated.  He proposes this one, which you'll all recognize... 



STEVE:  As the flux capacitor.



LEO:  ...as the flux capacitor from "Back to the Future."  And in fact it is a "Y."  He has relabeled.  The DYMO labels now say "Guests," "Main Network," "Root Router," and "Internet."  But it still does say, and I think it should, "Shield Eyes From Light."  So thank you, Randy, for - I really love it that he added the DYMO labels to explain this.  So if you want I'll send this along to you.  Actually, he included you in the tweet.  You probably have it in your pile somewhere.



STEVE:  Yes, I did see it.  Thought it was very cool.



LEO:  Isn't that great?  Thank you, Randy.  Love it.  Love it, love it, love it.  All right.



STEVE:  I was just going to comment on exactly that, that there are - it's the nature of the way the market is now that people are going to have Internet-connected soccer balls and milk cartons and, I mean...



LEO:  Everything, yeah.  And, by the way, there's some value to that.  It's not as...



STEVE:  Some.



LEO:  Yeah.



STEVE:  Exactly.  And in this instance the connectivity is clearly part of the core functionality, so it makes sense.  In other instances it's like they're trying to come up with something to sell or some way to raise venture capital or something.  So it's like, okay.  But as you said, there are applications that absolutely make sense.



LEO:  Yeah, and I don't really care if my refrigerator's connected to the Internet.



STEVE:  No.



LEO:  In fact, I think that's probably a bad idea.



STEVE:  Yeah, I think not. 



LEO:  They'll have to convince me on that one.



STEVE:  So top of the week is this Error 53.  And you guys were discussing it on MacBreak.  Cory Doctorow, of course, picked up on it.  And I pulled just a couple sentences out of what Cory wrote from his coverage of it from Friday.  He said:  "According to an Apple spokesperson, Error 53 is an anti-tampering measure designed to protect the integrity of the phone's biometric security system.  The lockout is designed to protect users from trusting doctored fingerprint readers that might allow unauthorized access to their phones.  But the phones that Apple is remotely killing have not been doctored.  They've been fixed.  There are many independent service centers for Apple's products where you can get your phone fixed more cheaply than the official rate.  Independent service centers also thrive in places where there are no Apple service centers at all."



So I need to back up a little bit and explain that what's happening is that there sort of was what was initially a mysterious Error 53 which the phone was generating after it had been repaired and then stopping being a phone.  It essentially bricked itself.  And I don't take this as being nefarious or deliberate or anti-competitive.  I think this is just good security.  And I think we need to - clearly Apple needs to respond to this and needs to figure out how they can achieve their goal of protecting their user while allowing a phone with sensitive content to be securely serviced.  I mean, anyone who's messed around with, for example, higher end servers will know that computer cases often have a switch that detects when the case has been opened because physical access is an almost super powerful thing to have for a device.  And the same is apparently true here.



Now, I wonder, given everything we've heard about the way the fingerprint reader works and the secure enclave, my sense is that what this may be detecting is an interruption in the connectivity, that is, a however brief disconnection of the fingerprint reader from the secure enclave element.  The point being that somebody could insert something in the phone which captures your fingerprints.  That is, physical access is incredibly powerful.



And so what I imagine the security-conscious engineers of Apple did, and I endorse it fully, is they said, okay, here's something that we're offering to users with our guarantee that a fingerprint, properly registered, is the only thing that can unlock it, and it's safe.  But with that comes an assumption that somebody isn't going to change the design, isn't going to, you know, the perfect classic old-school example is a keystroke monitor inline in the keyboard.  If someone has physical access to your computer, they can stick a tiny little chewing gum-size thing between your keyboard and your computer, logging every keystroke you type.  We haven't talked about those for years.  They've sort of gone out of fashion because now we're all - we're at another level of fancy remote exploits.  But that kind of thing could be done to a phone, capturing fingerprints or maybe a little tiny transmitter gets added to it.



And so it may very well be that Apple is quite appropriately detecting when that has happened.  So I would argue that this is something that everyone needs to be educated about, and there needs to be some process for handling it.  But I don't take the position, and I don't think it's a fair position, to say that this is somehow Apple deliberately stifling competition.  In fact, Rene said on MacBreak an hour ago that even Apple's own service has this happening so that, when somebody at Apple service does something wrong, whoops, that can trigger this error.



LEO:  But they are in the good position of being able to give you a new phone; whereas a third-party guy probably won't give you a new phone.  So, yeah.



STEVE:  Yeah.  So what's the legal position on third-party service?  Is it violating, voiding the warranty of the phone?  Can Apple say, hey, we're on firm legal grounds here, you shouldn't have gone to, you know...



LEO:  I think we'll find out as these class-action lawsuits make their way through the courts.  But were I a member of the court, I would interpret it probably as an anticompetitive measure because you could say you void the warranty, but to actually willfully destroy the phone because it's been worked on by a third-party, that would strike me as bad behavior.  But, you know, I'm not a lawyer.



STEVE:  Well, it's not like a lithium-ion battery exploding.  You don't have to stand back 10 feet.  I mean, you could turn it back on.  They just turned it off.  They said something has happened which has a potential for violating your security.  This is not a phone anymore.  This is currently useful for keeping your door open.  But they could certainly reverse that.



LEO:  I suspect they will.  It'll be interesting to see what happens.  I mean, as I said on the show, engineers think this way.



STEVE:  Yes.



LEO:  And it's not their job to understand the legal ramifications or to even...



STEVE:  Or the PR ramifications.



LEO:  PR ramifications.  They think, hey, it's not secure.  You wouldn't want to use it.  Whereas somebody might well want to use it and say, I don't care, I want my phone.  So, hey, you mind if I interpose another story that we talked about a little bit yesterday...



STEVE:  Please.  Please.



LEO:  ...and got your opinion on it.  I was doing an interview on Triangulation about privacy.  And we were talking about the Amazon Echo.  And but it doesn't just apply to the Echo.  It applies to so many of the devices in our homes now that are...



STEVE:  Our TVs are now also listening, yes.



LEO:  TVs, the Kinect from Microsoft, that was the first time we heard these fears.  Of course our phones.  And he had quoted in an article, he had quoted a researcher in privacy and an analyst for Forrester who said that she and her husband were having a conversation.  He had been looking on Amazon for suitcases.  They were about to travel.  They had a conversation about it.  She went back to her computer, all of a sudden she was seeing ads for suitcases on her computer.  And from that she deduced that the Echo had been listening to their conversation, notified Amazon, and Amazon had modified its recommendations based on that.  And for that reason she disconnected the Echo and sent it back to Amazon.



I'm just wondering what your opinion is on these always-on listening devices.  My impression is that it's doing pattern matching.  All of these devices - none of these devices have enough smarts yet to interpret - maybe a phone does, but most of these other devices don't have the smarts to interpret your speech.  So they will send your speech to the server.  But they're not sending everything to the server.  They wait to be triggered.



So what they are doing is listening and pattern-matching what they hear to their trigger words.  That's why it's a limited subset of trigger words.  And when they hear that trigger word, then they in effect wake up and say, okay, now, whatever you say after that, we are going to send to Amazon.  It was my opinion that it would be obvious if they were sending all the audio back to Amazon.  You could look at it with Wireshark.  And I also feel like, besides the clear PR hit if people discovered that, they don't want all of everybody's audio sent back to them at all times.  Anyway, that's my opinion.  What do you think?



STEVE:  So, okay.  There are two ways this could go.  I've mentioned to you before that it is not necessary to pause after you say the trigger word.  And that was one of the things I first noticed is you can say her name and then immediately start asking the question.  But when you use it interactively, there's a delay between you using the trigger word and the little ring at the top lighting up.



LEO:  But Google Now works that way, as well.  You can say the trigger words and continue to speak.



STEVE:  Correct.



LEO:  And presumably, I would guess, what's happening is that they're now recording and sending it back.



STEVE:  Well, so what the device is always doing is listening and streaming all received audio internally.  And so it certainly takes some processing for them to decide if the phrase, if the key phrase is part of that buffer.  And but the idea is that...



LEO:  I likened it to a grep.



STEVE:  Yeah.



LEO:  It's kind of doing regular expression matching on this stream of audio, looking for a pattern.



STEVE:  Well, and you can, from an algorithmic standpoint, you can definitely design an algorithm to understand a large range of speech saying a given word.  That is, the word "A-lex-a," those sounds can be set so that the device will respond to anyone saying that, so exactly as you say.  Then, when it's been triggered, it begins storing up the audio, no doubt compressing it, and then beams it, almost certainly beams it off to Amazon, where serious big iron decompress the audio, run it through a standard, sort of like a dictation-style system, where the audio is converted to text, text-to-audio conversion, and then run through some sort of neural network to figure out what it was you did.



Now, at the same time, with bandwidth and connectivity and so forth, it's conceivable - well, and power.  I would say, I mean, we know that we have text-to-speech available now in relatively small devices.  There's nothing that would prevent that device from doing local text-to-speech except training.  Training is normally really required for reliable text-to-speech.  And there's no training that you have to go through, although there are some phrases that you can, when you set up the device, that you can read to her in order to improve just the general recognition.  It's not clear whether that stays local or whether that is sent to Amazon as part of the profile of the users of the machine.



So really it comes down to what you were saying about using Wireshark.  Given these allegations, people will presumably look more closely at the traffic coming from that device.  If nothing much happens until the trigger word and the question, and then there's a flurry of network activity, then we can assume it's not listening all the time and sending the stuff back.  My guess about that particular story is that there was some searching for luggage that was done before the conversation in front of the device.  And then some more surfing was done; and, oh, look.  From the original searching that was done beforehand, now we're selecting ads and so forth.



LEO:  Yeah.  I mean, that's what I said.  I could consider - I could come up with three or four scenarios that are much more likely and make much more sense than the Echo listening at all times.  And by the way, many people have Wiresharked the Echo.  Unfortunately, it's SSL, so the traffic is encrypted.  But you can tell by the volume of data that it's not sending back audio at all times.



STEVE:  Correct.



LEO:  Nor is the Kinect, nor is Google Now, nor is Okay Siri or any of that stuff.  And no one would design it that way.



STEVE:  No, it would flood.  It would create a denial of service attack on the datacenter to have an incredible number of streams of data coming in 24/7.



LEO:  And as I pointed out to our guest, I mean, you can - there are plenty of other privacy harms that are genuine.  You don't need to make up FUD in order to prove your point.  And in fact you damage your case, if you ask me, if you start inventing harms that don't exist because then people question your credibility in general.  And so it's unfortunate that this kind of stuff gets around.  And, yeah, of course there's nothing to say that there isn't a switch at Amazon headquarters that the NSA could come in and say, "Oh, by the way, we would like to listen to everything that comes out of Leo's house."  Of course, I carry around a smartphone which has a microphone, a camera, a GPS device, and it's in my pocket at all times.



STEVE:  Yeah.



LEO:  Frankly, I think the NSA's much more likely to bug that.  And I doubt that this so-called "privacy expert" destroyed her smartphones.  Anyway.  I mean, it'd be easy, for instance, for Amazon to say, oh, we see you have the same address as somebody searching for luggage.  We think you might be going somewhere.  Or, I mean, there's lots of ways you could think of this as happening without having to make Amazon's Echo [crosstalk]. 



STEVE:  Yeah, it may have been booking those airline tickets that was the trigger.



LEO:  Yeah, precisely.  Precisely.  All right.  Thank you.  I just wanted to get the security expert to weigh in on this.



STEVE:  Yeah, I completely agree with you on all points, except that technically you could do local text-to-speech, although...



LEO:  Oh, of course you could.  But if you look at what's in the Echo, it's not nearly powerful enough to do that on a regular basis.



STEVE:  So Comodo, who bounces into the doghouse from time to time, they've done something called Chromodo, which is their Chrome version.  They took the Chromium source and basically said, oh, we're going to have our own web browser, yay.  And so it's called the Chromodo Private Internet Browser.  And on their web page it says:  "Fast and versatile Internet browser based on  Chromium, with highest levels of speed, security, and privacy."



Now, okay.  One wonders why would anyone use some random browser when you get the real browser from Google and Chrome, and it's free.  But I'm sure, again, this is for the people who our listeners provide support for who are using them for tech support.  Turns out this thing is not only not the highest level of speed, security, and privacy, but it's arguably the worst.  Google's Tavis Ormandy talked to Comodo.  They didn't fix the problem.  The 90 days expired.  And so, as happens, this went public.



Tavis wrote in his posting:  "When you install Comodo Internet Security" - okay, now, this is the other thing, is they're advertising their browser, but it does this to you.  "When you install Comodo Internet Security, by default a new browser called Chromodo is installed and set as the default browser.  Additionally, all shortcuts are replaced with Chromodo links, and all settings, cookies, and so forth are imported from Chrome.  They also hijack" - and no doubt if you were using Firefox or IE, I'm sure they have a generalized, what browser were you using?  Now we're going to suck all that in and import it and take over.



"They also hijack your DNS settings, among other shady practices," writes Tavis.  "Chromodo is described as 'highest levels of speed, security, and privacy,' but actually disables all web security."  He writes:  "Let me repeat that. They disable the same-origin policy."



LEO:  Is that the third-party cookie thing?  What is that?



STEVE:  Oh, Leo, it's worse.  Okay.  Which is the perfect question to lead me in.  Absolutely, without exception, the only way using browsing on the Internet today is secure is every single, except Chromodo's, rigid enforcement of same-origin policy.  And to use a quick analogy, you can think of it as utterly rigid domain stovepiping.  What same-origin policy enforces with absolute rigidity is that script running from a given origin is only able to manipulate or access resources from the same origin.



So, and this has become important.  Once upon a time, when you used GRC's web pages, for a long time there were no - actually even now.  I don't think I have any third-party stuff on my - oh, I might.  No.  There's the Google search box I think may be the only third-party thing.  But the Wayback Machine websites, all of your content came from one place.  It came from the site you were visiting.  They sent you the images.  They send you the media and the pages and so forth.



Of course, that's all gone, as we all know.  Anyone who's used Ghostery or uBlock Origin or, I mean, anything, you go to a site now, and 50 different sites are pouring stuff into this page because the page you go to refers to content on all those other origins, all those other domains.  So the only way that is secure is if every single item that gets loaded is stovepiped to its own domain.  It can't touch, it can't do anything to any other domain, the domain's cookies, or the domain's assets.  Chromodo doesn't enforce that.  It's probably the only browser in the world that doesn't.  It's just - it's a catastrophe.



And these jokers did the same thing with Tavis that we've seen before.  He gave them a proof of concept that was one particular example that he just threw together in a few lines of JavaScript, demonstrating how he could, well, for example, you could obtain all of the session cookies for all of the other domains that a user is logged into and send them to some third-party malicious site.  I mean, it's just - it's unbelievably awful.  And so they disabled one of the function calls that Tavis happened to be using, some exec function, even though, very much like a similar issue we covered a couple weeks ago, you just do it a different way.  So they didn't solve the problem at all.  They just killed his particular proof of concept.



So for what it's worth, Comodo Internet security brings along with it and by default takes over your system's current browser with the Chromodo browser that does not enforce same-origin policy, which is, I mean, there's just no words.  I mean, you're just giving your system to the bad guys.  It's like it's worse than any, oh, maybe this could be a remote code execution.  No.  Any script from any other site that runs on that page could access all the cookies in your browser from all the other sites you visit.  And since cookies are the way we maintain login state, they could then impersonate you on all the sites that you visit, or do anything they want to.  It's just this is like - it's just unbelievable.  And they've blown him off.  They said, eh, you know, thanks, but here, we broke your proof of concept.  And he's like, well, okay.  Oh, it's just unbelievable.



And this is, frankly, this is one of the problems with doing something like Chromium.  Many people have said, "Hey, Steve, why don't you open source your freeware?"  It's like, because I don't want people to take it and make it malicious; or say, hey, look, here's a DNS benchmark, and embed malware in it; or just do a bad job.  I'm sure these people aren't malicious.  I have no idea how this could have possibly happened.  But they don't seem to have gotten a clue when someone with a strong reputation said this is really bad, and they just ignored him.  So, wow.  Yikes.



LEO:  And it's a crappy name, too.



STEVE:  Yes, it is.



LEO:  Chromodo.



STEVE:  Chromodo.



LEO:  Sounds bad, just the name.



STEVE:  It's really - yeah.  Oh, wow.



LEO:  This is now - we've got to make this clear, by the way.  There's some confusion because there's also Komodo with a "K," which is an Internet firewall company.  That's not the Comodo we're talking about here; right?  This is the marketing company that put the stuff on the Lenovo laptops.



STEVE:  Correct, yes.



LEO:  Right.  That's not the same.



STEVE:  They sell security certificates also, although I'm not buying any.



LEO:  Oh.  Maybe it is the same.  No, yeah.  No, I think there's Komodo with a "K."  Isn't that a fire - the Komodo firewall, like a Komodo dragon?  I might be mistaken.



STEVE:  Yeah.  I know that there - I'm sure there is a Komodo with a "K."  I just - I'm staying away from anything that sounds like them.



LEO:  This is, no, it is the same, Comodo with a "C."  They do a firewall, as well.  Well, I guess I won't use that.



STEVE:  Please, please, please, please, please, please.  So Google is increasing the breadth of their deceptive website blocking, which I think is a good thing.  It's always sort of controversial when something that sells itself as a search engine, which is just supposed to be indexing what's there, gets into the editorial business, starts saying, eh, we don't like this, and we don't like that.  I mean, that's - it's dicey.  But the reality is it's a good thing to help users be protected from clicking on links that they are getting, after all, from Google through Google's facility.  And so if they click on a link that they got from Google - oh, and by the way, on that page are a lot of ads.  That's generating revenue, so it's a revenue-generating enterprise that works because Google's providing you with links.  Does Google have no responsibility for what happens to you if you click those links? 



So what's happened is they've started blocking websites that use what Google calls "deceptive content," or ads which would cause you to do things you wouldn't normally do, like fake download buttons that are confusing and appear right next to the real download button, or pop-ups informing you that you need to download an updated media player to view the site's content.  So it's hard to argue that that's not a net benefit for the Internet's users.  And we've seen this before.  This is extending the definition, though, from malicious content to deceptive content.



Nobody, I think, would argue about being blocked from clicking on a link that is taking you to a site with known malware that will infect your computer.  It's like, thank you very much.  This is beginning to blur the line.  But still, so many people who don't know better click the link.  Up pops the window that says, oh, you need to update your media player.



LEO:  Drives me crazy.



STEVE:  Yeah.



LEO:  I've encountered it a lot lately because I've been playing a lot of Minecraft, and Minecraft mods.  And when you are downloading the mods, these guys who make these, you know, they don't have any bandwidth or download support.  So they use these kind of sketchy downloading sites that are loaded with these buttons.  And you have to really carefully parse the page to figure out which of the download buttons is the one you want.  It's horrible.



STEVE:  And they're trying to also get you to use their installer.  Well, it's like, use our installer.  It's like...



LEO:  uBlock Origin blocks SourceForge, which, I mean, SourceForge used to be the place to get open source software.



STEVE:  I know.



LEO:  But now there's so much cruft on those pages.



STEVE:  Remember that CNET used to be good, and Download.com?



LEO:  Downloads.com is terrible, yeah.



STEVE:  You can't use them now.  We've just lost them.



LEO:  Yeah.  I always tell people, get the software from the person who made the software, if you can.  Sometimes, though, these guys are smalltime guys with no bandwidth, and so then you have to go to these downloaders.



STEVE:  Yeah, you do want to go to the source.  And of course this is where the advice of never download something you didn't yourself go looking for, don't, I mean, and again, our audience knows.  And unfortunately the rest of the world is going to get caught out by this.  It's like, oh, I mean, they don't know how computers work.  They're just like, you know, I famously have a friend who thinks Google is the Internet.  When I want to talk to somebody about a URL, she says, "No, just use the Google.  That's the Internet."  Okay, Judy, fine.



So they're calling it Safe Browsing tech, and it does put up, it's a full interstitial page, a big, red, scary, you know, it's the red - instead of the Blue Screen of Death, this is the Red Page of Warning from Google that just says this is a site that is not good.



Now, the good news is this puts some incentive on sites that have not completely gone over to the dark side to come back because, if Google blocks you this way, your click traffic just collapsed.  So if Google decides that they don't like the way your site is behaving, you're not getting any links from Google anymore, and that's going to put a serious dent in your click traffic.  So it is a nice way of Google using their market power in a way that's arguably helping users to also fix the sites that are behind this big red screen that prevents you from going there anymore.  Those sites will have to change their behavior if they want Google to allow their users to come through.  And I don't know how they couldn't.



And in one last piece of little Google news, this sort of follows on what Amazon has said.  Starting September 1st, Chrome will start blocking all Flash content that it decides is not "central to the web page," in quotes, central to the web page.  So Flash content such as ads or auto-playing videos on non-video websites will be automatically paused by default.  So it's the autorun-ness of them that, starting September 1st, Chrome is just not going to let them run.  You'll still be able to click on them to play them, if you wish.  And so embedded video players on sites like YouTube, well, especially YouTube, but also Vimeo, will still work.  But Chrome is, again, going to take a look at the page that you're asking it to display and say, eh, we're just not going to let those Flash things run.



So this is, again, more pressure against Flash and moving that same content over to HTML.  It's still a majority of ads that are animated are being served in Flash, just for reasons of inertia.  And, boy, if this podcast teaches us any lessons about inertia, just say "IPv6."  Like, yeah, inertia.



LEO:  Inertia.



STEVE:  Or RC4 or SHA-1 or any of the things that we talk about that people just do not want to give up.



Okay.  So the posting on Slashdot by a person whose handle I cannot read, I wouldn't read even if this was on a cable TV channel.



LEO:  Oh, dear.



STEVE:  Yeah.  Click on that first Slashdot link, Leo, and you'll see why I'm not giving you his name.



LEO:  Yeah.  People use weird handles on Slashdot.



STEVE:  Oh, boy.



LEO:  Yeah.



STEVE:  Anyway, he writes, and this got picked up widely because it was so inflammatory:  "Even with telemetry disabled..."



LEO:  Huh.  I just read his handle.



STEVE:  Yeah.  "Even with telemetry disabled..."



LEO:  I think it's expressing his disappointment with this news.



STEVE:  Or [indiscernible].



LEO:  Yeah.



STEVE:  "Windows 10 talks to dozens of Microsoft servers."  And so on Slashdot he posts:  "Curious about the various telemetry and personal information being collected by Windows 10, one user installed Windows 10 Enterprise and disabled all of the telemetry and reporting options.  Then he configured his router to log all the connections that happened anyway.  Even after opting out wherever possible, his firewall captured Windows making around 4,000 connection attempts to 93 different IP addresses during an eight-hour period.  With most of those IPs controlled by Microsoft, even the Enterprise version of Windows 10 is checking in with Redmond when you tell it not to, and it's doing so frequently," he writes.  Except none of that is true.



LEO:  Oh.  Well, I'm looking at the log.  What's going on?



STEVE:  This guy, whose name I can share, CheesusCrust - although that's bad enough, but still not as bad as the Slashdot poster.  So let me tell you what he explains.  And I read it very carefully several times.  So CheesusCrust writes:  "Like many of you" - oh, and this is on Voat, V-O-A-T, dot co.  "Like many of you, I am concerned about the telemetry, spying, and other surveillance features, known or unknown, of Windows 10.  It has concerned me enough to push me to Linux Mint as my main operating system.  Even so, I wanted to better understand Windows 10, but Internet search results for a decent Windows 10 traffic analysis leave a lot to be desired.



As such, I decided to do my own investigating of what, exactly, Windows 10 is doing traffic-wise, and post the results.  For this analysis, I wanted to simply analyze the network traffic of Windows 10 on a clean install, and just let it sit and run without using it."  In other words, he disabled nothing.  So...



LEO:  Oh, this is the default express settings.



STEVE:  Which we know causes you to need a larger bandwidth connection to Cox or your ISP.



LEO:  Well, no, no, no, wait a minute.  He says, "I've chosen the customized installation option where I disabled three pages of tracking options."



STEVE:  Where, where, where?



LEO:  Right here.



STEVE:  Oh.  How did I miss that?



LEO:  So, yeah, I had read this, as well, and did note that.  Now, and by the way, this is Windows 10 Enterprise.



STEVE:  Oh.



LEO:  This is, by the way, not the Windows 10 you're getting if you do the free upgrade.  This is a different version.



STEVE:  You're exactly right.  He says, you're right, "I have chosen," in the third point.  I just missed it because it wasn't a bullet point.  He says:  "I installed VirtualBox on a Linux Mint laptop and installed Windows 10 EnterprisePNG on VirtualBox.  I have chosen the customized installation option where I disabled" - well, thank you, Leo.  It completely changes the nature of this report.



LEO:  Well, but also the fact that it's Enterprise changes it, too, because this is not the version most people are going to use.  I'd love to see this - but you know what I got out of this?  How useful it is to run DD-WRT because you can turn on this kind of analysis at the router.  You don't even need to use Wireshark.



STEVE:  Yes.



LEO:  You can monitor all these connections.  I mean, Wireshark lets you see what's going on.



STEVE:  Yes.



LEO:  But you can at least monitor these connections.  And 1,619 connections to one particular Microsoft address in one eight-hour period.



STEVE:  Right.  So, yeah, so he posts the eight-hour network traffic to 5,508 connection attempts and then breaks it all down.  He runs it into a MySQL database and then resolves the IPs, does reverse lookups, builds a whole table.  I've got the link in the show notes for anyone who's interested.  And it is comprehensive.  And so I guess the presumption is an Enterprise version would be less snoopy, being corporate, less snoopy than a home version.



LEO:  Maybe.  Maybe not.



STEVE:  But again, who knows.



LEO:  Who knows?



STEVE:  Yeah.



LEO:  One of the things that we know happens, if you turn off all the tracking, you don't use Cortana, you don't use Bing, you turn all that stuff off, and that you can do in those customized settings, you still have Windows telemetry, and that's not just on Windows 10, that's 7 and 8, that sends information about how you use Windows back to Microsoft for analysis.  And I would presume a lot of this, you know, what is interesting is a lot of these addresses are Akamai.  They're connecting to a CDN.



STEVE:  Yes.



LEO:  So that's not typically where you would send data.  That's where you would get data; right?



STEVE:  Yeah, generally that's the case.



LEO:  So that's not phoning home.



STEVE:  So it may have been installing a series of patches and updates over time.



LEO:  Drivers, patches, who knows, yeah.



STEVE:  It may settle down.



LEO:  Yeah.  I think that I'd like to see more of this.  And frankly, I'd like to see some Wireshark stuff.  And some of this is port 80, which you could just throw out; right?  I mean, that's just browser stuff.



STEVE:  Well, actually the port 80 stuff means that you'd probably, if it didn't bring up their own encryption tunnel, it would be in plaintext, and you could get some sense for what it was that was going back and forth.  Although a lot of it is also 443, so that's over TLS.



LEO:  The most connections is over port 3544.  That's probably the customer experience program, the telemetry.



STEVE:  And that, yeah, those are UDP packets over that port.



LEO:  Yes, exactly, yeah.  It's interesting.  I mean, it certainly [crosstalk] data point.



STEVE:  Yes, it is very chatty.  Yup, another - and, again, I'm not - everyone knows how I feel.  I will never use it.  So I'm not afraid of it.  People are welcome to use it, if they like, and knowing what's going on.



After the news dropped a couple weeks ago that Microsoft was actively planning to militate against future chipsets running anything other than Windows 10, and essentially not supporting, not taking the effort to support retired versions of the OS, and given that I'm committed to never going beyond Windows 7, I have purchased a state-of-the-art Haswell chip and all of the components and begun to build my next machine, which is intended to be my last Windows machine.  And I think it probably will.  You know, the one I'm using has lasted me a decade.  I think my next one that'll run Windows 7, it'll last me a decade.  That'll take me into my 70s.  And at that point you'll be the only one I ever talk to, Leo.



LEO:  And you'll be using a PDP-8 most of the time anyway.



STEVE:  Oh, I'm going to switch to a Mac.  The moment I'm no longer a Windows or Intel code developer, once...



LEO:  Why not BSD?  Why not...



STEVE:  I think I probably will.  I mean, I am a FreeBSD person.



LEO:  I think you would like - I think you would really like it, to be honest with you.



STEVE:  Yeah, [crosstalk].



LEO:  Or Linux.  I love Mint Linux.  And it's, frankly, it's absolutely as usable now as Windows 7 was.  But I know you need - because you're coding for Windows environments, you can't...



STEVE:  I am.  And I have a lot of server-side code.  And so running Windows 7 synchronizes me with Server 2008 R2, which is what GRC is now on, and where I also intend to stay.  The reason I bring this up is that I have a complete experience now with Microsoft's patches to prevent the Windows 10 upgrades of Windows 7.  And they work beautifully.  We talked about it a couple weeks ago.  They're not for the timid.  You need to install one or two patches which are not part of the mainstream patches.  Microsoft's not giving them to you, either recommended or optional.  You've got to go get them.  And we covered it a couple weeks ago.  There's one for Windows 7, and a different one for Windows 8.1.  When you install those it adds features to the group policy and registry that allow you to completely shut off permanently all of the GWX, all of the Get Windows 10 nonsense.



So I set up a brand new Windows, I installed Windows 7 Ultimate on this box that I've built.  And first thing I did was, before I installed any updates, it was SP1, Windows 7 Ultimate SP1, first thing I did was I installed that one update for Windows 7 and then flipped a switch in group policy saying "Turn off updates for Windows 10."  And I added a couple keys to the registry.  And a value had already appeared from the patch that was set to one to prevent it.



I added one more key, a GWX key.  Then I went hog wild, installed hundreds of updates since Service Pack 1, bringing the machine completely current, and no sign at all, ever.  And it's been up for a week of any attempts to mess with Windows 10.  So I wanted to let people who feel as I do know that, if you do that, you don't need a third-party app, you don't need anything else, just that, and it really does shut this down.



In the ongoing 2016 battle, 2017 probably, about what we're going to do about encryption, I wanted just to note that the conversation has escalated from various state legislators to one of our major national senators, John McCain, who gets a lot of press and attention.  He did a guest editorial, which I'm sure he didn't write; I'm sure he staffed it out.  This was a guest editorial which appeared last Friday, February 5th, in Bloomberg View.



And there was nothing unpredictable about it.  It did have sort of a predictable anti-Obama political component and spin, chastising our currently presidential administration for the stance they took last summer of deciding to drop the whole encryption issue for the time being, or maybe having conversations with Silicon Valley, but not going any further.  And of course it completely ignores the fact that encryption is already an available third-party add-on, which says it doesn't matter whether your platform's encryption is strong end-to-end encryption, which is now the jargon everyone is picking up.  The politicians are saying, oh, it's the end-to-end encryption that's a problem.



So the argument in McCain's posting or guest editorial in Bloomberg View is end-to-end encryption needs to be, if not outlawed, it needs to be altered so that the government is able to get in.  And this reminded me, the one thing I wanted to remind our listeners and ourselves is that metadata is still floating around.  Metadata is not content.  And whereas strong end-to-end encryption protects the content, one of the things we have, we are continually seeing, is that the Internet is not designed to protect the fact of communications.  We now have the ability to completely and robustly make them private, that is, the content of them private, but not the fact of them.



And we spend a lot of time talking about Tor and the amazing difficulty that exists in keeping the fact of communications secret.  It's just it's incredibly difficult to do that because that's not something the Internet is good at doing.  It wasn't designed to do that.  We're able to layer encryption onto existing connection stream technology, but not somehow obscure the connection stream.  So metadata is still there, still available, and, I would argue, a very powerful surveillance mechanism that isn't thwarted at all by securing what goes through the connection.



LEO:  Back to Steven Gibson and...



STEVE:  Okay.



LEO:  Yes.



STEVE:  This is just - this is just so great.



LEO:  Hack of the week.



STEVE:  Hack of the decade.



LEO:  Of the decade.



STEVE:  Oh, Leo, you're going to love this one, too.  So this is from the Check Point blog, where they announce an eBay exploit which is quite severe, which eBay says, eh, we don't think so.  We're not going to bother with this.  And, boy, it's so clever, and eBay is wrong.  So Check Point writes:  "Check Point has discovered a severe vulnerability in eBay's online sales platform.  This vulnerability allows attackers to bypass eBay's code validation and control the vulnerable code remotely to execute malicious JavaScript on targeted eBay users."



LEO:  Oy.



STEVE:  Yeah, really bad.  If this fault - but wait till you hear how.  That's the fun part.  "If this fault is left unpatched" - and Check Point already informed eBay, and eBay said no.  So Check Point said, okay, this'll make a great blog posting.



LEO:  Yeah.



STEVE:  "If this flaw is left unpatched, eBay's customers will continue to be exposed to potential phishing attacks and data theft.  An attacker could target eBay's users by sending them a legitimate page that contains malicious code.  Customers can be tricked into opening the page, and the code will then be executed by the user's browser or mobile app, leading to multiple ominous scenarios that range from phishing to binary download.  After the flaw was discovered, Check Point disclosed details of the vulnerability to eBay on the 15th of December 2015.  However, a month later, on January 16th, 2016, eBay stated that they have no plans to fix the vulnerability.  The exploit demo is still live."



Okay.  Now, remember that - and we've talked about this in many contexts through the years.  It is crucial that any site which allows someone to post content which will be shown by that site, to be sanitized.  The famous example is [Bobby] Drop Tables, where "drop table" is an SQL command that you don't want your SQL Server backend to interpret when it is processing a web page.  But the broader example is you don't want users to be able to post their own content which your site will display because it could be malicious.



LEO:  It's the xkcd comic of little - all you have to do is Google "Little [Bobby] Drop Tables," and you'll...



STEVE:  Yup.



LEO:  You'll find it right away.



STEVE:  So, the vulnerability.  "Check Point security researcher Roman Zaikin" - and I'm reading still from their blog, then I'll go into details - "recently discovered a vulnerability that allows attackers to execute malicious code on eBay users' devices" - and I ought to mention, and our listeners will quickly realize, maybe not only eBay, this thing has broader consequences - "using a nonstandard technique called" - and this is not subject for work or whatever that NSFW - "JSF**k" is the way they're naming it.  "This vulnerability could allow cybercriminals to use eBay as a phishing and malware distribution platform.  To exploit this vulnerability, all an attacker needs to do is create an online eBay store, which is to say their own pages, eBay pages.  In his store details, the attacker posts a maliciously crafted item description.



"eBay prevents users from including scripts or iFrame tags by filtering out those HTML tags.  However, by using this JSF**k, the attacker is able to create code that will load additional JavaScript from his server.  This allows the attacker to insert remotely sourced and controllable JavaScript that he can adjust to, for example, create multiple payloads for different user agents.  eBay performs simple verification, but only strips alphanumeric characters from inside script tags.  That's the key.  eBay strips alphanumeric characters from inside script tags.  The JSF**k technique allows the attackers to get around this protection by using a very limited and reduced number of characters."



Now, the technique was invented by a guy named Martin Kleppe, K-L-E-P-P-E.  And it is so wonderful.  It uses nuances of the way JavaScript interprets empty sets and Boolean values and typecasting.  It only uses six characters:  open bracket, close bracket, open parens, closed parens, exclamation point, and plus.  So the open and closed square brackets, that's JavaScript's array element and object properties and things like numbers of elements in strings, operators.  The open and closed parens are used to call functions and avoid parsing errors, so to create explicit groupings.  Plus is used to append strings and also to sum elements and cast elements as numbers.  So if you put a plus in front of something that's a string, it assumes, oh, they want me to convert that from a string value like a one, two, three string into the numeric value 123.  And an exclamation point casts anything following it as a Boolean.



So with that understanding, you can use a ton of just those six characters to essentially do anything you want.  For example, to get a numeric zero you put a plus sign in front of an open bracket closed bracket:  +[].  So the open bracket closed bracket is an empty list.  And when you cast that to a integer, JavaScript gives you the number of elements in the list, which because it's empty would be zero.  Similarly, if you do an exclamation point and then open bracket closed bracket, that yields a JavaScript value of false:  ![].  Two exclamation points inverts the first exclamation point and gives you a value of true:  !![].  If you put a plus sign in front of a true value, JavaScript casts that to a one:  +!![].



So now we know how to get a zero with a plus open bracket closed bracket.  We know how to get a one with a plus, two exclamation points, open bracket closed bracket.  We can cast that to a string by following it with a plus open bracket closed bracket, and so on.



In the example, there's like this crazy string of plus open paren open paren plus exclamation exclamation open bracket closed bracket plus open bracket closed bracket closed parens plus open parens exclamation point plus open bracket closed bracket plus exclamation point exclamation point open bracket closed bracket closed parens plus open parens - and I'm about halfway through:  +((+!![]+[])+(!+[]+!![])+(!+[]+!![]+!![]+[])).



LEO:  Okay.



STEVE:  You continue with that for another about that far, and you get the integer 123.  So despite the fact that alphanumerics were excluded by eBay, this technique...



LEO:  Wow.



STEVE:  ...taken to a crazy extreme - and there's an example on the link in the show notes, if anyone's interested.  And Leo, you can show it if you...



LEO:  I'll show it, yeah.



STEVE:  The link is, yeah, up on the previous page, Amazing Hack of the Decade.  You click there, you can see, get a sense for it.  It is an incredibly long - and, again, someone had to really want to do this, but you can.  And this allows anyone - that's what it looks like.  It's just crazy.



LEO:  It's a Pastebin of a very long string with this bracket bracket bracket bracket.



STEVE:  Yeah.  All it is is a very clever, patiently constructed concatenation of combinations of six characters that causes JavaScript to turn this into a regular JavaScript code that does anything an attacker wants.  And eBay says, eh, yeah, we don't think this is a problem.



LEO:  What?



STEVE:  They'll be changing their tune.



LEO:  What?



STEVE:  The other problem is there are many sites which don't use a whitelisting approach, they use a blacklisting approach, where they'll say, oh, wait, is this a script tag?  Okay, don't allow it.  Is it a this tag or a that tag?  And so they disallow tags they know are dangerous, but they default to allowing other things.  This technique will probably see far wider use very quickly.  It's very clever, and it's very dangerous.



LEO:  Wow.  And it's really...



STEVE:  Wow is right.



LEO:  ...really interesting, yeah.



STEVE:  Isn't it cool?



LEO:  Yeah.



STEVE:  And they go on to show how they can get a subset of letters, and that those letters then, they concatenate those to create function names, and then those function names with appropriate arguments allow them to leverage still further in order to - until they get to the point they can do anything they want to.



LEO:  Basically using arrays and parentheses for calling functions, plus append strings and the negative, the not, the bang to cast elements to Booleans.  You can generate anything.



STEVE:  Yes.



LEO:  Some sort of obfuscated fashion.



STEVE:  Very, very clever.



LEO:  That's really smart.  It's a good code, by the way.



STEVE:  So I wanted to quickly cover some errata.  Last week I misspoke, and our sharp-eared listeners said, Steve, you said "Ethernet packet."  We know you meant "Ethernet frames."



LEO:  Doh.



STEVE:  It's like, yes, I did mean frame.  So thank you.



LEO:  What is the difference between a frame and a packet?



STEVE:  Well, a frame is the proper term for the equivalent of an IP packet.  So an Ethernet...



LEO:  Right.  Oh, because it's not IP and it's not routed.



STEVE:  Correct.



LEO:  Yeah.



STEVE:  And a packet would be contained in an Ethernet...



LEO:  In a frame.



STEVE:  In an Ethernet object.  And the name of Ethernet objects are frames...



LEO:  Got it.



STEVE:  ...rather than packets.  So I stand corrected, and I wanted to, in case I confused anybody else, let them know.



Now, Leo, you'll remember that I talked about an auction for the very cool Zeo Sleep Manager Pro...



LEO:  How many did we sell?



STEVE:  ...at the beginning of last week's podcast.  Excuse me?



LEO:  How many did you sell?



STEVE:  Okay.  As you'll remember, by the end of the podcast almost a hundred had sold from that auction.  That is, that auction was sold out.



LEO:  In other words, by the time you downloaded the podcast, there weren't any available.



STEVE:  And that was a concern because I wanted any of our listeners who wanted them to be able to get them.  The auction people, URT Outlet, posted 355 more.



LEO:  Wow.



STEVE:  They all sold out.



LEO:  Wow.



STEVE:  They then posted 460 more.  They all sold out by 1:30 p.m. on Friday.



LEO:  See, we could have saved Zeo if they'd just advertised on this show.



STEVE:  Oh, I know.



LEO:  Wow.



STEVE:  That was a total of 915 sold from the beginning of last  Tuesday.  And I haven't looked, but they just yesterday, and I'm looking for - because I closed Firefox.



LEO:  They must have just bought tens of thousands.  I mean, do we know how many they got in the bankruptcy auction or whatever it is they...



STEVE:  I don't have a number.  Let's see.  Last time I looked they were at 236 of a new auction.  And I just refreshed the page.  They're now at 253.  So here's what I wanted to tell our listeners.  Anyone who was excited but happened to go when they were between auctions, they're back.  And they have plenty of them.  I have updated the GRC.com/zeo page with the link to the auction.  They hit some sort of limit that eBay imposes, so they had to switch to one of their alternative identities.  But they're the same people.  And I just wanted to share this nice note that gives you a sense for them and how impressed I have become.



And I got this a couple days ago:  "Good morning, Steve."  I think this was like maybe even Tuesday, before the most recent things happened.  And this is Dawn, who is their asset sales supervisor.  She said:  "Yes, this is an awesome phenomenon.  We only have matched sets right now.  We do not have any more single headbands."  So that's worth noting.  For a while they had the whole kit for 40 bucks, brand new surplus, and then individual headbands.  They sold out of those.  And since the pod doesn't work without the headband, they can't sell any headbands alone, at least for now.



And then Dawn said:  "I did post another 460 this morning.  That is an accurate number for listing, as we are counting daily so we do not oversell this product.  I think there are about another 300-plus after the 460, but I need them counted to be sure."



LEO:  Were they glad they bought these.



STEVE:  Yeah.  She said:  "I just wanted to give you a heads-up that we so appreciate your work and [she has in quotes] 'advertising' for us that we are sending you a thank you package."  And actually I received it.  She sent me two headbands as a courtesy and some gift cards for a meal at a local restaurant.



LEO:  Wow, wow.



STEVE:  So I thought that was very nice.



LEO:  Boy, Steve.  You're lucky you're not in broadcasting.  I'd have to bust you for plugola now.  Yeah, yeah.  You got a little side bet here.  All the apple garden you can eat.



STEVE:  She says:  "We know we do not have to, but we wanted to, and show our appreciate for your like of the product and letting people know about it.  We did not raise the price as we wanted you to have credibility with your listeners and give them a great deal."



LEO:  Nice.



STEVE:  "Thank you very much for the broadcast, and we are trying to make all your listeners happy.  We do not usually ship out of the U.S., but you have a few followers in the U.K., Canada, Brazil, and Australia that would like them."



LEO:  Holy cow.



STEVE:  "We are making special arrangements for these followers."



LEO:  Wow.  Wow.



STEVE:  Then she says:  "Thank you again.  I would like you to know we are a team here, and with Angie, Jose, Chad, and Angela's help, we are getting these packages out in a timely manner.  Dawn Ames."



LEO:  Wow, nice.



STEVE:  Anyway, I'm impressed with them.  I kept worrying that they were going to jack the price up because they've got something that - they sold a thousand of them last week.  They made $40,000 last week.  And they may imagine they could make it $50 each, but they haven't.  So again, if anyone didn't look, the GRC.com page last week was just a link to their auction.  I now have had time and had a lot of feedback from users, a whole bunch of first-use tips.  So if you have any trouble at all with it, GRC.com/zeo is now a rather comprehensive page to get you started using your Zeo.  And people are beginning to play with it and actually are loving it a lot.



I did want to mention that "The Expanse" is over.  I watched the final two episodes.  I didn't see them, I think they're on Tuesday nights, so I didn't see them by this podcast last week.  But it's just fabulous.  And I found myself actually wishing for an inversion.  Normally I read the books because the books are so much better.  In this case I found myself wishing that I had not read the books so that I didn't know what was going to happen because the presentation was so good.



LEO:  Well, good news.  I haven't read the books.



STEVE:  Good.



LEO:  I think I started "Leviathan Wakes," but I don't know if I finished it.  It's gone beyond that; right?



STEVE:  Well, we only get 10 episodes.  And I think the last episode - oh, and I forgot to mention.  Remember how I've been saying how unhappy I was with the beginning?  That the very beginning seemed really wrong?  That no one who watched it would have any idea what was going on?



LEO:  I was puzzled, yeah.



STEVE:  It turns out they did this out of sequence.  They took us back to the beginning, having teased us with, like, what happened after that, and completely filled in all of that missing stuff so that it's now completely clear.



LEO:  Should I watch it in a different order?



STEVE:  No, no, no.  Do it their way.  I'm always annoyed when shows do that.  That's something that people do now that I find really annoying is you've got to keep track of, wait a minute, did this happen now?  Who knew what, when?  But still, it does bring us current.  And I'm getting a lot of feedback from other people who are saying, yeah, this thing is great sci-fi.



LEO:  Nice.  Can't wait.



STEVE:  I did want to mention two recent breakthroughs in energy.  On the 10th of December, so early last month, Germany fired up what they're calling their "Wendelstein 7-X," which is a funky type of tokamak which is actually called a "Stellarator."  And it has seven weird twists in it.  So it's as if - I'm sure there's some sort of - it reminds me of some sort of a doughnut of some sort, sort of like an old-fashioned, except if you took an old-fashioned doughnut and kind of did a Mobius thing to it so that it has seven twists.  It turns out that a supercomputer designed it.  No human could have done this without a supercomputer.  But the nature of the bizarre asymmetries they believe gives them a tremendous advantage.  So it was able to attain 80 billion degrees for a quarter second.  And of course, just to remind people...



LEO:  Eighty billion degrees?



STEVE:  Eighty billion degrees.



LEO:  That's, like, off the scale.  I mean...



STEVE:  It's very hot.



LEO:  It's hotter than the sun.



STEVE:  Well, and we need that for fusion because we don't have gravity.  The sun has the advantage of a huge amount of gravity.



LEO:  Oh, a lot of pressure, so...



STEVE:  Yes.  And so we're trying to do this in a basement somewhere, instead of the center of the sun.  But what caught my attention was a quarter second.  That's a long time.  Because these things are normally, like, okay, we're sure that happened, but it was so short we need to make sure that the recorders were running.  But 80 billion degrees for a quarter second.  Everyone was jumping up and down.  Now, unfortunately, well, not unfortunate, I don't mean to be - I don't mean to say that.  China yesterday did 50 million degrees for 102 seconds.  Oh, is that a picture of the Stellarator?



LEO:  Yeah.



STEVE:  Yes.  Isn't that the funkiest looking thing you have ever seen in your life, Leo?



LEO:  Only in Germany would you think that this is a good idea.



STEVE:  Oh, I know.



LEO:  What the, what the, what?



STEVE:  If anyone's curious about fusion, there are some wonderful animations there about, oh, my god, you just look at it, and it just makes your head hurt.  It's like, what in the world?  Look at the shape that the...



LEO:  How do they heat things up?  What is - geez.



STEVE:  Yeah.  It's just crazy.  It's funny, too, because the support system, the support infrastructure for the thing is like seven times larger than it is.  It's this little crazy-looking doughnut thing, all funky and twisted and bent.  But then everything it needs in order to feed it is just like, way bigger than it itself.  But anyway, China has built a traditional...



LEO:  This is the Max Planck Institute.  So this is credible.  This is not some...



STEVE:  Oh, yeah.  Yeah, yeah.



LEO:  Yeah, yeah.  So, but China is trying to do it, too, huh?



STEVE:  Well, they went to 50 million degrees, but for a stunning 102 seconds.  Which is, like, amazing.  Now, some of the reporting, I said, let's remember this hasn't been independently vetted, blah blah blah.  But, okay.  Yes, you're showing the animation of how the seven twists in the Stellarator works.  Anyway, that's a great video.



LEO:  It seems made up.



STEVE:  Doesn't it?  It's just gotten too crazy.



LEO:  If this were in a science fiction book, you'd go, "Oh, come on."  Apparently they built it in Minecraft.



STEVE:  Yeah.  The graphics are a little...



LEO:  Primitive.  Primitive, let's say.  But, you know, they're busy doing other stuff.



STEVE:  Yes.  Actual...



LEO:  Oh, my goodness.



STEVE:  Look at that sucker.  Yeah.  And, like, nothing is symmetrical, nothing - it looks like something...



LEO:  Alien technology, it looks like, is what it looks like.  It's bizarre.



STEVE:  Yeah, it totally does.  Yeah, and so that shows you how, like, all, like, individual, bizarrely designed, computer-designed rings.  And in order to have instrumentation they had to have holes in different places where it would be useful to see something.  And so there is an example of one of the magnets, and another one, and another one.  Every single one...



LEO:  So they're using magnets.  Is it particles they're accelerating?  Or what are they...



STEVE:  It is a hydrogen plasma.



LEO:  Oh, they're exciting the gas.



STEVE:  Yes.  So it's a plasma.  And so you need to heat it up and squeeze it.  And so it uses - the plasma is conductive.  And being conductive means that you can influence it from an externally applied magnetic field in order to contain it.  And so all those crazy magnets are, like, supercomputer-designed in order to move the plasma through this conduit in the proper fashion.



LEO:  So of course the problem with this is you put so much energy into generating...



STEVE:  Right, right.



LEO:  ...the conditions for fusion, that you're not getting a net gain.



STEVE:  Right.  And of course - and there are some now that are beginning to be break-even.  And here we're now doing a travel, a trip through the inner workings to show - and those are equal potential lines of magnetic force that we just flew through.



LEO:  Well, of course they are.



STEVE:  So cool.  And so...



LEO:  So are they getting to the point where they have enough, they're getting enough energy out to justify the energy in?



STEVE:  Yes.  We're not quite at breakeven, but we're beginning to be at the point where we're not having to beg for money to pay the electric bills anymore.



LEO:  Oh, well, that's interesting.



STEVE:  Where it is beginning to actually work.  And these are all early proof of concepts.  But, you know, the concept here is we're burning matter, like the sun does.  We're going to simply, instead of fission, which is such a messy energy-generating technique, we're going to fuse matter.  We're going to burn matter.



LEO:  Instead of breaking down large molecules, like uranium 235...



STEVE:  Yes, in the same way that the sun...  



LEO:  We're going to build up hydrogen.



STEVE:  Exactly.



LEO:  From hydrogen to helium or something.



STEVE:  Exactly.  Exactly.



LEO:  And energy is released.  Step 3, profit.



STEVE:  Yeah.  It's funny because the person who tweeted the note about China to me this morning, he sent back, "Yeah, but we're a long way away from having that in our kitchen or pocket."  And I said, "Yes, but remember the size of the first computers."



LEO:  Right, right.  It may not be as long as it looks.



STEVE:  Yeah.



LEO:  The first thing is to make it happen.



STEVE:  Yeah.



LEO:  Have they actually had a fusion occur?



STEVE:  Yeah.  Sustained fusion reactions.



LEO:  Wow.



STEVE:  Exactly.



LEO:  Wow.  So they're taking deuterium and turning it into tritium or something.



STEVE:  Yup.



LEO:  Adding a proton there.  Wow.



STEVE:  Boom.  It's hard to know if one of those things is out of place.  That's just crazy.



LEO:  I don't know.  It's just amazing.  This is amazing.  It's crazy.



STEVE:  So I had a nice tech support interchange that I wanted to share, and also solve a problem that some SpinRite users have.  Greg forwarded me part of the email thread, but not the person's first contact.  He started with his reply, where Greg says, "Do you have an internal SATA drive?"  So the guy probably said SpinRite won't run.  I'm getting this red screen that says divide, like, I can't remember if it's divide by zero error or something.  That happens to some systems on some motherboards.



So Greg replies, "Do you have a internal SATA drive?  If so, in your motherboard BIOS settings you'll likely find an option to switch your SATA motherboard to something called Legacy IDE, Legacy Operation, or Compatibility Mode, maybe just ATA or IDE."  And Greg says, "Various BIOSes call it different things, but the idea is that the SATA controllers are made to appear as standard traditional IDE ATA drives.  We've encountered instances where the newer SATA BIOS code was less well tested than the older and more solid Legacy code which SpinRite uses.  You should restore your motherboard to its previous SATA setting once you're done running SpinRite on your SATA drives."



And so that's the case.  What's happened is that, by the time that the AHCI technology came along, no OSes were really using it.  They would just use it to boot themselves, and then they had their own AHCI drivers.  And that's the support that I most recently added to SpinRite as we moved to SpinRite 6.1.  So I'll be solving this problem by moving us away from using the BIOS.  But at this point SpinRite 6 still does.  The problem is that SpinRite uses the heck out of the BIOS.  And if you have a late model drive, the BIOS defaults to AHCI mode, or SATA mode, using BIOS code that is buggy.



So, and this has been the conundrum is it isn't a bug in SpinRite.  There's nothing I can do to fix people's motherboards, except to cause SpinRite not to use the  motherboard at all.  That's the main feature of 6.1 from which we'll get all kinds of benefits.  In the interim, simply switching it back to ATA uses the Legacy BIOS code that does not have the bug.  And people think, oh, isn't that slower?  No.  It turns out it's not any slower than using AHCI.  You're still able to drive the drive at full speed.



Anyway, so in receipt of this email, someone named Forrest said, "Greg, thank you.  I'll make the suggested changes to the BIOS and start SpinRite again."



So then the following email from Forrest:  "I wanted to let you know that the BIOS ATA settings allowed SpinRite to run, and it worked.  I was able to recover the pictures my daughter had taken around Europe in the fall of 2014 when she was doing a study abroad her junior year in college."



LEO:  Aw.



STEVE:  "Now she'll be getting the pictures for her Valentine's Day present.  She studied marketing overseas; and, as a photography major, she was very disappointed when the last week of her semester the hard drive crashed.  I had been saving up money to send the drive off to a data recovery group.  But thanks to SpinRite, that wasn't necessary.  Now she can add a few of her pictures to her website.  Thank you for creating such a great tool."



LEO:  Wow, Steve.  That must make you feel pretty good.



STEVE:  Yeah.  That's...



LEO:  Wow, what a nice story.



STEVE:  That's the payoff.



LEO:  Isn't that great.  All right, Steve.



STEVE:  Forgot to mention one thing.  It's in my notes, and I just skipped over it.  The Zeo Sleep Manager pods only run with Android.



LEO:  Oh, you have to have an Android phone.  Because they for some reason left the software on the Android store.



STEVE:  Correct.  And Amazon this week, through the 13th, through February 13th, took $10 off of the seven-inch Kindle Fire tablet, so it's 39.95, $40.



LEO:  And you can use that with it?



STEVE:  Yes.  I do, and several other people are using it successfully.



LEO:  So it's not just in the Google store, it's in the Fire store, the Android, or the Amazon store.  Because that's a different store.



STEVE:  Actually, no, it's not.  You need to run a patch.  I have the links to it on my page.  But someone's worked out how to install the Google Play...



LEO:  Do a side load, okay.



STEVE:  Well, you can side load, or you're able to run Google Play, the Google Play services on your Kindle Fire and then have access to all the Google Play assets, including the Zeo Sleep Manager Pro app. 



LEO:  That makes it much more attractive.



STEVE:  So, yeah.  And that's what people are doing is they're iOS users, so they don't have an Android, but they just buy a cheap Android tablet.  And I just wanted to mention that this week Amazon has them for $40.



LEO:  Nice.



STEVE:  And it works great.



LEO:  Cool.



STEVE:  So, okay.  Nate Smith tweeted me.  He said:  "Hi, Steve.  Could I open up some ports on the IoT router and reach in from within the private LAN?  Seems like NAT on the root router would push a request over to the IoT modem's WAN IP.  Does this break anything?"



And this was sort of my opening, and a great opportunity for essentially giving our listeners one additional toolkit for ways to understand this so that this and other sorts of problems can be solved.  As I mentioned last week, the way IP routing works - so basically we have IP routers.  Within each network is Ethernet as the carrier medium for these IP packets.  Yet, as we said, the Ethernet is locally constrained.



So a router has two sides, the WAN side and the LAN side.  There's an Ethernet network on each side, but yet it is an IP router.  So the Ethernet serves only to get the IP packets to and from the router.  The router only deals with IP.  So we get Ethernet isolation.  And that's the key of the security to our three-router solution, the "Y" approach, is that there is no bridging or communication of Ethernet across the routers.  There is only IP routing.



And so what I want to focus on a little bit is some subtleties of IP routing in this context.  So we all know, we've seen 192.168 dot something dot something.  Or maybe 10 dot something something something and so forth.  And there's this concept of blocks of IPs being in the same network.  So, for example, 192.168.0.1 through .255, that is, where the last tuple, the last byte of the IP address numbers individual machines in the network.



And the key here is what does "in the network" mean?  Well, "in the network" means that they all share the 192.168.0, that is, they all share the prefix and then have different suffixes.  And the way the prefix is determined is the so-called "subnet mask."  That's that thing that's 255.255.255.0.  And that number, the 255 is all ones in binary.  So eight ones for the first byte, eight ones for the second byte, and eight ones for the third byte, which correspond to 192.168.0.



So what the subnet mask tells every device in that network is any IP where the bits are all the same as its own, wherever the subnet mask is ones, is the same network, that is, the same local network.  And that's crucial because routers, when they receive packets, we've often talked about how router receive packets, look at the destination IP, and then decide which interface to send the packet out of.  Well, that's also happening in our homes, with our own home routers, exactly like big iron routers out on the Internet.



So the idea is that, with this three-router "Y" configuration, there are three routable IP networks.  There's the Y-configured IP network which interconnects the three routers.  And that's the LAN of the root router that connects to the Internet, and the WAN ports of the two isolation routers that forms the "Y."  And then the two isolated LANs are on the LAN side of at least two, maybe three or more routers, however many you want, as we were talking about.



So here's the tricky part.  Those intermediate routers, the ones that connect to the private LANs, they will only function if there's a different LAN on each side.  That is, in order for packets to cross, they must arrive at the router and be destined for somewhere outside of the router so that the router sends them out of its WAN link.  So, for example, this means that, when you connect the interior routers to the exterior, to that root router, their WAN IPs are going to be assigned from DHCP, whatever that root router uses as its default LAN.  Let's say for argument 192.168.0 is that root router's network.  I don't know, and it's really a function of the router's firmware, what a standard consumer router does if it receives that network on its WAN.  That is, normally consumer routers default to 192.168.0.* or .1.*.



Now, if the router had dot zero dot something, dot one, on its WAN, maybe it's smart enough to choose a different internal network for its LAN number, but it may not be.  So that may be something - this is always user configurable.  It may be something you must configure, that is, one of those internal LANs you could set to.  And for some of this more advanced inter-private LAN routing you're going to want to, you might deliberately set that to 192.168.1.0 and set the other internal private LAN to .2.0.  You can generally change them to be whatever you want to.  So that clearly and uniquely numbers each of the LANs that you've created.  Dot zero dot whatever is the interconnection LAN for the routers.  Then one router, whether it's your private or your secure internal private LAN, that might be dot one dot whatever; and the Internet of Things could be dot two dot whatever.  And deliberately setting the numbering both assures they're not in conflict and lets you know what they are.



So Nate asks, that sort of started this whole thing, "Could I open some ports on the IoT router and reach in from within the private LAN?"  And the answer is yes.  The idea would be that you would know what the WAN IP of the IoT router is.  And in fact it's easy to use DHCP, the Dynamic Host Configuration Protocol, because it just establishes IPs for you.  For this sort of a network, you may want to just assign these IPs manually, even on the outside of those routers.  We were talking about assigning .1.0 and .2.0 on the inside LANs.  You may want to give them - you may want to assign their WAN IPs also manually.  So it'd be like .0.1 and .0.2 for the same routers, respectively, on the LAN side.  So that you know how they're numbered and so that their numbering is not changing.



So the idea is that any ports that you open on those interior isolation routers are addressable by that router's WAN IP.  So, for example, if you are in one of the private networks, and you know the IP and port number of something that you have deliberately port-mapped through the other router, you can address it using the WAN IP of the other router and the port number that you have mapped through.  So it's necessary, to do this kind of stuff, you sort of have to take things off of autopilot so that you know how things are numbered.  But the concept is each of the networks should have its own IP space that are non-overlapping.



The reason I mention that is, technically, nothing would prevent both of your interior routers, your IoT and your secure router, from both being 192.168.0.  That is, they technically - or dot one.  They have to be a different network than the "Y," the router interconnection network.  But they don't have to be different from each other, strange as that sounds, because even though, well, it's very much like what we have right now on the Internet.  Everybody in their own homes has 192.168.0 dot something.  And your next door neighbor has 192.168.0 dot something.  That is, we all are using overlapping networks, yet there's no confusion because the NAT'ing converts the IP to the public IP.  That's what's unique.  The networks behind the routers don't have to be.



So just that same principle applies in our home network if we've got a "Y" routing or a multiple router with network isolation system.  They don't have to be numbered separately.  But if you don't number them deliberately and separately, you cannot route between them because, if they were both 192.168.0 dot something, then any packets you were trying to send from your network - wait a minute, no, that's not the case.  If you were, yeah, because you were addressing to the other router's WAN IP.  So you can number them the same.  Sorry about that.  I confused myself.  This is a little confusing.  As I'm sure everyone now knows.  You are able to route packets because you are addressing to the other router's WAN IP, which you probably want to make sure has not been addressed dynamically.



So Nate's answer, the answer to Nate's question is yes.  Again, take it off of autopilot, manually assign these IPs if you want to do more fancy work like this.  Or, if you just plug things together in autopilot mode, and it sort of doesn't work, it may be because the routers just don't know how to handle a 192.168-style IP on the WAN side.  So you may have to manually configure either the WAN side to be different from the LAN side, or the LAN side to be different from what it received on the WAN side.



So the second question I pulled, I sort of may have covered.  Ken Hundley wrote, he said, "Hi, Steve.  Your 'Three Dumb Routers' podcast answered several questions I had about this, but I have one more that I'm hoping you can answer and may be something worth mentioning on your show.  I have a fourth router that I need.  It's required by Comcast for their Home Security system, and I have no access or control over it.  With this setup, I would have at least three wireless routers.  Will I run into any potential issues having so many wireless networks in such a small area?"



And I know of none.  There's really no practical limit to how many routers you can have.  I mean, "practical" meaning up to 254 or so.  But certainly three or four shouldn't be a problem.  And maybe, if all of the routers were next to each other and saturating their bandwidth and all on channel 11, that could cause some problem.  But probably your IoT devices have very low bandwidth.  I don't know what Comcast and their home security system is doing, or maybe whether it's also being used to stream media.



But it makes sense to physically move the access points from each other a few feet apart, if you can, and maybe to put them on different channels, just to give them their own WiFi channel space so they're not really actively fighting each other.  But otherwise they ought to work just fine.  And you can run as many routers off of spokes from the root router as you want to.



And finally, Yuki Takizawa said, "Hey, Steve.  I just listened to the 'Three Dumb Routers' episode.  So I just wanted to DM you a quick question.  I get the isolation property with any of these approaches.  My number one issue is sharing a printer on my home network among secure and guest networks.  Perhaps a more sophisticated VLAN routing software/configuration could do this.  But it seems hard with a simple setup, even if I use multiple routers."



And to Yuki and everyone else, it's really not necessary.  This is covered by what Nate was asking, that is, you could leave the printer behind one of the interior routers and map a port through which the other network would know how to get to.  It is the case that packets from one network would then be transiting from the shared "Y" network into the network where the printer is.  So, for example, if the printer had known vulnerabilities, and it was in the secured network, something malicious could potentially find the printer and crawl into the printer and get up to some mischief.  But you could put the printer over in the untrusted network, on the IoT network, and then map a port to it so that from your trusted network you are able to reach through both routers and into the printer.  Or you could put the printer out in the common network, that is, it would be on the IP network that all of the routers share, that links them together, and then be available easily to any of those.



Again, though, the danger is that - and this is why we have this network isolation behind routers.  You wouldn't, if that printer were compromised, if some malware somehow got into the printer, it's then on the common network, potentially, thanks to it being Ethernet, able to see all the traffic coming and going.  So I think I would put it over in the IoT side.  I would treat it like an IoT device that I want to give some selective access to from my secure network.  And so it just looks like the IP of the IoT WAN.  And any traffic that goes out of my secure network will be routed over through the other router and to the printer.



So you absolutely can selectively create controlled intercommunication between the secured networks.  And as Nate indicated, and Yuki gave us an example, there are reasons why you'd want to.  So that's how it all works.  I think we got this one taken care of.



LEO:  Yeah.  All of your questions answered to your satisfaction, one hopes.  But of course there's always next week.



STEVE:  And there's tinkering and playing with configurations, and a lot of people liked this idea.  It was way more popular than I thought because it does offer such good security against this growing threat from wacky devices where security is an afterthought.  And I'll probably share what Brian Krebs wrote about this, and some of his thoughts, next week when we talk about it.  I'm sure this is where an increasing percentage of the podcast is going to go.  So this is one of the reasons I wanted to take some time.  Even though we have talked about it before in less detail, I think creating a truly isolated network for this crazy interconnected device stuff makes sense.



LEO:  Steve, once again, you've done it all, in a mere two and a half hours.  If you want to watch the show live, bring lunch and tune in every Tuesday at about 1:30 p.m. Pacific, 4:30 p.m. Eastern, 21:30 UTC - you could bring dinner, too - and listen in.  We do the show live then.  But of course always, after the fact, on-demand audio and video is available.  Steve has it at his site.  That's GRC.com.  While you're there, by the way, lots of free stuff, including SpinRite, the world's finest hard drive maintenance and recovery utility; his sleep research; his Vitamin D research; SQRL, which is going to change the world of logins forever; and much, much, much more.  GRC.com.  He also has transcripts, written transcripts there.



We have audio and video at our site, as well.  That's TWiT.tv/sn.  There's a YouTube channel.  You can find that at YouTube.com/twit.  Look for the Security Now! channel.  And of course you can subscribe on your favorite podcatcher because after 11 years there's not a podcatcher around that doesn't have this show.  Security Now! on the TWiT network.  Thanks, Steve.  We'll see you next week.



STEVE:  See you next week, my friend.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#547

DATE:		February 16, 2016

TITLE:		GRC Is Down

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-547.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Steve and Leo discuss the overzealous DDoS attack ongoing against GRC.com, an ECDH key-stealing exploit, a buffer overflow problem in glibc, innovations in data storage, and Bruce Schneier's Worldwide Survey of Encryption Products.  



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  You know stuff's been going on with his site.  He explains what's going on, also talks about some pretty amazing stuff, including an experiment by hackers to show how you could get somebody's secure encryption keys by listening through the wall.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 547, recorded Tuesday, February 16th, 2016:  GRC Is Down.



It's time for Security Now!, the show where we protect you and your loved ones online - maybe not ourselves - with Steven Gibson, the man at GRC.com.  That's the website for the Gibson Research Corporation where you get SpinRite, the world's best hard drive maintenance and recovery utility.  Maybe not today.



STEVE GIBSON:  Well, maybe not.



LEO:  Hi-ho, Steverino.



STEVE:  Yo, Leo.  Well, I had a different title for today's show this morning, actually.  This morning the title was Security Week Roundup or something.  First I was going to talk just about the Elliptic Curve Diffie-Hellman key stealing exploit, which will be revealed on March 3rd at an upcoming security conference, where through a wall separating a laptop that's just sitting idly and researchers on the other side of the wall, the secret key used for GPG encryption was lifted from the laptop wirelessly.  But that's not really the top of the news.



Well, and then, then what happened was just this morning came news of a very worrisome, and it's so fresh off the wire we'll be dealing with repercussions, I imagine, for a while.  An eight-year-old deeply buried buffer overflow in DNS lookup in the GNU Library that is everywhere.  I mean, basically you take the Linux kernel and glibc, you put them together, and that's the Linux API.  So this is in IoT stuff.  This is in desktops.  It is everywhere.  And it turns out that a specially crafted reply to a DNS request can take the machine over.  So it's like - so then that was going to be the top of the news.



Then GRC went down for the third time, I think, or fourth, depending upon how you count.  I've been fighting, well, and losing, because that's what one does these days, a denial of service attack.  The first one occurred around 3:30 Saturday afternoon.  I was actually visiting an elderly sick neighbor of mine who's been dying of cancer for the last eight or nine years.



LEO:  Oh, sorry, yeah.



STEVE:  And he's so grumpy that I'm - he has no friends, and I'm the only one who will ever volunteer to, like, drive him around.



LEO:  Good on you.



STEVE:  So, well, anyway, so I didn't know it, but we were attacked for the first time when I was over hanging out with him.



LEO:  Isn't that sweet.  Isn't that special.  



STEVE:  And so I came back home, and GRC was off the air.



LEO:  I saw the tweets at the time, and I wasn't sure what was going on.  I figured, oh, Steve forgot to renew his certificate or something again, you know.



STEVE:  Oh, don't I wish.



LEO:  Yeah.



STEVE:  Yeah.



LEO:  That'd be a lot easier to fix.



STEVE:  So I drove over to the datacenter, which is about 50 minutes away.  And the light coming in, the light showing traffic coming in was on steady.



LEO:  Solid, yeah.



STEVE:  Yeah, solid.  And I have some frontend equipment which, like, looks at traffic and filters it and deals with it in various ways.  And coming out of that, it was just kind of like [stuttering sounds], just sort of, like, really sad.  And I thought, oh, that's not good.  So I then did a packet capture and, in a very short span of just a short time, grabbed 50,000 UDP packets and quickly stopped the capture so it didn't overflow things, and then took a look at it.  And it was all inbound DNS responses.  So any listeners to this podcast know that we were subject to, victims of, a DNS reflection attack.  And this is something, this is not the latest attack, you know, the NTP attacks are...



LEO:  Time server attack, yeah.



STEVE:  Right, the Network Time Protocol.  Those have been in vogue a little more recently.  The reason, though, that those have sort of been sort of disappearing is that it's possible to reconfigure the NTP servers to avoid that attack, basically bolt them down better.  The problem with a DNS reflection attack is that there's really nothing that a DNS server can do.  Sort of by its definition, a query packet comes in - and remember the idea was with DNS we want it to be very lightweight, low overhead.  So it doesn't use TCP, where you have a three-way handshake to establish communications, to number your packet streams and all that.  Instead, it's a very simple query response.  And so for that we use UDP, a much lighter weight protocol, where it's just a packet that bounces off of a server with a request to look up the IP address for a given domain.  And so the server that receives it does the lookup and then sends the response back to the requester.



Well, if you're able to spoof the source IP of that packet, if a bad guy or, I mean, anybody with an attack tool - and of course these are a dime a dozen now.  The big problem with DDoS is that it's trivial to do.  It was sort of a novel thing when I was attacked back in 2001.  About 15 years ago was when Wicked, that script kiddie Michael, who I managed to track down and found him and broke into his chatroom and said, "Hey, what's up?  Why are you bothering me?"  It was novel.



Well, of course in years since then the scale of these attacks have increased.  And we talk about it from time to time.  There are now serious third-party services, like CloudFlare comes up often, that specialize in protecting high-value sites, like gambling sites that have to be up during the big game, and other sites that protect them from DDoS attacks.  The problem is those services are - they're more expensive than GRC's total revenue by several factors.  We're not a big operation here.  It's me and Sue and Greg.  And so the future is uncertain, to put it frankly.  So what happened was...



LEO:  Man, is that effed up.



STEVE:  I know.



LEO:  I just can't believe how just messed up that is.  That's, by the way, this is kind of how you got into this whole security thing, right, was a DDoS many years ago.



STEVE:  It definitely drove me way deeper into the technology.  I had ShieldsUP! at the time, and I was sort of doing Internet security stuff.  And 15 years ago it was interesting.  It was intriguing.  It was like, oh, this is interesting, you know.  I mean, I'd been talking about it and writing about it, and I'd heard of them, but I'd never been the victim of one.  So it was interesting.  But aside from the fact that, I mean, no SpinRite will sell while GRC is down, so it zeroes our revenue and, frankly, potentially puts us out of business.  I've got other stuff...



LEO:  I feel a little responsible for this because, as you know, we have people who are trying to put us out of business, as well.  I don't know what I did to cause that.  But...



STEVE:  Well, and, see, the...



LEO:  I hope that that's not the same kind of group of people.  I bet it is, though.



STEVE:  I will never know.  There's no attribution behind this.  People said, oh, what, you know - okay.  So what happened was Saturday...



LEO:  Let's take a break.  Let's take a break because this is...



STEVE:  Okay.



LEO:  We're going to get going here, and I don't want to...



STEVE:  We've got a lot more news to talk about.



LEO:  We've got other stuff, too.  So we'll talk - but actually kind of the anatomy of a DDoS attack would be very interesting.  And you do know a lot about what's going on.  Despite the fact you don't know who's doing it, you can deduce quite a bit.



STEVE:  Oh, I - yeah, yeah.



LEO:  And we should say this is not a highly skilled thing to do.  That's the sad thing is it's...



STEVE:  And your first comment was, "Are you sure you want to talk about it?"  And I have to say I've kept a low profile about attacks because I recognize defense is so expensive, and it is virtually impossible to determine who's behind it without launching an FBI investigation.  I mean, and I'm just a small fry compared to the attacks that are going on all the time.  And I remember talking to the FBI about it years ago.  But anyway, let's do the first sponsorship, and then we'll continue.



LEO:  Unbelievable.  Just unbelievable.  What a world we live in.  All right.  Back we go.  Steverino?



STEVE:  Okay.  So the attack, the first attack was Saturday afternoon around 3:30 Pacific time, lasted about 90 minutes, and then stopped by itself for about half an hour.  And then resumed for about 60 minutes and then stopped for, like, four hours.  And then started up again in the evening on Saturday.  And it was going for maybe 15 minutes, and then it sort of changed.



And I have never needed to get a hold of anyone at Level 3 because GRC has never, in the time that I've been with Level 3, suffered any denial of service attacks.  I got to know the guys at Verio, Andy Peterson and John Knowles, really well back in those days, 15 years ago.  So I didn't know anyone at Level 3, and this was a Saturday, you know, on Valentine's Day eve.  But Level 3 was on the ball.  They had monitored these, and the attack was substantial enough that it was beginning to interfere with the traffic of other customers with whom I share what's known as the "aggregation router," the final router that my little subnetwork connects to.  So they shut down the interface.  They just completely took me down hard.



I got them on the phone.  They explained what was going on, and I told them what I knew about the attack.  And so I've been working with them for the last couple days.  And the attacks have been intermittent.  We were able to get back up, I think it was Sunday morning, Valentine's Day, around 10:00. I said, okay, let's, you know, I got them back on the phone, I said let's try bringing it up, and we were okay.  And I was hoping, because it was sort of intermittent, I thought, well, you know, maybe someone's just using me as a target to test a new tool.  I mean, I haven't done anything to upset anyone, as far as I know.  And so I figured, you know, because it wasn't, like, on and steady, but it was sort of coming and going, I thought, well, you know, maybe they're just, you know, I just came to mind.  So I was hoping that I'd dropped off of their mind.  And we were okay all of yesterday.



And then today at around 11:15 we got hit hard.  And I got on the phone with Level 3.  And I had tried to log into my management portal, as they call it, that lets me see what's going on.  And in fact just now, while you were doing the sponsorship, I did log in, navigated through, and I can now - I'm looking at the chart now, and we had 12.875Gb incoming on the 14th, on Valentine's Day.



LEO:  A second?



STEVE:  Yes, 12.875 billion bits per second.



LEO:  So if you had Google Fiber, gigabit fiber, that's 1Gb.  You're talking almost 13 times that.



STEVE:  Thirteen, yes.  And so this is why their only recourse is to just shut me down.



LEO:  Right, I mean, because...



STEVE:  I mean, I want to be shut down.



LEO:  Because when you buy, you know, when we buy server access, you might get, I mean, it's common to get 100Mb, and usually we get, nowadays you get a gigabit.  But the cost for a 13Gb pipe to the Internet that would only get used fractionally 99.99999% of the time is prohibitive.  Right?



STEVE:  Right, right.  And, for example, I have a 100Mb interconnect, as it's called, to the router upstream of us.  And I buy 10.  I have what's called CDR, a Committed Data Rate of 10Mb.  So I pay for 10Mb per month, or, well, 10Mb connectivity, essentially.  And then it's billed on what's called the 95/5 rule.  So, for example, I often see that we're spiking at 50 or 60Mb while somebody downloads Security Now! podcasts because those are the biggest files that I host.  But the idea is that, in general, my agreement with Verio is that I'll stay at or below 10 - I mean, not Verio, sorry, with Level 3 - that I'll stay at or below 10Mb in, like, average usage.  And if I am above that on a sustained basis, then I get charged for the overage.



So, I mean, and that's fine.  That I can afford.  The economics works.  GRC's up all the time.  I've been with Level 3 for at least eight years, never had an outage.  I couldn't be any happier with their service.  And they've been wonderful to work with during the last three days.  But there's not a lot we can do.  I mean, this is a world-class 13Gb flood.  And it takes, essentially, it takes a class of service far beyond what we've ever needed in order to deal with that.  So I've got email into the front office of Level 3 because they do offer mitigation services, but they're expensive.  So I don't know how it's going to turn out.  An hour or two ago we had to just give up.  We had to just unplug from the Internet.



LEO:  So mitigation services just give you a fatter pipe, essentially, on demand; right?



STEVE:  Well, yeah.  The idea is that we would - well, and, see, here's the other problem that I didn't mention is we're not a normal website.  ShieldsUP! and the DNS Spoofability Test and all these different things that I've built over time, that requires packet-level operation.  I'm sending out SYN packets in order to do TCP half-opens to check people's ports.  You don't do that.  No normal website does that.  So it's also very likely that the stuff that GRC has been about is fundamentally incompatible with life behind a proxy.



Basically, proxying these connections are what most websites do.  Most websites just need HTTP and HTTPS.  That provides them the web services they need.  But that's, you know, that's not what GRC is.  GRC has been all these other interesting fun things that I've been able to do because I've just had a really good provider that gave me unfiltered access to the raw Internet traffic.  So if it were necessary to hide behind some sort of upstream proxy, we couldn't offer any of these additional services.  And I don't know that I can afford that.



So anyway, I mean, this is all - you're getting it in real-time as it's happening because I've been dealing with the guys at Level 3.  They said, well, we'll see what we can do, but we can't do much for you because you have to buy this stuff that you need.  And then they were closed on Washington's Birthday yesterday, so I left voicemail and email.  I got an email bounce back saying we're not here.  Now I've had some correspondence this morning.  But frankly, all of Tuesday is the podcast.  So I told Level...



LEO:  I'm going to email John Graham-Cumming, our friend John Graham-Cumming over at Cloudflare and see if there's something we could work out, maybe an ad trade or something, to get you some Cloudflare.  Because that's the best one.  I mean, that's the...



STEVE:  Well, I mean, the ideal solution is that this stop.  I mean, that, you know, I went, we went...  



LEO:  And you don't know who's doing this?  They haven't sent you a note saying "Ha ha"?



STEVE:  No.



LEO:  No.



STEVE:  No.  No idea.  And...



LEO:  So this could be at any number of - it could have nothing to do with you.  It could be, you know, Brian Krebs gets this all the time because it's bragging rights, oh, see, we took down GRC.  It could be because of your relationship with us.  I mean, I shouldn't be so egocentric as to assume that's it.  I hope it's not.  But it could be.  You just don't know.



STEVE:  Yeah, well, yeah.  I mean, and so I guess, if there's a takeaway from this, there are a couple things.  And one is that people should understand how vulnerable websites are to denial of service attacks.  It should be a feather in no one's cap that they took GRC down.  You know, 100Mb will take GRC down because we just have a simple connection to the Internet.  And the economics of that works for us.  So it's not like we're some super-hardened high-tech security firm that's, like, hard to kill.  We're not.



And the tools, this also requires no skill on the attacker's side.  It's a matter of using any Linux or, in some cases, Windows machine because, despite my attempt to get Microsoft not to put raw sockets in Windows, that's what this enables.  Raw sockets is what this - you have to have raw sockets to do this.  Microsoft went ahead and did that.  And then the argument was, well, Linux machines have raw sockets, too.  It's like, yeah, they do.  And so any tool running on a Linux machine simply sprays DNS queries to publicly available DNS servers.



And DNS servers by definition are publicly available.  They're like web servers.  They have to be on the Internet in order to serve the people who are querying them for DNS in the same way that web servers provide pages for people who are querying for those.  So UDP packets, these little short DNS queries, are sent out with GRC's IP, 4.79.142.200.  That's GRC.com.  So you simply deliberately rewrite this little IP packet with UDP protocol, saying that that's the source of the query.  And you spray these to the world's DNS servers.  They get them; and they go, oh, for some reason GRC wants me to look up this IP address, okay, and sends the response.  And so the result is that all of the DNS servers that are part of this attack are flooding my one IP with their responses, for which I never asked.



But we've seen incredible traffic aggregation, 13Gb worth of traffic that this attack peaked at on Valentine's Day on Sunday.  And in fact Level 3 quoted 10 when I talked to them this morning.  That's the first time I had any sense for the scale of this attack because, it's funny, I have had such a perfect experience with Level 3 that I hadn't logged into the portal for five years because everything was working perfectly.  So I was unable over the weekend to log in because after six months they just block it until you contact them.  So I did that this morning.  They gave me access to my own interface at Level 3.  And that's when, during that first sponsorship, I saw that - I'm looking at this graph with some serious spikes of bandwidth.



So there is really no way to track this person down.  It's like, oh, you know, go figure out who it is.  It's nice to say that, but the reality is you can't.  Now, and I was thinking a little bit about the whole concern over cybersecurity and so forth.  Well, remember that in order for this to be doable, wherever this person or people's networks are, they are allowing packets to egress from their network onto the Internet with an obviously false source IP.  Inside of any network, like inside of Cox, it's going to be 24.78 dot something dot something, whatever Cox's range of IPs are.  But if the bad guy or a machine under the bad guy's control were generating UDP packets with GRC as their source IP, it's impossible for that to be true as that packet leaves, just to use Cox again, leaves Cox's control, leaves that ISP's network.



The router that is there on the boundary is seeing a packet leaving that says it originated from GRC.com, but it originated inside of Cox's network.  So if the router was doing egress filtering, if it was - and it's also known as "reverse path."  If it looked at the packet and said, should this be coming from inside this network, and it obviously shouldn't, the packet should be dropped.  And if networks were dropping packets with spoofed source IPs, this problem goes away.



Now, the argument is, well, yeah, there are other ways to do DDoSes.  You could, for example, swamp a person with page access queries, you know, valid requests for their home page.  And if they have a lot of scripting involved, and it's expensive to generate pages, then that'll bring down their server.  And that's the case.  But something like the whole problem with spoofed source IPs, I mean, we talked about this years ago.  Again, I haven't wanted to poke a stick in anyone's eye because I recognize how completely vulnerable I am.



LEO:  Well, and how infuriating it is that ISPs aren't doing their job.



STEVE:  You could argue that, yes, that all...



LEO:  There's no excuse for not doing that.



STEVE:  Right.  There really isn't.  There are no valid...



LEO:  Now, there could be - they could be, you know, in the Philippines.  I mean, they could be places where people don't care or don't know any better.



STEVE:  Ah.  And there's a solution for that, too.  Because, again, packets - because routers, for example, on the border between the U.S. and the Philippines, the routers know if, you know, like where GRC is.  Remember, routers have routing tables.  And so they know geographically where networks are.  And if packets are coming in from an interface that makes no sense, a router at the border of the U.S. could say, no, sorry, GRC is over here, it's not out there on the other side of the ocean.  And so, again, so we could even have international protection.  I mean, this idea could work.



But one of the themes of this podcast is inertia.  Look at how difficult it was just to retire a hash, you know, the SHA-1 hash.  No, no, please, don't stop, we need it for an extra six months, and back and forth and all this.  So here we're talking about routers that are already overworked.  And this might break some - this might subtly break some things.  I mean, there's been lots of dialogue and conversation about this over the years because this is a well-known problem.  It is completely fixable, yet there is zero traction on it.  And as a consequence, a simple tool from, I mean, this could be, for traffic of this size, I had no idea that we were dealing with a 13Gbps flood.



LEO:  It's amazing, isn't it.  Wow.



STEVE:  That's more - yeah.  We've seen that one host could generate DNS queries because there is some size amplification.  Depending upon the query you generate, the answer could be much larger than the query.  And that's a so-called "bandwidth amplification" aspect, where, say, one host, one evil host on its own 50Mb connection, it's using all of its 50Mb to send out UDP queries of a certain size.  And these are very - these could be very short, very small packets.  But the response can be 50 times larger.  I was going to say a hundred, but that's probably - but generally DNS responses are not that big.  But they can be larger.  But so say it's just 10 to one.  So 50Mb outbound, bouncing off of DNS servers all over the place, generates 500Mb inbound to me, and I'm off the 'Net.  I mean, that's all she wrote.



LEO:  So it could be even just one IP address sourcing all of this traffic.



STEVE:  Well, no.  That's what - until I knew how big this attack was.  I thought it...



LEO:  If it were a gigabit, maybe, but...



STEVE:  Well, or if it, yeah, if it were a gig, yes.  But 13Gb, so that's a network of hosts, probably compromised bots that are installed in random, unwitting people's machines.  And there's someone in control of this botnet.  And as somebody tweeted, "Remember, Steve, these are available for rent."  You can do DDoS for hire now, too.  So there's a business model behind - and of course we've also talked about the extortion.  Many times prior to a big, like in the case of a gambling site, a big boxing match, the site will receive email saying, "Pay us X amount of money by this date, or you'll be down for the prizefight."  And they elect not to, and sure enough, they're down.



Now, those big sites, then, learned the lesson over time and moved behind DDoS protection.  This is not something I have looked into before because I've never had the problem before.  We have been eight years at, well, we've been, like, 15 years, actually, attack free, until the last few days.  I'm going to have to look into it with Level 3 and see what services they offer.



LEO:  Yeah.  We buy it for TWiT.



STEVE:  Okay.



LEO:  I mean, you know, that's - but it's part of the cost of business.



STEVE:  And then of course the question will be, how will it affect what services GRC is able to offer?



LEO:  Right, right.



STEVE:  Because we may just be reduced to being a simple website.



LEO:  You know, it's like swatting.  You don't want to talk about it if you've been swatted because you don't want to encourage other people to do it because it's trivially easy.  All you have to be is an a******.



STEVE:  Yeah, well, and that's the problem.  It's why by no means do I want to present a challenge to the world's botmasters because it's easy to force me off the 'Net.  It's not like I have some magic power.  There is no such thing in this case.  They're just, you know, this is pure, raw traffic flow. 



LEO:  Well, that's an important point to make, by the way.  You have accomplished nothing impressive.  Whoever's doing this, you have accomplished nothing impressive.



STEVE:  Especially for me.  I've got a 10Mb...



LEO:  Yeah.  Steve's not trying to stop you.



STEVE:  ...CDR with Level 3.  Talk about overkill.  13Gb, just use 100Mb.  That's all it takes.



LEO:  You're overdoing it, guys.



STEVE:  Yeah.  So anyway, no show notes.  No podcasts available from me.  No services available from GRC.



LEO:  I'm so sorry.  Your Internet, your personal Internet works.



STEVE:  No.  Well, yeah, yeah, because I'm with Cox, and I've got a great connection with them.  But, so, for example, I wasn't able to send email to you guys and Elaine, the show notes and things.  I will be able to this afternoon.  I'll reconfigure not to use GRC's SMTP server because it's unplugged right now.  It's off the 'Net, along with everything else.  So I have no idea when, if, or ever GRC will be back.  We'll just have to - I will do what I can.  But today is podcast day, and that's had my focus.  I've explained to Level 3 that I can't even get over to the datacenter to look at the traffic until after the podcast.  So we will continue with the show.



LEO:  Amazing.  How did this - how do we have people like this in the world who are just direly malicious?  I mean, you provide - 99% of GRC is a free service and very valuable to a lot of people.



STEVE:  I think it's, well, but the Internet provides people with anonymity.  And this is only another form of the abuse of that anonymity.  We see the abuse of that anonymity all the time.  I mean, Twitter has been, you know, I've got a fabulous experience with Twitter.  I love it.  I've got great, great followers, and they provide great information.  For me, Twitter is a win.  But I know for many people it's just - it's a nightmare.  And you look at the postings that are being made to so many blogs which are, again, are just - the conversations devolve quickly into nothing because of anonymity.  And so this is - there's, like, zero cost to an attacker in attacking me, and massive cost to me in being attacked.  And I would argue massive to the degree that GRC is useful to the industry and to thousands of people.  There's a cost to the community for, like, forcing us off the 'Net.



LEO:  Right.  That's what's very sad about it is, yeah, that's really sad.  Okay.



STEVE:  So.  We'll put that aside for the moment, and we'll see what the future holds.  I do not know at this point.  But if anyone wants to say "I give," I give.  I do.  This is not something I can afford to fight or plan to fight or have the time to fight.  So I hope I don't have to.



There was a really interesting problem found - oh, boy - in a core library.  Code was changed back in May of 2008.  And this is in what's called glibc.  Anybody who's done any work with the C language, which is the majority of programmers, sort of before this recent change to PHP and Python and everything, I mean, C is what Unix was originally written in.  C is what Windows was written in.  And it's the old-school development language.  It's what Mark Thompson and so many other developers choose to write in, even today.



The compiler itself just compiles sort of the armature, the core of the language.  It understands four loops and variable definitions and compiling complex arithmetic expressions and that kind of stuff.  But anytime you use a function call, that's in a library.  It's the C library.  And that was - the idea of the language itself being small was one of the brilliant ideas that Kernighan and Ritchie, and there was one other guy in the beginning [Ken Thompson], at AT&T had.  And the idea was just create a small language, and then we use an external function library to give it teeth, to allow it to do things.  And the beauty of that is, is it's extensible then.  So what's happened is over time this C library has grown.  And so things like opening a file, allocating a memory buffer to do something with, or even the printf function, those are all in the C library.



So this is part and parcel of any C-based source code.  You have the compiler and the C library.  You can sometimes dynamically link to it where your program stays small, and it actually makes calls into the library.  Or it can be the library, the functions you use can actually be sort of copied into your code so it's bound together.  But either way, if it's in C, there's a C library.



So part of the GNU Project was to create a library for its use that was intellectual property, open source, and fit the license requirements that the project wanted and so on.  And, for example, any Linux system has the C library as part of it.  Now, there are leaner libraries which, because the C library over time has gotten very big and very powerful, many things, because memory's gotten so cheap, just drop the whole library in and don't worry about it.  But there are, for example, in lightweight embedded devices that really need to keep themselves slimmed down, they may use a different library than glibc.



But since May of 2008, so coming up on eight years ago, introduced in v2.9 of glibc was a mistake.  And the mistake was that, if the program needed to resolve - I'm looking at the irony of this because it's DNS, which the one look I had at our traffic on Saturday was a DNS reflection attack, as I first mentioned.  And this is a mistake in DNS.  If the program or the IoT device or the desktop machine or the server or whatever it is, I mean, that's how ubiquitous this is.  And that's why this is a bit breathtaking, and that's just happened this morning, the news of this came.  If that thing looks up a DNS address in sort of the default way, the default way is to ask for either an IPv4 or IPv6, in DNS parlance, there's an A record - the A stands for address, you're asking for the address - or an AAAA.  And I always got a kick out of that because the IPv4 is a 32-bit address.  So it's the original A record.



Well, since IPv6 is 128 bits, that's four times 32, so they named it AAAA instead of like, you know, A2 or AA or something, to represent the fact that it's actually the equivalent of four A responses since it's IPv6.  So if the program, as most do, just says look up this IP address, and sends out both the A and the AAAA query, a subtle mistake in the way the buffers are managed allows the responder or - and I have to say it, Leo, I loved when Rene said "person in the middle."



LEO:  Well, you know Rene.  He's Canadian.  Very politically correct, yeah.  It's a person in the middle.



STEVE:  Oh, I loved it; you know?  I thought, okay, we're being gender neutral.  It's not a man-in-the-middle attack.  For Rene, it's a person in the middle.  So it's like, yes, we don't know whether you are a man or a woman, but we wish you weren't in the middle no matter who you are and how you put your pants on.



So the problem is that this is DNS.  And remember that DNS is  not in a - there's no security wrapper for it.  Unlike HTTP, where there is a security wrapper, if we use HTTPS, we have TLS to protect the protocol.  There's no wrapper on DNS.  DNS packets are just out there in the wind.



So this is extremely simple to MITM, or PITM, I guess, for Rene, person in the middle.  And the reason is, if somebody were sniffing the traffic, all they have to do is respond before the actual response comes.  That is, somebody who's in the middle is almost by definition nearer to the questioning device than the DNS server that those queries are bound for.  So what that means is that person who sees an outbound, the bad guy that sees the outbound DNS query simply responds maliciously and can take over the device.  I mean, this is so you get a sense for how bad this potentially is.  And so the Google security folks did a blog posting this morning, and they said - and some of this is recap, but this is big enough, I want to share this.



They said:  "Any Unix-like operating system needs a C library, the library which defines the system calls and any other basic facilities such as file or device open, malloc, printf, et cetera.  The GNU C library is used as the C library in the GNU system and in GNU Linux systems, as well as many other systems that use Linux as the kernel."  And of course even more widely than that.



And they wrote:  "The Linux kernel plus the GNU C library form the Linux API.  All the versions of glib since 2.9 are affected."  And so in their blog they said:  "Have you ever been deep in the mines of debugging and suddenly realized that you were staring at something far more interesting than you were expecting?  You're not alone.  Recently a Google engineer noticed that their SSH client segfaulted" - that's the equivalent of a blue screen.  A segment fault is where an access is made outside of the valid range that has been allocated for a segment of memory - "segfaulted every time they tried to connect to a specific host.  That engineer filed a ticket to investigate the behavior, and after an intense investigation we discovered the issue lay in glibc and not in SSH as we were expecting.  Thanks to this engineer's keen observation, we were able to determine that the issue could result in remote code execution."  Cue spooky music.



"We immediately began an in-depth analysis of the issue to determine whether it could be exploited, and possible fixes.  We saw this as a challenge, and after some intense hacking sessions we were able to craft a full working exploit."  So again, that means that the world is currently full of DNS query functions everywhere where, probably if the nature of the target were known, that is, you'd have - the malicious guy would have to know what was making the query.  But given that, responding with a special malicious packet or packets can give the attacker control.  This is really bad.  And it's, again, a perfect case in point of why appliances that are connected to the Internet will have this in them, and they have to be maintained over time.  Here's something that has been in place unseen for eight years.  So it is, by definition, everywhere.



Continuing with their posting:  "In the course of our investigation and to our surprise, we learned that the glibc maintainers had previously been alerted of the issue via their bug tracker in July of 2015," so last summer.  "We couldn't immediately tell whether the bug fix was underway."  Oh, and by the way, the reason, it was so critical they took it out of their bug tracking - that is, the glib guys did - because it's like, we can't even let this get known.



LEO:  Whoops.



STEVE:  Uh-huh.  So, says Google:  "We worked hard to make sure we understood the issue and then reached out to the glib maintainers.  To our delight, Florian Weimer and Carlos O'Donell of Red Hat had also" - and those are two of the maintainers of this glibc library - "had also been studying the bug's impact, albeit completely independently.  Due to the sensitive nature of the issue, the investigation, patch creation, and regression tests performed primarily by Florian and Carlos had continued 'off-bug.'  This was an amazing coincidence, and thanks to their hard work and cooperation, we were able to translate both teams' knowledge into a comprehensive patch and regression test to protect glibc users."



So they say:  "Our initial investigations showed that the issue affected all the versions of glibc since 2.9.  You should definitely update if you are on an older version, though."  Okay.  So what they're saying is that, if you had something older than eight years ago, there are so many other problems with that, that don't stay where you are just because of this.  Get the one that is newer, that fixes everything that's been fixed in the last eight years and this, too.



And then they say:  "If the vulnerability is detected, machine owners may wish to take steps to mitigate the risk."  In their posting they have a proof-of-concept detection.  At this point it's all - this is just, again, this is just a few hours old.  So I've got a link in the show notes which I'm not sure how I'll get them to you, or to anyone.  Well, I'm sure - oh, in fact, if you just google right now, if you google "glibc," the first hit that at least came up for me was this because it's already tracking as something that is very serious.  So if you just google "glibc" you get the link to this.



And I'm sure shortly there will be some safe proof-of-concept tests that a user could use, hopefully.  I wonder how that would work?  You'd have to respond to a DNS query from your system.  Maybe what could happen is that somebody could create a service, they could do a benign DNS server so that you do a DNS query to a benign test server, which will send back packets that will crash your computer.  Actually, that's probably what it would do.  It would crash your machine.  But in doing that you would definitely know the glibc that had been bound into your system or your whatever, you know, your Amazon Echo was vulnerable to this and could potentially in the future be taken over until this is patched.



So they said:  "The glibc DNS client-side resolver, which is what this is, is vulnerable to a stack-based buffer overflow."  And the function is get address info, getaddrinfo().  And, for example, I use that in the Windows Winsock Library all the time.  That's the way you make a DNS query in many API environments.  So the getaddrinfo() library function.  "Software using this function" - and I should say that which is anything that connects to the Internet that isn't hard-coded with an IP address will need to do a DNS lookup.  And most things do because IPs may change.  And if some device was hardcoded, it would be stranded.



So they say:  "Software using this function may be exploited with attacker-controlled domain names, attacker-controlled DNS servers, or through a" - and they said man-in-the-middle.  We're not being gender-specific here, so "person-in-the-middle attack.  The getaddr function is used for DNS lookup.  Due to a mismanagement of the receiving buffers, the replies from parallel A and AAAA queries may overwrite the receiving buffers."  Now, these conversations, the glibc stuff, points to a patch at Sourceware.org.  So they've got a patch that fixes it.



What they were able to verify was that at most 64K of data could be force-fed into the querying party, which is catastrophic.  In a simple test, they were able to gain control of the instruction pointer in order to point it where they want to.  So that means that you load your payload of up to 64K and then point the instruction pointer, not where the requesting device wants it to be, but into the attacking payload, and you're in control.  So, staggeringly worrisome.  I don't see anything that mitigates this.



Now, they say, if you were to do things like have a firewall which would drop DNS packets greater than 512 bytes, that would be good.  That's not clear.  Oh, yeah, I think it is clear that this requires a larger than 2K response.  So the DNS response must be 2048+ bytes.  So, and that's an unusually large, although not impossibly large, but an unusually large DNS reply.  So if you had something upstream that was blocking larger packets, that might break some valid queries, but it would definitely block the invalid ones.  So, for example, maybe ISPs will consider blocking incoming UDP answers of a size of, maybe, now, they said greater than 512.  I don't know why they wouldn't block it greater than 2047.  Who knows?



Anyway, the industry is still responding, or maybe getting ready to respond to this.  I think we'll know more in coming weeks.  But, wow.  Understandably, the reason it floated to the top of the news for the week is it's the worst-case scenario.  It's a function core to Internet-connected devices, in probably every Internet-connected device, been there for the last eight years, so that's all Internet-connected devices.  We didn't have IoT eight years ago.  And it does require malicious traffic.  But as these guys noted, not even a man in the middle, if you have a malicious DNS server, then an advertisement or JavaScript or a web page, anything that asks a browser to do a lookup would fall through that library, cause your system to look up a DNS query.  The response from the malicious DNS server would then crash in the worst, or in the best case, or in the worst case take over your system.  So, I mean, I can't think of anything.  I mean, this is as bad as it gets, frankly, in a problem that is, like, almost completely ubiquitous.



LEO:  Yeah, that's really the scary thing.  I mean, every system has this on there.



STEVE:  Yeah.



LEO:  It's not - you wouldn't have a glibc on Windows or - you'd have it on Mac.  I should check my Mac because it's Unix-based.  But I don't know if you'd have it on Windows.



STEVE:  Mac is FreeBSD, as I understand.  And I think there's a variation of glibc for FreeBSD.  But there's been some evolution over time, so I don't know where they stand now.  It may have been forked.  There was a fork of glibc that happened at one point, and I was just trying to absorb a lot of information this morning to put all this together.  And we'll know much more in the coming days.  And I'll certainly have greatly expanded coverage of this.  Probably next week we'll know way more.  But, yeah.



And what I'm hoping is someone will jump on - it would be very simple, there is a proof of concept showing a packet that will crash a device.  So it would be trivial for someone like a Kaminsky or somebody to bring up a test server that says, you know, you open a DOS box or a command prompt, and you do an nslookup of this particular, you know, it would be, you know, I-am-a-malicious-DNS-response.com, and if it crashes your system, you know you're vulnerable because a DNS response should not be able to do that.  So hopefully we'll have a test before long.



LEO:  You're right.  According to [Rorx] in our chatroom, OS X uses a libSystem, which includes a FreeBSD version of libc.  The G in glibc is GNU, and of course FreeBSD is not a GNU product.  So that would make sense.



STEVE:  Right, right.



LEO:  Let's take a little break.  When we come back, speaking of Macs, Error 53, Steve's take.  I can't wait to hear it.



STEVE:  Well, and actually it's some interesting informed response from two of our listeners, so...



LEO:  Ah.



STEVE:  Yeah.



LEO:  All right.  Okay, Steverino.



STEVE:  So a listener who is actually an Apple i-device repair person responded to our discussion of Error 53 last week and DM'd me.  This is Dale Perkel.  He said: "Steve, I am an infosec professional during the day" - thus a podcast listener - "and an independent Apple repair business at night.  In South Africa, where I live, there's very little official Apple support, except possibly from the mobile operators who charge huge amounts, and generally repair time is on the order of two weeks.  I offer an overnight service at an affordable price and hence have repaired hundreds of Apple devices in the past two years.



"Error 53 is extremely frustrating, as there are legitimate reasons to replace the Touch ID sensor, such as accidental or liquid damage, or failure of the home button mechanism.  I always advise my customer that this will void the warranty, if there is one, and Touch ID will be disabled, to which they consent.  Why, when an update is then installed, weeks or months later, should the iPhone be irrevocably bricked, with no possibility of recovering data?  If there were criminal or unauthorized access happening, surely the attacker wouldn't take the opportunity to upgrade to the latest iOS.  The window of opportunity is essentially infinite for a determined attacker.



"So why can the iOS update not just detect the missing or changed fingerprint reader and destroy the contents of the secure enclave without turning the entire iPhone into a very expensive paperweight?  I trust Apple to provide the best possible security, and they rarely fail.  But this is akin to needing to buy a new car if you lose your car keys."



LEO:  Somebody else says, if you lose your key to the door, the locksmith doesn't come and throw the door out.  He fixes the lock.



STEVE:  Right.  And he says, "Thanks for the great show.  I look forward to it every week.  Cheers, Dale."  And I'll just add that, and I won't go through this, the second one actually was from a listener who gave me a link to a really neat woman who repairs iPhones, I guess as her business, because she's got a YouTube video talking about this problem with the Error 53, and it shows a stereomicroscope and lots of equipment used for dealing with this.  And she goes on at some length, I think it was a 53-minute-long video, so not worth sharing.  But basically it's that she explains something that I didn't quite understand, which was that the iPhone 5s, which first had the fingerprint reader, did not behave this way.  The bricking is new with the iPhone 6.



So this is one of the things that caught people off guard initially was that you can have the screen change.  You can change the button.  Some people, like just for vanity reasons, they want a black face with a white home button or vice versa, you know, they want something special.  Or they need the button replaced and so a third-party site does it and says, you know, this is going to - your Touch ID won't work anymore, and they go, oh, yeah, okay, fine.  Better than not having, I mean, not having a home button work at all.  But then the 5 Series phones didn't care.  That stuff was deactivated, but the phone continued.



LEO:  Yeah, 5 didn't have Apple Pay.  Only the 5s.



STEVE:  Right.



LEO:  I think it has to do with Apple Pay.



STEVE:  Okay.  So what I understand is the 5s did not do this.



LEO:  Oh, okay.



STEVE:  It was the 6 that...



LEO:  It wasn't till the 6; all right.



STEVE:  Yes.  Yeah.  So anyway, I was hoping...



LEO:  That would actually just lead me to think it's a bug as opposed to something Apple intended to do.  Apple, of course, isn't being very...



STEVE:  And what has happened since?  I've not kept in touch.



LEO:  Nothing.



STEVE:  I thought maybe - no kidding.  So, wow.



LEO:  I mean, Apple, I think Apple will do something.  Apple never moves fast in this kind of thing.



STEVE:  And what's their official position on third-party service?  Are they anti-third-party service?



LEO:  Yeah.  They don't sell - you can't buy official Apple parts.



STEVE:  Interesting.  So where are the people - so they're cloned parts?



LEO:  I don't know where they get them.  I don't know where they get them.



STEVE:  They must be cloned parts.



LEO:  Apple, yeah, I'm not sure exactly what the story is with that.  Am I wrong?  But I believe - I'll ask - I'm asking the chatroom.  I believe that, you know, iFixit, Kyle Wiens at iFixit has had some stuff to say about this.  You know, there is this right to repair movement, where you should have the right to repair your own stuff.  And of course iFixit makes the tools available, makes the parts available, makes the manuals available.  But even Kyle says, you know, I don't think this was intentional on Apple's part.  Because there's lots of ways you could handle this that wouldn't brick the phone, but would protect security.



STEVE:  Oh, and Leo, don't ever, don't ever try to delaminate the screen of an iPhone.  Jenny brought me her cracked faceplate.



LEO:  Oh, no, you have to replace the whole - it's a unit.



STEVE:  And all she had, she said, "Here, Steve.  Can you, like, replace the screen?"  And so I sort of, I started to, and then I saw the instructions that involved the blow dryer to heat the glue.  It's like, oh, my lord.



LEO:  Apple doesn't want you going inside.



STEVE:  Oh, no, no, no.



LEO:  They even have proprietary machines in the back of the Apple Store to do a lot of this stuff, to separate it and stuff.  They've designed machines.  They, no, Apple's never wanted, going back to the Macintosh, where they used Torx screws because it was so rare to find a Torx head.  No, Steve never wanted you to get in those things.



So, and Apple's always had a kind of a mixed relationship with even Apple resellers.  Essentially they've put them all out of business.  My friend Tom Santos, who ran MACadam in San Francisco, was always complaining because he could never match Apple's prices.  Apple's always going to cost him more than it costs.  So Apple's never really liked the third parties that much.  I don't think they did this to the third parties.  I don't think that - that's what it looks like, but I don't think that's what they did.



STEVE:  So if they continue the policy, then what this is, is like a wakeup call event.  And the new wisdom will be, well, if you really insist on using a third party to replace your button, absolutely never update your phone.



LEO:  Yeah.  But even that's going to, I mean, Apple does updates without asking all the time.



STEVE:  Yeah, yeah, yeah.



LEO:  You don't own your phone.  When you buy a iPhone particularly, you don't own your phone.  Some manufacturers, even on Android, some manufacturers are worse than others.  But Samsung has a similar situation on their Galaxies.  They have the Knox Enclave.  They have a fingerprint reader.  If this happens on a Samsung phone, you can still use the phone.  You just can't use Samsung Pay, you know.



STEVE:  Yeah.



LEO:  But Apple's, you know, there's such a brisk resale market for stolen iPhones that Apple, I think, is responding to that, as well.  That's why they have, in effect, a kill switch.  You can't take an iPhone and reactivate it unless you know the original password and all these things.  And I think this is part of that.  I don't think the Error 53 is intentional.  I think that's...



STEVE:  And for what it's worth, from a security design...



LEO:  It's the right thing to do.



STEVE:  Yes.  It is absolutely.  We on this podcast would stand behind the concept that you mess with a fingerprint reader, then all bets are off.



LEO:  Right.



STEVE:  So, yeah.  Although, you know, I agree with Dale that wiping the enclave, that is, wiping the secure information store which was tied to the input device, to me that's - if Apple wanted to allow people to do what you've explained they really don't want to allow people to do, they could.  But again, I don't, as you've said, there's really no motivation on their part.  They're not saying this is third-party serviceable.  So take it to Apple if you want it fixed, and we're sorry if there aren't any nearby with convenient hours and if the backlog is five months.  Wow.



So I did, in the wake of our conversations about the whole Get Windows 10 thing, I have two things.  First I want to update us on that ridiculous CheesusCrust...



LEO:  CheesusCrust.  Now, you saw Ed Bott's takedown, yeah.



STEVE:  Yes, exactly.  But in the wake of me mentioning last week that I had just set up a new Windows 7 machine and had used the sanctioned Microsoft update which added the switches, and in my experience completely and beautifully solved the problem, many people tweeted, saying, where was that again?  How do I find that?  And so I felt it was so important that I, at the time, created a bit.ly link so that everyone would always be able to find it.  So it is bit.ly/no-gwx.



LEO:  This is the GWX Control Panel, right, that we've talked about.



STEVE:  No.  



LEO:  This is something else.



STEVE:  That's the beauty, yes, this is Microsoft's sanctioned means, and it's beautiful.  So what I did was I set up a brand new Win7 Ultimate.  And then, before installing any - and that was Service Pack 1, which is the latest and last service pack.  I then added this one update that they provide.  There's one for Windows 7, and there's a different one for 8.1.  And so when you do that, you get a couple new features that allow you to then disable, formally disable all GWX from then on.  And so I did that and then went patch happy.  It was 144 patches the first round, and I did the optional ones that made sense and so forth, and never had a problem.



So again, bit.ly/no-gwx.  And that will redirect you to a Windows page where you can find the official way of doing it.  And you don't need the GWX Control Panel.  There is much more to it than that.  Unfortunately, because they don't really want you to do this, there's no, like, the Fixit button that we've talked about.  They could easily have made this a Fixit button, where you just press it, and it says, okay, good.



LEO:  It's just a registry, it's a registry script, basically, yeah.



STEVE:  Right.  And in this case it adds some features.  It is a deeper change that adds features to the Group Policy system and the registry.  But you still have to go in, and then use GP Edit and navigate down into the tree, find a new item that this patch adds to Group Policy, to say no, never ask, never do anything to do with Get Windows 10.  And it's effective.  So bit.ly/no-gwx.  And write it down, and it works.



Okay.  So last week - and I have to apologize because I didn't give the story the focus I should have, as we all know that I missed a crucial line in CheesusCrust's posting where he said that he had turned off the three pages of privacy settings, and this was all the traffic that was generated.  But I was just intending to cover the story.  I didn't go into it any deeper.  Ed Bott at ZDNet did a beautiful takedown of Forbes' hair-on-fire, oh my god, Windows 10 is even worse than you thought story.  And there's been lots of retractions and backings away, and apparently CheesusCrust has disappeared and so forth.



LEO:  He wisely pulled the site down.



STEVE:  Yes, yeah.  The number one issue was where, as Ed wrote, Mr. Crust...



LEO:  Mr. Crust.



STEVE:  "Mr. Crust reports he 'configured the DD-WRT router to drop and log all connection attempts via IP tables through the DD-WRT router that was being produced by Windows 10 Enterprise.'"  Well, now anyone who's network-aware is going, oh, well, of course it generated a lot of traffic because it kept trying.



LEO:  It keeps trying.



STEVE:  Yes.  It wasn't that it was actually wanting to communicate that many connection attempts.  It's that they were being blocked.  So rather than succeeding with whatever little conversation it wanted to have with Microsoft or with the CDN provider that they were using, and then it would have said, okay, fine, it didn't understand why it wasn't able to communicate.  And so it just kept doing so.  So what we don't know, I mean, it would be nice to have a much more responsible reporter who understands the way Windows 10 Enterprise is going to work.



Oh, and Ed also notes that it's not clear why he chose Windows 10 - "he" meaning Mr. Crust, or we'll just call him Cheesus - why he chose Windows 10 Enterprise.  It's not an end-user machine.  But Ed notes that the Enterprise version has way more power that an enterprise would, I mean, could and would use to quiet down all of this telemetry stuff, if that's what they wanted to do, down in the Group Policy stuff.  So, yeah, there's those three little pages of friendly setup time stuff that you're able to turn off.  But you can go far more deeply using Group Policy, which is what an enterprise would do if it wanted to turn things down.  So anyway, it was a bogus story.



LEO:  Also the big one that had 1,339 hits was a Teredo server, which is an IPv6 to IPv4 conversion server.  And of course if you...



STEVE:  Right.  



LEO:  It's not giving anything up to Microsoft.  This is how it's - this is normal.



STEVE:  Right.



LEO:  If you say block it, it's going to keep trying.



STEVE:  I think they were UDP on port 137, and...



LEO:  Yeah, it was doing NetBIOS stuff, too, yeah.



STEVE:  Yeah.  So anyway...



LEO:  Nothing to worry about.



STEVE:  I should have spent more time on the story.  I apologize for that last week.  But now we're up to speed and current.



Our friend Bruce Schneier did something that I think is brilliant.  In his most recent blog, and I have a link in the show notes, he did a worldwide encryption product survey.  He provides it in several different forms, one as an Excel spreadsheet.  But I love it because I can't think of anything that could better drive home to our otherwise rather clueless U.S. legislators that encryption is already out of the box.  Encryption has escaped.  Encryption is not something you can legislate against.  I mean, they tried, back in the make the keys only 40 bits for export on SSL, back in the very first days.  And then that decision, as we've talked about, is still hurting us because we had weakened security for so long.



So he wrote:  "Today I released my Worldwide Survey of Encryption Products.  The findings of this survey identified 619 entities that sell encryption products.  Of those, 412, or about two-thirds, are outside the United States, calling into question the efficacy of any U.S. mandates forcing backdoors for law enforcement access.  It also showed that anyone who wants to avoid U.S. surveillance has over 567 competing products to choose from.  These foreign products offer a wide variety of secure applications, from voice encryption to text message encryption, file encryption, network traffic encryption, anonymous currency, you name it, providing the same levels of security as U.S. products do today."



And then he pulled out some bullet points.  He says:  "There are at least 865 hardware or software products incorporating encryption, from 55 different countries."  So you can even choose the country of origin.  "This includes 546 encryption products from outside the U.S. representing two-thirds of the total.  The most common non-U.S. country for encryption products is Germany, with 112 products.  This is followed by the U.K., Canada, France, and Sweden, in that order.  The five most common countries for encryption products, including the U.S., account for two-thirds of the total.  But smaller countries like Algeria, Argentina, Belize, the British Virgin Islands, Chile, Cyprus, Estonia, Iraq, Malaysia, St. Kitts and Nevis" - whatever that is.  Nevis?



LEO:  Yeah, Nevis.  It's in the...



STEVE:  Is that somewhere you've gone?



LEO:  Yeah, yeah.



STEVE:  Nevis.



LEO:  Caribbean.



STEVE:  Oh, Nevis.



LEO:  Yeah, it's beautiful.



STEVE:  Of course it is.  Sounds beautiful.  Tanzania and Thailand.



LEO:  Tanzania, yeah.



STEVE:  Tanzania.  Actually, I practiced pronouncing that before the show and then forgot.



LEO:  I know.  It's hard to get the syllables right on that, yeah.



STEVE:  "...and Thailand each produce at least one encryption product."  All of those crazy, like Estonia, well, not - Estonia's actually a techno leader.  I'm surprised they don't...



LEO:  No, in fact, you know, that's the one you're going to have to worry about because they love this stuff.  They're very literate and very smart, yeah.



STEVE:  Yeah.  And he says:  "Of the 546 foreign encryption products we found, 56% are available for sale, and 44% are free; 66% are proprietary, and 34% are open source.  Some for-sale products also have a free version.  At least 587 entities, primarily companies, either sell or give away encryption products.  Of those, 374, or about two-thirds, are outside the U.S.  And finally, of the 546 foreign encryption products, 47 are file encryption, 86 are email encryption, 104 are message encryption, 35 are voice encryption, and 61 are virtual private networking products."



So I thought this was great.  Hopefully this will turn up in some congressional testimony where this serves to demonstrate that third-party solutions are available, and those will get used by anyone who wants them, anywhere in the world.  Unfortunately, encryption is math, and it is free, and it is available.



LEO:  Yup.



STEVE:  So my favorite person - oh, and I forgot to put a photo in the show notes because I just - it gives me the willies every time I look at his face.  If you can, click the link in the show notes.



LEO:  My computer has crashed, so I can't.



STEVE:  Ah, okay.  Oh, I hope that wasn't...



LEO:  We just have to imagine it.



STEVE:  Okay, fine.



LEO:  It's a gray screen of death.



STEVE:  Anyway, it's my favorite person, James Clapper, who really...



LEO:  Oh, lord.



STEVE:  ...really upset me - and we've talked about it on the podcast, our listeners know - when he just bold-facedly lied to the Senate when he said that - this is back in the pre-Snowden, remember, this was like six months before the Snowden revelations, when he thought he could get away with lying and saying that we're not collecting any data on Americans.



LEO:  Of course not.



STEVE:  Is, you know, what he said.  And he's like, scratching his head.  And, you know, Jon Stewart at the time said - showed it several times.  And he says, "This is what's known as a 'tell.'"  Anyway, so he's at it again.  The Guardian reports, and I'll just - this is short.  I'll share this.  They wrote:  "The U.S. intelligence chief has acknowledged for the first time that agencies might use a new generation of smart household devices to increase their surveillance capabilities."  Yeah, yes, yes.



LEO:  Shocking.



STEVE:  Yeah, I know.  Shocking, but he actually said it is what's amazing.  "As increasing numbers of devices connect to the Internet and to one another, the so-called Internet of Things promises consumers increased convenience.  The remotely operated thermostat from Google-owned NEST is a leading example.  But as home computing migrates away from the laptop, the tablet, and the smartphone, experts warn" - and we've been doing that here - "that the security features on the coming wave of automobiles, dishwashers, and alarm systems lag far behind.



"In an appearance at a Washington think-tank last month, the Director of the National Security Agency" - now, that's a different guy, that's our friend Admiral Mike Rogers, and he's also no friend of privacy - "said that it was time to consider making the home devices more defensible" - whatever that means - "but did not address the opportunities that increased numbers and even categories of connected devices provide to his surveillance agency.  However, James Clapper, the U.S. Director of National Intelligence" - and I can't believe he still has his job - "was more direct in testimony submitted to the Senate on Tuesday as part of an assessment of threats facing the United States."



Clapper said:  "In the future, intelligence services might use the Internet of Things for identification, surveillance, monitoring, location tracking, and targeting for recruitment or to gain access to networks or user credentials."  So, yes, our friend is still at it.  And I know that our listeners are interested in sequestering their IoT stuff on its own network where it can't get to the rest of their network.  And, boy, you know, with something like this glibc vulnerability, which is, I mean, a perfect example of why this is important because all that has to happen is some IoT device is identified that has glibc in it, and anyone sniffing traffic of that device going out to resolve the IP of its mothership responds with a malicious packet, and they're in and on your network.  Ugh.



A fun little non-security and also non-shivering tidbit just popped up.  This will be a presentation given tomorrow, Wednesday, so that would be the 17th, at tomorrow's Society for Optical Engineering Conference in San Francisco, reporting on a group that have developed what they call "5D Data Storage by Ultrafast Laser Writing in Glass."  Yes, folks, we are approaching the glass cube storage technology that we've been talking about and wanting for about 10 years.



So the story that covered this wrote that:  "Scientists at the University of Southampton have made a major step forward in the development of digital data storage that is capable of surviving" - and here it is - "for billions of years.  Using [what they call] nanostructured glass, scientists from the university's Optoelectronics Research Centre have developed the recording and retrieval process of" - again, they call it five-dimensional, I'll explain why in a second - "digital data by femtosecond laser writing."



Femtosecond, that's very fast.  The storage allows unprecedented properties including 360TB per disk data capacity.  And if we're talking about the disk they showed in the article, it's like a one-inch diameter disk.  It was a tiny little thing.  It's actually not glass.  Well, it's quartz.  And so it's good glass.  So what they're demonstrating is, in this small disk, they can now - so we're getting sort of down to the near molecular level, 360TB per little tiny disk, with thermal stability up to a thousand degrees Centigrade, and virtually unlimited lifetime at room temperature.  Or, if at 190 degrees C, it would only then last for 13.8 billion years.  So...



LEO:  Now, you hit it with a hammer, it's another matter entirely. 



STEVE:  Exactly.  And of course we also know that, if the reader breaks, well, that's a problem.



LEO:  Yeah. 



STEVE:  Because you've actually got to...



LEO:  But at least the medium is okay.  Yeah?  That's good, yeah.



STEVE:  Yes, isn't that cool?  I mean, we've talked about long-term archiving and what a problem...



LEO:  Well, and CDs and DVDs are not; right?



STEVE:  Right.  They are not.



LEO:  No magnetic material is.



STEVE:  Nope.



LEO:  And CDs and DVDs corrupt over time.



STEVE:  Yup, yup.  So they said this opens "a new era of eternal data archiving."



LEO:  Now, you've got to store it in a way that would be like an alien technology, or future generations could look at it and go, oh, that's probably ones and zeroes.  Maybe we can decode this.  It'd have to have something kind of obvious; right?



STEVE:  Right, right, right.



LEO:  Not a ZIP disk.



STEVE:  And so they're calling it a self-assembled nanostructure, created in infused quartz.  And the reason they used this 5D is that you have, first of all, the regular 3D that we're familiar with - length, height, and width - so its location in three-space in this crystal.  And then they're able to encode a size and orientation which is absolutely, I mean, when I say stable, we're talking incredibly stable, 13.8 billion years stable at 190 degrees and, like, forever at room temperature.  So it's very cool.  Basically, so it's laser writing a blank quartz disk, and that's 360TB per little disk, and lasts forever.  So, again, this is engineering paper, really cool technology.  It'll be some time, and maybe it will never see the light of day.  Maybe something will eclipse it.  But wow, very cool.  And absolutely archival.



Two pieces of errata.  Last week I kept saying text-to-speech, text-to-speech, text-to-speech when we were talking about the Amazon Echo.  And that's of course the reverse direction of what I meant.  Text to speech is text in, speech out.  I was talking about speech recognition and the various technologies and, you know, like does the Echo listen and send back, you know, is it sending it all back to the mothership, or is it doing local recognition and so forth.



LEO:  I should have noticed that, too.  Speech to text, obviously, yeah.



STEVE:  I just wanted, yeah, exactly.  And then a Twitterer, DangerDad is his handle, he just corrected me.  He said I was referring to 80 billion degrees of the German Stellarator.



LEO:  I noted that.



STEVE:  Yeah.  I meant million.



LEO:  I thought that was very high.



STEVE:  Oh, yeah.



LEO:  Hey, a million, a billion, when you get that hot...



STEVE:  Eh, you know.  Oh, and I also said it was sevenfold symmetry because it's got a seven in the name.  And so that tripped me up.  I knew that it was fivefold symmetry, so I also wanted to fix that because I had said sevenfold symmetry.



Some real quick updates, just because our listeners are demonstrating a real interest on the Zeo EEG headband.  Last week, when we last spoke, there had been three auctions, for 100, then 355, then 460, totaling 915 that that URT outlet seller or reseller had sold.  And I just refreshed the page.  They have now sold - they created a new auction, I think it was either - they had just created it when - I think they had just created it shortly after we started talking one week ago.  That auction has now sold 1,208 of the devices.



LEO:  They've got to be running out at some point.



STEVE:  Yeah.  They privately told me they had about 1,600.  They had finally gotten around to counting them because they figured, you know, we'd better count these.  We may actually sell these in our lifetime.  So they've got a few hundred left at this point.  And I'm really glad because what I'm seeing is the rate of sales is tapering down.  They'll still have a couple hundred probably for stragglers of the podcast who, like, oh, my god, I want one.  But what it means is that pretty much everyone who is listening to the podcast and thinks this would be cool has been able to buy, has been able to get one.  Because it is neat.  It's only $40 for the whole system.  You need an Android device.  But I just - it would have really annoyed me if they'd only had a hundred, yet that would have never satisfied, obviously, now, because it's been, like, I don't know, 2,500 or so have been sold to our listeners.  And it is slowing down.  So it looks like people who want them, have them, and that's all I could ask for.



LEO:  The power of the Security Now!.



STEVE:  And finally...



LEO:  Advertisers, listen up.  Next time pay.  Oh, sorry.



STEVE:  From Beirut, Lebanon.  Or is it Beirut?



LEO:  It's Beirut.  Beirut.



STEVE:  Beirut, Lebanon.  And this individual, thank you, asked me to withhold his name because I could never have pronounced it.  His last name took up about half the line.  And so thank you.  But he is, actually, I'm not sure he's a SpinRite user.  But he was wondering, the subject was "Files gone from hard disk."  And he wrote:  "Hello, Steve.  I have a two-year-old desktop that suddenly started causing problems.  For example, it would show the 'recover the Windows option' during boot sometimes, and sometimes it would just boot normal.  After a couple of times, the recovery option started popping up every time, and the recovery options were of no use.



"I took the hard disk off the desktop and connected to my laptop using a SATA USB extension to get the data out of it.  At this point, to my surprise, some data were present, and some others were not, even though I was sure the data was there, and I have not deleted them.  Is this even possible?  I mean, do bad sectors cause data to just disappear?  I ran a recovery software" - but it sounds like not SpinRite - "to check if the files were deleted, and it found nothing.  What would possibly have gone wrong?  How would SpinRite help in such a scenario?  Thank god I had a very recent backup and just lost three days of work."  And then he says:  "In case you're going to talk about this on SN, I would appreciate if you do not disclose my name.  Thanks a lot.  Regards."



And so this is interesting because it's a little different than what we've talked about, although I have mentioned it.  And the answer is, if there is a problem in the file system metadata, that is, the directory structure.  Any file system has files that themselves contain the data that the file system stores.  But there's always management information.  Back in the day of DOS we talked about the FAT, the File Allocation Table, which showed which clusters had been allocated.  And it was by scanning that that the system could quickly tell how much space was available remaining on the disk by how many clusters had not been allocated and had zero bits set in the FAT.  But all file systems have some means of managing the files.  And it's not the file data, so that makes it the metadata, or commonly called the "directory structure."  The symptoms absolutely sound like there was a flaky metadata sector.



And so it's very much, you know, our listeners, I'm sure, are familiar with how a file system can be viewed as a tree, a hierarchy of folders which are branches that contain folder that contain folders that contain folders.  And so this creates a branching structure.  So it might be that a sector contains pointers to other folders in the tree, or pointers to files.  And if that sector cannot be read, then the files that it points to, or the folders and everything else downstream, disappears.  And so it sounds like that this drive was sort of on the edge.  Sometimes it could get read, and then Windows would boot.  Sometimes stuff was missing.  And it was missing because the metadata that time wouldn't read.



It is a classic case of SpinRite being able to recover.  Sounds like he had a backup that was only three days old.  He didn't need it.  But for what it's worth, he could have used SpinRite, I mean, this is like exactly.  And it even sounds like it wasn't that far gone.  It wasn't the typical hard crash where everything is just gone now, and nothing but SpinRite will bring it back.  It sounds like it was just getting to the point where it wouldn't have been, you know, it was no longer reliable.  SpinRite probably could have sucked it back to life in no time.  So for what it's worth, if you find yourself in that situation, and you don't have a recent backup, and you do have a copy of SpinRite around, it'll probably fix it for you.



LEO:  You don't have a lot of experience probably with Linux or Mac files.  Well, you do with the Mac.  Do you have a favorite file system?  Is it NTSF?  Is it exFAT?  Is it HFS?  Do you have an opinion?



STEVE:  I don't.  I don't have a useful mature opinion.  One of the things that SpinRite 7...



LEO:  I'll take a childish opinion.  That's okay.



STEVE:  One of the things that SpinRite 7 will do is have knowledge of all of the different file systems.  I'm going to take SpinRite from physical data recovery to true file system recovery.  That's the plan.  And, you know, I forgot to mention last week when I talked about changing the BIOS in order to get SpinRite 6 to work, I think I scared people off.  And I forgot to mention that anybody who has SpinRite, all SpinRite owners, will get 6.1 at no charge.



So I did want to make sure everyone understood that I consider that my obligation.  Everyone says, Steve, that's very generous.  But many people I know are buying SpinRite to support me and GRC and the podcast, under the assumption that 6.1 is going to come, and there's a future there.  So I wanted to make sure people understood that.  I'm happy to do that.  I'm very excited about 6.1.  And once SQRL is behind me, that's what I'm back to.



LEO:  Good.  We're waiting with bated breath, Mr. G., as you know.  What is this little teacup you've got?  How many shots of caffeine can you get in that thing?



STEVE:  Well, I have one of these.  This was, when I was married, this was the fancy place setting.



LEO:  That's the china, yeah, yeah.



STEVE:  And [Julia] made off with all of the rest, only because this one just sort of was a stray.  And I found it years later, and I thought, well, fine, I'm going to just drink from the good china.



LEO:  A little memory.  A little memory.  I have some - being on my third wife, I have some old wedding gifts lying around.  Lisa's put most of them in the garage, though.



STEVE:  But I do like it because I draw from the tank, you know, I have the big silver tank.



LEO:  What is that, tea?  Oh, I see.  So you are using coffee, but from your Contigo.



STEVE:  Exactly.



LEO:  Yes.



STEVE:  Exactly.  Because the whatever it was, the Nirvana Thermal Thermos is still in shipment from China.



LEO:  The Temperfect.



STEVE:  The Temperfect.  The Temp Imperfect.



LEO:  Good lord.  So I do, sometime I want to - and I'm sure you'll do this work.  It is possible to make a UEFI bootable key, like a USB key.  Because I get them all the time.  And I'm really curious what would be involved in that.  I guess you'd have two partitions, one that would have a certificate of some kind in there to - I'm not sure what would be involved for a secure boot.



STEVE:  I have not gone there yet.  But...



LEO:  Because I'd like to be able to make, you know, some secure boot compatible keys.  I don't want to have to turn off secure boot.



STEVE:  You know, I'm trying to think of the name.  I think it's called REUFI, R-E-U-F-I.  I have something on my Mac that allows me to dual boot, and it's the way I was able to verify that SpinRite could run on the Mac only if it fixed the keyboard.  So I actually had - I have a version of SpinRite that does run on the Mac because Mac uses a USB-like keyboard.  But I used, I think it was called REUFI.



LEO:  I'm sure it's not.  That would be "rufi," and probably not the best acronym ever. 



STEVE:  Could it be REDOS, R-E-D-O-S?  Check that.  Is your machine back up?



LEO:  I don't know.  Yeah, got my machine working.  By the way, unplugging a variety of USB devices, sometimes a device hanging off your USB can hang up something.  I don't see REUFI, rufi.



STEVE:  I don't have my [crosstalk].



LEO:  Somebody called the radio show with a great new boot manager, which I of course have immediately forgotten.  Was that from the caller, REUFI?  Maybe I need a dash.  What was the name of the boot manager he called about?  But anyway, it sounded like a much better boot manager, and it did handle UEFI.  That secure boot's a challenge.



STEVE:  Yes, it is.  Yup.



LEO:  Let me see if I can find it here.  Rufus.



STEVE:  Rufus, that's it.



LEO:  Rufus, hello, Rufus.



STEVE:  Yes.  It's very capable.  It may do everything you - I haven't looked at it for a while, but it just...



LEO:  Create bootable drives the easy way.  Oh, this looks good.



STEVE:  Yeah, it made short order of my need to dual boot my Mac, so that I was able to have DOS boot and run SpinRite in one partition, and then the Mac in the other.



LEO:  And they do, on the front page, they have the example of making a Tails bootable USB key, which is the primary use I'd have for this.  Okay.  Don't know if it handles UEFI, but Rufus. Rufus.  Let us take - oh, and there's rEFIt, refit.sourceforge.net.



STEVE:  Ooh, rEFIt, that was the one.



LEO:  REFIt.



STEVE:  Yes, that's the one.  Although that may be different.  Oh, and that's an EFI boot menu, it says.



LEO:  EFI boot menu.  There you go.  I think this is the one.  This is the one, yeah, rEFIt kind of idea.  



STEVE:  Yeah.  Much better than Rufus.



LEO:  Let's take a break.  Much better than Rufus.  No, Rufus is fine, too.  But better than rufi, rEFIt.  Hey, there he is, Steverino.  Hey ho, Steverino.



STEVE:  So my last security topic for the week is another side channel attack which is a little spooky just because these guys understand the fun of some drama, and they set up a presentation which is just wonderful.  The show notes have the two pictures showing their setup.  The first picture is on one side of a wall, where they've got - they just sort of jigged this thing together.  So they've got a laboratory two-channel power supply that is running an SDR, a software-defined radio, providing power for that.  And that's hooked to sort of an antenna device.  And the output of the software-defined radio then goes to a laptop, which is doing frequency spectral analysis of the information it's receiving.  On the other side of the wall sits a laptop that looks like a Lenovo with some version of Windows, just sort of sitting there, doing nothing.  What these guys have achieved is, in a matter of minutes, extracting the Diffie-Hellman elliptic curve keys from that laptop.



LEO:  No.  No.  



STEVE:  Yeah.



LEO:  Say it ain't so.



STEVE:  Yeah.  So they say in their write-up:  "We show that the secret decryption keys can be extracted from PCs running the ECDH" - that's the Elliptic Curve Diffie-Hellman - "encryption algorithm using the electromagnetic emanations generated during the decryption process.  By measuring the target's electromagnetic emanations, the attack extracts the secret decryption key within seconds from a target located in an adjacent room through a wall."  Then they say, "ECDH (Elliptic Curve Diffie-Hellman) is a standard public key encryption algorithm used in OpenPGP."  And they give the RFC and the NIST specs.  They write:  "We attacked the ECDH implementation of GnuPG's libgcrypt 1.6.3, the latest version at the time the paper was written.  The attack asks for decryption of a single carefully chosen ciphertext, iterated a few dozen times."



I should mention that the few dozen iterations is more for the sake of improving the signal-to-noise ratio than, like, they needed to actually see it multiple, multiple times.  And so my point is that that's the kind of thing that an evolution of this attack could reduce or minimize, if they really, I mean, probably if they just spent a lot more time.  Instead, it was just easier for them to iterate the same thing in order to get multiple samples of the machine doing the decryption, and then sort of sum them together or average them together in order to separate more of the signal from the noise.  And then they use time frequency signal analysis techniques to extract from the electromagnetic leakage emitted by the target laptop during the execution of the ECDH decryption.



So, okay.  So what this comes down to, and we've talked about this in other contexts before, is that the particular implementation, this is not a problem with the laptop.  They're all going to leak unless they're, like, TEMPEST hardened.  Those are not ones that we have.  They're going to leak.  And it's not a problem with the math of Elliptic Curve Diffie-Hellman, which is good.  It's a problem with the implementation.  And it's one of the reasons that, for example, for SQRL, I chose Dan Bernstein's library because Dan is a stickler.  If he's anything, he's a stickler for detail.  And the crypto that I chose for SQRL has no execution paths based on secret material.  That's the key.



The mistake is it's easier to write crypto where the key affects the instruction sequence that the computer follows.  If you do that, this is what happens because the instruction sequence will result in subtle variations of emitted radiation, or power consumption, or even maybe some inaudible sound.  And that's the problem is that something that is supposed to be secret has that, and that's why we call it a side channel.  It's not an attack on the encryption channel.  It's an attack on a side effect of decrypting the information, a side channel attack.



And so, in their own little Q&A, I just grabbed two out of more, Q1 and Q4.  The first question was, "How vulnerable are GnuPG and other applications that use libgcrypt now?"  So they say:  "We've disclosed our attack to the GnuPG developers and worked with the developers to implement countermeasures.  GnuPG's libgcrypt 1.6.5, containing these countermeasures and resistant to the key-extraction attack described here, was released concurrently with the public posting of these results," although that's recent.  So the vulnerable one was 1.6.3; 1.6.5 is current.  So the fix exists.  The patches exist.  If this is a concern, you'll want to update GnuPG as soon as they publish code that has this fixed.



And then they wrote specifically:  "Libgcrypt 1.6.5 completely changed their implementation of the elliptic point curve multiplication, using the double-and-always-add algorithm.  This is slower than the previous implementation, but more resistant to side channel attacks since the sequence of high-level arithmetic operations does not depend on the secret key."  And that's what you need.



This is going to end up becoming clearly standard practice moving forward, although it's obviously not yet going to be standard practice for one of the ways we evaluate the security of ciphers is not just bit banging and how wide is the block size and how many iterations does it go through, and if we reduce the iteration strength, is there a lower iteration, a weakness that we can find, blah blah blah blah.  It's going to end up as important is going to be is this thing, algorithm, is the algorithm used to implement the math absolutely secret key neutral?  Meaning that no secret bits are involved in changing what the processor does.  And as an example, it may slow it down.  Everyone's always wanting this stuff to be as fast as possible.  But that comes at a cost of some leakage.



Now, there may certainly be scenarios where it's not a problem.  If you're using some appliance in a sub at the bottom of the ocean, and you're around people you trust, then there's nowhere for it to leak to.  But there are certainly instances where you'd like to know that you've got a side channel attack-proof solution.  And then, oh, I love this one.  Q4 was, "What if I can't get physically close enough to the target computer?"



So they respond:  "For RSA and ElGamal" - those are two previous side channel attacks that they had demonstrated - "though not yet for ECDH, similar attacks have been demonstrated from large distances."  And get this.  One was what they called - and we talked about this at the time - "laptop chassis potential, measured from the far end of virtually any shielded cable connected to the laptop - such as an Ethernet, a USB, an HDMI, or a VGA - can be used for key extraction as we demonstrated in a paper presented at CHES '14."



So two years ago, that's when we talked about this.  If you had any shielded wire hooked to a machine, the shield carried this noise.  There was just no way for it not to.  And so no matter how long the cable was, hooking to the shield at the other end, they were able to extract the key from RSA and ElGamal, not yet from ECDH.



And then they also presented at Crypto '14:  "Using acoustic emanations measured via a microphone," they write, "can also be used to extract keys from a range of several meters, as we showed in a paper presented at Crypto '14."  So it is - I think it's clear that, from what we're seeing, this is no longer just theoretical.  We've talked about similar attacks where software running in the same virtual machine, like sharing a host with another virtual machine can actually feel what the other virtual machine is doing and extract keys just by being co-resident in the same hardware, even if there's no actual contact between the two.  I think moving forward we're going to end up with this whole idea of this being secret key neutral as another important requirement and attribute of encryption technology.  And that's our podcast.



LEO:  Nice.  Your timing is impeccable, Mr. G.  I'm sorry about your site.  Is it still down?



STEVE:  Oh, yeah.  Oh, yeah.  I'll be dealing with it for the next we don't know how long.



LEO:  Well, I mean, I don't know to what extent you want to pursue this.  We could talk to - I'll send a note to John Graham-Cumming over at, as I mentioned, at CloudFlare.  You know, SquareSpace, you could set up a temporary SquareSpace site where you could do eCommerce, if you wanted to continue to sell SpinRite.



STEVE:  Understand that all of this takes huge amounts of cycles.  I mean, it's just me.



LEO:  Yeah, I know.  You know what?



STEVE:  And, I mean...



LEO:  The thing is, they'll move on, I presume.  And they usually do.  They'll move on.  The question is if they're aiming at you intentionally, or if it's just you happen to be a convenient target, or what's going on?



STEVE:  And that's, see, it's so tempting to try to gain some...



LEO:  You can't.



STEVE:  ...insight.  And when the attacks lasted an hour, an hour and a half, 30 minutes, and they came and went, I thought, okay, you know, it's a Saturday afternoon.  Somebody's testing an attack tool.



LEO:  Or a kid was home from school, and he - yeah.



STEVE:  Yeah.  And then on I guess it was the next day, on the 14th, yeah, on Valentine's Day, you know, 13Gb of attack.  So, and the other attacks were large also.  I just wasn't seeing them.  So anyway, I'll be working with Level 3, and I'll let my Twitter followers know what I know.  And I hope that I am allowed to be back on the Internet because I like to be on the Internet.



LEO:  Yeah.  It's a new form of vandalism, kiddies.  And I do mean kiddies.  I can't really send you to his site, but normally he's at GRC.com.  That's where you'll find SpinRite and all that great stuff when it comes back.  It'll be back in a couple of days, I'm sure.  You can also follow Steve, and you should now, on Twitter, @SGgrc, because he'll let you know when the site is back and whatever he learns.  And of course he's always tweeting and responding to questions.  Might have questions next week, if the site comes back, GRC.com/feedback.  If not, well, I'm sure Steve has plenty of other things he could talk about.  And let's see, what else?  We do have the podcast.  You can at least get that.  And you know what, if you email us the show notes, we'll make sure that that's on the show note page on TWiT.tv/sn.



STEVE:  I'll do that.  Elaine has tweeted and said that she would get the audio from you rather than me recompressing it for her as I normally do.



LEO:  Yeah, okay.



STEVE:  So she's aware of what's going on, too.



LEO:  It'll go up in a little bit.  TWiT.tv/sn.  Of course you can subscribe everywhere.  Thing is, you can't kill this podcast because it's multi-homed.  You'd have to have more than 13GB, gigabits, gigabytes.  You'd have to have more than that because it's everywhere.



STEVE:  Although there is no podcast without SpinRite, so we do need SpinRite.



LEO:  Yeah, yeah.  We'll have to figure something out on that one.  GRC.com will be back, I promise you, one way or t'other.  I'm sure you're going to be hearing from some fans who want to help out.  Thanks, Steve.  We'll see you next week on Security Now!. 



STEVE:  Thanks, Leo.  



LEO:  Bye-bye.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#548

DATE:		February 23, 2016

TITLE:		DDoS Attack Mitigation

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-548.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Steve and Leo discuss Apple's response to the FBI's court order, the hack of the Linux Mint distribution, more Comodo bad news, a major cryptoware ransom paid, and follow-ups on the glibc and Apple Error 53 stories.  Then Steve details everything that has transpired since last week's "GRC Is Down" episode.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is back.  So is GRC.com.  He's going to talk about DDoS mitigation.  Also, Steve's take on the Department of Justice versus Apple.  You'll be interested to hear what he has to say about it and a whole lot more.  All the security news coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 548, recorded Tuesday, February 23rd, 2016:  DDoS Attack Mitigation.



It's time for Security Now!, the show where we talk about your security online.  Boy, there has never been a more important time to be talking about security than right now.  And fortunately we - you know what's great is we've been doing this long enough now - Steve Gibson is here - for 10 years, 11 almost.  We've been doing it long enough now that we've set kind of a basis of understanding for the conversations that we have now.



STEVE GIBSON:  Right.



LEO:  So if you haven't listened since Episode 1, before you listen to this episode - no.  But it's a good idea, go back, because all of these are still timely and topical, and we cover a lot of fundamental technology like encryption.



STEVE:  Right.  Well, for example, we'll be talking about some details of the way iOS9 works, or iOS sort of generically, which is covered in detail, I think it was either a two- or three-podcast series we did on iOS security, when Apple finally published a very comprehensive whitepaper with the release of iOS7 [SN-446, SN-447, SN-448].  And so we walked through all of that, which is why I remembered some things that are relevant to today's discussion about Apple versus the FBI and the whole question about what is it that the FBI wants, how much of this is Pandora's Box being opened and so forth.



And our position is, or my position, at least, is I'm no one to speak on policy, but there are specifics of the way the technology works.  And one of the things that just - I cringe when I hear people loosely using ill-defined terms like "backdoor."  That's the favorite term.  But there's no good definition for backdoor.  And I would argue that, in this particular case, what we're talking about is some changes to sort of soften the front door that already exists, that - well, anyway, I'm getting ahead of myself.  But we've got a great podcast.  GRC is back on the air.



LEO:  Oh, yes, I noticed that.



STEVE:  And so today's podcast is titled DDoS Attack Mitigation.  I want to talk, I want to sort of recap the last week, since last week's podcast, which was "GRC Is Down," and explain why I've done nothing.  That is, it's not some magic that I've pulled off.  It's nothing that I've done.  But there are serious reasons why I have chosen to do nothing because choosing to do something would dramatically impact some aspects of GRC that I'm reluctant to do, I mean, eliminating services and giving others control of my certificates.  And when I hear from the industry, "Oh, everybody does it," it's like, well, I don't care.  I'm not doing it.



So anyway, I think a really interesting back half of the podcast to explain what was going on, how Level 3 has just been amazing through this, and they really stepped up and helped a lot.  But I think our listeners are going to find it very interesting to sort of go inside DDoS attacks today and what it means to deal with them because it severely cramps what we would be able to do.  So that's great.



And we've got a bunch of news of the week, including the Apple versus the FBI, the hack of the Linux Mint distro, more bad news from Comodo, the very expensive ransom paid by the Hollywood Presbyterian Medical Center.  Dan Kaminsky of DNS spoofing fame has weighed in on the glibc flaw since it is DNS related.  And of course some follow-up on the Error 53.



So I think a great podcast for people.  And I really think people are going to find the DDoS Attack Mitigation conversation interesting.  And, boy, did I learn a lot about the industry and this podcast in the last week, which I will tell everyone about.



LEO:  Ah.  Can't wait to hear it.



STEVE:  It was phenomenal the way the industry and our listeners stepped up.  People were buying redundant copies of SpinRite to support me through this.



LEO:  Oh, isn't that nice?



STEVE:  I mean, I'm humbled by it.  It was just phenomenal.  And turns out all of Level 3 engineering and security listen to the podcast.  So I didn't need to explain who I was.  They were like, wow, you're on the phone?



LEO:  We've heard of you.



STEVE:  And everybody in the industry who's in the mitigation business offered me their services for free.



LEO:  Of course they did.  Of course they did.



STEVE:  And they said, Steve, we'll waive our fees.  We'd like you to, you know, if you need our help, you've got it.  I just - I was overwhelmed by the response.  And so anyway, we'll talk about more of that in the second half.



LEO:  As they should, and as you should...



STEVE:  I was just humbled.



LEO:  Yeah.  It's a nice feeling, isn't it, when you call for support - I've had this happen a few times - and they go, "You use our product?  Oh, what can I do?"  That's always a nice feeling.



STEVE:  So our Picture of the Week.



LEO:  Oh, I love this, yeah.



STEVE:  I tweeted this.  It's been around the 'Net.  It's of interest if someone's been living under a rock for the last week or isn't a member of Twitter or somehow hasn't seen this, a great cartoon titled "Pandora's iPhone" that shows a picture of Tim Cook in the lead, reaching for the backdoor's knob.  Behind him stands the FBI.  Behind him even bigger is hackers.  Behind them is a crazy guy dressed up as a general, labeled "Repressive Regimes," and then a group of others labeled "Etc."  So the point being, are we opening Pandora's iPhone by having Tim Cook unlock the backdoor?



So what the court order has asked Apple to do is to modify iOS, create a modified iOS or a shim or something, essentially altering the way the current software works.  As we all know, you have, typically, a 10-mistake lockout on guessing the unlock code for the iPhone.  And if you can't get it within that allotted number of guesses, what will happen is the phone will then proactively wipe out the symmetric encryption key which drives the cipher between storage and the CPU.  I remember hearing Jeff last week sort of puzzled about, wait a minute, it decrypts your phone every time you unlock it and then re- it's like, well, no.



As we know, listeners to the podcast probably understand how current whole-drive encryption works.  And that is that the drive is always encrypted, and it is decrypted on the fly, under the influence of a symmetric key, as data is read from it, and then reencrypted as data is read back.  So with the simple act of destroying, just zeroing one small bit of memory, the contents can never be recovered.  And as far as we know, that symmetric key is generated by the phone and at no point ever leaves the phone.  There's no reason not to believe that's the case.  So the idea is we absolutely have to prevent that from happening.



So the court has ordered Apple to assist the FBI by disabling the 10 wrong guesses lockout, which is presumably enforced by software, not hardware, thus subject to being changed.  There's also, in addition to an 80-millisecond, hardware-enforced, delay in trying a guess, there is additional software-induced, per-attempt delays to slow down guessing.  So they want that removed, also.  Again, it's software induced, so that could be removed.



And then, finally, they want an electronic avenue for submitting their guesses, that is, we're talking about brute-forcing this passcode.  So rather than having some poor intern sitting there, you know, 000000, 000001, 000 and so on, they want to be able to just hook it up to a brute-forced generator and have it run at the maximum speed it can, which is 80 milliseconds per guess, without any downside, without the 10-mistake lockout and with no additional delay.  So of course Apple is saying, no, we're going to do everything we can to fight that.



So I don't take any position in this.  I mean, the reason that this has all been, I mean, we have been talking for the last few months that this is going to be the year where this begins to happen.  And everyone who's been following the podcast for long will remember that I suspended my work on CryptoLink because I could read the handwriting on the walls.  It's like, I didn't want to invest all of my time to create a super great commercial product to have it be outlawed because there's no way I'm going to produce a VPN that has a backdoor or a weak front door or any kind of a door.  So this has been in the air for a while.



What we do know, though, is - and there is a lot of misinformation on the technical side.  And as I said at the top of the podcast, one of the problems is people who don't understand the technology are loosely using ill-defined terms.  I mean, "backdoor" is sort of a catchall, which means whatever the person saying it wants to mean.  So we have a problem with inexact terminology being used by non-technical people such as politics and technology and the collision thereof.



Here's what we know about the way the iPhone and iOS devices work today.  And I verified in the September 2015, so only a few months back, iOS9 security whitepaper that it hadn't changed, and it's the same as what we discussed back with iOS7.  And that is - and I remember at the time remarking how surprised I was, but pleased, about Apple's super tight architecture.  And listeners will remember that I came away feeling very bullish about the incredible focus that Apple had clearly put into securing the iPhone and iOS devices for its users.  The iPhone or iOS device, in this case an iPhone, will periodically, even when locked - and that's a misconception that I've seen on the Internet.  It's like, well, no, it won't update unless it's unlocked.  No, it will update locked.  If the phone is locked and on WiFi, it will periodically check for updates.



The iPhone sends its unique device ID and a randomly generated nonce, a number used once, to Apple.  Apple, if it wants to send the iPhone something it will accept, must take the device's unique ID and the nonce, bundle that with the update package, and sign it with Apple's super secret private key, and send it back to the phone.  The phone verifies that the signature is correct because it's got Apple's matching public key burned into its boot ROM.  So it verifies that the signature is correct, and then verifies that the nonce that it has received in this package is the same one that it just sent, and that the unique device ID matches.



So back when we discussed this several years ago, I remember saying, wow, that means that every single update is customized.  And Apple did this for a reason, and we talked about it then.  We would want to prevent an older version of iOS that was for some other device, not this particular one, from being essentially cross-installed, thus allowing a downgrade attack to recreate flaws that were now well known in the earlier versions, but had been fixed in later versions.  So Apple took on the burden of not being able to mass distribute any of their iOS updates.  Every single one is generated, custom, in answer to a request from the device, signed with Apple's private key, in order for the device to accept it.



So this puts to rest that the question technically - not politically, not policy-wise, but technically - can Apple, if they choose to, respond uniquely to this singular request and provide the FBI, either in their facility or remotely, with a piece of software that answers the court's demand, that is absolutely not reusable ever again, not even ever again on the same device because the nonce protects reuse.  So one time, answering this phone's request, generating software that can only be used that time on that device.  And that's the way the system is now.



So I understand that there are huge broader questions that I completely get, like the whole slippery slope argument, that if Apple does it for this, then we already know, for example, that the DA back on the East Coast has said he has 175 other phones waiting to be opened.  So Apple used to do this, and we talked about it, how there was a multi-month backlog in phones that Apple was working through to crack the code and unlock the phone.  Apple decided they didn't want that business.



So I just wanted to put to rest the technology is sound.  They beautifully designed this.  And what it does give them is, if they choose to, the ability to open this single phone in a way that, even if they gave the software to the FBI - and one report I read said that the FBI was going to give Apple the phone so that Apple could do this to it, and then the FBI would take it away and do this brute-forcing for however long it took.  So it's not even the case that Apple would, like, lose control of that update.  They're being asked to essentially weaken the front door, which is normally locked tightly enough that no one can get in without the phone destroying its contents by wiping that symmetric key.



And where we go from there, nobody knows.  It's a fascinating issue of our time, and we're in no position to dictate policy.  But that's the way the technology works.  It does not create - there's all kinds of analogies now floating around.  Being asked to cut the ribbon that protects the phone, or being asked to give the FBI a ribbon-cutter that allows them to cut the ribbons on all other phones, that's not at issue.  Apple must sign with their private key a per-instance and per-device software update for the device to accept it.



LEO:  And we should point out that it doesn't require precedent for all these other district attorneys with locked attorneys to go and request the same thing of Apple.  They all can do the same.



STEVE:  Right.



LEO:  I mean, they're watching with interest.  It would make it easier if they had a federal precedent.  But there's no reason for them not to seek a decision, as well.



STEVE:  Oh, I completely agree.  I mean, this is a big issue.  And NPR did a piece interviewing Senator Angus King, who is an independent, very rational on this.  And his point is that this should not be an issue where the court forces Apple's conduct.  This properly should be Congress looking at this and then deciding to set the law so that from this point forward this is the law of the land.  And I agree.  I think that, I mean, this is really important.  We don't want some random judge to say, oh, yeah, my nephew is with the FBI, and so I'm going to sign the order and good luck.



LEO:  Right.  Do you want me to play the clip from Senator King?



STEVE:  I don't think...



LEO:  All right.



STEVE:  Yeah, I don't think we need to.  For anyone who's interested, the link is in the show notes.  And I did create a bit.ly link.  It's very good.  It's 4.5 minutes long.  I do commend it to our listeners.  It's bit.ly/sn-548-2, again, sn-548-2.  And it's -2 because there's also a -1, which is sort of the dark side.  That's a similar NPR interview of Manhattan's District Attorney Cyrus Vance, Jr., who of course explains that he's got - he has some numbers.  He has something called a "cyber lab."  And of the 500-some phones they have, 175 they can't get into.  And he very much wants precedence to get set here so that they can send a big carton of phones to Apple to have them all opened up.



LEO:  I support Apple, well, we'll see what Apple's - we, by the way, don't know what Apple's response is.  I'm glad Tim Cook wrote the open letter at Apple.com because that has raised this wonderful conversation.  We don't know if Apple's going to say no.  Apple may well say, yeah, fine.  They have a couple of days to respond left.  I think the 26th they have to respond.



STEVE:  Yeah, they got a three-day extension.



LEO:  Yeah.  I don't, you know, I think what - in my opinion, Apple should pursue this so as to nail it down, to get the court decision and, in fact, if they have to go to the Supreme Court, get the court decision.  But I do feel like one of the reasons that this is a good case is there's not a huge amount of urgency.  The two shooters are dead.  We should point out the law does not protect the privacy of dead people.  Furthermore, that phone is owned by the government, by San Bernardino County.



So really this is a nice test case because a lot of the confusing issues are out of it.  It's merely that, should Apple, if they have the ability, should they unlock this phone, and would that be an undue burden for the FBI to ask them to do that.  That's what the judge is going to rule on is, is this too burdensome.  And so we should get that.  But I feel like Apple should do it.  I mean, given what you've just said, that this is just a one-time-only deal, why shouldn't Apple do it?  Once they get the decision.



STEVE:  Yeah, I mean, they clearly don't want to.  And then, of course...



LEO:  They don't want, I understand, they don't want to get in the business of doing this.



STEVE:  Well, right.  Although somebody, I think it was during This Week in Google last week, I think it may have been Jeff, someone I think brought up the very good point that, if Apple sells iPhones to China, and Apple is selling iPhones into China, and wants to, that the phones being sold there must abide by Chinese law.  And there's no doubt, I think, that the Chinese government would want the same sort of access into the phones of Chinese citizens that our own law enforcement is asking for, in apparent bulk, into the phones of U.S. citizens.  So exactly as you said, Leo...



LEO:  Again, a negative outcome.  But should we decide on how we prosecute criminals based on what another nation might do?  I mean, yes, it's a negative outcome, but Apple's chosen to do business in China.  That means they have to adhere to the law of China, period.  It's not an option.  Same with Google and everybody else.  In fact, that's one reason Google pulled out.



STEVE:  One way to look at this is that Apple wasn't quite clever enough with the security.  I'm impressed that the FBI figured out what to ask for, that sort of softening of the front door.



LEO:  But we should point out that you can encrypt and all that stuff.  But if it's a four-digit passcode to unlock it, it's a weak password.



STEVE:  Right.



LEO:  It's nice that they have the delay in there.  It's nice that they have the 10-try wipe, although that's not on by default.  You have to turn that on.  Four-digit passcode is weak.  That's why Apple made it six.  Is six weak?  Yes.



STEVE:  Yup.  Yup.



LEO:  It's not as good as a password.



STEVE:  In fact, I have obviously been a little preoccupied in the last week, but I was thinking it would be fun to enhance the Password Haystacks page with an 80-millisecond per guess field, so that it would show you...



LEO:  How long it takes, yeah.



STEVE:  ...how long your iOS password would take the FBI to crack it at maximum cracking speed.



LEO:  If Apple turns off all the other...



STEVE:  If, yeah, exactly.



LEO:  The five-second delay and all that.



STEVE:  If Apple were to make it possible.  I mean, I imagine that, in retrospect, Apple is now sorry that they can do this.



LEO:  Right.  This is what I brought up on MacBreak Weekly.  I bet you they're working real hard right now to make it so that they can't be asked to do this again.  And I am sure future versions of the iOS will prevent this whole issue from coming up because they'll - they can...



STEVE:  Unless Congress decides that...



LEO:  They have to put a backdoor in.



STEVE:  ...the contents of phones are like the contents of homes, where a search warrant permits access to the contents.



LEO:  Right.



STEVE:  And as I have mentioned on previous...



LEO:  And that's, by the way, that's the conversation we need to have.



STEVE:  Yes.



LEO:  All of this is really secondary to the larger conversation, which is how the phone should be protected.



STEVE:  Right.



LEO:  And this is something, you know, same thing with email.  Your mail at work is protected.  Your physical mail is protected.  Your boss can't open your letters.  But the boss can open your email.  So the boss can't listen in on phone calls.  If it's personal, they're supposed to hang up.  But they can read everything you do on the computer.  So the law has not caught up with the digital world.  And the rules for the digital world are currently different than they are for the physical world.  And that's really what needs to be happening here in the long run is Congress needs to step forward and say, okay, here's what the rules are for digital.  And are they the same?



STEVE:  And let's also remember that the software industry as a whole is living in some amazing bubble because the license agreements that we click on say we're not responsible if the wheels fall off, you are.  And, by the way, this is not really yours, we're just giving you a license to it.  But at the same time, good luck.  If the wheels fall off of a car, then the manufacturer is responsible.  Not the software industry.  We've been in this bizarre land where it's just - and I don't know how it's persisted as long as it has.  But it's like, eh, if it works, great.  If it gets infected with malware, well, we're sorry about that, hope you can recover your losses.



LEO:  Good luck.



STEVE:  Okay.  Amazing.



LEO:  Yeah.  Really, it's a fascinating subject.  And I think now that we've had a week to think about it, I think we've kind of boiled it down a little bit better than the initial reaction to it.  And I hope people are listening and paying attention.



STEVE:  Well, you and I are powerless to affect the outcome.  All I wanted to clarify was that, from a technology standpoint, Apple could do this one.  But I fully understand that, if they can do one, then Cyrus has got 175 more.  He's just rubbing his hands together, can't wait to send them off to Cupertino.



LEO:  But I should point out he doesn't have to wait.  He can ask right now.  I don't know why he hasn't.



STEVE:  There is another piece.  Apple has about a dozen orders which have not generated this much press.  They've already, from last year, there's about 12 other court orders that Apple has been fighting that are pending.



LEO:  Right.



STEVE:  But because it wasn't San Bernardino and Farook and the business phone, and it wasn't a hot button, it was just some random who knows what that didn't really rise to the level.  This is the case - some people are arguing, in fact, from a political standpoint, that the FBI chose this.  Remember that this phone hadn't been backed up in six weeks.  This was Farook's business phone.  His personal phone was physically destroyed and is absolutely uncrackable.  I mean, it's gone.  The contents are destroyed.



I'm distracted because GRC is now under denial of service attack, so...



LEO:  Oh, of course, they waited till the show, yeah.  It probably will be a little one.



STEVE:  Well, we'll talk about that.  But anyway, so...



LEO:  No, there's little copycat attacks.  We had one that was a little copycat attack.  It was very easy to remediate.



STEVE:  So, yeah, I am distracted.



LEO:  Sorry.  You want to take a break?



STEVE:  It's all right.



LEO:  You can take a break.  I can do an ad or something.



STEVE:  There's a big red band that is now moving across the screen.  So what was I saying?  Farook...



LEO:  Well, I think that - go ahead.



STEVE:  So there's been an argument that the FBI chose this for its powerful political impact, in order to use it as a wedge issue for Apple; whereas the other 10 or 12 pending court orders that they have just didn't generate any attention.



LEO:  And I really, really, really like the kind of the bottom line that over now five shows we've come up with, which is that what has to happen is the courts and probably Congress need to decide how do you treat a smartphone.  Given that our lives are on there, our health information, our pictures, everything we care about we are now storing on a notably insecure device that's fully connected to the Internet at all times, can be lost, has a camera, a microphone on it, and a GPS, how do you treat this?  Is this special?  Is this different than a safe in my basement?  Because we know what the law is about a safe in my basement.  How is this protected?  Should this have higher protection than a locked safe in my basement?  Because currently it does, technologically.



STEVE:  Right.  And the problem is the technology provides absolute protection.



LEO:  Right, right.



STEVE:  And that we know, that math is perfect.  We can create uncrackable cryptography.  So the question is, I mean, so this creates a new problem that we have never had before because, when the authorities have a search warrant for someone's home, if they don't willfully open the front door, well, we've all seen "CSI," you know, they take a battering ram and blast the door open in order to enter.  So the crypto creates the opportunity for perfect protection.  We're going to have to have a law that determines, is the fact that we can create perfect encryption, does that mean that Apple and other U.S. manufacturers can offer perfect encryption in the United States without there being the provision for law enforcement to have access?



LEO:  Good.



STEVE:  Okay.  So for anybody who downloaded last Saturday, February 20th, a copy of the Mint distribution of Linux, hopefully you already know that the ISOs were replaced with a backdoored version of the operating system.  A hacker who goes by the name of Peace was interviewed over an encrypted chat by Zack Whittaker of ZDNet.  Zack writes ZDNet's Zero Day column.  This hacker by the name of Peace told Zack that a few hundred Linux Mint installs were now under their control.  So there were more than a thousand downloads that day.



And what happened was the ISO was modified so that a backdoor known as Tsunami was present in that system.  And so if you updated or installed the Mint distro from this compromised version, the Tsunami malware would connect to a specified IRC server and await commands.  So it could be used for DDoSing, for downloading other programs into that system for subsequent execution, and can even remove itself to remove traces that it had been there.



And what I got a kick out of was that the hacker also said that they "used their access to the site to change the legitimate checksum - used to verify the integrity of a file - on the download page with the new checksum of the backdoored version."  Which I remember when GRC decided to grab the TrueCrypt archive, and I got the Defuse.ca site to host the hashes for the downloads because it never made any sense to me that, on a page where you were downloading something, that page would say here is the MD5 or the SHA-1 hash for the download because, if the site was compromised, well, any hacker worth their salt would change the supposedly correct hashes to match the malware.  Which these guys did.



So it certainly makes sense for the hashes to be located in some different location, some different website, so they can't both be compromised at the same time.  Anyway, the site was brought down.  The problems were found.  The distribution has been cleaned up.  There was something about them still having potential control of the admin control panel for the site in case they wanted to, like, get up to more mischief in the future.



LEO:  After this happened - I use Linux Mint, and after this happened...



STEVE:  Yeah, and I've heard you talk about it.



LEO:  And then somebody else posted an article which was listed on Hacker News saying here's why I don't use Linux Mint for any reason, and was a fairly compelling argument that Clem, the lead guy, is really not paying too much attention to security in general.  And so I've abandoned Linux Mint, which is a shame because it is easily the most Windows-like of Linux versions, very straightforward, comes with a lot of not-free software, which makes it easy for people.  And I've rolled back, not even to Ubuntu, but all the way back to the original Debian distribution, which is not as easy to install, not as beautiful for people, although it can be made to be.  But it's far more secure, and I'm much happier with it, frankly.



STEVE:  And in fact the last audit says that there are about six million instances of Linux Mint out in the world.



LEO:  Yes, it's very popular.  It's the number one, you know, because it's based on Ubuntu, which by itself is very nice and easy to use.  But they've added things like - you'll love this.  They've added Flash and Adobe PDF Reader.  They've added stuff to make it easier, codecs and things.  But...



STEVE:  Yeah.



LEO:  They also - the real issue is a more technical issue which has to do with upstreaming and how they've made it hard to update a lot of software.  And that's a security problem because, if that software should have a security flaw, most cases with a good Linux you can update it.  These, some of the updates, or many of the updates are blocked because they've modified software.  And so the fact that you're not getting downstream updates is not a good idea.



So all in all I was convinced.  And there's lots of good distributions.  In fact, there's some very good secure Linux distributions, a new one that just came out which sandboxes all the apps.  It's in beta right now.  I just read about it, and I'm very intrigued.  I've downloaded the beta ISO, and it's quite solid and nice.  You know, someday we'll get you on Linux.



STEVE:  Probably.



LEO:  Or you like FreeBSD, too.



STEVE:  I do.



LEO:  Which is built to be secure.



STEVE:  Yup.  So Comodo is back in the doghouse.  Tavis Ormandy, our...



LEO:  Again?



STEVE:  Yes, again, with another bloodcurdling problem.  Tavis continues to look at it, and he posted again in the Google Security Research blog where he does his work.  He said when you install Comodo Internet Security - which, you know, that's their package that they're pushing, and that's the thing that installs the Chromodo browser that we talked about before which completely shuts down all, basically, browser security guarantees.



So now, Tavis writes, when you install Comodo Internet Security in the default configuration, an application called "GeekBuddy" is also installed and added to - and this won't make sense to non-Windows people, but HKLM\System\CurrentControlSet\Services, meaning that GeekBuddy is installed as a background hidden service.  I mean, all services are kind of hidden.  They just run.  They start up when you boot, and they're always there running behind the scenes.  But GeekBuddy is a tech support application that, as Tavis writes, "uses a number of questionable and shady tactics to encourage users to pay for online tech support."



And then in the Bug Report he gives a link to the GeekBuddy page from Comodo.  And I went over it because I was curious; and it's like, oh, you've got to be kidding me.  First of all, $200 a year they're charging for GeekBuddy access.  So even without subscribing, this thing installs in your system and runs as a service.  But I didn't get to the best part.  He says:  "As has been noted by numerous people over the last few years, GeekBuddy also installs a VNC server and enables it by default."  So VNC, of course, is a popular free remote desktop facility to allow remote access to your machine.  So installing this gets you ready for GeekBuddy and sets it up, even if you have no intention, don't even know it's there, and have no intention of paying Comodo $200 a year for GeekBuddy support.



LEO:  What?  My god.  The thing is, you can check a box that says don't install GeekBuddy, but I don't think you can check a box that says don't install VNC.



STEVE:  So, again, just - the only takeaway is that everybody within reach of this podcast should stay as far away from Comodo as they possibly can because, I mean, I don't know where they're getting their stuff.  But they are not behaving in a responsible fashion.  And of course it is the most security you can have and, like, blah blah blah.  It's like, okay, yeah, except that nothing that they're doing supports that claim.



In the news was a $17,000 ransomware payment made after 10 days of being locked out of all their patient data by the Hollywood Presbyterian Medical Center.  In a published statement, Allen Stefanek, the president and CEO, wrote:  "The first signs of trouble at HPMC came on February 5, when hospital employees reported being unable to get onto the hospital's network.  Our IT department began an immediate investigation and determined we had been subject to a malware attack.  The malware locked access to certain computer systems and prevented us from sharing communications electronically.  Law enforcement was immediately notified.  Computer experts immediately began assisting us in determining the outside source of the issue and bringing our systems back online."



LEO:  The first thing the computer experts said is, "So, where do you keep the backups?"



STEVE:  Yeah, exactly.  And I love this:  "The hospital staff was forced to move back to paper and transmit information to doctors and others by fax machine" - yes, we got out our stone knives - "while the IT team and outside consultants struggled to restore the network."



LEO:  I hope that IT team has been fired.



STEVE:  Oh.  "Eventually, hospital executives decided" - basically after 10 days, and the IT people said all your files are encrypted; we can't help you.  So eventually, he writes, "hospital executives decided that the quickest and most efficient way to restore our systems and administrative functions was to pay the ransom and obtain the decryption key.  In the best interest of restoring normal operations, we did this."



LEO:  Unbelievable.



STEVE:  So it made the headlines.



LEO:  Unbelievable.



STEVE:  And this is certainly not the last such high-profile attack of this sort that we're going to see.  It's just, unfortunately, it used to be that it was fun to infect machines.  Viruses propagated just to show that they could.  Then, over time, they've gotten increasingly aggressive.  But, boy, when you have bitcoin - oh, and this was - it was paid in bitcoin.  I have it in my notes here.  Oh, 40 bitcoin was the ransom.  So 40 bitcoins at today's going rate is $17,000 U.S.



LEO:  Unbelievable.  They should have waited another week, it would have been cheaper.



STEVE:  Yeah, I think maybe that the hospital, with waiting 10 days [crosstalk], probably said...



LEO:  Maybe that's why they were.



STEVE:  Oh, wow.



LEO:  Keep waiting, it'll go down some more.



STEVE:  So Dan Kaminsky has weighed in on the glibc flaw.  There's a beautiful graphic that, frankly, it's so big that it couldn't fit without pushing the text out of a good pagination.  So I thought, okay, we can survive without it.  But basically it's a dependency tree showing glibc's - showing all of the GNU ecosystem's dependents.  And essentially glibc is in the center, shining like a bright sun, with all of these tendrils reaching out.  Basically everything in the ecosystem, with very few exceptions, has a direct connection.  Glibc, the GNU C library, is in everything, as we said last week.



So of course Dan is the person we talked about years ago who discovered the problem with low entropy in DNS server port choice, and there's a 16-bit ID that queries are generated with.  And he found that there was poor entropy there, and also poor entropy in the ports that they were using.  And what that allowed was spoofing of DNS replies.  And of course that gave birth to GRC's DNS Spoofability Test, which allows anyone to use the facility on our site to test the spoofability of whatever DNS servers they're currently configured to have resolving their DNS, which is exactly what you want.



Anyway, I'll just share the first two paragraphs of what Dan wrote.  His posting was titled "A Skeleton Key of Unknown Strength."  And he said:  "The glibc DNS bug is unusually bad.  Even Shellshock and Heartbleed tended to affect things we knew were on the network and knew we had to defend.  This affects a universally used library (glibc) at a universally used protocol (DNS).  Generic tools that we didn't even know had a network surface are thus exposed, as is software written in programming languages designed explicitly to be safe.  Who can exploit this vulnerability?  We know unambiguously that an attacker directly on our networks can take over many systems running Linux.  What we are unsure of is whether an attacker anywhere on the Internet is similarly empowered, given only the trivial capacity to cause our systems to look up addresses inside their malicious domains."



Second paragraph says:  "We've investigated the DNS lookup path, which requires the glibc exploit to survive traversing one of the millions of DNS caches dotted across the Internet.  We have found that it is neither trivial to squeeze the glibc flaw through common name servers, nor is it trivial to prove such a feat is impossible.  The vast majority of potentially affected systems require this attack path to function, and we just don't know yet if it can.  Our belief is that we're likely to end up with attacks that work sometimes, and we're probably going to end up hardening DNS caches against them with intent rather than accident.  We're likely not going to apply network-level DNS length limits because that breaks things in catastrophic and hard-to-predict ways."



So what he's essentially saying is that, as we discussed last week, if a device generates a DNS query, somebody malicious on that network that sees the query can respond to it probably before the true DNS server gets the query, looks it up, and responds.  So somebody on the same network, or present in the traffic, has this, as Dan confirmed, almost absolutely exploitable opportunity.  But the way, as we know, the system works, the Internet works, most devices are configured to use some remote DNS resolver.  They ask that DNS server, which Dan refers to as a "cache," which it technically is, to go look up the IP on their behalf.



So the point is that a remote attacker that was answering queries with a malicious packet would probably be defeated by it having to go through that intermediary DNS server.  That is, the DNS server would get it and cache it, and it's probably going to be a malformed reply, which would crash the Linux machine that asked, if it could get to the Linux machine.  But unfortunately it gets to the intermediate DNS resolver and goes no further because the DNS resolver looks at it and goes, what the heck is this, and just throws it away.



So again, we talked about it last week.  This was deep and pervasive, and it was going take a while for the industry to sort through what exactly this means.  We know that we want to immediately fix this so that all of the different things that use glibc are recompiled with updated patched versions that don't have this problem that's been around for eight years, since 2008.  But in the meantime we're looking for real-time mitigation.



The good news is most instances, it looks like, the attacks that have been designed are stopped by an intermediate cache.  Most real-world environments do have an intermediate cache.  But at the same time, as Dan wrote, it's one thing to stop the attacks we know.  It's another thing to - and we haven't yet been able to, we the industry, prove that it isn't possible to sneak an attack through a cache by having it look like a valid reply, but which also still performs an exploit when it is forwarded then to the original requesting system.



So just, wow, interesting and scary that this kind of flaw can exist and be just incredibly pervasive.  And again, this is why all of these Internet-connected devices have to be able to have a means of updating themselves.  It looks like this is not compromising everything that's on the Internet, thanks to the intermediate DNS cache architecture.  But it's still certainly a local network attack.  And until things get patched, we're vulnerable in any sort of a local network situation.



I heard you talk about Error 53.  For those of our listeners who haven't heard the news, Apple said, whoops, we're sorry.  I have just a very short quote from the support note that Apple put up.  They said:  "After you try to update or restore your iOS device in iTunes on your Mac or PC, you might see Error 53 in iTunes and 'Connect to iTunes' on your device.  Error 53 appears when a device fails a security test.  This test was designed to check whether Touch ID works properly before the device leaves the factory, and wasn't intended to affect customers.



"For anyone who experienced Error 53, Apple has released an update to iOS 9.2.1 to allow you to successfully restore your device using iTunes on your Mac or PC.  Use the steps in this article to restore and recover your device.  If you believe that you paid for an out-of-warranty device replacement based on an Error 53 issue, contact Apple Support to ask about reimbursement."



So they really stepped up.  And it looks like we got a little carried away, the industry, in being as upset as we were; and Apple quickly said, oh, yikes, we never intended this to inconvenience customers.



LEO:  As Rene Ritchie said, it actually was intended to be a factory error only that would show a failure of, I don't know, the pairing of the Secure Enclave, I guess.



STEVE:  Right.



LEO:  And the idea was, oh, we'll see it at the factory and not ship that phone.



STEVE:  Yeah.  Yeah.  It seems to be that the system knows if you change or remove the Touch ID.  And the YouTube video that I referred to last week, the woman that was doing this with her stereomicroscope and doing surgery on the flex circuitry in the iPhones said that she'd even relocated the chips onto a different piece of flex circuitry in order to try to move the Touch ID functionality, and somehow it knew, so she hadn't fooled it, whether it was done right or not.



But the idea was you either changed the Touch ID, or you just removed it.  You spilled something on it, it got into the little crack of the button, the button stopped working, and then you said, hey, you know, I want my phone fixed.  And so they said, well, we can't fix the Touch ID.  We'll give you a new home button, but the Touch ID won't work.  And people would say, yeah, okay, fine.  And then the problem was, as we know, the next time they updated iOS, iOS freaked out because suddenly there was no Touch ID button, when that was supposed to be a factory event which got out into the marketplace.



Time for miscellaneous.  I have three little goodies.  This is completely random, but my very favorite certificate-issuing company in the world, everybody knows, is DigiCert.  They're the people that make our certificates.  I just happened to see a tweet go by this morning that they're looking for a new customer relations intern.  So I just thought, hey, I'll give them a little wider audience.  I created a bit.ly link, bit.ly/digicertjob, D-I-G-I-C-E-R-T-J-O-B.  And they're located in Utah, with lots of benefits and skiing and a nice environment.  So if anyone is interested is a customer relations intern job at DigiCert, I just thought, well, what the heck.  I'll give them a little bump.



And David Needle died.



LEO:  Yeah.



STEVE:  I just sort of wanted to note his passing.  He was a friend.  He was at IDG.  He'd been in the personal computing business way in the early days.  I thought I remembered him writing up about my light pen for the Apple II.  And so I just googled "David Needle LPS II Light Pen," and it came right up, his very flattering write-up of the development work that I did in the design of the light pen.  And he must have been my age.  So I hate it when I see anyone young...



LEO:  He was a little older than you, but he was still pretty young.  I think he was 70.  But he was pretty young, yeah.



STEVE:  Oh, okay, yeah.  A veteran of the industry.



LEO:  Mm-hmm.



STEVE:  And third random miscellany is, oh my god, TiVo just got instant commercial skip.  Have you seen that, Leo?



LEO:  Mm-hmm.  I've used it.



STEVE:  Oh.  I cannot believe how well it works.



LEO:  Not me, no, I haven't used it.



STEVE:  Really?



LEO:  I would never skip commercials.



STEVE:  It's funny because they offered another piece of hardware, like maybe six months ago, that had that feature, like you had to buy that version.  It's a weird wedgie sort of TiVo thing that offered commercial skip.  They called it Skippy or something, I don't know [Bolt].  And I kind of was looking at it, thinking, well, why can't I have that on my TiVo?  Well, it appeared.



LEO:  I don't know how they get away with it.  I mean...



STEVE:  I don't either.



LEO:  We'll see what happens.  You can disable it.  I think that's how they get away with it.  Notice not everything is skip-enabled.



STEVE:  True, true.  It's funny, too, because I didn't understand what it was, but I was seeing these little green skip tags.  And I thought, what the heck is that?



LEO:  This is such a good job.  You press whatever it is, the "D" button, and it just goes to the beginning of the next segment of the show.



STEVE:  It's amazing.



LEO:  What?



STEVE:  It's amazing.



LEO:  You know what?  I bought another TiVo.  Lisa said, "I want that."  So we're replacing the Xfinity X1 box in the gym with a TiVo Roamio Pro.



STEVE:  Yeah.



LEO:  TiVos are so good.



STEVE:  I'm back to TiVo.  They've just nailed it.  They have the third-party apps.  You can do Hulu and Netflix and everything else.  And, I mean, even when you had to zip through at high speed through the commercials, it was like, okay, this is better than having to watch them.  But now, oh, goodness.



LEO:  That was the main reason is that on the Xfinity X1, you start the fast-forward, but then you can't stop it, so it keeps going all the way to the end of the show.  Or you do rewind, and it keeps - it was so funky flaky bad that we just - it was so frustrating.  So she said, "Well, can't we have a TiVo in here?"  I said, "Honey, those are expensive."  She said, "Buy one."  They're worth it.  They're worth it. 



STEVE:  And lastly...



LEO:  Yeah.



STEVE:  Just a quick - was this a tweet?  No, this was email I wanted to share.  It had just a couple different things in it.  Frederick Pollock, who's in Goodrich, Michigan, he said, "No, I'm not on Flint water."  So, good, Fred.  You don't have lead poisoning, hopefully.  And the subject line said "Zeo still available on eBay 02/10/2016 as of 9:00 p.m. Eastern time."



Anyway, he wrote, "I just watched your latest podcast on TWiT.  I thought I had missed my chance to get a Zeo.  Not true.  $40, and it's on its way.  Great podcast, Steve and Leo.  I've been a listener from almost the first one.  I use a Roku now.  The app works great.  Thanks again."



And finally he says, "I have owned SpinRite for years and cannot count the number of creaky hard drives it's brought back to life," he says, "(just like the Terminator movie).  They just get up and go again.  Sometimes it gets a little scary, like a zombie you can't kill.  Good zombie, good zombie, LOL."  So, Fred, thank you for the nice note.



LEO:  All right.  We're going to talk about DDoS attacks.  You want to check your server?  Is it still redlined?



STEVE:  I turned the screen off, actually, because I...



LEO:  Didn't want to see?



STEVE:  I didn't want to look at it.



LEO:  We'll talk about all of the pros and cons of remediating broken websites.  But first...



STEVE:  Yup, attack is still underway.



LEO:  Yeah. 



STEVE:  So our attacker has just demonstrated that he's listening to this live.



LEO:  I guess so.



STEVE:  Well, no.  Because the moment you asked me whether we were still being attacked, I said yes.  And at that moment the attack stopped.



LEO:  Really.  Can they do it that fast, on a dime like that?



STEVE:  Yes.



LEO:  If he's got a botnet, I guess he issues a command; right?



STEVE:  So I am talking to the attacker and to the Security Now! audience both.



LEO:  Interesting.  Hello, attacker.



STEVE:  So first off...



LEO:  Don't you have homework to do?



STEVE:  First off, many people, I will just say again, so that I make sure we don't run out of time.  I was overwhelmed by the industry's response, both the Internet industry, the listeners to the podcast, I mean, who indicated they would walk through fire in order to keep GRC viable and on the 'Net.  I was just, I mean, I was humbled by it way more than I expected.  And so thank you.  I'm proud that we've built this relationship that we have, really.



And, wow.  Level 3 has just been amazing.  I'm on a first-name basis with all kinds of people.  Bryce, Brandon, Sharon, Lee, Tim, Robert, and others, you all know who you are because I've talked to you many times in the last week.  And I will explain why I had so many conversations with Level 3.  But again, as I just demonstrated, or as our attacker just demonstrated for us because we were off the 'Net again, I did nothing to attempt to mitigate this DDoS attack, or series of attacks.  And I'm going to explain why, because to do so requires some significant changes in GRC's network.  And so I want to - I think everyone is going to find this interesting and probably learn something, sort of from my viewpoint, from someone who's running a site, who has the particular profile that GRC does, which is different than other websites.



So just to recap briefly, the first time I saw this attack was Saturday before last, around 3:30, I think it was, in the afternoon.  I was actually visiting my sick neighbor where he was convalescing.  And when I came home, we were off the 'Net.  That attack lasted, I think it was about 90 minutes.  Then there was a gap, and then a 60-minute attack, and then about three more hours that brought us into the evening of Saturday, and we went off the 'Net again with another attack.  At that point I wasn't sure what was going on.  I had gone to the datacenter, and I remember reporting to our listeners that what I saw was a DNS reflection.



Now, I don't know if the - it looked like later attacks had larger bandwidth.  So it may have been only a DNS reflection attack.  What Level 3 later told me, when they took a look at the traffic, was that it was the kitchen sink.  There was all kinds of other things that were in place, flooding us.  So I talked last week about having asked Level 3 to filter out incoming DNS to port 53 of the GRC.com IP that was under attack.  Now, the problem was that we were sharing a router with a bunch of other Level 3 customers.



LEO:  Oh, that's too bad.



STEVE:  Yes.  And that router had a 10Gb link to the rest of Level 3's network, and the attacks were larger than 10Gb.  In fact, I remember looking at the traffic at the end of last week's podcast and seeing in the chart that Level 3 had, I think it was 12.875 or something gigabits, billion bits per second, of traffic.  Well, that couldn't come down the 10Gb link.  So what was happening was the attack on us was affecting the neighborhood.  It was adversely affecting the connectivity of the people that we were sharing that router with.



LEO:  Could you tell it was aimed at you and not somebody else on that router?



STEVE:  Well, yes.  That's a very good point.  When I looked at the traffic, it was aimed at 4.79.142.200.



LEO:  Your IP.



STEVE:  That's the IP for GRC.com.



LEO:  Got it.



STEVE:  Okay.  So as we've talked about in the past, denial of service attacks are, you know, in the old days - there's been a huge evolution in them over time.  In the old days there was the original sort of TCP SYN flood, where TCP SYN packets, SYN short for synchronize, would be sent to a server, and it would assume that a TCP connection was going to be set up.  So it would allocate memory to handle that connection and respond with a SYN-ACK.



The problem was, if the source IP was spoofed, it would send the SYN-ACK off to a spoofed source IP.  But it would leave that memory allocated and assume that the packet got lost.  So it would wait a while, then retransmit the SYN-ACK to respond to the incoming SYN, then wait a longer while and try again, and wait a longer while and try again.  Meanwhile, more SYNs are coming in, representing, it thinks, more pending connections.  So it keeps allocating memory for each one of these and finally crashes the server, the server itself, which is no longer able to accept any more incoming connections.



So that's old school.  And in fact I independently solved the problem, and Dan Bernstein had also solved it, with something called SYN cookies.  And so I proposed a solution and was told, hey, you know, Gibson, that already exists.  It's like, oh, okay, well, I didn't know that.  So great minds.



So what's happened since is that we've gone from a situation like that, where one attacker could generate so many pending connections that a server would come down.  Servers have since been hardened against a TCP SYN flood like that, where it's really not many, you don't need many SYN packets per second in order to bring down a server's ability to make new connections.  Now we've gone just to massive, just overwhelming bandwidth.  Thus the 12- to 13-billion bit per second flood that this attacker has been hitting us with intermittently since Saturday before last.



So one problem is that, as was the case where GRC is sharing, it's a so-called "Edge router" - Verio called it an "aggregation router" - with other customers, it could affect people who were not being attacked.  The other problem is that, when you're buying bandwidth, as GRC is, from a Tier 1 provider, we're buying it on something known as the 95th percentile basis.  It's also called 95/5.  And we've talked about this in the past, Leo, when we've talked about attacks, where victims of long, protracted attacks find themselves hit with a massive bandwidth bill because you're charged for the attack bandwidth.



And so anyway, the consequence is that it's necessary to stem this attack.  And so this is done with a process known as "null routing."  If you picture, for a second, Level 3, a big, global, Tier 1 Internet backbone provider.  We've talked often about peering relationships, where Level 3 will peer with AT&T and with Sprint and with all the other major Tier 1 providers, so that customers in each other's network are able to reach resources in the other ones.  And so those are peering relationships.  The peering relationship is physically a Level 3 router and some other Tier 1 provider's router sitting in the same rack.



Or, for example, I think One Wilshire is a major interchange in Los Angeles, where everybody's got a presence, and  they agree that they're going to interconnect their routers.  So they run fiber optic cable between the Level 3 router and the Sprint router, and the Level 3 router and the AT&T router, and that's the peering relationship.  So presumably a DDoS attacker, distributed denial of service, has a widely scattered bot network under their control and is able to command those remotely controlled bots to send traffic to a target IP, as has been the case, GRC.com.  So that traffic enters Level 3's network all over the place, through all of those peering points connecting it to other networks, and maybe from some customers inside Level 3.



All of those Level 3 routers have, as we've discussed, routing tables that, when a packet comes in, the router's job is to figure out where to forward it to.  It'll have multiple interfaces to other routers.  And so it looks at the destination IP and sends it toward its destination.



So what happens during an attack that is protracted is I get on the phone, and I've got a whole bunch of phone numbers now, and dial this, then this, then this, and get to here.  And then I say, "Hi, it's me again."  And they go, "Hi, Steve."  They always say, "How you doing?"  And I say, "Well, you know, it occurs to me that I've had 10 years of problem-free service.  I should have called from time to time just to be able to say how happy I am with the flawless connectivity and the great service that Level 3 has provided over the last decade.  But as it happens, I only call when I have problems.  So at the moment I'm not doing so well."



And they say, "Okay, what do you want to do?"  And I say, "GRC.com is under attack.  Let's null route it."  So what that means is that they type some things into some magic admin system that they've got, and this propagates to all of the routers on their border, and presumably some intermediate routers.  And the way a routing table works is that, when you have a series of routes defined, aimed at different interfaces, the job of the router is to match the most specific route.  Meaning that, for example, GRC.com's IP is 4.79.142.200.  So 4.79 dot anything dot anything, that's a bunch of IPs, presumably all sort of located in the same region of Level 3.  So any incoming packet bound to 4.79 dot anything is sent down in that direction.  But if there's a more specific route, if there, for example, is an exact route 4.79.142.200, that supersedes the less exact match.



And so what Level 3 does is they route that to nowhere, to the null zone.  Basically, it tells every router, everywhere on the perimeter, drop incoming packets.  And so the beauty of that is they never have a chance to aggregate down to a high-bandwidth flow.  At all the peering points, the routers get their tables updated with this so-called "null route," which exactly matches the IP, and thus the traffic goes no further.  It just dies.



So the good news is the traffic has been terminated.  The bad news is I have no idea whether the attack has been terminated because there's no visibility into the attack at that point.  So I've acted as a good citizen and told Level 3, stop sending bandwidth to me.  But the flipside is I now have no idea how long that null route needs to stay in place.  So in one instance GRC.com was null routed.  Or GRC.com was under attack.  Because that flooded the router, all of our network was down; and, as we know, some of the neighbors were adversely affected.



And what happened Saturday night was that the IP Group in Level 3, which is a different group than the group that I normally talk to to handle the DDoS and security stuff, they saw that there was an inordinate amount of traffic, and they just shut down the interface.  So they proactively took us offline because, I mean, the traffic wasn't doing us any good anyway, and they had to preserve the integrity of the connection for the people we shared the router with.  Which I have no problem with.  I was going to be offline anyway.



So the next morning I started to fire up relationships with Level 3, and that's how I was pleased to learn that they knew me because they listen to the podcast, and they're listening to this now.  And they probably know that we just had an attack.



LEO:  Hi, Level 3.



STEVE:  And that the attacker is listening to the podcast, as well.  So I had them instead - we brought the interface back up, but null routed GRC.com.  Now, the reason we did that was that the website is actually on www.grc.com, which is at .202.  So all of the routers dropped the traffic to .200.  But since I had long ago moved the web over to www, we popped up on the Internet.  And things were good, but not for long, because this attacker was watching what we were doing and switched the attack over to www.grc.com, and we were down again.  So I called Level 3 again, went through the Centrex dialing, get to the person you want to talk to.



And I think this was Brandon that I was talking with several times at this point.  And he said, "Oh, you're back."  I said, "Yeah, we're down again."  I said, "My guess is" - and I had never gone back to look at the traffic again.  I said, "The website's back down.  It's probably www.grc.com, .202.  Let's null route that."  So that was null routed.  But now, again, that's our web traffic, so we're off the 'Net again, but the newsgroups were up.  And I've talked often about GRC's newsgroups, which is yet again on its own IP, news.grc.com.  And so I was able to have some dialogue in the newsgroups until that went down.



So it's like, I called Brandon again.  I said, "Okay, I give up.  Let's just null route the entire network because we're off the 'Net, and I want to be responsible."  And so the point was that you can not only null route individual IPs; but, for example, a /29 network is a block of eight, and so that's the block that I've got.  So that encompassed starting at GRC.com on through the rest.



So the details of the last, like of last week are a bit of a blur.  But the good news was that the attack wasn't persistent.  And, I mean, even when I first talked about this on Tuesday, I'm not sure how much attacking we had had.  But it sort of felt like, I mean, I didn't know if the person had an axe to grind or was testing out a new tool, wanted to see, like test GRC's defenses.  I mean, again, I had no idea.  And in fact, if we had been under pervasive attack, if I was doing this podcast, and we had been completely blown off the Internet on an ongoing basis, I thought, okay, I'm going to create an email alias, steveyousuck@grc.com, to say to the attacker, look, what is this about?  What have I done?  Why is this going on?  Because again, all I want to be is allowed to be on the Internet.



Now, where I want to go here over the next 35 minutes before we run out of time is, like, what it takes to solve this problem in a situation where the attacks are ongoing and persistent, and why I've done nothing, and why I hope that this attacker will leave us alone.  I should mention that there have been two brief 10- or 15-minute probes.  Saturday night, very, very late, actually early, early Sunday morning, after several days - the last attack that I worked with with Level 3 was Thursday evening.  And it was sort of late in the evening.  The attack began.  I thought, oh, god, okay.  So I called Brandon or Bryce or somebody, and I said, okay, take us off.  And so we null routed all eight IPs.  I had to get some sleep.  Shut down, essentially, our network overnight.



Got up in the morning on Friday, made coffee, sat down, called Level 3.  I said, okay, and this time I talked to Lee, who was there in the morning, and I said, "Let's see if we can get back on."  And so Lee removed the null route, and the attack had stopped.  And again, I don't know when.  I don't know how long it was because when we're null routed, there's no - I can't tell if we're under attack.  So but we were up then all of Friday, all of Saturday.



And then there was a 15-minute, no, this one was a 10-minute probe early, early Sunday morning.  At 12:35 to 12:45 we were down.  And again, this didn't feel like somebody mad at GRC.  It felt like someone wondering whether we were still attackable, whether we could be pushed off the 'Net.  And I'm sure they turned their bots on and then tried to get to GRC, and there was no getting to GRC, and so this person turned the bots off.  And so that was a probe.  And we got another one this morning.  From about 1:45 to 2:00 a.m. this morning, a similar short test to see whether we had any DDoS defenses in place. 



LEO:  So in effect we just told him on the air, oh, hey, we're back.  Go ahead, attack us.



STEVE:  Well, okay.  So there's been, I mean, I've been working to sort of divine the intention of this person and what this is about.  It's clear that, I mean, I've told the person nothing that they don't already know.  They're very competent.  They know how to do this.  When I null routed an IP or a domain name, the GRC.com, although I lost email because email is at GRC, and DNS, at least the web was up, until he noticed, he or she, whomever, noticed that we were up on www and so that one got attacked.  And then when that one got protected, then something else got attacked.  And so at that point I gave up.



So there's nothing I'm saying that this person doesn't already know.  They understand how this stuff works.  Oh, and in fact in the show notes, Leo, if you're interested, I have a snap that I made of this morning's 1:45 to 2:00 a.m. attack, just showing here there's 24 hours of bandwidth, and the 2:00 a.m. outage shown on the graph.



LEO:  The red bar you were talking about.



STEVE:  Right, that's the red bar.  And I got a much bigger one that I'm looking at right now.



LEO:  Because the scale of this graph is 9Mb?  Is that the top?



STEVE:  Yeah, it dynamically scales.  And so that is 9Mb.  And as I mentioned last week, I have a 10Mb, what's called a CDR, a committed data rate.



LEO:  So it will never exceed 10; right?



STEVE:  Which is the bandwidth that I buy from Level 3.



LEO:  Yeah, right.  Wow.



STEVE:  Okay.  So what Level 3 has since done is they have what they call "grooming."  They've groomed my bandwidth, meaning that the IP folks said, you know, Steve's having problems.



LEO:  He shouldn't have to keep calling us.



STEVE:  Well, actually, if I'm off the 'Net, I'm off the 'Net.  But they didn't, I mean, their bandwidth is amazingly high quality.  I mean, in all the years I've just never had any problem.  And so they don't want their other customers to have a problem.  So essentially they gave me my own port, as they called it, so that attacks on GRC, while they will still be just as disabling to GRC...



LEO:  Oh, that makes sense.



STEVE:  ...they at least won't affect any other customers.  And so again, I salute them for this.



LEO:  So you're saying all a bad guy needs is the IP address of a website, and he could just launch it against that website.



STEVE:  Okay.  So, yes, in GRC's case.  So what has happened is that...



LEO:  You want to take - let's take a break.



STEVE:  Okay.



LEO:  You want to take a break?



STEVE:  Yes, because I have to explain to people why it is not practical [crosstalk]...



LEO:  Right, why aren't you doing something about this.



STEVE:  Yes, why I desperately hope I don't have to do anything because, if I do, ShieldsUP! and DNS Spoofability and all the goodies that GRC offers, and the newsgroups, which are so valuable, not only to me but to a large community, they all have to go away.



LEO:  Right.  A number of people did say, hey, why doesn't Steve just use SquareSpace?



STEVE:  Okay.  So I heard from a lot of the companies that offer DDoS mitigation solutions.



LEO:  Like Cloudflare and those people.



STEVE:  I did hear from Cloudflare.  John said that they'd be happy to...



LEO:  John Graham-Cumming, we know him well.



STEVE:  Yup, exactly.



LEO:  Great guy, yup.



STEVE:  Said that he'd be happy to work with us.  I heard from an engineer at Incapsula that offers a similar service.  I even got contacted by Russia's largest DDoS mitigator.



LEO:  Oh, I bet they're good, actually.  They're really good.



STEVE:  So here's the problem.  So what all these services are is known as a reverse web proxy.  They put themselves in front of, it would be in our case, in front of GRC's server, and they field all of the traffic.  What that means is that we would point our DNS to them, meaning that the IP for GRC.com and www.grc.com would be in the IP space of whatever provider we chose.  And then here's the deal breaker for me.  They control our domain, and they have the certificate for GRC.  That's the way all of these places work.  And I said, "Well, uh, sorry, but that's not happening."  And the response I got from one of them was, "Well, everybody else does it."



And it's like, well, okay, okay.  I'm not representing to the people who visit my website that they have a secure connection between my server, which I stand by, and their browser.  What this means is this is exactly what we're talking about all the time with a corporate appliance in the middle, or in this case an organization in the middle.  Suddenly everybody at this third-party DDoS provider has essentially access to the secure traffic to GRC because they interpose themselves, and they terminate the HTTP connection.  So they've got a private key for GRC, at least a domain validation certificate, at the minimum, and they can get one because they're able to prove that they have ownership of GRC's DNS because part of the deal is I've given them ownership of GRC's DNS.  So again, it is the last thing I hope I have to do.



Now, the only real thing we've got happening is credit cards for eCommerce.  And again, yes, everybody does this, but I really hope I don't have to because I would rather be responsible for GRC's security.  It's just me.  There's no one else, no evil or compromised employee or anything.  It's just me.



So the other thing, though, for example, is Perfect Passwords, which is GRC's crazy random number generator that a surprising number of people depend on.  I've got tweets from people saying, hey, how can I - "I can't get passwords from Perfect Passwords."  Well, I'm uncomfortable with the idea that the passwords they get are being decrypted by someone in the middle, which is part of this bargain, if I were to put GRC's servers behind a reverse web proxy, which is the only way to keep GRC on the 'Net, to keep GRC's web presence on the 'Net in an attack.  And, yes, I can do it.  Many, many, many companies do.  I hope I don't have to.



But there's more because, as I mentioned before the break, ShieldsUP!.  The way ShieldsUP! works is a visitor says I would like you to check my ports.  I've just set up a new router.  I'm over at a client's facility.  I want to check their security.  I mean, ShieldsUP! has been around for, who knows, I don't know, a decade.  And many people depend upon it.  But the moment you say "Check my ports," probes come out from our network, from .206.  And there's no way to hide them.  There's no way to obscure them because I need to send TCP SYNs out in order to see if I get SYN-ACKs back.  I drop them, if I do, in what's called a TCP half-open, so I'm not actually opening connections to anyone's ports.  I'm just noticing that their port is willing to be opened, and I drop it.



But ShieldsUP! cannot be protected because, exactly as I was saying, this is all about bandwidth.  And if there is any physically present IP that an attacker could discover, they simply flood that IP with overwhelming bandwidth.  And I have no choice but to shut down, to null route that incoming flood.  And I don't know how long it lasts.  So I just pull the covers over my head and wait for a while and then bother Level 3 again and say, okay, let's see if it's safe to come back.  And it is or it isn't.



Same thing is true for the DNS Spoofability Test.  The way that works is I wrote a pseudo DNS server such that, when someone brings up the spoofability page, there's some crazy DNS queries which their DNS server resolves by using a custom, crazy DNS server that I wrote from scratch for this purpose, which fields these queries and looks at the source port and the DNS, I forgot what it's called, the 16-digit ID of the query in order to check its randomness.  And we were briefly off the 'Net but looks like maybe we're back.  There's somebody else has been attacking us, not apparently the original guy.  So unfortunately...



LEO:  Sometimes you get copycats, as well, yeah.



STEVE:  This podcast is causing havoc for us.  But I want to explain...



LEO:  Any little script kiddie who can figure it out.



STEVE:  I want to explain to the industry.  So none of those services can exist if GRC is going to be attacked.  They're free.  I'm not making any money from them.  I would like them to exist.  But I can't be in a situation where I have to run around and monitor the bandwidth constantly in order to null route incoming overflow traffic.  In order to be a responsible customer of Level 3, I will have to simply discontinue all of those services.  We would neuter ourselves to just being a website.



I looked into what to do with email.  Google offers a corporate email service where we could keep our GRC email addresses, but Google would handle it, so they would handle attacks.  The point is any publicly exposed server is subject to attack, that is not behind a reverse proxy.  And nobody that I could find proxies email.  Nobody proxies generic TCP.  So again, the newsgroups that are so valuable to me for R&D and development, and to the community that we've created, if there's a server that's on an IP, it can receive incoming attack traffic, and I'd simply have to remove it.



So I have been, essentially, I've been hoping that we would be able to weather these attacks, that whoever it was behind them wasn't determined to force GRC off the 'Net.  The only thing that will happen is we will be forced to become a generic neutered website, offering no services, and hiding behind a reverse proxy in order to stay on the 'Net.  I'll do it if I have to, but I hope I don't.



So that's the story of the last week.  Level 3 has been exemplary.  In all the years I've been with them, more than eight, I've never had any interaction with anyone, but they've just been great.  At least I know that we're not affecting any other customers right now.  I don't know what the future holds.  And I did create an email alias, steveyousuck@grc.com.  So...



LEO:  If the bad guy wants to...



STEVE:  Yeah, go to a coffee house.  I'm sure he can probably create, you know...



LEO:  Oh, I think he knows how to do it.  He'll use one of those...



STEVE:  Yeah, an untrackable alias.  And I don't care who this person is.  Everyone will remember, who's been around for a long time, back in 2001, the first denial of service attacks that we suffered, back when I was with Verio.  And it was some bots that were generating non-spoofed traffic.  I collected a bunch of packets.  I did reverse lookups on the IPs.  I found that there were a bunch that were the IP .oc.oc - like oc.oc.cox.net or something.  So that said, oh, this is Orange County.



I used my connections with the FBI and had them contact one of the households that was only four miles away from me who had a bot that was attacking us.  And I went there and got a copy of the bot, brought it home, set it up on its machine, essentially creating a honeypot, and let it connect to its IRC server.  I then created my own IRC sort of client system in order to get into the IRC chatroom.



I ended up tracking down the kid, whose handle was Wicked.  His name was Michael.  We talked on the phone a couple times.  And I said, you know, "Why are you attacking me?"  And he said, "Oh, I heard you were a bad guy."  And I said, "I'm not a bad guy.  Leave me alone."  And I know where he lived.  I know who he was.  I didn't pursue it because I didn't care.  I just, you know, I figured just - I figured communicating with him, I could just say, look, I'm not evil.



LEO:  Right.



STEVE:  So anyway, that's where we stand.  I did nothing to mitigate the previous attacks.  I hope I am not driven to do so.  At some point, if this continues, I'll have to say, okay, GRC is going to lose all the things that it has been able to offer for free because I just won't have a choice.  We will have to disappear and hide behind a reverse web proxy and make the best of it.  I hope it doesn't happen.  We've gone a long time without.  But that's the story.



LEO:  You could put SpinRite up for sale somewhere else.  People say that, if you need the money for SpinRite, you could just put it on...



STEVE:  No.  The point is, I mean, yes, I mean, I can sell SpinRite.  That's not a problem.  But I can't have ShieldsUP!...



LEO:  I understand all the other stuff.  Right, yeah.



STEVE:  Right, right, right.  Oh, I'm...



LEO:  I'm saying, if it became an issue economically, you could easily sell SpinRite at other places, I presume.



STEVE:  Well, I guess I don't understand how that's a solution.



LEO:  No, it's not.  I'm just saying it keeps your income stream going, though.



STEVE:  Well, frankly, due to the amazing response from our listeners, we ended up doing about the same last week, despite the interruptions, as we did the week before because literally people were buying redundant copies of SpinRite, which, you know, please don't do that.  Wait till I have something else to sell and then buy that.  I really, I mean, I'm humbled.  I'm just stunned by the level of support that was shown.



LEO:  People love you.



STEVE:  I learned a lot about our community.



LEO:  People adore you, Steve.



STEVE:  I was.  So I hope that...



LEO:  It's what happens because you give so much.  You've been doing that for 11 years, you've been giving so much.  Of course people want to give back.  That's what happens.



STEVE:  Well, I'm really flattered.  I want to thank Level 3.  I hope you're listening because everybody there has just been fabulous.  I'm so happy.  I renewed my contracts with them for another four years a couple months ago because I want to stay there forever.  I mean, it's been really, really, really good.  And I hope this will pass, and that I can just get back to finishing SQRL and get on to working on SpinRite 6.1.  That's what the world wants me to do, and this is a big distraction, which I hope is over.  If not, then I'll have no choice but to change who GRC is.



LEO:  [Crosstalk], Steve, you're just taking a break.  You're having a vacation.  You're enjoying life.  You have [crosstalk] sipping some wine, going to the beach.



STEVE:  I have to tell you, Leo, I think our...



LEO:  Life's good.



STEVE:  I think our podcast listeners could hear last week how thrown I was.



LEO:  Yes.



STEVE:  And I said to Jenny, I said, "I don't know, early retirement kind of has a certain appeal to it."  You know?



LEO:  Uh-huh.  I say that, too.  I say the same thing from time to time.



STEVE:  Just kind of pull the plug.  The beaches are so nice in Southern California.



LEO:  I don't need to be doing this, yeah.  



STEVE:  Yeah.



LEO:  Yeah, I don't need to be doing this.



STEVE:  So to everybody, to the community, to the industry, wow, thank you.  And to the attacker, if you want to communicate with me, I've created a line for you.  I don't think you're a bad person.  I think you probably wanted to play with GRC.  You haven't been attacking me for days, and only two probes, short little probes, spread 48 hours apart, that I don't have any problem with, frankly.  I'm asleep, and it happens, and it goes.  And it's like, fine, okay.



LEO:  You don't have to use Morse code, though.  You can email him.



STEVE:  And everybody will know, if I'm forced to turn myself into a generic website, I mean, it will be a sad day.  But it won't be a surprise because, I mean, I'll just tell people that I couldn't do this anymore.



LEO:  I'm sorry.  But I am glad you are here, and I hope you keep doing the job.



STEVE:  Well, that's the technology.  There were a lot of people wrote with suggestions, when they thought it was just a simple DNS reflection.  It's like, oh, you can filter that.  And it's like, yes, but it's not just a DNS reflection, and so on.  And technically, is it possible for ShieldsUP! to be on the 'Net?  Well, if I had a device at a point that was larger than the attack, and I communicated with it to dynamically allow packets into this IP, the .206 IP, I think that's the ShieldsUP! IP, only from the IPs that are being tested, yeah, I mean, yes, I understand network packet flow cold.  I get how all of this stuff works.



But I wrote it years ago.  I'm happy to have it be available.  But I just can't have it be a huge distraction for me, or I just have to kill it.  So I hope I don't because a huge number of people use it.  It's been around forever.  And the Spoofability Test is very useful.  And who knows what I'll come up with in the future.  But I can't, if I have to hide behind a web proxy.



LEO:  Steve Gibson, still at GRC.com.  And that's where you can go to get this show, transcripts of the show, and of course all the great stuff he does there, including SpinRite, the world's best hard drive recovery and maintenance utility available for sale on the site, and the free stuff, all the free stuff, ShieldsUP! and, oh, I can go on and on and on.  Perfect Paper Passwords.



STEVE:  Perfect Paper Passwords.



LEO:  Read up on Vitamin D.



STEVE:  Perfect Passwords.  Password Haystacks.



LEO:  Tons of stuff.



STEVE:  Yup.  The Spoofability Test and so forth.



LEO:  All there, all free, at GRC.com.



STEVE:  All which I'm happy to do.



LEO:  Yeah.  You can come to TWiT.tv/sn to get copies from us, as well.  We have audio and video.  Best to subscribe.  That way you'll get every episode automatically in your podcatcher, or use one of the TWiT apps - there's lots of them - on every platform, including Roku.  There's everything.  GRC.com.  Don't forget, that's Steve's site.  Keep it going.  Thanks for joining us, and we'll see you next time.



STEVE:  I'm going to get back to work on SQRL, and then get it wrapped up, and on to SpinRite 6.1.



LEO:  Exciting.  Questions, comments, suggestions?  Do not write to steveyousuck.  The first time I've ever heard you give out an email address, but it's for special email.  Go to GRC.com/feedback, and maybe we'll have some questions and answers next week.



STEVE:  I think it's time.



LEO:  Yup.  Thanks, Steve.  We'll see you then.



STEVE:  Thanks, Leo.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#549

DATE:		March 1, 2016

TITLE:		Listener Feedback #229

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-549.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss the week's major security events and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We'll talk a little bit about the Apple thing.  Testimony's going on right now.  We've had Apple's response.  Steve will talk a little bit about that.  But there's lots of other security news.  And yes, finally, your questions, Steve's answers.  We've got 12 of them, coming up next on Security Now!. 



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 549, recorded Tuesday, March 1st, 2016:  Your questions, Steve's answers, #229.



It's time for Security Now!, the show where we cover your security and privacy online.  And we say it every time, but we're never going to run out of material, are we, Steve.



STEVE GIBSON:  It never gets old, Leo.



LEO:  Steve Gibson is here, the guru at GRC.com, which has been up now for a week.



STEVE:  Yeah.



LEO:  Guy moved on.  Did he ever send you an email?



STEVE:  Never got an email.  I got five emails from other people who enjoyed having an email address for me.  As you commented last week, I've never given an email address out because I just can't.  Sue and Greg are my frontline filters, and they handle support and sales questions and so forth.  And of course I respond to Twitter, I read the feed, and I'm in the GRC newsgroups, so I have a presence.  But what I've found is it's just necessary to have some barrier.



But, yeah, everything has been great, and I'm appreciative that I can get on with working on SQRL.  I'll talk a little bit about how I lost my weekend to trying to install Windows 7 on some old laptops, and what I learned.  And I hadn't intended to burn my weekend that way, but I'm back focused on SQRL, so I'm really glad for that.  And today we're going to do a Q&A.  We haven't for a number of weeks because we've had one thing or another coming up.  And there was one that was kind of a quasi Q&A, but I thought, nah, okay, let's...



LEO:  Let's do a real Q&A, yeah.



STEVE:  And I had 639 pieces of email waiting for me in the Security Now! mailbag, so plenty to draw from.  We need to talk a little bit about the news of the week on the Apple versus FBI deal.  Apple has filed a formal reply that I want to - I found four, just four, out of 65 pages, four paragraphs that beautifully sort of sum that up.  As we're recording this, there's testimony now in front of Congress.  And ultimately I think everyone's pretty much agreed that the FBI's going to lose this, that this was a real stretch trying to use this All Writs Act, and that what's going to happen then is that we're going to need Congress to generate some legislation, some law.  And of course that always scares me.



Once upon a time I would accept jobs being an expert witness.  But I did that for a few trials, and I was so distraught over the outcome.  First of all, I would only testify for the people who I thought were right, of course, because it's like there's no way I'm going to support the wrong side.  And so I saw, like, these judges who were just technically incompetent.  And of course I was being asked to testify about technical things.



The famous one was the NEC MultiSync Monitor, where they were advertising that this is the last monitor you would ever need because it's so smart about the way it handles the horizontal and vertical sync.  And of course, as the developer of the Light Pen, which runs on horizontal and vertical sync as the way it counts scan lines and determines the Light Pen's position on the horizontal scan line, I knew this stuff upside down and backwards.  And I can also explain things.  And so they figured, hey, Gibson's like the perfect expert witness to explain why this indeed is the last monitor you'll ever need.



What happened was the PS/2 came out, the IBM PS/2 computer, and it used different horizontal and vertical sync, which the NEC MultiSync had no problem with.  And so, indeed, this monitor did work on these new machines.  But there was another company, Princeton Graphic Systems, that was trying to sell a new PS/2 monitor for the PS/2.  And so they got upset that NEC was making the claim that nobody needed a new monitor.  Anyway, the point is NEC lost.  I mean, it was like, okay, I'm done.  I'm not going to spend any more time trying to convince anybody of what I absolutely know and buy into.



So anyway, the point is that I'm a little nervous where, like we're just watching John Conyers, who, I don't know - actually, in that particular case, the judge had to pause testimony every so often to take a deep whiff of his oxygen from his mask.



LEO:  Literally?  Really?



STEVE:  I'm not kidding you.  He had a green tank next to him.  And so, but judges are lifetime appointments, and he was in no hurry...



LEO:  There's a visual metaphor; right?  Huh?  Wow.



STEVE:  He was in no hurry.  And so he was fascinated, and he thought I was wonderful, and he asked me questions.  And I thought, okay, great, you know.  And then, wham, he ruled, I think because the opposing counsel was prettier.  And so it was like, oh, okay, you know, she was flirting, and I wasn't, and so it didn't matter whether the...



LEO:  We've all watched "The Good Wife."  We know how unusually the wheels of justice turn.



STEVE:  Anyway, so we've got that.  I've got a comment that you were making before the show I want to strengthen.



LEO:  Yeah.



STEVE:  And that is the notion about iPhone passcode length.



LEO:  I have a Gedankenexperiment I want to go through with you.  So maybe I'll be the first of the questions in the Q&A.



STEVE:  Okay.  And we've got RSA's conference happening.  And so some papers released already, but probably more coverage.  In fact, next week's podcast is already named, and I forgot the name now.  But there's two - there's a brand new horror about HTTPS and SSL or TLS.  Actually, it is SSL because it's some servers still support v2.  And a very clever hack for contemporary servers that make the mistake of not having completely shut down v2, just brilliant hack.  And then a weird cache timing attack on OpenSSL.  Even constant-time RSA, which we were talking about, constant-time encryption solves the problem of, well, some of the problems of side channel.  This is a different side-channel attack.



So those are our two big topics for next week, for anyone who wants to tweet me about - it's not DAWN.  It's not - it's a five-letter word, DROWN, DROWN, the DROWN, D-R-O-W-N.  And unfortunately, the last word of this abbreviation is actually encryption, but D-R-O-W-E didn't really work, so they used the "N" from encryption, the second letter of the last word, rather than the first letter.  It's like, okay, you're kind of cheating on that, but fine.  And some miscellaneous stuff, and then of course we've got actually a dozen because there was one fun long one, but a lot of sort of shorter questions.  And so I think a great podcast.



LEO:  I know a great podcast.  Not the least of which, I know your eyes will be turning toward CNN in about 20 minutes when the first results from Super Tuesday come in.



STEVE:  Yeah, when - I know.



LEO:  So it's a busy day.  It's a busy day.



STEVE:  Yes, it is.  It's going to be.  Although I already know what's going to happen.  I've been following it closely enough that probably it's a fait accompli.



LEO:  Well, you never know.  It feels like there's lots of surprises.



STEVE:  Well, and the details are fun.  For someone who is as engaged as I am, I mean, I just don't want to look at the final score.  It's fun to watch it happen.  So, yes, TiVo is sucking it in, and that allows me to do some commercial skipping.



LEO:  Good.



STEVE:  So late last week Apple filed their formal reply to the FBI's demand under this All Writs Act from 17 something or other [1789] that they create software - last week we talked about what it was the FBI wanted, which was that the "10 strikes and you're out" wiping of the decryption key would be removed; that any additional delay deliberately imposed by the OS and therefore under software control be removed; and that they be given an electronic means for rapidly entering their guesses in order to perform essentially a brute-force attack on the password that had been set into that phone.  I expect that this week will be our - we will not be talking about this every week because pretty much until...



LEO:  I hope you're right.



STEVE:  I hope.  Until there's a decision on this case, and we'll certainly mention what that is, but then I think it'll be some time until there's some congressional action.  And, I mean, who knows?  We're in an election year.  I don't know if this would, you know, like where the executive branch stands relative to Congress, what sort of a partisan divide there is.  But as we know from the sudden death of the justice last week, everything is sort of up in the air.  So maybe this gets punted.  Who knows?  Anyway, what I wanted to do, the Apple response is 65 pages of legalese stuff.  But there are four paragraphs that beautifully state their position that I just want to put into the podcast.  And as I said, I think this will be the last coverage we give it for a while.



So Apple, explaining their case, wrote:  "There are two important and legitimate interests in this case:  the needs of law enforcement, and the privacy and personal safety interests of the public.  In furtherance of its law enforcement interests, the government had the opportunity to seek amendments to existing law, to ask Congress to adopt the position it urges here.  But rather than pursue new legislation, the government backed away from Congress and turned to the courts, a forum ill-suited to address the myriad competing interests, potential ramifications, and unintended consequences presented by the government's unprecedented demand.  And more importantly, by invoking 'terrorism' and moving ex parte behind closed courtroom doors, the government sought to cut off debate and circumvent thoughtful analysis.



"The order demanded by the government compels Apple to create a new operating system - effectively a 'back door' to the iPhone - that Apple believes is too dangerous to build.  Specifically, the government would force Apple to create new software with functions to remove security features and add a new capability to the operating system to attack iPhone encryption, allowing a passcode to be input electronically.  This would make it easier to unlock the iPhone by 'brute force,' trying thousands or millions of passcode combinations with the speed of a modern computer.  In short, the government wants to compel Apple to create a crippled and insecure product.  Once the process is created, it provides an avenue for criminals and foreign agents to access millions of iPhones.  And once developed for our government, it is only a matter of time before foreign governments demand the same tool.



"The government says:  'Just this once,' and 'Just this phone.'  But the government knows those statements are not true; indeed the government has filed multiple other applications for similar orders, some of which are pending in other courts.  And as news of this court's order broke last week, state and local officials publicly declared their intent to use the proposed operating system to open hundreds of other seized devices, in cases having nothing to do with terrorism.  If this order is permitted to stand, it will only be a matter of days before some other prosecutor, in some other important case, before some other judge, seeks a similar order using this case as precedent.  Once those floodgates open, they cannot be closed, and the device security that Apple has worked so tirelessly to achieve will be unwound without so much as a congressional vote.



"As Tim Cook, Apple's CEO, recently noted:  'Once created, the technique could be used over and over again, on any number of devices.  In the physical world, it would be the equivalent of a master key, capable of opening hundreds of millions of locks - from restaurants and banks to stores and homes.  No reasonable person would find that acceptable.'"  End of Tim's quote.



"Despite the context of this particular action, no legal principle would limit the use of this technology to domestic terrorism cases.  But even if such limitations could be imposed, it would only drive our adversaries further underground, using encryption technology made by foreign companies that cannot be conscripted into U.S. government service, leaving law-abiding individuals shouldering all of the burdens on liberty, without any offsetting benefit to public safety.  Indeed, the FBI's repeated warnings that criminals and terrorists are able to 'go dark' behind end-to-end encryption proves this very point.



"Finally, given the government's boundless interpretation of the All Writs Act, it is hard to conceive of any limits on the orders the government could obtain in the future.  For example, if Apple can be forced to write code in this case to bypass security features and create new accessibility, what is to stop the government from demanding that Apple write code to turn on the microphone in aid of government surveillance, activate the video camera, surreptitiously record conversations, or turn on location services to track the phone's user?  Nothing."



So I think that puts Apple's position very clearly.  And the assumption now, I think, in the industry is that they're going to lose.  And in fact what just happened yesterday was that there was a ruling on a different case regarding an iPhone 5s which was seized by the DEA in 2014.  This started being worked through the courts last October.  And there was a judge, James Orenstein, who said:  "For the reasons set forth below, I conclude that under the circumstances of this case, the government has failed to establish either that the AWA" - which is that All Writs Act - "permits the relief it seeks; or that, even if such an order is authorized, the discretionary factors I must consider weigh in favor of granting the motion."



And so essentially the government in this case lost an essentially identically founded case, and Apple prevailed.  So it's not clear whether this judge's rulings will affect the one pending that we've been talking about.  They're different cases.  There's no terrorism component and so forth.  This was a drug-related case.  But this is an example of what Apple was talking about, other cases that are - and this was, they said, this was their response, Apple's response late last week.  This just happened yesterday.  So this is one of those pending cases that was also attempting to use the All Writs Act.  And this Judge Orenstein said, eh, no, that doesn't do the job.



Anyway, so my guess is this current case will be similarly decided, and it will be then necessary for us to go the legislative route.  And certainly next week I'll put a link in the show notes, and in fact I will tweet it once we're done, a link to the testimony that is underway right now in a committee hearing of all sides about this.  This is the beginning of the process of these gears turning.



LEO:  This is an awesome opportunity, though, for people to remember that there's an election coming up in November, and it's not just for President.  Half the House gets reelected, a third of the Senate.  And this is an opportunity to consider this when you choose the candidate you vote for because I do believe Congress will be taking this up, probably not till after the election might be my guess.



STEVE:  Yes, yes.



LEO:  And so, while no one issue should determine who gets elected, I think, but this may be a pretty important part of your calculus on who you're going to support.  And it won't be across party lines.  I doubt it will be.  And you may not have a choice in many districts.  But if you do have a choice, it's important.



STEVE:  It doesn't sound, it doesn't feel partisan.  It feels like...



LEO:  No.



STEVE:  You know, like we need to decide, I mean, and as we've been saying on this podcast, we've been seeing this collision coming for a couple years, I mean, you can see both sides.  And the FBI chose this case because it was contemporary and terrorist-related, which generates extra heat for it.  And it's the problem of math being unbreakable.  And the problem, of course, as we discussed, is that the math is already out.  It's escaped.  And so if Apple and Google are not allowed to deploy this kind of encryption by default in their base platforms, then people who really want it can get it.  And in fact, in the testimony we heard someone talking about telegraph.  He called it, yeah, the worst tool that's available.



LEO:  Telegram, really?



STEVE:  No, actually "telegraph" is what he said.  And I don't know if he meant Telegram.



LEO:  He's talking about Telegram, I'm sure, yeah.



STEVE:  Yeah.  Anyway...



LEO:  You know, I guess the thing that we should stipulate is, A, if you're smart, you can use encryption, and you could probably do a fairly good job of protecting your privacy.  We're going to talk about my experiment that I did with the iPhone to see how much I could lock it down.  But what really this is all about is the normal person, and something easy and convenient for a normal person to use.  And but that's where my thought experiment's going to come in because I'm also of the opinion that the normal person should know, that really, in my opinion, I want to know what you think, nothing is going to be - nothing's going to be both convenient and truly secure.



STEVE:  Yes.  I don't know if the normal person has any awareness.  Our podcast...



LEO:  Well, that's our job.  And that's my job on the radio to tell normal people.  So I want to know what to tell them.



STEVE:  Right.  Okay.  Yeah.  So, for example, we've talked often about Threema.  Threema is my favorite messaging app, which I have no need for because there's nothing I'm doing except deciding, like scheduling when my friends and I are going to meet for margaritas somewhere.  And if the FBI cares about that, hey, fine.  But if I absolutely needed security, I would use that.  And I would arrange to securely exchange private keys, and then it doesn't matter what platform I'm on.  But it's not...



LEO:  Well, it does because, if you're on a platform that has a keystroke logger on it, you can use Threema all you want.



STEVE:  Yeah, that's true.



LEO:  So really the last line of defense is the operating system.  And you probably saw the Ars Technica article which I think makes a really good point that there is a fundamental backdoor in all operating systems which is called the update facility.  We saw it with Sparkle, which was a Macintosh updater, and people were using it incorrectly, and it was easy to do a man-in-the-middle.  But if the government can force Apple or Microsoft or Google or any company to put rogue firmware on a phone, all bets are off; aren't they?



STEVE:  No.



LEO:  Okay.  That's the thought experiment.  So we'll get to that.  I don't want to get you out of order here.



STEVE:  Okay.  So there's been a neat forensics tool developer, Jonathan Zdziarski, who's been very active in this whole, well, he's been tweeting like crazy and blogging.  And he proposed a nice formal definition of a backdoor.  But then even more recently he tweeted, just yesterday afternoon, something that I got a kick out of.  And his tweet from 1:35 in the afternoon yesterday, he tweeted:  "The first uses of my iOS forensics tools were in terrorism and kidnapping cases.  Not long after, cops were using it for girlfriends' phones."



LEO:  Right.



STEVE:  And therein lies one of the problems, is that you have a tool like this, and it is just - it's human nature.  You mentioned "The Good Wife" earlier, and the NSA is back to listening in on Alicia Florrick's phone, and we're having some good fun with all of that.  And the problem is, you know, and Snowden talked about naked pictures that were being passed around the NSA from the eavesdropping.



LEO:  It used to be really easy because any law enforcement officer, many of them had a device in the car when they pulled you over that they could connect to your phone, and within a minute, while they're checking your license, suck everything off of your phone.  A lot of people just said yeah.  "Can I see your phone?"  "Yeah, okay, Officer."  But that's the point, that's why Apple put encryption on there, to prevent these kind of casual scooping up of everything in your phone.



STEVE:  Right.  So Jonathan goes on, and he worked to formally define "backdoor."  Now, even in Apple's document, I read most of the 65-page legal...



LEO:  They used the word "backdoor."



STEVE:  Yes, they did.  And it's two words, actually, "back" and "door" with a space in between.  So it's like, well, okay.  And it was ill-defined, which as we said last week, there's no definition for backdoor.  So Jonathan, who is in a position to come up with a good definition, he wrote:  "A backdoor is a component of a security mechanism where the component is active on a computer system without the consent of the computer's owner, performs functions that subvert purposes disclosed" - wait.  It "performs functions that subvert purposes" - it must be not disclosed, I must have forgotten a "not" in there - "not disclosed to the computer's owner, and is under the control of an undisclosed actor."



So that's very broad, but I think it's a beautiful definition of backdoor.  And that's the way we've always used it.  We've, when we see it being used in the press and, lord help us, in Congress, it has no meaning.  It just means something the FBI wants and Apple doesn't, whatever, you know, it's a big blurry cloud.  But a backdoor is exactly what Jonathan said.  It is something that is secret that is under somebody else's control, that in some way subverts the security of the system that is the backdoor's target.  I think that's our formal, useful formal working definition.  And that has nothing to do with this case.  This is not a backdoor that the FBI is asking for.  It is an improvement of brute-forcing the password is what they're asking for.  And from the beginning, when I heard that, I thought, oh, that's kind of clever.  I mean, like somebody at the FBI figured out what to ask for that was doable and that...



LEO:  But in a larger sense it's a backdoor because, if the FBI can compel Apple to create custom firmware for a phone, that firmware really is in that sense a backdoor; right?  It's putting something on the phone to change the phone's security behavior.  And now in this case the terrorist is dead.



STEVE:  Well, okay.  So...



LEO:  So he doesn't know.  But you know what I'm saying?  It's a backdoor.  The larger thing is a backdoor, which is the idea that a company can modify the firmware.



STEVE:  But they can, well, yes, except that Apple also has hardware that can presumably not be modified.  So, for example, and that takes us right into the next point in the show notes, which is complex iPhone passcodes.  What we discussed in March of 2014, so exactly two years ago, I noted that the old PDF I had downloaded was on the 11th of March.  And this was the iOS security whitepaper which was dated February of 2014, from Apple.  So Apple published that first really comprehensive whitepaper two years ago, and we gave it multiple podcasts.  One of the things that it makes very clear is that they deliberately did a high-repetition count PBKDF, password-based key derivation function, which cannot be sped up.  Nothing can speed that up.  And that's 80 milliseconds per guess and is not subject to being changed by the firm - it isn't in firmware.  It's in hardware.  So what I wanted to amplify for our listeners is that that's slow.  I mean, 80 milliseconds...



LEO:  Well, if you have a 16-character random password, that's millions of years is what it is.



STEVE:  Exactly.  Exactly.  And so I wanted to quote what we had covered.  It's funny because when I opened that PDF and scrolled to that location, I had highlighted this block, which we looked at closely.  And you'll remember this word, Leo, because they used this again.  They made up a word that I gave them some heat over two years ago.  So they wrote, under passcodes, they said:  "By setting up a device passcode, the user automatically enables Data Protection," which we know is the whole device encryption using a randomly chosen symmetric encryption key so that all of the storage is always encrypted.



Apple goes on:  "iOS supports four-digit and arbitrary-length alphanumeric passcodes."  This was then.  We know that they increased it by two digits to six since then.  "In addition to unlocking the device, a passcode provides the entropy for encryption keys, which are not stored on the device.  This means an attacker in possession of a device cannot get access to data in certain protection classes without the passcode.



"The passcode is 'tangled.'"  And that was the word.  I said, what?  What the heck does "tangled" mean?  They just pulled that one out of the air, tangled.  "The passcode is 'tangled' with the" - and we think they mean hashed in some way because they say "'tangled with the device's UID, so brute-force attempts must be performed on the device under attack.  A large iteration count is used to make each attempt slower."  And so even if this were done in software, you can't ever short-circuit a large iteration count.  There's no way to short-circuit it.  And it is designed to be acceleration-proof.



So continuing, they said:  "The iteration count is calibrated so that one attempt takes approximately 80 milliseconds.  This means it would take more than 5.5 years to try all combinations of a six-character alphanumeric passcode with lowercase letters and numbers."  And they go on, but I won't because this makes the point.  So what the FBI is asking for is for - or actually they did say here, skipping a paragraph:  "To further discourage brute-force password attacks, the iOS interface enforces escalating time delays after the entry of an invalid passcode at the Lock screen."



That's one of the three things the FBI has asked Apple to remove is the removable, the escalating, software-imposed, whoops, you didn't guess right so we're going to make you wait longer and longer each time.  But that 80 milliseconds cannot be short-circuited.  Now, and again, we lack definitive design specs.  So it's not clear what's being done in hardware, what part the Secure Enclave has.  But we really are seeing a proactive design attempt from Apple to limit their own ability to crack phones.



LEO:  Yeah, but nobody's going to - I've tried this, by the way.  I had a nice, long, strong password on my iPhone.  And it's such a pain in the ass, nobody's going to do that.  You can.



STEVE:  Correct, correct.



LEO:  But it's not convenient.



STEVE:  So I wanted to make sure that our listeners know.  Well, okay.



LEO:  It's there.  It's there.  You can do it.



STEVE:  Yeah.  And also remember that...



LEO:  And by the way, you should turn off automatic updates; right?  Because you don't want them pushing some firmware on your system.  Right?  And I would turn off the fingerprint reader because I don't - there's issues with that.  You know, you can be compelled, for instance, to use it.  So you can't use the fingerprint reader.  You have to use a long, strong password, which is a pain in the butt to type.  And you have to do it every time you unlock your phone.



STEVE:  Right.



LEO:  And you cannot accept firmware updates of any kind because you don't know if they're okay.



STEVE:  Okay.  So what we just covered, though, prevents - it indicates firmware cannot short-circuit that 80 milliseconds.  So if you do have a long, strong password...



LEO:  No, no.  But they don't have to.  If you've modified the firmware, yes, the FBI is asking for this dopey modification, this front door brute-force thing.  But why bother?  Just modify the firmware so that, while the person's using the phone, you transmit the unencrypted data out of the phone.  Do a background backup.  Because we know by the - oh, incidentally, you have to turn off all iCloud backups because we also know Apple has access to those.



STEVE:  Right.



LEO:  At this point, you've got a secure phone no one wants to use.  A bad guy will do that because he's motivated.



STEVE:  Right.



LEO:  The rest of us will not.



STEVE:  Right.  Well, and we do know, as we discussed last week, that five weeks, or I guess it was six weeks before the last use, that phone had been backed up to iCloud, and the FBI had that.  But what they wanted was, for whatever reason, whether they actually want the phone...



LEO:  No, it's a precedent, is what they want.



STEVE:  Or, yes, or they believe they would be able to achieve what they want.



LEO:  And remember the precedent right now is making it easy for them to do the six digits.  Or four digits, probably.  The precedent, though, would establish precedent to get at - the real precedent is Apple will write firmware to help us get into a phone.  And should that happen, are you saying to me that I can prevent Apple from getting my data?  No, because, right, if I've unlocked the phone with my long, strong, good, entangled password, the phone is now unencrypted; right?



STEVE:  Correct.  Correct.  Then, while it's unlocked...



LEO:  In the background it goes [whining sound].



STEVE:  ...the symmetric encryption key is in place, and the phone has access to your data.



LEO:  And they can start sending stuff out of my phone, yeah.



STEVE:  Yup.



LEO:  So that's the real precedent, I think.  I don't think it's about the brute-forcing.



STEVE:  Right.  So my point was that a long passkey or passcode, passphrase, whatever you want to call it, does thwart the brute-forcing. But you make the point that, if Apple has been compelled to access a phone while it's in use, it's unlocked.  I mean, it is decrypted.  Yeah, and your comment about the keyboard interception is the same.



LEO:  Right.



STEVE:  I remember we all noted when Apple allowed custom keyboards to be added to iOS, that they replace...



LEO:  They warn you.  But they don't have to warn you.



STEVE:  They warn you, and...



LEO:  They could do that with Apple's keyboard.



STEVE:  They take the measure of using their keyboard if they detect that it's a password that you're entering.



LEO:  Right.  So you have to trust Apple.  And once there's a precedent that the federal law enforcement can compel Apple to do what they want, which they frankly can, Apple can't really say, oh, we can't do that, because they can.  They always can; right?



STEVE:  Right.  



LEO:  So all I'm saying is it's just like locking a door.  You can make a law that says you can't cross that lock, but anybody can break in.  Locks do nothing.  What the lock does is establish a line in the sand that you cross it, now you're breaking the law, and we can use the law to prosecute you.  But the law itself can be subverted by a bad actor, whether in government or out.



STEVE:  Yup.



LEO:  So I'm just saying it's really - all of this is a lot of hand waving.  But ultimately, the idea that your phone could be secure is a long shot.



STEVE:  Yeah.



LEO:  Okay.  I just wanted you to say yes.



STEVE:  No, I completely agree.



LEO:  Because I think that that's, I mean, what we're talking about is a good thing.  We should have laws against it.  And we shouldn't allow government to do this.  It's the Fourth Amendment, et cetera.  It should be very clear, Congress needs to make a very clear statement that this is going too far.  Doesn't mean it won't happen.  And it may not be government that does it.  I mean, it could be a bad actor at Apple.



STEVE:  Where did we leave off with the FISA court secret letters...



LEO:  There you go.



STEVE:  ...that were undisclosed?



LEO:  They still - that's in the Patriot Act.



STEVE:  Yeah.



LEO:  You are not allowed to - and Apple almost - remember Apple's first reaction to this FBI issue was seal it.  We'll help you.  Just seal it.  We don't want a precedent.  Doesn't mean they don't help.  They do help.



STEVE:  Well, and they have stated that they want to be helpful.



LEO:  Yes.



STEVE:  I mean, they absolutely want to help law enforcement where they can.  For example, they made the iCloud backup immediately available, the last backup that they had of the phone.  It's like, yeah, here you go.



LEO:  Here.  We got the keys.  No problem.  So you can secure an iPhone pretty well, if you're willing to put up with a lot of inconvenience, and never getting updates.



STEVE:  Well, and this does come back to the point you also made earlier about convenience because it is four things like what if the user absolutely forgets everything that they know, yet their device is backed up in the cloud?  There has to be some means for key recovery.  Well, if there is, that creates a weakness in what could otherwise be absolute security.  Thus it isn't actually absolute because you have to provide those features.  



LEO:  Anymore than that lock on your door really keeps anybody out.  It's social convention.  It's law.  It's policy.



STEVE:  Yeah.  You know, when you forget a password on a website, and you say "Send me a password recovery link," well, that password recovery link comes through email, which is really not safe, easily interceptable.  Somebody gets it and clicks on it before you do, they're recovering the access to your account.  So here we have a situation where the email, which is really not secure, is the fallback for all of the other security that we have with our big fancy long passwords.  It's like, yeah, except it's not really that secure in practice.



LEO:  You know, the truth is it's so hard to really be secure that only somebody strongly motivated will be secure.



STEVE:  Yeah.  And as you said, you give up a huge amount of convenience.



LEO:  Yeah.



STEVE:  If you really, really, really lock everything down, suddenly there's lots of things that don't work and that you can't do and can't use.



LEO:  And ironically, you might even be more insecure because you're not taking updates, which means there may be zero-day flaws that aren't patched.  So, you know.



STEVE:  Yup.



LEO:  Okay.



STEVE:  So at the RSA conference, which is ongoing, and I'm sure we'll have other interesting papers arising from it, there was one that I just sort of wanted - it just popped up, and I wanted to share it.  This is not super news except one particular statistic that sort of stood out from all others was interesting.  And there's a company, Avecto, which has a booth at RSA, that has analyzed the security bulletins, the Microsoft Patch Tuesday security bulletins from all of 2015.  And actually they compare it to all of 2014 also.  What they found was that, on average, 85% of the critical Microsoft vulnerabilities would be mitigated by removing administrative rights from the user.  They also noted that in 2015 there was a 52% increase in the total volume of vulnerabilities compared to 2014.  So, yes, this podcast will hit triple digits before we run out of stuff to talk about.



Okay.  So what I found was really interesting, though, is that, when they break it down, one really stands out, and this connects into one of our Q&A points that we'll be getting to later in the show.  Their key findings were, of the 251 vulnerabilities that were in Patch Tuesday security bulletins in 2015 with a critical rating, 85% were concluded to be mitigated by removing admin rights.  And again, there's been a 52% year-on-year rise in the volume of vulnerabilities since 2014, which is to say half again more in 2015.  86% of the critical vulnerabilities affecting Windows were mitigated by removing admin rights.  And here's the one that stood out, though:  99.5, almost 100%, 99.5 of all vulnerabilities in Internet Explorer were mitigated by removing admin rights.  And this will...



LEO:  Just stop using Internet Explorer.  Then it's 100% of all...



STEVE:  Exactly, exactly.  So, and then there was Office, remote code execution, critical vulnerabilities in Windows 10, and essentially they were all in the 80 percents.  So essentially, what's sort of funny about this is that the technology was built into Windows.  I don't really know that the early, the Windows 3.1, 95, 98, ME, I don't think that group had strong security.  But NT had the notion of admin and non-admin users because, of course, it came along well after Unix.



And Unix had established this concept of root privilege because Unix was a multiuser operating system.  It had terminals connected to it.  And people without root privilege, absolutely without root privileges, all over a campus, would be logging in with terminals into a Unix machine.  So this notion of clearly delineated rights between users at terminals, who ran jobs through their terminals, and the administrator of the OS, that was absolutely distinct.



The problem was then we got personal computers, where the owner of the computer was both the user and the admin.  And there were things that, back in the Unix days, I remember using a Unix terminal when I was at UC Berkeley.  And there were things you couldn't do that annoyed us, especially we computer people.  But there were lots of things that were off-limits.  And it was annoying that there were directories we couldn't see.  We knew they were there, but we couldn't see.  There were directory rights and file rights that we were unable to change.



And so what happened was, with the advent of the PC, that distinction blurred because you own the computer.  You need to be able to install software.  You need to be able to do whatever you need to do.  The problem is the right of installing software under your account means that malware can also install software by impersonating you with your account's rights.  And so we sort of went through this awkward period where, well, the advice was you should not be an administrator.  But everyone kind of winked and said, yeah, I know; but I tried that, and it's just no fun.  I want to be an administrator so I can push all the buttons and do whatever I want to do.  And the problem was the malware was having a lot of fun at that.



Then of course Microsoft continued to struggle with this with version after version of Windows, making it first way too onerous, which is really what happened with Vista, where it was just a horrible problem.  You couldn't do anything without the screen going dark and a dialogue popping up and saying, confirm that you really want to do this.  It's like, yes.  And they had this notion of split rights, where your account had admin rights and non-admin rights, and you would normally run as a non-admin, but then you'd be able to elevate, temporarily elevate your rights in order to get something done.



I mean, they, to their credit, really tried to work around what was a fundamental problem, which is the person who owned the machine didn't want to be told there was something they could not do, and arguably had to, if it was really them, do things.  But then how do you prevent malware from impersonating?  So anyway, we're still fighting that today, although I think that it's very clear that, I mean, and for years, when we go over what Patch Tuesday brings, it's oh, yeah, this doesn't have a problem.  No problem here if you don't have admin rights.  So now we've got some numbers from this analysis saying, yeah, especially with IE, almost none of the problems that affected IE were able to do anything from inside the browser if it wasn't running with admin privileges.



I got a tweet.  And this could have gone back in the Q&A, but actually it came in late, and I'd already assembled the Q&A and had already two extra questions and made the PDF.  So I thought, okay, I'll just stick this in because I think this is of general broad interest.  And so this was Christian Turri who tweeted:  "Hey Steve, here's a quick question for the Q&A podcast.  ShieldsUP! is great, and I use it all the time, but do you have any tools you can recommend to do internal port scans?  Basically I want to do internal port scans on some IoT devices to see what they're opening.  Thanks."



And I thought, boy, you know, that is a great question.  We haven't talked about this at all except we've been talking about the three dumb routers, the need to isolate IoT devices.  But we are at a stage now with so much stuff in our LAN, in our local area network, whether we've got one or segmented or whatever, that being able to probe ourselves makes a lot of sense.  And as I have mentioned several times, ShieldsUP! is stopped at the border, which is what we want.  ShieldsUP! is looking at your router's ports.  But all of your LAN is hidden behind it.  What's going on there?



Well, immediately I was put in mind of a tool that a friend of ours who used to participate actively in the newsgroups a long time ago, Robin Kier, he worked for a company called Foundstone, where he produced a whole bunch of utilities.  Foundstone was purchased by McAfee, which was purchased by Intel.  So he developed a nice, very capable Windows internal network port scanner.  And actually there's nothing to keep it from being launched to do external scans, although you can get yourself in trouble if someone sees you scanning the 'Net, so I would recommend you just leave it to scanning your local area.  But it's called SuperScan.



The last version he worked on was SuperScan v3.0.  Well, I should explain, he did a 4.1 because he was excited about the use of raw sockets when they became available.  But then of course Microsoft removed their access with Service Pack 2, I think it was, maybe it was 3, of XP.  And in the SuperScan v4.1 notes, it mentions that some of its capabilities were neutered by the lack of raw sockets in Windows.  And I should mention, I'm assuming Christian wanted a Windows-based port scanner.  Nmap, of course, is the famous scanner that is available for Unix and Linux-based systems.  But if you just google, you could google "Foundstone," F-O-U-N-D-S-T-O-N-E, and then "SuperScan," or probably just "SuperScan v3.0," you'll find it.



And there's also, because I had some fun poking around, there's a little directory hierarchy at the top of the page.  And if you bounce up a level or two, they've got just a long scrolling page of all kinds of interesting utilities, that is to say, McAfee does - some McAfee, some from Foundstone that McAfee acquired when they acquired Foundstone.  But I did think, I think the idea of scanning your own network, who knows what you'll find?  And you're able to put in a range of IPs.  So you would put in 192.168.0.1 to 192.168.0.255 and tell it to do all ports on all 255 IPs, and press Go, and see what it chose.  I think people will have a lot of fun seeing what ports they find on devices that are open within their own network, sort of a cool exercise.



And I already mentioned at the top of the show that next week we would cover the DROWN attack, that's D-R-O-W-N, Decrypting RSA with Obsolete and Weakened eNcryption.  And then also the CacheBleed attack, which just happened today, so I haven't had any chance to look at it.



A couple miscellaneous things:  I did note with some sadness that SlySoft, that was the maker for I think a decade, since like maybe 2004, so that's more than a decade, who made AnyDVD, was shut down.  Actually, they became a little problematical for me a few weeks ago because the certificate they were signing their code with was no longer being accepted.  Probably it was an SHA-1 certificate, and they hadn't updated it.  But they had been under attack by essentially Hollywood.  And I haven't really had any occasion to use them for quite a while because I haven't had any need to rip my own DVDs.  But there were some occasions where I wanted to rip it in order to transfer it to an iPad if I was going to be traveling so that I could watch a movie, sort of like before the advent of everything now being available online as it is.



So it's not as big a loss as it would have been 10 years ago, when they began.  But I've always felt - and I know that, Leo, you're sympathetic - that material that we purchase and own for our own use, we should have access to use as we choose.  And so I certainly never used it for piracy, and I would never advocate it that way.  But anyway, we've lost really my favorite utility for doing that.



With all of the activity over the last couple weeks, I hadn't had a chance to mention where things stood with the Zeo, the EEG brainwave monitor.  So I just did want to mention that GRC's Zeo page has got a lot of updates over the last month with essentially user tips.  We ended up, this URT outlet company that purchased the surplus stock ended up selling more than 2,500.  They sold out all their auctions.  They sold out, that's the final 1,600-unit auction.  More than 2,500 of our listeners purchased these.  And I've been seeing tweets from people having a lot of fun with them and being glad to have the opportunity.



So I did want to make sure people knew to take a look at GRC.com/zeo.htm.  There's some more recent activity that I just haven't had a chance to add links to, and I will.  There is a Zeo CSV utility which its author has updated just recently, both in the Google Play Store and the Amazon App Store, which allows you to export your entire accumulated database in a comma-separated-value (CSV) file, which you can bring up in a spreadsheet.  Or there is something called the Zeo Viewer, which you can find if you just google it, and I will put links on GRC's page.  It's a Java-based application, so it's multiplatform, which gives you essentially much better viewing capabilities.



For one thing, the Zeo actually has five, or I'm sorry, has 30-second resolution of the sleep state you're in.  But the Zeo app only shows five minutes.  So this gives you, what, 10 times more slices, that is, that are in the CSV file, which the Zeo Viewer Java app, the Java application does show you.  So anyway, I will update the page the moment I'm through with the podcast, before I get back to working on SQRL, so that anyone hearing this can go check out the page if they want a little more flexibility.



LEO:  Do you want to talk about your cocktail yet?



STEVE:  Probably not yet.



LEO:  I'll just give you my results.  Steve has a little sleep cocktail, doesn't involve alcohol.  So first night I took the minimum dose that your friend's been taking, and nothing.



STEVE:  Right.



LEO:  Second night, I took your dose.  Whoa.  Yes, I slept soundly through the night.  And then I didn't take it last night, just to see, because I don't want to get dependent on it.  It's all just supplements.  It's not, I mean...



STEVE:  Well, actually it's all - I call it the "healthy sleep formula" because not only is sleep healthy, but all of the constituents are healthy.



LEO:  Okay, I'm going to trust you on that because I don't know.  Lisa said you should tell your doctor because it's like five different things.



STEVE:  It is.



LEO:  And I trust Steve.  He's a doctor.  He's like a doctor.



STEVE:  Well, I've done - I will - I've got to get SQRL back up and running.



LEO:  More important, much more important.



STEVE:  But I really, really, my sister had the same experience, Leo.  She and her husband both had the best night's sleep they've had, like, forever.  But I'm so excited.  So anyway, you said the second night, which would have been last night, you didn't take it.



LEO:  Yeah, and I didn't sleep well.  In fact, I slept worse.  So I'm just, I'm afraid.  I don't want to become dependent on this.  But I guess it's harmless to do so.



STEVE:  The reason you slept worse is that you had, I mean, is that there are many things that happen to us as we age.



LEO:  Yes.



STEVE:  Cortisol, the stress hormone, is one that becomes dysregulated.  So that first thing, the Seriphos, what that does is it simply sensitizes the - it's going to get too - it's going to get really deep in the weeds.



LEO:  And I don't know if we want to because I don't want to do this prematurely.  I think...



STEVE:  Yeah, I just, I cannot...



LEO:  You should save it for a time that you can do it right, you know.



STEVE:  I've got so much on my plate now.



LEO:  But let's just say this.  Steve has come up with something that really helps you sleep better.



STEVE:  Yeah.  A number of people in the newsgroup, I think everybody who's tried it in the newsgroup has, like, had the best sleep they've ever had.  It solved my problem.  It solved my friend's problem and my family's problem.  It's a collection of five available...



LEO:  Herbs and spices.



STEVE:  Yes.



LEO:  It's Colonel Gibson's Secret Formula.



STEVE:  Individually, they're either endogenous, that is, they're already in us and synthesized by our bodies, but you just need a little bit of a kick at the right time.



LEO:  It's melatonin and stuff like that; right?  It's not...



STEVE:  Yeah, exactly.  The one that isn't is L-theanine, which is the predominant, overwhelming, more than any other amino acid in green tea.  That's the relaxing component of green tea.  And so what I've been doing is, for the last - I've been working on this since October.  And I can't remove anything without it collapsing.  I haven't succeeded in reducing a dose without it collapsing.



LEO:  But now you have to take it every night.



STEVE:  Well, but the problem is - so the reason you slept worse is that, with such a fabulous night's sleep...



LEO:  I didn't need as much the next night.



STEVE:  ...the sleep pressure was reduced.



LEO:  Yes.  My sleep pressure was reduced.



STEVE:  Yes.  And so, yeah, I mean, I don't think, I mean, again, I'm a supplement taker.  I take six grams of Vitamin C.  I take a bunch of magnesium.  I take a whole bunch of things already.  And so I guess I'm - the idea of taking something to sleep doesn't put me off at all.



LEO:  It's like a little vitamin pill.



STEVE:  Yeah, exactly, it is a vitamin cocktail.  It's amino acids and phospholipids.



LEO:  If you just made a little shaker, and I could put it in my tea...



STEVE:  Well, actually Doctor's Best is just down here, like a stone's throw away from me.  And I'm thinking, if this thing ends up taking off, maybe we could get someone to formulate a...



LEO:  Doctor Steve's Secret Sleep Mixture.



STEVE:  Anyway, I'm so glad.  Thank you for letting me know that it worked for you.



LEO:  Yeah.  I'm going to be taking it tonight, I can tell you right now.



STEVE:  And let me tell you, one of the things that I want to have time to document is how important sleep is for health.



LEO:  Well, that I know, yeah, because I don't sleep well at all anymore.



STEVE:  For example, you should be much less hungry after a long night's sleep.



LEO:  Yeah, yeah.



STEVE:  Because leptin, which is the hormone that our adipose tissue produces, it does so while we sleep.  And growth hormone is released, which is very good for you.



LEO:  I don't want to grow.



STEVE:  And that's being released.



LEO:  I'm done growing.  I did enough growing sideways.



STEVE:  Anyway, thank you for letting me know.  I'm delighted.  I was...



LEO:  Yeah.  So at some point we'll reveal this secret formula to the world.  But we should point out Steve's not a physician.  You should ask your physician.



STEVE:  I'm just a health hobbyist.  And so far people are not getting sick during the wintertime because they're taking Vitamin D.



LEO:  Vitamin D, thank you.



STEVE:  And how many husbands and wives told you that they lost 50 pounds each after experimenting with no carbs?



LEO:  It almost killed me.  The ketosis almost killed me.  That one I might disagree on.  But the other stuff, fine.  The other stuff's good.



STEVE:  Cool.



LEO:  So I just wanted, I wanted to fill you in on that.



STEVE:  Thank you.



LEO:  Nice.  I got a mystery package, you know, from Steve, like a couple of days ago, with five vitamin bottles in it.



STEVE:  It arrived on Saturday.



LEO:  Yeah.



STEVE:  And I said, Leo, this is the healthy sleep formula.



LEO:  But I need your dosing because the mild dosing didn't seem to do anything.



STEVE:  Yeah.  Two of everything and one of the last.



LEO:  Your dosing, I just - I was out.  And as you said, when I woke up, I'd wake up and go right back to sleep.



STEVE:  That's the key, yes.  Because many of us will, see, sleep is inherently cyclic.  And so it may well be, you know, sometimes we wake up because we have bladder urgency.



LEO:  Yeah, I have to get up every night, you know.



STEVE:  Yeah.  And but what's cool is you wake up, and this, you're able to go back to sleep, rather than just being like, oh, I guess it's time to go visit my friends at Starbucks.



LEO:  Or worse, which most of us do, oh, where's my phone?  I want to spend a few hours staring into it.



STEVE:  Yeah, yeah.  Good, I'm so glad.



LEO:  Not good for your sleep at all.



STEVE:  So a real quick tip for anyone setting up Windows 7 systems.  As I mentioned, I don't remember if it was before we began recording or not.  But Greg's ThinkPad Lenovo, actually it might not have been a Lenovo, I think it's an IBM ThinkPad T60, which he's had for, I don't know, like 10 years, it's beginning to get a little wonky.  So he said, hey, you know, I really like this.  All the new laptops are flimsy.  What can we do?  So we got a couple refurbed ThinkPad T60, actually a T61 and a T61p, off of eBay for a couple hundred bucks.  And I said, you know, I'll put Win7 on them.  I pay Microsoft for the privilege, $2,500 a year to be a developer.  So I have licenses.



Oh, my lord.  What a challenge.  And here is what I learned.  This is the tip I wanted to pass to our listeners because I know there's a lot of people who are staying with 7 because they don't want to go to 8 or 10.  What's happened is Windows Update has changed a lot since the last service pack of Win7.  So when you're installing a new Windows 7 system, you're installing Windows 7 with Service Pack 1.  The problem is, even that is so old that it gets confused when you tell it to use Windows Update to bring the 250 things that have been updated since.



So what you have to do, and it doesn't seem to be - two systems, the big one I mentioned building recently, that didn't have a problem.  But the laptops, one was a 32-bit, and one was a 64-bit Win7.  They both got lost.  The secret is go and get the update to Windows Update manually off of Microsoft's site.  You can just - you can download it.  In fact, I downloaded it with my main Windows XP system, and Microsoft showed me a warning, wait a minute, you can't use this on this antique operating system you're using.



LEO:  How dare you, yeah.



STEVE:  And I said, I know, I know, just let me have it anyway.  So I got that after another fresh install of Windows 7.  Oh, and you have to take it off the Internet.  Don't let it touch the Internet because it'll start trying to sniff Windows Update and get confused.  So after it first boots, with it off the Internet, you manually install the update to Windows Update. That then brings it current, and then you can let it run from there.  So just a little tip, for those of us creaky old farts who refuse to go forward because, gee, Windows 7 works just fine.  It holds our files.  It runs our applications.



LEO:  It's still supported.  I mean, they haven't stopped supporting it, so you're okay.



STEVE:  Yeah, true, true.



LEO:  Soon.



STEVE:  I think I'm going to skip that one because I'm getting tired, and we're running out of time.  So I did want to mention SpinRite.  This is a fun story, another kind of a - the subject, "Oddball SpinRite Story," comes from Rick Harvey in Melbourne, Australia.  He said, "Hey, Steve and Leo.  Did you know that SpinRite can save your power bill?  Yes, this is bizarre.  But I'll let you try to work out why."  And actually I know why.  But he says:  "I have an old, sentimental testing laptop, a Dell Studio, that pretty much spends its day idle, sleeping between test runs.  But annoyingly, it's always running the fan.  Task manager shows the CPU barely getting off the baseline.  I've never even tried reinstalling the OS."  Oh, no, he says "I even tried reinstalling the OS.  No difference.  Just noise and heat.  Not so great during the summer.



"I bought a copy of SpinRite last year, just to support your show and give you the pleasure of a yabba dabba do.  So it finally occurred to me to give that machine a spin, also because I'm curious about your SpinRite powerhouse fitting into just 170K of code.  So I created a boot USB, and off SpinRite went on Level 4.  When it finished, everything was green.  I rebooted, and all was quiet.  Oh, my god.  No more fan running.  The icing was a comment by my wife, who hadn't realized the screen was blanked.  She quipped:  'So, you've finally turned off that heap of junk?'  Shhh.  Let's not tell her.  Awesome show, yada yada.  Best regards, Rick." 



LEO:  That's awesome.



STEVE:  And of course the reason is that SpinRite fixed the drive, and drives generate a lot of heat when they are - just by seeking.  The act of accelerating and decelerating the head, and moving around, having trouble, causes heat to be generated.  So it actually is very often the case that systems run cooler, and we hear this all the time, after you run SpinRite on them.



LEO:  Systems run cooler after SpinRite.  Just that's good, Steve.  We're getting some slogans here for you.  We're getting them all in order.  All right.  Let me get the questions, and we will start.  We haven't done one of these in a while. 



STEVE:  We haven't, I know, we've just been busy.



LEO:  A listener who shall remain nameless wanted to revisit browser containment, like a nuclear plant.  You want to contain it:  Hello, Steve.  Several months ago I heard an interesting tidbit on one of your episodes about using a browser inside a virtual machine to surf the web so that you wouldn't need add-ons such as NoScript to protect your host system.  This was also just after it was revealed that running a browser inside Sandboxie was not a viable alternative since it doesn't prevent the browser from reading potentially sensitive data from your disk and then sending it out to the Internet.  Dang it.  At the time, you were looking for a lightweight guest OS to run the browser in, and I believe you asked listeners for suggestions.  Did you ever find one?  What's your current solution for browsing the web?



STEVE:  So as I said earlier in the podcast, I would be referring to this question of the browser being the single largest problem that we have for security.  And we talk about this all the time.  We've, of course, famously in the past, NoScript was our solution for blocking scripting.  But as sites became increasingly dependent upon scripting to do anything at all, I found myself having to create so many exceptions to NoScript, allowing scripting on this site, allowing it on this site, that finally it's like, okay, this is, you know, not having scripting, while, yes, it's really strong security, unfortunately scripting has become as critical as HTML is to the way the Internet works.



LEO:  Yeah.  I was telling you that.



STEVE:  So then, yeah, so then uBlock Origin is sort of the next add-on that we came to, to at least deal with the non-native-to-a-site things, the third-party stuff that a site brings in, being somewhat intelligent, using curated lists of things that we want to not have the browser instantly go and get by default in order to further enhance security.  Sandboxie we've looked at, and this listener asked about, and also the idea of putting browsers in an entirely separate virtual machine.  The problem with Sandboxie is that it's still in the same OS.  And it's got that problem of people being very clever about working around the attempt to enclose it in some way.  I'm just - I'm concerned that the sandboxing isn't strong enough to count on.  And in fact what Sandboxie was explicitly doing was preventing anything from being written out of the sandbox into the OS.



But what we covered at the time was an exploit where the browser was reading from the OS and sending it off to the Internet.  So it's like, whoops.  Here's a different exploit.  So suddenly it's not that we want to prevent something from modifying the operating system, we want it blinded to the operating system.  So then I think where we go is a virtual machine.  And one of the problems I have, and this is just me because I'm still running a 32-bit OS, is Windows only gives me access to 3GB of the address space, the 4GB address space.  And the various OSes and VMs take up enough of that RAM that it's uncomfortable to try to do a lot of other things at the same time.



My new system has 64GB of RAM, and I went crazy with RAM specifically so that I could have multiple virtual machines, give them each 4GB and still have lots of RAM available, although I don't intend to use that as a browser solution.  I do think that a more formal virtual machine which by default creates containment around the browser, that both read and write access makes the most sense.  But you still need then a means for moving things in and out of that container, that is, when you want to, because we're downloading things from the Internet all the time.  They're going to be in that virtual machine until we move them out.  So I don't have a good solution.  We've looked at a ton of different solutions through the years.



LEO:  There's Qubes.  Have you ever looked at Qubes OS?  I mean, it's a non-Windows OS, but...



STEVE:  Right.  I have, and it's not clear whether it would be a host of Windows and others.  I mean, I guess I'm looking for something more lightweight, something easy to add, rather than, like, changing the fundamental architecture of the whole system.



LEO:  Yeah, I mean Qubes, it's my impression that Qubes sandboxes every process entire.  I mean, it's just...



STEVE:  And that's of course Joanna's project, whom we've talked about a lot, Rutkowska, I think it is.



LEO:  Rutkowska, yeah, yeah, I think so, yeah.



STEVE:  Yeah.  And she's continued to...



LEO:  You know, this is an obvious avenue, and there's a lot of interesting work being done.  I've been putting Tails, which is a secure Linux, on a USB key.  Or better yet, put it on something that's not writeable, like a CD.  It's pretty small, and you can boot to it.  And I don't think - I think you can make it so it doesn't have access to the internal hard drive.  And then, you know, but again, it's always security versus convenience, isn't it.



STEVE:  Right.  Well, and I forgot to mention one thing that I am doing, and that is I am using DropMyRights.



LEO:  Ah, good idea, yeah.



STEVE:  Whenever I launch Firefox - which is still my go-to browser, mostly because it lets me have 400 tabs open.  But when I launch DropMyRights, I'm actually executing DropMyRights through a shortcut which then launches Firefox, the Firefox process, with reduced rights.  So if something misbehaved, it would have lower rights on the system.  And exactly as we were talking about at the top of the show, what you really want is the process to have as few rights as it can possibly get away with.  So that really is a good option for browsers running in an environment that have more rights than they need.  Running through DropMyRights can give you a lot of security.



LEO:  Yeah.  Wes, New Jersey, corners Steve - oh, seems like a bad idea, this man's had a good night's sleep, I'd be careful - with a terrific HTTPS man-in-the-middle conundrum.  I'm sorry, I lost my confidence for a moment.  Steve, I recently started listening to your show, and I thoroughly enjoy it.  It helps me keep up on what's happening in IT security and perform my job better.  I am a systems engineer for a managed service provider.  Network security is a big part of my job.



Something you brought up in Listener Feedback #227 left me with an uneasy feeling.  You were discussing how Firefox was having issues with man-in-the-middle proxies issuing SHA-1 certificates.  As we know, these devices are used to break HTTPS connections to allow the inspection of their traffic for malware and other blights.  You stated you'd no longer like to see these devices used.



Yet the very next topic you brought up was attackers now using HTTPS sites to host malware.  Secure sites for malware.  We've set up these devices in the past, and they can be configured to bypass banking and other sites where personal security is a must.  If you don't believe these devices should be used, what do you recommend as protection against malware hosted on secure sites?



STEVE:  So as I said, it's a great question...



LEO:  Good point, yeah.



STEVE:  ...that I really do feel sort of corners me.  And so here's the answer.  The world is going HTTPS.  Corporate networks have, I think, a defensible right to break users' security, that is, break the connection security for traffic inspection.  And this puts us back to the discussion we have traditionally had earlier about just the idea of what employees of a corporate network have a right to expect in terms of privacy using that network.  And we've talked about companies sticking a label across the top of the monitor, reminding them that they're using corporate property on a corporate property network and corporate property bandwidth, so behave accordingly.  So I think where we're going to end up is that these devices, these appliances, are going to be used.  Users in a corporate setting have to then be aware of that and alter their behavior, if they choose, with that awareness, not to do things which are sensitive.



LEO:  Like your banking.



STEVE:  Exactly.  Do it at home.  Wait, you know, wait till you're not on somebody else's computer, by definition your employer's computer, using your employer's network and your employer's bandwidth.  It has to be recognized that, for the legitimate needs of corporate security, the traffic is going to be inspected.  And so be aware of it, and then modify your behavior.  I think that's the right answer.



LEO:  There you go.  Because, I mean, he makes a great point.  It's completely legitimate that they should be monitoring that kind of activity.  They have a right and a duty to protect their network.



STEVE:  Yup.



LEO:  Matt in London shares his secure, uh-oh, two-router solution:  I've placed my guest network behind my safe network, as you suggested, so I can sniff the traffic of my guest network from my safe network.  My safe network is protected by the various attacks you noted because my interior guest network router blocks all outbound traffic except TCP 80 and TCP 443.  That's HTTP and HTTPS.  So no scan of the middle network is possible except for those two ports.  Ping and traceroute, not possible.  ICMP is not permitted.  And as you have noted, ARP does not cross IP routers.  Wow, there's a lot of acronyms in there.



STEVE:  And that's actually a very clever solution.  So what he's done hadn't even occurred to me because I was being so absolutist about this.  To the degree that Internet of Things (IoT) devices use port 80 and 443, that is, if they are using HTTP and HTTPS, and I haven't looked, but I'll bet most of them do because those are always available as safe ways of getting out to the Internet.  Browsing is like, if there's any set of services, it's your web browser.  Even if you can't use your email because your ISP is blocking port 25, you can use browser-based mail like Gmail, for example.  But the browser always gets out.



And so, if our IoT devices are using HTTP or HTTPS, and if the interior router has the provision, and you'd have to make sure - and I meant to fire up a blue box, a Netgear router or some standard $40 consumer router, to see because I'm not sure, I haven't looked for a while, what class of routers or how available explicit port blocking, basically you're setting firewall rules, not for what's coming in, but for what's allowed out.  So you'd have to have a router that gave you the ability to block all outbound traffic except traffic going to port 80 and 443.



The reason that's so clever is that most users on their middle network, their safe network, aren't going to be running web servers.  So they probably don't have any vulnerability there.  And you've constrained the possibly worrisome IoT network only to have access to web servers.  Which means that nothing in there can scan your network or get up to any mischief.



So anyway, Matt in London, that's a clever solution.  It does require a router that provides a kind of firewall which is, I think, less common, which is not inbound blocking, but outbound traffic blocking.  But if you've got that, turn off ICMP, block everything except 80 and 443, and see if your light bulbs still work, and other stuff still works.



LEO:  So IoT devices usually just use port 80 or 443.



STEVE:  Yeah, yeah.  And so I think this is...



LEO:  They're not using some special protocol.



STEVE:  I think this is so - it's so clever, is that, by tightly constraining what the interior possibly insecure network can do, it can live inside the network you really care about and not get up to any mischief.



LEO:  Very interesting.  Well, I've put this up on the screen so people can take a picture of it and figure it out for themselves.  Debra B. in Cincinnati wonders where, Steve, do we draw the line?  When you talk about Internet of Things (IoT) security and the need to create isolated networks for the higher risk, cloud-connected devices, should I include my AV equipment, my Smart Blu-ray player?  Yeah, my AV receiver goes online.  Anything.  TV.  Anything that goes online.  Or is this an issue mostly for the inexpensive stuff?  Or where do I draw the line?  Does that include Roku?



STEVE:  So, okay.  There isn't any hard-and-fast rule.  I would say, if you don't need to connect to it, then let it go on, stick it over on the IoT network.  For example, certainly the Roku needs the Internet.  But all it needs to be able to do is get out and connect to the Internet.  So unless, for example, you're using it to stream to other devices inside your primary network, your secure network, then, yeah, stick it on the IoT network.



So I guess where we draw the line is that it is better to put those things on the insecure IoT network than not.  So if they work there, leave them there.  And if you need something from them, or they don't work there, then bring them into your main network.  So it's sort of like you've got two places they can go.  If they can run over in the sequestered safe zone off of your main network, put them over there.  Smart Blu-ray player, probably perfect place for it.  Roku, probably the same thing.  Light bulbs, definitely.



LEO:  Very interesting.  Moving on to Question 5, this is a long one.  Buckle your seatbelts:  Kris Chaplin, High Wycombe, United Kingdom wonders where he should put his NAS drive?  Hello, Steve.  Thank you and Leo for many years of Security Now!.  I have enjoyed many a deep dive propeller episode over the years, and I've been fortunate enough to visit Leo, both at the Cottage and the Brick House.  Thanks for your hospitality!  Well, you're welcome.  Thank you, Kris.  Your podcasts have also been a worthy weapon in threatening my kids to go to sleep in the evening.  For them there is nothing worse than being subjected to your informative podcasts, and they have been known to fake sleep just to get me and my iPhone to leave the area.



STEVE:  Oh, I love that.  I think that's so funny.



LEO:  Here's a little bedtime story, kids.



STEVE:  The Security Now! sleeping pill.  Threaten your children with listening to us.



LEO:  Yes.  I recently purchased a 3TB Western Digital "My Cloud" NAS hard drive, which I am using as a local backup for my Mac as well as a DLNA server for our smart TV.  I've turned off all external access, as that just sends shivers down my spine.  Hopefully that and being behind a NAT router is enough to provide reasonable security for our files.  I hate to think of the bit-density of that beast of a drive - yeah, 3TB, and how many platters, five, three, four?



STEVE:  Not enough.



LEO:  And I haven't cracked it open yet to see the interface should I need to transplant it into a PC should SpinRite ever need to be used.  Hopefully not, but you never know.  I have a bit of a fun/odd question for you regarding the location of my backup drive.  In an ideal world, I'll be following the 3-2-1 backup strategy - I mention that all the time, that's a Leo, not a Steve, but I'm sure you agree - the idea of having three different copies of everything on two different forms of media, one of them offsite.  Indeed a lot of my data is backed up in the cloud.  However, some data is just too big and cumbersome to do this with.  Yeah, I could store this offsite and should do so.  I'll slap my wrists in advance of you reading this and promise to sort it out before I suffer catastrophic data loss.  If someone would be kind enough to let me know just before this happens, I would be obliged.



STEVE:  Yeah.



LEO:  I have CAT5e throughout the house - yes, I'm the typical geek you've acquired through episodes of Security Now! - and as such I have a lot of flexibility in the location of my NAS.  This has led me to wonder where in the house is the best place to put it?  One possible location would be up in the attic - the "loft," as he says.  This would have the benefit of being a nice cool space, no disruption, and potentially the last place to catch on fire.  Hmm.  Out of sight, out of mind.  I'm also aware that, if it starts making nasty "I'm about to die" noises, I won't hear them.  



Another idea is on a shelf right next to the front door.  Yeah, I've even got a socket there.  Man, he's really thinking ahead.  This would have the benefit of grabability should we be in the house when said catastrophe happens.  I could pick up our data on the dash out of the door.  But then, so could a thief.  The final place, I could put this is in "mission control," where all the networking cables aggregate.  This is in the small brick cupboard next to the heating boiler, so I think I'll rule that one out as not a good idea.



Is there an ideal place to put a NAS hard drive in a house for the best chance of longevity?  Also, the casing stands the drive vertically.  Do you have any preference to how the drives should be oriented, vertical or horizontal?  Or does it not matter?  Many thanks and regards, Kris Chaplin, proud SpinRite owner, FPGA SoC expert, and general unscrewer of things that are not yet broken.  A true geek, in other words.



STEVE:  Okay.  So it's funny, when I first started to read this, it's like, where should I put my NAS drive, I thought he meant, like, where to connect it in the network.  And then I realized, oh, no.  Like above the fireplace? 



LEO:  Where in the house, yeah.



STEVE:  Yeah, exactly.  So, okay.  Last thing first.  Drives that are standing on end always make me twitchy.  So absolutely lay it down flat because then it can't fall over.



LEO:  Is that the only reason?  It doesn't have to do with the sideways drive, thought; right?



STEVE:  No.  And in fact...



LEO:  Although I've heard you should format it in the orientation it's going to live in for some reason.  I guess that would...



STEVE:  Yeah, once upon a time.  But now we've got servo tracks, and so that compensates for any bias.  And the drives are carefully designed by the manufacturers to have no gravity bias.  They don't - you don't want to run them, like, longwise up and down.  But whether they are flat or vertical, they don't care.



LEO:  Good to know. 



STEVE:  And so, but while it's vertical, it could always go flat.  And that wouldn't - the drive would not like the bump when that happened.



LEO:  If it has a good stand, it may not matter.



STEVE:  Well, yeah.  And so the first thing is I would say, given a choice, horizontal, so there's nowhere for it to fall to.  And then, secondly, probably nothing is more important than temperature.  Of every other factor, you want it to be in a cool place.  And I worry a little bit about these external drives and their fans because manufacturers try to have them be silent and try to, like, let them be convection cooled, or maybe just use an aluminum housing where the housing will hopefully be kept cool.  So if there's anywhere to put it with a breeze, that would be really good because you really want to take the heat off the drive.  And as for not being able to hear it, I think that's secondary.



What you should be attuned to, wherever you put it, is it seeming to be slower in its response?  That's the sign, I mean, what we're seeing is drives slowing down is like the pre-SpinRite phase, where someone says, well, you know, the computer's booting a lot slower.  They run SpinRite, now it boots fast.  Similarly, when these media drives start to slow down, you know, I've been using TiVos for years.  And they have big drives in them.  And when you start pressing the button, and it takes a while for it to do something, and it didn't used to take a while, almost invariably, if you stick your ear on the case, you'll hear [screeching].  And that's, again, time for SpinRite.



So I would say make it so it can't fall over.  If there's any way to give it the lowest temperature environment, hopefully with some air flow around it to take away the hot air that it has heated up and bring in new cool air, and then, thirdly, rather than listening to it because, I mean, you really have to have your ear on it in order to hear anything, I would just be attuned to the performance of the drive, which you'll be able to sense through the network if, like, you know, if your show that you're playing back starts to stutter.  It's like, uh, whoopsie, you know, unless Junior is playing some high-bandwidth online game at the same time, thus bogging the network down, it could be the drive that's giving you some early signs of trouble.



LEO:  Good to know.  William Burlingame in Huntsville, Alabama wonders about firewall subscriptions:  My son-in-law is a partner in a two-doctor family medical practice in a small rural Alabama town.  Their previous IT consultant had them buy a Sonic firewall unit.  The unit came with a two-year subscription that has since expired.  They hired a new consultant who was concerned that the subscription was no longer up to date.  Why should there be a charge for updates, Steven?  It doesn't seem to me that firewalls have the same problems that antivirus programs have.  If an update for a firewall is needed, I assume they have a bug in their firmware.  Bugs should not require a fee to correct.  My question is, is it a catastrophic problem if they don't keep their subscription up to date?



STEVE:  You know, this reminds me.  Anyone who has trademarks, I'm sure you have seen this, Leo, you get letters in the mail from bogus companies, telling you that your trademark is due to expire.



LEO:  Yeah, but we can help.



STEVE:  Yeah, send $860 to this address, and we will renew your trademark.  This strikes me as old-school.  Once upon a time a firewall was like, ooh, do you have a firewall?



LEO:  Fancy.



STEVE:  Yeah.  Is it big?  Is it painted red?  Yeah.  I think William's intuition, listening to the podcast, is right.  I'm sure that Sonic would love to have an ongoing subscription...



LEO:  All of them do this, by the way.  Everybody does this.



STEVE:  Yes.



LEO:  And we pay them.  We pay the fees on ours.



STEVE:  Okay.  Now, if it's also doing malware and virus mitigation...



LEO:  Which it is; right.



STEVE:  ...and filtering, then certainly you need to pay in order to get that service.  And, for example, Astaro, who was an early sponsor of the show, you could do that, or you could use the free one.  And so my sense is, if it's just a firewall, they will still try to get license fees from you, I mean, because, hey, maybe you'll send them a check.  Why not?  It doesn't hurt to ask; right?



But, no.  If it's not doing AV stuff, then - well, and the other thing is, remember that once upon a time a non-TLS intercepting firewall could inspect traffic.  If this has been around for a while, it's not even able to see the traffic going by any longer.  So it can't filter it unless all of your machines have its certificate, and it's signing and impersonating the websites on your behalf, which is unlikely.  Which means it's probably useless even if it was doing AV stuff because nothing's in the clear anymore.  So, I mean, I don't want to give a blanket prescription without knowing all the details.  But my intuition says, eh, Sonic would love to get a check from you.  And it probably does you absolutely no good whatsoever.



LEO:  Wow.  All right.  I'm going to go talk to Russell right now, say stop writing those checks.  Emily in Reno, Nevada wonders how IPv6 figures into the IoT NAT routing thing?  You know what I'm talking about.  Steve, over on the TWiET podcast - that's Father Robert Ballecer's Enterprise Tech podcast - there was a lot of talk about IPv6 actually starting to come to life on the Internet.  I think you mentioned 10%, right, of the Internet is using IPv6.  But I'm wondering if you could explain how IPv6 and our security reliance on NAT will play out.



It seems that with IPv6 the concept of NAT may be going away because of the huge number of available addresses.  I know that NAT was originally designed to help mitigate IPv4 address exhaustion, but now we rely on it for security, as well.  Will every IoT device eventually have its own public IPv6 address? That seems like an awful idea.  Please help explain what we should expect with IPv6, IoT, and NAT.



STEVE:  So it's a really good question.  I've already seen some discussion of NAT routers not NAT'ing IPv6, that is, for IPv4 they provide the standard NAT and local DHCP.  For IPv6, they pass it through.  So if a device gets an IPv6 address, it's getting it from the ISP rather than from your local device.  Meaning that, in fact, routers are not routing any longer, essentially.  They're just bridging the ISP's network into your network and not providing any of the security that we're traditionally used to having.  That's a horrifying idea.



LEO:  Yeah.



STEVE:  So we're in the early days.  But what we really need is not necessarily NAT, but what used to be called like a "stateful firewall."  We went through a phase, remember, when the NAT routers were boasting that they did deep packet inspection or stateful inspection.  And it was like, what?  It's a NAT.  Of course it's stateful.  And you don't need anything more than that.  So even if this thing, I'm not sure what we're going to call it because it's not a NAT, and it's not really a router.  So we're stuck.  We're going to need a new term of art here.  But this thing that you have in your house that is running on IPv6, it will presumably have the ISP allocating per device IPv6 IPs because you get a block of, typically, a 16-bit block.  Maybe it'll do it locally.  I mean, a lot of this is unclear.  But this idea...



LEO:  Do you think it'll ever happen?  I mean, are we preparing for something that's never going to happen?



STEVE:  Yeah.  Where are we?  We're at Episode 549.  Before we reach three or four digits, I don't know, Leo.  I don't know.



LEO:  I mean, we've got ISP route NAT now, which is kind of eliminating some of that crazed fear.  I just wonder, you know?



STEVE:  Well, our OSes all have IPv6 stacks in them now.



LEO:  Yes, yes, yes.  We're ready.



STEVE:  So if you were to put - yes, exactly.  If you were to use a NAT router that was IPv6-aware, and your ISP responded to IPv6 DHCP, that is, if it was provisioning IPv6 on that connection, it would presumably come up and run.  And so the concern is, are we then relying on our OS's firewall?  The good news is Microsoft finally turned them on by default.  And the Mac's is on, I think the Mac's is on by default.  It must be.



LEO:  No, 'tis not.



STEVE:  I'm glad I asked, yeah, so it isn't. 



LEO:  Nope.



STEVE:  Ugh.  So, yeah, we need border security.  We need something which is stateful, meaning that it sees something outbound to a certain IPv6 address.  And it then allows return data from that IPv6 address back to the same IPv6 internal address that generated that mapping in the table.  Essentially, NAT without NAT.  I mean, no translation, but a stateful firewall is what this would be.  And we've never had the need for it before, but we need it now.  I mean, certainly the OS firewall provides that.  But I would - I'm belt and suspenders in this case.  The appliance on the border, it should not allow random scans of, like from Shodan, of the IPv6 known allocated ISP space to penetrate people's LANs and just be poking around at their light bulbs.  That just seems like a bad idea.



LEO:  There are security benefits to IPv6, though; right?



STEVE:  Well, I mean...



LEO:  Like for instance the DDoSing that we're experiencing.  If we were on an IPv6 network, could you do raw sockets?  Could that spoofing still happen?



STEVE:  Yeah.



LEO:  It could.



STEVE:  Yeah.  So spoofing still happens.  You have a known address.  One argument is that scanning the 'Net becomes more difficult because you've got way more than just four billion IPs, as you have in IPv4.  On the other hand, the ranges of IPv6 space, which ISPs would be known to be allocating, that would be known.  All users contacting websites through their IPv6 address would have their IPv6 address known to the website.  So these are secrets that cannot be kept.  There is no way to keep your address secret, whether it's IPv4 or IPv6, because it's the address that is the way that...



LEO:  That's how you talk.  That's your name.



STEVE:  That's how you get found on the Internet.



LEO:  Yeah.



STEVE:  Yeah.  There are other, you know, once it really begins to happen, we'll do a series of podcasts on IPv6 because, for example, IPSec security is built in, instead of being a layer added afterwards.



LEO:  Oh, that's nice, yeah.



STEVE:  And there are a lot of good things that have been done with the move from v4 to v6.  Which will happen, or will be good if they happen.  So, but, boy...



LEO:  Episode 1000 we'll be covering that.



STEVE:  That's right.  That'll be the commemorative IPv6 episode.



LEO:  Remember IPv4?  What was that, Grandpa?  Oh, you don't want to know.



STEVE:  So simple, I actually knew what my IP address was.



LEO:  I knew it.  It was only a dotted quad.  Bill Russell, no, I'm sorry, I was thinking basketball.  Bill Rakosnik near Athens, Georgia wonders about configuring DHCP for three dumb routers.  Be a great TV show, my three routers:  I don't have any formal computer network training.  Almost everything I know about computers I've learned from shows like yours and research on the 'Net.  Long ago, after you first mentioned it, I experimented with your three dumb router method.  However, it didn't just work out of the box.



After reading some more online, I don't remember exactly where, I turned off DHCP on the two interior routers connected to the primary outside-facing router, and then manually assigned IP addresses to the two interior routers.  Once I did this, it did work. By doing this, I believe only the primary router is responsible for assigning IP addresses on the entire LAN.  However, I also suspect I'm not getting the security benefits of the three dumb routers.  Or as we call it now, "Steve Gibson's Three Dumb Routers."  Is that the case?



If that's the case, why didn't it work with DHCP turned on?  To get the benefits of three dumb routers, do we have to leave DHCP on and configure each router to be responsible for its own separate segment of IP addresses?  By turning off DHCP have I essentially turned my secondary routers into dumb switches?  If not, what is the difference between a router and a switch?  I've always been surprised that my secondary routers have IP addresses, but switches do not.



STEVE:  Okay.  So I'm responsible for leaving out that important detail when we talked about three dumb routers.  I didn't want to overwhelm our listeners.  I felt there was already - we were talking about ARP spoofing and ARP broadcasts and ARP not going across routing and bridging and all of this.  And I thought, okay, you know, enough for one podcast.



The problem, and I did touch on it later, and I want to make sure because I've seen some more confusion about this, the problem that Bill had, which he solved by turning off DHCP for the router, the interior routers being assigned the WAN IP, is that, as I did mention, we essentially have three networks.  We have the network which connects the three routers together, and then we have each of the networks behind the two interior networks.



What is critical is that the IP addresses of those networks, the network IPs, be separate because the router, what it routes is it inherently routes between differently numbered networks.  So 192.168.0.1, like from 0.1 to 0.255 would be one network; then another one would be numbered 192.168.1.1 to 1.255; and the third one, 192.168.2.1 to 2.255.  The idea being that the networks cannot overlap their address space.  That way all the routers know whether the packets are moving around in their own network or whether they're bound for a different network.  And if they're bound for a different network, that's when they send them through the router out to the other side.



So the problem with DHCP is it wasn't designed for the three dumb router mode.  And it might have been that the main exterior router was assigning IPs to the interior routers' WAN ports that were the same network as those routers were assigning to their interior WANs, I mean their interior LANs.  And if that was the case, they would have been confused because they wouldn't have known to send packets out into the world because the network on both sides would have the same numbering.  They need to be differently numbered.  Then the router knows, oh, this packet goes over there, this one on the inside goes on the outside, and so forth.



So, Bill, to answer your explicit question, that's why it didn't work, why doing what you did fixed it, and your security is perfect.  None of this dumbed down your routers or turned them into switches.  It just allowed them to know where to send the packets, which is the part that was missing because it probably had LAN numbering that was colliding.  And so just giving them their separate, each one, each of the three networks separately numbered eliminates all confusion.



LEO:  Some routers, like Apple routers, use 10-dot.  And then Linksys and others use 192.  Those two shouldn't have a problem; right?  They can tell the difference.



STEVE:  Correct.  You could completely use, like, the other - there are three, what is it, RFC-1937, 1937?  There's an RFC that...



LEO:  Private address.  Private addresses.



STEVE:  Exactly, that lays out the nonroutable, the three now-nonroutable addresses.  I use 10-dot both at GRC's internal network and here at home, and then have subnets within that.



LEO:  Too bad there's not one more unroutable subnet.  Then you wouldn't have to worry about this.



STEVE:  Well, the problem is...



LEO:  Used to be 5.5, right, but you can't use that anymore.



STEVE:  The question is what do the routers default to.  So if the hardware routers themselves use 192.168, and as far as I know they all do...



LEO:  Supposed to, yeah.



STEVE:  Yeah, then you're going to have a collision, and you're going to need to step in and do a little manual overriding.



LEO:  Right, right.  Jim in Chicago, a great tip for security-conscious Chrome users:  In Show 486 - 486, that was a long time ago - you covered how Google proposed that web browsers "change their user interface to display nonsecure origins as affirmatively nonsecure."  I think they did this.  They were planning to do it.



I'm unsure when Google added this to Chrome, but it is currently available.  At the moment it's disabled.  Oh, I didn't know that.  However, it's very easy to turn it on.  In the address bar, enter the following, chrome://flags, and then search for a setting named "Mark nonsecure origins as nonsecure," and restart Chrome.  And now, whenever you go to a website that's using a nonsecure connection, you'll get a red "X" in the address bar.  You're going to get that soon enough, I think.  I think that's the intent.  I thought your listeners would appreciate this tip.  Keep up the great work.  P.S.:  Looking forward to the next season of "Mr. Robot" and "The Expanse."  Jim.



STEVE:  So anyway, I just wanted to share that tip.  Right now I think maybe is it a little - maybe there's no marking at all on non-HTTPS.  I know Chrome complains all kinds of ways about HTTPS certificates it is not completely enamored with.  But what this would do is, you know, this would really bring to your attention that this site you were on was HTTP.  And so this is like, again, Google staging their security.  But I kind of like it as just to - as long as you know that it doesn't mean anything is wrong.  The problem would be, and this is why it's not enabled yet by default, is it would scare lots of people, who would think, oh, my god, a red "X," you know, run away, run away.  But our listeners know enough to, if they turn it on, it's helping them notice that this is not HTTPS.  Which is fine within the limits of what behavior you're asking for from the site.



LEO:  Right. 



STEVE:  Nice tip.  



LEO:  Good tip.  One more.  You ready?  Oh, no, I lied.  Few more, but they're short.



STEVE:  Yup.



LEO:  Neal Fildes near Cincinnati, Ohio wonders about ShieldsUP! for IPv6.  Have you considered it?



STEVE:  So, yeah, I've mentioned it a couple times, but lots of people are asking.  And I will tell you very honestly, and everybody who's waiting for SpinRite 6.1 will be glad to know, that I will spend no time on ShieldsUP! for IPv6 until SpinRite 6.1 is in everyone's hot little hands.



LEO:  And then...



STEVE:  But I absolutely look forward to doing it.  There's nothing I would like more except getting SpinRite out the door.  So yes, in the future, no commitment.  You've got to know by now that I can't commit to when.  But it's definitely on the list of things that I think would be fun to do.



LEO:  Good.  And Paul Erskine (@paulerskine) tweets this question:  @SGgrc Like DVD players, keys to open iPhone are in device, no?  I think - this is a tweet, that's why there's missing words - think one could physically access Secure Enclave with expensive tools?



STEVE:  And so I thought this was an interesting point.  Paul was asking, he said, you know, we've often talked about how DVD players are inherently unsecurable because they need to be able to decrypt the DVD.



LEO:  Yeah.



STEVE:  What Paul is missing is that the DVD player is not asking its user to provide a secret that it doesn't have.  That is, it's able, and it's not having to go out and contact the Internet to get it or do anything else.  Internally, all by itself, it knows how to display the images of the DVD.  So it is impossible to protect it.



Where the phone is different is it is relying on information the user provides that it doesn't have.  So that's an important distinction to make is that the iPhone, and this of course is why the only thing the FBI can do in this case is guess.  It's asking Apple to make it feasible to brute-force guess every possible passcode until they find the one that works.



LEO:  Finally, the bonus question.  Jason's subject line caught your eye, Steve?  It would have caught mine:  You would love my wife's legs.



STEVE:  It was sitting there in my email.  I thought, wait a minute.



LEO:  Uh-oh, spam.



STEVE:  I mean, and it's surrounded by "When are you going support IPv6 on SpinRite?"  And there's, "You would love my wife's legs."  And I thought, what?



LEO:  Uh-oh, what?  Well, it turns out he's talking about Harry's:  I purchased a Harry's razor a few years ago based on your testimonial.  I love it, works great on my bald head.  Now, my wife had been shaving her legs with rusty butter knives for years, so I offered her a fresh Harry's blade to try.  She loved it, and now that's what we both use.  Thank you.  Her legs are more amazing than ever.  She begrudgingly credits you for it, but she still won't let me listen to you guys around the house.  She says you sound like Charlie Brown's teacher.  Remember the teacher?  "Wa wa wa wa wa, wa wa wa wa wa, wa wa wa wa."  You guys are the best.  Thanks so much.  Listening for years.  SpinRite.  TLDR.  And, if you read this on the air, please tell my wife, Grace - Grace? - how bad of an idea it is to log into her email on a public computer in a hotel lobby.



STEVE:  [Crosstalk]



LEO:  But she's got great legs.  No?  Shouldn't do that?



STEVE:  Yeah.  Good legs, but bad security practices.  Nothing worse you could do.



LEO:  Really.



STEVE:  Nothing worse.



LEO:  The worst.



STEVE:  Listen to your husband Jason.  You trusted him with his razor, now trust him with the security advice.



LEO:  There is a reason why all that "wa wa wa" has been going on in your house for so long.



STEVE:  That's right.



LEO:  So that he could learn these things and protect you.  Steve, what a fun show.  As always, a great pleasure.  You can catch Steve on his newly functional website.  I shouldn't - I don't even want to say anything.  GRC.com.  That's where he stores, not only all that great stuff, SpinRite, the world's best hard drive maintenance and recovery utility, all the freebies he gives away, all the passwords and everything, and SQRL is going to be there.  But it's also where he puts 16Kb versions and 64Kb MP3s of the show.  He puts really nice transcripts that Elaine Farris writes for us.  And so you can see it all there, GRC.com.  We, on our site, TWiT.tv/sn, have audio and video of the show.  It's great to look at Steve's happy face.  And, by the way, he has great legs.  Well, they're well shaven.



STEVE:  No.



LEO:  No.  Let's not talk about it.  I have no knowledge.  I have no knowledge of the subject.  But TWiT.tv/sn or, you know what, it's everywhere, on all the Internet stuff, including YouTube and all the podcatchers, and of course our free apps everywhere, and paid apps everywhere, and it's just - it's all out there.  Just get a TWiT app and listen and subscribe because you don't want to miss a single one of these.  They're all valuable.  Save them.  Save them.  Because it's really, it's an education in a box.



STEVE:  And there is some neat news happening later this month.  We're getting a direct flight between my airport and your airport.



LEO:  What?



STEVE:  Which makes it much easier for me to come up and play.



LEO:  That is good news, or for us to do the same.  That's great.  Yeah, we have to fly to LAX when we leave Santa Rosa now.



STEVE:  Right, right.



LEO:  But if we can go - what is your airport?



STEVE:  They call it, unfortunately...



LEO:  John Wayne?



STEVE:  Yours is - mine is John Wayne, and yours is Charlie Brown or something.



LEO:  Yeah, Charles Schultz.



STEVE:  Charles Schultz.



LEO:  The creator of Charlie Brown of "Peanuts" is from Santa Rosa, yeah.



STEVE:  Yeah.  So we'll go from the John Wayne to the Charles Schultz.



LEO:  So that's nice because it's half an hour from here.  It's easy parking.



STEVE:  Yeah, I mean, the problem is it's just so difficult for me to get up to Petaluma.



LEO:  I'd love to see more of you.



STEVE:  And so you're going to be seeing more of me.



LEO:  That would be - I'll tell Lisa.  She'll be thrilled.  And we'll start stocking up the cabernet.



STEVE:  Yeah, I can't carry it onboard, unfortunately.



LEO:  No, no, that would be coals to Newcastle.  You're coming to Sonoma and Napa.



STEVE:  Ah.



LEO:  Right?



STEVE:  Got it.



LEO:  Thank you, Steve.  We will see you next time.  Every Tuesday, 1:30 Pacific, 4:30 Eastern, Security Now!.  Take care.



STEVE:  Bye.  



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.










GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#550

DATE:		March 8, 2016

TITLE:		CacheBleed

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-550.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss an event-filled week of security news (with some comic relief courtesy of John McAfee on the Apple conflict), after which we examine the latest side-channel attack, which is effective even against carefully written crypto code designed to thwart side-channel attacks.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  Lots to talk about.  He's finally going to break his silence about John McAfee.  And then we'll look at an academic security flaw called CacheBleed.  It's probably not something you need to worry about too much, but it is fascinating.  Also quantum computing, how soon?  It's all next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 550, recorded Tuesday, March 8th, 2016:  CacheBleed.



It's time for Security Now!, the show where we talk about all the latest security news.  We help protect you.  We help you understand what's going on.  And really that's almost the most important role that this guy plays, the Explainer in Chief, Steve Gibson.  Hi, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be with you again for Episode 550.



LEO:  Wow.  



STEVE:  Like those round numbers.  Now, 555, that'll be another good one.  And then there'll be 567.  And, okay, I'm done.  Then probably nothing really of interest until a thousand.



LEO:  I think we should - we missed a bet.  We should have numbered the show, well, you always wanted to start at zero.  But I think we should have done it in hexadecimal.



STEVE:  Ooh, that would have been good.



LEO:  Wouldn't it have been fun?



STEVE:  That would have scrambled up some people.



LEO:  Nobody would - what, FF?



STEVE:  Wait a minute.  ADAB2?  What?  What?



LEO:  Chatroom, what is 550 in hex?  Somebody's got a hex calculator there sitting around.  It would be kind of fun.



STEVE:  Yeah.  So it'll be a one, eight...



LEO:  He's doing hex in his head, folks.



STEVE:  I can, but of course I've got a hex calculator within reaching distance.  I didn't want to cheat, though.  Decimal 550 is hex, oh, 226.



LEO:  226.  Chickenhead got it, 226.  Yeah, that would confuse the hell out of people.



STEVE:  Yeah.  Especially when - then it goes to 22B, and they're like, wait.



LEO:  What?



STEVE:  Where's A?  Well, A was in front of B, but then C and D and F.



LEO:  Yeah, we can't really do that.



STEVE:  22E.  What?



LEO:  Yeah, it wouldn't work.



STEVE:  I don't think.



LEO:  So I see that the show's title is CacheBleed. 



STEVE:  Yes.



LEO:  I guess that's an appropriate topic for today.



STEVE:  Well, I had intended, as I said last week, to do DROWN and CacheBleed.  But the week provided so much entertainment, up to and not including McAfee, who admitted that he was lying before.  I didn't even cover him, deliberately didn't talk about him the last couple weeks.



LEO:  He said he could - first he was going to have his crack team of hackers social-engineer their way into the San Bernardino iPhone.  That was blatantly bizarre since the owner was dead.  There's not much you could do there.  And then he said, oh, everybody knows how to crack an iPhone.



STEVE:  Just give it to me and let, you know...



LEO:  "I'll eat my shoe," he said, and I'm hoping he's going to do it, "I'll eat my shoe if I can't crack that iPhone."



STEVE:  Yeah, I don't know if you noticed he walking around in chocolate shoes now.  So that's not such a big deal.  But anyway, so there has been, finally, that has sort of come full circle.  So that and a whole bunch of other stuff.  Of course RSA's going on, so there's some RSA stuff.  So anyway, the DROWN attack is so cool that I didn't want to shortchange it.



The CacheBleed attack is also cool.  It's a new form of side-channel attack that is effective against even the latest OpenSSL, which is deliberately engineered to thwart side-channel attacks so that, as we've talked about before, the way you do that is you don't allow your keying material to change the order of execution of the instructions because that can be sensed by power drop or power consumption or radio emissions or whatever.  So even on code where the keying material doesn't change the code execution, some very clever researchers have figured out still how to suck keying out of OpenSSL.



So that's the big topic for this week, after we catch up with a whole week of really great news.  So a great podcast.  And I completely - it's really annoying now that Microsoft's Second Tuesday collides with our Tuesday.  And I'm wondering, maybe I could call somebody and say, hey, look, move that release of your patches.



LEO:  Yeah, terrible timing.



STEVE:  On the other hand, they laughed at me when I told them to take raw sockets out of XP, so I doubt that there's much chance that we're going to get them to change when they release their patches.  But there was - this is Patch Tuesday, being the 8th of the month, last Tuesday being the first.  And I haven't even looked at it except that, when I turned my Win7 box on, it said - and I had just finished updating it a couple days ago.  It said, oh, 13 important or, yeah, 13 important updates.  So I just said fine, go do it, and I'll check and see if there's any emergencies.



But I don't think so.  I certainly haven't seen any in the news.  So it's not like there was everyone going oh my god, oh my god, oh my god, and through all the other inputs that I have, and this is the Tuesday that fixes that.  So there is nothing that we know of that is pending and is a catastrophe for Windows at the moment.  So great podcast, and here we go.



So I don't know why I am not yet in the habit of putting the topic that corresponds with the Picture of the Week as the first topic of the week because I want to, like, note the Picture of the week, and then I'm thinking, okay, we're going to talk about this later.  Well, let's talk about it now.



LEO:  All right.



STEVE:  Because the Picture of the Week is wonderful, and the news just occurred.  The EFF put out a press release that the Let's Encrypt initiative has issued its millionth free HTTPS cert.



LEO:  Wow.  Isn't that great. 



STEVE:  And it began, that Picture of the Week shows that it was a little ways into December of 2015 that this went online.  It got out of beta, and they began issuing certs in earnest.  And so we have December, January, February, and we are the same little bit into March.  And they have crossed the one million mark.  What's also interesting is that some of the certs are multidomain.  So they are actually covering 2.5 million fully qualified domain names.



They said:  "Three months from the first beta version of the service becoming available, Let's Encrypt has passed this significant landmark and is helping to ensure websites are more secure with encryption.  Moreover, since a single certificate can cover more than one domain, the million certs Let's Encrypt CA has issued are actually valid for 2.5 million domain names."



They also said, and I thought this was interesting:  "Much more work remains to be done before the Internet is free from insecure protocols, but this is substantial and rapid progress.  It is clear that the cost and bureaucracy of obtaining certificates was forcing many websites to continue with the insecure HTTP protocol, long after we've known that HTTPS needs to be the default.  We're very proud to be seeing that change and helping to create a future in which newly provisioned websites are automatically secure and encrypted."



Now, I guess I'll buffer that a little bit, to suggest that, when encryption is made this easy, then, yes, there's absolutely no reason not to use it.  But certainly, even among this initial million certificates and 2.5 million domains, there's sort of opportunistic encryption.  There's like, well, yeah, I mean, it's a blog, and nobody needs security there.  But, hey, it's better to have it be encrypted.  And we know that Google is, if they haven't yet, they've been talking about biasing search results pro encrypted sites.  So that's another reason to encrypt is for higher Google search rankings.



And I'll remind people, again, that this is still - it's a very minimal level of true security.  For example, I'm continuing to buy certificates from DigiCert, my absolute favorite certificate provider, and I just did that two weeks ago.  I refreshed all of GRC's certificates.  I'd had older ones that I had co-issued, both in SHA-1 and SHA-256.  I switched over on New Year's Eve so that Google's Chrome browser wouldn't be upset.  And yet I was still able to use SHA-1 through 2015 without raising any alarms so that people could get to GRC who had older browsers or, for example, had the corporate appliances that were signing the certs with their SHA-1 private key or, yeah, exactly.



But again, the reason I'm buying DigiCert certificates is that I want to have the extended validation where they go much further than just saying, yes, you have demonstrated control over this domain name.  It's, yes, you have proven you are Gibson Research Corporation, a corporation in good standing.  You're known through other real world means and so forth.  So, which is not, again, everybody knows what a fan I have been of Let's Encrypt.  What this does, though, it expands the ecosystem, essentially to automate the process of getting a certificate for a domain name which represents nothing more than that.  Yet that does provide encryption, I mean, potentially for everything.  There's no reason not to use it to encrypt your website.  It's just, it's free, and it's easy.



And the graph is just wonderful.  I mean, it is an exponential-looking graph.  It has got some kinks in it.  It's not a smooth exponential curve.  So there were some events at various points, who knows what, like maybe a major hosting provider incorporated automated Let's Encrypt certificates so that suddenly all of their hosted domains were able to be HTTPS.  That's the kind of thing that helps this to happen.



And I'm sure that what we'll see in the future is, if it isn't already, and I haven't looked, is that later distributions of Nginx and Apache, and maybe someday even IIS, will just incorporate the Let's Encrypt protocol in their base, so you don't even have to go get it, just it's on by default, and you have to say, no, I'm going to install - I would rather use my own higher level of assertion certificate.  But then, if you don't override it, it just gets one from Let's Encrypt.  Why wouldn't it?  So anyway, really, really, really great progress.



I wanted to just mention, just a tiny mention of the smartphone encryption update, and that is we talked last week about how Judge Orenstein, I think it was, had agreed with Apple and stated that the FBI or the Department of Justice was overreaching with their request that Apple unlock an iPhone 5c that had iOS7, which means Apple could unlock that phone, if they chose to.  They were resisting, as they will.  And the judge argued that the All Writs Act was insufficient, I mean, it was like just way the wrong approach.  And so the news since then is that the Justice Department is appealing that decision.



And so the battle goes on; and hopefully, as we all know, this ends up in front of Congress's committees.  And in fact, while we were doing the podcast last week, one was underway.  And this is looking very good for the people that are encouraging encryption.  I mean, I'm really hopeful now that this may turn out okay because we've got the NSA agreeing that strong encryption is important.  So, I mean, the NSA, and all other commercial entities, all the academic, all the cryptographers, I mean, everybody.  So essentially it's everyone saying what law enforcement wants is wrong.  And it'll be difficult to see how Congress can just ignore all of that, this overwhelming support for what Apple is waging.



I didn't hear you talk about it on MacBreak Weekly, but I imagine you had to, Leo, the first Mac ransomware...



LEO:  Yeah.



STEVE:  ...to appear.  What happened is that, on March 4th, Palo Alto Networks was quick to detect that the installer for a nice, fast, easy, free, BitTorrent client was bringing along a little more than the fast, easy, and free BitTorrent client.  It had a fully mature and operational ransomware, technically the first for the Mac.  They have a very nice short brief on this that I'll just share because it's hard to say it any cleaner than they said.



They said:  "On March 4th we detected that the Transmission BitTorrent client installer for OS X was infected with ransomware, just a few hours after installers were initially posted.  We have named the Ransomware 'KeRanger,' K-E-R-A-N-G-E-R.  The only previous ransomware for OS X we're aware of is FileCoder" - and I remember us talking about it two years ago - "which was discovered by Kaspersky Lab in 2014.  As FileCoder was incomplete at the time of its discovery, we believe KeRanger is the first fully functional ransomware seen on the OS X platform.



"Attackers infected two installers of Transmission v2.90 with KeRanger on the morning of March 4th.  When we identified the issue, the infected DMG files were still available for downloading from the Transmission site.  Transmission is an open source project.  It's possible that Transmission's official website was compromised" - and that certainly seems likely - "and the files were replaced by recompiled malicious versions, but we cannot confirm how this infection occurred.



"The KeRanger application was signed with a valid Mac app development certificate; therefore, it was able to bypass Apple's Gatekeeper protection.  If a user installs the infected apps, an embedded executable file is run on the system.  KeRanger then waits for three days before connecting with command-and-control servers over the Tor anonymizer network.  The malware then begins encrypting certain types of document and data files on the system.  After completing the encryption process, KeRanger demands that victims pay one bitcoin, about $400 at this time, to a specific address to receive their files. Additionally, KeRanger appears to still be under active development, and it seems the malware is also attempting to encrypt Time Machine backup files to prevent victims from recovering their backup data.



"Palo Alto Networks reported the ransomware issue to the Transmission Project and to Apple on March 4th.  Apple has since revoked the abused certificate and updated XProtect antivirus signature, and Transmission Project has removed the malicious installers from its website.  Palo Alto Networks has also updated URL filtering and Threat Prevention" - those are its products - "to stop KeRanger from impacting systems."



And so a couple interesting details.  KeRanger infected the Transmission installers that, as I mentioned, were signed with a legitimate certificate.  It was a developer whose certificate was owned by a Turkish company, and a different developer ID was used to sign previous versions of the Transmission installer.  So that indeed suggests that the way this happened was that either the Turkish company's certificate got loose, or an employee there, or who knows what.  But it was signed...



LEO:  No, they think the bad guys actually were the Turkish company.



STEVE:  Oh, interesting, okay, okay.



LEO:  Yeah.  You can get arrested, I guess, I don't know.



STEVE:  And so probably then the site was broken into somehow, defaced, and those files were replaced.



LEO:  Same thing, you know, just happened recently with another open source project where - I'm trying - oh, Mint Linux, same exact thing.  Remember that?



STEVE:  Yes.



LEO:  So, you know, just because it's open source it makes it a little easier because you can recompile the whole thing and just put in the installer, put a little extra little something something.



STEVE:  Yup, and in fact I remember that, we talked about that, and that's one of the reasons I don't provide open source.  Not only is it all assembly language with a whole ton of custom include files, and people would just say, uh, what is he doing over here?  But also I don't want my stuff, the GRC apps, to be cloned and offered in other file downloading sites.



So anyway, after connecting to the command-and-control server and retrieving the encryption key from the user's computer, thus exporting it so that the C&C server has it, then the executable will traverse the /users and /volumes directories, encrypting all files under /users and encrypt all files under /volumes which have specific extensions.  And the Palo Alto Networks document specifies, it enumerates some of them.  And basically it's 300 different file extensions, which to me looks like everything it can possibly encrypt, but your system still runs.  So it's not encrypting the kernel itself, but all your documents, all your images, audio files, archives, source code, database files, email, and certificates.  So everything that you've added to the system that you value and care about is scrambled.



So anyway, so if anyone worries that they may be, I mean, if they're hearing about this for the first time, it's people who would have downloaded the Transmission BitTorrent client from 11:00 a.m. Pacific Time on March 4th through 7:00 p.m. on March 5th. That's when it finally got taken down.  They could have been, you know, those people could be running right now this ransomware.



LEO:  Yeah, you'd know pretty quickly.



STEVE:  Yeah.  I was just looking at the date.  Today's the 8th. So unfortunately...



LEO:  It started yesterday.  It didn't start doing anything till Monday.



STEVE:  Correct.  And I'm thinking, so if you downloaded it late in the day on the 5th, and you hear this now, unplug your computer.  Take it off the 'Net because you do not want to let it get in touch with the command-and-control server.  It will not do anything until it's established that relationship.  So keeping it from connecting is your emergency, pull-the-cord-out-of-the-wall maneuver.  And then there are remediation steps.  I've got the link to the announcement.  I'm sure there are other things since.  I didn't go digging deep for other references, but there must be other things telling you what to do if you think you've got this.  But the Palo Alto Networks link that I have in the show notes does have steps you can take to get this thing out of your system before it activates.



LEO:  And they've shipped an update that actually removes the malware.



STEVE:  Apple has?



LEO:  No, Transmission has.



STEVE:  Oh, good.  Oh, good.  So...



LEO:  So in fact, Apple immediately pulled their cert, which means Gatekeeper, if you tried to run the installer at this point, would say no, you can't install that.



STEVE:  Right.



LEO:  And they added, they have a kind of hidden malware detection and removal tool that gets updated.  They've added the signature for it to that. 



STEVE:  Nice.



LEO:  So I think it's - 6,500 people downloaded it, according to Transmission.  We haven't heard of anybody who actually got their files encrypted.



STEVE:  Nice.



LEO:  And of course the best thing is, if you have a good backup, you're also okay.  You just delete the encrypted files and start over.



STEVE:  Well, and so this demonstrates the need for fast response.  And it is very cool that it was signed by a cert that could be instantly revoked and that revocation pushed out so that immediately the ecosystem responded.



LEO:  That's a good system.  That's the Gatekeeper system.  It really works, yeah.



STEVE:  Yes, yes.



LEO:  It's really good.



STEVE:  Yeah.  And of course this is why I spent some time last year being upset with Google over Chrome's absolutely nonfunctional revocation system.  They say that it works, but we proved that it doesn't.  You go to revoked.grc.com with Chrome, and it says, oh, yeah, that's fine.  Except that that's a revoked certificate, so...



LEO:  But it complains if you go to - somebody sent me a note saying you're using an old SSL - you're using whatever it was, Hash128, on our Tech Guy Labs site, which doesn't have SSL.  But I guess if you enter https://techguylabs.com, you'll get an error message.  But that's because there's no cert on there.  So I don't know what...



STEVE:  I know.



LEO:  Thank you, Google.



STEVE:  I know.  So the RSA conference happened, and a bit of news came out.



LEO:  I'm thinking next year we should cover this, and you should be there.  You think?



STEVE:  I probably should.



LEO:  And we'll cover it with you.



STEVE:  You know, the one time that I went was Stina.



LEO:  You met Stina, I know.



STEVE:  I mean, look what happened with Yubico as a consequence of that.  So, yeah, it's just a matter of time.  But, yeah, it would be fascinating.  And in fact I - why do I think I have a link?  Oh, I do, it's later in the show notes I have a link to the posted, the official posted by RSA cryptographer's forum, which is fascinating.  It is the, literally in the case of Whitfield Diffie, the white-bearded cryptographer, I mean, it's the whole RSA team and a few other guys who are very active, the fathers of crypto, for 47 minutes having a really great conversation about cryptography.  Anyway, we'll get there in a second.  And I also created a bit.ly link, I think it's just rsacrypto, all lowercase, rsacrypto.  And that will bounce you over to the YouTube video that's really, really worthwhile.



Anyway, everybody's wondering and worrying that quantum computing spells the end of cryptography.  And so I just sort of want to assuage people's concerns.  What was just released in the IEEE Spectrum magazine and site was some news from a breakthrough at MIT and the University of Innsbruck, who made a breakthrough in quantum crypto factoring of a number.  Now, the number was 15.



LEO:  They factored 15?



STEVE:  They did.



LEO:  Wow.  Let's see, five, three, and one.  Wow.



STEVE:  An unbelievable amount of technology.  They had cryo compressors cranking away.  They brought the temperature down.  They stabilized the platform so that it wouldn't shake the atoms out of alignment, and anyway.  And they managed to factor the number 15.



LEO:  It's pretty impressive.



STEVE:  Now, it did it very fast.  It did it atomically, you know.  So I have in my show notes, I wrote there was a recent breakthrough MIT and the University of Innsbruck researchers made who successfully used a device known as an "ion trap" containing five atoms to successfully compute the factors of the number 15.  Now, okay.  What is cool is that five atoms can somehow do that.  And I have no idea how.  Just I haven't gotten around to looking into it.  I do, however, I thought, as I was writing this down, I thought, you know, I think I had a book I was getting ready to read.



And so I'm holding it in front of the screen, a book titled "Post-Quantum Cryptography."  And the lead author, right up at the top, is our friend Daniel Bernstein, who is already involved.  So for what it's worth I wanted to mention that there's already lots of academic research going into, uh-oh, what if factoring huge numbers suddenly becomes not hard anymore?  And you'll need more, a bunch more atoms.  And again, we know that these sorts of things never get worse.  They only get better.  And so they'll get six atoms, then they'll get seven, then they'll get eight, then they'll get nine.  Now, they're going to need a whole lot more atoms in order to factor numbers with as many bits as current large RSA keys have.  And then apparently you start having other problems which five atoms don't have, like keeping 2,000 of them all, like, disciplined in your ion trap.



Anyway, so I just wanted to assure people that we're at the point today where breakthroughs are factoring the number 15.  And what's cool is that somehow five atoms do that, and that, you know, someday, I think it's - we can see the path.  And that is that factoring a really huge number into the two primes that were multiplied to originally get it, which is that that's the hard thing about the hardness in RSA crypto is that it's trivial to multiply two primes to get a big number.  We don't know how to, in any reasonable amount of time, break that apart again, to take that big number and figure out the two primes that were used to create it.  And somehow, apparently someday, some atoms will do that instantly.  I hope I am alive to see that happen because that would just then - then it's time to figure out, okay, how are atoms doing this?  I have no idea how five atoms can factor a number.  But, you know, that's what...



LEO:  It's very cool.



STEVE:  It is.  Just the idea of that happening is very cool.



LEO:  But that's the point, it's kind of a distant, you know, I hope I'm alive when they can do it kind of thing.



STEVE:  Yeah, yeah, exactly.  And I should also mention that the NSA is already getting ready to propose the standard for the next - oh, and in fact that's mentioned in this 47-minute YouTube piece that I hope everybody will listen to or watch.  It's just, it's heads, it's talking heads, although they're cool-looking heads.  So I would watch it if you can.  Otherwise...



LEO:  Famous heads.



STEVE:  They're, yeah, they're - and there's one guy on the end who's like, what, are these hair extensions here?  And I don't know what's going on.  But, you know, they're - oh, my god.  Next week's T-shirt is the best thing I've ever seen.  It shows an employed programmer standing next to an unemployed programmer.  And then someone sent me another picture of two headshots.  And that is these guys.  These guys' employment with a university, I mean, their tenure is so deep that they can look like anything they want to, and really they're kind of supposed to.



LEO:  Right.  You would trust them, yeah.



STEVE:  Rivest looks normal.  And it's like, well, what do you know?



LEO:  Yeah, how could you be a wizard? 



STEVE:  Come on, you know?  You don't look like a wizard.  Exactly.  Or like you have hair extensions.  So anyway, they mention in there toward the end that the NSA is already proposing the post-quantum algorithm.  So they exist.  The book, this book is, you know, that's what it's got is discussing post-quantum crypto.  And on of these days I'm just going to figure it out.  If I ever take a vacation, or maybe when I'm on the plane vibrating my way up to Petaluma...



LEO:  There you go.  Come visit.



STEVE:  ...I'll use the time to get in...



LEO:  And read the book.



STEVE:  ...and be able to describe how five atoms are able to factor something because I want to - I'm getting to the point where I need to know, and I know our users want me to explain it.  So - our users.  Our listeners.  Our followers.



Okay.  So Verizon is fined $1.35 million.  And I look at that, and I don't think I was sipping coffee, or I might have, like, had to wipe off the screen.  Because that's nothing for Verizon.  That's like, I mean, they don't even feel it.  It's a slap on the wrist.  This was a fine that the FCC imposed for their use of supercookies, that we've talked about, which is a completely pernicious privacy-violating technology that they implemented in a way that they were unblockable - thus the superness - unless you used HTTPS.



And this was that, as a Verizon Wireless customer, you are using their gateway, essentially.  They're your wireless ISP.  So by definition all of your traffic goes through their portal.  And any that wasn't encrypted, any browser queries or HTTP queries had a Verizon supercookie added, which was tied to your account, and which we now know they were sharing with others.  That is, they were remarketing their tracking of their customers to other parties.



So what annoyed me about the 1.3 million is they made vastly more than that much money doing this.  So from their boardroom standpoint, this was a highly profitable venture.  You know, 1.35 million is the toll for doing this?  Fine, we'll pay it.  Can we keep doing it?  We'd be happy to pay this every year.  Anyway, so they've agreed in their consent agreement to obtain consumer consent before sending data about supercookies under the settlement.  And I'm still, it's like, okay, let's wait to see how this comes out because the idea is there's language in there that says users can opt out.  Well, does that mean you can change your mind after agreeing?  And how do you do that?



And what we really want, and unfortunately it's probably not there, I'm sure it's not there, is a timeout where you have to opt in, and it expires after six months, and then you have to opt in again.  I mean, that's the fair way to do it.  And who knows?  And we've discussed this before.  Would Verizon maybe give you a discount on your costs if you opt in?  Then a lot of people are going to say yeah, I'd rather have cheaper service, and I don't care about that tracking business.  And remember, it's still, until they start forcing a certificate on their users, which is frighteningly likely, they could only do this for nonencrypted traffic.



But anyway, this made the news.  A lot of our listeners sent it to me.  So I wanted to just comment.  It's like, yeah, okay, big deal.  You know, again, if this was the cost of doing it, they'd happily do it.  They'd happily pay the fine annually because it was no doubt making, you know, they were generating so much revenue from this.  And we have yet to see how they're going to implement this.  It seems unlikely that there'll be a timeout.  And I just hope they make it clear what's going on so people can choose.  Again, if they give somebody a $5 discount a month on their service, then certainly a lot of people are going to say yes.  And a lot of people are going to say, uh, no thanks.



LEO:  The bigger punishment would be if people read this article and go, oh, well, I guess I don't want Verizon to be my cell phone company, and switch.



STEVE:  Exactly.



LEO:  But, you know what, nobody cares.  That's my sad realization.



STEVE:  Exactly.  Exactly.  Facebook had a little bit of an oops.  Really, and this was an interesting hack.  And in the details I found myself realizing that Facebook still hadn't gotten it right, which makes it a perfect subject for the podcast, too.



So what happened was that a researcher poking around discovered that he was able to hack anyone's Facebook account for whom he had their phone number or email address.  And so the way it works is as follows.  There is a page you go to when you forget your password.  And it's like "find your account" or something is the title.  I went there this morning and looked at it.  And it's like, enter your email address or a phone number, which are registered to your account.  And it sends you the now-becoming-commonplace six-digit code.  I don't know why six.  Because Apple's decided to put six digits on its lock screen.  All the one-time tokens are all six digits.  It's basically, that's enough that somebody can't guess it.  And the technology verifying is able to say, you've got it wrong, sorry.



Okay.  So what he found was that you were - oh, and so what happens is you enter that.  Then it sends the code to your phone through a text message or to email and changes the page waiting for you to enter that six-digit code.  So he puts the wrong one in, and it says, "Wrong, try again."  He puts the wrong one in, and it says, "Wrong, try again."  Puts the wrong one in.  It says, "Wrong, try again."  Now, at this point I'm thinking, okay.



LEO:  It's going to take a while.



STEVE:  What part of this process do Facebook's users, I mean, do Facebook's engineers not understand?  Because this is not supposed to be try a lot...



LEO:  Until you find one.



STEVE:  Until you find one.



LEO:  This is not something you forgot.  This is something they just gave you.



STEVE:  Precisely.  So I could say, oops, maybe you've made a typo.  We'll give you one more try.  Then you're going to have to ask for another one.  That's the way these work.



LEO:  Yeah.



STEVE:  But Facebook said...



LEO:  Keep trying.



STEVE:  For some bizarre reason their main Facebook site lets you go - and he said 10 to 12.  Maybe he wasn't counting because he got bored guessing.  But 10 to 12 before it says, sorry, you apparently have a real problem with your code.



LEO:  But there's still a million codes; right?  I mean, it's not like...



STEVE:  Correct.  And they are blocking you after somewhere between 10 to 12.



LEO:  Well, that seems all right.  I mean, it's...



STEVE:  No, Leo, it's wrong.  It is a fundamental flaw in their cryptography.  You may think I'm being Gibsonian about this.



LEO:  Well, tell me why because, to brute-force it, you'd need many, many guesses; right?



STEVE:  Yes, but this is not...



LEO:  Many more than 10.



STEVE:  This is not the way the code works.  The code is sent to you.  You enter it.  And I could acknowledge being given one if you typed it in carelessly.  They would say, sorry, try it again.  And if you mistake, then they say, okay, you seem to have a problem with this particular code.  Go back, reenter your information.  We'll send you another one.  That, I mean, my point is the security model is clean, and it's clear.  There is no reason you should possibly need 10.  You might have a redo, so you get one other try.  And then you just ask for another code.  That kills that one, and they present - so what I'm saying is this demonstrates - that would demonstrate a proper understanding of the way this is supposed to work.



What Facebook has done, 10?  I mean, how can - there's no - it's inexplicable.  But, okay.  Even so, Facebook.com was blocking after 10 to 12.  However, beta.facebook.com and mbasic.beta.facebook.com are two other full copies of Facebook that are the developmental, not-yet-primetime, that had the whole content and no protection.  They just...



LEO:  You could enter any code, you mean?



STEVE:  Any code forever, Leo.  And since it's an automated submission, in the disclosure this guy showed that it is an HTTP query that is lsd - and I thought that was interesting, I don't know what that stands for - equals AVoywo13&n= and then the six digits [lsd=AVoywo13&n=XXXXXX].  And you can issue those as fast as you want.  And there's no limit...



LEO:  Hmm.



STEVE:  ...if you issue them to the beta - yeah, yeah, bad - to the beta.facebook.com.  And what that does is, since there's no limit, he at machine speed runs through - and there are a million six-digit codes.  So 000000 to 999999.



LEO:  So he still has to get the right one.  It just doesn't limit you.



STEVE:  Correct.  No limit.  And with a - but a million.  I mean, so it's going to take a while.  But the system is just sitting there [humming]...



LEO:  No, try again.  No, that's not it.



STEVE:  Try again.



LEO:  Try that, try again.



STEVE:  Right.  And it's automatable.



LEO:  It doesn't say "warmer," "colder," does it?



STEVE:  And since the - he didn't want to - okay, you got...



LEO:  You're getting warm.  Do it like Mastermind.  Two are right, and one is in the right position.



STEVE:  And this clown who set it to 10 attempts I'm surprised didn't say, okay, you missed one of those digits, but we're going to give you some more tries.  Anyway, so he responsibly cracked his own account so that he wasn't cracking anybody else's.



LEO:  So he went through - now, the average would be half a million tries; right?  I don't know how that works.  Is that right?  It's one half of the total?



STEVE:  Yeah, correct, yes.  So...



LEO:  And getting no clues.



STEVE:  Right.



LEO:  That's a lot of tries.



STEVE:  He cracked his own account.  He told Facebook.  They said, "Whoops," and they turned on the limiter, the 10 to 12 invalid attempt limiter from main Facebook.  They added it to the beta.facebook.com, and then he disclosed.  So nobody, as far as we know, nobody was hacked.  But it had, again, if anybody else had found this and knew any user's email address or phone number - now, that user would have received a notice of a password reset attempt.  So they would have received the proper six-digit code, either on their phone or by email.  So, but, you know, we get those.  Everybody sometimes gets, like, okay, somebody tried to log into your...



LEO:  Yeah, I get them all time, yeah.  People are always...



STEVE:  Yeah, exactly.  So it's like, okay, fine.  And so you just sort of blow it off.  But that would have started the hackers' attempt then to brute-force that six-digit code to successfully get your account, at which point he can change your password, has access to your credit card numbers in your payment section of Facebook.  And, well, basically full authentication of your identity, able to do everything you could do as a freshly authenticated and reauthenticatable on demand user/owner of that account.  So anyway, a little bit of an oops.  But also it's like, okay, if they can't get it in two tries, don't keep giving them more chances.  Why?  Why 10?  Just tell them to get another one.  That's the way the algorithm should work.



Spoofing.  I didn't ask you how many sponsors we have today.



LEO:  Just one more.



STEVE:  Okay.  Because I was going to say this would have been a good time to break, but we'll...



LEO:  We've got time, yeah, yeah.  I'll break after SpinRite; yeah?



STEVE:  Perfect.



LEO:  All right.



STEVE:  So spoofing a fingerprint got easier.  Some researchers at Michigan State University, they're in the department of computer science and engineering, used a very cool hack.  You  might want to go to this link, Leo.  It's Agic.cc/en, Agic.cc/en.  This is the Japanese company which sells - and if you click on the hobbyist side, up at the top, those two blocks.  They sell the ability to print a circuit board.



LEO:  Oh, that's neat.



STEVE:  Isn't that cool?



LEO:  That's neat.



STEVE:  So they have - and this is something that people are doing.  So they have a special paper which receives a silver, a high silver content ink.  So there are a number of ink jet printers which are compatible, and they list those further down that page.  You replace its three cartridges with their three cartridges and use their paper.  And you can then print working circuits.



LEO:  Wow.  That is really cool.



STEVE:  Yeah.



LEO:  I love that.



STEVE:  It is really neat.



LEO:  I've got to tell Father Robert.  We'll do a Know How with that one.  That's awesome.



STEVE:  Totally makes sense, yeah.  Poke some holes through and then run some components through, and you're good to go.



LEO:  Wow.



STEVE:  Unfortunately, it's conductive.  Which means it's going to have a variable capacitance just like a fingerprint's ridges do.



LEO:  Oh.  Oh, dear.  Oh, dear.



STEVE:  So now this is the new way of spoofing fingerprint readers.



LEO:  You can inkjet print them.



STEVE:  Yes.  Yes.



LEO:  What the what?  Wow.



STEVE:  So you take a picture of somebody's fingerprint, maybe from their own phone, or maybe from the wineglass that you handed them because you wanted to get a clean thumbprint from them.



LEO:  Right, right.



STEVE:  And then you horizontally invert it, clean it up, and then print it at one-to-one size using this inkjet printer with their paper and their ink.  This makes a conductive raised-ridges copy of the fingerprint.  And it does work.  They may not have had an iPhone, but they said they opened a Samsung Galaxy S6 and a Huawei Honor 7 that were both biometrically locked.  And it's just easy.  The previous hack or spoof that we described back when the fingerprint reader was new came from Germany's Chaos Computer Club.  And we'll remember that they did this using a gummi finger which they had 2.5D printed.  They had a 2.5D printer and some sort of a gummi stuff.  So they created - because they understood they needed 3D-ness.  And they may have sprayed it with something to make it conductive afterwards.  I don't remember.  But now we have an advance of the technology where, yup, you just print a fingerprint.  Or you could keep a spare fingerprint in your wallet, if you needed to, like, you know...



LEO:  Oh, that's handy.  If you lose your hand, you can always just, yeah.



STEVE:  Yeah.  Exactly.  Or you need to give it to a relative or something.



LEO:  Yeah, here's my fingerprint, yeah, yeah.  You can use this.



STEVE:  Here's my fingerprint.



LEO:  Yeah.  I've got it in my phone if, yeah, wow.



STEVE:  Yeah, very cool.  Very cool.  Okay.  McAfee.  Oh, boy.  You know?  And I did, I had to say, I have to say that I was put in mind of Donald Trump because he acknowledged that he lied specifically to generate YouTube traffic, and then boasted 700,000 views of him saying, basically, yeah, I could, you know, they should just give the phone to me.  I can unlock it in no time.  It's just not going to be a problem.  And it's like, okay, John.  I mean, as I said, I didn't cover this for the last couple weeks because I was just rolling my eyes.  But this is just a wonderful interview that the Daily Dot did.



So McAfee says, or originally he said:  "I speak through the press, to the press, and to the general public.  For example, last night I was on RT, and I gave a vastly oversimplified" - now, this is John - "a vastly oversimplified explanation of how you would hack into the iPhone.  I can't possibly go in and talk about the secure spaces on the A7 chip.  I mean, who's going to understand that crap?  Nobody.  But you've got to believe me:  I understand it."



LEO:  Oh, yeah, sure.



STEVE:  "And I do know what I'm doing, else I would not be where I am."  And I think...



LEO:  Where are you?



STEVE:  With dogs being shot by neighbors in Bolivia?  You know?



LEO:  Where are you, yes.



STEVE:  Yeah, exactly.



LEO:  It made me the man I am today.



STEVE:  Where did we leave off with your escape from South America?  Anyway, so he says:  "But you've got to believe me.  I understand it.  And I do know what I'm doing, else I would not be where I am.  This is a fact.  Someone who does not understand software cannot start a multibillion dollar company."  I'm just gagging.  And he says:  "This is just a fact of life.  So if I look like an idiot, it's because I am speaking to idiots."



LEO:  Oh, that'll go over well.



STEVE:  Oh, yeah.  "But I promise you this:  You get me on a coding table" - and I think...



LEO:  Coding table?  They make those now?



STEVE:  What is a coding table?  "Get me on a coding table..."



LEO:  I want a coding table.



STEVE:  "...against somebody, I will kick your ass," says John.



LEO:  Oh, god.  Oh, please.



STEVE:  Okay.  So the interviewer says:  "Anything else you'd like to talk about?"  And of course McAfee, never one who's shy or short for words, says:  "Yeah.  If you're on Reddit, tell those guys, cut me a little slack.  I am not quite as stupid as they think.  I mean, I may be pretty damn stupid, but nowhere near what they think.  And if somebody wants to test me, please.  Bring a laptop, a coding pencil..."



LEO:  Oh, to go with his coding table.



STEVE:  What is that, one with a big eraser?  What is a coding pencil?



LEO:  I'm thinking he's never written any code.



STEVE:  I know he hasn't.  "Bring a laptop, a coding pencil, or ask them how to - here's one.  If you have a computer with no memory and only two registers, how do you exchange register A" - and he actually means the contents of register A - "with the contents of register B.  And all you have are Boolean operators.  Now, you ask them that.  How many people can do that within one minute?"



LEO:  One minute?  It's a timer?



STEVE:  That's the question - no, no, the coding...



LEO:  In their head.  Answer your question.



STEVE:  The coding pencil is going to expire after a minute.



LEO:  Yes.  After a minute you have - your time is up.



STEVE:  "That's the question I used to ask everybody who came to work for me at McAfee."  Right, because his multibillion dollar company he was still doing the hiring.



LEO:  The hiring, yeah, yeah, yeah.



STEVE:  "If you can't solve that in a minute, you're an idiot.  You shouldn't be programming.  And I guarantee you that 99% cannot do it.  All right?"



LEO:  Oh, come on.



STEVE:  He says:  "Two registers, only Boolean operators, no memory, and you must exchange the contents of those two registers.  So you don't have adds and subtracts.  No, only Boolean - AND, OR, XOR.  You got it?"



LEO:  Oh, you have XOR, good, all right.



STEVE:  And so the interviewer says:  "I will pass that challenge along."  McAfee says, again....



LEO:  You're an idiot.



STEVE:  "And just tell them, the first time somebody asked me that question, I popped out the answer instantly."



LEO:  Oh, because he's a genius, with his coding pencil and his coding table.



STEVE:  Oh, my lord.  Yeah.



LEO:  But we now know who Mr. Trump will be nominating for vice president, I think.



STEVE:  And you understand now why I was put in mind of the Donald is it's like, okay, this, you know...



LEO:  I'm a genius.  They're all idiots.



STEVE:  In a different venue.  Anyway, so of course we discussed this years ago.  It even has its own Wikipedia page, this clever, but inefficient, technique.  I mean, it's rare that you don't have a swap instruction, or Intel calls it the XCHG, X-C-H-G.  But three XOR operations between those two registers can swap their contents.



LEO:  Wait a minute, Steve, you didn't use your whole minute.



STEVE:  I know, sorry.



LEO:  But you probably had a faster coding pencil.



STEVE:  And I would argue that any programmer learns this in 101.



LEO:  Oh, yeah.  Oh, yeah.



STEVE:  I mean, in like Boolean math it's like it's a cool thing that you can do this.  Anyway, so I just - this was, again, this was typical John.  This is why I didn't bother us for the last couple weeks with his shoe challenge because it was just nonsense.  But I just love this.



LEO:  I hope he eats his shoe now.  I really do.



STEVE:  It's like, wow, yeah.



LEO:  That's great.



STEVE:  Okay.  So RSA.  I just had a short note to make sure people knew that there was a 47-minute panel conversation.  The YouTube link, bit.ly/rsacrypto.  I mean, it's riveting.  Absolutely, as I said, first of all, you've got to see these guys.  They're just, they're classic crypto people except Rivest, who really needs to be weird somehow.  If we could just give him maybe rose-colored glasses or something.  But anyway, definitely fun.



LEO:  I'm pulling it up right now.  I'll show - I'll just let people who are watching the video just...



STEVE:  Oh, good.  Yeah, yeah, yeah, do.



LEO:  You talk because, I mean, obviously people, most people are listening.  They're not going to see the video.  They're going to have to do this for themselves.  But let's - I'm just curious what these guys look like now.  Now you've got me, you've got me going.  Oh, yeah.  They look like, oh, whoa, the guy on the right.  Whoa.



STEVE:  That's my guy.  That's my guy with the hair.



LEO:  Okay.



STEVE:  Wait till we get a close-up of him.  He is really - he's a character.



LEO:  Now, who is the elder gentleman who looks like Gandalf?



STEVE:  That's Whitfield Diffie.



LEO:  Whit Diffie, by the way, won the Turing Prize, million dollar Turing Prize.  He deserves it.  And who is this guy?



STEVE:  That's Mr. Hair.  



LEO:  I love it.  And he's wearing a pink shirt.  It's really interesting.  And it looks like a puka shell.



STEVE:  Classic groove.  And we have - that in the middle there is Shamir of RSA.



LEO:  Now, Shamir, by the way, just recently said, at RSA no doubt, that Apple should give the FBI anything it wants, which surprised me, since he invented public key crypto.



STEVE:  He did.  And in fact, Whit Diffie was at the AI Lab at Stanford when I was there in college.



LEO:  Oh, really.  Oh, yeah.



STEVE:  He had a number of neat...



LEO:  I've interviewed Whit, actually.



STEVE:  He was big on Spacewar.  We used to play Spacewar.



LEO:  Oh, what fun, huh?



STEVE:  At 4:00 in the morning, yeah.



LEO:  Put that on your MAME.  I'm sure this was fascinating.  We shouldn't mock people's appearance because of course they're geniuses.



STEVE:  No, no, they're wonderful.



LEO:  We love them.



STEVE:  I mean, as I said, they're, yeah, they're wonderful.



LEO:  Yeah.



STEVE:  Okay.  So Toby tweets me, and actually...



LEO:  Oh, that was Moxie Marlinspike.



STEVE:  Is that Moxie?



LEO:  That's Moxie Marlinspike.



STEVE:  Okay.



LEO:  Of course it is.  I should have recognized him.



STEVE:  Yup, yup.



LEO:  With a name like Moxie Marlinspike, it's got to be good.



STEVE:  Once again, yes.



LEO:  No hair shaming.  Moxie, we love you.  Keep up the good work.



STEVE:  Nice.  Okay.  So Toby tweeted both of us.  He said:  "Updated Windows 10 and hating it.  What operating system would you recommend?  FreeBSD or Linux Mint?"



LEO:  Yeah, yeah.  I ignored that because it's a complicated answer.  Not doable in 140 characters, frankly.



STEVE:  Precisely not.  But for me, anybody can DM me and vice versa came to my rescue, and Toby was following me.  So I just thought it was an opportunity.  I've been - I'm going to try to figure out what it is about upgrading.  And I think the best analogy I have, well, what I think it is, it's not really learned helplessness, it's a domain where we have no expertise.  That is, where we cannot form, we don't have an informed opinion. 



And the best, I came up with an extreme example to highlight it.  And that is, somebody hands you an axe and says, okay, chop down this tree.  And so you grab it and swing back, and the person says, oh, whoa, whoa, no no no no no no no.  You're holding it wrong.  You're supposed to hold the blade and whack the trunk of the tree with the handle.  And you'd say, what?  And they'd say, yeah, that's how I want you to chop the tree down.  And you'd say, well, you're a moron.  That's not how an axe is used.  And they say, yeah, but I'm telling you, I'm an expert in tree chopping.



LEO:  I'm an expert.  That's where you've got to watch out.



STEVE:  This is how you - so, and the key is, you know better. And, see, I run into this now in the medical area all the time because I'm studying research, reading studies, actively, proactively educating myself on tightly focused specific topics.  And I end up becoming a small topic expert.  And those are the things I've shared with people, like the Vitamin D podcast and the Sugar Hill stuff, digging into the science, understanding it, putting it all together so that it makes sense.  And so the problem that most people have is that it's not an axe.  It's way more complicated than that.  And so they don't know.  And so here we come to Windows 10.  Same thing.



LEO:  It's not an axe.



STEVE:  It's not an axe.  We know what I think it is.  I've been [crosstalk] it.



LEO:  It's a flying something.  Yes.



STEVE:  So Toby says he hates Windows 10, what should he do?  So I tweeted back:  "Toby, for the time being I'm staying with Win7.  I think it's perfect.  It predates Microsoft's switch to OS as an overcommunicating social media service; it will be kept updated until 2020; it runs a recent model IE for talking to Microsoft; it supports all of the latest communications security standards (forward secrecy, TLSv1.2, SHA-256, et cetera).  It's available in mature 32- and 64-bit versions, so plenty of RAM expansion space.  It's supported by current laptop and desktop hardware.  It runs the user with reduced rights, which can be easily and transiently elevated when needed.  And, of course, it also manages all peripheral I/O devices, storage, and networking; launches all 32- and 64-bit Windows apps; includes a free built-in VM for running XP and much older 16-bit apps, if needed.  It can be easily tweaked to never upgrade to Windows 10.  What's not to love, and what more could anyone want or need?"



LEO:  Right.



STEVE:  And so that's my point is there is this sense of need to upgrade because there is something newer.  And I remember the love fest that Paul and Mary Jo had over Windows 8, and then 8.1.  Now it also is a flying we-know-what, and a horrible mistake that Microsoft should have never made, and they love Windows 10.  To me it's like, okay.  I'm staying with 7, which absolutely does what I need.



LEO:  There you go.  And we'll cross the bridge of what the hell to do when it...



STEVE:  In four years.



LEO:  In four years.



STEVE:  Yeah.  And I'm happy to have four years.  And you know me.  I mean, I'm still using XP.  So, and there'll probably be an embedded version that still gets updates until you're on your boat.  So...



LEO:  And I wouldn't, just to - I should have answered his question.  I wouldn't go with Linux Mint at this point, although I have to say it's a shame because it is the most Windows-like version of Linux, and very easy for people to use.  But unfortunately they've made some decisions about upgrading that I think are problematic.  So I'd go with Ubuntu, I think, is a fine version of Linux to use.



STEVE:  There's a also a desktop version of FreeBSD which I've looked at a little bit.  I don't know how it compares at all, but...



LEO:  It's fine.  It's good.  And of course, as you know, as we know, that's the most secure of all operating systems.  I mean, it really, both through obscurity and through design.  So that's another good choice, I think.



STEVE:  Yeah.



LEO:  But harder to use, I think, for an end-user, especially somebody coming from Windows.



STEVE:  Yeah.  Again, it's certainly a function of your techno level.



LEO:  Yes, exactly.



STEVE:  I'm with you a thousand percent, Leo, in recommending the Chromebook to people who just need to surf the web and do email.



LEO:  That's a great choice, yeah, yeah.



STEVE:  I downloaded, just because I was curious, another email client which can do IMAP and was able to do GRC's email on the Chromebook.  So you certainly aren't constrained to just...



LEO:  Is it a plugin?  It must be a Chrome plugin; right?  What's it called?



STEVE:  It's like Cloud something.



LEO:  Okay.  That's good to know.



STEVE:  But it runs on the Chromebook, and now I have all my email, I mean, I'm not using it seriously because I really do want a strong machine.  But I just wanted to verify that, like if somebody got it, and they were a Cox subscriber, that they could set it up to still get their mail through Cox and not have to, for example, do webmail, which Cox does offer.  And so, yeah, that works.



LEO:  Good.



STEVE:  Last week we talked briefly about my evolving Healthy Sleep Formula, and you mentioned your success with it.  Naturally, a great number of our listeners also cannot sleep well through the night.  And the statistics show that about a third of the population, as we get older especially, has a recurring significant problem, enough so that they say, yes, I can't sleep.  So it wasn't a deluge because people were waiting.  But I got a lot of DMs and just regular public tweets saying, you know, "Pssst, I really need it.  Can you just, I know it's not done, but can you share it?"



So there is a page that I threw together, but you no longer even need a URL because it's gotten loose.  And I wanted somebody other than me to google this to see if it's the first link for non-me because we know that Google tends to bias itself.  So if you google "healthy sleep formula," Leo, what's the first thing that comes up?



LEO:  No word of Gibson in it, just "healthy sleep formula."



STEVE:  Mm-hmm.



LEO:  GRC Healthy Sleep Formula, number one.



STEVE:  Okay.



LEO:  Number one on the hit parade.  So it's easy to find.



STEVE:  Easy to find.



LEO:  And now you have to add Taurine to this, though.



STEVE:  It's on the page.  I didn't put it up in the top six, but you'll see that second box there says, "And get yourself some Taurine."



LEO:  Now, it would behoove me at this point to say Steve is not a doctor, and you should always, before taking a supplement, consult your physician to make sure it doesn't interact with your own medications dangerously because that's always a possibility.



STEVE:  Yes.



LEO:  So don't just blithely go out there.  However, I have taken it, and it has made a big difference.  Now, I'm hoping it's not addictive, and I'm not going to get cancer in six months.  But I trust Steve.  If you don't know Steve as well as I do, you might want to consider that this is just one guy's thing.  Okay.  Now I've said the disclaimer.



STEVE:  Yes, thank you.



LEO:  It works for me.  Yeah.



STEVE:  Thank you.  And I've already had reports of it working...



LEO:  It's amazing.



STEVE:  Yes.  I've never had a report yet of it not working.



LEO:  Well, when we all get cancer in a year, maybe.  But, you know, right now it's good.



STEVE:  Well, none of this stuff is weird.  It's all either in us, or it's the main amino acid in green tea.  The L-theanine is the predominant amino acid in green tea.



LEO:  And you're recommending around 200 milligrams.  Is that kind of comparable to a few cups of tea, or a million cups of tea, or... 



STEVE:  You have to drink, oh...



LEO:  Not an unreasonable amount, I would guess.



STEVE:  No, no, it's not.  And this is a standard offered supplement level.



LEO:  Yeah, you're getting these from Now for three of them, which is a well-known...



STEVE:  And they're a great company.  So GABA is the existing neurotransmitter that we already have in us.  Glycine, same thing, is a neurotransmitter and the smallest amino acid.  So it's in our diet, and it's all in us already.  Melatonin is the hormone which our pineal gland secretes at night and when there's a lack of blue light.



LEO:  By the way, you're number two in Germany, according to Martin.



STEVE:  Cool.  And the first ingredient, Seriphos, is a version of phosphatidylserine, which is...



LEO:  Oh, you had me taking that before.



STEVE:  Yes, exactly.  What it does is it sensitizes and actually recovers the sensitivity of the cortisol sensors that the hypothalamus and the pituitary both use to determine whether their request for cortisol to be released has been met by our adrenal glands.  And so there's a negative feedback loop such that, when cortisol is released, the hypothalamus stops releasing, well, it's an adrenocorticotropic hormone.  And that goes to the adrenal gland, which releases corticotropic releasing hormone, which then goes to the adrenal glands and causes them to release cortisol.  When they sense that cortisol is available, then they down-regulate their request for more.  So it's a negative feedback loop.



The problem is, as we age, that cortisol sensing becomes less sensitive.  So the hypothalamus and the pituitary sense less cortisol, therefore asking for more than we really need.  So what phosphatidylserine does is, among other things, it brings the sensitivity of those receptors back up.  It improves their sensitivity, thus cortisol is reduced.  That's why I had you taking it, because cortisol is a problem for a big chunk of the population because of just chronic stress.  It's in the Healthy Sleep Formula because it's also a problem at night for people not being able to get to sleep or waking up too early.



So all of these have a specific reason.  And in fact it turns out that phosphatidylserine and GABA are synergistic, and it helps GABA to cross the blood-brain barrier, which is one of the reasons people don't think that supplementing with GABA actually works.  Anyway, I do, at the bottom of that page, explain the first of those five.  I haven't had time to get to Taurine yet.  But it's going to get added.  So anyway...



LEO:  And this is how much?  Because I didn't pay for any of this, I just got it in the box.  It came to me, magically.



STEVE:  Yeah, and in fact that's a very good point.  I show the prices of Amazon's.  But I also note, someone told me that in the U.K., I think it was, or no, it was in Canada, he said that the Seriphos was, like, 50-some dollars.



LEO:  Whoa.



STEVE:  And I said, whoa.  So I checked ca.iherb.com, and it's the normal price there.



LEO:  Of course, as soon as people find out about this, it's all going to double because, if it really does what you say it does, it's worth whatever that is, five bucks - how much a night is it, roughly?



STEVE:  I haven't done the math.  I will.



LEO:  Get a spreadsheet out to do that.



STEVE:  Well, and again, people need to understand, at the top of the page I say this is a beta at this point.  I reserve the right, I need to still play with it a little bit.  And it's slow going because, like, I'll take something out, and I'll wake up at 4:00 a.m.  And it's like, gosh darn it.



LEO:  It takes a whole night to try each one.



STEVE:  Well, worse than that, the next night you can't count on because you had a bad night the night before so there's sleep pressure.  So it basically takes several nights, like three nights to recover from taking one out, and then it destroys the whole - the way the thing fits together.  But I've been, as I said, I've been putting it together.  It is all, every single thing is innate to us in reasonable concentrations.  And in fact, again, what I'll end up doing when I get time is each one of those will get its own page because, for example, Taurine - and I should just mention that Taurine can lower your blood pressure.  So if you're on high blood pressure medication, you want to make sure you don't undershoot.



LEO:  Yes.  This is why you want to consult your physician.



STEVE:  Precisely.



LEO:  Because there's interactions with all this stuff.



STEVE:  Precisely.  And so I will spell those things out so that people can know.  Also, this particular melatonin is time-release, which is crucial for this.



LEO:  Because it's a lower dose than, I mean, it was only one milligram.



STEVE:  It is, yes.  And, see, that's the point.  People make the mistake of blasting themselves with 20 milligrams of melatonin, which is vastly more than ever occurs biologically.  And so the secret is trickling it out over the course of the night.  The problem is this adds B6, and some people have a B6 sensitivity.  So one of the things I'm doing now is I want to experiment.  There are a couple other time-release melatonins without B6.  In fact, Life Extension brand is a 300 microgram time-release that I'm going to switch to.  It wasn't working for me before the Taurine; but with the Taurine, this has really strengthened the whole thing.



So I want to see if I can adjust the melatonin down and still have it work, and thus get rid of the B6.  B6 is an important factor in neurotransmitter synthesis.  You have to have it for some of the enzyme actions, for example, the one that - actually it's called Decarboxylase - that converts the 5-HTP to serotonin.  We want that to happen.  And so the reason they put B6 in is it generally helps generating the calming neurotransmitters.



But anyway, I have all the science behind this.  I've got tons of research.  I just haven't had a chance to make it public.  But, you know, you're playing with it.  A bunch of people are playing with it.  I've already had positive results.  Someone was sensitive to the melatonin, dropped it, and didn't need it.  So it may also be the case that you can go without melatonin.  I'll get all this documented.  But I just want to let people know it is there, if you want to get it and start experimenting, understanding that it's an experiment.



LEO:  Both Lisa and I were a little groggy the next morning, and have been a little bit, but not badly so.



STEVE:  When you took two of each; right?



LEO:  Yeah, well, even last night I took one.  But as you point out, it takes a couple of tries to really know what the effect is.  But nothing that a cup of coffee and a good bike ride didn't fix.  But it just, you know...



STEVE:  Well, and the other thing, too, is one of the things that I experienced at the beginning of this was sort of that same sense of feeling.  And I began to wonder whether it's that I was just...



LEO:  Finally getting a good night's sleep.



STEVE:  Yes.  I was really relaxed.



LEO:  Kind of euphoric.



STEVE:  Exactly.  I felt a little - in fact, I said to the gal that serves me for lunch, I said, "I think I'm kind of high right now," because I was also doing Taurine and glycine in the morning.  And those, after a good night's sleep, it'll give you kind of a nice little buzz.



LEO:  Well, and there are lots of reasons to think that a good night's sleep is healthful.



STEVE:  Oh, that's the other thing.



LEO:  Very necessary to health, yeah.



STEVE:  That's the other thing we haven't talked about.  But, oh, my lord, it is unbelievably important.  I mean, one of the things that's happened since the '50s is, since the 1950s, the amount of self-reported sleep has dropped by between one and a half and two hours per night.  People are staying up later, and they're getting up earlier.  And I've heard people, like on television, bragging about how little they need.



LEO:  I only need two hours' sleep, yeah.



STEVE:  It's like, this is not a bragging point.



LEO:  Not a good thing.



STEVE:  You know, it's really - our bodies...



LEO:  John McAfee sleeps 20 minutes a day.



STEVE:  And boy, does it show.



LEO:  Look how smart he is.



STEVE:  Yeah, boy.



LEO:  Well, again, I just, you know, it always makes me a little uncomfortable to recommend anything.  But all the standard disclaimers apply.  But I think, if you find something, I think this is great.  I mean, at this point I actually don't not take it because the times I have, I haven't slept well.  And it's like...



STEVE:  And I look forward, I look forward to going to sleep.



LEO:  Yeah.  I sleep very well, yeah.



STEVE:  Now, there'll be one more addition, or an optional.  And that is, if you like dreaming, there's an herb called Rhodiola rosea.  And it's not in there because that was like...



LEO:  It makes you dream.



STEVE:  Oh, my lord.  And in fact, this kind of vivid dreaming, you never get into as deep a sleep as I think people should.  But I know there are people who, like, occasionally would just want to - it's like eight hours of entertainment.  It's like the craziest - it's just the craziest stuff that has ever happened.  It's just wonderful.



LEO:  I'll try that.



STEVE:  So anyway, we'll have some fun.



LEO:  You know, that first sleep suggestion you made for me, way back when, when I think I was worried about jetlag on a long trip, did cause me to dream a lot.



STEVE:  Yes.  In fact, what I did, that was all - that was the - you had to go to sleep super early for New Year's Eve...



LEO:  Right.  Oh, that was New Year's Eve, that's right, yeah.



STEVE:  ...before last.  So we had to knock you out so that you'd be able to go to sleep at, like...



LEO:  Right.  And it worked, yeah.



STEVE:  ...6:00 or something, yeah.  And it was 5-HTP and melatonin.  And those two things, and you were able to get them from the local drugstore.



LEO:  Yeah, still have them.



STEVE:  Yes, and 5-HTP is a potent serotonin generator.  It's the immediate precursor to serotonin.  Tryptophan has a hard time crossing the blood-brain barrier, but 5-HTP doesn't.  It's able to get through, through passive diffusion.  And so, if you've got enough B6, it just gets converted to serotonin.  And, oh, boy, will you dream.



LEO:  But you don't dream much with this current formulation.



STEVE:  No.



LEO:  Not till you're kind of starting to wake up.



STEVE:  For example, yes, exactly.  And for example, you don't see L-tryptophan there that you would expect to see, or 5-HTP, specifically because I don't want to encourage too much serotonin.  It's just it's a little distracting.  I mean, in fact, I'm wearing my little Zeo headband, and it's saying I'm asleep, and I'm thinking, I don't feel asleep.  I feel like I'm...



LEO:  I'm wide awake, yeah, oh, yeah.



STEVE:  I mean, and I'm not a big dreamer, and I'm not one who remembers his dreams.  But I've got some, like, storylines that would freak Jenny out if I ever told them to her.



LEO:  See, I'm kind of, yeah, I had some very good dreams, too.  So I want to, I definitely want to try that once in a while.  All right.  So what is that for the dreaming?



STEVE:  Rhodiola.



LEO:  Rhodiola.



STEVE:  Rosea.  Also from Now foods, R-H-O-D-I-O-L-A.  Rhodiola rosea, R-O-S-E-A.



LEO:  All right.  Sweet dreams, everyone.  Good luck. 



STEVE:  And, yeah.  What it acts, the way that - its mechanism of action - and one of the things we're going to do when we have some time to do a special is I'm going to just do a podcast on the neurobiology of our brain because I've had to learn it in order to understand how all of this stuff works.  And it is so fascinating, and I know it would produce a podcast that even people who didn't care would just find really interesting.



But one of the ways that the neural signaling system works, neurotransmitters work is, after emitting this chemical, the neurotransmitter chemical, it's necessary to end the stimulation.  It's meant to be an event, not a haze.  And so the stimulating neuron has an "active transport," it's called, which is like little vacuum cleaners which try to suck those back in so that it recycles them because it's metabolically more efficient to recycle than to have to...



LEO:  Reuptake.



STEVE:  ...reuptake, exactly, rather than rebuilding an all new neurotransmitter.  But because it's goo, I mean, it's sort of an aqueous environment, some of them may wander off.  And you don't want sort of a cloud gathering over time because that would be bad.  So our biochemistry also has enzymes which actively break down the neurotransmitters that have gotten away, that have sort of become lost.  And those are called monoamine oxidase enzymes because they oxidize the monoamine, which is what the neurotransmitter is.  Thus a monoamine oxidase inhibitor, an MAOI, that was the original form of antidepressant medication.



LEO:  Right, right. 



STEVE:  And so it worked by inhibiting the destruction of those neurotransmitters that had sort of wandered off and allowed them to sort of increase their effect over time.  Rhodiola rosea is a mild MAOI.  And so it tends to inhibit, I think it's MAOI A and B, which are the monoamine oxidase inhibitors for both serotonin, and I think it's glycine.  And I think acetylcholine, also.  So anyway, this will all get written down, and we'll have a fun podcast sometime talking about it.



LEO:  All right.



STEVE:  In the meantime, Jeff in Ontario, Canada wrote with a subject "Not a Security Question."  And I happened to find this in the mailbag, thought I would share it, just because there is a little bit of a takeaway from this for our listeners.  He said:  "Hi, Steve.  I have a WD My Passport 1TB portable USB hard drive.  I had bought a copy of SpinRite some time ago to support you and your podcast, which I thoroughly enjoy every week.  I partitioned the aforementioned portable hard disk drive with three primary partitions and a bunch of logical partitions.  I made the drive bootable and installed a bootloader.  The drive held a number of useful PC diagnostic, maintenance, and repair tools, including SpinRite, some live Linux distros, Memtest, et cetera.



"A few weeks ago I clumsily dropped my portable HDD.  It fell from about waist height.  A few days later I noticed I was unable to save some files to the drive from a Linux machine.  The OS was showing me I/O errors.  I was also unable to copy some large (over 2GB) files from the drive to my Windows 7 laptop.  The Windows copy dialog was getting stuck and claiming an ETA of a couple of decades.  I plugged the hard drive..."



LEO:  Never seen that.  That's good.



STEVE:  Yeah.  "I plugged the hard drive into a spare workstation at work and booted SpinRite from the drive's first partition.  I then sent SpinRite to work on all the partitions of the same drive.  I'm not sure if it's a good idea to have SpinRite test the same media it booted from?  It is plugged in by USB, not SATA.  Do you think SpinRite can breathe new life into a hard drive that has suffered physical trauma, i.e., has been dropped?  It did not hold any data that wasn't backed up, so I'm not concerned with data recovery.  But I'd love to have the drive working again.  Maybe I'll just get one of those shockproof portable HDDs, those with the rubber bumpers."



LEO:  I use SSDs, which I think are more...



STEVE:  That's a very good point.  They're shockproof; and, as we have found, they are subject to SpinRite's machinations in recovering when they need recovery.  So that would make a lot of sense.  For what it's worth, the good news is it sounds like the drive wasn't running at the time, so that's better, although it does sound like the physical drop hurt it.  SpinRite has a long history, from the laptop fell off the back of the couch to my dog ran by and knocked the computer over and such stories of machines where the drives were running, the heads were flying, and they got bounced on the media, SpinRite came along and recovered the data and fixed them, and things were good to go again.



So, first, it absolutely can help with physically damaged drives because that's really what sector errors are.  That's physical defects that are causing the magnetic flux reversals not to be recoverable on the drive.  And secondly, it's absolutely fine to run it on itself.  Since it boots, it comes in, it runs, it no longer has any connection or open files or ties back to that drive.  So absolutely.  In fact, back when it was running from a floppy, boy, I put in a bunch of logic so that it could write its log file of what it did back to the media that it was operating on, even if at the same time it needed to be relocating the sectors and the clusters that the log file was being written to.  I made it all work somehow.  So absolutely it is safe to run it from the media it was booted from.



And once we get back from the break, I'm going to talk about a, like, okay, you've got to be kidding me, there's still some way to eke out a private key from a system whose code plays by all the rules.  Yes, one more bleed.  We had Heartbleed; now we have CacheBleed.



LEO:  No relation to Cachefly, our fine content distribution network.  All right, let's talk CacheBleed with Steve Gibson.



STEVE:  Yeah, and I'm seeing them advertising on major networks now, too.



LEO:  They're everywhere.  They're everywhere now.  It's a huge success story.  It's really great.  And we're really happy to be part of that, I think.  



STEVE:  Okay.  CacheBleed.  The well-understood rules for avoiding or preventing side-channel attacks of any kind depend upon, well, where the attacks depend upon a secret-based alteration to the code path.  We've talked about this before, the idea being that any encryption or decryption is, by its nature, is using an algorithm which is typically a standard.  And it is a keyed algorithm where the key provides the secret that specifies the details of how the algorithm scrambles the bits, or unscrambles the bits, going in and coming out.  And the idea is that, by looking at the bits on both sides, you gain no useful information about the key.  And the key itself has enough bits that it's impractical to try all the combinations of bits.  So you've got a strong system.



What we don't want is the use, the dynamic use of this algorithm to leak any information about the key's bits.  That would be bad.  And so the example we've discussed, where this is done wrongly, is if you ever have a branch which branches the code based on bits of the key, then the act of branching changes the timing and the power consumption enough that somebody on the outside can detect it.  And whereas once upon a time people would have said, "Yeah, so what, I mean, you can't use that," boy, you give these academicians a challenge, and they will wrestle it to the floor.  And so now all kinds of attacks have been demonstrated, and we discussed one just last week or the week before, like through a wall, magnetic emanations of something decrypting PGP was able to obtain the private key from just listening to the magnetic output from a standard laptop sitting on the other side of the wall.  So it's like, yes, this stuff has been reduced to nearly practical level.



So the OpenSSL guys are aware of this.  And they have used only fixed-time instructions where the instructions' arguments depend upon secret key data so that there's no variation.  And no conditional branching is done that depends upon secret data.  But there's a third rule which has been - people have been aware of it, but it hasn't ever - it's one of those things where, again, there just wasn't any, didn't seem to be a practical way of taking advantage of it.  The third rule is do not use memory access patterns that depend upon secret key data.  Now, this is interesting and becomes a little tougher, maybe, not to have the memory access patterns, not even memory access depend upon secret key data.



So it turns out that crypto algorithms, which exist today, which are side-channel attack proof, explicitly made so, even though in some cases they're slowed down because they can't use, like if they could use the secret key they could have that, direct branches, they could make it so much faster.  But no, can't do that.  So they've had to slow the algorithms down, deoptimize them in terms of speed in order to optimize a different characteristic, which is absolutely no variation based on the secret, that is, variation in the instructions which are executed.  Turns out that people have worried about variations in the data which is fetched.  And thus it's been, they have found a way to do this.



And the way, the good news is it is much more invasive than any kind of a receiver nearby sniffing something because, again, this has been understood to be a problem, but no one has been able to see, like, how to actually leverage it.  For example, the data that is being fetched is probably not something you can detect at a distance.  So, yes, we've seen that the instructions you execute can, variations in those can be detected.  But, eh, you know, you've got three levels of caching that's going to blur things.



The architecture of today's systems are, for example, in an Intel multicore processor you have some number of cores.  We'll just say four for the sake of argument because that's kind of middle of the road now.  They go up to eight, I think, or maybe two.  So you'll have a core.  The cores are hyperthreaded, meaning that they have essentially two program counters, which means that that core, that processor can have two threads of execution actually running through it at the same time.  And in the old days you just had one.  You had a program counter, and it specified the address from which the next instruction would be fetched.  And a jump instruction changed the value of the program counter, thus causing the next instruction which would be fetched to be something else, not just moving linearly forward, which is what the program counter, thus the name "counter," does by default.



So these new cores have two threads because that's found to be - it's inexpensive for Intel to put a second program counter in, in terms of chip real estate.  Doesn't make the chip much bigger.  And although it's not nearly as good as a second whole core, it's enough better than only one program counter for the cost that it's now what all the Intel processors do.  They're all hyperthreaded because it just makes sense.



So the Level 1 cache is the cache nearest to those cores.  And they're small.  And there's a separate instruction cache and data cache, meaning that fetches for data are asked of the data cache, the L1 data cache, and fetches for instructions are asked for from the small instruction cache.  So there are separate instruction and data caches.  And so, for example, if you were executing in a tight loop, then the instructions you had just recently executed would still be in the instruction cache, and so you wouldn't have to go any further outside the core, or even to the Level 2 cache in the core in order to get those instructions.  But instruction and data is separate.



So also part of the core is the next stage, the Level 2 cache, which is significantly larger and is a shared cache.  Instructions and data both share the same cache.  And then outside of all the cores is the L3, the Level 3 cache, which is still bigger again, maybe a couple megabytes on the newer, larger processors.  So all of that is on one Intel chip, is the Level 3 cache, which is the main buffer for all of the external RAM on the system's motherboard.  And then that big Level 3 cache feeds all of the individual core's Level 2 caches, which then in turn feed each core's split Level 1 instruction and data caches. 



Okay.  So what these guys figured out was that they could target software which does violate this third law, this third rule of not allowing memory access patterns to be a function of the secret key.  I don't know if we're going to be able to harden our crypto code against that because that's a high bar.  But I imagine some people will start trying.



What they found, what they were able to leverage is known as a cache bank conflict.  So to facilitate access to the cache, that is, the Level 1 cache, and to allow concurrent access to the Level 1 cache, remember we've got two threads running in a single core, and those two threads share the Level 1 cache.  So to allow concurrent access to that Level 1 cache, the cache is divided into multiple banks.  And in the processor that these researchers tested, there were 16 banks of, I think they were four bytes wide.



So 16 banks of - although I don't know how many lines in the cache, so they may be larger.  But 16 banks.  And the idea being that one thread - what dividing the L1 cache into 16 banks does is, as you would imagine, it reduces the conflicts.  That is, if they were one bank, then essentially the threads would have to alternate for access to the Level 1 cache because they would always be wanting instructions and data from the Level 1 cache.  It's the closest one to them.  If they break them up into 16, then the probability of a collision, that is, both of the hyperthreads simultaneously asking for something in the same cache is 1/16 of the time.  Most of the time, 15/16 of the time, assuming random fetching patterns, they will not be colliding.



Okay.  But if they collide with that 1/16 probability, one of the threads stalls.  And that can be detected.  And it turns out it can be detected by the thread that got stalled.  So this is why this is not a huge, run around screaming, hair-on-fire problem.  Essentially you are running this malware or probeware, whatever you want to call it.  This is not a passive attack by any means.  You're not sniffing anything.  In one of the hyperthreads you are running something that is timing itself like crazy.



And a long time ago, when I talked about harvesting entropy [SN-456], I talked about the exquisite granularity of detail that the Intel processors provide to the code running in them.  This is an amazing amount of sort of management housekeeping counters that just count everything, you know, branches taken, branches not taken, roads less traveled, predictions that were correct and mispredictions, just an amazing amount of stuff.  And I suck all that in, for example, in SQRL's client because it's completely unpredictable and just crazy full of entropy.



So the one thread running in one side of a core is able to time itself and to detect when its accesses have been stalled by the other hyperthread running in the same core.  And it turns out that, because the data fetches, even though instruction fetches are not altered, data fetches are altered based on the key data.  That thread sharing that core is actually able to, and they have done it, determine the secret key, which is when it is used by the other hyperthread in the shared core based on minute stalls of the attacking hyperthread, when it can't get to its instruction or data cache with the same speed it would expect to.  And so it's like, oh, wow.



Again, not a problem at a distance.  Not a passive attack.  We have seen problems where systems of multicores hosting virtualized OSes, where you can breach the virtualization barrier because they are running on the same processor, even if they're in virtualized, separate, and completely independent address spaces, it is possible to actively breach that, if you have a hostile agent in one, you know, like anywhere in the server that is able to sense tiny changes because they are sharing processors.  Here we are running an exquisitely sensitive, purpose-designed code on one hyperthread and detecting its little fluctuations and determining what the key was that was being used at the time it was being used by the other thread on the same core.  So it's like, okay.  We don't have to worry about this.  Maybe the OpenSSL guys are going to worry about it.  I don't know if they're going to worry about it or not.



But it'll be interesting to see if mitigations are developed for this, or if people just think, okay, at some point we've got to stop worrying about how close the attacker can be before they're just in here with us in the same process, reading this stuff directly.  I mean, this is almost that level of difficult to perpetrate.  And, I mean, they have to thread lock, they have to hyperthread lock their process.  They have to set thread affinity and processor and hyperthread affinity in order to always be executing on the same core and the same hyperthread on the same core, and then account for other interruptions and things.  I mean, they did pull it off.  But they pulled it off by deliberately running on the same hyperthread.  And I'm not sure whether a processor will run, will share hyperthreads cross-OS.



LEO:  Kind of seems unlikely; right?



STEVE:  It does seem unlikely.  So you might not ever be in a situation.  It might be that you could have threads in the same process sharing a core.  But maybe not even cross-process, let alone cross-VM.  So probably hard to make work.  But, wow, again...



LEO:  It's great, a pretty neat thing to do.



STEVE:  ...a neat, neat, tech-y, academic example of, yes, we can still get your key, no matter.  Even though you played by all the rules everyone does now, we broke the last one.  It's like, oh.



LEO:  It seems similar to factoring 15 using four atoms.



STEVE:  Yeah.



LEO:  Seems in that vein.



STEVE:  It's down there.  It's like where...



LEO:  It's good work, you know.  Nice.  Wow.



STEVE:  Yeah.  Yeah.  And it got a really nice paper written.  And we'll keep our eye out for...



LEO:  Well, I'm glad you talked about it because I saw that, and I was very curious, well, how practical is this?  Is this, you know, and obviously it's highly impractical.



STEVE:  Yeah.  This is not - unlike Heartbleed, where the whole world came to a screeching halt.  And remember all the certificate revocation.  In fact, it was that, it was Heartbleed and the revocation storm which Chrome didn't honor that caused me to do the revoked.grc.com site because it was like, hey, you know, there's all these now likely revoked or likely hacked sites that Chrome still is happy to honor.  So there's our podcast.



LEO:  Well, we've all learned something here today, I'll tell you.  And this was better than GABA and Seriphos combined.



STEVE:  I was going to say, if that didn't put you to sleep...



LEO:  No, no.



STEVE:  Then we do have...



LEO:  See, I find that stuff fascinating.  It's awesome.  Steve Gibson is at GRC.com.  That's where you'll go to find all of his fine works.  Of course, start with SpinRite, the world's best hard drive maintenance and recovery utility.  But go from there to, oh, so many things, including now the sleep formula, Gibson's Healthy Sleep Formula, patent pending.  By the way, did you notice I have an Echo sitting right here?  See that?  I'm ready to ask it any questions that come up.



STEVE:  Nice.



LEO:  You can also, while you're there, get a copy of, well, let's see, SQRL, getting close, getting close.



STEVE:  Close.



LEO:  There's forums there.



STEVE:  In fact, I worked on it so much yesterday that I stole all the time I normally spend prepping for the podcast.  So I did wake - I woke myself up with an alarm, which I don't normally do, because I just - I needed to get this done.  And we did put together a nice podcast.



LEO:  Thank you.



STEVE:  So I'm happy for that.



LEO:  And people sometimes say, "Leo, if you'd just get out of Steve's way, we could get SpinRite 6 going, or 6.1, and we could" - I feel bad.  I feel guilty.



STEVE:  No, it's not your fault.  For example, someone said, "Steve, I heard you and Leo talking about your sleep formula.  And I know I desperately want SQRL, and I desperately need SpinRite 6.1, but I absolutely cannot sleep.  So even though I need everything else you're working on, I know how busy you are, please, please, please can't you tell me what the formula is."



LEO:  That's the beauty of Steve Gibson.



STEVE:  And it's like, well, okay, yeah.



LEO:  Everything he does is useful.



STEVE:  And now I'm getting back to, well, I'll have SpinRite - I'll have SpinRite.  I'll have SQRL - I'm back to SQRL fulltime.



LEO:  Good.



STEVE:  And we'll push that out, and then back to 6.1.



LEO:  Nice.  You can also get the podcast there, of course, GRC.com.  And he has 16Kb versions, 64Kb versions of the audio; transcripts that are excellent and very useful.  If you like to read along while Steve talks, it's a great way to kind of enhance your understanding of it.  GRC.com.  We have 64Kb audio, and we even have video at our site, TWiT.tv/sn.  And let's see, what else?  Oh, we do the show on Tuesdays, 1:30 Pacific, 4:30 Eastern time.  I guess next week will probably be a Q&A, so you might want to go to GRC.com/feedback, if you have a question.



STEVE:  Actually, no, I think I'm going to push it off by one.



LEO:  Okay.  Okay.  Well, you can still ask a question, it just may not get answered right away.



STEVE:  Maybe.  Yeah, my plan was to do DROWN next week.



LEO:  Oh, yeah.



STEVE:  But I may, I think we'll see.  And I should mention also the bottom of the Healthy Sleep Formula has a feedback link specifically for the Healthy Sleep Formula.  So I wanted just to put that out to people if they've got, I mean, to tell me how they're doing, what they find, what they discover.



LEO:  So you'd like reports on how people are doing with this.



STEVE:  Oh, yeah, yeah, yeah.  It is definitely a community endeavor because at this point it works for me, it works for you.



LEO:  Yeah.



STEVE:  I guess for Lisa, and a bunch of people who have responded and reported.  But it needs to mature over time.



LEO:  Yeah, absolutely.  So GRC.com.  And we'll be back here next Tuesday for another episode.  By the way, Steve's on Twitter:  @SGgrc.  He accepts DMs from anybody, but you can also tweet at him if you want to have a public conversation:  @SGgrc.



STEVE:  And as you said, GRC.com/feedback for next week's Q&A.



LEO:  If we do one.



STEVE:  If we do one.



LEO:  For Q&A at some point.



STEVE:  Hey, it'll go in the mailbag, and I will see it, if not next week, then the week after.



LEO:  Absolutely.  Hey, thanks, Steve, always a pleasure.  See you next time.



STEVE:  Thanks, Leo.  



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#551

DATE:		March 15, 2016

TITLE:		Listener Feedback #230

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-551.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss the week's major security events - including lots of new fur flying over the escalating Apple v. FBI/DoJ encryption battle - and discuss questions and comments from listeners of previous episodes.  We tie up loose ends, explore a wide range of topics that are too small to fill their own episode, clarify any confusion from previous installments, and present real world application notes for any of the security technologies and issues we have previously discussed.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We've got questions and answers and a little bit of security news, too.  And we'll talk a little bit more about encryption, some interesting stories coming across the news, the security news desk.  Security Now! is up next.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 551, recorded Tuesday, March 15, 2016:  Your questions, Steve's answers, #230.



It's time for Security Now!, the show where we cover the latest security and privacy news with the Explainer in Chief, Steven "Tiberius" Gibson.  I crack myself up.  Hi, Steve.



STEVE GIBSON:  I'm so glad you're having fun over there, Leo.



LEO:  Well, it's because I had such a good night's sleep, thanks to you.  I must confess.



STEVE:  Ah, yes.



LEO:  I went back to the elephant dose, by the way.



STEVE:  Good.  Well, that's, you know, take what works.



LEO:  Yeah.  Oh, it's nice, I mean, I'm just out.  And then I looked at my - I wasn't using the Zeo forehead sleep tracker.  I had a Fitbit on, and it's the first time I've - I should show you the graph.  It's the first time I've ever had sleep where there was no - it was just, like, solid sleep.  There's no - it was no waking moments, not even light sleep.  It was just like a couple of tosses and turns at the beginning and, boom.



STEVE:  Yeah, I've heard from some people who remarked...



LEO:  I thought it was broken.



STEVE:  That remarked that they knew they slept well because when they woke up they were in exactly the same position as when they went to sleep.  They hadn't gone to the other side of the bed or migrated.  The covers were not ruffled.



LEO:  Lisa says, "You don't wake me up in the middle of the night anymore."



STEVE:  Anyway, I put a little note down in miscellaneous stuff for us to talk, to bring this up.



LEO:  Steve Gibson's, what do you call it, Miracle Sleep Formula.



STEVE:  Well, and your comment, I watched you on The New Screen Savers talking about it and the FDA and my use of the term the Healthy Sleep Formula.



LEO:  Yeah.



STEVE:  So anyway, we'll talk about that.  We've got a lot to cover.  This is a Q&A episode #230.  That is, our 230th Q&A, but Security Now! Episode 551.  And we're going to talk about, you know, I keep trying to think I'm - I guess I'm deluding myself to think that we are ever going to be able to stop talking about this encryption debate, dispute, whatever it is, because it's just not going away.  And a lot has happened in the last week.  We need to...



LEO:  Well, and we expect you to talk about it, of all people.



STEVE:  Right, right.



LEO:  The other thing, and someday I'd love to know, if you think it's possible to make a smartphone that is truly secure, regardless of government interference, like Blackphone or something, if it's possible, even.



STEVE:  Well, your point, the point you raised a couple weeks ago was, I think, very salient, which is one of the problems we have is that this is a very complex topic.  And it's easy to get tunnel vision on one specific aspect, like, oh, how long is the key?  And how strong is a PBKDF algorithm so that it's 80 milliseconds per guess, blah blah blah?  And then someone says, yeah, but if Apple installs a keystroke logger...



LEO:  Boom.



STEVE:  And it's like, yeah, all bets are off.



LEO:  Boom.



STEVE:  So the point is...



LEO:  Even if you're using WhatsApp or Threema; right?



STEVE:  Correct.  Correct.  If you put something upstream of all of this unbreakable, industrial-strength, military grade, even the NSA, you know, they disapprove of it because they can't get into it, it doesn't matter.  If you capture their keystrokes or you record their microphone before it's encrypted, then it's all bypassed.  So I think it's necessary.  So the point you always raise when, for example, I talk about a given system that I'm enamored of, like Threema, for example, is, well, yes, but we have to trust them.



What I think has come out of this, and I haven't seen this written anywhere, or noted, is Apple is demonstrating the degree to which they're serious about defending our privacy.  And if the FBI thought they were getting some PR benefit from encrypting their phones, then the FBI has just given them a massive shot of adrenalin and help by attacking them in this way because you can't turn around.  I mean, the servers in restaurants are talking about it.



So anyway, so, yeah, we have - there's some more interesting news because the government has responded in a footnote that just - I'm beginning to see red when I hear some of these things.  But then there's also some news that's happened much sooner, it was reported on The Hill publication yesterday, about Dianne Feinstein and a senator from South Carolina.  Anyway, we'll get to that.  Of course John Oliver has - that thing went viral from Sunday night.



LEO:  I haven't seen it yet.  He does his trademark talking about a subject, which he's done so well in the past.  This time he's talking about encryption.



STEVE:  Yes.  And you know that I'm not, as I've said to you, I'm not a big fan of his.  Jon Stewart and Colbert, before Colbert switched over to CBS, I loved them both there.  John, I just never got it.  So I don't TiVo him.  But I got so many tweets that I thought, okay, finally.  So yesterday afternoon I watched it all the way through.  It's 18 minutes long.  It is a masterpiece.  And so I tweeted out to my followers in case they hadn't picked up on it, you've got to see this.



Also I wanted to talk a little bit about David Pogue's comments on TWiT because he asks really good questions.  And I blogged - for the first time, someone commented, since 2014 - on this issue.  We have a new IoT nightmare, I mean, a specific IoT threat.  Some news about BleepingComputer getting sued.  A new horrifying DDoS attack multiplying vector.  Some news that I know you've been covering about Windows 10 pushing it even further and harder.



LEO:  You're starting to win me over with your point of view on Windows 10.  Well, I should say Microsoft is starting to win me over to your point of view.



STEVE:  Yeah, yeah.  And then I do have a Windows Update Update Follow-up Follow-up, and some miscellaneous stuff, and then we're going to do 10 questions from our listeners.



LEO:  Wow.



STEVE:  And they're great ones.  So I think we've got a good, engaging podcast.  And everyone, just grip the steering wheel firmly as you're driving, if you're listening to this while you're commuting, because you want to stay in the center of your lane, if possible.



LEO:  Stay in the lane.  Now, somebody the car will do that for you.  But until then you'll have to keep your hands on the wheel and your eyes on the road.



STEVE:  Right.



LEO:  But that's why we do these in audio as well as video.  You can listen, continue to listen.  Speaking of guys that do a great job explaining this stuff, there's nobody better than the Security Explainer in Chief, Steven "Tiberius" Gibson.



STEVE:  So I found, for the Picture of the Week on the first page of the show notes, an interesting chart which Mozilla posted.  On their Twitter feed they linked to it.  They described it as "bending the curve for HTTPS adoption," which has quadrupled since Let's Encrypt launched.



LEO:  It's kind of amazing; isn't it?



STEVE:  It really is.  Now, looking at it, there are a few things to note here.  First of all, it's the rate of adoption which has quadrupled.  They didn't make that clear.  So it's not - it didn't jump.  The other thing that they did, and, I mean, I understand they had to, but it's one of my pet peeves, is when you use...



LEO:  I know, no zeroes.



STEVE:  Yes, non-zero-based graphs.



LEO:  Yup.



STEVE:  So this looks like - it looks awesome.  And then you look at it, and wait a minute, on the Y axis it goes from 37 to 42.5.  So it is vastly less dramatic.  On the other hand, it doesn't change the fact that the ratio is 4:1.  So in this case it's okay because they're not lying through graphs.  In fact, if they did use a zero-based graph, both lines would look almost horizontal, and it wouldn't be as clear that the second half at the Let's Encrypt launch point had quadrupled its rate of increase.  So anyway, still, what they were seeing was, before Let's Encrypt, was, yes, sites were generally moseying along, slowly adding encryption over time; and that rate is four times what it was before.



So a really nice data point, in addition to the fact that we know more than one million sites in - what was it?  We reported it.  Since it was near December, it must have been the first three months, they got a million sites, or a million certificates and 2.5 million domain names covered because of course certs can have multiple domains in them.



LEO:  One of our chatters, though - this is bad news.  David Johnson in our chat says Apple's iTunes servers do not accept Let's Encrypt certificates.  So his podcast isn't updating in the iTunes store.



STEVE:  That's odd because they cross-signed them with an old-school major CA.  I don't remember now who it was.



LEO:  He says they're using Java 6 for some of their components. So it must be a local client.



STEVE:  Yeah, I think it's their fault.  I wouldn't blame Let's Encrypt.



LEO:  Oh, I'm sure it is.  Yeah, yeah, yeah, yeah, yeah.



STEVE:  So what must be is that all of us have a root CA which includes the one that is cross-signing the Let's Encrypt certs.  But this particular little weird client lacks that root.  And what I would do is I would update that client's root.  You would certainly want to keep that up to date.



So, okay.  There are a number of things about the whole encryption debate/debacle.  First up, I wanted to note that the rhetoric, even the legal rhetoric keeps escalating.  And I'm a little disappointed in what I'm seeing coming back from the government.  I mean, they have not, they've certainly not been light-handed in this.  There was a 45-page DoJ filing responding to Apple's response to theirs.  And in a footnote they commented - let's see what I wrote here.  I'll just quote myself.



"The latest filing in the legal war between the planet's most powerful government and its most valuable company" - this actually was Reuters who wrote this - "gave one indication of how the high-stakes confrontation could escalate even further.  In what observers of the case called a 'carefully calibrated threat'" - and, see, this is where I'm objecting to the idea that the DoJ should be threatening Apple - "a 'carefully calibrated threat,' the U.S. Justice Department last week suggested that it would be willing to demand that Apple turn over the source code that underlies its products, as well as the so-called 'signing key' that validates software as coming from Apple."



LEO:  That's doing them a favor.  We'll write it, if it's too hard for you.



STEVE:  Precisely.  Apple is saying the All Writs Act is being overstepped because we know that software is free speech, and the government has no right to compel us to write code on its behalf that we don't want to write, that we explicitly believe we should not write.  And so the DoJ is saying, okay, fine, we'll write it.  Which means give us the source code, which we'll use to edit.  And we'll of course need your super secret private signing key in order for the software, the version of iOS that we write, the DoJ OS, to be accepted by the iPhones.  So, I mean, this is just - it's becoming kind of silly.



LEO:  Although I remember China and India asking BlackBerry for the source code for the Exchange Server so that they could write a backdoor for BlackBerry Exchange Server.  Right?



STEVE:  Right, yeah.  And we covered that years ago, where BlackBerry was - I'm trying to remember the details.  I think they wanted the servers to be relocated into their country, which would then give them access to the otherwise encrypted communications.  And if the servers remained in Canada, where they were at the time, then they had no access because it was encrypted from point to point.  But if it went through the BlackBerry servers, they believed that would give them some access.  And I don't remember how that ended up.



LEO:  Some of them got it, and some of them didn't.  I think India got it, and BlackBerry was able to successfully fight it elsewhere.  You know, I think what's really become clear, though, is the government's long-term goal is to have all encryption have a backdoor, period.  And if that requires rewriting firmware, so be it.  I mean, that's really what they want, isn't it.



STEVE:  It's why I abandoned CryptoLink, remember, a couple years ago.



LEO:  They're going to outlaw, I fully expect them to outlaw encryption that doesn't have a governmental backdoor in it.



STEVE:  And here's what's shocking is how quick this is going to happen, which is the story after the next one.  I wanted to mention first that all of this Apple issue has been the data-at-rest question.  That is, law enforcement handing Apple a phone and saying, "We need to get into this, and here's a court order authorizing you to lawfully open this phone for us."  Now, the other side of this is the data-in-flight question.  And that's a whole different issue.  But now WhatsApp is in the DoJ's crosshairs.



The New York Times summed it up beautifully in just the first couple paragraphs of their story.  They wrote:  "While the Justice Department wages a public fight with Apple over access to a locked iPhone, government officials are privately debating how to resolve a prolonged standoff with another technology company, WhatsApp, over access to its popular instant messaging application.  No decision has been made, but a court fight with WhatsApp, the world's largest mobile messaging service, would open a new front in the Obama administration's dispute with Silicon Valley over encryption, security, and privacy.



"WhatsApp, which is owned by Facebook, allows customers to send messages and make phone calls over the Internet.  In the last year, the company has been adding encryption to those conversations, making it impossible for the Justice Department to read or eavesdrop, even with a judge's wiretap order.  As recently as this past week, officials said, the Justice Department was discussing how to proceed in a continuing criminal investigation in which a federal judge had approved a wiretap, but investigators were stymied by WhatsApp's encryption."



So this is all, like, really pregnant.  I mean, this is really coming to a head.  And then I read just this morning on The Hill, they have sort of a "week ahead" summary.  And the headline was "Senators close to unveiling the Burr-Feinstein encryption bill."



LEO:  [Growling]



STEVE:  I know.  Our California...



LEO:  Our senator.



STEVE:  Senator Dianne Feinstein.  And I watched her being interviewed, and it just - I just get tense because she is so far out there in the "no question whatsoever, nothing should be outside of the government reach" side.  And it's just like, okay, calm down.  Anyway, so she and North Carolina's Richard Burr are - they have legislation.  It is written.  And this week it is expected to be put forth and unveiled.  And then of course this would be new law.  Then I assume that both houses of Congress have to look at it and then reconcile it and come to an agreement.  Then it goes to the President.  And the question is, based on his SXSW comments this weekend, one wonders...



LEO:  Well, we know he'll sign it.  I think actually, you know what, I think it might be hard for Congress to pass a bill like this.



STEVE:  Oh, good.



LEO:  I don't think it's going to get through Congress.  I think Congress, actually, there's enough people on both sides of the aisle who are against this kind of thing that I think this might be - I'm hopeful that that - and by the way, that's the last stand because we know the President will sign it.



STEVE:  Yeah.



LEO:  So sad.



STEVE:  Yeah.  The Hill wrote:  "While some argue that a judge should order WhatsApp to help investigators obtain the information they need in a readable format, others are hesitant to escalate the dispute, given that some lawmakers are expected to introduce" - oh, and this is about - "expected to introduce legislation to give law enforcement access to encrypted data as early as this week."



Now, the good news is, I mean, from a standpoint of, like, ripping the bandage off of the cut or the scab, I want to see what this legislation says, and I'm glad we don't have to wait four months or six months.  I thought we were going to.  But I guess this is like really ready.  And I hope you're right, Leo.  I hope that, see, I guess my feeling is we had all the demonstrations from the academic and the crypto community.  We've had testimony that was sane and coherent.  And unfortunately, if the legislation says what it must say, all of that's been ignored.  I mean, the fact that this is coming from Dianne tells us that this is - the government can - well, I guess, okay, I'll finish that thought.  The government can decrypt whatever they want.



Now, how do you implement that?  I mean, we're all about details on this podcast.  And as everyone knows, even if we do compel Apple to arrange to be able to comply with court orders, third-party apps, open source software, you know, existing crypto, which we've often said has already, it's like it's already left the dock.  It's out of the barn.  It's escaped.  Everyone knows how to do that.  So does it then become unlawful?  Are you breaking the law if you use an encryption that isn't government-approved?  Oh, this thing opens such a huge can of worms, I don't even know where to start.



So as we mentioned at the top of the show, I've not been a fan of John Oliver.  I don't know, his style just doesn't hook me.  But he did, and it was aired on HBO Sunday night, so two nights ago.  It's on YouTube.  You can find it easily.  There's a link in the show notes.  And I think in fact if you just put "John Oliver encryption," the first link I'm sure in Google will take you to their property in YouTube.



And even if you think you know everything about this, if you've heard everything we've said on this podcast, this is - it is a brilliant piece of work.  And when I finished watching it, I found myself thinking, wow, they put a huge amount of effort into this.  And there's also some fun at the end.  So there is new stuff there, but really good coverage of this whole issue.  And it's gone viral.  Last time I looked it had a million-plus views, and that was yesterday afternoon after a bunch of people had tweeted me.



LEO:  Three million now.



STEVE:  How many?



LEO:  Three million.



STEVE:  Good, good.  Although I don't know if it matters, except we know that legislators care what their constituents think.  And these are three million constituents who have to come away with a better understanding, watching this, than they had before.



LEO:  I think we're really seeing that Tim Cook's strategy was clear and was correct, which is to take it to the people, to create the conversation, and really as best we can educate people to the risks of a backdoor in encryption.  And it is about backdoors ultimately now because that's clearly what the end game is for the government, and that's what the Burr-Feinstein bill is about and all that.



STEVE:  Problem is the term is ill-defined.



LEO:  Yeah.



STEVE:  I don't like the term.  So in my blog post at steve.grc.com, I wrote up a little essay on Saturday where the goal of the post was to separate the idea of encryption from access.  And the whole point was one of the problems this discussion is having is that everyone talks about weakening encryption and backdoors and using terms that are not well defined.



The fact is we have the technology to allow Apple to give the government secure access on a phone-by-phone basis in a secure fashion.  I've talked about it for the last few weeks, the notion of a completely random key which every iOS device has, which cannot be read from it, which is stored in the Secure Enclave, which Apple has encrypted under their ultra galactically secret private key so that, even if their database escapes, then it doesn't do bad guys any good because they still can't decrypt that database.  The point is encryption does give us the tools to do this securely, if we wanted.  And so the question is do we want that?



But my point was that needs to be a separate question.  We weaken the argument for not doing it if we say we're not doing it because we can't, because no one believes us.  And they're right, because we can.  So it's important to separate the technology which can empower this from do we want to.  And I think that makes it a much more pure and correct argument.  And that's what David Pogue was asking was exactly this.  Are we sure this is inseparable?  And as I was listening to him on Sunday, I thought, well, I wrote about this the day before.  That's exactly right.  The technology will do anything we want it to.  That part is true.



So it's wrong to say, and I think it weakens the argument to say, oh, we don't think we can.  No, we can.  The question is, is that what we want?  And so I think that moves the argument to exactly the right place.  Let's separate the technology, separate this encryption and all that.  We could do it securely, if we wanted to.  But Apple doesn't want to.  That's the argument, I think, that we should have, is we don't want basically a spy state where the law is it's illegal to use strong encryption.  I can't imagine being a citizen of that country, but it may be upon us.  Anyway, so...



LEO:  Again, and we'll probably have this conversation at some point, if encryption is made illegal - or real encryption is made illegal because anything less is not real encryption.  But if real encryption is made illegal in the United States, will we be able to get hardware platforms that support it?  And kids, go to ITProTV.  Start learning security now because I said this 10 years ago, and it's starting to get more true than ever.  The future freedom fighters won't carry guns.  They'll be hackers.  They'll be coders.  They'll know how technology works.  If you're going to fight for freedom, that's how you're going to do it.



STEVE:  Like the first scene of "The Matrix," where the hackers are getting a little nondescript disk from Neo, and it's like this is all underground, super illegal stuff.



LEO:  I can see a time when encryption, real encryption is illegal in the U.S.



STEVE:  Wow.



LEO:  We've seen it before.  It was classified as munitions in the '90s.



STEVE:  Yeah.



LEO:  And we had a horrific consequence that we still suffer from.



STEVE:  Yup.  I've been listening to you saying that, and you've exactly right.  We've talked about it, how there's still 40-bit encryption lurking around because once upon a time it was mandated.  And we've seen how slowly this stuff drains from the technical ecosystem.  IoT devices, for example, many of them are never going to change after they come out of the factory.  And they could have problems that will never get fixed.  Well, they could have 40-bit encryption that'll never get updated because it was originally weak, deliberately weakened when it was released.  And maybe that's what it'll be.  I just - I can't wait to see this legislation.  I'm so happy we won't have to wait very long for it because...



LEO:  Oh, we haven't seen the text of Burr-Feinstein?



STEVE:  No.  As far as I know it's not public yet.  It's supposed to happen sometime this week.



LEO:  Yeah.



STEVE:  But, boy, that'll be sad, Leo.



LEO:  I don't - well, we'll see.  I mean, I think the message...



STEVE:  Do we have to change the name of the podcast?



LEO:  Insecurity Now!.



STEVE:  To Security Was!?



LEO:  Security - oh, that's good, I like it, Security Was!.  I like it.



STEVE:  Security Was!.



LEO:  Yeah, that's good.



STEVE:  So speaking of Security Was!, Brian Krebs covered a story that came out of the Talos team.  Cisco created a group called Talos Intelligence.  And these guys, the Cisco team, took a look at a Trane - Trane is a very well-known, high-end HVAC - heating, ventilation, and air conditioning.



LEO:  Oh, yeah, T-R-A-N-E, yeah.



STEVE:  T-R-A-N-E, exactly.  But I think I had Trane equipment on my roof of the building that I built years ago, yeah, because it's high-end industrial.  Although this is a consumer product because it shows you photos of your family on the color LCD.  Anyway, so I'll just share this real quickly.  Brian wrote, and I'm paraphrasing this:  "Before purchasing an Internet of Things device - a thermostat, camera, or appliance made to be remotely accessed and/or controlled over the Internet - consider whether you can realistically care for and feed the security needs of yet another IoT thing.



"In April 2014" - so this is a little - this is dated, although it took Trane a long time to respond - "researchers at Cisco alerted HVAC vendor Trane about three separate critical vulnerabilities in their ComfortLink II line of Internet-connected thermostats.  These thermostats feature large color LCD screens and a Busybox-based computer that connects directly to your wireless network, allowing the device to display, not just the temperature in your home, but also personal photo collections, the local weather forecast, and live weather radar maps, among other things.



"Cisco researchers found that the ComfortLink devices allow attackers to gain remote access and also use these devices as a jumping-off point to access the rest of a user's network."  And this is like the nightmare scenario.  This is the worst it could possibly be.  "Trane has not yet responded to requests for comment.  One big problem is that the ComfortLink thermostats come with" - everyone sitting down?  Hold the steering wheel tightly and focus on the road.  "ComfortLink thermostats come with credentials that have hardcoded passwords; and, by default, the accounts can be used to remotely log into the system over SSH."



LEO:  Well, that's comforting.



STEVE:  Yeah, what a comforting link.



LEO:  What a comfort.



STEVE:  Oh.  So, and then "The two other bugs that Cisco reported to Trane would allow attackers to" - wait for it - "install their own malicious software on these vulnerable Trane devices..."



LEO:  Oh, man.



STEVE:  "...and use those systems to maintain a persistent presence in the victim's local network."



LEO:  Wow.



STEVE:  So the lesson here is there cannot be any question but that we need an isolated Internet of Things network.  It's unfortunate, but just you cannot let this stuff - which is going to have all kinds of bells and whistles and be reaching out to remote web servers, thus opening up ports through your router in order to be contacted - you cannot let that stuff touch your main network.  We have to have isolation.



And what I'm hoping, as I mentioned, is that the whole three-router solution, while it's simple and clean and robust, I'm hoping it's a stopgap, and that we will shortly have our standard consumer NAT router vendors explicitly offering network isolation for Internet of Things as a feature.  That is, first of all, providing true isolation technology, not just saying it, but really doing it and making it easy to set up where, I mean, it should be easy.  For the end-user it would be as easy as two different passwords, and you give your IoT things this password; you give your other network things that password.  And by using different authentication, they are automatically on segmented networks that have no visibility of any kind to each other.  Totally doable, just that easily.  And we need that from router vendors, or maybe from third-party firmware, alternative firmware sources.  But, boy.



Anyway, I thank Brian for bringing that Cisco research from their Talos group to our attention because it's exactly typical.  And this is tip of the iceberg.  It's just the problem is that everybody wants to get in on this IoT phenomenon and have fun with it.  And the problem is that security's not their focus.  It's selling, putting things in bubble packs on J-hooks in stores and saying, oh, look, you know, stick this in your refrigerator, screw this into your light bulb socket and so forth.  And look at all the fancy things you can do.  But security will just be a second thought.



In the last week, something took me over to the BleepingComputer site.  We've referred to these guys often.  They're neat guys.  They were the early go-to site when ransomware first struck, and they have some online forums, and they had some good static remediation pages that talked about blocking the ransomware, detecting it, what to do about it.  It's where we pointed people who wanted to spend more time digging into this.  Something, I don't remember what it was in the last week, took me there, and I got hit with a page-covering pop-up that I didn't mind because it wasn't an ad.  It was a plea.  They apparently gave a negative review to something called SpyHunter, and in retaliation the SpyHunter people have sued them.  So what they're asking for is some financial assistance.



If anyone has been using BleepingComputer, likes the site, goes there, takes advantage of it, give them a few bucks to help them with their legal defense fees because this is a lawsuit, basically frivolous, trying to force them to bring down a well-meaning, non-malicious, but probably accurate review.  I mean, these guys know what they're talking about.  And it's unfortunate that, whatever SpyHunter is, it didn't get a glowing review; but SpyHunter ought to spend their effort fixing their product, rather than suing people who talked ill of them.  So anyway, I wanted to give our viewers a heads-up in case anyone hadn't been there recently, but wanted to give BleepingComputer a hand because it seems like the right thing to do.



Boy, a new attack vector for DDoS amplification attacks.  We've talked about DNS, how the problem with DNS and with NTP, the Network Time Protocol, is they're both meant to be very lightweight protocols, so they operate over UDP.  You cannot spoof a source address if you want to use a TCP service because part of what TCP does, the TCP protocol, is that the so-called three-way handshake, you send a SYN packet, short for synchronize, to the other guy.  They send back a SYN ACK, which is basically a compound packet, their own SYN, their own synchronization, and an acknowledgment of the receipt of your SYN.  Then you finally send an ACK which acknowledges the receipt of their SYN ACK.



So that three-way handshake establishes the connection.  But that also inherently validates the IP, that is, both ends know that the IPs that they have are accurate because they've just exchanged packets back and forth.  So you can't spoof a TCP connection.  If all you wanted in the old days was a SYN flood, you could send SYN packets off to a bunch of TCP servers and have them all send SYN ACKs back to the target of the SYN packet in a TCP reflection attack.  That could be done.



But UDP is different.  The idea is it wants to be just a query and a response, very lightweight, not all this set things up and get things synchronized and count the bytes and all that.  No.  It's just here's my question; let me have your answer.  Perfect for DNS.  Here's a domain name.  Give me the IP.  Bing, bing, done.  Same thing for Network Time Protocol, very lightweight protocol.  Well, there's another lightweight protocol.  Nobody even thought that this was going to be a problem because there is no good reason for it to ever be public facing.



LEO:  Which of course means it is.



STEVE:  Which of course means, right, right, Leo.  And I don't know who is - and I'm curious.  If some listeners want to find out, I'd like to know.  Why are there 599,600, just shy of 600,000?  It's got to be routers.  And it's crazy.  The protocol is known as TFTP, Trivial File Transfer Protocol.



LEO:  Not SFTP.  Not FTP.  TFTP.



STEVE:  Right.  Now, FTP is a File Transport Protocol that we're all familiar with, or at least old-school guys are.  FTP is a TCP-carried protocol, meaning in TCP fashion you establish your communications, and then you have a nice command set that allows you to say things like "change to this directory," "list the contents of this directory," and so forth.  Oh, and you have to authenticate.  You have to give it a username and password in order to say this is who I am, in order to get access, to log into the FTP server.



But there's a class of need which doesn't, by definition, require all that.  And, for example, it's when you have an old-school router.  I've got a Cisco router, for example.  And I did, I used TFTP, Trivial File Transfer Protocol, to update its firmware.  I bought the thing off of eBay, it was in good shape, but it had - it may not even have had firmware, or it didn't have what I wanted.  So I found the right IOS, that's what Cisco's, its Internet Operating System (IOS) is called.  And I got a simple TFTP client for Windows and hooked them up by serial cable, I think, or I guess it must have been Ethernet.



But the point is that it is UDP.  It is a simple packet-and-reply protocol.  There is no authentication in Trivial File Transfer Protocol, which again is how can there be 600,000 of these exposed to the Internet when there's no authentication available?  It's like, who's got their TFTP servers, 600,000 of them?  And they've of course been found by Shodan, and they're all there, just saying, "Hi.  Ask, and ye shall receive."



So the Trivial File Transfer Protocol is exposed; 600,000 of them are out there.  And they can create, it is estimated, and in a research paper which is behind a paywall - it's ScienceDirect.com.  So I was unable - and I didn't want to give them 40 bucks for it.  It wasn't that important.  But the researchers developed a 60, six zero, factor bandwidth amplification with these TFTP servers, making it...



LEO:  Sixty is not that bad, though; right?  Or is it?



STEVE:  Well, it's up there.  That's up there with the best of them.



LEO:  Is it?  Oh. 



STEVE:  So, yeah, that's a substantial amplification.  It uses well-known port 69.  So somebody, probably Shodan, scanned all of the IPv4 space, sending UDP TFTP query packets to port 69, and got 599,600 replies.  Meaning that there are - they have to be routers.  I can't imagine - maybe they're light bulbs.  Who knows?  But something is out there saying, would you like to update my firmware?  I'd be happy to have some new firmware, if you've got any ideas.  Oh.



LEO:  I mean, I guess you'd have to figure out what it is before you could...



STEVE:  Yeah, exactly.  And the protocol doesn't require authentication.  There's no list, I don't think you can list files of a directory.  It is very lean.  It was deliberately designed to be a minimal amount of code that you might stick in a ROM, for example, so that you could, you know, just enough, it's sort of like a bootstrap, just enough to then bootstrap the firmware so you could always count on the TFTP server being present.  And then you would use it to then load the real firmware.  You would then restart the device, and up it would come with the firmware that this little TFTP server had allowed you to feed into it.



So, wow.  It'd be interesting to see, as this develops a little bit further, what those 600,000 devices are because, while they're useful for a factor of 60 amplification attack - because, again, it's UDP.  So you'd simply spoof the source IP with a query to it, and it bounces its reply at your victim with a packet that is 60 times larger than the query you had to send out.  So it must be a very small query and a very large response, obviously.  I don't know the details, and I was unable...



LEO:  That's what you want, though; right?



STEVE:  Well, it's not what we want.



LEO:  All the amplification, yeah.



STEVE:  It's what the attackers are, like, drooling over.  Although, frankly, if I were a bad guy, I'd be much more interested in what those 600,000 routers or whatever the things are, are.  



LEO:  Somebody attacked us the other day with a WordPress amplification DDoS.  And it was a bunch of WordPress installs in Russia.  Apparently it has to do with a WordPress pingback routine.  



STEVE:  Wow.



LEO:  Yeah.  It wasn't a very good DDoS.  I know I shouldn't laugh.  But it wasn't a very good DDoS.  But that just shows you there's all sorts of stuff out there.



STEVE:  Well, yeah.  And that's the other thing, too.  I mean, there are still protocol attacks.  We've been talking about - or, I'm sorry, in protocol.  We've been talking about sort of attacks at the plumbing level.  But ultimately, a website wants to give you a page.  That's what it's there for.  And we've talked in days past.  If a website has a very high cost to delivering a page, then you can hurt the server by asking for pages faster than it's able to deliver them so that, you know, that's not any kind of a filterable attack unless you have something, for example, caching those pages in front of your server.  Which of course we talked about back when GRC was getting DDoSed.  We talked about that was what CloudFlare was doing.



So last week I mentioned - oh, last week was Patch Tuesday, and it was happening just, of course, as Patch Tuesday does now, during the podcast.  And I hadn't had a chance to look at it closely.  One of the things that got a lot of people upset was that, in the guise of a security update, and this was KB3139929, that also included KB3146449.  And the page for that 449 update reads:  "This update adds functionality" - get that, functionality - "to Internet Explorer 11 on some computers that lets users learn about Windows 10 or start an upgrade to Windows 10."



Which of course we now know from the industry's massive backlash to this, I mean, people got a little over the top.  I think it's just the people, as you said, Leo, at the top of the show, are just getting a little tired of Microsoft pushing Windows 10 as hard as they are.  Woody Leonard, who's a well-known industry writer, he writes for InfoWorld now, he wrote:  "Putting an ad generator inside a security patch crosses way over the line."  Now, I wouldn't call this an ad generator.  I mean, it's an ad probably only for Windows 10.  But again, nobody...



LEO:  I agree with Woody.  I agree with Woody.  It's way over the line.  This is terrible.



STEVE:  Yeah.  Nobody doesn't know that Microsoft wants them to have Windows 10.



LEO:  But you can't, because it's a critical security update, you can't not get this GWX ad.



STEVE:  Right, right.



LEO:  So annoying.



STEVE:  And I haven't mentioned this, but I should, and that is that I've given people the link, my little bit.ly shortcut, to what I have now proven is a bulletproof perfect solution.  And that's the bit.ly/no-gwx.  That simply expands to the Microsoft-sanctioned way of saying no.



LEO:  Does it work?



STEVE:  Yes, absolutely.



LEO:  Okay.  So you don't have to get the GWX Control Panel anymore.  Just use this.



STEVE:  Nope, none of that.  None of that.  This completely...



LEO:  And they promise not to update on top of it and put it back.



STEVE:  Well, yes.  But what I wanted to mention was my back was stiffened when I'm reading through the supported systems, and I see Windows 2008 R2 Server.  It's like, whoa.  Hold on.  You mean....



LEO:  Yeah, you don't do that to a server.  You don't do that to a server.



STEVE:  Yes, they do.



LEO:  Oh, that's terrible.



STEVE:  And that's my point.  That is un-effing believable that Microsoft would push Windows 10 to my, to GRC's production server in any way.



LEO:  That's horrible.



STEVE:  It's just like, I'm just speechless.  And it's like, this is just like, well, okay.  There it is.  I'm speechless.  Although, on the funnier side, to go from this dark black topic, I got a tweet from Chris, whose handle on Twitter is @selfuntitled.  And I just - this just made me chuckle.  He found a project on GitHub which is the anti-adblock killer.  And so what he tweeted was so perfect.  He said:  "The ad block arms race escalates again, an ad block blocker blocker," which of course this is, an ad block blocker blocker.  So this is the, for sites that are trying to block your ad blocker, now GitHub is offering you the ad block blocker blocker.



I've had a number of people ask me about setting up Windows 10 machines.  I shared my experience fighting with those laptops where the Windows 10 came with Windows 7 SP1.  Lord knows what happens if you just try Windows 7.  It would really be out in the weeds.  But even the Service Pack 1 is the final edition that Microsoft offers.  And of course it's still, it's like 200-some security updates behind.  But it's so old that they changed Windows Update after it in a way that causes it to get lost in the weeds.



So I created a new bit.ly link for people who want the basically Windows Update Update.  And naturally it's bit.ly/wupup, Windows Update Update, or Windows Up Up, wupup.  That will always take you to the Microsoft Knowledge Base article titled "How to update the Windows Update Agent to the latest version."  And you could also just google "Windows Update Update," and it'll also take you to the same page.  That is, that's how I got it from Microsoft.  So, you know, there are lots of...



LEO:  Did you see that a lot of people are complaining, and I've heard from a number of people, that Windows 10 upgrade is just installing without permission.  A lot of people are starting to report this.  Now, remember, we talked that they've moved it to the recommended update.



STEVE:  Oh, I - yes.



LEO:  But we'd always said, and everybody had confirmed - and I'm going to have to ask Paul and Mary Jo about this - oh, no, but don't worry because, yes, it will download it.  But before it completes it'll say, now, I have it.  You want to upgrade; right?



STEVE:  I'm glad you mentioned it because I've run across those stories in the last few days.  It's literally, it is rebooting their computer and taking them to Windows 7 without their permission.



LEO:  Windows 10, yeah, yeah.



STEVE:  I'm sorry, to Windows 10 without - yeah.



LEO:  And two people in our chatroom, I mean, our studio are saying it happened to them.  Happened to you?  Happened to them.



STEVE:  Oh.  Oh.



LEO:  That, you know, that's a bug.  I don't think that that's what...



STEVE:  Leo, is it a bug, or is it a feature? 



LEO:  It's a bug.  There's no way Microsoft wants that to happen.



STEVE:  Wow. 



LEO:  That's just bad.



STEVE:  Wow.  Well, we know how badly, I mean, nothing could lead us to believe that they desperately don't want everyone to do that.  I can't believe they're wanting to do that to my server.  That sends chills down my spine.



LEO:  No.  Imagine if it upgraded without your permission.



STEVE:  Right.  Who knows if my stuff's still going to work?  Suddenly it just crashes, and it's gone, because it got Windows - what is it?  Do they call it Windows 10 Server?



LEO:  No, Windows Server 2016 or something like that, or 2015.



STEVE:  Yeah, 20 goodbye.



LEO:  Goodbye.



STEVE:  Wow.



LEO:  That is really - it is awful.  It is really - that is just unacceptable.



STEVE:  So I did want to mention to people who have been trying, who have been receiving the Healthy Sleep Formula ingredients, that I'm getting - I'm beginning to get feedback from people who are reporting the end of years of insomnia.  So it's batting a thousand.  Some people are succeeding adding Taurine.  For some people it is actually stimulating, and it hurts their sleep.  Taurine itself is so good that they could easily just consume that bottle they purchased in the mornings, and it would be good for them.  I'm seeing a cessation of all of the ringing in my ears, the tinnitus that I've had.  And it has...



LEO:  What?



STEVE:  It has some of that reported effect.



LEO:  I have bad tinnitus.  So if that happens, I'll be really...



STEVE:  So you might just take...



LEO:  I'll send you a bottle of your favorite burgundy right up.



STEVE:  Take extra in the morning, Leo, and then see if...



LEO:  Taurine.



STEVE:  Taurine.



LEO:  Taurine.



STEVE:  Yup.



LEO:  Wow.



STEVE:  And I did hear you also during the preshow of The New Screen Savers.  You had an unsolicited discussion about the Healthy Sleep Formula.



LEO:  Yes.



STEVE:  And it's continuing to work for you.



LEO:  Loving it.  Now, but this is what worries me.  I'm kind of, like, come to Daddy.  Okay, come to Daddy, sleep formula, I'm ready to go to bed.  It's like I love it.



STEVE:  I know.



LEO:  You got me hooked.



STEVE:  I know.  It's just you look forward to sleeping now.



LEO:  I look forward to it.



STEVE:  Because it's just going to be a really nice night of sleep.



LEO:  It's not the struggle.  It's not the struggle it used to be.



STEVE:  Yeah.



LEO:  We sound like we're doing an infomercial.



STEVE:  Well, the good news is it's free.  And that's the point.  The FDA has nothing to say about this because what they regulate is commerce.



LEO:  Well, they've always been told that they can't regulate supplements, which was of course the supplement association of America or whatever getting a law changed.  I think they should regulate supplements, but...



STEVE:  It would be, as long as - if it didn't increase the prices...



LEO:  Well, it would.  And it'd decrease the availability.  It would cause all sorts of problems.  So it's probably, you know, just - but consult your physician before you do this stuff.



STEVE:  I think it's Orrin Hatch.  Is he still alive?



LEO:  Yeah.  Is that Oregon?



STEVE:  Yeah, I think Orrin has a huge amount of stock in the supplement industry, and so he blocks all the legislation that comes along.



LEO:  Is that true?  Wow.



STEVE:  So Orrin, you go, boy.  You just keep blocking any attempt to...



LEO:  Senator, Utah, yeah.



STEVE:  Yeah.



LEO:  Oh, well.



STEVE:  But anyway, I did want to mention - you also mentioned during The New Screen Savers preshow that you were loving Season 4 of House of Cards.



LEO:  Yes.



STEVE:  Now, I stopped after Season 2 because I'd heard it wasn't any...



LEO:  Three wasn't very good.  Three was disappointing.



STEVE:  Well, and I have to say I guess they wrote it for me because...



LEO:  You have to watch Season 3 before you can watch Season 4.  It's all...



STEVE:  Well, that's why I started watching Season 3.  My point was I love Season 3.



LEO:  Well, you'll love Season 4.



STEVE:  Well, okay.  Because, you know, those first two seasons were like, you know, people were being asphyxiated with, you know.  And it's like, okay, this just seems a little farfetched.  Three seems pure political machination.



LEO:  It is.  Oh, you're going to love Season 4.  Oh, man.



STEVE:  Neat, neat.  And I agree with you.  Robin Wright is just - she's just acting herself to a fabulous...



LEO:  Wait'll you see Season 4.  She's in many ways now - that was probably what was wrong, in a way, for Season 1 and 2 was you couldn't really understand what's her role in all of this.



STEVE:  Yeah.  And their relationship was odd, too.



LEO:  Yeah.



STEVE:  You know, they would sit...



LEO:  Yeah.  You get a lot more insight into it now.



STEVE:  They would sort of sit in the windowsill and share a cigarette.  It's like, okay, well, but...



LEO:  No, no, you know what?  I'm now of the opinion that they had planned this whole arc all along, and this isn't like an afterthought.  This explains a lot about Season 1.



STEVE:  Interesting.  Oh, I can't wait.  It's like...



LEO:  I haven't finished it yet.



STEVE:  Okay, thank goodness for Healthy Sleep Formula because I need it.  And I need to say that I continue to look forward every Monday night to "The Magicians" on Syfy.  I just like it.  Maybe they could pick up the pace a little bit.  But I really am enjoying it, so for what it's worth.  And I think Question 7 there was a comment about someone in his - I think we might have had two questions about hard drives.  So I thought I'll wait to talk about SpinRite till them.



LEO:  A Q&A.  Feels like, again, we went a long stretch without one.  I don't know why.  Maybe we did.  I can't remember.  But I've got them for you.  Did we do questions last...



STEVE:  We've been covering so much news, I think.  There's just so much going on right now.



LEO:  So Dave Redekop was here a couple of weeks ago during the Security Now! show, watching the show.  Great guy.  He was a sponsor years ago with Nerds On Site.



STEVE:  Yup.



LEO:  We've always thought the world of him and his business.  And he said, he wrote:  I thought you and your audience would like this tip, StealthyLinks.org.  Sometimes, he says, it's useful to link to a bad site from a high-value site.  But we don't want search engines to assume that the linked-to site is any good.



STEVE:  You know what he means?



LEO:  Yeah, you don't give them any Google juice.



STEVE:  Exactly.



LEO:  Now, Google has a way to do this, I should point out, but you have to have access to the HTML.  You just rel="nofollow" and then it gets no Google juice.  And that's what this guy's doing.  So the site allows you to create a link that will bounce the user's browser through the site.  See, this is the part I don't like.  But it's different from a regular URL shortener in that it's purposely obfuscating the source and eliminating trackers en route.  All the best from green Canada.  Thanks for the awesome podcast, as always.  @DRtheNerd.



So, yeah, very simple.  In fact, a lot of software, like WordPress and others, will allow you to say, "Make my links nofollow."  But you can also do it by hand, add nofollow in there.  Then it goes straight to the site, but they get no Google juice from the site.



STEVE:  Could you post a nofollow link on a social media site?  I mean, and like add the nofollow?  You may not be able to control that.



LEO:  Oh, I see what you're saying, yeah.  Okay.  Okay.  I'm sure bit.ly and others would let you do that.  That's an interesting question.  I'll have to google that around.  That's a good point, right, you're posting it into Twitter, but you don't want to give them any Google juice.



STEVE:  Well, or you just don't have, like, all I can think of - sanitize is the word.  I was thinking sanctify.  No, that's not what I mean.  Sanitize.



LEO:  Twitter does no - Twitter, I'm pretty sure, does rel="nofollow."  I'm going to have to look this up.  I'm pretty sure Twitter does rel="nofollow."



STEVE:  So, I mean, they add...



LEO:  They add it.



STEVE:  They preemptively add that, ah.



LEO:  Yeah.  This was a big deal because - and by the way, you're not getting much social Google juice when you put something on Twitter or Facebook.



STEVE:  And I was going to say, so those are examples.  But just in general, like putting a link in a blog posting reply.



LEO:  That's for sure what you would want to do in a blog.  On the other hand, if you want to promote the site you're linking to, which mostly you do because you like it, don't put rel="nofollow" in there.  Yeah, Facebook and Twitter have added nofollow to the links.



STEVE:  Oh, nice.



LEO:  So you don't have to worry about Facebook and Twitter.  They're not getting any.



STEVE:  So it's neutral.



LEO:  It's neutral, yeah.  Oh, I'm sorry, more questions.  Thank you, David.  Let's get back to the Q&A.



STEVE:  And good luck with this location in Wisconsin.  When I transcribed this, I thought, okay, Leo, you are - maybe you actually know where this is.



LEO:  Everybody knows it's Oconomowoc.



STEVE:  Wow.



LEO:  Michael in Oconomowoc, Wisconsin notes another crypto deprecation.  I'm good at pronunciations, pronouncing things.  As hard as I try to listen to every episode - I might be saying it wrong, by the way.  I have no idea.  I just, if you say it with confidence...



STEVE:  That's right.



LEO:  Oh, you mean Oconomowoc?  Yeah.  For all I know it's pronounced Wooster.  I don't know.  As hard as I try to listen to every episode, a few slip by, and you may have already addresses this.  I'm reading it exactly as written, [sic].  Addresses this.  I thought you and the community would like to know that the Payment Card Industry, or PCI, standards group has moved their target for TLS v1.0 deprecation - speak of the devil - from June 2016 to June 2018:  "The Payment Card Industry Security Standard" - which is known as PCI SSC, oh, I'm sorry - "the Security Standards Council is extending the migration completion date to 30 June 2018 for transitioning from SSL and TLS 1.0 to a secure version of TLS," that is, 1.1 or higher.



STEVE:  And I thought this was really interesting because it's the first that I had heard that we already had plans afoot to abandon TLS 1.0.  It's like, wait, we just got here, and we're leaving already, because of course we have 1.1 and 1.2.  And if we're learning anything, it's that it is just so difficult to get people to get off of what's working.  Even though there's increasing evidence that it is insecure, people just still want to use what they've got.  There was a dialogue with Ryan Sleevi, Google's Ryan Sleevi, over in the CA/Browser Forum, with someone still arguing about SHA-1 and not being happy about being forced off of it for some reason.  It's like, boy, you know, that ship has sailed.  You just have to - in fact, speaking of the devil, I'm now running SP3 of XP.



LEO:  What?



STEVE:  I bit my own bullet over the weekend.



LEO:  What?  Welcome to 1992, Steve.



STEVE:  Exactly.  I know.  Ever since I updated GRC's certs on New Year's Eve, I have not been able to bring up GRC, my own site, on my own machine, under IE.  I use IE because it's just so lightweight, and it's just sort of there.  It runs fine under Firefox, and I don't even remember now Chrome because - I think it did on Chrome because remember Chrome uses some of the native platforms' security stuff.  But finally what happened was that SQRL, my SQRL client does use the built-in crypto in Windows.  And SQRL wouldn't work.  So I thought, well, that can't stand.



So long ago I had tried to install SP3, and it just sort of didn't like my system.  And I always thought that was probably because I had turned off a bunch of services, you know me, trying to run as lean as I can.  I went through the service list and said, what is this?  I don't need that.  Turned it off and disabled it and disabled it and disabled it.  And as a consequence I think that's always why SP3 wasn't happy, but everything was working fine, and I left it that way.  But SP3 was when XP did add awareness of SHA-256 certs.  So now SQRL is running again, and I can access my own site from my desktop.



LEO:  Wow.  Nice.



STEVE:  So miracles never cease.  However, now we know that even TLS 1.0 is destined to be removed.  But clearly summer, the middle of this year, June 2016, nah, that was never going to happen.  I don't know what the back story is behind them punting two years.  But that seems reasonable.  I mean, there are no known problems with v1.0, or we wouldn't be using it now.  As far as we know, it's just fine.  We got away from SSL.



LEO:  Well, doesn't it tie into POODLE?  Can't you use a downgrade to get to SSL3 and POODLE?



STEVE:  There is, well, next week Father Robert and I are going to talk about DROWN, D-R-O-W-N, which is an interesting hack that does use access to an older version of SSL.  But here we're just talking about TLS v1.0, although that is almost the same as SSLv3.0.  So I'm glad that they're moving forward.  And I'm glad that they're giving people enough time.  So, yeah, it just, I mean, it wasn't going to happen by summer.  We're just - we've barely recovered from giving up SHA-1.  That was enough of a workout for everyone.  And I'm finally back online.  So it's like, okay, good, let's leave things alone for a while.



LEO:  A wonderful thing.  Let's see.  Wait minute, let me go back to the questions.



STEVE:  Scott.



LEO:  Scott in Columbia, Maryland.  He's wondering a little bit about encryption, the cloud, and security:  Steve, I have a question regarding exactly how secure it is to store encrypted information in the cloud.  Well, you've got to use [P].  I have a file - that's me, by the way, not Scott.  Scott wouldn't say something like that.  I have a file, obviously containing sensitive information, which is currently kept in a VeraCrypt volume on a thumb drive.  The VeraCrypt volume was set up using the AES-Twofish-Serpent algorithm, which, if I am reading the VeraCrypt docs correctly, means the container is thrice encrypted.



STEVE:  Oh, yes.



LEO:  And that's better than twice encrypted, which is almost as good as single encryption.  The password for the VeraCrypt container is a very long random string obtained from your Perfect Passwords page.  Good.  The password is of course stored in LastPass.  You didn't think I could possibly remember that, did you?  My question is would it be safe, in your opinion, to store a copy of this VeraCrypt container on a cloud service like OneDrive or Dropbox for backup of the very sensitive data - taxes, for example?  But just parenthetically, let me ask you, Steve, is it better to encrypt something three times than it is to encrypt it once?



STEVE:  Okay.  So what struck me was the overkill of this.  Now, the argument - so what he's done is his data is encrypted with Serpent, which is a good cipher.  Then with Twofish, which is a good cipher.  Then that is encrypted with AES, which is the industry standard cipher.  The argument for multiple encryption is - and, now, maybe they each have different keys.  He didn't specify, or whether they are using the same key.  If they have different keys, then you end up with a key three times as long, which is like crazy long.  But the argument for multiple encryption is, if a flaw were ever to be found in one of those, then your data is still secure.  So that's the argument.  However, standing back from this, he's got this thing triply encrypted and wants to know if it's secure to store it in the cloud.  My take was the weakest link was LastPass.



LEO:  Right.



STEVE:  Which is not to say that LastPass is weak.  But the extent to which he's gone to protect this thing, which must be the crown jewels of existence, you know, and a crazy long, absolutely high-entropy password that he got from GRC's Perfect Passwords Page.  You do not want to put it into LastPass because, I mean, I love LastPass.  I use LastPass.  I recommend LastPass.  But in terms of the weakest link, that's the weakest link because it's...



LEO:  And why is that?



STEVE:  Well, because it's a browser.  It's running JavaScript.  You're depending upon nothing in your system ever.  You're depending upon your system never getting infected with something that had a way of worming its way into LastPass.  I have no way of knowing if there is any way.  But just from an analysis at 10,000 feet, the defect in his exquisitely over-compensatory encryption is he stored it in LastPass.



LEO:  Yes.



STEVE:  Because, which is not to say it's not secure.  But of everything he's done, that's the weakness.  And so I would, by all means, I know that my pseudorandom generator is very secure, pseudorandom.  No one has GRC's keys.  That password went from me to him.  No one could get it.  I would use it, but then I would store it on a thumb drive and put it somewhere else.  And print it out because he doesn't have to remember it.  It's not going to be that long.  But if he absolutely had to type it in again, he could.  But the thumb drive is more convenient.  The printout is absolutely bulletproof against - prevents against loss.  But don't store it on your local computer in any form, even in LastPass, because that's the point of greatest vulnerability.  So Scott asks, "Is it safe?"  Oh, my god, yes.  Triple encryption with different algorithms?  That's very safe.



LEO:  Jay W., Washington State, wonders about Jupyter in the web browser:  I'm a chemical researcher and instructor.  About half a year ago I began using a tool called Jupyter - it's J-U-P-Y-T-E-R, Notebook, you can find it at Jupyter.org - to assist my research and teaching, and I find it immensely useful.  It allows me to generate documents containing code, documentation, graphics, and other elements to organize and share my work with students and other researchers.



However, I am slightly uncomfortable with the fact that the notebook runs in the web browser and connects to a server created by the Python kernel.  If browser inter-tab sandboxing and my firewall prevent malicious access to my notebook and server, there should be no problem.  However, the fact that I'm writing and executing Python code from the browser makes me uneasy.



As an extra precaution, I'm thinking it would be nice to have a separate browser that does not connect to the Internet, that I can dedicate to Jupyter.  Would this be an effective precaution, and how might this be accomplished?  I don't see an easy way to configure a Mac firewall to block a specific browser.  I'm also curious about what it means that the browser is connecting to a server on my system?  Is this something I should be concerned about?  Thanks for the great podcast.  Jay W. from Washington.  I'm going to have to take a look at this Jupyter thing.  I'm not sure what it is.



STEVE:  You should, Leo.  It's a really - I was unfamiliar with it before he mentioned it.  And it's a very interesting system.  It looks like, it says it supports over 40 different languages.  The server is written in Python.  And it looks like you're actually able to author code in the browser that it then runs, so in order to, like, create animations and physical simulations and all kinds of stuff.



LEO:  Wow, this is really cool.



STEVE:  It really is.



LEO:  So what are the security concerns here?



STEVE:  So, okay.  So what they've done is interesting.  They wanted a cross-platform solution.  So they implemented their system as a server running in the local system.



LEO:  Localhost. 



STEVE:  A localhost, exactly, which you connect to with your browser.  Now, it happens that I've just come out of several months of work with the SQRL group, looking at the idea of the SQRL client in a user's machine creating a localhost server so that the browser could receive the session permission, essentially the session tag, directly from the client, rather than looping through the Internet.  Because that would, if it were feasible, would provide absolute man-in-the-middle protection.



The problem is Microsoft is deprecating the use of localhost servers.  They're threatening not to allow it in their Edge browser.  In fact, for a while it was going to be turned off.  Then before they shipped they turned it back on.  But they really seem to be making noise that they don't want to allow this in the future.  So unfortunately we developed the technology, we proved it, and we decided, okay, the proper place to do this would be with a plugin.  A plugin would have the same capability of establishing its own communication.  We were just trying to do it in a browser-neutral, plugin-free way.



But the point is there's nothing insecure about this kind of communication.  I also saw something in the last couple weeks where some other security product was using the same thing.  That is, they were setting up a server, listening on 127.0.0.1, the so-called localhost IP, and some other component of their system was talking to that server through the localhost.  Which it makes people nervous because they sort of think of it as the Internet.  They think of it as IPs.  And we know of all the scary things that can happen between IPs.



But the way Windows and other operating systems implement this is it's basically interprocess communication.  It is, oh, I know what it was, it was something that was going around where there was this communication between processes that was not encrypted.  And it was like, you know, shouldn't it be encrypted?  It's like, well, it actually all occurs in the kernel.  And while, yes, you could technically intercept, if you modified the kernel and intercepted kernel-level things, then you could intercept the communication between that localhost server and the client that is accessing it.  If you have that capability of being in the kernel, then all bets are off anyway.  You could do anything you want to, if you're able to - if you have that level of control over what's happening in the kernel.



So I don't see anything wrong with this notion of something is running a server in the local machine, and then the browser, you probably put into it, you know, http://127.0.0.1, hit Enter.  And maybe colon something, like it may not be running on...



LEO:  Yeah, it has a port, 8888.  It's port 8888.



STEVE:  Ah, right.  So that's a common fallback from the normal HTTP port 80.  So :8888.  And then it's going to, like, bing, now you're looking at a page generated by that local server.  Now, his concern is what about intertab isolation?  And I agree with him that we are depending upon the browser not making any mistakes and keeping code in one page from a different domain, like some malicious.org, separate from 127.0.0.1.  I wasn't sure when I read this whether the same-origin policy did incorporate a port, and it does.  So because it if didn't, then you could - some malicious person could set up 127.0.0.1 on a different port, and then have the same 127.0.0.1 IP and then break intertab isolation.



But same-origin policy, as we would hope, these guys were on the ball.  They include the port.  So what that does is it prevents that attack.  And same-origin policy, which again, remember, it is the first thing browsers do is prevent queries across origins because that's the only thing that keeps tabs safe from each other and keeps them from playing any games with each other's cookies and so forth.  So which is why that Chromodo browser, which didn't enforce same-origin policy at all, just had the Google guys breathless with disbelief.  It's like, you took our Chromium browser.  First of all, you named it Chromodo, thank you not.  And then you ruined its security.



Yeah, anyway, so I don't think Jay has anything to worry about.  This is a very cool application.  And it's sort of nifty that it - so the server being in Python means that it's portable, so there's probably a version for Mac and Linux and Windows and anything.  And then you just use any browser to communicate with it, kind of a cool way of doing a very high-end, sophisticated UI just using the browser, rather than like a custom app.



LEO:  Yeah.  In fact, thank you for tipping me off.  I'm downloading it now, installing it on my server.  It's a great idea.



STEVE:  It's neat-looking, yeah, yeah.



LEO:  Yeah, because you don't have to have it on a local server.  You could have it on a regular server.



STEVE:  You could.



LEO:  And then you'd have your own web-based Python notebook or Rust or R or whatever else you wanted to use.



STEVE:  Right.



LEO:  You use it?  You're nodding.  But, yeah, it's cool.  Yeah, it's a really neat idea.  Python folks are really amazing.  Python is such a great community.



STEVE:  I had a very good friend who I've known since my early 20s, one of the sharpest developers I've known, who said to me a couple years ago - and he's been coding straight for 40 years.  He said, "I have never been as productive as I have been in Python."



LEO:  Yeah.  Oh, it's amazing, yeah.



STEVE:  It's just, you know...



LEO:  Lovely.  Lovely code.



STEVE:  Lord knows there's a bazillion languages out there.  And when someone now says to me, "What should I learn first?" I say take a look at Python.



LEO:  Yeah.



STEVE:  The nice thing is that now the whole ecosystem is so huge and mature that you can get all the help you could ask for.  Anything you want to know, the 'Net has it.  Lots of tutorials.  Lots of references and information onsite or online.  And great O'Reilly books, too.



LEO:  And they use a Python called IPython, which is an interactive Python, designed, I think, for Jupyter.  Scientists love Python because the science libraries, the math libraries are so phenomenal.  Yeah, great language.  Let's move on.  Question number whatever here.  Wait a minute, let me find it.



STEVE:  Five.



LEO:  You know why, because I started installing Jupyter, and I lost the questions here.



STEVE:  Focus.



LEO:  Question 5 from Jim Murchison.  Focus, I know.  Mountain Ranch, California.  He found a frightening SSL cert in his system store:  Being one who checks his SSL certs every so often, I recently found an "all purposes" cert in my certificate store from "Applian Replay Media Catcher 6" that was essentially - now, by the way, Replay Media, I know this program.  It's a good, useful program.  You can use it to record audio and video that you're streaming on the 'Net that isn't intended to be recorded.  And I suspect that's why they did it this way.



STEVE:  Uh-huh.



LEO:  It's essentially a man in the middle sitting on my own machine, much like the certs from antivirus companies.  Do you know of any tools that monitor cert stores and report when changes are made?



STEVE:  So, if I weren't so far behind, I would immediately whip out a utility.  I'm not going to.



LEO:  That's a great idea, yeah.



STEVE:  It is a great idea. 



LEO:  Someone should write that.



STEVE:  And that's why I put this in this Q&A.  Remember that Mark Russinovich just recently updated the Sysinternals tool so that, with a command line, it'll do that.  Somebody could write a little Python front end to the Sysinternals tool that is invoked by the scheduler, or maybe just runs in the background and checks every day.  If anyone does, make sure you send me a note, and I will make you famous.  I will tell everybody about it because that ought to exist.



I think the idea of something keeping an eye on our root store for anything that comes in that, well, any changes, first of all.  You could certainly do it that way.  So you manually audit it yourself; then say, okay, I want to be informed of anything that changes.  Or do what Mark did, which is obtain the official store from Microsoft and do a comparison.  So you would be alerted to any additions to the differences.  Because, for example, again, I'm sure that Applian Replay Media Catcher 6 has got the best of intentions.  But they also have an all-purposes cert, which makes it - it's a god certificate.  It can do anything it wants to.  And it's in your certificate store.



So what that presumably means is that your system is now trusting anything signed by it, which means anyone could reverse-engineer that application and produce certificates that your computer would trust, even when it should not.  And that's just not the way it's supposed to work.  This is an abuse of, unfortunately, as you said, Leo, this may be the only way they had of doing what they needed to.  But this is an abuse of the root store.  We just don't want random companies dropping all-purposes certificates in that our system will then trust.  This is not a good precedent.  So again, if anyone out there is a coder, wants to come up with something that manages our cert stores, let me know if you've done that, and we will absolutely let everybody else know.



LEO:  Couple of them that you might be interested in.  Strengths mentioned that there's a Firefox add-on called Certificate Patrol.  I think we've mentioned that.



STEVE:  The problem with that is that Firefox has its own private store.



LEO:  It's not the systems store, it's patrolling the Firefox store.



STEVE:  And Certificate Patrol's been around forever, by the way.  It's a nice add-on, but it's not going to do the job for us.



LEO:  Will Sigcheck, the Sysinternals tool, will that check just the browser store?  Or will it go...



STEVE:  It checks the system store.  And that's certainly what these guys, the reason they put it in the system store is they're trying to intercept the system's security.



LEO:  Right.  Yeah, and I think that what you're going to see is there are, if you install something, is that there are a lot of tools that need to do this as a way of doing something unusual, as in the case of Replay.  It's saving a stream that's coming in from the browser that is marked not to save.



STEVE:  Right.



LEO:  And so they have to kind of intercept it and download it.  And I don't know if it's the only way to do it, but I can understand why they did it that way.  CJ in Indiana wonders about - and if you took that cert out, it would stop working, we should point out.



STEVE:  Yes.  And I should just mention it's not that I'm taking any absolutist position.  It's just information.



LEO:  Good to know.



STEVE:  You know, for example, this should not have come as a surprise to Jim.  He should have been informed by this thing and gotten its permission before doing it.



LEO:  Typical in the Mac world, though, because they don't want - oh, incidentally, we're going to put in a special certificate so we can intercept traffic so that...



STEVE:  I know.  So, like, why is there a dialog here?  Okay, okay, okay, okay.  You know...



LEO:  Yeah, yeah, okay, yeah, that's fine, I don't care.



STEVE:  Get rid of these dialogs.



LEO:  Whatever you're saying, just stop saying it and let me use the program.



STEVE:  Yup.  Yup.



LEO:  CJ in Indiana wonders about the necessity of user agents in browser headers:  Steve, you've talked a lot about user agents being disclosed in the browser's request headers, and how this can be used for fingerprinting and possibly to identify targets.  How necessary is this information in the browser header?  I feel like we'd be better off if the browsers stopped advertising nearly the amount of information they do to every website we visit.  Do you have recommendations on how to limit the information in the browser header?  Thanks.  CJ.



STEVE:  So, okay.  



LEO:  Good reason for them to do this.



STEVE:  Yes.  There's two parts.  First of all, I don't - okay, yeah.  First of all, I don't really think it's a problem because, I mean, technically, maybe someone could fingerprint you based on the unique or not necessarily unique nature of the headers in your browser.  But it seems unlikely.  I mean, even Panopticlick, which is all about auditing how common they are, when you go to Panopticlick and have them look at your browser, as it does, it'll say, oh, you're - we've seen 33,426 different fingerprints, and you're number 32,197.  So the point is you're not unique, Snowflake.  But you're one of a group.



So, I mean, so first of all, I wouldn't get too worried about the fact that our browsers have all this junk that they're sending out as request headers.  I do think some of it is superfluous.  Once upon a time, before we were as standards-based as we are, there were servers that would look at the user agent and send something different, depending upon which user agent it was.  And I remember our screen resolution used to be sent, but that got deprecated some time ago because it just became irrelevant, or because JavaScript was now able to read that same information and do whatever it wanted to do.  So the first part is I don't think it's that big an issue.



Second is there are privacy plugins, probably for any browser you've got.  He didn't mention which browser he's using, so I didn't go do any digging.  But I know for Chrome and for Firefox and probably for IE there are add-ons specifically for obfuscating.  Some even randomly change the user agent, just so that every query you make comes out looking like something else.  So if you wanted to play that kind of game, you definitely could find something for your browser that would strip things out that are not necessary, or just change them on the fly, just to throw off anybody who's trying to fingerprint your browser.  But again, it's like, eh.  I just don't think it's a huge thing to worry about.



LEO:  And there are many other data points they can use to fingerprint you.



STEVE:  Exactly that.



LEO:  You know, take one out, they'll find another one.  Dan Eshleman in Washington, D.C., and probably listening right now from his secret lair in a five-sided building, has a question about SpinRite and SMART drive data.  Steve and Leo, first of all, thanks for an awesome podcast.  My coworkers and I listen live from the office every Tuesday.  Hello, Dan and coworkers.



I have a question about SpinRite and SMART drive data. My parents' four-year-old iMac is a bit slower than I would expect it to be, so I thought maybe there's some bad sectors on the drive.  I tried a utility called "smartmontools" to take a look at the SMART drive data.  And from what I can tell - I'm sorry, I shouldn't laugh.  And from what I can - it's just SMART drive is so dumb.  And from what I can tell, the drive is operating normally.  Are there any indicators in the SMART data that mean it's time to SpinRite the drive?



STEVE:  Okay.  So a couple things.  I have a lot of experience with SMART because SpinRite v6, it was the first version to dynamically monitor the drive's SMART data.  And what I saw was that the health indication that SMART surfaces is relatively short-term.  That is, if a drive is having problems, running SpinRite on it will depress the health...



LEO:  I'm so depressed.  Oh, sorry.



STEVE:  ...indication because the drive is having problems reading data.  But a few hours later, that SMART health indication will have recovered.  Meaning the drive has noticed, oh, a lot of time has gone by, and I don't seem to be having any more problems, so I'm going to report that I'm feeling better now.  Which is one of the coolest things about the way SpinRite interacts with the SMART data because that SMART health should not be depressible by SpinRite.  So if it is, then it's because the act of asking the drive to do some work is reporting I'm having problems here.  But unless you ask it to do work, it isn't having problems because, after all, work for the drive means reading and writing stuff.



So, first of all, looking at static SMART data, it can in some cases show you a problem.  It certainly could be that something like the relocated sectors parameter is, like, really, really low.  But here's the second part is how do you know it's low for that drive?  Because there are, unfortunately, no standards in the SMART industry, or in the SMART spec.  Back when this was created, under mandate by Compaq, that had a lot of market clout back then, they forced the industry to implement SMART.  The industry didn't want to.  So it did the worst job it possibly could in creating SMART.



LEO:  That's the real...



STEVE:  They considered it their tech...



LEO:  That's the real story right there.



STEVE:  Yes.



LEO:  They didn't want to do it.



STEVE:  Yeah.  They created the weakest, worst, most useless thing they could that would satisfy Compaq, who wanted some means of knowing what was going on in the drive, yet wouldn't disclose what was really going on in the drive.  So, A, you can use SpinRite.  And after it's been going for a while, look at the SMART page.  And what I did is I take the, deliberately, understanding the way it works, I use the starting SMART health parameters of whatever is published, and any decrease in those that occur I show as red because there shouldn't be any.  But if SpinRite does manage to push some of the health down, it shows it very clearly as red appearing in the bar that tells you, okay, this drive is saying "I'm working harder than I should."



But absent that, the only thing you can do is compare it to an identical drive.  So if you've got smartmontools, but don't have SpinRite or can't for whatever reason run SpinRite, but you do have an identical system with the same drive, compare the smartmontools output of both.  If they're the same, then it's probably the case that you're not learning anything.  But if they're very different, if one of them has much lower health parameters, then that's an indication absent any dynamic work that you're asking from the drive, that this drive is actually in worse health than the one you've compared it to.



But again, it's got to be the same make and model of drive because there's no standard.  It's only the same make and model of two drives will be the same, but not any other manufacturer, and not even other drive models from the same manufacturer.  It's just completely - it's almost worthless except that SpinRite, because it uses the SMART delta, that is, the change in SMART data, that ends up being highly diagnostic.



LEO:  Question 8, Rik Sagar in San Jose, California wonders why he doesn't need "Let's Encrypt" on his blog.  He's talking about the Let's Encrypt certs.  Steve, I can't believe you said, quote - he's obviously pasting from Elaine's transcript:  "... well, yeah, I mean, it's a blog, and nobody needs security there."



Well, you're right, I don't need to protect the words of my blog.  But as you have taught me in the past, and as also mentioned in this week's show, we need HTTPS to protect people visiting the blog from a person in the middle, meddling.  Example:  Verizon supercookie injection of malicious script tags into the HTML.



Keep up the good work.  Glad I haven't heard anything about your DDoS this week.  @riksagar on the Twitter.



STEVE:  So this was interesting.  That's apparently a quote.  So let me put it in context, which it needs.  What I was saying was, historically, if the barrier was high, that is, you had to purchase a multi-hundred-dollar every couple years certificate, and figure out how to install it, maybe get a hosting provider to do it.  And in some cases hosting providers, before we had SNI (Server Name Indication) in our TLS connections, some hosting providers that were hosting many different websites on a single IP were unable to disambiguate certificates, so you couldn't.  Using SSL wasn't an option back then.



But my point was, for all of those reasons, if the barrier to using it was high on something like a blog that didn't have a high security need, it didn't happen.  And it is happening now because the barrier to using HTTPS has just disappeared, thanks to Let's Encrypt.  So it wasn't that I was saying you don't need it, it's that, historically, the sites that didn't need it that much didn't bother.  And now everybody can to the point where I'm just like, no excuse not to at this point.



LEO:  Although there is a not insignificant barrier in some cases because you have to install the certs.  Getting a cert for free is nice, but you still have to modify, I mean, putting...



STEVE:  No.  No, Let's Encrypt does that.  Part of what...



LEO:  Oh, you don't have to do that, oh.



STEVE:  Don't even have to do that.



LEO:  Right, you run that little script, right, yeah.



STEVE:  Part of what Let's Encrypt does is just magic.  It edits your config files for you.  You just sort of say, go, baby, and it says, I'm already done.  And you're just like, what?  And then you say, you know, log on with HTTPS, and it does.  Yeah, I mean, they just - I think what we're going to see is it will just be built in, in the future.



LEO:  I'm going to try it on my Minecraft server.



STEVE:  Cool, do.



LEO:  Yeah.  I mean, the problem is it's not Apache.  It's not an HTTP server.



STEVE:  Oh.  What is it?



LEO:  It's a Minecraft server.



STEVE:  So Minecraft actually boots?



LEO:  No, it's running on a Mac.  And then you run the server software, just as you would if you were running Apache.  Let me think about this.  Could you do it at the DNS server level?  No, you have to do it on the server server.



STEVE:  Yeah.



LEO:  See, that's the thing is not everybody's running Apache or IIS.  I don't know.  What does Let's Encrypt work with?  Probably just Apache; right?



STEVE:  And Nginx.



LEO:  And Nginx.  Okay, well, that covers a lot of the waterfront.



STEVE:  It really does.



LEO:  Yeah, yeah.  That's cool.  No, probably there's no HTTPS for Minecraft servers.  How about for Jupyter pages?



John in Montreal argued that Shamir, the S in RSA, well, and Rivest and Adelman, the R and the A, did not invent RSA.  Or I think he's talking public key crypto; right?  This distinction goes to some British cryptologists who came up with the idea during World War II. It was only declassified and made public well after RSA published their idea.



STEVE:  You know, I just sort of wanted to take this moment to comment that it is not true that the RSA guys did not invent RSA or public key crypto.  They did.  They just weren't first.  But they did it without any knowledge...



LEO:  Because it was classified.



STEVE:  ...of anyone else having done it.  And so, I mean, this is an interesting area that we've run into because I sometimes hear people saying, oh, well, they didn't invent that because somebody else did.  Or what often happens is two groups are doing this stuff at the same time, with no cross-communication, and they simultaneously invent, and then one publishes before the other.  And to my way of thinking, that takes nothing away from the other group that independently invented something.  So the fact that some cryptographers in Britain may have come up with public key crypto in World War II, but it was always kept secret, in no way diminishes the fact that the RSA guys independently came up with the idea.  I mean, you know, there are lots of smart people in the world.



LEO:  And of course - okay, I shouldn't say this.  But in hindsight it's pretty obvious, but only in hindsight, right, because, I mean...



STEVE:  That's the best invention.



LEO:  Yeah, right?  Like, well, that makes sense.



STEVE:  Oh, my god.  Velcro?



LEO:  Right.  In hindsight it's pretty obvious, yeah.



STEVE:  And a zipper?  You know, you could spend a lot of time staring at a zipper, trying to figure out how that sucker works.



LEO:  What's interesting about it, a lot of inventions would be hard to describe.  But I think you can describe public key crypto very straightforwardly, in a sentence, in a prose sentence.



STEVE:  And I think that's what makes it so beautiful.



LEO:  Yeah, it's elegant as hell.



STEVE:  Yes.



LEO:  The idea...



STEVE:  You know, it's one of those head slappers.



LEO:  Yeah, it's like, oh.



STEVE:  It's like, oh.  Why didn't I think of that?



LEO:  And it does make sense that anybody in crypto, going back for centuries almost, would be trying to find a solution to the symmetric key problem, which is you have to have a key exchange for a symmetric key to work.  I have to somehow get you the key so that I can send you a coded message.



STEVE:  Right.



LEO:  And that's a very big weakness because they're going to capture the courier with the key, and then they can read everything.  So the idea that you could exchange messages with a publicly available encryption key...



STEVE:  Smoke signals, up in the air.  Everybody can see it.



LEO:  Anybody can see it.  But without the private key, it's useless.  It's brilliant.  And you can see how the Nazis would have loved that instead of Enigma, which was by the way a symmetric key system.



STEVE:  Right.



LEO:  And that's, in fact, you know, the fact that it was symmetric was how it was decoded, was that Turing knew that these signals were going out every day, these radio signals with the key.  And if you could - so his task was to figure out what the key was, you know, how to decrypt the key that's being passed out.  And once you get that, then of course every day you get a new key, and it's a symmetric key, so you can decrypt all the transmissions.



STEVE:  Well, in the case of Enigma, though, they did have...



LEO:  They had the machine.



STEVE:  ...the master code book.



LEO:  Oh, they had the code book and the machine, yeah.



STEVE:  Yeah.  And the book was what was captured.



LEO:  And that was what you would use to decrypt the daily message, yeah.



STEVE:  Exactly.  Exactly.



LEO:  But you had to find the right page.



STEVE:  Because it had the machine settings for that day, right, right.



LEO:  Oh, I love it.  I love crypto.



STEVE:  And I just saw the movie again, by the way.  It's just "The Imitation Game" is a great piece of work.



LEO:  Great movie, although, again, historically, really a disservice in many ways to Alan Turing.



STEVE:  Unfortunately, yeah.



LEO:  At least it popularized that whole notion.  You know, it's interesting how encryption and crypto has broken into the public consciousness in some ways.  And there's that great book, "The Codebreakers" by Kahn, which everybody should read.



STEVE:  Yup.



LEO:  If you're interested in this, that and Steven Levy has a great book on crypto, I think it's Steven Levy, called "Cipher"?  I can't remember ["Crypto"].  But there are a couple of books that you can read and get pretty up on this.  You're not going to be writing your own protocols, but...



STEVE:  Yeah, and I'm not sure that there's a need for the general public to know more than they know.  But the fact that everybody knows that Apple is fighting with the government, you know, that's a good thing for people to know, I mean, to appreciate.



LEO:  I mean, that the math is out there, and you can tell anybody, if you're a half decent coder, and I mean half decent, you don't even have to know the XOR XOR XOR trick...



STEVE:  You don't have to be John McAfee?  Is that what you're saying?



LEO:  You don't even have to be John McAfee.  You could write an algorithm that would give you public key crypto; right?  It's not complicated.  I think; right?



STEVE:  You've got to be kind of good.



LEO:  You do?  Okay, okay.



STEVE:  Yeah.



LEO:  The keygen routines are tough?  Okay.  Just checking.



STEVE:  Yeah, it's not something you just kind of want to pull out of your backside.



LEO:  Well, the seed is tricky; right?  You have to - okay.



STEVE:  Yeah.



LEO:  That's because I'm an eighth decent coder.  I don't know.  Finally, Bill Barnes writes from Charlotte, North Carolina - and we have to make it finally because in two minute the polls are going to close, and I know you want to rush to the CNN.  Bill Barnes of Charlotte, North Carolina wonders about the best drive choice:



Steven, where is the sweet spot in spinning drives between reliability, cost, and capacity?  Performance is not a priority in my usage.  The home file server - oh, well, that makes sense - is on a single 2TB Western Digital Caviar Green purchased in 2010. Critical files are backed up locally and on Carbonite.  Can I safely get a 2-3TB, or even 4TB, drive from the big box store to keep my data another five years?  Would I get better reliability with Windows RAID 1 mirroring and a larger drive or spanning smaller drives?



Blah, blah.  Oh, recognizing the value of GRC since SpinRite 2. User of ShieldsUP! since it was in the seven digits.  Faithful follower of Security Now! since Episode 15.  Programs due to Security Now!:  Astaro, Hamachi, Carbonite, TrueCrypt, LastPass, and more.  Wishing for CryptoLink and SQRL.  Looking forward to you getting back to SpinRite 6.1 and 7.  This guy is a hardcore listener.  So is there an opt - by the way, we've never talked about it, but somebody released - was it Google? - SSD drive information on wear that was very interesting.



STEVE:  Yeah, really interesting.



LEO:  You need to tell us what it means, though, because I...



STEVE:  I will.  To answer Bill's question, no single drive of any size, and I'm here to tell you, can be counted on.



LEO:  You know.  This is a man who knows.



STEVE:  I just built, as I had mentioned before, and my thumb is pointing at it, a monster machine using the Haswell chipset.  In fact, I noticed, Leo, that your upcoming virtual reality box, you're using an X99 motherboard and probably the LGA 2011 socket and so forth.  I have the same RAM that you guys chose.



LEO:  Oh, you're building it, too.  This is exciting.



STEVE:  The Vengeance, whatever it is, although I'm just using it as my workstation.



LEO:  Corsair, I think, yeah.



STEVE:  The Corsair.  What I did, this motherboard has one of the M.2 slots, the super high-speed PCIE little tiny card slots.  So I got a Samsung 0.5TB, the 512GB SSD.  That's my main drive.  On the motherboard, could not have a faster interface to the processor.  The state of the art, the NVMe interface, screamingly fast.  And two 2TB drives mirrored as what the...



LEO:  Oh.



STEVE:  And so here's my logic.  First of all, I will never use all of the space on that big NVMe on that big SSD.  And I don't want to because I want to take advantage of its wear leveling to move the information around a mostly empty drive.  So big things like media and temporary big downloads and stuff, those go to the spinning media because they're temporary, and they're huge.  The idea is this high-speed drive, it'll be hardly 10% full, probably, given my history.  I'm running on I think a 30GB partition now in my system, and I'm fine.  But the idea is, by leaving it way empty, I'm allowing the wear leveling to have lots of unused space to move things around to, so that it automatically extends its life by the percentage of drive I'm not using.  And then, nightly, I will take an image of that and copy it to the mirror RAID.



And I have two 2TB, I think they're 2TB drives, just because I had them around.  And they're mirrored because mirroring is faster than RAID, because RAID requires that you have computation in order to do the RAID XORing process.  So mirroring is able to be faster than RAID, so I get better performance, and it's a hundred percent redundant.  So if one drive dies, I've got the other one.  The BIOS supported RAID configuration.  I could select AHCI or RAID.  I did, so the BIOS understands the RAID.  Windows came up; it understood it.  And so that's the architecture I chose.  For the main workhorse, a deliberately mostly empty, screamingly fast SSD, but nightly images of that drive to a pair of spinning drives that are mirrored.



So, Bill, your answer is no single drive.  You've got to have two.  I mean, you just do.  Because, you know, even the best drive, something catastrophic can happen.  The board could fry itself.  There could just be something wrong with that drive.  So you get - the mirroring is the least efficient because you only get half of the total data storage of the two drives.  In a RAID 5, the more drives you add, the more efficient it becomes.  And at GRC I'm running RAID 6.  I've got four SSDs in RAID 6.  So any two of them can fail.  None ever has; but I believe in redundancy because, you know, I'm in the drive failure business, and I'm doing just fine.



LEO:  There you go.  I really like that tip on an SSD.  How much capacity should you not use?



STEVE:  My feeling is you should have storage, bulk storage for, like, media stuff.  For example, I've got all of our podcasts are sitting here, available to me.  I'm not even sure why.  I ought to just spin them off to Blu-ray and archive them.  But so the idea would be I will use the SSD sparingly.  It's my system drive.  It's what boots.  I want it to be screamingly fast.  And I want to keep it mostly empty.  And so apps get installed there; the working files get installed there.  But big blobs go to the spinning drive, and images of that every night go to the spinning drives so that, if it ever goes tits-up, I'm able to pull it right back.  I've got an image that's never more than a day old.



LEO:  You mean bits-up; right?



STEVE:  Bits-up.  That's what I meant.



LEO:  Yes, thank you.



STEVE:  Isn't that what I said?



LEO:  Yeah, bits-up.  The bits are up.  Steve Gibson is at GRC.com.  That's his website.  Go there to get all the stuff he talks about.  Man, this guy is amazing.  He's prolific.  He's like Alexander Hamilton.  He just - scribble, scribble, scribble.  But start with SpinRite, the world's best hard drive maintenance and recovery utility.  It's his bread and butter.  You've got to support the guy.  And by the way, you've got to have it.  If you've got a hard drive, you need SpinRite.  You should also go there if you want the podcast because he keeps a copy, including a unique copy, the 16Kb version, which no one should have to listen to.  But if you really want it, it's the smallest audio version of the show.



STEVE:  If you're counting every downloaded byte.



LEO:  There's also a text transcript, which I would venture to guess is the smallest download of all.  And Steve pays for those and makes them available, and that's really, really great.  I thank you for doing that.  We have audio and video on our site, TWiT.tv/sn for Security Now!.  And of course you can get it in every podcatcher.  This is one of the oldest podcasts in the world.  How about that?  One of the oldest podcasts in the world, folks.



STEVE:  Because we're a survivor.



LEO:  We're a survivor.



STEVE:  The other ones have died.



LEO:  Yeah, right.  Everybody else gave up.



STEVE:  Digg, that's gone, and everybody else.  



LEO:  [Wisely], Diggnation, yeah, they just all said, you know, this wasn't that good an idea.  But we, we are gluttons for punishment, and we're going to be back next week.  And next week I'm not going to be here.  I will have been run out the door to get a flight to New York so I can see "Hamilton" next week.



STEVE:  Yup.  



LEO:  Spring break for me and Lisa and Michael, our child.  And he's a lucky 13 year old to get to see "Hamilton," I've got to tell you.



STEVE:  Very cool.



LEO:  And I'm hopeful that it'll really turn him on the American history and all that.  But Father's going to do a great job, and you guys are going to talk about DROWNing.



STEVE:  DROWN, D-R-O-W-N, yes.  A new, really cool hack for breaching TLS communication, no matter, even if you've got 1.2, turns out some guys found a way to get the private key out of that.



LEO: Oh, wow. 



STEVE:  Yeah.



LEO:  Oh, it'll all be there.  And then, if you want to ask questions, we'll probably do that in two weeks.  GRC.com/feedback is the feedback form.



STEVE:  Yup.



LEO:  Steve, thanks so much.  We'll see you next week.



STEVE:  Always a pleasure, Leo, thanks.  Have a great trip.



LEO:  He always waits for me to say "on Security Now!," but I didn't this time.  



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#552

DATE:		March 22, 2016

TITLE:		D.R.O.W.N.

HOSTS:	Steve Gibson & Father Robert Ballecer

SOURCE:	https://media.GRC.com/sn/SN-552.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Padre and I discuss the week's major security events, including the FBI's hearing delay, Matthew Green's iMessage attack, a side-channel attack on phones, a massive malvertising campaign affecting many major sites, the 2016 Pwn2Own contest, a new Android Stagefright vulnerability and attack, and some other miscellany.  We then describe the DROWN attack against up-to-date TLS servers using still-present SSLv2 protocol.



SHOW TEASE:  The FBI has decided that they don't need Apple.  Or do they?  Plus Lenovo goes further down the malware drain.  iMessage is broken.  Stagefright is the gift that you don't want that keeps on giving, and the Internet is trying to DROWN you.  It's all coming up next on Security Now!.



FATHER ROBERT BALLECER:  This is Security Now!, Episode 552, recorded March 22nd, 2016:  D.R.O.W.N.



It's time for Security Now!, the podcast all about security with the man himself, that's right, it's the Minister of Malware, the Bishop of Bytes, Mr. Steve Gibson.  Of course Steve Gibson from GRC.com.  He is the purveyor, the inventor, and the originator of the security and the tools that you need.  Steve.



STEVE GIBSON:  The Minister of Malware.



PADRE:  I like it, yeah.



STEVE:  I'm not sure about that one.



PADRE:  Well, you know, it's sort of the...



STEVE:  Maybe the coiner of the term "spyware."  I like that one better than the Minister of Malware.



PADRE:  Yeah, actually, yeah, Minister of Malware has some sinister tones to it.



STEVE:  Yeah, that's a black hat sort of designation.  And of course everyone listening suddenly realizes that you're not Leo.



PADRE:  No, I am not Leo Laporte.  I'm Father Robert Ballecer, known as the Digital Jesuit.  I'm in for Leo Laporte who is on a trip to the East Coast, we hope.  That's assuming that he's making his flight on time.  It's probably going to be a bit busy at the airports right now with everything that's happening in the world.



STEVE:  Yeah, he's probably on that little dirt path that connects Petaluma to San Francisco that nobody has bothered to, like, deal with for the last two decades.



PADRE:  Oh, it's fantastic, though, I love it because every time it rains there's a little lake that forms between San Francisco and Petaluma, and you have to navigate through it.



STEVE:  It makes the ducks happy.  And, you know...



PADRE:  Very happy, indeed.



STEVE:  ...that's important.  So, as promised, we're going to talk about DROWN is our main topic this week, although we've had lots of fun and interesting news that we have, of course, we'll talk about the FBI postponing the big hearing versus Apple, for those who are, like, out of the news and out of social media and might somehow not know that that happened yesterday.  Matthew Green, our cryptographer friend at Johns Hopkins, and four students managed to find a crack in iMessage.  And there's some really interesting takeaways from that.



We've got a side-channel attack which we've been talking about a lot lately.  We covered one a couple weeks ago that involved pulling crypto keys from a laptop on the other side of a wall.  In this case, it's using mobile devices and just some stuff you can get, I was going to say at Radio Shack, but I don't think you can get anything at Radio Shack any longer.  But it doesn't require any high-tech stuff.  You use a soundcard and a coil of wire that you wind yourself.  So that's a little problematical.



Then there's been a big malvertising campaign, speaking of malvertising, or malware.  Lenovo back in the doghouse.  We had the results from the 2016 Pwn2Own competition, which had some interesting outcomes.  Stagefright is back again.  And although it's affecting a smaller percentage of Android devices, it's affecting them to a much more reliable, if you can use that term, like in terms of the reliability of the bad guys to do a drive-by code execution.  So we'll get into the details of that.



A bunch of people have asked me, because I'm building, or have built, a big new replacement desktop system because I heard that - it was like about a month ago, I'm sure you know, Padre, that Microsoft announced that the Skylake family of processors moving forward would not bother to be supporting Windows 7.  Well, since I certainly am supporting Windows 7 and have no interest in going forward, I thought, oh, crap, I have to make a Haswell-based system now because I can't wait for five years until I would maybe otherwise do it.  So I was talking a little bit about the configuration of that, and I had some questions from people who wanted to know some details.  So I thought I'd fill them in on a little bit of that.



We have some other miscellaneous stuff.  And then this DROWN attack, I was thinking a couple weeks ago we were going to talk about DROWN and something else.  There were two things, and I don't remember what the other one was off the top of my head.  But they both ended up being so big and interesting, and there was so much news that week, that I thought, okay, we can't squeeze both of these in.



So this gets its own episode, which I think has got another real fundamental crypto teachable moment because this is a way for our state-of-the-art latest and greatest transport layer security, TLS server-protected protocol, or server-protecting protocol, to be undermined if the old, creaky, deprecated, nobody actually uses it anymore, SSLv2 happens to still be around, even if you're not using it.  So it's a very clever attack where the presence of this deprecated, unused SSL protocol can actually give attackers a leg up in attacking the actual protocol that clients and servers use.  So I think just Security Now! Episode 552 is going to have something for everybody, and a great one.



PADRE:  Yeah, it's going to be absolutely packed.  And I've got a lot of questions for you on DROWN because last week, when you first sent me the link, and you said, "This is what I'd like to talk about," first I did all my own research.  And then I started talking to a couple of my network security friends.  And again, we'll talk about this when we get to the end of the show.  But they said something to the effect of this is the new advanced persistent threat.  Not necessarily something that has actively been put into your system, but deprecated software and software modules that don't completely remove themselves from services.  As we have servers that age out, they tend to accumulate stuff that you don't even know is there.



STEVE:  Yup.



PADRE:  And so more and more of them, their compliance tests actually have to do with saying, when was the OS installed?  Because if it was installed past a certain date, there's a good chance you have things that you don't know are still in the system.  So it's very interesting, yeah.



STEVE:  So there's absolutely that, which is what I was referring to, actually, as this item of teachability.  And the other is, and we'll get to it, is that they also found a way of leveraging a problem that had been fixed in OpenSSL in March of 2015.  So one year ago.  And it turns out that 24% of running servers now are still using an OpenSSL earlier than a year ago.  And we know how many problems have been fixed since then.  They're not crucial and oh, my god, run around, like Heartbleed was, for example.  But it's demonstrating that, unless there's some crucial need, I mean, one of the other things we keep looking at and addressing on the podcast is that it just takes, you know, acts of, well, since I'm here with you, God to move security forward.



And so, if there isn't something that is incredibly, crucially, horribly broken, servers don't get updated.  And here's a quarter of the servers running an OpenSSL for their security that is a year old.  And in this case, this attack allows, instead of this thing taking, like, GPU-class attack 18 hours, it can be done in almost, well, actually it can be done in real-time on a single laptop if the server has an OpenSSL version more than a year old.  So it's like, okay.  I mean, we keep coming back to these things.  Nobody wants to change what's working, even though what works and what is secure are really different things.



PADRE:  It's the whole, it's working right now, and there's a chance it won't hit me.  That's the sort of mentality that I see an awful lot.



STEVE:  Yeah.



PADRE:  Steve, let's bring it on in.  What do we start with?



STEVE:  So we don't know a lot about what's actually going on with the FBI.  Of course everybody knows of the big fight that the FBI and Apple have been having, that the FBI is trying to use an ancient law, the All Writs Act from the 1700s, in order to compel Apple to modify, create a modified version of iOS which will essentially remove the anti-brute-forcing limiters from the software and also provide a new means for the FBI to input guesses of the passcode that the San Bernardino bomber or, not bomber, gunman Farook used.  And of course Apple is resisting that, saying that this is a slippery slope, and it's not just one phone, it's hundreds, and so forth.



So yesterday morning, during Apple's spring presentation where they introduced the new phone and the smaller iPad Pro and so forth, Tim Cook began by talking about tomorrow's hearing, meaning that yesterday morning this was on.  And then suddenly, in the afternoon yesterday, we hear that the hearing has been at least postponed.  What happened was that federal prosecutors yesterday filed saying that on Sunday, March 20th, so that's day before yesterday, an outside party demonstrated to the FBI a possible method for unlocking Farook's phone.  Testing is required to determine whether it is a viable method that will not compromise data on Farook's phone.  If the method is viable, it should eliminate the need for the assistance from Apple set forth in the All Writs Act order in this case.



And this generated a social media Twitter storm.  Jennifer Granick, who's a well-known Director of Civil Liberties at the Center for Internet and Society at Stanford Law School, she tweeted:  "We don't know whether the government withdraws its motion" - or, I'm sorry, "We won't know" - I quoted this deliberately, I mean, I copied and pasted this, so this must - she said, "We won't know whether the government withdraws its motion until at least April 15th."



PADRE:  Right.



STEVE:  So I guess this is just a postponement pending formal withdrawal - I'm sorry, on April 5th.



PADRE:  Yeah.  That's the deadline because now that they've asked for this postponement they have until April 5th to either continue or to drop it.



STEVE:  And so what's so odd about this is, I mean, the conspiracy theorist who sort of suggests maybe we're not - what we're seeing is the surface of what's happening, and there's a lot more going on underneath.  Because the operating theory was that the FBI almost certainly knew there was nothing actually on this phone.  They did have the iCloud backup from five weeks before, so they were able to assess how actively used it was.  This wasn't the phone that Farook bothered to physically destroy.  He did destroy his own, so one presumes that's the one that actually had something useful on it, and it's destroyed beyond recovery.



So this whole thing sort of smelled a little fishy, like the FBI had chosen this to take a stand on because of their position.  And then didn't we hear, I think it was Monday, that they had also - they were going to introduce some witnesses.  And people who were reading this whole thing from a distance said, you know, that sort speaks to them not having a really strong position, if they're going to be bringing witnesses in, in order to testify as part of this.  So this whole, oh, yesterday someone showed us a way to do this.  And of course then the jokes were, oh, I wonder if John McAfee gave them a call.



PADRE:  And of course remember John McAfee at first suggested social engineering, which works really well on dead people is what I've heard.  And then he said, no, no, that was a joke, and geeks understood the joke.  And what he actually would do, and he suggested the process of using some acid and a laser to try to get the unique hardware ID number off of the inside of the phone, which they could then hash against a PIN and, yeah, it was kind of silly.



STEVE:  Yeah, loony tunes.



PADRE:  And I know a lot of people, and again the FBI has not been forthcoming about any process they're actually trying or who their...



STEVE:  Right, they've said nothing.



PADRE:  Said nothing.  But it doesn't sound like it's going to be the acid and laser issue because you don't test that.  Either it works or doesn't work.



STEVE:  Some have speculated that it'll involve dismounting the nonvolatile ROM and cloning it because it could be removed and cloned.  And that, then, creates a snapshot, essentially, of the uncompromised phone.  Then maybe they substitute in RAM instead of the nonvolatile ROM.  So now they have something that the phone can't tell it's not nonvolatile ROM.  It thinks it's talking to the ROM.  They do their guesses.  It locks.  Then they just re-update the RAM from their snapshot that they originally took, which essentially allows them to dynamically reset the state of the phone after every 10 mistaken guesses.



PADRE:  Let me ask you about that, Steve.  So we know that the way that the iPhone protects itself is it has a key that it will destroy if too many incorrect guesses are made.



STEVE:  Correct.



PADRE:  But where is that key stored?  It's not stored in the same memory as the system memory; is it?



STEVE:  Apple's a little unclear.  We assume it's in the Secure Enclave.  And, I mean, the whole point of the Secure Enclave is that it is part of the processor where there is no API.  There's no programmatic means of asking it to divulge any secrets.  You can't, there's no way to say, "Give me your key."  All you can do is say, "Use your key to sign this," or "Use your key to decrypt this."  So you can get it to do the work for you, but you can't ever get it to release its information.



And so anyway, it was some dialogue that I saw that Matthew Green and some people were making yesterday, this whole notion of cloning the NVRAM in order to, like, get a snapshot of the state.  But if in fact the symmetric key, the master symmetric key gets erased, proactively wiped, and if that's in the Secure Enclave, which is on the whatever it is, A8 processor, then I don't know how you...



PADRE:  Yeah, you're out of luck.



STEVE:  ...prevent that from happening.



PADRE:  Yeah, because you can't store the master key in the NAND because the master key is required to open up the NAND.



STEVE:  Correct.



PADRE:  That's what's encrypting the NAND.



STEVE:  Exactly.



PADRE:  So even if you encrypt the NAND, so that's not the part that would get destroyed.  The part that gets destroyed is the master key.  Which as far as I know is actually stored, like you said, in the A8 processor itself, which you cannot clone.



STEVE:  Right.



PADRE:  So, I mean, I understand people like this idea of NAND cloning.  But then you get back to the original problem, which is you're left with a ridiculously difficult thing to decrypt.  It's no longer a PIN.  You're looking for a 256-bit AES cipher.



STEVE:  Exactly.  Exactly.  And, I mean, maybe, well, no, I mean, that is too many bits even for the NSA, unless they actually do have a quantum computer in the basement that we've been paying for but haven't known, and that's why they have power feeds coming in from Utah and cooling lakes and so forth.  Who knows?  But it seems very unlikely.  I mean, that is too many bits for anyone to brute-force.  And as you say, the beauty or the possibility of brute-forcing is the fact that it is a, what, four, maybe six-digit PIN that, if you can do it fast enough, there just aren't that many combinations to try.



PADRE:  Yeah.  We've got "Greenbits" in the chatroom who's saying that cloning a NAND is just a safety measure.  But it's an unnecessary safety measure because the NAND, the iPhone will not destroy the NAND.



STEVE:  Right.



PADRE:  The iPhone will throw away the master key.



STEVE:  To the NAND, exactly. 



PADRE:  Whether or not you clone it, it's not going to be affected.  But again, this all could just be a ruse.  This could just be the FBI's way of backing out of this because they realized Apple's fighting it a lot harder than they thought they would, and they're not going to get the precedent out of it that they wanted.  And they definitely don't want a reverse precedent.  They don't want the court coming down and saying, no, Apple was right in this case, you can't force them to do this.



STEVE:  Well, and we also have this pending Burr-Feinstein bill, which is supposed to hit any day now.  I've never tried setting up a news alert, but I did, you know, Google has the ability to set up alerts.  And so I've got Google looking for me for any mention of Burr-Feinstein because this is the legislation which has been in the works since the Paris attacks.  And Dianne Feinstein, the California senator, she's on the Intelligence Committee, she has been absolutely pro government ability to decrypt on demand.  And, I mean, my guess is that the legislation will say that, after a certain date in the future to give companies time to come into compliance, it will be necessary for commercial companies to be able, however they choose or design, the government is not cryptographers, they're legislators and law enforcement.



And so like after January of 2018, or maybe it'll be '19 or '20, so the idea would be after some point it must be that commercial services are able, however they choose to arrange it, to comply with government orders to decrypt their customers' data.  And, I mean, it could just be that.  I'll be surprised if it isn't something like that.  It can't be immediate.  And I can't see that it's going to be any sort of a lesser request.  I mean, that's what the government says it wants.



PADRE:  It is a fantastic example of legislation without technical knowledge.  You can read through the text of the bill and say, yeah, you didn't talk to a single engineer or mathematician, did you, because it's like one of these, well, this has to happen.  And you ask them, well, how are you going to make that happen?  I mean, you understand all the - no, no, no.  You're just going to make it happen.  And we get back to Apple, which is you're now going to the same technology companies that have provided features for their customers because of their customers' fear of digital snooping, and you're asking them to either backpedal on the security features that they've offered, or to actually break what they've designed to be unbreakable.



STEVE:  Right.



PADRE:  Yay.



STEVE:  Right.  And as we've talked about on this podcast, Apple, I mean, you can understand.  Apple is selling security.  And they want to produce a phone they cannot break.  I mean, it's in their best interest to say to their customers, who like that as a bullet point, and also to the government, because they don't want a queue of phones that they have to crack open.  They want to be able to say sorry, this is end-to-end encryption.  We don't have the keys.  And that just ends, it just ends it.  And you know that there are people, I fact, when the story began to happen, there was word that Apple was at work on removing even this little wedge concept that the FBI came up with.  I mean, we have to give, I give the FBI some props for cleverness in looking at the situation and saying, okay, what's the minimum that we need in order to do this?



And again, this is just taking it all on its face, assuming that this is not for the sake of media and creating a precedent and so forth.  If the FBI actually did believe that this phone that had been backed up as recently as five weeks before - and who knows if it had even been used in any meaningful way since.  If they really wanted to get in there, they came up with a clever solution.  It's we need to remove a couple limiters, and then we need the ability to put guesses in faster.  And then of course maybe the step too far is their need to compel Apple to do that.  And of course in last week's reply to Apple's reply, in a footnote they said, well, if Apple doesn't want to do the work, give us your private key and source code, and we'll be happy to do that for you.



PADRE:  Yeah.



STEVE:  Which of course no one ever believed would ever happen.



PADRE:  It's not going to happen.



STEVE:  Anyway, as I said months ago here, this is the issue of our time.  This is just a gripping, really interesting contest between math, which is now perfect enough to create unbreakable crypto, and the governments of the world's need or desire to see into that, to crack it anyway.



PADRE:  Steve, I want to go off on a tangent.  I know we don't do tangents on this show.  But one of the things that has been interesting coming out of this was Microsoft has taken a different approach to government encroachment on digital security.  They started up their Azure Deutschland service.  And so what they've done is they've found a government that is incredibly tough on privacy and digital rights.



STEVE:  Germany.



PADRE:  Germany.  And they've taken everything in the German Azure datacenters, and they've put it in the hands of a different company, Deutsche Telekom.  And the way that the agreement is written is that Microsoft doesn't have legal or technological access to any of the data.  And the Azure center itself, their setup keeps any of the backups, any of the replications, the high availability or the fault-tolerant copies from every going to another Azure cell in another country.  So everything remains under German law, under German jurisdiction.  And Microsoft is doing this rather than coming up with unbreakable encryption that they could then go to the U.S. government and say we can't break it, and then the U.S. government coming back and saying, well, you're going to help us.  They can now say we have no legal recourse to get the data that you want.  It's not in our hands.  It's not in our datacenter.  You have to go talk to Deutsche Telekom, which means you have [crosstalk].



STEVE:  Ah, so they put it out of reach.



PADRE:  Exactly, put it out of legal reach.  And Microsoft is saying, well, if they can't understand the math, they do understand legal jurisdiction.



STEVE:  Yeah.



PADRE:  You know what, Steve, this story, I know a lot of people have had enough of it.  So let's stop talking about Apple.  Let's stop talking about Apple products.  What's the next story?



STEVE:  Okay.  So I'll just say that we do keep trying to stop talking about this, but this is the story that just keeps on giving.



PADRE:  Yes, it does. 



STEVE:  I mean, it's just one thing after the next.  And there's no way we're not going to be able to talk about the Burr-Feinstein as soon as we see that because, you know, a bill is not a law.  A bill is a wish.  And then it's got to go through both houses of Congress, and then the President has to sign it into law.  And although Obama has been sort of seeming a little more willing to do that, he made that comment at the SXSW event where he talked about people fetishizing their phones or the security of their phones.  And it's like, whoa, okay.



PADRE:  Yeah.



STEVE:  Anyway.  So we do need to talk about actually still Apple with something that happened with iMessage.  Again, Matthew Green, the Johns Hopkins well-known cryptographer, he admits in his blog posting about this that he's got a thing for iMessage.  It intrigues him.  It interests him.  Part of it is that it is such a heavily used protocol.  Part is that it has been reverse-engineered by a third-party entity.  And the point is there's enough known about it that he's been able to poke at it.



So yesterday Matthew Green wrote the following, and I'm just going to read the first four paragraphs of this because it also really, you know, this is coming from one of our leading cryptographers, and it helps to sort of frame the way he feels about this in general.  He wrote:  "Today's Washington Post has a story entitled 'Johns Hopkins researchers [meaning him and four students] poke a hole in Apple's encryption,' which describes the results of some research my students and I," writes Matthew, "have been working on over the past few months.  As you might have guessed from the headline, the work concerns Apple, and specifically Apple's iMessage text messaging protocol.  Over the past months my students" - and he names the four of them - "and I have been looking closely at the encryption used by iMessage in order to determine how the system fares against sophisticated attackers.  The results of this analysis include some very neat new attacks that allow us to, under very specific circumstances, decrypt the contents of iMessage attachments, such as photos and videos."



He says:  "Now, before I go further, it's worth noting that the security of a text messaging protocol may not seem like the most important problem in computer security.  And under normal circumstances I might agree with you.  But today the circumstances are anything but normal.  Encryption systems like iMessage are at the center of a critical national debate over the role of technology companies in assisting law enforcement.  A particularly unfortunate aspect of this controversy has been the repeated call for U.S. technology companies to add backdoors to endtoend encryption systems such as iMessage.



"I've always felt," writes Matthew, "that one of the most compelling arguments against this approach, an argument I've made along with other colleagues, is that we just don't know how to construct such backdoors securely.  But lately I've come to believe that this position doesn't go far enough in the sense that it is woefully optimistic.  The fact of the matter is that," he says, "forget backdoors.  We barely know how to make encryption work at all.  If anything, this work makes me much gloomier about the subject."



And he says:  "But enough with the generalities.  Apple iMessage, as implemented in versions of iOS prior to 9.3," which is yesterday when we got 9.3, which not coincidentally coincides with the public revelation of this.  So he was waiting until 9.3 was released because Apple made some changes which mitigate the problem.  But as we're about to discover, there is a fundamental flaw in the design of iMessage which at first looked safe and proper, but is exploitable and is not fixable without scrapping iMessage.  And in fact he recommends toward the end of his blog that Apple really ought to abandon the iMessage protocol and switch to something that is known and has been analyzed publicly like the technology used by Whisper Systems' Signal application.  And so this is interesting because Apple designed their own protocol.  And even with really good crypto people, they made a mistake, which is what Matthew and his team found.



So he says, prior to iOS v9.3 and Mac OS X v10.11.4, the previous versions contain "serious flaws in the encryption mechanism that could allow an attacker who obtains iMessage ciphertexts" - meaning encrypted iMessage communications, which is what's passing back and forth between devices - "to decrypt the payload of certain attachment messages through a slow but remote and silent attack, provided that one sender or recipient device remains online.  While," he writes, "capturing encrypted messages is difficult in practice on recent iOS devices, thanks to certificate pinning, it could still be conducted by a nation-state attacker or a hacker with access to Apple's servers."  He says:  "You should probably patch now."  Meaning update your version of iOS on all of your iOS devices and your Mac OS X.



So essentially, and I'm going to summarize this, we've discussed on the podcast how in order to protect the secrecy and authenticity of encrypted messages, it's necessary to both encrypt and authenticate the contents.  And we've talked about how, since you're doing two things, if you're doing them separately, that is, you often have an encryption algorithm and then a keyed MAC, often an HMAC - and MAC is Message Authentication Code.  So the idea is that you take the plaintext.  You encrypt it first, and then you authenticate the encrypted result and do that after encryption.  And the reason the sequence is important, is then the recipient, the first thing they do is to authenticate that there's been no change to what was received.  And this is something that people often get wrong because they don't believe it matters what the order is.



But as we've discussed previously, if you authenticate first, then you encrypt, what that allows an attacker who is able to receive that payload to do, they can perform test decryptions because the outer layer is the encryption layer, and the inner layer is what was authenticated.  And so what Apple did in their design of iMessage is, unfortunately, they don't authenticate.  They thought they were because they were digitally signing the result.  And signing is, as we know, is typically a hashing process where you take the blob, you hash it to produce a signature, and then you cryptographically sign that signature.



Well, it turns out that, looking carefully at the protocol, Matthew and his students realized that they could take the payload and change the signer, essentially, the attacker could sign it, and that there was a way to then abuse the endpoints.  This is why one or the other, either the sender or the recipient, has to stay online to essentially send test packages back with a valid signature, but a different signature.  And since they control the signing, they can make the signature valid.  And over time this allows them to essentially use either those endpoints as what's called an "oracle," which is essentially - that's a cryptographic term for sort of getting information from, as it's called, an "oracle" by sending test packets and looking at the type of error generated.



And so this is the kind of attack we've talked about for a number of years.  And it turns out that because the design of iMessage wasn't, I mean, it looked good, and it's easy to examine it and say, yeah, this looks fine.  But because it broke from the well-agreed-upon proper way to do this, just that little difference created a crack that it turns out you can drive a wedge into.  And the bad news is that the only fix that anyone was able to come up with, because Matthew and his team have been in contact with Apple for some time, I mean, this is a fundamentally compromised protocol.  And it's in all billion iOS devices right now; and Macs, of course, have it, too.  So it's not easy to change them all.



The only thing they could do was essentially create a cache and use a cache of traffic to detect attacks, which is just like the most horrible kludge imaginable.  The only thing they could think of to fix this, I mean, to call it a mitigation, is essentially an intrusion detection system for iMessage that would work by caching traffic and detecting this kind of exploit, which is not the way you want your secure protocol to function.  It's like, well, yeah, we know it has problems, and we can't change it because it's in too many devices now.  But we know how to detect it if we store up enough activity and check to see if this is repeated probes by a given attacker against a given device.



PADRE:  And what they'd be looking for in the cache, they'd be looking for the same packet that has been sent time and time again with a slightly different signature.  Let me layperson this because I think I understand it, but let me make sure.  Because Apple decided to authenticate after encryption, it allows an attacker to change the contents of the packet and to send it back at either the recipient or the sender and listen for error messages, basically looking for a change that they make that will finally get back what they want.  Now, if Apple had done it the other way, if they had authenticated, then encrypted, then there would be no way for an attacker to change the packet without breaking the encryption and making the packet useless.



STEVE:  Well, except that authenticating, then encrypting, is the other problem, which allows you to then do test decryptions.  Essentially the mistake they made was they authenticated by signing.  And so normally authentication uses a fixed authentication key which is agreed upon.  Instead, they authenticate under a signature.  So what this allows is them to change the signature.  They use the attacker's signature to sign it, so the signature is valid.  But that allows them to then poke at the authentication side and, over time, end up decrypting.  And there is a paper that's been written, if anyone's interested, that really chews this thing to pieces.  There's no need to go into it here.



Essentially the takeaway is there is a problem.  It's not clear what Apple will do in the long term.  What would be nice is if they could bring up a second publicly vetted messaging system like Whisper Systems' Signal, and sort of phase it in so that it's able to be adopted by devices that use it, and devices that haven't upgraded are still able to use iMessage at their end.  But over time, iMessage would filter out of the ecosystem.  Unfortunately, that sounds very much like SSLv2, which is the topic of this podcast as soon as we get caught up on the news, and we see how well that worked.  So it's a problem that, I mean, there is a problem with iMessage, and it can't be changed.



PADRE:  Yeah.  Unfortunately, what it looks like is iMessage is fundamentally broken.



STEVE:  It is.



PADRE:  And as you mentioned, because it's in so many of their products, you can't fix it without breaking it for a large number of existing iOS or OS X devices.  So the only way to fix this is either to use that kludge, which has all sorts of negative consequences, as well, because you are now making a cache of data that should never be cached; or you junk it, junk it and start new.



STEVE:  Well, yeah.  And, I mean, it just - anyone hearing this would just shudder because you don't - you want your encryption to be strong.  And unfortunately, it's not.  And so they're sort of like coming up with a pure kludge in order to detect the attack, rather than foreclose the attack, to prevent the attack.  Maybe they'll be able to run parallel protocols and get this out of the system over time.  And in his blog Matthew notes the phenomenal number of iMessages.  Apple boasts a billion devices. And I think it was something like 200,000 iMessages per second, something like that.  I mean, it's an unbelievable amount of messaging traffic that Apple is now handling, none of which is as secure as they would like it to be.



PADRE:  Steve, any guesses on how many messages you'd have to have in the cache in order to do proper IDS/IPS?



STEVE:  I don't know.  I didn't look at the paper to see whether they talk about mitigation.  The problem is you'd have to have a lot because the cache is going to be flushed.  And if it's got that much traffic, any of that traffic could be an attack hiding among the rest.  Oh, it's [groaning].



PADRE:  And of course, once the attacker knows that you're looking for a single packet that's being used many, many times, all they have to do is, okay, now they take a selection of packets, and they alternate which ones they send.



STEVE:  Right.



PADRE:  So it becomes a cat-and-mouse game with a kludge.



STEVE:  And maybe they slow the attack down so that they're - if they know that the mitigation is a cache, they wait for the cache to roll off the end so that their attack ends up being a low-bandwidth attack in circumstances where they know the victim device will be online for, like, you know, statically online and not in danger of going away.  Then, I mean, it just - these are all the reasons why this is just an awful solution.



PADRE:  Yeah, yeah.



STEVE:  Ow.  So we've talked often about side-channel attacks.  And in fact a couple weeks ago we covered one that I mentioned where a laptop on the other side of a wall had its, I think it was GPG keys stolen when it was doing - it was a chosen ciphertext, meaning that it was necessary for that laptop to repeatedly decrypt a message of the attacker's choice.  That gave them the behavior that they were able to literally pull out of the noise that was received in order to determine what was going on.



And the reason was that, even though the specific crypto had been designed such that no branches were taken based on secrets, that is, the keying material didn't cause execution path changes, it did cause memory usage changes.  And they were actually able to detect the effect of timing on cache hits and misses by running a thread in the same core as the one doing the decryption.  And I just realized I'm confusing two different side-channel attacks.  That was one where there was a thread in a hyperthreaded core.  And then the one we talked about earlier was the through-the-wall attack.



This one was designed, this most recent one, by some researchers at the University of Tel Aviv.  And essentially what they showed was that on mobile devices with very inexpensive hardware - and this is really the advancement in the art in this case.  Doesn't take fancy software-defined radios with multiple antennas, and you need to get all of the conditions set up exactly right.  This is a hand-wound coil that's connected to a soundcard because it turns out that it only needs a bandwidth of a few hundred kilohertz, which the A-to-D converter in a soundcard can handle.  And that gives them the resolution that they need in order to perform this decryption.



In the abstract of the paper which they have submitted, they wrote:  "We show that elliptic curve cryptography implementations on mobile devices are vulnerable to electromagnetic and power side-channel attacks.  We demonstrate full extraction of elliptic curve DSA secret signing keys from OpenSSL and CoreBitcoin" - by the way, CoreBitcoin is the library which a bunch of different Bitcoin clients use - "running on iOS devices, and partial key leakage from OpenSSL running on Android and from iOS's Common Crypto library."  They write:  "These nonintrusive attacks use a simple magnetic probe" - which is what they call their coiled wire - "placed in proximity to the device, or a power probe on the phone's USB cable.  They use a bandwidth of merely a few hundred kilohertz and can be performed" - "they" meaning the attacks - require "a bandwidth of merely a few hundred kilohertz and can be performed inexpensively using an audio card and an improvised magnetic probe."



So here, I mean, and you kind of wonder, it's like, wait a minute, maybe that affects a phone which is on and locked.  And that seems like it would be useful for law enforcement.  And the paper just came out.



PADRE:  And we know that a side attack, a side-channel attack is attacking crypto by not attacking crypto, but attacking the physical implementation of the crypto, and that's why we've got that coil.  So what is it that they're listening to specifically?



STEVE:  So essentially we all know that our electronic devices emit electromagnetic radiation, which is why, if you look inside modern computers, you'll see sometimes like a sponge-y silver gasketing around the box, literally creating a Faraday cage in order to keep the electromagnetic radiation inside.  And oftentimes the power supplies on laptops will have a big blob in the power cord near where it plugs into the computer.  The idea is that that would be a means for radiation getting out of the computer through its DC power cable so that large ferrite toroid, essentially, around the cord absorbs that interference and prevents the long wire coming from the laptop from being an antenna to re-radiate this radiation.



So the problem is that it's extremely difficult to prevent any consequence of the secret activities of the electronics from leaking what they're doing.  What they're doing creates radiation.  And clever engineers have figured out, first of all, how to pick up the radiation, and then separate essentially the wheat from the chaff, separate little bits of information, literally bits of information out of the noise when the processor is actively decrypting or processing encrypted information.  It leaks.



And this kind of thing, these sorts of side-channel attacks go way back.  What was it, it was the Tempest project where it was realized that the beam scanning a CRT, a cathode ray tube, the beam was changing its strength in order to paint the image on the CRT.  And in doing that, it was emitting electromagnetic signals, and somebody could pick that up from a goodly distance and essentially re-rasterize it in order to recover the image that is being shown on the CRT.  And so the fact that I'm using the term "CRT" demonstrates how old these sorts of attacks are.  And we have them today, using a coil of wire laying against a phone.



So what this potentially means is that a phone engaged in cryptographic activities, sitting there with its screen off and locked - because phones still need to be able to transact data, to send and receive email and operate in the background, many phones do - a coil of wire next to the phone can pick up data and figure out what's going on inside.



PADRE:  You know, Steve, when I was in high school I did an internship.  And it wasn't any top secret stuff, it was corporate secret stuff.  But we had a room that was entirely encased in copper mesh.



STEVE:  Wait, was that high school?



PADRE:  Yup.



STEVE:  You had a Faraday cage when you were in high school?



PADRE:  Not at the high school.  It was a company that I was working with in the Silicon Valley.  No phones.  The only line that came in was power, and it was filtered power.  And every device that was in the room had to stay in the room, and you actually came in in clean suits.  And so that was [intentionally muffled] years ago.  And so even back then they understood,  yeah, you can piggyback signals, and if you want to keep something really, really secret, you need this for the systems that will be containing your most sensitive secrets.



STEVE:  Right.  And in the movies we see situations where somebody has a big bin, and they say, okay, everybody put your phones in here, and those are not coming in with you.  You're coming in without your devices because there's no way to secure them.



PADRE:  Actually, the last movie I remember that actually had a Faraday cage in it was - you remember a movie with Will Smith and Gene Hackman called "Enemy of the State"?



STEVE:  Yeah.



PADRE:  And Gene Hackman had like a tractor-trailer that had copper mesh on the inside.  And I was going, okay, well.  And I actually priced out one of those.  Those are actually very expensive to make.



STEVE:  Well, and in fact there's a series now on Showtime, "Billions," which is really good.  And just last Sunday, and maybe the Sunday before, in order to have private conversations, knowing that they were probably being bugged and eavesdropped on, they walked into an electromagnetically shielded room in order to have that conversation.  So just two days ago this was happening, this whole notion of a shielded room to prevent what goes on inside from getting out.  Of course, it doesn't prevent recording from getting out, so you still have that problem.  Only electromagnetic radiation.



PADRE:  We built one at Interop one year just using stripped copper wire from old CAT5 cables.  A, it was very, very difficult to make properly because you also have to ground the thing properly in order for the signals not to just get attenuated and then continue on their way.



STEVE:  And the size of the holes determines what wavelength it's going start attenuating.  And so it really needs to be - what you want is sheets of copper.



PADRE:  Yeah, yeah.  And actually that was very expensive back then.  So we never completed it.  Go figure.



STEVE:  Yeah.  So...



PADRE:  Cleansing breath.  Cleansing breath.  Okay.  So our messages are being spied on.  Our phones are being spied on.  Our computers can be attacked from a distance with a coil and a cheap soundcard.  You've got some good news; right, Steve?



STEVE:  Not yet, no.



PADRE:  Okay.



STEVE:  It also turns out that the ad networks used by a bunch of major websites have been spreading everyone's biggest nightmare, crypto ransomware.  The SpiderLabs blog discovered through their watching the 'Net that the Angler - Angler is sort of the go-to evil toolkit now which is getting into systems and spreading crypto ransomware.  At the beginning of this month a malvertising campaign appeared; and, based on their research, it exposed tens of thousands of visitors, even just in the course of a day:  The New York Times, the BBC, MSN, AOL, Xfinity.com, NFL.com, Realtor.com, TheWeatherNetwork.com, TheHill.com, Newsweek.com, Answers.com, ZeroHedge, and InfoLinks.  So, I mean, a Who's Who of major sites.  And the affected advertising networks were those owned by Google, AppNexis, AOL, and Rubicon.



When looking at the payload, it turns out that there was a JSON-based file that was being served in these malicious ads, containing more than 12,000 lines of heavily obfuscated code.  And when this code was decrypted and deciphered and deobfuscated, researchers discovered that it enumerated a long list of security products and tools which it was actively avoiding in an attempt to remain undetected.  So this was not just a malvertising campaign, but it was trying to be as stealthy as it could be in order to allow it to survive as long as it could.



And what I thought was interesting was that the most widely seen infection domain name was a domain called BrentsMedia.com.  And the WHOIS record showed that it had been owned by an online marketer until the first of this year, till January 1st, when that domain was allowed to expire.  It was snapped up by its current owner on March 6th, which was a day before the malicious ad onslaught started.  So that was sort of interesting.  Here was an existing domain name.  It had been retired.  But it had some credibility.  It had some rep.  And so the bad guys got it in order to leverage its history, essentially, and use that for spreading their malware.



And so in the researchers' report about this, they asked themselves, what can people do?  And the standard advice is what we've been giving all along, is you want to reduce your attack surface by uninstalling things like Adobe Flash and Java and Microsoft's Silverlight, and really any other third-party browser extensions that you're not actively using.  One of the things that can happen is that we just, you know, these things just sort of get acquired over time.  It's like, oh, this looks interesting, and so you add it, but you don't normally go through and do a proactive housekeeping to say, you know, am I really using Pocket anymore?  Am I really using this or that?



And it's just better to keep things simple.  It's better not to have add-ons around because, if vulnerabilities are discovered in them in the future, and you've got it, and you're not using it, then you're presenting a larger attack surface than you need to because you're not getting any benefit from that attack surface.  So you really want to minimize it as much as possible.  And of course the other advice is this tension that now exists between sites that are becoming increasingly insistent that their visitors disable any adblocking, and the surfers, the visitors to those sites who don't want to be infected with malware in return for visiting.



So by default - and this is why we've been recommending now uBlock Origin instead of NoScript.  For years, NoScript was what I was promoting, just turning scripts off so that this stuff wouldn't be allowed to run.  The problem is good scripts became so prevalent over the last couple years that too many sites are broken; or the site works, but then you go to fill out a form; or you're in the middle of moving through the purchasing system, and then it breaks, so now you have to resubmit a form that you really don't want to resubmit because you don't have scripting.



So finally I just gave up on NoScript and blocking scripting and went to really the main source of this.  Although uBlock Origin is also a script blocker, it focuses on, by default, allowing you to set up a set of blocks to protect you.  And then, if you need to, you lower your shields, if you decide that, okay, this site is asking me to, or I want to support the site, or the site has put up its own ad wall saying you can't come here until you allow us to serve ads to you.



PADRE:  It's interesting that the whole adblocking thing, the controversy that erupted towards the end of last year was really about whether or not you're going to support the sites that you enjoy.  So if you support the site, you should disable your adblocker.  But it's really morphed into, well, since you don't  maintain the quality of the ads that are served on your site, I can't trust you.  And it will be interesting to see if newspapers and online publications will start moving to a format in which they have to vet a company coming into their ad network before they actually allow them to display ads on their site because it's their reputation.



STEVE:  Well, The New York Times and the BBC sites were hit.  So high-end, high-profile sites.  And I've never really looked closely at the ecosystem that the ads use.  But the way I understand it, there's actually some sort of a bidding process where advertisers have a certain number of impressions that they will pay a certain amount for.  And so they're not even sure where they're going to be shown, or how much they're going to be shown.  It's very much like even here on the TWiT network we'll have an advertiser at the beginning of the year that ends up using up its number of allotted sponsor inserts, and then we switch to different sponsors.  And so it is a dynamic process.



And so I think, of course, the happy world that websites have existed in until now is that they just created blank space.  They just had windows on their pages with, we don't know what's going to be put in there, and we don't care because we're getting money by creating a sort of a window of opportunity for ads to appear.  And sadly this has become a major target for abuse.  What we really need, and a project I'm going to have to find some time to spend, is we really need stronger browser isolation.  We need a browser that - it is the vulnerable attack surface in our computers today.  That needs to be in a virtual machine where nothing running in there has access to the crown jewels, outside of that virtual machine.



And there are tools like Sandboxie.  There's something called Browser in the Box.  There are different approaches at trying to do this.  And there are some services.  I'm not a big fan of the pay-by-month service approach.  I think a solution needs to be either free or something that you just pay a reasonable amount for once and then it's yours.  But we really - we need a good solution for that.  And you need to, when you want to export a file that you've downloaded from that containment, then you need to be able to do that.  So it can't live by itself because it does need to have - you need some transaction between the browser and your system, but under your control, not under the control of scripts running in ad windows.  And if we had that, then we could drop - except for the privacy and tracking side.  That's still an issue.  But at least the malvertising would cease to be a problem.



PADRE:  The way that I have it running at home is I actually have a box sitting in my data closet that all it does is run containers.  And every time I bring up a browser on my laptop or desktops that are inside my network, it's not actually bringing up a browser on the laptop or desktop.  It's bringing up a container that is shown on my laptop or my desktop.  I can get that infected 50 ways to Sunday, and when it shuts down, it disappears. 



STEVE:  Nice.



PADRE:  And because it's running in that container, it doesn't know about anything else that is on that desktop.  In fact, it doesn't even know anything else about the computer it's actually running on.  You can do that on a single system.  You can run containers in your operating system, be it Windows, Linux, or OS X.



STEVE:  Right.



PADRE:  So I think that's where we're heading.  We're heading to, as you mentioned, something that they covered at RSA two weeks ago, which is assume breach.  And if you assume breach, it changes the way that you use your system.



STEVE:  Yes.  Well, and speaking of the Angler exploit kit, which is the thing that all of this malvertising was dropping onto machines, onto visitors' machines, we've been talking off and on about the ongoing problems that Lenovo has been having with all, you know, like installing certificates in people's machines and really creepy behavior.  The ThinkPad line was my favorite go-to laptop for years.  And of course that was when IBM was producing those.  They were just - you've seen executives with a ThinkPad.  It's like, okay, this is a solid laptop.  And then of course... 



PADRE:  Quality hardware.  It was relatively clean on the OS side.  And then it just - they threw that all away.



STEVE:  Yes.  So it turns out that F-Secure detected on Startpage.Lenovo.com an instance of Angler that visitors to Startpage.Lenovo.com were being exposed to.  So certainly this was not deliberate.  Their problem, Lenovo's problems, were of their own making.  Presumably this is a site compromise.  Somebody got into their site somehow and altered that page in order to send Lenovo's visitors off to go pick up a copy of Angler and get themselves infected with malware.  So still bad.



PADRE:  It's one of these things where I actually kind of feel bad for them because they went from a premium brand to the brand to avoid at all costs in about 18 months.  And I know several of the engineers over at Lenovo, and they're good guys, and they put a lot of work into this.  And then it seems that it gets to the marketing folks, and the marketing folks say, well, let's tack on an extra three cents of profit per unit, and then this happens.



STEVE:  Yes.  And in fact some of this was third-party crapware that they were being paid to bundle with the laptop.  And you see, you know, Symantec preinstalled or McAfee preinstalled, and you try to remove it.  And it's like, wait a minute, you have a license.  It's like, yeah, for a month, and then you want me to install it or start paying for it.



PADRE:  That's my favorite warning.  Every time I get a new machine, and I go into the uninstall menu, and it's just boom, boom, boom, boom, at least 15 different times I get the "Are you sure?  I mean, you have an active subscription.  Don't you want to take advantage of the industry standard in security?"  It's like, no, thank you, go away.



STEVE:  Yeah.  And I also don't want - what was it the other day?  Something was pushing Chrome on me.  I don't remember what it was.  And it's like, yeah, I'm still sticking with Firefox.



PADRE:  I haven't seen that one before.  A site was pushing Chrome?



STEVE:  No, no, no.  It was - I don't think it was Java.  I don't remember what Java's pushing.  Something was.  



PADRE:  I'll have to try to replicate that now.



STEVE:  Anyway, Pwn2Own 2016.  This is the annual everybody saves up their exploits and gets together and attacks operating systems and browsers contest.  This year about 100,000 less dollars were earned.  In the 2015 Pwn2Own, $550,000 in cash prizes were awarded.  This year only, but still, 460,000, so some serious money, as a result of 21 new vulnerabilities which were discovered and revealed and demonstrated.  Windows 10 was the leader in vulnerabilities with six of them.  It was the most in any single target of the competition.  However, in fairness, OS X, Apple's, was not far behind with five.  So both of these big operating systems.



And, I mean, we don't want our operating systems to have vulnerabilities.  But you look at something like Windows 10, and my first thought is only six?  How hard did these guys look?  I mean, because these operating systems are just ludicrously large and complex now with just, you know, I mean, anything that's going to squat on 20GB of your hard drive and is full of stuff it's doing, it's going to have vulnerabilities.  We see how even simple clear protocols are having vulnerabilities found.  So something like Windows 10, yeah, of course it's going to have problems.  Anyway, Safari had three successful attacks against it.



And what was interesting to the people observing this, sort of standing back and observing, is that Microsoft's Edge was significantly more secure than previous versions of IE.  So the decision Microsoft famously made, as we know, was to abandon the aging IE codebase and just say we're going to start over.  And so that looks like they made the right decision.  Edge is way less problematical than IE was.  And Chrome remains the most secure of all browsers.  The observers noted that one of the reasons Chrome is as strong as it is, is that it enforces really good sandboxing at the expense of memory footprint.



And, for example, that's why I still shy away from Chrome.  When I launch Chrome, because I'm watching, I've got TaskMan running on a monitor all the time, and I just see chunk, you know, memory utilization jumps up by about a third of my system's memory, which is one of the reasons I will be moving to a 64-bit system soon.  I'm still on Windows XP, where I've only got 3GB of usable memory.  So, yeah, Chrome takes a big chunk of that.  But, I mean, it is just really memory hungry.  But what you get in return, arguably, is the best security in the industry.



And what was interesting was that Firefox was not present at all.  That is, people didn't even bother attacking it.  And observers felt that this was because, among elite hackers, Firefox is no longer considered hard enough to beat, like no one gets any great props for breaking into Firefox.  And the problem of course is, as was the case with IE - and remember, this is Mozilla.  This predates Internet Explorer in terms of it was the first browser on the Internet, and no doubt there's no remaining code from then.  But still, it's arguably time for a rewrite, just as it was with IE.



Mozilla does have their memory-safe language Rust.  And people are beginning to feel that, because Firefox doesn't have really strong sandboxing the way Chrome does, and it's got an aging add-on architecture, whereas Chrome has a much better extensions architecture, that it's probably time to say, okay, we're just going to come up with a rewrite and get back in the game.  I love Firefox because I've got tree-style tabs that allow me to have tabs running down, a scrolling window of tabs running down one side, so it fits the whole wider screen structure that PCs and laptops have now, that is, to take tabs, to have tabs on the side, and to have lots of them.



And of course there's a great ecosystem of goodies that I like to add to Firefox; although, in fairness, Chrome has those, too.  I just wish we could get good side tabs with Chrome.  I've seen something that sort of puts another external window next to Chrome.  But it doesn't seem like it's the same as actually having just side tabs built in.



PADRE:  Well, I mean, that's why I have a desktop with 128GB of memory, because I like to use Chrome.  People ask if it's for gaming or video editing.  No, it's just for all the tabs.  Steve, on Pwn2Own, what's interesting is the big bounty this year, and I don't think it was claimed, was for escaping a virtual machine and gaining root-level remote code execution.  And that was not claimed.



STEVE:  Good.



PADRE:  So evidently virtual machines are still pretty secure.



STEVE:  Now, we have seen flaws.



PADRE:  Yes.



STEVE:  The one that comes to mind was the floppy driver flaw where, even though - and this is one of those things, again, attack surface.  You are not using the floppy driver in a virtual machine, probably.  Yet it's there.  And it turns out that there was a way to exploit the floppy driver in order to break out of the VM encapsulation and get out into the host environment.  And of course we have seen cross-VM exploits where multiple VMs could communicate by somehow breaching the hypervisor.  But it's good to know that that's strong.  I mean, it just - it feels like the right solution.



This notion, for example, that Sandboxie has of intercepting APIs that are dangerous, it's like, okay, that's like old-school firewalls where you block the ports that have had attacks come through.  And it's like, okay, yeah, but what about those other 63,000 ports?  When is an attack going to come through one of those?  The idea of blocking things that are dangerous is not the way you want to operate.  You want to block everything by default, and then selectively and under deliberate control pull things out of that container.



PADRE:  Exactly.  And that's the way we should be operating, but we don't because that requires more work, and that requires an active decision to allow something, whereas we would prefer not to deal with it unless we think it's causing a problem.



STEVE:  Right.



PADRE:  That's human nature.



STEVE:  Right.  So we've talked about Stagefright too much in the past because it just keeps giving.  And that's certainly the case here.  What's happened is Zimperium, everybody will remember, were the guys who found a number of flaws in the media processing code of the Stagefright module, which handles multimedia for Android.  Google didn't write it.  They got it from somewhere.  And it just turns out it has all kinds of problems.  And so we've talked about those.  Zimperium created a tool that lists all of the known vulnerabilities.  And over time then that brought out the whole issue of are mobile phone manufacturers maintaining phones after they've sold them?  Do they care about them?  The argument being, you know, these are computers.  We know computers have to be kept patch current.



And so on one hand the mobile suppliers want to just consider it a retail sale and then charge you for connectivity.  My argument is, if they're profiting on the service of you being connected to them, then with that should come an obligation that this device they sold you and are using to connect and consume the service that you're paying for, they ought to have responsibility for pushing to it patches which are being made available to them.  It's not like they've got to independently create a security team and design fixes.  No, all they have to do is push what security researchers or often Google makes available.  They're lazy.  They choose not to.  Or the other problem is they may say, oh, well, we'll do it for a year.  Well, they ought to do it for the service life of the device.  If they're taking revenue from you for using the device, they should have an obligation.



Anyway, what's happened is a different group, an Israeli security firm named NorthBit has come up with a new exploit against the old Stagefright, that is, the patched Stagefright, which uses a vulnerability which, as it was written, for some reason Google never fixed.  Apparently this was a known vulnerability that never got patched.  So what's interesting is that, in Android 4.1, Google increased the security by adding address space layout randomization {ASLR}, which we've talked about often.  This is a technology that Windows got a while ago, and OS X, or even before OS X, Apple's Mac OS got, where the system is inherently composed of a bunch of individual modules.



And the dangerous way of arranging things is just to stack them all from the bottom of memory up in the same order every time.  That's dangerous because what that does is it creates a rich codebase of repurposeable code which attackers can use.  If in applications running elsewhere in memory, they can get any kind of a foothold.  If they can create a buffer overrun; if they can leave something on the stack which gets popped which causes the return, not to the function which called the malicious function, but a return to existing code at a known address elsewhere in the system.  And that's called ROP, Return Oriented Programming, where you're able to stitch together existing code to perform some malicious feat.



The reason that's important is that those regions of memory are marked executable, whereas the stack is typically flagged as being data only.  It's called the NX, the No-eXecute bit.  That can be set on the descriptor of the memory for the stack, which prevents the attacker from running their own code that they may  have brought into the buffer, but they can still cause a fault where existing code that's authorized to run in the operating system can go.  So in order to defeat this, the concept has been, hey, there's no reason we need to stack everything from the ground up in the same order each time.  Let's just scatter all these modules for this modular operating system.  Like in the case of Windows DLLs, these Dynamic Link Libraries, they're dynamically linked.  They can be dynamic anywhere they want to be.  So let's just scatter them around.



Now, there are normally limitations on the granularity of position, which brings the entropy of their location down some.  But at least the idea is that, every time the system boots, it arranges somehow to randomly or pseudorandomly rearrange the modules so that code that is then running is not at a known location.  And we've seen exploits where the bad guys just, okay, we're in an ASLR system, so there's a 1/256 chance that the module we need to execute code from will be in the location we're hoping.  If not, we crash.  If so, we win.  And so the attackers basically accept a much lower degree of success on their exploits, specifically because of ASLR.



Well, it turns out that this, it's called the "Metaphor" exploit, is able to leverage an information leakage due to the way this Stagefright module, the flaw in the Stagefright module, to obtain the exact layout of modules in the ASLR system, which completely removes the effectiveness of address space layout randomization and hugely improves their ability to successfully attack the phones.  So there's a proof-of-concept exploit which works against Android versions 2.2 through 4.0, doesn't work against 4.1, but does against 5.0 and 5.1.  And in fact it was believed that 5.1 was immune, but it's believed to be that no longer.  It turns out that 19% of Android phones are currently running v5.1.



Now, it does require phone-specific code.  So one so-called drive-by exploit won't be able to attack all Android phones, even of the same version.  But it turns out that a site, for example, could see what you've got and then send you a phone-specific payload to attack that particular phone.  And the researchers said that this works best on Nexus 5 models with a stock ROM; also on the HTC One, the LG G3, and the Samsung S5.



So Stagefright is back.  And I saw a number somewhere, I had it in my notes.  Oh, nearly 300 million Android phones.  The original Stagefright exploits were effective against a much larger number, 950 million.  So this is less than a third, yet it's a much stronger attack.  So if you had the at-risk phone with the not-yet-patched version of Android, and the payload was for that phone, it looks like the attack would be pretty successful.



And then just in late-breaking news, this was just yesterday, Google has stated in response to this, they wrote:  "Android devices with a security patch level of October 1st, 2015 or greater are protected because of a fix released for this issue last year."  And then Google said:  "As always, we appreciate the security community's research efforts as they help further secure the Android ecosystem for everyone."  So our moral is keep mobile devices updated.  Only use mobile devices from reputable vendors who do keep their devices updated post-sale, and use them only so long as they are being kept updated because these things are computers, and all the evidence demonstrates that they're going to have problems.



PADRE:  Steve, the ASLR leak, so it's leaking where the target module is in memory?  Is that the bit of information that's leaking out?



STEVE:  Yes.  It's described as an information leakage.  And I forgot to mention I've got the link to the exploit description in the show notes.  I was stunned.  It is an absolutely amazing piece of work.  If anyone is interested in a case study in how to do this, how this works, these guys, these NorthBit guys, it's, well, the domain is Exploit-db.com/docs/39527.pdf.  It's beautiful.  It's got graphics.  It walks you through this thing.  It's just a beautiful piece of work.  So if anyone is interested in, like, digging in, these guys have really nailed it.  But to answer your question, Padre, yes.  Basically there is an information leakage which discloses the module location instance, which then allows the bad guys to attack with essentially 100% reliability.  Basically, if everything is set up right, you get owned.



PADRE:  I just started looking through this file.  It's interesting because it looks like they're exploiting the - they've got an unsigned integer, a 32-bit unsigned integer that they declare, and then they put it into an unsigned 64-bit in order to give it extra space.  So all you have to do is write 65 bits of data, and you've got an overflow.



STEVE:  Yup.  It turns out it's in the MPEG-4 file format implementation.  There's just a mistake there in parsing it.  And we saw that was Stagefright before.  There were some typecasting problems where the compiler just didn't do - it wasn't checking for inequality correctly.  And so it was like signed versus unsigned.  And that difference in inequality testing allowed them to, like, sneak past a test that was there to keep this from happening.  It's like, well, the test is there, and we just bypassed the test.



PADRE:  What I do like about this is in the structure that they have in the example here, it basically tells you how to overflow the module because it has what the input is, and then it has a separate line that says, oh, yeah, 64-bit, it will never get bigger than this.  It's like, oh, okay.  I'll make it bigger than that.



STEVE:  Right.



PADRE:  Thank you for that very helpful comment.



STEVE:  We're not going to bother checking because no MPEG-4 file is ever going to have something bigger than 64 bits.



PADRE:  A 32-bit unsigned integer will never be bigger than a 64-bit unsigned integer; right?  I mean, let's just...



STEVE:  And think of all the time we'll save not performing a test.



PADRE:  Now, that's performance.  There we go.



STEVE:  Wow.



PADRE:  Wow, okay.  Thank you for showing that to me because now I have my evening reading.



STEVE:  You'll dig it.  It's a beautiful piece of work.  So last week I mentioned that the way I had set up my new monster box - and Padre, I went with 64GB because I wanted to crank the memory up to 3200.  I can run it 2666 at 128GB of RAM, but I decided, you know, most of the time the RAM is going to be empty.  So I think I'd rather have what I'm using more.  I do have the unused memory, in case I ever am doing something like going VM crazy.  But anyway, what I did was I did get a motherboard that has the M.2 PCIe slot and the state-of-the-art Samsung 950 NVMe memory.



PADRE:  NVMe, yes, ooh.



STEVE:  So half a terabyte of that.  So it's 512GB of that, essentially on the motherboard.  Nothing faster.  And I still operate lean.  That is, I'm right now in XP.  I'm in a 30GB partition.  My C: drive is like, you know, maybe half full.  So my idea was to bite the bullet and get a much larger SSD than I know I will ever use.  That is, only use a corner of it.  That way wear leveling helps me because I'm not filling this thing up.  Instead, as I use my small amount of it, the controller will migrate me around, will migrate that small usage around a mostly unused field of nonvolatile RAM.  So I'm minimizing my use of it.  But then the other part of this I mentioned is that I am using a motherboard that supports the Intel RAID 0, 1, and 5.  I think also 10 and a couple others.  I'm using just a simple mirror.



I wasn't sure I mentioned - I thought I had two 2TB drives.  Actually it's two 3TB drives.  I had them as backups for my TiVo in case the 3TB drive in the TiVo ever died, I'd have one on-hand that I could immediately swap in to get that going again.  So what I've done is I have those mirrored so it's maximum redundancy, minimal efficiency, but also maximum speed because any, for example, RAID 5 or 6, there is some performance penalty hit that you take unless you have a fully standalone caching controller because of the math you have to do in order to perform the XORing operations to create a more efficient form of redundancy that the higher levels of RAID give you.  I'm settling, I mean, 3TB is a crazy amount of space, way more than I expect to need.  Again, I'm operating just in hundreds of gigs right now across the drives that I have online.



So what I'm going to do is, every night, because I never turn my systems off, my main system just sits here running 24/7, I do use my own little Wizmo in order to power off all of the screens.  I've got five screens running.  And this one has two quad HDMI cards, fanless, so that I've got eight, I can drive eight screens out of those.  It's just an NVIDIA card that's, like, all heat sink but no fan.  So I'll have plenty of screenage for the foreseeable future.



But the point is that I - and I mentioned this on the podcast - that every night a full image of the SSD gets written to the RAID array so that, should the SSD ever decide to stop being an SSD and become an expensive doorstop, that's okay, I will have an image current.  And in fact I'm using a couple other utilities to capture file versions of the things I'm working on during the day so that I maintain essentially a nice versioning system.



But in response to my mentioning imaging last week, I got a bunch of people saying, what imaging software do you use?  So I wanted to give a heads-up and props to my absolute favorite solution, which is called Image for Windows.  I've mentioned these guys before, but not for years.  The company is TeraByte, and the site is TeraByteUnlimited.com.  And it's just a beautiful piece of work.  It's inexpensive.  It's less than $39.  They've got a version for DOS and for Linux.  It understands NTFS formats, so you're able to image a large drive into a single image file, rather than needing to be chopped up into two or four gigabyte files, which would be the case if you had a FAT formatted imaging drive.



It's available for 30 days with sort of a little timeout nag that comes up, but fully functional.  Feature complete.  You're able to expand and shrink and scale drives to the target.  You can perform a drive-to-drive copy.  You're able to image the drive to a single file.  You can mount that file, if you want to, pull individual files out of images.  You're able to do that, to perform a read-only mount.



Anyway, that's what I'm using.  I've been using it for years and absolutely recommend them without hesitation.  And there's a bunch of other tools they have, too, a bunch that are free.  Oh, it's also able to do an image of an in-use drive.  It'll use the VSS service in Windows, the Volume Shadow Service, in order to allow you to copy files that are in use.  But it also has its own PHYLock, they call it, that is their own kernel driver, if for whatever reason VSS is not available.  And I think in some of the smaller versions, like Home or non-premium or Ultimate and so forth, I think maybe they don't offer the volume shadow service.  PHYLock will essentially do the same thing.  So anyway, love these guys:  Image for Windows by TeraByte.  And I recommend them without hesitation.



PADRE:  Steve, you have the chatroom still kind of geeking out over the NVMe M.2 SSD.  So eventually they'll catch up with everything else.



STEVE:  It's just this gorgeous, it's this gorgeous little thing.



PADRE:  Isn't it nice?  



STEVE:  It's like, oh, it's so cute.  It's just - oh.



PADRE:  I remember the first time I saw an M.2.  It was the Kingston guys came over, and they showed me their new M.2.  And I was looking at it going, this is it?  I mean, really?  This?  But, yeah, actually they're starting to release the new - the four-lane.  And the new PCI revision spec will actually double the amount of data that you can push over a four-lane PCIe.  And at some point we're going to get faster than the PCI bus itself.



STEVE:  Well, and as it is now, you know how - because of course I'm using Windows 7.  You know how Windows 7 comes up, and you get those four little sprites, or the four little twinkles that sort of spin around and then form the glowing window...



PADRE:  They don't spin much anymore.



STEVE:  No.  It boots so fast, they don't get themselves into position by the time the screen blanks and then the desktop comes up.  So, and again, I don't boot my systems often, so it's not like I'm going to see that all the time.  But it just feels good to have a nice, beefy, state-of-the-art machine.  And I'm glad - I guess Intel or Microsoft did back off.  So much heat was generated by their announcement that they weren't going to support, what is it, the xHCI, the predecessor to the EHCI USB controller, that that was going to cause people the inability to set up Windows 7 on newer hardware.  And so that's what motivated me to say, okay, forget this.  I'm happy with 7.  I'm going to stay there, in the same way that I stayed with XP, for the next decade.  And 7 is still officially supported through 2020, or until 2020.  I think it's April something.



PADRE:  I still have a Vista machine sitting somewhere, I think.  I probably shouldn't have...



STEVE:  Necessary for testing.



PADRE:  I probably shouldn't have admitted that.



STEVE:  So Leo and I also lamented the loss of AnyDVD.



PADRE:  I use this tool.



STEVE:  Yup.  I do, too.  And I just, now, I have to say I'm using it less as the world has gone more connected, more Netflix and HBO Go and so forth.  But back in the day, a disk that I owned, I would often rip it and copy it to a laptop in order to watch when I was somewhere where it wasn't convenient to have DVDs.  Or I would want to pull a segment off of it in order to keep, or whatever.  The point was not piracy, but legal use of content that I had purchased.



And I love these guys.  Every time I turned - like every week I turn on the system that I use just for Skype, essentially, and that's the one where AnyDVD is.  And invariably I get a little pop-up saying, oh, a new version of AnyDVD is available.  And of course they were doing this because it was the cat-and-mouse race of, okay, we're going to come up with a new way of encrypting our DVD that the rippers aren't going to be able to handle.  And these AnyDVD guys would reverse engineer it and add a little bit of code and push out an update.



Now, they're back in the form of RedFox.bz.  And I had somebody who sent me a note, to actually both me and Leo, saying, "Steve, you mentioned AnyDVD on Security Now! 549.  If you have a license to any of SlySoft's products, you can still update them as the developers have resurrected the software.  SlySoft, the company behind AnyDVD, has been closed down.  But it appears the developers were not based in the same country (Antigua) as  SlySoft.  The new site is located here," and he gave me a link to forum.redfox.bz.  Now, I went there because I was curious as I was putting the show notes together.  And I did see a download in the upper right.  Unfortunately, it looks like they've changed models.  That is, the licenses apply up to the version  one point release before the one they have now.  And I looked around, but I didn't see a previous releases button.  Maybe it's there somewhere.



But what's happened is they've switched to an online model.  That is, rather than constantly pushing out updates, and then you download it, and you install it over the one you had, it's now you pull the latest from their server on the fly sort of model.  And I don't know if it's per disk or how it's structured.  Anyway, they have changed that.  And frankly, I'm not going to bother re-upping my license or pursuing it.  I haven't used the thing for years, as I mentioned.  It's just sort of, you know, disks are not something that I need to be able to pull content from any longer, the way I once did.  Everything's now connected.  But still, I just want to - I did want to give people a heads-up because I know it was a very popular solution for people.



PADRE:  The Jesuit community that I live in actually has a room as big as our regular book library that is filled with nothing but DVDs.  And these are DVDs that have been bought by Jesuits over the last, as long as we've had DVDs.  And so one of my tasks, one of my chores when I came into the house is I have gone through and consistently ripped all the DVDs to a 12-Bay 48TB NAS Array that we have in my data closet.  And now everyone in the house has access to a menu system so they can just choose the DVD they want to watch.



STEVE:  Nice.



PADRE:  And that's completely legal.  We own the media.  It's ours.  And if anyone ever comes to check it out, we do have the room.



STEVE:  Here it is.



PADRE:  There you go.



STEVE:  And besides, you're all Jesuits.



PADRE:  Yeah.  So, I mean, separation of church and piracy.



STEVE:  I did want to note one of the other sort of miscellaneous topics that this podcast has enjoyed entertaining from time to time is energy storage.  I've been a big fan of the concept of a supercapacitor, the idea of using electrostatic storage rather than electrochemical storage.  We've also talked about electromechanical storage, like maybe steam under pressure, or whirling dervish flywheels made of fibers anchored at the center, you know, and spinning in a vacuum magnetically suspended.  The question is, how are we going to store energy in the future?  And of course cars are wanting a portable source.



Just in the news is an interesting solid-state lithium technology that I just wanted to mention.  This was the result of some research that Toyota and a group of academic researchers have been working on since at least 2011 because Toyota did some pioneering work and published a paper back then.  What's interesting is that, when I say "solid-state," I mean actual solid.  And it's weird to think of, like, a solid battery, that is, a battery that doesn't have some goo in it, because all the batteries we've ever known are goo-filled.  And the goo is a problem because, as anyone knows who's like left old dry cells in a toy, you open it up, and it looks like some white fur farm has exploded in there because the goo leaked out of the old carbon zinc battery all over the place and, like, ruined the connectors and the electrodes and sometimes everything because it is highly corrosive.



Lithium-ion, or lithium-polymer, basically use a goo which has a problem in that it has a narrow temperature range.  And there is a problem with thermal runaway, which all those using the hoverboards this Christmas were worried about after the coverage of several explosions of their lithium batteries because they did not have good battery manufacturing and battery management, charging management.  But think about this:  a solid battery, that is, like a brick.  It's just so cool.  So it has a wide temperature range.  First of all, this is not a commercial product yet.  You can't go get these.  But it's very encouraging.  A wide temperature range.  The problem with goo is that it can overheat at the high end, and it can freeze at the low end.  And in fact people don't realize that it is very bad for a lithium-ion or a lithium-polymer, a Li-Po battery, to be charged while hot.  If mine is ever hot, I will wait until it cools off.



PADRE:  Yeah.  It'll actually break down the chemistry.



STEVE:  Yes, they do not like to be charged while they're hot.  So these things, the new solid-state lithium, has an operating range - an operating range - from negative 30 to positive 100C.



PADRE:  Okay, yeah.



STEVE:  So way below freezing to boiling, literally, temperature.  It can also - and in the show notes, at the top, the first page of the show notes always has our Picture of the Week.  In this case it's just a picture of this lithium lattice array.  Basically they came up with a solution which is not a solution for the first time.  It's a solid, which also offers extremely high charge and discharge rates, rivaling a supercapacitor.  The thing that was so cool about a supercapacitor is because it was not chemical, it was electrostatic, you could theoretically drive your car into a charging station, where they had even bigger capacitors, and recharge your car in a matter of a minute or two.  A lot of current would be having to go through that period of time.  But if you could source that much current, the point would be something like a supercapacitor could accept a full charge in a short time.  This solid-state lithium technology can do that.



Now, one of the other problems we have with lithium battery technology is cycle life.  And this has good cycle life.  Not as good as supercapacitors, which is essentially infinite cycle life unless it breaks down.  After the first cycle they lose 10% of its first capacity.  So charge it up, discharge it.  When they charge it, the first recharge, it has lost 10%.  Which sounds bad, except that it then survives the next 500 cycles, only losing an additional 15.  So if you consider that first loss of 10, okay, that's your zero point.  Then you're only losing 15%, I'm sorry, you're only losing, yeah, 15 percent over the next 500 cycles.  And it can charge at the speed of a supercapacitor.



So not yet on the market, but nothing to leak.  It is solid.  Because it's solid they're able to get 20 times the lithium-ion content in the same space as a fluid because this matrix actually holds them and allows them to move through the crystal matrix.  So I just wanted to bring it up as another interesting little bit of energy storage tech.  Maybe this will be the one.  Supercapacitors are neat.  We're seeing all kinds of advances on many different fronts.



PADRE:  Right.  For me, it parallels the development of lithium graphene, lithium titanium dioxide cells.  The advantage of those is they've increased surface area between the anode, the cathode, and the electrolytes, which allows you to charge them incredibly quickly without a huge performance penalty.  But this, because it's solid, not only do you get increased surface access because of the 3D crystal lattice, but it also means you have a much higher energy density.  So, yeah, that's - actually, I would love to see this technology combined with something like a lithium titanium dioxide.  So a solid lithium titanium dioxide battery.  I bet you could get outstanding charge rates.



STEVE:  And it feels like, I mean, imagine.  I mean, it feels like alien technology.  It's a brick.  How can this brick, you know, it's like, I guess I'm just so used to a battery being goo, and folded sheets with stuff in it that, if you step on it, you know, it squirts out the end.  And here it's a brick.  It's like, how can this brick store energy?  Anyway, very exciting.



Greg, my tech support guy, said that he was getting a lot of questions from people about SpinRite and SSDs.  So he said, "Steve, I know that SpinRite fixes them, but I need some boilerplate that I can send."  And I've written a lot of the boilerplate that Greg sends.  It's wonderful.  He makes my life possible.  People tweet me with a question, and I say, "Please ask Greg.  He'll take care of you."  He answers email.  He's 100% reliable.  And that's why he told me last November he was celebrating his 20th anniversary working for GRC.  Great guy.  Anyway, he said, "Can I have some boilerplate about SpinRite and SSDs?"  And so I wrote something that I thought I would just read into the record of the podcast.  We've sort of talked around this a number of times, but I put it together sort of in one place sort of formally and liked the way it turned out.



So I wrote:  "With solid-state mass storage, as with electromagnetic spinning mass storage drives, manufacturers have brought their costs way down and made their products competitive, mostly by cramming too much data into too little space, and in doing so they have traded away some of the reliability margin from their products.  For the most part, today's spinning and solid-state drives work well.  But as SpinRite's owners learn, it's never fun to become a statistic.



"When flash drives and SSDs began to penetrate the market, we had no idea whether SpinRite's days might be numbered.  We knew that spinning drives would still be around for a long time, but it was certainly possible that SpinRite's recovery technology might have nothing to offer drives where nothing was spinning.  Then we started receiving reports, and not just a few, from SpinRite's existing users, who had used it to successfully recover their solid state drives.



"It turns out that, in order to cram too many bits into too small a space, the same error correction codes (ECC) that were developed for spinning drives were employed for solid-state drives.  The reason is the solid-state bits have been made so tiny that they are always on the verge of being unreadable, just like a spinning drive's bits.  So the same technologies GRC developed years ago for reading those unreadable bits still work on today's and tomorrow's solid-state mass storage technologies. And that shows no sign of changing.



"However, unlike spinning disks, the process of changing any of a solid-state drive's bits - writing to the drive - eversoslightly fatigues those changed bits.  They become just a tiny bit less reliable.  Over a long period of time, solid-state drives can actually wear out and develop bad bits, which is another of the things SpinRite can deal with.  But this 'write fatigue' means that SpinRite should only be used at Level 2, not Level 4 on solid state drives.  Level 2 places SpinRite into a 'read mostly' mode, where it will rapidly scan the solid-state drive, looking for any trouble, and will only switch into recovery and testing mode (Level 4) in the spots where trouble actually exists.  Though solid-state mass storage can develop new defects over time, the builtin controller, working in concert with SpinRite, is able to take bad spots out of service and keep the drives running well.



"So SpinRite is definitely useful for solid-state mass storage data recovery, repair, and maintenance; and it should be used at Level 2 on those drives."



PADRE:  Now, this is something that I've found whenever I've used SpinRite to speed up my SSDs because I know that there's a very, very small charge because every flash cell is a capacitor.  And that charge will weaken over time.  So if I'm reading from the drive, occasionally it will be so low that it has to go at it a couple of times.  It runs through its error-correcting routine to find out, was that on, or was that off?  Whereas, when I run Level 2 of SpinRite, it will refresh that.  So it'll look at it.  And if it is low enough, it will rewrite to make sure that the right bit is in that cell.



STEVE:  Essentially recharging the capacitors.



PADRE:  There we go.



STEVE:  Exactly.



PADRE:  Yeah.  It's funny because, just like your writer, I was wondering if SpinRite would go away once we all flipped over to flash.  But I've found that SpinRite is now even more of a vital tool in my toolbox whenever I go to fix PCs.



STEVE:  Yeah.  Well, and in fact that's what got me going with SpinRite 6.1 and a future v7 is, it's like, okay.  As long as it's not dying, I'm not, either.  So let's do a bunch of new things that people need.



PADRE:  Right, right.  Steve, I've got to say, I've read up about this exploit, and I'm really hoping that you can explain it to me because it sounds spectacular at the same time it sounds scary.  What is DROWN?



STEVE:  So what I love about this is that it qualifies as a super clever hack.  It caught people by surprise.  It's a consequence of the long tails that existing cryptographic protocols have and how, as we were talking at the top of the show, even something that you're no longer using anymore, and therefore think can't bite you, still can.  DROWN is a kind of an awkward acronym.  It's one of those that was reverse-engineered.  It's an acronym or an abbreviation for Decrypting RSA with Obsolete and Weakened eNcryption, D-R-O-W-N.  And they don't do the "E" of encryption, they do the "N" of encryption, in order to make DROWN, the abbreviation, work.



Okay.  So here's what these guys found.  First of all, anyone who wants more detailed information and to check if any server in question is vulnerable - for example, right now, Padre, check out VMware.com, one of everyone's favorite major VM suppliers.  VMware.com isn't looking so good.  TWiT.tv got fixed, apparently, so that's good.  But anyway, the site is DrownAttack.com.  That's the page these guys created as a placeholder for the attack.  You can find their detailed paper, 22 pages of crypto stuff and the demographics and some charts and things.  They also provide you with a form that you can fill in to check any server you like, to see what its current status is relative to the attack.  And right now on the video feed, Father, you just brought up the VMware.com.



PADRE:  That's VMware.  Uh-oh.



STEVE:  And they've got a lot of big names...



PADRE:  Ooh, that's not great.



STEVE:  ...that are vulnerable.  Yeah.



PADRE:  Ooh.



STEVE:  Not good.  Okay.  So here's what this is.  Really clever.  What these guys realized is a weakness in SSLv2, in the handshake of SSLv2, could be used to determine the private key of the server, and that could be used to decrypt state-of-the-art TLS communications.  So let me sort of walk us through it.  First of all - okay.  First of all, nobody needs to worry about this.  I mean, this is bad, but there's no known exploitation of this in the wild.  This is at this point a theoretical attack.  It's been demonstrated.  We know it works.  But people are already scrambling.  OpenSSL has been updated so that it is impossible with the latest update to, as of a couple weeks ago, to configure a server which uses OpenSSL for its security, to configure a server to support TLS and be vulnerable to the DROWN attack.  So these things are in the process of getting fixed.



Now, as I'll explain in a second, though, there are a huge number of servers with a version of OpenSSL more than one year old because there was a fix in OpenSSL that coincidentally fixed this problem, even though that wasn't its intent, a year ago.  Yet a quarter of the servers that are on the 'Net are using, are still using that, a year worth of obsolete OpenSSL, and that has a problem which allows the DROWN attack to function much more quickly.



So, okay, first of all, what is it?  The way it works is an attacker would passively record about a thousand connections between a client and a server.  And this is significant because it means that any data recorded in the past - and we know that we've wondered if the NSA isn't using their massive amount of storage in Nevada for, like, just recording everything.  Even if they can't decrypt it, they're sucking it all in on the off chance that, in the future, they will be able to.  Well, this is an attack that is exactly of that kind, where, first of all, you need to record about a thousand connections between a client and the server that is under attack.  Then the weakness is that, even though the client is not using SSLv2, many servers have not explicitly forbidden it.



For example, it may be way down the list of preferred ciphers so that the export-grade encryption, that's another requirement is that they still allow the reduced-strength, export-grade, 40- or 56-bit encryption.  And again, which they may have way down at the bottom of their list.  But if it's not gone, if it's still there, then the operator of the server is probably thinking, well, all contemporary clients are going to be using TLS.  Nobody's using SSL anymore.  But, you know, we don't want to deny service to anybody.  So we'll leave SSLv2 enabled.  And this is assuming they're even thinking about it at all.  If their version of OpenSSL is a year old, they probably aren't thinking about it at all.  But SSLv2 is there.  Export-grade, reduced-strength ciphers are available.



So what can happen is it is possible for the attacker to perform a large series of SSLv2 connection handshakes.  It is in the connection handshake that the endpoints exchange their nonces, their list of supported ciphers.  In this case the attacker would say, I want to use SSLv2, and I only understand RC4 40-bit export-grade security.  And so the server would sort of shrug and go, wow, okay, you must be old, but fine.  We have that.  The problem is that, with enough of these SSLv2 handshakes, this uses the same concept I mentioned before of an oracle.  This turns the server into an oracle, meaning that you're able to essentially ask it for some secrets, or you're able to ask it in a way that causes it to reveal a secret.



And in this case, using a crazy amount of sophisticated math, the use of a high number of these SSLv2 handshakes at the lower encryption strength level allows the attacker to gain information to allow them to decrypt a TLS connection.  They don't get the private key, so that's important.  This is a session attack.  So the private key is not compromised.  But they are able to get enough information to decrypt the contents of one of the previously recorded sessions.



So in terms of severity, what these guys did, they found two attacks.  They have what's know, what they call the "slow attack," which was the first thing that they developed, before they realized there a problem in older versions of OpenSSL that would allow them to speed it up a lot.



So the slower, more general attack, as they wrote, exploits a combination of unnoticed protocol flaws in the v2 of SSL, which allows them to create a stronger version of a well-known - it's called the Bleichenbacher attack, which has been known to cryptographers for a long time.  It is an oracle-based attack that is a way of getting servers to disclose information.  Yet there are countermeasures in all modern servers, specifically to thwart this.  Well, it turns out that the countermeasures can be leveraged to create a stronger attack.  So in the slow version of the attack they wrote that:  "A typical scenario requires the attacker to observe a thousand TLS handshakes, then initiate 40,000 SSLv2 connections and perform 2^50 offline work," which is a lot of work, which would then allow them to decrypt a 2,048-bit RSA-encrypted TLS ciphertext.  So that's why I say, okay, theoretical, kind of.



PADRE:  Do they have to do anything different with those 40,000 individual SSLv2 connections?  Are they incrementing something?



STEVE:  What they're doing is they are - it's a dynamic attack.  So they are deliberately changing the behavior of what they ask for based on what the results are.  So it is an adaptive attack.



PADRE:  Okay.  Got it, got it.



STEVE:  Essentially.  Okay.  So then they said:  "An implementation of the attack [that they created] can decrypt a TLS 1.2 handshake" - so like a state-of-the-art, the best crypto we've got - "using 2,048bit RSA in under eight hours using Amazon's EC2 [the elastic cloud computing] at a cost of $440."  Which is regarded as feasible, although it takes eight hours of computing.  That's that 2^50 offline work, after collecting all of this data.  And in their Internetwide scans they found 33% of all HTTPS servers are vulnerable to this protocollevel attack due to widespread key and certificate reuse.



Okay, now, that the good news in terms of this attack being slow and difficult.  They also uncovered on OpenSSL older than a year a fast version.  That version allows essentially real-time decryption.  They were able to, as quickly as they collected data and processed it on a single-core laptop, they were able to decrypt the connection, essentially in real-time, meaning that in a minute before the SSL protocol expired, before the TLS handshake gave up, they were able to get the connection decrypted, making a man-in-the-middle attack, a real-time man-in-the-middle attack, feasible.  And 26% of HTTPS servers are still vulnerable to this attack now, one year after OpenSSL was upgraded, not with this in mind, to fix something else.  But it also prevented this fast version of the attack.



PADRE:  And that's with the minimal amount of offline work required.



STEVE:  Yeah.



PADRE:  Basically no offline work required.



STEVE:  Exactly.  You could be in real-time, it is so much faster using those older versions, where one quarter of the systems are vulnerable.  Now, here's the other cool thing about this, and that is that, say that your HTTPS server was not using SSLv2, that is, you were properly configuring this, and when it got deprecated, you shut it down.  But you also had email.  And email is like, oh, it's email, who cares about email?  But because certificates are a pain to get, and they're not free...



PADRE:  We reuse them.



STEVE:  ...you reused the same certificate to protect your email server, which uses v2, because who cares about email really?  And you use the same certificate.  It turns out that this is completely vulnerable.  This attack works on different servers using the same certificate.  So even if you've got your web server bolted down, you're now using only TLS protocol, the state-of-the-art best protocol we've got, if you ever, anywhere - and not only email, any SSL.  So you might have some funky who knows what, you know, particular corporate, you know, you might have a VPN where you've reused that same certificate, you know, a TLS VPN that also runs SSL so that it's able to operate with older clients.  Any reuse of the same certificate on any other server allows this attack.



So if you cannot make sure that you are not offering the main cert on any other server that allows SSLv2 connections, you absolutely want to rekey one of the certificates, probably just get, you know, rekey the server you really care about that is not running any older protocols.  And that way the older protocol-based servers cannot be used to acquire data on the connections that the state-of-the-art protocol server is using, and then you'd be safe.  But I just love this.  This is just such, as I said, a cool hack.  The idea that you could use a deprecated protocol, still lingering because, okay, clients aren't asking for it, so it's not going to hurt us because all clients are going to ask for newer protocols.  And here's the reason why you don't want the old ones.



And of course politically the academics are saying, "And see?  This is what happens when the government forces us to reduce the strength of crypto."  Back in the '90s, in order to export this "munition," we had to reduce the strength to 40 bits.  That's biting us decades later and reducing the strength of crypto.  Yet another perfect example of why it's never a good idea to deliberately use weakened crypto.  And as Matthew said in his blog post earlier, it's hard enough, maybe dauntingly hard, to get crypto right.  The last thing you want to do is to deliberately make it less right.



PADRE:  And that's why I have a lot of my Interop and Black Hat friends who they're spending a lot of their time looking for deprecated modules.  They spend a lot of their time looking at OPSEC, saying these servers have been up a really, really long time.  And you may have patched them, but you probably don't know what's behind every port.  I mean, very few system administrators actually go to the trouble of making sure that everything has been deactivated after they've patched.  And now it's time for them to do that.  And that's - I'm with you.  This is a cute hack.  This is a unique hack.



STEVE:  Oh, it's wonderful.



PADRE:  It's not just you hammering on a system.  This is you counting on a part of human nature which is, once I've installed the patch, I assume everything's okay.



STEVE:  Yeah.  Or you might have some server in the closet that you don't care about; but just because certificates are not free, you use the same certificate on multiple servers, and you don't think that your IoT server is going to be a problem.  But, uh, whoops.



PADRE:  And once I compromise that certificate, everything is fair game.



STEVE:  Yup.



PADRE:  Steve, when is the security bamboozle ever going to stop?



STEVE:  No.  We're at Episode 553 and, what, in our 11th year of the podcast.  I can see this thing another 10 years downstream.



PADRE:  Well, folks, you have used up 2.5 hours listening to...



STEVE:  We broke a record.



PADRE:  A record.



STEVE:  I knew it was going to happen because we had a lot to talk about, and you and I tend to engage.  So it's been great, Padre.  It's really, really good to have you on the podcast.



PADRE:  We could have spent 2.5 hours just talking about those first two stories.  I mean, those are very, very juicy stories.  But I'm glad we got to DROWN because, after you sent me that link, I was just looking at every site that I've ever been part of, just making sure that they're patched.  And I've had to send out quite a few emails saying, "Hey, so, um, listen.  If you go to the site, check your security.  You've got a couple of servers that need some work."



STEVE:  Yup.



PADRE:  Of course Steve Gibson is the man behind GRC.com, where you'll find tools like my personal favorite, SpinRite, as well as ShieldsUP! and, soon, I know what's going to happen when I ask this, but the savior of our password race, SQRL.



STEVE:  Yup.



PADRE:  Should I ask about that?



STEVE:  Well, yeah.  Everybody knows I am at work on it.  I am in the process of updating the client to the full final spec.  I wrote the spec in advance of getting the client caught up because we've got other people who are implementing SQRL clients, too.  Jeff Arthur, who's our friend over in the U.K., he's already got his iOS client ready, but he's just waiting for me to get my client going because this changes an aspect of the identity so that the clients will be able to remember four retired keys for an identity.  I'd always had it able to remember THE retired key, that is, the most recently retired key.  In theory, you should never need to retire a key.  But in practice we know, as they say, stuff happens.



And so we needed to have a provision, and did from the beginning, where if somehow your phone got hacked, or you suspected it was, or the government had control of it overnight, and for whatever reason you could no longer trust your SQRL identity's key, it was always possible to rekey.  SQRL would then contain both the old and the new simultaneously.  So then all you do is go visit sites that know you under the old key, and they update autonomously.  You have to do nothing.  You just have to go there, and it automatically updates their knowledge to your new key.



Well, the concern was, okay, but what about a site I don't visit for a long time, I forget about it, and I rekey my rekey?  And so it's like, okay.  For a while I fought it, and I said, you know, come on.  And then finally I gave up.  And so I decided, okay.  Rekeying should be something most people never do, but it's feasible.  And I don't want people to have to, like, keep a log or a diary of all the sites that know them.  So I decided, okay, we'll let a SQRL identity carry the four previous retired obsolete keys.  And so when you go to a site that doesn't recognize you, but it should, it'll be able to check back four times, through four previous keyings, in order to see if it can find you.  If it does, it immediately knows, it absolutely knows who you are because all of this is secure and can't be, as far as anyone knows, messed with.  It'll then essentially ratchet to your most recently issued identity and be kept synchronized.



Anyway, I'm in the process right now of updating my client to support the four previous keys, rather than the one previous key.  And at that point, as far as anyone knows, it's done.  I have some stuff to clean up in the client, but the protocol, the spec is in place.  We've got a bunch of people working on Android versions.  We've got one already for iOS.  So we're getting up to speed.



PADRE:  If you need any beta testers, you've got a chatroom full of people who would willingly demonstrate their devices.



STEVE:  Well, and we do - I've not published it, but GRC.com/sqrl/demo.htm is the server that is producing, I mean, it's an operating SQRL demo server, which those of us who are testing the stuff now are using.  So, in fact, that's what I had Leo log onto many months ago.  So we're close.



PADRE:  Well, Steve, I hope that Leo goes on plenty of vacations this year because I always have so much fun.  Whenever he gets to go away, I get to sit in this chair; I get to sit at this table and speak with you.  And it's the best time ever.  So thank you very much.  It's been an honor and a privilege for you to dump your brain into mine.  I feel smarter, and I think the Internet feels smarter, too.



STEVE:  Well, you've helped create another great podcast, Padre.  Thanks very much.



PADRE:  Thank you.



STEVE:  Next time.



PADRE:  Don't forget that you can find Security Now! here on the TWiT.tv network.  It's recorded live every Tuesday at 1:30 p.m. Pacific time.  You can also go to GRC.com for audio versions of the podcast, as well as wherever fine podcasts are aggregated.  Again, Steve will be here with Leo Laporte next week.  Until then, I'm Father Robert Ballecer, the Digital Jesuit, just reminding you that, in a world of exploits, we all need Security Now!.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#553

DATE:		March 29, 2016

TITLE:		Too Much News

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-553.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss a VERY interesting week of news:  The FBI dropping its case against Apple, claiming not to need them any longer; a distressing possible smartphone encryption law for California; TrueCrypt's origins; a Certificate Authority horror; more hospitals hit with ransomware; a bad flaw in the SMB protocol; finally some good news on the IoT front; GRC's new Never10 freeware; and a discussion of the monster PC I just built.



SHOW TEASE:  It's time for Security Now!.  We're going to talk security big-time.  Lots of news this week.  And we'll talk about Steve's new utility, Never10 - Never10 - and his brand new PC build, which is mindboggling.  I asked him how much it cost.  He said, "I don't know, I didn't bother to add it up."  I wouldn't, if I were you, Steve.  It's all next on Security Now!. 



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 553, recorded Tuesday, March 29th, 2016:  Too Much News.



It's time for Security Now!, the show where we cover your security and privacy online with the Explainer in Chief, Mr. Steve Gibson from GRC.com.  And a happy day to you, Steve.  I'm sorry I wasn't here last week, but I hear you and Father Robert Ballecer had a wonderful time together.



STEVE GIBSON:  We had a good time, and we broke the all-time podcast length record last week.  We went over 2.5 hours.  You and I have been a little bit on the high side of two hours most recently, and that's about where I want to be.  Elaine likes it because I pay her by the podcast minute.  So back when we were doing 20-minute podcasts, Elaine was very affordable.  Now we're at 2.5 hours, and it's like, okay, well, I am occupying a lot more of her week.  But I'm glad to have the transcripts, so it's a win.  Anyway, last week we talked about the DROWN attack.  And I thought about doing a Q&A except that there's no way, with everything that is going on this week, that there's time to cover a Q&A and all the news.  So this is just one of our too-much-news podcasts.



Of course, big in the news is the FBI dropping its suit against Apple, saying that they don't need them.  There's an interesting and distressing Assembly Bill going through the California State Assembly.  We've got some news just this morning about apparently what very much looks like the origins of TrueCrypt.  



LEO:  Good.  I was hoping you were going to talk about that one.  That's good, yeah.



STEVE:  Yeah.  A blood-chilling flaw in a Certificate Authority has been found.  Two more hospitals hit with ransomware.



LEO:  Oh, no.



STEVE:  And unknown problem with the Samba protocol.  Some good news on the IoT front, finally.  And of course I introduced, late last week, a new piece of freeware that I will talk briefly about, just because a lot of people have been interested.  I want to also not forget to thank Paul and Mary Jo.  They both immediately covered it on their respective outlets, so I really appreciated that.



And then I built, as I've referred to it several times over the last couple months, I built a monster PC to replace the one I'm using.  The one I'm using is getting a little creaky.  It is a 32-bit XP, and so just the RAM ceiling is a problem.  So I needed to go to 64 bits.  I wanted to go to Windows 7.  But normally I would wait except that, I mean, the system I've got is fine.  It's been running for years.  In fact, just until recently it had been on SP2 of XP because it never kind of liked SP3.  But I had to bite the bullet a month ago and move my XP up to SP3 in order to get it to understand SHA-256 certificates.  So now I'm on SP3 of XP, which is a brand new thing.



So obviously I'm lagging a little bit behind.  But I was worried that we were going to lose compatibility with future hardware for Windows 7.  And I don't - I think I want to stay with Windows 7 for the foreseeable future.  And, I mean, you know, foreseeable future for me means a 10- to 15-year horizon.  So I needed to get hardware now that Windows 7 worked on because Microsoft has said that they're not guaranteeing that they will, I mean, and it's understandable, Windows 7 is getting old.  Why should Windows 7 necessarily run with hardware three or four generations from now?



So that was the impetus to get the state-of-the-art hardware today to use for my replacement machine.  The point is that lots of people have wanted more details than I've provided.  So at the end of the podcast I've got - the show notes also broke a record this week, 1MB show notes, because I have four large high-resolution photos inside the case of my machine at the end of the show notes, for anyone who wants to see.  And we'll do it at the end of the podcast so that people have no interest whatsoever can hit stop and go on to the next TWiT podcast, rather than listening to me talk about the machine I built.  So lots to talk about.



LEO:  Yeah, no kidding.  All right.  Let's dig into it here, Steve.



STEVE:  So I'm sure you must have talked about it on MacBreak Weekly, and unfortunately I wasn't able to listen to the beginning of that previous podcast.  I was busy running around and getting this all put together. But the big news is that the U.S. government, in a filing, dropped its case against Apple.  And so the Picture of the Week on the first page of the show notes is a snapshot of the very brief two short sentences that were filed, that reads:  "Applicant United States of America, by and through its counsel of record, the United States Attorney for the Central District of California, hereby files this status report called for by the Court's order issued on March 21, 2016."  And then it ends with "The government has now successfully accessed the data stored on Farook's iPhone and therefore no longer requires the assistance from Apple Inc. mandated by Court's Order Compelling Apple Inc. to Assist Agents in Search dated February 16, 2016."



Now, what's interesting about this is that there's a lot that isn't being said because the FBI has no obligation to inform us of, quote, "ongoing investigation" is always the way they get out of - oh, you know, we don't comment on ongoing investigations.  So they're able to just say by policy they're not going to say anything more.  But what was really interesting is that the coverage of this is, some of it, and some of the best of it, is questioning what they actually got.  And the best piece of it was a video on "The Today Show" this morning where Pete Williams, who's the NBC reporter, and a very careful, meticulous reporter...



LEO:  He's their DoJ guy?  He was their Pentagon guy.



STEVE:  Yes.  Pete Williams is also the main legal guy they go to whenever the Supreme Court does any sort of a ruling.  You know, they bring him out to explain what this all means.  So he stated that officials say that the data they extracted from the phone is encrypted and will take some time to decode.



LEO:  Oh, that's interesting.



STEVE:  It really is interesting.  And they haven't, the FBI has not said they have decrypted it.  They have said they have extracted the phone's data.  Well, okay.  That's not hard.  In fact, we talked about it last week or the week before.  One of the presumptions the guy who...



LEO:  Do you think he got it right, or he just - I mean, is that credible?



STEVE:  See, that's just it.  I trust Pete.  And if the government said - if he says that government officials told him it is still encrypted, then, I mean, that's the best reporting I've seen.



LEO:  Yes, yeah, yeah.



STEVE:  And he stated it in public on "The Today Show" and has been quoted.  I had a link to a little...



LEO:  See, that isn't what they - see, but the reason I question it is that isn't what they were asking Apple to do.  Because what they were wanting Apple to do was make it possible for them to decrypt the data.



STEVE:  To unlock the phone.



LEO:  Which would, in the process of unlocking it, decrypt the data. 



STEVE:  Correct.  



LEO:  So I don't buy it because, if they really only had encrypted data, A, we know it's going to be impossible for them to decrypt it.



STEVE:  Correct.



LEO:  And, B, it doesn't satisfy their need, their demand, in which case they wouldn't have had to withdraw - I think they only would have withdrawn this because they had to, because the law says the All Writs can't be used if you've accomplished the goal.  But they didn't accomplish the goal.  So I'm going to call BS on the statement.  Whether Peter misstated, or whether he was told something incorrect, that can't be right.



STEVE:  It can be right, if the alternative theory is that the government knew they had a weak case.  They were bringing some witnesses into the hearing.  Readers of this believe that the fact that the FBI was bringing witnesses in meant that they knew they had a weak case.  And they may have chosen not to push this and lose on the All Writs Act issue and instead say, oh, don't worry about it, we've got the problem solved. 



LEO:  Yeah, but, no, they're not going to lie in that affidavit to the court.  I mean, I think they would be very unlikely to lie and say we no longer need Apple's help, when in fact they don't have the data.  They're not going to pull it, they can't just pull it because they feel like, oh, we're going to lose this case, if they say, as they did, we got it.



STEVE:  "The government has now successfully accessed the data stored on Farook's iPhone."  So that doesn't say we've decrypted it.  It says we've accessed it.  So anyway, I guess my point is we don't know.  And I'm happy with not knowing because there's no way we can know.  But I also, I've been following Pete for a long time, and he made it very clear that this data is still encrypted, and they have yet to decrypt it.  So I don't know...



LEO:  Is there any chance of them decrypting the data?



STEVE:  Okay.  So of course we know about...



LEO:  Unless Farook used Monkey123 as a - but there is no passcode; right?



STEVE:  We know about Cellebrite and the relationship they've had with those guys.  We assume that McAfee has not provided any useful input into this process.  I mean, and there are some theories.  One theory of this, and Jonathan Zdziarski has been proposing this, and that is they could clone the nonvolatile memory to essentially a backing store, you know, back it up; then do their 10 guesses and see whether they're able to get it right.  If they don't, then in this theory they're able to restore from their copy back to the phone and try 10 more.  That doesn't work, restore again, try 10 more.



Now, the problem is, and the real issue is, we don't have schematics of the iPhone.  We don't know precisely where things are.  So, for example, is the symmetric key, which we know is necessary to apply to the symmetric crypto, the hardware crypto that encrypts and decrypts the data to and from the memory, we don't know exactly where it is.  We assume it's in the Secure Enclave, which is part of the processor.  And because it's been, remember, there's been some pie-in-the-sky talk about etching the top off with acid and then using lasers to read the data out and other really low probability approaches to succeed.



So the problem is, you know, I like to know what I'm talking about, and in this instance all we can do is report on the information that's out there.  And my feeling is we don't know yet for sure that they've decrypted this, given that a reporter with good reputation has said he was told it is not decrypted.  And we haven't ever - nowhere else have we had it definitively indicated that it was decrypted.  I would say we don't know.



And of course then the question is, even if they did decrypt it, is there anything useful on it?  And there's been a lot of back-and-forth in the industry, of course, about all this.  And my sense is Apple knows, there's nothing that Apple does not know about their phone.  And they know what the FBI was asking.  Absent any flaws - and of course Apple keeps trying to keep their phone from being jailbreakable, yet it keeps getting jailbroken.  So there are flaws that Apple doesn't have control over.



But my sense is Apple is going to continue their forward march to make this thing increasingly locked down so that they would not be able, for example, to respond in the same fashion that the FBI just asked them to respond to at some point in the future, that they will take additional measures, like for example the phone won't update unless you unlock it.  If they did that, then that forecloses this background update loophole that allows them, as you pointed out a couple weeks ago, Leo, to install any kind of update that they might want to that would alter the phone's behavior and make it possible.  So anyway, interesting additional chapter with lots of unknowns in this Apple versus FBI case.



LEO:  I'm really curious if the FBI will reveal to Apple, we may never know if they do or don't, the exploit.  Because of course what now the FBI has done is let America know, well, there's a way in.  There's a flaw.  And, I mean, given the FBI's stance so far, I doubt, I mean, I'm sure they would prefer to keep that flaw secret so they could continue to use it.



STEVE:  Right.



LEO:  I can't - I feel like we just haven't heard the end of the government's demands for backdoors.  I just...



STEVE:  Oh, Leo, you could not be more correct.  You are absolutely right.  And in fact that takes me into the second topic, which is a recently updated California Assembly Bill, AB-1681.  There was on the books a law which already required smartphones manufactured on or after July 1 of 2015, so that's last summer, to include a technological solution at the time of the sale which could consist of hardware, software, or both, that once initiated and successfully communicated to the smartphone could render it inoperable.  So that was like a remote shutdown which I guess, I mean, if this law is on the books - do you know about that?  There's like a remote kill for smartphones?



LEO:  Yeah, that's been around for a while, the kill switch.



STEVE:  Right, right, that's what I thought.  And so this legislation updates that existing law.



LEO:  That law's been in effect almost a year, I guess, since last year.



STEVE:  Right, right.  Okay.  So what this does is this law is being updated.  It was introduced on January 20th, then amended on March 8th and corrected on the 18th, so just recently.  And so this has been added to Section 22762 of the Business and Professions Code relating to smartphones.  And so in the Executive Summary they say of this amendment:  "This bill would require a smartphone that is manufactured on or after January 1, 2017, and sold in California, to be capable of being decrypted and unlocked by its manufacturer or its operating system provider.  The bill would, except as provided, subject a seller or lessor" - the language is a little mixed up here because I copied it directly out of - "seller or lessor would subject a manufacturer or operating system provider that knowingly failed to comply with that requirement to a civil penalty of $2,500 for each smartphone sold or leased.



"The bill would prohibit a seller or lessor manufacturer or operating system provider who has paid this civil penalty from passing any portion of the penalty on to purchasers of smartphones.  The bill would authorize only the Attorney General or a district attorney to bring a civil suit to enforce these provisions.  This bill would make findings and declarations related to smartphones and criminal activity."  Well, it says "and criminal activity."



Anyway, that's the summary.  So this is what we've been expecting.  I don't know, I mean, this isn't signed into law yet.  I haven't looked at where this is or what it means.  Also, January 1st of 2017 is very soon.  If this happened at all, I wouldn't be at all surprised to see it pushed back.  But this is the kind of legislation that we're expecting to see.  The Burr-Feinstein bill still hasn't shown up in the Senate, although it is being passed around and talked about.  But I've yet seen no text of it.



And from what little I've gathered, reading every story that I could find, it doesn't seem very sharp.  It sort of sounds a little bit like it's sort of blunt and leaves enough wiggle room that it's not clear how people would respond.  But this California law, if it ever happened, I mean, is ultimately what I've been predicting, unfortunately, and that is that it would just simply be a requirement that smartphones be able to be decrypted.



LEO:  Yeah, you know, I feel like the California State Legislature is not exactly - kind of paper tiger.  Not exactly - I'd be more worried about a federal law.  But we'll see.  I mean...



STEVE:  Yeah.  And I think we're probably going to get one. 



LEO:  I think what would happen is Apple would appeal it, would tie it up in the courts.  You know, it's not going to - it's probably illegal.



STEVE:  And again, it could end up getting tied into First Amendment rights.



LEO:  Well, and CALEA specifically says that the government cannot compel manufacturers of telecommunications devices to do that.  So I don't know.



STEVE:  Right.



LEO:  I think this is probably nothing to worry about, but they'll keep trying.



STEVE:  Yup.  So Matt Green, our Johns Hopkins cryptographer, who of course has been very interested in TrueCrypt throughout its life, he was sort of the honcho of the audit, both phases of the audit.  And it's been he whom we have quoted about his feelings about TrueCrypt.  And of course we know that the original 7.1a code, which I'm still hosting as an archive on GRC.com, that it passed all of the audits that it's been subjected to so far.  He tweeted a link to a really interesting story that I commend all of our listeners to.



In fact, I think I made it a bit.ly link for the show, bit.ly/sn-553.  I think if anyone puts bit.ly/sn-553 into their browser, I think that takes them here because I wanted to make it easy for people to find this article.  It is really interesting.



What Matthew Green tweeted was:  "TrueCrypt was originally written by a multimillionaire international arms dealer named Paul Le Roux."   And I'm not familiar with this site.  It's Mastermind.Atavist.com.



LEO:  This actually looks pretty good.  This is Atavist magazine.  It looks like a really interesting story.



STEVE:  Oh, Leo.



LEO:  Although it reminds me a little bit of the uncovering of Satoshi Nakamoto by Newsweek.  You know, I don't know.



STEVE:  Well, except that...



LEO:  Trust Green, for sure.



STEVE:  I trust Green.  And what I wrote in my own notes here is that it comports perfectly with every little scrap of tidbit facts that we do have about TrueCrypt.  I remember ScramDisk and, like, its early origins.  I grabbed two paragraphs from this.  Oh, also, after that tweet, Matthew tweeted:  "Paul Le Roux wrote E4M, which TrueCrypt was based on.  It's unclear if he funded TrueCrypt itself.  He was arrested in 2012 or '13."  And then his next tweet said:  "Coincidentally, TrueCrypt development ceased around the same time Le Roux was arrested."



So from that story I grabbed two paragraphs.  The first is:  "Confident in the connection between the two Le Rouxs, I [says the reporter] burrowed into the world of encryption.  Le Roux, it seemed, had started building E4M - [which is] Encryption for the Masses - in 1997.  It followed that a talented young man so absorbed with the challenges of code, one who had gotten himself into trouble with law enforcement in the past, would tackle a problem as technically knotty as digital privacy."  And we should mention that earlier in the story we learned that he'd been coding since high school.  He immediately developed an affinity for computers and coding, and that's all he ever did, becoming moderately antisocial and getting in trouble with the law early on, too.



The story, the little bit that I snipped out, continues:  "Le Roux's software allowed users to encrypt their entire hard drives and to conceal the existence of encrypted files so that prying eyes wouldn't even know they were there.  After two years of development, he released it to the world with a post to the alt.security.scramdisk board.  According to his own account, the software was written from scratch, and 'thousands of hours went into its development and testing.'



"In 2004, a group of anonymous developers did exactly what Hafner had feared."  There's a reference here that we don't have a context to.  Hafner was the president of a company that was commercializing a full-disk encryption product that was based on some of the TrueCrypt work and was open source.  And so what Hafner had feared:  "They released a new and powerful, free encryption program called TrueCrypt, built on the code for E4M.  TrueCrypt is based on, and might be considered a sequel to, E4M, a release announcement stated.  The program combined security and convenience, giving users the ability to strongly encrypt files or entire disk drives while continuing to work with those files as they would a regular file on their computer."



So again, it's from Matt Green, stating as a fact that this is where it came from.  And if you read through this, I mean, it holds together well.  And all of those little bits around the middle of the story, about ScramDisk and DriveCrypt and that company that's mentioned and Hafner, I mean, all of that I remember myself from my own experience at the time.



LEO:  I wonder if Green changed his point of view, though, because he's quoted in the story as saying he doesn't know.  He says it could have been Paul Le Roux writing under an assumed name, or it could have been someone completely different.



STEVE:  Oh, you mean Matthew is quoted in the story.



LEO:  Yeah.



STEVE:  Oh, okay.



LEO:  So I wonder if he changed his point of view.  I mean, does his tweet say, oh, it must have been him?  Or, I mean, it's really - it's a great story.  It'll probably be a movie at some point.  But in the story they quote him as saying we just, we won't, we couldn't, we can't know.



STEVE:  Yeah, that's odd because his tweet reads exactly this:  "TrueCrypt was originally written by a multimillionaire international arms dealer named Paul Le Roux."  So he tweeted it as...



LEO:  Maybe he changed his mind. 



STEVE:  ...a fact, yeah.  So, you know, a little more interesting information.  I heard you referring someone over the weekend to VeraCrypt; and I agree, that is the one that people should go to.  People are still asking, you know, should we use TrueCrypt, or should we use, you know, or what?  And I don't think VeraCrypt yet supports the GPT and the EFI-style booting.  I don't think anything does yet.  For what it's worth, I'm planning to just use BitLocker because - on my Win7 laptop because all I want is protection against the probability or the possibility that my laptop gets out of my control.  And I just want it - I want it well encrypted.  And I just want it to work.



LEO:  So what I told that person is maybe they could use the built-in ATA lock, the hard drive lock in the BIOS.  Is that effective?



STEVE:  It is very effective, but it can...



LEO:  Yeah, I seem to remember you saying that.



STEVE:  But it can be bypassed by, like, law enforcement.



LEO:  Okay.  All right.



STEVE:  Because it contains the key, which is unlocked with a password.



LEO:  Got it.



STEVE:  So it'll beat any bad guys, but there have been instances where those drives have been given to drive manufacturers, and they've unlocked them for law enforcement.



LEO:  Probably as good as BitLocker.  You know, the other day I installed Ubuntu on a machine, and it has full-disk encryption, which you can turn as part of the install, and you can't get into the disk without entering a password.  This is, I believe, it's on a GPT device.  It's on my Dell.  And then it also has, which I love, additional encryption of the home folder, which might be, for some people, that might be sufficient.  Although there would be leakage with the swap files and stuff.  But that's built into Linux.  We've got to get you off this Windows crap.  I just don't understand why you continue to use this.  I know because of, you know, your SpinRite and everything.



STEVE:  Well, I'm still a developer.



LEO:  But you don't develop SpinRite in Windows, do you?  It's a DOS program.  You're using MASM.



STEVE:  But MASM runs on Windows.



LEO:  Oh, you're using Brief and MASM in Windows.



STEVE:  Yeah, well, MASM is a Windows assembler.



LEO:  Oh, okay.



STEVE:  So, I mean, it runs on DOS, but...



LEO:  Bet you could find a good assembler on OpenBSD, for instance.



STEVE:  But all of SpinRite is in MASM.



LEO:  Yeah.  Get the macros over, and libraries.



STEVE:  I mean, I would agree.  If at some point I'm doing a rewrite, then it's probably time.  On the other hand, I just don't have any problem with Windows.  I use 7.  Well, I use XP right now.  I'm not having a problem.  I'm, like, the only person not having a problem because I'm staying with an old one that works just fine.



LEO:  Of dubious security, but that's okay.  I'm sure you'll lock it down.  I mean, you don't care.  As long as, I mean, it's in your house.  As long as somebody's not breaking into your house, you don't really care.



STEVE:  And there's nothing here.  I tweeted that I was at DMV on Friday because I had to renew my license.  I ran out of automatic renewals, and the photo there doesn't look anything like me anymore.  There's been a lot of changes in the last...



LEO:  Did you have hair in the old one?



STEVE:  Oh, it was black.  I had a big black pornstache and, you know, black hair.  And I've had people do a double-take because, like, sometimes they'll need to see my ID for something, like renting a car.  Oh, in fact, that's what it was the other day because I was renting - I had my car in for service, and so I rented one for the day that the dealer makes available.  And the guy, like, looked at the ID, then looked at me again, then looked at the ID again, looked at me.  And I guess he thought, wow, that's a lot of change.



Anyway, the point is that they wanted my right thumbprint, the DMV.  The California DMV wants my right thumbprint.  And so I tweeted that it's nice that I'm a lefty, and so that's the thumb that I use to unlock my various devices.  And then someone said, "Well, now everybody knows."  And it's like, yeah.  If anybody wants my phone, I'll unlock it for them.  There's nothing there except when Jenny and I are going to rendezvous to see a movie.  So my life, there's nothing that I'm worried about needing to protect.  But I certainly want to stand up for people who want privacy.



So get this, Leo.  Oh, my lord.  This is just incredible.  We've talked about this CA for a while.  It's a well-known certificate authority, StartSSL.  And one of the things...



LEO:  Oh, yeah.  Oh, yeah.



STEVE:  ...they provided was free certificates that had a one-year expiration.  And so it was a little annoying that they were one year, but that kind of like kept bringing you back to them, which I guess must have been their hook because they were hoping maybe you'd buy one for three years rather than use the free one for one year.  But widely supported.  Now, in the back of my mind I have a feeling that I remember mentioning that they were being maybe deprecated from some root stores because they just weren't - they'd done something that caused them not to be trusted.



But what just was in the news was unbelievable.  And that is that the method that they use to prove domain ownership turns out to have been trivial to hack, so much so that until last week, anybody could get a certificate from them for any domain they chose.  So, okay.  The good news is these guys are probably gone, at least from the free CA standpoint, because Let's Encrypt has taken off, and it gives you, I mean, just solves this problem.  But the idea is that a certificate authority needs the person requesting a certificate to prove that they control the domain name that they want a cert for.



And so the typical way that's done is the CA will give you a nonce, a random blob file, with the instructions, put this on the root of the server on your domain and let us know when you have.  Then they ask for that file on the root of that domain.  And if it's there, it demonstrates you have the ability to put files on a server on that domain, thus presumably control of the domain.  The alternative is, and many certificate authorities give you this option, is to send email to one of the standard email addresses - postmaster, hostmaster, or webmaster - at the domain dotcom.



So StartSSL offers that option.  If you don't want to put a file on your root, you can select with the web interface which one of those three email addresses - postmaster, hostmaster, or webmaster - at fill-in-the-blank domain dotcom you want to receive email.  And your reception of email at one of those well-known addresses at that domain, again, is supposed to be proof of domain ownership.



It's even hard for me to say this, it's so unbelievable.  The web form that they use sends the email address which the user has chosen as a parameter when you submit it.  Which means you can ask for a certificate for www.google.com.  Now, they're a bad example because they've pinned all their certificates, and alarm bells go off all over the world if you actually do use a fraudulent Google certificate.  But somebody else's certificate, www.ibm.com.  And so you fill that in.  And when you are given the web form to validate ownership, it will have - you choose postmaster@ibm.com, hostmaster@ibm.com, or webmaster@ibm.com.



But the email address it's going to send the validation to is actually in the form and is sent as a parameter.  Which means you can simply change it to Hotmail.com so the verification of the ownership of IBM.com comes to your hotmail address, and you go, oh, thank you very much, click the link to prove ownership.  And then StartSSL, this "certificate authority," in quotes, which is trusted by all major browsers, at least until recently - maybe even now, I'm not sure - sends you a certificate, a happy www.ibm.com certificate.  Unbelievable.



And as I'm looking at this, I'm just thinking, okay, you know, we have a fundamentally broken public key infrastructure in the industry at the moment.  The idea that there is no certification, no validation, no verification of the methodology that these hundreds of equally trusted certificate authorities have in the world is mindboggling.  And our browsers trust them all.  Wow.



LEO:  Wow is right.  So, wow.  Wow.



STEVE:  So it was just a free fraudulent certificate mint that you could cause these guys to issue a certificate for any domain you wanted, just by jiggling the web form that they sent you so that it sent back an email with a different domain than they preloaded in the web page that you were then choosing which email address to send to.  You couldn't choose the @domain.com.  You could just choose the prefix account name.  Except that it was all then sent back to the server and accepted, and so you could change that if you edited the HTML of the page they sent.  So it was just trivial to bypass that, quote, "protection," unquote.  Amazing.



So last week we have another hospital hit with ransomware.  This one is called "Locky," which I hadn't heard before, L-O-C-K-Y.  So this is a month after our coverage four weeks ago of the Hollywood Presbyterian Medical Center in L.A., which was crippled by crypto ransomware.  And that was the - I'm drawing a blank.  I didn't write it down.  That was the one we've seen often that malicious adware has been dropping on people's machines.  So now we have - I'm taking this out of order.



So now we have, sorry, a Methodist Hospital in Henderson, Kentucky initiated what they called an internal state of emergency and shut down its desktop computers and web-based systems in their effort to fight the spread of this Locky crypto ransomware after discovering an infection of its network.  The hospital's IT staff posted a scrolling message at the top of the Methodist Hospital's website announcing that, quote, "Methodist Hospital is currently working in an internal state of emergency due to a computer virus that has limited our use of electronic web-based services.  We are currently working to resolve this issue.  Until then we will have limited access to web-based services and electronic communications."



The Methodist Hospital's information systems director told Brian Krebs, who was reporting on this, that the Locky malware, which came in as an attachment to a spam email, attempted to spread across the network after it had infected the computer it was triggered on.  Locky has been known to use malicious scripts in Microsoft Office documents as a means of infecting victims' computers.  The malware succeeded in infecting several other systems, prompting the hospital staff to shut down all the hospital's computers.  Each PC is then being brought back online individually after being scanned for telltale signs of Locky while it's off the network.



Now, the good news of the story is that, for reasons that are not clear, maybe it's just sort of generic, the Locky guys only want four bitcoins in payment, which is about $1,600, which I consider a massive bargain.  I mean, these guys are spending that per hour on IT, you know, emergency recovery procedures.  And, for example, four weeks ago, after being down for 10 days, Hollywood Presbyterian had to pay a ransom of 40 bitcoin, which was about $17,000.  And even that, you know, when you consider, I mean, I'm sure you know, Leo, all medicine is automated now.  I mean, a hospital can't function without its IT infrastructure.  And in fact they're literally reduced to writing on, like, stone tablets with chisels.  It's just amazing.



Now, that was last week.  Yesterday - there is a huge health system in Washington named MedStar Health, which operates 10 hospitals, more than 250 outpatient facilities throughout the Washington region, and has revenues of $5 billion annually.  Hit with crypto ransomware.  They have no access to their systems.  The hospital staff in the reporting on this said they've had to revert to seldom-used paper charts and records.  One employee who asked that her name not be used because she was not authorized to speak of the incident said, "Even the lowest level staff can't communicate with anyone.  You can't schedule patients.  You can't access records.  You can't do anything."  So they're completely crippled.



And, I mean, I don't mean to be taking this lightly.  And it's not, I mean, it's a huge problem.  And of course we predicted this years ago.  The first time the concept of encrypting a drive and asking for payment appeared on this podcast, we said, oh, this is going to turn out really bad because suddenly there was a profit motive for these kinds of attacks.  Until now, I mean, until then, viruses sort of existed just for their own sake, to propagate and roam around.  And, well, and there were trojans that were taking over computers in order to commandeer their bandwidth for participation in DDoS attacks.  And we see that still.



But now there's, I mean, this is a new deal, the idea that you could encrypt the network of a hospital and get $17,000 of payday out of them, that puts it into a different league.  And these people have, you know, we could say yes, back up, back up, back up.  It is challenging to keep a real-time backup of something as inherently dynamic as medical records and scheduling and patient history.  I mean, the whole infrastructure of a statewide medical system is changing from instant to instant.  So, I mean, yes, you certainly do need to have backups.  But even that you wonder how current they would be because hopefully - I'm sure that any kind of certification these days requires some sorts of clear infrastructure guidelines.  Yet it's also clear that someone clicking on a random piece of email can still bring the whole thing down.



LEO:  Whew.



STEVE:  Wow.  So today is Tuesday, March 29th.  Two weeks from today will be Tuesday, April 12th.  There's been a preannouncement of a major problem with Samba, named after SMB, the Server Message Blocks protocol.  Server Message Blocks is the Windows network file system, and Samba is a client and server system written to be compatible with SMB, that runs over on the Unix and Linux family of OSes.  I run a Samba server on my FreeBSD Unix machine at Level 3, which is where the newsgroups and my DNS server are.  And then I have IP-filtering restricted access to it from my network at home, which allows me to, from my Windows environment, to bring up the Unix system in a very convenient fashion.  And so this is the way that Unix environment systems are able to connect to Windows-based systems.



So here's what we know.  The site that is tracking this, that has announced this, is called Badlock.org, and so this is called the Badlock vulnerability, B-A-D-L-O-C-K dot org.  No one knows what it is, except Microsoft is apparently frantically working on it, as are any commercial providers of Samba and SMB clients and server systems, and the Samba project themselves.  They say it is a crucial security bug in Windows and Samba, which will be disclosed.



They write:  "We call it Badlock.  Engineers at Microsoft and the Samba team are working together to get this problem fixed.  Patches will be released on April 12th."  That's two weeks from today.  "Admins and all of you," they write, "responsible for Windows or Samba server infrastructure, mark the date.  Please get yourself ready to patch all systems on this day.  We are pretty sure that there will be exploits soon after we publish all relevant information.  Patches will be available for Samba 4.2, 4.3, and 4.4," which is the current one.



They do a little Q&A at the end of this, and they ask themselves:  "Why announce Badlock before April 12th, 2016?"  And they respond:  "The main goal of this announcement is to give a heads-up and to get you ready to patch all systems as fast as possible and have sysadmin resources available on the day the patch will be released.  Vendors and distributors of Samba are being informed before a security fix is released in any case.  This is part of any Samba security release process."



They wrote:  "Weighting to the respective interests of advanced warning and utmost secrecy, we chose to warn you beforehand so that everyone has a chance to be ready to install the fixes as soon as they're available.  Once the patch is released to the public, it will point to attack vectors, and exploits will be in the wild in no time."  And then they ask who found the Badlock bug:  "Badlock was discovered by a member of the international Samba Core Team working at SerNet on Samba.  He reported the bug to Microsoft and has been working closely with them to fix the problem."



So that's all we know.  Now, the name "Badlock" is interesting because of course locking is an intrinsic property of file systems that inherently support sharing because a network file system must.  The issue is one of simultaneous contention to resources.  What normally happens is somebody will obtain a lock on a file which is an exclusive lock, if, for example, if they want write access to it, so that nobody else can get a write lock that would cause them to create desynchronized copies.  So this sounds like - and the fact that Microsoft is involved is really interesting, too, because this sounds like it's an SMB problem, that is, that Microsoft is going to be having to do something, rather than it being a Samba implementation problem.



So anyway, this is all we know.  We now know, everybody listening to this knows all anybody else knows, which is in two weeks something big is going to happen.  Now, it's also interesting that that is, this being the 29th, that means that April 12 is, and this is probably not coincidental, the second Tuesday of April.  So that will be Patch Tuesday, Microsoft's Patch Tuesday.  And it's almost certain, if Microsoft is involved and has been involved, that that's why this is happening on the second Tuesday of the month, is that there will be a critical security update for Windows released on that day.



Now, the other thing that's interesting is that Samba and the SMB file system is not normally publicly exposed.  I'm using it internally.  I have no external presence.  And as I mentioned, I've established an OpenVPN tunnel between myself and GRC's servers, and that tunnel encrypts and transports Samba.  But again, it's not exposed publicly.  Nobody - I can't think of a good reason for exposing a Microsoft file system.  Maybe there are good reasons.  And if so, you definitely want to be paying attention.  I mean, if you for some reason have this exposed, I mean, this is why I created ShieldsUP!.  It was because exactly this, because this protocol was being exposed.  This was the Microsoft NetBIOS protocol, which has evolved over time.  There's a version 2 and a version 3 now of Server Message Blocks.  It was once known as CIFS, which has now been a deprecated name because it's moved way past that.  Or was it CSIF?



LEO: No, CIFS, you're right. 



STEVE:  Yeah, CIFS.  Anyway, so that acronym is no longer used and is considered deprecated.  But the reason I created ShieldsUP! was people were exposing this NetBIOS protocol over TCP, which is what the Server Message Blocks protocol, which Microsoft uses to this day, was exposing.  So anyway, we will certainly be talking about this in two weeks.  And this is one second Tuesday of the month that I will be on top of from the beginning, rather than saying, oh, well, if anything important happens, we'll talk about it next week.  I think we can assume that something really interesting will be happening in two weeks.  And for what it's worth, if anybody is an administrator of Windows networking, again, the only problem I could see that could really be a problem is if there's something publicly exposed.  But why would there be?  Again.  So maybe these guys are overhyping it a little bit.  But, boy, they certainly do seem worked up about it.  So we'll find out.



LEO:  Might be like a VPN roulette.  Did you see that?



STEVE:  Oh, yeah.  VPN or VNC?



LEO:  I'm sorry, VNC, yeah.



STEVE:  Right.



LEO:  Lots of fun.



STEVE:  So good news on the IoT front.  And we don't have much information about this yet.  But there's something coming from the Wi-Fi Alliance.  The Wi-Fi Alliance are the guys, they sort of have a mixed track record because they've brought us really bad things like WPS, which everybody should turn off.  And they came up with that broken protocol where two eight-digit keys - I guess that was part of WPS.  It wasn't the pushbutton version, it was the enter this code.  But it turns out that the protocol was broken such that you could guess the first four digits separately from the last eight, or from the last four, so that reduced it to 10,000.  And then it turns out that the last digit was a check digit, and so the last four was actually only three, and it made it trivial to crack this thing in no time.  So they don't have a great track record in terms of the security design of their protocols.  But they're still trying.



And the good news is they're working on something for the Internet of Things devices because, of course, they're the Wi-Fi Alliance, and our IoT stuff is all WiFi.  So they're working towards something called - and I'm sure we'll be covering it in the future, this is right up our alley - the Device Provisioning Protocol, DPP.  Their little blurb on their site doesn't say much.  It says:  "With the increase in WiFi-certified devices available, end-users have the ability to add a more diverse set of devices to their WiFi networks, including a growing range of devices that do not have a rich user interface."  Or none at all, like an Amazon buy-it button.  "Wi-Fi Alliance Device Provisioning Protocol will enhance the user experience with a simple, secure, and consistent method for on- and off-boarding any type of device on a WiFi network."



LEO:  [Grumbling]



STEVE:  Okay.  So that's very mysterious.  Network World dug into this a little bit further and has a little bit more to say, which is sort of interesting.  And I'll just share what they wrote, or a piece of what they wrote, jumping right into the middle of their article.  And I have the link for anyone who wants to read more.  "Meanwhile, the WLAN should be protected against intruders impersonating IoT sensors, and real sensors infected with malware.  This means sensors should follow the same security regime as enterprise smartphones and PCs.  Especially where pre-shared keys are used, the sensor's identity should be established so the WLAN knows what it is, where it needs to connect, and the permitted traffic patterns.  Identity can be a userID, MAC address, or certificate.



"But hooking each sensor in turn up to a PC, for instance, configuring it with an SSID, credentials, and identity is incredibly time consuming.  IoT vendors are applying their creativity to the problem, and we are beginning to see proprietary solutions.  But we would prefer vendor-independent standards."  And to that I say amen.  I mean, that's what we need.  We need this problem solved once correctly.



So they continue:  "Garage door openers, home thermostats and the like are often configured by making a point-to-point WiFi  connection from a smartphone and entering information on the screen.  This model is also applicable to enterprise deployments where an employee is able to stand next to each sensor and configure it.  But if credentials are entered on the smartphone screen, they are visible to the employee and prone to error.



"The WiFi Alliance is working to improve this method.  The Device Provisioning Protocol (DPP) will allow an already authenticated user's smartphone to bring a new device onto the network, similar to a visitor given guest access by a sponsoring employee. The key feature is to maintain security, keeping the new device's unique credentials hidden from the sponsor and encrypted over the air."



So again, we won't know more until we get some details on what the protocol is.  But I'm glad, you know, these are the guys to do it.  Let's hope they get it right.  And then what we could start hopefully to see is IoT devices saying that they support the DPP, the Device Provisioning Protocol, and that would probably be a good thing because it would mean that we would have a unified, at least something that a group of well-meaning people, rather than individual vendors each making up their own solution, would have thought through and hopefully vetted.  And we can hope that they're better with security today than they were when they did the WPS mess.



LEO:  This time they'll have four eight-bit blocks or something.



STEVE:  Right.



LEO:  Double it up.



STEVE:  So I created a new piece of freeware.  In this morning's Sydney Morning Herald, Adam Turner wrote in his "Digital Life" column.  The column starts off:  "As Microsoft ramps up efforts to force Windows 10 onto older PCs, Never10 helps you maintain the status quo.



"Lunch with my parents on the weekend turned into an unexpected tech support visit when my Dad started up his computer to discover it had upgraded from Windows 7 to Windows 10 against his wishes.  After months of harassment from Microsoft's nagware, I assumed that he'd accidentally clicked Upgrade, despite his vigilance in closing the popup notifications rather than dealing with the Hobson's choice of Upgrade Now or Upgrade Later.  After a quick online search, I realized I owed Dad an apology, as there's been a spate of unwanted Windows 10 upgrades recently from people who swear they never authorized it.



"As Microsoft becomes more persistent, Never10 offers an easy way to put the freeze on Windows 10.  It's free software for Windows 7 and 8.1 which makes it simple for anyone to tweak the advanced settings on their computer to ward off the upgrade - something I wish I'd installed on my Dad's computer before it was too late."



So in my case, it was my friend, whom I've spoken of fondly on this podcast for many years, Judy.  I met Judy in 1984, when I bought my home from her.  She's a realtor and was part owner of the house, and I've known her ever since.  I'm the executor of her and her husband's estate, in fact.  We became friends.  She introduced me to my wife, or the woman who became my wife and so on.  So we go way back.



And once upon a time - because she was a realtor, she needs the Multiple Listing Services.  She used to have what she called her "modem," which was a TI Silent 700 terminal with the rubber suction cups that you stuck the handset of the phone into.  And she would type something, some mystical query into it, and it would roll out on thermal paper all of the multiple listings that met some criteria.  Of course, over the years, she went to a PC.  Then she was using a modem to connect to some dialup service for a while.  That was on 95 and 98 that I was keeping her going on.  Then the Internet happened, and she at some point moved to Windows 7.



So she contacted me somewhat hysterically last week, middle of the week, and everything had just become a horror.  Judy doesn't understand about URLs.  She just thinks, and I know I've made you laugh in the past, Leo, talking about her, because she thinks "The Google" is the Internet.  I mean, it's her home page.  And so she just asks the magic oracle, The Google, she just...



LEO:  I want to go to AOL.com.



STEVE:  She just types, she just enters English phrases into The Google form, and it magically finds things for her.



LEO:  That's what I do.  It's magic.



STEVE:  Yeah.  And so suddenly the world just, like, her world changed.  She didn't know what anything was.  Everything, you know, it was a big disaster.  So Jenny has safely moved over.  I moved her to a Mac, so she's all happy.  She loves her Mac.  She doesn't know why it took her so long.  And so she's no longer in danger.  But this was just a cataclysm for Judy.  And it turns out that whatever it was that happened, it wouldn't revert.  It was supposed to revert, but it didn't revert.  So it...



LEO:  That's the real problem because you will get the EULA, and you click Yes, and then you're in Windows 10.  But if you click No, then it tries to revert.  But if it doesn't revert, now you're worse off than ever.  They've basically screwed your machine up.



STEVE:  Yeah.  So, okay.  So I also, I'd been talking about the GWX Control Panel for a number of months, and it's what I was using on my Win7 machine.  But I had sort of started not to like it.  It was popping up and announcing itself all the time and talking about what a great job it was doing.  And I just wanted it to just be quiet.  And then there was something I needed to do, and I looked at it, and it's covered with buttons, and it's got a whole screen full of, like, all of the things it does and what it's doing.  And it's like, press this if you want this, and press this if you want that, and press this.  And there's, like, 12 of those.  And it's like, I just don't want Windows 10.  And so I thought, okay.



And, of course, our listeners know that some months ago I also discovered Microsoft's official solution to this.  Back in July they updated Windows Update.  Probably around the time they were getting ready to add what they call "OS Upgrade Features" to Windows Update, they had the sense of adding some new registry hooks that would disable the Windows, I meant OS Upgrade, sorry, OS Upgrade.



So, and I've talked about it on the podcast.  In fact, I created a bit.ly link.  It was bit.ly/no-gwx.  I talked about it weeks ago.  That takes you to the Microsoft Knowledge Base page where you can navigate through which version of Windows you have, and then which sub-edition you have, and then x86 and x64 and so forth.  And then the point is that you need that upgrade in order to incorporate these new options.  And then the problem is you need to use the Group Policy Editor or edit the registry.  And Leo, I've heard you mention on The Tech Guy that, like...



LEO:  Don't do that.



STEVE:  ...there are ways to do this, but, you know...



LEO:  Well, I love your approach because one of the concerns, besides all the buttons on GWX, is that he has to keep it up to date because he's fighting a cat-and-mouse game with Microsoft.  But Microsoft has always said we'll support your group policy edits, your settings.  They're not going to override that because that's how Enterprise works, and that would be the end of the line.



STEVE:  Right.



LEO:  So what you've done is brilliant, actually.



STEVE:  So for people who don't know - and, boy, I'll tell you, this thing has taken off like a rocket ship.



LEO:  I bet.



STEVE:  If you google "Never10," it's just pages.



LEO:  Well, can I just congratulate you on excellent marketing because that name is half the reason you're getting links, I'm telling you, is the name Never10.  Yeah.  Mainstream media loves that.



STEVE:  So we're at about 27,000 downloads.



LEO:  Yikes.



STEVE:  And it has immediately jumped to the No. 1 rank of GRC downloads.  So all it is, and it annoys me that it is 81K because, get this, 56K of its size is the high-color, high-resolution icon.



LEO:  A bitmap.  Oh, okay.  Well, they're bitmaps, yeah.



STEVE:  Yeah, yeah.  56K of my 81 is just icons.



LEO:  The code is just a few K, yeah.



STEVE:  Well, and the signature, I have to have a cryptographic signature.  That adds 4K.  So it would be 21K if I didn't have to carry all this ridiculous goofy baggage around.



LEO:  Steve, 21K, all you're doing is modifying the GPE.  Really?  You could probably do it in 4K.



STEVE:  Well, except it has a nice UI.



LEO:  Oh, a UI, oh.



STEVE:  It's got nice color screens.  You can see what your status is.  So here's what it is.  It's super lightweight.  It does not install.



LEO:  I love that, too.



STEVE:  If you run it on something that cannot have the OS Upgrade, which would be an Enterprise edition of 7 or 8 or 8.1, it tells you that you're using an Enterprise system, so don't worry about it.  Or if you try to run it on XP or on Windows 10, neither of those, you know, 10 already has the curse, so there's no point in telling you that it's too late.  Or XP of course isn't a candidate.  So it just tells you it's only for 7 or 8.1.  Then it checks the current version of the Windows Update client, which is one of the things, it's in the Windows systems directory.  It looks at the version number, which is different for 7 or 8.1, to make sure that you've got the version number which supports these features, these new registry keys.  If not, then it tells you that you need to update your version of Windows Update, which it'll do for you.  You just press a button.  It goes out and pulls one of four files from Microsoft's Windows Update server for 7 or 8.1.



LEO:  I apologize.  This is more complicated than I thought.  There's a lot going on here.



STEVE:  Yeah.  But the beauty is it's all hidden from the user.  The user sees none of this.  So it pulls one of four files and runs the standalone installer to install Windows Update.  So then the screen comes back and says, okay.  Now you're - oh, and then, since it assumes the only reason you're doing this is to disable it, it then also sets the keys for disable.



Now, the other thing I did, I went one step further.  First of all, I verified that the group policy edit, all it does is set the registry key, which means we don't need to mess with group policy.  This is all in the registry.  So there are two keys that it sets, or two values under keys.  After it sets them both to disable this behavior, it then edits the privileges on them.  The way the registry works is it's a hierarchy of keys, in the same way that a file system is a hierarchy of folders that end up containing files.  In a file system, the access privileges are typically inherited from the parent.  And that's the same as with the registry.  So these keys inherit their privileges from their parents, which typically inherit the privileges from their parents.



Well, I terminate the inheritance of the privileges on these keys and then assign read-only access to everyone.  So all system processes, including Windows itself, are able to read the keys.  Nobody can change them.  And then, if you use Never10 again - because you can flip it back and forth as much as you want.  If you later decide you want to reenable this, it removes the privilege block, allowing the normal privileges to flow back down into the keys.  And then it deletes both values, as if it had never existed.  In no case is anything installed.  So you can run it once, set your system the way you want it, and then delete it; or, you know, it's 81K, you can leave it around.  



Now, the other thing that I was very impressed by is that, in all of my testing I did over the weekend, even if Windows has already downloaded its at least 3GB of getting ready to upgrade you to Windows X files, if you subsequently use this approach to disable Windows Upgrade, Windows' own GWX tools delete that 3GB.  And so I don't have to do it.  So that was, when I saw that, it was like, yes.



LEO:  Even better, yeah, yeah.



STEVE:  I was very impressed.  So one of the...



LEO:  Download 81K and save 3GB.



STEVE:  Right.  Well, and one of the problems that the GWX Control Panel guy has is he's trying to keep GWX off of your computer.  Well, it's tiny.  You can go visit it.  It's in the Windows\System32\GWX directory.  It's about 30MB, which it's not nothing, but it's not big compared to anything else.  And the point is that the presence of these keys completely hold it at bay.  People make the mistake of trying not to install - 3035583 is the update.  And so they keep trying to, like, they uninstall that, and then they hide it.  And the problem is every month Microsoft unhides it.



And again, I looked a lot at the whole Windows Update system and whether I wanted to get involved with that as part of this.  And it is just a mess.  There's no way to firmly prevent Windows updates from loading.  They don't provide the facility.  They have sort of this soft hiding thing which hides it from the UI, which will prevent it from installing.  But Microsoft on a whim can choose to change that.  And in fact, when they update their updates, these things reappear again.  And of course...



LEO:  This was actually part of the deal with the free upgrade was that you had to agree to updates.  You can defer them, but you cannot refuse them.



STEVE:  Right.  Right.



LEO:  So that's, I mean, they were explicit about that.  It was in a EULA, but they also were very clear about that, that that was going to be the quid pro quo.



STEVE:  Right.  And so anyway, I like this approach.  This doesn't prevent anything from happening.  It lets Microsoft do its work.  But it is, in all of the testing, not only does it prevent it from ever offering this stuff to you; but, even if it's already there and staged and ready to go, it removes it itself when it sees you don't want it.



LEO:  Good.



STEVE:  So I think this is a complete solution for the problem.  It's tiny, lightweight, and just does the job.



LEO:  Fantastic.  Well done.  Bravo.



STEVE:  Thank you.  I did find some people whose Authenticode system was complaining about my SHA-1 cert, which didn't expire until July.  So I only discovered that yesterday.  And once again, DigiCert came to the rescue.  In a matter of minutes, actually, I was able to get from them an SHA-256 Authenticode signing certificate.  Now, the problem with that is that Microsoft's SmartScreen hasn't seen software signed by it before because it was freshly minted.  So some people who are installing it, and I put a note to that effect on the download page for Never10, they'll see SmartScreen saying, oh, we don't know what this software is.  It's like, yeah, yeah.  You just click on More Info and then run anyway, and it'll - and I guess it takes a few days for Microsoft to decide this is, you know, things signed with this new certificate are fine.  So this is the certificate I'll be using from now on.



So I did want to mention I was looking at GRC's download page.  This has replaced the DNS Benchmark, which I wrote I don't know how many years, but it was like 2,000 days ago because my little counter there shows days since the file has changed.



LEO:  It's like six years.  That's great.



STEVE:  2.53 million downloads of the DNS Benchmark.  SecurAble is older and has 3.675 million downloads.  And what's weird about that is that it's not for the functionality I designed it for.  It became super popular as the way people could find out whether they had 64-bit-capable chips in their machine.  Because as a side effect of what SecurAble does, I show whether you have a 32-bit or a 64-bit chip.  And so when we were in this early stages of Microsoft offering 64-bit versions of their operating systems, or even in some cases people wanting to move to 64-bit non-Windows OS, they didn't know if they had a 64-bit capable chip because they just didn't know what the history of their machine was.  So SecurAble was being downloaded, was being recommended by lots of other sites saying, hey, do you want to find out if you can to this with 64 bits?  Go get this little  SecurAble thing from GRC.  It's super tiny, and it just - it'll tell you.  So 3.675 million downloads later.



Unplug n' Pray blessedly is slowing down, only 377 downloads a day of that now.  But it's nearly 4 million downloads.  And the all-time record-breaker is LeakTest at nearly 8 million downloads of that little venerable tool, which people will remember I created to see whether outbound blocking was available in their firewall back in the day.  So fun stuff.



LEO:  Nice.



STEVE:  And anyway, new piece of freeware, Never10.



LEO:  At GRC.com.  Look in the software section.



STEVE:  So, Leo, toward the end of your podcast, The Tech Guy podcast on Sunday, you had a guy who was wondering about the bandwidth of his, like, his whole home's bandwidth usage.



LEO:  Yeah, he wanted to know by application.



STEVE:  And so I wanted just to note that one thing I wasn't aware of until I stumbled on it, and I think it might have been actually another user of it who told me, is that freeware that I had mentioned called NetWorx, N-E-T-W-O-R-X, it offers a one-button configuration to monitor the SNMP broadcast or service on routers.  SNMP, I don't think we've ever talked about it.  It stands for Simple Network Management Protocol.  And it is a well-standardized protocol, Internet protocol that allows devices or clients to query the configuration or current status of network-connected devices.



And so, for example, many devices, all of the devices I have, like higher-end devices, all support SNMP.  It's an option that you can install even in Windows and make your Windows device SNMP queryable.  So, and it uses this weird OID naming convention where it's really, really long strings of decimal digits, you know, 3.1.2.7.6.5.4., you know, 7.22, you know, it's just, like, crazy.  Nobody memorizes them.  You just use a dictionary to look them up.  But they're universally standardized, so much so that it's possible for an SNMP client, which NetWorx is, to know how, without any configuration, to know how to ask your router, your main border router, for the number of packets or bytes, yeah, bytes, sorry, the number of bytes it has sent and received on its WAN interface.



So, and that's the way I've configured my copy of NetWorx, no longer monitoring my own system's interface.  I have it instead querying through SNMP the WAN interface on my main border router, so I'm able to look at the instantaneous incoming and outgoing traffic on the entire network.  But then NetWorx goes a step further because it has a ton of bandwidth management features, where it's able to accrue this over time and with, like, monthly usage and daily usage and hourly and break it down and give you all kinds of controls.



So I just wanted to let - the question on the weekend prompted me to remember that I had not ever mentioned this on the podcast.  And I wanted everyone to know because it's just, it's really cool the way it works.  It just, you know, you press a button, and suddenly you're looking at your router's WAN interface, no matter what router you have, because they publish SNMP on the LAN side.



LEO:  Nice.  That's really great, yeah.  You forget your login, you can always do that.



STEVE:  Yeah.  And just this is so random, but the Temperfect Mugs are reportedly weeks away.



LEO:  Yeah, yeah, yeah, yeah, sure.



STEVE:  And I'll tell you, Leo, this whole crowd-funded thing is such a mixed blessing.



LEO:  Have we learned our lesson?



STEVE:  Yeah.  I am glad, though...



LEO:  You know, on the other hand, there are some good things.  Go ahead.



STEVE:  Yeah.  I was going to say I'm glad that, at the time, back then, what was it, three years ago or something, I bit the bullet and bought, like, the $300 Darth Vader black special coating thingamajig because to read these guys' postings, they are amped.  They are so happy with - I know.  I know.  We'll see.



LEO:  Have you learned nothing?  



STEVE:  Oh, no.  I'm the eternal optimist.



LEO:  But let me tell you a happy story because I did kick in on the Oculus Rift when it was a Kickstarter.  And I got the dev edition.  And, you know, it was funky.  I think I gave it to Chris, our intern, a year or two ago.  He was really excited about it.  I doubt he's even doing anything with it.  And then they got bought by Facebook for billions of dollars, and I thought, well, so much for that.  I'm glad they used my money wisely.  But I was so gratified that they are sending, in fact, I just got an email, it's going to come this week, sending me the release version, and everybody who kicked in on Kickstarter.  They have no obligation to do so.  It's probably at significant cost to them.  But all of the people who supported Oculus early on are going to get, before anybody else, I think, going to get a Rift.



STEVE:  Nice. 



LEO:  So I think that's, yeah, so there are some happy stories.  Whether I'll ever see my floating bonsai tree is another matter, but...



STEVE:  I did get the Neuroon, N-E-U-R-O-O-N, I think it is.  It's a sleep mask that also does EEG.  And it's got LEDs that are supposed to, like, wake you up at the right time.  And it's like, okay, well, I haven't - I've had it for a few weeks, and I haven't bothered yet because I'm so happy with the Zeo.



LEO:  Right.



STEVE:  Which I'm using, and I know how to read it.



LEO:  That's the big problem is sometimes these things take so much longer.  Like I ordered, like, a $100 modular smartphone case called the NexPaq.  And I'm going to get it, I think, in the next few months.  But the problem is I ordered it two years ago.  It's going to be for a phone I haven't used in a year and a half.  And it won't fit anything I've got.  But I'll have it.



STEVE:  Yeah.  I mean, clearly the takeaway is that well-meaning amateurs who are creating ambitious products, they may succeed; they may fail.  We hope that it works out.  But, boy, it normally takes a lot longer than, well, I mean...



LEO:  It's hard.



STEVE:  That's the experience with any big complex project is that these things take longer than one expects.



LEO:  Right.  It's hard.



STEVE:  Okay.  So anybody listening who is not interested in the machine I built can...



LEO:  Tune out now?  Okay, everybody's leaving.  Go ahead, get out of here.  Goodbye.



STEVE:  You've had an hour.  You've got all the news of the week.



LEO:  They're all leaving.  They're like rats deserting a sinking PC. 



STEVE:  That's fine.  I don't want to bore anybody...



LEO:  Man.



STEVE:  ...with the details of the box I built.



LEO:  No, I'm really interested.  You know, we're building one, too.



STEVE:  I know.



LEO:  We're building it for the Oculus Rift.  But I have a feeling we're probably doing something fairly similar.



STEVE:  Well, there are some differences because I've heard you mention liquid cooling.



LEO:  Yeah.



STEVE:  And I went with air cooling.  So anyway, just to finish that, anybody who's not interested, it's the end of the podcast.  You've got all the news for the week.  You're warned about the sky falling two weeks from now with Samba.  We'll be on top of the second Tuesday.  We'll probably do a Q&A next week, so please feel free to hit stop.  And we'll pause now for a minute for you to do that.



LEO:  [Humming]  Okay.  Is everybody gone?



STEVE:  All right.



LEO:  Okay.  Now we can talk.  Nobody [crosstalk].



STEVE:  All right.  They've all left now.  So now we just have the people who care.



LEO:  Everybody cares.  Go ahead.



STEVE:  So as I mentioned at the top of the show, my goal was to build what I'm calling "My Last PC."  It could very well be.  I generally build these things - I build them infrequently.  And when I do, because I don't want to spend time building them every year or two, I build them to last.  And I build them, not only to last in terms of endurance, but I go to the top end as I am able at the time so that when I start using it, I'm off to a good start.  And however much RAM...



LEO:  You're future - that's called future-proofing.



STEVE:  Yes, exactly, thank you.  Exactly that.  So that was the goal with this.  I have had very good luck with Silverstone cases.  Those are the ones, Silverstone specializes in home theater PC cases.  So they're large, easy to work with.  They have both pedestal and desktop.  I wanted a desktop case because I wanted to get it up off the ground.  The ground tends to be a little dusty down there, and I like having it up on my desk.  The other thing these cases are is extremely quiet.  And also lots of ventilation.



So some of my criteria were I wanted it to be desktop.  I wanted lots of large fan ability on the case and for it to absolutely run quietly so that I literally couldn't tell that it was on.  I've never messed with water cooling, so I just thought, you know what, that's a bridge I don't want to cross.  So I went with a high-capacity large tower cooler that would fit in the case.  And in fact the first picture of the pictures shows the one I...



LEO:  This looks like an engine block from a '56 Chevy, is what this looks like.  This is like a radiator from a truck.



STEVE:  Yeah.  Now, that shows the one fan with the radiators on both sides.  And this is a company - I don't see their name anywhere.  Noctua, N-O-C-T-U-A, dot A-T [Noctua.at].  Yeah, Noctua.  And these guys make fabulous cooling stuff.  Now, the way I set it up, as we will see in a later picture, is actually, and they provide the clips for it, is another fan on the inside of the inner radiator.  So it's essentially sort of the middle fan is a push-me-pull-you.  It's sucking air through the outboard radiator and then pushing it through the inboard.  But I thought, oh, well, if one fan is good, two is better.  So I mounted another fan on the inside radiator to give a little more pull.



Now, the next picture on the show notes is the inside of the case looking into it.  I ended up replacing those two large fans that you can see at the top of the picture with Noctua fans.  I went completely Noctua throughout after doing some research.  They're all hydrodynamic bearings, super quiet, super long life.  Basically there's no - it is a dynamic fluid bearing that is closed and just will go forever.



So this case features, basically one whole side of it is two 120mm fans.  You can see down at the bottom an 80mm, actually I think it's a 95mm fan opening at the bottom.  And the concept is that air moves, in this picture, from the top to the bottom.  And because the front on this picture is facing to the right, it's moving from the right to the left.  But so I'm very conscious of air moving through the case, in one side and out the other.  And there's another pair of 80mm fan openings above the whole I/O port region.  Also notice that the RAM sockets are aligned with the air flow also, so that the air will be flowing through and along with the orientation of the RAM, not fighting against it, which is also important.



So in the next picture we can see I've mounted the two 3TB hard drives.  Those are mounted to the inside of the front panel of the case.  And I used, again, because I want to keep them cool, I had really good experience back when I was using large drives in my expanded TiVo Series Ones.  I mounted heat sinks on the drives and then fans on top of the heat sinks.  And I was amazed how much cooler they kept the drives.  So in this case what I've done, since I have airflow, now that the case has been switched around in this photo so the air is flowing up the screen from those two - and you can see that I've switched all to Noctua fans, so there's the two big 120mm fans on the bottom.



Now the heat sink, the processor and the heat sink are mounted, so you can see the heat sink for the processor is right in front of the fans taking the external air which is being brought in from those two fans, propelling that air through the two big radiators into the inside.  And then the air is being pulled out, actively pulled out, by the smaller fan, the 95mm fan up at the top.  And that's deliberately turned around to make sure that it's pushing air out, rather than pulling it in.  And also the two fans over the I/O area, the two 80mm fans, those are arranged also backwards, so they're pushing air out the back of the case rather than pulling it in.  So the only air coming in are the two largest 120mm fans.  All the other fans are pushing it out, and the heat sink, the processor heat sink is right there taking the incoming cool air and pushing it through.



LEO:  I'm a little worried, though.  You have a lot - you're going to have some turbulence in there because you don't have a straight-through flow.  You've got fans sucking here and here and pushing there and there.



STEVE:  Yeah.



LEO:  Before you turn this on, you're going to have to blow some cigarette smoke in there and see what happens.  I'm not kidding.  Because you can actually have too many fans, as you - I'm not telling you.  You know this.



STEVE:  Yup.



LEO:  And you really want to make sure you have - you may not need as many fans as long as you have a good consistent free flow.



STEVE:  Correct.



LEO:  Blow a little smoke in there, some incense, you know, whatever.



STEVE:  It is, because of the coming in the bottom, going out the top, that the heat sinks, what I used for the hard drives is I used the same heat sinks that I had once used, just big beautiful massive copper heat sinks, where the fins of the heat...



LEO:  They're beautiful, yeah.



STEVE:  Yeah, the fins of the heat sink are aligned with the air flow, the in from the bottom, out through the top.  And I used a thermally conductive epoxy.  It's like $5 on Amazon.  So it's actually epoxy, a two-part compound you mix and then smear around and sets in about five minutes.  And so they're just on there forever.  So those are the two 3TB drives that are mirrored, which are sort of the master image backup of the system.



LEO:  That's funny.  That's exactly what we're doing.  And I presume you have an SSD in there, as well.



STEVE:  Well, I was just going say, look there, it's right there in the picture.  You can see it sitting right in the middle of the four silvered sockets.



LEO:  Oh, yes, there it is.



STEVE:  It's a Samsung.



LEO:  And the same one we bought, yeah.



STEVE:  Yup, the Samsung 920.  And so that...



LEO:  950.



STEVE:  Yeah, right, 950, which is a 512GB...



LEO:  Great minds.  That's exactly what we got.



STEVE:  ...SSD.



LEO:  Yup.



STEVE:  Yup.  And so it's in the M.2 socket, so it's right on - so it's a PCIe interface.  It is blazingly fast.



LEO:  Oh, yeah.



STEVE:  And so it has a direct serial bus to the processor.  And then, if we go down to the next picture, we can see the one other thing that I wanted, and that was a graphics I/O.  I didn't mention that the board I chose...



LEO:  You're playing videogames?  Now, this you've gone way beyond.  You're doing SLI.  We're not doing that.



STEVE:  Well, no, I'm actually not.   



LEO:  Oh, it's not two cards?  Looks like two cards.



STEVE:  Well, yeah, there are two cards.



LEO:  Oh.



STEVE:  But they're not SLI.  They are each quad HDMI.  



LEO:  Oh, you've got Quadros in there.  Oh, I get it, okay.



STEVE:  Yes, exactly.  Because, for example...



LEO:  That's more for graphics design than gaming.



STEVE:  Well, actually it's the way I roll.  Like right now, Leo, I've got a screen in front of me when I look down which is my main working screen.  Up here is normally TweetDeck, but it's also a second instance of Firefox with a bunch of tabs.  I've got Firefox always open here as my portal to the world.  This screen up here is monitoring the server with charts showing everything that's going on at GRC.  Over here we sort of have a scratch screen where Explorer is open in order to allow me to move files around.



LEO:  So you're going to have four monitors, is what you're telling me.



STEVE:  Well, I have five here, and this system will drive eight.



LEO:  Eight monitors.



STEVE:  Yeah.  And then the only other thing is you can see that I ran eSATA out to a clip on the back.  I also ran a bunch of USB 2.0 and two ports of USB 3.0 out the back.  So other than that, I mean, and that is it, finished and working. 



LEO:  Looks good.



STEVE:  Yeah.  And so...



LEO:  Yeah, looks really good.



STEVE:  And so I did mention...



LEO:  People don't pay enough attention to the heat from the hard drives.  I think it's really smart to put radiators on the hard drives.



STEVE:  And it's amazing what a difference it makes.  That's the point I wanted to make was just giving them a chance to shed their heat makes an incredible - it just, like, drops the temperature 20 degrees.  It's like, in fact, sometimes the drives are, like, when I had a fan on the heat sink, I don't here, but the drive was actually cold because the fan was pulling heat out aggressively through the heat sink.  So this is just a passive radiation of heat from the drives.  But it'll just keep them running cooler. 



LEO:  How noisy is this thing?



STEVE:  This thing will never go - I never turn this...



LEO:  It's not noisy?



STEVE:  No.  It makes no sound at all.



LEO:  Oh, interesting.  



STEVE:  It's absolutely quiet.



LEO:  That's - they're big old fans, so that keeps them quiet.



STEVE:  And then the last page is a picture of the BIOS screen, showing it running, where the processor - so there are eight cores because it is an Octa-Core.  It's an 8-Core I7 with the largest cache that they had that Intel made.  I think the chip was $1,200 or something.



LEO:  Wow.  Holy [crosstalk].



STEVE:  And you can see that I'm clocking them all at 4.3 GHz.  



LEO:  You got the K's, the K variety, which is unlocked, so you can do that.



STEVE:  Yeah.  So it's unlocked.  And so the reason I'm a little uncomfortable with the motherboard...



LEO:  Geez, Louise.



STEVE:  Yeah, so...



LEO:  So funny.



STEVE:  Yeah, so...



LEO:  Why are you uncomfortable with the motherboard?



STEVE:  Well, because I would like to be able to drive 128GB of RAM at 3200 MHz.  And what you can see in this picture is every other slot is occupied - 1, 3, 5, and 7.  They each have 16GB.  So I have a total of - and I'm not saying "only," but, well, half of what the motherboard could hold of 64GB...



LEO:  I think 64 is enough.



STEVE:  I think it is.



LEO:  I don't think you're really running, I mean, what are you going to run on this thing?



STEVE:  Well, see, I want to make this a happy place for virtual machines to run.



LEO:  Ah, okay.



STEVE:  And VMs take up a lot of space.



LEO:  Right, okay.



STEVE:  You know, each VM wants to have its own 4GB to play around in.



LEO:  Right, at least, yeah, yeah.



STEVE:  Yeah, exactly.  So that was my plan.  Now, what I found was, if I fully populate the board with 128GB, even though the RAM is 3200 RAM, the capacitive load of the additional chips forces me to bring it down to 2.66 GHz.  So I can run 128GB of RAM at 2.66 GHz stably; or 64, run half that much, 64GB at 3.2.  So my choice is 64, as you note, is probably plenty. But if I ever need more, I actually, I have the RAM.  I'm going to keep it.  And I could always add it to the motherboard and then slow the RAM down if 64GB is ever insufficient.



LEO:  Smart man.



STEVE:  So anyway, that's the machine I built.



LEO:  I'm thinking you will never buy another computer.  I think I agree with you.  I can't, I mean, if you did, it will be for - it'll be purpose-built for something like VR.  I mean, this, for instance, you couldn't run Oculus Rift on this.



STEVE:  No.



LEO:  Because you chose Quadros.



STEVE:  Well, yeah.



LEO:  I mean, not that you didn't spent a lot on your GPUs, but they're just not, you know.



STEVE:  The motherboard I bought... 



LEO:  Is SLI.



STEVE:  ...is an SLI motherboard.  And that's one other, so a lot of people have asked, oh, you know, what motherboard did you choose?  The reason I'm unsure about it, and I almost scrapped it and tried another one because...



LEO:  We got the ASUS, which I really like.



STEVE:  And so I don't know if it ought to be able to drive 128GB at 3.2 GHz.



LEO:  Oh, I think we have the same thing.  I think we're using 2800 RAM for the same reason.  I'll have to ask Ryan Shrout.  But I think that that's not the motherboard.  Maybe it is.  You think it's electrical, like it just can't, doesn't have enough voltage to do it, or...



STEVE:  Well, it's drive.  It's the idea is that it's driving four DIMMs at 3.2 GHz.  But when I put eight in, it can't do it.



LEO:  Right.



STEVE:  And so I have to slow it down.



LEO:  Yeah.



STEVE:  And so that says that there is a capacitive load, and it just isn't able to, because of the additional capacitance created by the additional memory, the processor just doesn't have the instantaneous current to charge and discharge the wires fast enough.



LEO:  We talked about this, and I don't remember it.  But if you go back to The New Screen Savers a couple of weeks ago, when Ryan talked, we talked about the memory we put in, that sounds familiar.  And I know we're using 2800.  So I think that that sounds right.  I think he said, if we put more RAM in, we'd have to...



STEVE:  Slow it down, yeah.



LEO:  Slow it down, yeah.



STEVE:  And the other problem with this motherboard is, because it is an SLI, that is, because it assumes you're going to be putting in a powerful video, it has none of its own.  And so most...



LEO:  Oh, interesting, yeah.



STEVE:  Yeah.



LEO:  We have motherboard video.  I mean, it's like comes with the territory.  It's like, they throw it in for free.



STEVE:  And so, yeah.  And so it's like I missed that when I bought the board.  It's like, what, no built-in video?  It doesn't.  It's got none.



LEO:  It's meant for doing what you're doing, is what it is.



STEVE:  Right, right.  And in fact I would be using these eight videos.  And these are all able to do the big size, 2280 by 1900 or something, so like monster resolution.



LEO:  Yeah, yeah.



STEVE:  Four times...



LEO:  Yeah, this is what quad - Quadros aren't the fastest in the world.  I mean, they could be.



STEVE:  Right.



LEO:  But they're designed for graphics designers and very high resolution.



STEVE:  Right.



LEO:  I think that's a great choice.  For what you do, that's the best choice.



STEVE:  And again, passively cooled.  There's no fan on them.  And again, I've designed them so that air flows out through the slots.  And there's a slot empty between them so that there is a vent slot adjacent each of the heat sinks in order to allow the air to get out.



LEO:  Water cooling has really - nothing wrong with what you're doing.  And, you know, obviously.  But water cooling has come a long way since I was doing it.  And these are sealed units.  They go in very easily.  They have heat sinks specifically for various parts.  It couldn't be easier.  It's a lot easier even than when we built our ultimate game machine 10 years ago.  Gosh, is it that long.



STEVE:  And I guess it takes a lot less space, doesn't it.



LEO:  Yeah, yeah.  I mean, now it's a whole different - the game has changed quite a bit.



STEVE:  Right.



LEO:  I'm interested that you're overclocking, though.  And you're not overclocking insignificantly.  I mean, those are 3 GHz chips; right?



STEVE:  Yup.



LEO:  And you're running with 4.3 GHz.



STEVE:  Yup.



LEO:  That's a lot.



STEVE:  Yeah, and they're running cool.



LEO:  And it's reliable.  Wow.



STEVE:  Yeah.



LEO:  Did you bump the voltage a little bit to do that?



STEVE:  Yeah.  I definitely had to bring the voltage up in order to drive them that fast.  But not up to a dangerous level.



LEO:  Interesting.



STEVE:  Yeah.  So, but it ended up...



LEO:  It just shows you that chip has a lot of headroom.



STEVE:  Oh, it goes, yes, yes, yes.  And I'd spent a lot of time digging around, trying to see if there was any indication that there would be a shortening of the chip's life pushing it higher and hotter, and there isn't.  And it is, you know, Intel has all of this stuff set up dynamically.  I mean, so one of the things I kind of maybe should have done is, rather than going eight cores, maybe I should have gone to a quad core and gone with - was it a larger cache?  It might have been even a higher speed in a quad core.



LEO:  Probably, yeah.  That's relatively slow, that rated speed.



STEVE:  Correct, correct.  And because the only thing I'm really thinking would be major video compression, like when I'm recompressing something that - and I do that from time to time, and that always takes a long time.  So that's something that will pin all 16 - because each of those cores is hyperthreaded.  So there's 16 threads.  And, boy, when you bring up Task Manager and look at it, it's like, oh, my god.  It's like, you know, 16 individual execution threads in this thing.  But they'll all get pinned because FFmpeg is now able to run a massively multithreaded...



LEO:  Oh, man.  You're going to get some great rendering performance out of the thing.



STEVE:  Yeah.



LEO:  That is awesome.  Wow.  Can I ask you how much?



STEVE:  I have no idea.



LEO:  You've never added it up.  Wise man.



STEVE:  I didn't add it up.  I just said I need one of these, I need one of these...



LEO:  That's a man who does not have a wife, my friends.  No one to answer to, yes.  I don't know.  It cost what it cost.



STEVE:  Yeah, I did, I took advantage of NewEgg's and Amazon's nice return policies because I messed around with the RAM for a while.  I got some RAM, and then when it didn't go fast enough, I sent it back, and I got some others.



LEO:  Perfect.



STEVE:  So I had at one point three different sets of RAM that I was swapping around, trying to see, like, where the sweet spot was and what could I make it do and so forth.  Because it was like, you know, a lot of patchwork.  But everybody took everything back that I ended up not keeping because that's part of the bargain.



LEO:  You have to really good retailers, I think.  They're excellent.



STEVE:  Yeah.



LEO:  Neo in the chatroom is saying that processor, you're not going to run more, you can't run more than 64GB of RAM.  He says you'd max it out.



STEVE:  I do run 128.  It works.



LEO:  It works.  Okay.



STEVE:  Yeah.



LEO:  Okay.  



STEVE:  Yeah, it took it.



LEO:  It took it.  You just had to slow it down.



STEVE:  I had to slow it down to 2.66.



LEO:  And I think there's no - you're not getting any speed benefit going from 64 to 128GB of RAM, so you might as well run, you know, it's, you know.



STEVE:  Yeah.  Empty RAM is doing nothing.



LEO:  They're not doing anything.



STEVE:  Yes.



LEO:  But I do see, if you're going to run - how many VMs are you going to run on this unit?



STEVE:  Well, I just don't want to not be able to run any, you know.



LEO:  Yeah, you could run eight.



STEVE:  Yeah.  Well, so, exactly.  And so to be able to, like when I'm working on SQRL, I need to be using Ubuntu because I want to make sure that it runs well under Wine.  And so it's just nice to be able to have that open.  And I'm probably going to end up with some sort of a browser-in-a-box environment where I move Firefox into its own VM so that any games it wants to play there with malware can't get out.  So anyway, so one of the goals was, because I've been feeling the limit of 3GB in my 32-bit system, I just said, okay, I'm going to, again, I want this to be the last thing I build.



LEO:  This is not the same exact processor.  You used the K, not the X.  But 20MB of cache, that's nice.  That is really...



STEVE:  Yeah, it has a lot of cache.  And nothing is more important than cache.  As we know...



LEO:  Oh, yeah.



STEVE:  ...cache is king.  And that's one of the nice reasons why having only a few cores in use normally means that the large cache is designed for sharing.  But there won't be sharing very much.  Mostly I'll just be able to open...



LEO:  Oh, it is the X.  I misread your BIOS.  It's not the K, it's the X.  So this says, on the spec, it says max memory size, depending on memory type, 64GB.



STEVE:  Huh.



LEO:  So send that RAM back.



STEVE:  Well, you know, what I'll do is I'll just keep it because, I mean, I did have it in, and I ran a memory test because I wanted to verify that it was solid, so I know that it runs 128GB, even though...



LEO:  There's something wrong here.  This can't be the same processor.  I mean, it also says your max RAM is 2133.  I don't know.  This might be the wrong page.



STEVE:  Or maybe it's Intel being conservative.



LEO:  Well, as they are.



STEVE:  Yeah.



LEO:  As they will be.



STEVE:  Yeah.



LEO:  Nice.  What is the monitor?  Are you going to use your existing monitors?



STEVE:  Yeah.  I have some nice Dells.  I've always liked Dell monitors.  And I have, because my current monitors are DVI, it turns out that you could just do a little dongle, which is an HDMI to DVI.



LEO:  Yeah.



STEVE:  And so initially I will just use the little HDMI DVI converters to run the existing set of monitors.  And then as I, over time, as I swap these monitors out, the new ones will certainly be HDMI.  And so then I'll just remove the little dongle.



LEO:  Easy-peasy.  Yeah, that's one issue we're going to have because it turns out the Oculus Rift needs the HDMI port.  So we're going to have to use, I don't know, we're going to have to use some funky interface for the monitor.  But, you know, you don't need a monitor when you're in the VR there.



STEVE:  Oh, and I did forget to mention the Corsair power supply, the RM850...



LEO:  Yes, yeah, I think we got the same one, yeah, very nice.



STEVE:  Yeah.  And that's about 200% the size I need.  Based on the calculations I did, it was like around 400 watts maximum.  And so I thought, okay, I'm just going to give myself plenty of headroom because you don't want the power supply - in fact, the power supply's fan doesn't even run.  And they warn you not to worry if the fan is not turning because it only spins the fan up when it needs to cool itself off.



LEO:  Yeah.  That's good.  So how many watts in the power supply?



STEVE:  850. 



LEO:  Yeah.  Yeah. 



STEVE:  And those monsters, you can go all the way up into the 1200s or 1500s.



LEO:  Well, that's the nice thing about Corsair, unlike some of the brands.  I mean, they really, they live up to their rating.



STEVE:  And it's modular, so you only plug the wires in that you need.



LEO:  Right.



STEVE:  And, yeah, and most of it's empty.



LEO:  That's my job tomorrow.  Now that the Oculus is coming, we have to put all the wires in.



STEVE:  Oh.  Well, actually, you got a nice case.



LEO:  Oh, I love our case.



STEVE:  Your case allows you - you're able to run the wires behind the motherboard, which is very nice.



LEO:  Mm-hmm, mm-hmm.



STEVE:  Yup.  I like that case a lot.



LEO:  Yeah, we, you know, I'll tell you, I learned long ago, buy a case for its ease of access.



STEVE:  Yes.



LEO:  Because that's something you're going to want.



STEVE:  It's like in networking, never tie down all the cables because you think it's like...



LEO:  You're never done.



STEVE:  ...you're never going to change anything.  You are always going to be changing something.



LEO:  Well, good.  Our engineers will be happy to hear that because I don't think we have any cables tied down in the basement there.



STEVE:  No, there's no point.



LEO:  But you know what, we're going to be glad because in August we've got to unplug everything and move it.  And I have a feeling that this time they will maybe trim it a little bit, make it look pretty.  Right now it's a rat's nest down there.  Steve, what fun.  You know, people don't build PCs that much anymore.  But it is really a gratifying thing to do.



STEVE:  Oh.  It is so nice.



LEO:  I just look at that machine and think how well, I don't know, OpenBSD would run on that thing.  It'd just be - it'd scream.



STEVE:  Oh, my god.  You'd do an "ls," and it would just be a blur.  All you'd see is the end. It's like, uh, what happened? 



LEO:  Where's my listing?  No, that's going to be a lot of fun, lot of fun.  My friend, we've come to the end of this early.  You didn't do a 2.5-hour show.  I'm very disappointed.  You like Father Robert more than you like me.



STEVE:  No, we're right on our two-hour mark, which is the sweet spot.



LEO:  That's what we want to be. 



STEVE:  Yup.



LEO:  Steve Gibson's at GRC.com, and so is so much good stuff, including Steve's super-duper, patented, all-night, nonstop sleeping formula, which by the way, now with Taurine.  No, wait a minute, now with L-tryptophan.  I keep getting boxes from Steve.  Oh, more - rattle, rattle.  Oh.  So should I eliminate the melatonin now that I've got the L-tryptophan?



STEVE:  No.  The L-tryptophan, I think, just is a nice little additional encouragement.



LEO:  Steve, if my liver fails in a year, at least I'll be well rested.  And that's how I'm thinking about this.



STEVE:  I've got to tell you, Leo, there's - and I'm digging in on this.  I haven't figured out what it is.



LEO:  I sleep.  I can't sleep.  Oh, I will say this.  It is the best jetlag formula ever.  So even if you don't want to use it on a regular basis, when we went to New York, I was in bed on time.  I was up on time.  I was instantly on East Coast time.  And Lisa and Michael were, you know, 12:00 noon they're [snore]. But I was up and 6:00 or 7:00, and I was out, I mean, from now on I'm not traveling without that thing.  That is great.



STEVE:  There is something for me that happens after, I think it's about between 8.5 and nine hours.  If I go to bed early so that I can get that much, it's almost mystical the next day, how I feel.



LEO:  Yeah, nice, yeah.  Life is better.  Life is better when you sleep.



STEVE:  It is like - it's amazing.



LEO:  Now, have you...



STEVE:  And I keep - go ahead.



LEO:  Have you tried - I'm really tempted to open those capsules and make a little powder that I put in a cup of tea or something.  Because it's now up to, like, 10 pills or something.



STEVE:  I know.



LEO:  It's a big handful.  And I think it might be better if I had it in a beverage.



STEVE:  Yeah.  I'll be surprised if someone doesn't come along and say, hey, we want to turn this into an all-in-one, ready-to-go package, which would be great.



LEO:  Well, soon as you perfect it.



STEVE:  Yes.  For what it's worth, I'm getting a lot of positive feedback.  People who have not been able to sleep for years...



LEO:  Oh, I'm loving it.



STEVE:  ...report that they're sleeping for the first time ever.



LEO:  Yeah.



STEVE:  Even, like, college students are saying, hey, this thing works.  And it's like, well, I'm just so happy.



LEO:  Yeah.  Knocks me out, and I sleep through the night, and I feel great the next morning, and not groggy.  But we're not selling it.  It's just on the web page.  It's there...



STEVE:  Healthy Sleep Formula.



LEO:  ...if you want to know about it.



STEVE:  Just google "healthy sleep formula."



LEO:  And of course, while you're there, make sure you get the Never10.  Never.



STEVE:  That is a good name.



LEO:  I'm telling you, great SEO.  Really, really smart. 



STEVE:  Yeah.



LEO:  SpinRite's also there, you know, a good program, too.



STEVE:  For a while, you know, the other name I was tempted to go with, you know, because we have GWX for Get Windows X, I was tempted to go with FWX.  But I thought, no, I like Never10.  It's better.



LEO:  Good.  It's good, but I don't think you'd be in the Sydney Morning Herald with that one, no.



STEVE:  No.



LEO:  Never10 is perfect.  So many things there.  Just go the GRC.com, browser around.  Of course the podcast there, the transcripts.  You can get the show from our site, too, TWiT.tv/sn for Security Now!.  It's also on YouTube.  It's also, actually, if you go to YouTube.com/twit, you'll see all of our shows, and you can subscribe to individual ones.  Each of them have their own YouTube channel.



And people keep saying, gosh, I wish you still did the reviews, the Before You Buy stuff.  But we do reviews on all the shows, and then we put them on YouTube.  And there's a YouTube Product Reviews playlist.  So you can, in effect, assemble your own Before You Buy, if you want.  And that's really kind of how we've handled that is we've just moved it into this YouTube playlist.  But it all starts at YouTube.com/twit.



The newsletter is at TWiT.tv/newsletter.  Free.  No ads in it, even.  I don't know why, but we just decided not to do that.  Mainly because our great sponsors make everything possible.  We thank them.  And we thank you, Steve, and we'll see you next week, Wednesday, I'm sorry, Tuesday, 1:30 p.m. Pacific, 4:30 p.m. Eastern, 20:30 UTC on TWiT.  Thanks, Steve.



STEVE:  Thanks, Leo.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.


















GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#554

DATE:		April 5, 2016

TITLE:		Listener Feedback #231

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-554.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss a quiet week's few security events, sharing some thoughts about Internet of Things (IoT) security, Bruce Schneier on Apple and the FBI, and some miscellany.  Then we open the Security Now! mailbag to hear from our listeners their experiences and thoughts, and answer their questions.



SHOW TEASE:  It's time for Security Now!.  Steve is here.  Not a lot of news.  Oh, he'll mention the WhatsApp thing, of course, and various other security news.  But really we're going to focus on questions, 10 great ones from you, our listeners.  Steve's answers coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 554, recorded Tuesday, April 5th, 2016:  Your questions, Steve's answers, #231.



It's time for Security Now!, the show where we protect you and your loved ones.  We?  Not me, you.  Steve Gibson protects our loved ones and our privacy online and helps us understand what's going on in the world.  Hello, Steven.  He's waving.



STEVE GIBSON:  Yo, Leo.



LEO:  Waving doesn't work on the radio.



STEVE:  No, it doesn't.



LEO:  And now Steve is waving his hand back and forth to signal hello.



STEVE:  I was just looking at the Security Now! episode number, and I love numbers that are fun.  And next week is 555.  Somebody actually sent me a tweet a few weeks ago saying, you know, you should do a special episode about timers, or time. Because of course it used to be a Signetics part.  So it was the NE555.  That was - for some reason Signetics began their part numbers with NE.  The 555 timer was like this amazing simple little toolkit part from, like, you know, boy, it was in the '70s because I remember I was using them with a friend to make - to drive a relay for police for emergency vehicles.  He had a company producing, like outfitting cars with all of the flashing lights and sirens and things.  And so, and we didn't like the fact that you sometimes saw lights flashing with a non-50 percent duty cycle.  Scott was a perfectionist about these things, as I am.



LEO:  Oh, dear.  Oh, dear.



STEVE:  And so we were able to set this thing so that the lights flashed exactly back and forth with a 50 percent duty cycle.  



LEO:  Oh, my goodness.  This is nerdy.



STEVE:  Anyway, this is Episode - yes, at the tender age of, what, 17 or 18. 



LEO:  Yeah.



STEVE:  So this is a Q&A.  And remember that last week's episode was "Too Much News" was the title of it, which would have nominally been a Q&A, but there was just too much to talk about.  This week compensates for that.  Nothing happened.



LEO:  Too little news.



STEVE:  I don't know, maybe it's spring break.  Everyone's, you know, all the hackers are, like, touring Europe or who knows where they are.  But they don't seem to be up to any mischief.  So we have a few things to talk about, some miscellany, but then I found 10 great comments, questions, thoughts, feedback from our listeners.  Oh, and everybody went crazy over the picture for this week's front page of the show notes.  It was tweeted multiple times.  I got it through email, every possible communications avenue.  And this is the...



LEO:  Oh, I love this one.



STEVE:  Yes, how the FBI actually cracked Farook's iPhone.  And it's just three frames.  The first frame is the government guy, the GI with his FBI suit saying, "I have an idea."  And then in the second frame there's like your typical mischievous little kid sitting on a couch.  And he says, "Here, play with this iPhone; but do not, I repeat, do not unlock it."  And the kid's like, eh.  And then in the third frame the FBI guy back on the phone, "Bingo."  So.



LEO:  If only it were that easy.  Maybe that kid is actually John McAfee on the couch.



STEVE:  Just give it to a kid.  So this is just sort of a, as I said, not lots of security news.  But I picked up on this.  Business Insider had two pieces that Rob Price was reporting for them about people disgruntled over something that happened with a purchase they had made years ago with something called a "Revolv," which is a residential IoT hub that does something, who knows.



LEO:  Oh, it's a hub.  It's, like, no, this makes me so mad.



STEVE:  Yes, yes.



LEO:  So it's like the SmartThings hub.  It's a hub that you connect to, and you can connect your locks and your lights and whatever, and it automates your home.



STEVE:  Correct.



LEO:  However, not for much longer.



STEVE:  And not cheap.



LEO:  And not cheap.



STEVE:  $299.



LEO:  Yeah.



STEVE:  The thing was purchased for essentially $300 with a, quote, "lifetime subscription."  And I looked up, just to have it exactly right, what was the exact meaning of "caveat emptor."  And the little definition came up, says it's a "Latin term that means 'let the buyer beware.'  Similar to the phrase 'sold as is,' this term means that the buyer assumes the risk that a product may fail to meet expectations or have defects."



LEO:  I really hate it when they say the "lifetime," and what they mean is the lifetime of this offer, or the lifetime of this device.



STEVE:  Right. 



LEO:  Not your lifetime.



STEVE:  And I was put in mind of anything we do where we're dependent upon the party we're paying to survive.  For example, you could be paying into health insurance, and the insurance company goes bankrupt.  Oh, wait, you know, what about all of that payment that I made?  Oh, sorry, you know, we're gone now.



LEO:  But, by the way, this company's not going bankrupt because the company that owns this is Google.



STEVE:  Yes.



LEO:  This is infuriating.



STEVE:  And in fact these guys had to know.  So these guys had to know this was going to happen.  So in October of 2014, so, what, about a year and a half ago, Nest purchased Revolv, R-E-V-O-L-V.  And then nine months later Nest of course was purchased by Google.  So now the two Revolv founders - oh, and this was considered a - what's the term where you're actually buying the company to get the people, an acqui-hire?



LEO:  Acqui-hire, yeah, A-C-Q-U-I-H-I-R-E.



STEVE:  Yeah.  So the idea was, you know, they didn't really want this Revolv.  They wanted the guys.  And so the two founders, Tim Enwall and Mike Soucie, they posted on their website, I think about a week ago, and this is what the Revolv site now says:  "We're pouring all our energy into Works with Nest and are incredibly excited about what we're making.  Unfortunately, that means we can't allocate resources to Revolv anymore, and we have to shut down the service."  So the site no longer, of course, talks about a lifetime subscription.  Instead it tells its users that their products are no longer under warranty because, quote, "its one-year warranty against defects in materials or workmanship has expired for all Revolv products."



LEO:  Oh, I'm so angry, yeah.



STEVE:  And then they have a Q&A where they ask themselves, "What happens to my Revolv device?"  And their answer:  "As of May 15th, 2016," so five weeks from now, "Revolv service will no longer be available.  The Revolv app won't open, and the hub won't work."



Now, I was put in mind of the Zeo because of course the EEG sleep monitoring device was created by the Zeo company, founded in '03, whose doors closed in 2013, and the same thing happened.  When I was coming up to speed on Zeo I looked and dug into the archives and looked at everything that was online, and there was a similar scramble when Zeo was announcing their pending demise because, just as with Revolv, the Zeo had a whole online thing.  I mean, there was, you know, your nightly EEG was being uploaded to the web, where it was being indexed and cataloged, and there was a whole web-facing service that was part of it.



Now, of course, when they died, the Apple app got pulled from the App Store.  Thankfully, the Android app continues to live on.  So the hardware works, and of course more than 2,500 listeners of the podcast now own these Zeo devices and have been playing with them with their Android.  But here's another example of - the good news is it didn't completely die.  But it certainly had its functionality capped by the death of the company.  So anyway, I just sort of wanted to bring this up as sort of a cautionary note, in general, about the whole Internet of Things deal because...



LEO:  Because they do, in many cases, need a server to be running at the company.  I don't know if, let's see, does SmartThings need a server running?  I guess it would because that's what they phone home to, and then they connect to your phone through that.



STEVE:  Right.  So, for example, our TiVos are network-enabled.  So I'm able, you can go to the TiVo site and access your TiVo through a web page.  You have TiVo apps.  However, all of that is dependent upon the TiVo service.  So if they were ever to die, a chunk of value - actually, in the case of TiVo it's even more significant because the guide which the TiVos use to drive them comes from the TiVo service.  So I've been counting my lucky stars all these years, since I love this machine so much, that TiVo service has continued.



But we are entering an era where, exactly as you note, Leo, many of the things we do are tied to the 'Net.  And what's annoying is in some cases it's only because their revenue model drives that.  They want the connectivity.  That is, the supplier of the device wants a relationship with us, and on whatever basis.  But what that does reciprocally is create a dependence upon their continued survival; you know?  And here was a company, in the case of Revolv, that was apparently doing well enough to get acquired.  Unfortunately, not that long afterwards, they just decided to blow off all of the customers that made their rise and success possible, having promised them a, quote, "lifetime service," whatever that means.  And a lot of people are justifiably unhappy.



LEO:  I wonder how many they sold.  I'm upset, not because I have one, although if I did I would be very upset, but because - and I think they may back down on this, and I'll tell you why.  The damage to Google is huge because that means, I mean, Google already has a problem with discontinuing services people like.  Google Reader.



STEVE:  Right.



LEO:  Wave.  I mean, I can go on and on.  And this is - that is not the reputation Google wants.  This is really bad.  This is just bad behavior.



STEVE:  Yeah.  So from our standpoint, I just sort of wanted to raise it as, again, as sort of a cautionary note.  Consider when you're buying things.  If they're $10 light bulbs, then, eh, okay.  Not a huge investment.  But I would be careful about making a major infrastructure investment in, like, equipping your whole home with technology tied to an external supplier where everything depends upon that supplier.  What would be nice would be if there is a fallback provision so that, if the service is not available, you may not get all the features, but you're not left out, I mean, you're not left with your entire infrastructure investment scrapped because it no longer works.



LEO:  Well, and this is the argument for open source and, you know, if they had the software as open source...



STEVE:  And standards.



LEO:  ...and standards, somebody else could run the server.  I could run my own server.



STEVE:  Right.  We're in the early days.  There's no question, I mean, we don't have any security standards.  I mentioned that we do have that device provisioning protocol that the Wi-Fi Alliance are working for.  And so that would be a good thing.  The only reason we're here today - you and I are talking, able to talk to each other.  There are people able to listen to us.  It's all based on standards.  It's the IP standard, Ethernet packet standards, TCP standards.  All of this is built on standards which are decades old.



And so I think it's easy in this fast-paced mode that we're in today to sort of forget that we're jumping into something like IoT using the standards that exist.  But this technology needs more than what we have now.  We need another layer of standards that just hasn't caught up yet.  So we're using the lower level plumbing standards which are, frankly, insufficient.  So what's happening is the IoT vendors are all rolling their own.  They're just making stuff up so that it works right now.  All of this needs to be considered sort of transient because it's probably going to turn out to be exactly that.



LEO:  Terrible news. 



STEVE:  Yeah.  Bruce Schneier weighed in, in the aftermath of the FBI saying sorry about all the news we made, Apple.  We no longer need you.  And I just - there was one paragraph from his longer blog post.  The full link to his blog post is there for anyone who wants to read it, or just go find Bruce Schneier's blog, www.schneier.com/blog.  So Bruce wrote:  "Whatever method the FBI used to get into the San Bernardino shooter's iPhone is a vulnerability.  The FBI did the right thing by using an existing vulnerability, rather than forcing Apple to create a new one.  But it should be disclosed to Apple and patched immediately."  And then he added...



LEO:  But of course the FBI is saying, wait a minute, we want to keep using this.



STEVE:  Right.  And then he added:  "To be fair, the FBI probably doesn't know what the vulnerability is.  And I wonder how easy it would be for Apple to figure it out.  Given that the FBI has to exhaust all avenues of access before demanding help from Apple, we can learn which models are vulnerable by watching which legal suits are abandoned..."



LEO:  Ah.



STEVE:  "...now that the FBI knows about this method."  So there's been a huge amount of speculation in the wake of this.  Many people weighing in on what should happen now.  Is it right for the government to keep a secret that they have which is now creating a concern for all iPhone users that their phone could be cracked open at the government's whim?  We don't know.  And of course the argument is, if the government was able to get in without Apple's permission, who else can get in without Apple's permission?  If there's some third-party company that sold the FBI the information, who else are they going to make it available to?  So the idea that there's been essentially an official confirmation of a vulnerability which the FBI is going to keep to themselves and Apple will not be able to patch, this creates a huge concern.



So of course Apple's going to do what it should do, which is to continue moving forward, closing what few remaining vulnerabilities exist, immediately counteracting what it was that this court order was asking them to do, doing what they can to foreclose all of that because they've made their position very clear.  And at the same time, Apple has been trying not to have their phones crackable for generations now.  But one way or another it seems that the bad guys are always able to get in and root the iPhone, though it's getting increasingly hard as Apple continues to put more tough barriers up.



LEO:  Here's a hypothetical.  What if the FBI had a vulnerability, and they could keep it quiet?  Like no one would ever get access to it?  What would be wrong with that?



STEVE:  Well, okay.  So the argument is that's impossible.  That is, so someone found that vulnerability.  And the argument is anyone else could.  I would say it's better for Apple to have a mechanism under their control where they exclusively decide what phones are unlocked.  That's superior than something we know nothing about.  The FBI says we had a way, we have a way which allowed us to bypass the access code, the unlocking code, so that the phone would not be bricked.  So we have to assume now that someone discovered a way to do that, which means anyone else could.  And lots of people have been arguing that anything Apple would do is a backdoor.



I, of course, controversially argued that, no, Apple could design something that only they control.  I would argue a completely secure platform where they have a key that they selectively administer is better to what we have now, which is we don't know who else has access.  We don't know where the FBI got this.  I mean, it's much more feasible to think they purchased it.  We know they have a relationship with Cellebrite.  There were some invoices that floated around the 'Net in the last couple weeks of payments, some big hundred thousand dollar plus payments to Cellebrite.  And of course there's no information, there's no way to tie that to any case or any particular instance.  But money is flowing from the FBI to a company that specializes in cracking cell phones.  So we're in this situation where a third party presumably has a means that they are offering for sale to anyone who wants to come and get it.



LEO:  By the way, this means probably Pete Williams was wrong when he asserted that he'd been told by the FBI, well, we got the data, but we haven't unencrypted it.  Probably whatever this was, obviously, must have decrypted it.  And now, by the way, the FBI's going around to law...



STEVE:  Remember, we still don't have any proof...



LEO:  We don't know...



STEVE:  ...that they have access.



LEO:  Right.



STEVE:  They've said - all we're going on is them saying they have access.



LEO:  Well, they're not going to lie about that.



STEVE:  Okay.



LEO:  Not to the court.  Well, maybe they would.  I don't know.



STEVE:  All they said was we no longer need Apple's help.  We have extracted the data from the phone.



LEO:  Right.



STEVE:  Nowhere did they say that they had decrypted it.



LEO:  Ah, okay.



STEVE:  So one could argue, I mean, I'm...



LEO:  They're going around and offering to do this for other law enforcement now.  There's an Arkansas case they're going to help.  So, I mean, they've actually sent out a memo to law enforcement saying...



STEVE:  I did see that.



LEO:  ...we have a way to do this.  So anybody want help?  We can help you over here.  Which means, by the way...



STEVE:  I agree.  I think that pretty much puts it to bed.



LEO:  It also probably means that they do know what the vulnerability is, unless they plan to pay $100,000 to Cellebrite for every case.  They probably bought the vulnerability.  But I don't know.



STEVE:  Yeah.  We don't know.



LEO:  We don't.  Which is...



STEVE:  And that's one of the frustrating things.  I mean, unfortunately, I don't think we're going to know.  The argument has been made that, of course, in the security community, that the FBI should disclose to Apple what they're doing, and then Apple will fix it.  And of course that's - but here we're also seeing Apple refusing to help the FBI.  So the FBI is sort of certainly going to be unlikely to tell Apple how to fix a problem which, as you say, Leo, they're, like, happily able to produce evidence for other cases.



LEO:  Right.  And you have to think there's a little bit of "screw you, Apple" in this, too.



STEVE:  It's a mess.  I did mention a couple weeks ago that I have a tickler set up on a Google probe, watching for any news of the Burr-Feinstein bill, and it went off yesterday.  I immediately checked to see if there was news, and it's still more of this, you know, hold your breath, any moment now.  The updated report from The Hill says that the pending legislation has been receiving input from the executive branch, from other parties.  It's getting very ready to release.  But not yet.  And I'm expecting not to be impressed.  I'm expecting to be unimpressed by the clarity of this legislation.  I'm afraid it's just going to kind of be murky, which says, you know, we should be able to see into encrypted things.  End.  Period.



Okay.  That's all the news that there was.  WhatsApp was - Moxie posted, and the news of the day is that WhatsApp is now fully a part of or the full end-to-end encryption has been brought up in WhatsApp.  There is a technical paper which looks distressingly short.  It's only 15 pages.  Rene was kind enough to send me a note in the middle of the MacBreak Weekly podcast, so somehow he was able to sneak that out with a link to the PDF.  And I've been receiving tweets about it all morning.  I had no chance before the podcast to look at it.  My guess is it's sort of an overview.  But what we know is that the deeper technology is all available and in the public domain.



So I will probably make that the entire subject, a detailed breakdown and examination of that technology for next week's podcast because I know it's a messaging application that's going to affect hundreds of millions of people, and that no doubt law enforcement's not happy about it.  The question is authentication because that's always the bugaboo.  How do you authenticate the other party?  That's the one part that is the big inconvenience of Threema because they got it so right.  And anytime you attempt to make that easy, if you weaken authentication, you can no longer state that this solution is secure.  So we need to take a look at how is authentication being handled?  The rest is easy.  Authentication is what's annoying to people, and so it's the thing that normally gets shortchanged in a truly secure technology.  So we'll absolutely be taking a look at that next week.



LEO:  Yeah, I mean, the way WhatsApp works is you verify by phone number.  So your phone number's leaked.  And so...



STEVE:  Yeah, I don't know what that means.  So, I mean, I need to...



LEO:  Well, they know your phone number because that's how you match to other people is via phone number.  So they know - they don't know your message.  They've got Moxie Marlinspike, for crying out loud.  And they're using the Signal Protocol, the Whisper Systems protocol.



STEVE:  Okay.  None of that means anything.



LEO:  You know Signal.



STEVE:  Yeah.  But if there's somebody in between...



LEO:  Well, they say there isn't.



STEVE:  ...and you have a great secure connection to the man in the middle, that's really nice.



LEO:  They say there isn't, but I'm sure after you read the whitepaper you will let us know.



STEVE:  I mean, that's the only question.



LEO:  No, no, you're right, you've got to look at it.



STEVE:  Yeah.  Okay.  So a couple bits of miscellany, and we'll get into our Q&A.  For the first time in my life, I am migrating my domains away from Network Solutions.  They finally - I've been upset with them for years.  But it's just, it's so easy to just say, okay, renew, renew, renew.  But I just - I hate that they trick you in every way possible.



LEO:  I think I did that 10 years ago, Steve.



STEVE:  I know.  I know.



LEO:  So who are you moving to?



STEVE:  Not sure yet.  I'm looking around.  But I wanted to give people a warning.  I wanted to warn our listeners that in the best case it is not a quick procedure.  Initially I was thinking they're just making this as bad, as hard as possible.  So I'm doing a test transfer to GoDaddy, although I don't think I'm going to end up using them.



LEO:  Oh, I wouldn't, yeah.



STEVE:  Yeah.  But so here's the protocol.  You tell the registrar you want to migrate to, you go over there, and you say, hey, I want to transfer a domain from somewhere bad to you who are all wonderful and good.  So you start that process.  They send you a link.  You verify that.  Then you go to the registrar you're migrating from and ask them for a permission-to-move key.  They have up to and take all of three days.  Now, on one hand...



LEO:  They slow it down as much as they can, of course.



STEVE:  They make it as painful as they possibly could.



LEO:  Yeah.



STEVE:  So I go over to Network Solutions.  Hi there.  Oh, and there was nowhere on the website that I could find how to get this link.  I had to call them.  And so my blood pressure is going up.



LEO:  Okay, that's a strike against them.  A good registrar will give you a link, at least, to how to do this; right?



STEVE:  Right.  And so I had to get on the phone, and this nice person navigates me through, oh, you have to set this checkmark here, click this, go into manage, scroll down to the bottom.  See where it says that?  Well, okay, that's not obvious.  But click that, then move over here, then, you know.  Finally I get this.  And then they say, "We'll send it to you in three days."  They could send it now.



LEO:  Now, instantly.



STEVE:  But no.



LEO:  Part of this they justify because you don't want to make it easy for somebody to steal your domain.



STEVE:  Exactly.  So after I sort of like realized what the process was.  So the first thing I do is wait three days.  And sure enough, on the, what is it, 72 hours?  On the strike of the 72nd hour, finally this little crypto thing comes to me from Network Solutions after three days.  So I go back over to GoDaddy, and I put that in, which then GoDaddy uses to make the request of Network Solutions for the transfer.  Now, four days.  Again, could have been immediate.  No.  So then I get email from Network Solutions saying, hi, we've received the link we sent you back from the people you're sending, you're transferring - oh, oh, oh, oh, I forgot to tell you.  Part of the process of getting the transfer-away link from Network Solutions was "We don't want to lose you.  How about a $10 discount?"



LEO:  Oh, yeah.



STEVE:  For, like, one year for $10?  And it's like, you know, as everyone knows, I don't like to use explicit language.  But it was like, you suckers, you know...



LEO:  Oh, I know, I know.



STEVE:  You're charging me $39 a year.



LEO:  Oh, that's outrageous.  That's three times what it costs anywhere else.



STEVE:  Oh, it's $37, sorry, $37 a year.  And that's, oh, and I had to go through a questionnaire, why are you leaving?  And I said price.



LEO:  And I hate you.



STEVE:  Well, and the other thing is every - I hate you, exactly, I hate you.  Every time I update, they, like, try to turn on auto renewal.  They try to sell me, for $9 a year, they want to sell me a private listing in the WHOIS directory.



LEO:  Oh, no, no, no, no.



STEVE:  For something that costs them nothing.  I mean, it's just I'm being nickel-and-dimed.  And they want, you know, email addresses and hosting and, you know, would I like to have a free car wash.  I mean, it's like, no no no no no no no no no no no.



LEO:  That sounds like GoDaddy.



STEVE:  Just to get - just to renew my - oh.  And finally I said, okay, I just cannot support this any longer.



LEO:  So let me give you a couple of things.



STEVE:  Good.



LEO:  Our old sponsor - and by the way, they haven't been a sponsor for years.  They don't send us any money, and so this is not an ad.  But Hover does have a domain transfer service.  You'll have to give them your Network Solutions credentials, but they do it all for you.  And now you know why; right?



STEVE:  Wow.



LEO:  And I wish, I mean, I've done it by hand, and I wish I'd done it automatic - because I moved everything to Hover when they were a sponsor.



STEVE:  Seven days, just for anyone, I mean, this is not something you can do at the last minute.  Seven days.



LEO:  I've got a story for you.  So somebody - LeoLaporte.com went up for sale about a month ago.  Somebody was selling it.  It was only a hundred bucks.  I said, great, I'm going to finally get my name.  I didn't have my name.  Still would love to get Leo, but I got LeoLaporte.com.  So the process, you buy it.  It's over at GoDaddy, I guess.  And you buy it, and then it takes forever, but eventually, like a week or two later, you get the domain name.  And then they say, but now to confirm it you have to have us send an email to the administrative contact.



STEVE:  Right.



LEO:  Which of course is the guy who owned it.  So I change the address record in there, and I have them send me an email.  Then I say, okay, now I want to get off GoDaddy as fast as I can, move it to Hover.  They said, oh, sorry, because you've changed the address, you have to stay here for three months.  That'll be $10, please.  So they've set it up with the domain purchase system to guarantee that you can't leave them for three months.



STEVE:  Wow.  Yeah.



LEO:  I mean, these, I mean, it's a terrible business.  It's a terrible business.



STEVE:  It is.



LEO:  You know, we should...



STEVE:  I really want the security.



LEO:  ICANN should fix this.  This is ICANN's fault.



STEVE:  I'm sorry?



LEO:  This is ICANN's fault.  All these people are registered through ICANN.  ICANN could enforce some rules.



STEVE:  Yeah.



LEO:  I know, security's important, I know, I know.



STEVE:  Yeah.  You absolutely want to make sure that...



LEO:  You don't want your domain stolen, yeah.



STEVE:  ...you do not lose control of your domain name.  That's crucial.  And we've heard, there have been horror stories about people who haven't, for whatever reason, maintained theirs.  But so Hover, you think?  I guess this is an open call.



LEO:  Yeah.  Love Google Domains, Google Domains.  It's Google.  Right?  So Google would be good.  Google does domain names now.  I used Dotster for years before Hover.  They seemed okay.  But, yeah.  How should people let you know?



STEVE:  Oh, believe me.  Twitter will just - I'm sure Twitter is already going crazy with everyone's favorite.



LEO:  Who is the best domain registrar that won't jerk you around?



STEVE:  Yeah.  I would just like a clean, simple, domain - I don't even care if it's more expensive.  I've been putting up with $39 or $37 a year from Network Solutions and all of their nonsense.  So, oh, my god, this whole we'll give you a reduced price if you don't leave.  It's like, hey, you had your chance for the last two decades.  Ugh. 



LEO:  Yeah.  I've been very happy with Hover.  You know, just because they were an advertiser, all our domains are there.  The DNS is very easy.  You know, yeah, that's part of it, too, is how the dashboard is and setting all that stuff up.



STEVE:  Yup.



LEO:  And there's no upsell.  And WHOIS privacy is included in the $10 a year fee.  So I think you'd be a lot happier.  At least...



STEVE:  At that sense I would because WHOIS is a nightmare.  I have to shut down my email on WHOIS or just it's a torrent.



LEO:  No, I know.  No, you get automatic WHOIS privacy.  Some domains are more expensive, you know, like .tv and stuff.  But the basic domains I think are 10 or 11 bucks a year.  Google's even cheaper, I think.  But it's not about price, is it.



STEVE:  It's really, no, it's really not.  It's about harassment and security.



LEO:  No more upselling, please.



STEVE:  God.  Okay.  Now, unfortunately we can't run this video on the podcast because it's too long, and it's too wonderful.



LEO:  What do you mean?  People will go away from the show?



STEVE:  Well, I mean, I cannot explain to you - the problem is most people are listening rather than watching.



LEO:  By the way, this podcast is awesome, Smarter Every Day?



STEVE:  Yes.



LEO:  You're talking about the printable magnets?



STEVE:  Yes.



LEO:  This guy does the best video podcast ever.  I love him.  He doesn't do very many of them because he's like, well, you can see why.



STEVE:  Yeah, I mean, they're really good.  He went on location to the factory where they're printing magnets.  Okay, so this week's bit.ly link, bit.ly/sn-554.  Everyone within range of my voice, you have to watch this video.  I tweeted it this morning.  People were flabbergasted.  It is just - it is beyond cool.  So I will explain it so that people will go look at this video.  I'm sure you can google "printable magnets" at this point, and you'll find it, too.  Or bit.ly/sn-554.



The concept is our typical magnet has a north pole and a south pole on opposite ends.  And, you know, back in elementary school it was a big red bar magnet with silver ends.  And remember you'd stick it under, and you'd sprinkle iron filings on top of the paper, and then shake the paper, and they would array themselves in the magnetic field lines of force.  And then lately we've been getting fancier magnets, little disk magnets.  And there one side of the disk is north and the other side is south.  So they stick together really tightly and so forth.  These guys - and I'm sure they're just patented till next Tuesday because it's a fabulous concept.  They came up with a machine, very much like a 3D printer, that prints magnets.  But what it's able to do is, at the resolution of a printer, to put down a north or south.  So they're able to generate, on a flat surface, a pattern of north and south.



LEO:  This is so cool.



STEVE:  Oh, Leo.



LEO:  So you can have a custom magnet printed with your logo.  It's not visible on the magnet, it's the magnetic field is your logo.



STEVE:  And what, now, here's the brilliance, is if you have two facing disks with a complex pattern, you can do amazing stuff, like you can have them attract each other as you're pulling them apart until they get to a certain distance.  Then they become a spring.  But then, if you rotate them, they suddenly snap together.



LEO:  What?



STEVE:  Because, oh, it's unbelievable.



LEO:  They're like a lock and key almost; right?  They have to be...



STEVE:  Yes.  You're able to create a high-resolution pattern where the two faces interact in a sophisticated fashion so that it has a highly nonlinear effect.  And you are playing the video, so we're able to see now...



LEO:  Only those watching, but the rest can, you know...



STEVE:  For only those watching.  There's a machine they show where it slowly pulls the magnets apart and measures the attraction or repulsion.  And so you're able to create, like, rotary indents.  Now, here we're seeing one of the coolest things.  Those will not go together.  They're springy.  But if you pull them apart, then they want to snap back together until you rotate them.



LEO:  And then they - boom - fall apart.



STEVE:  And then they snap apart.  Oh, my god.  It is so, so cool.



LEO:  This is going to be revolutionary.



STEVE:  Yes.



LEO:  Can I buy them now?



STEVE:  I want to - I just want a pair of those little handles as a toy.  I'm sure they will start appearing.  So just printable magnets.  You've got to take a look at it:  bit.ly/sn-554.  That just jumps you to the video two minutes and one second in because there's about a two-minute introduction that's not about this, that sort of talks about magnets as we were growing up.  But, wow.  Very cool.



LEO:  This guy does a great job on his podcasts.  He's supported on Patreon, and it's Smarter Every Day.  And every time I see one of these I go, wow.



STEVE:  And he said they're owned by Audible.



LEO:  No, no no no no no.  They have a sponsor called Audible.  You might have heard of them once or twice on other shows.  I don't think they're owned by - and by the way, the company is Polymagnet, P-O-L-Y-M-A-G-N-E-T, dot com.



STEVE:  These guys, they're not printing magnets, they're printing money, Leo.



LEO:  Yeah, yeah.



STEVE:  This thing - oh.  It's just beyond...



LEO:  Smart Magnets.  Printable is not the right thing.  It's kind of more than that.  It's hard to describe.  I think he did a good job, though.



STEVE:  Yeah, I mean, well, because the idea of a high-resolution complex magnetic field - one of the things this does, if you have north and south very close to each other, is the magnetic lines of force don't extend out uselessly into space.  They stay very close.  So it allows a whole 'nother dimension of magnetic strength because it is the flex lines that pull the steel to the magnet.  And so if you keep them high-density and close to the magnet, you end up with a much stronger magnet.



LEO:  Three bucks and 60 cents.  I'm sending them to you.



STEVE:  Oh, you can buy them?



LEO:  You can buy them.



STEVE:  Oh, no.



LEO:  They have a catalog online.  All kinds of magnets.  This is the latch magnet that you mentioned.  They have the spring magnet.



STEVE:  I am so glad. 



LEO:  They have an online catalog, Steve.



STEVE:  I didn't look.



LEO:  Yeah, yeah, yeah, all kinds.  All kinds.  Wow.  You can actually create your own.  They have specifications.  So you could say how much attach force, how much distance range.  Obviously, it's a big industrial business; right?



STEVE:  Wow.  Wow.  Wow.



LEO:  But they're cheap.  They're a couple of bucks each.



STEVE:  So I did want to mention I've been getting a ton of mail, and I found this actually over in the Security Now! mailbag, and I just relocated it, from someone named Ben Pulido, who's in Greenville, South Carolina, and the subject was "Sleep Formula."  He said:  "Steve, I've been a listener to Security Now! for several years.  Thank you and great show, blah blah blah."  And he said:  "But sincerely, thank you.



"My wife has had lifelong issues with sleep apnea, nightmares, shallow sleeping, always being tired regardless of how long she slept or how many naps she takes, et cetera.  8:30 bedtime was her standard schedule, just so she could make it through the next day without crashing.  Sleeping 14-plus hours and then napping later, only to be exhausted, was a way of life in our household.  When I heard you talk about your sleep formula, I had a little spark of hope that maybe, just maybe, things could change.



"Steve, after two nights of taking the formula, my wife is a different person.  She's not completely sure what to do with all of the energy she has now.  To be honest, I'm a little puzzled, too, because for the first time in years my wife was awake and had energy at midnight.  From the bottom of my heart, thank you for taking the time to research this sleep formula.  It has made a drastic difference in our health and lifestyle.  Best regards, Ben."



And I just wanted to mention I've been so busy with SQRL and with Never10 that email has been coming in, it's just been piling up in the Healthy Sleep Formula feedback bin.  There is a feedback link at the bottom of that page for anybody who hasn't sent anything back.  And it's - I don't have a sense yet.  It doesn't work for everyone, but we're well over 50-50, is sort of just my rough sense.  I'm seeing lots of people who, I mean, this has just changed their lives; and other people are disappointed because nothing happened.



So someday I will find some time to get back to that and spend some more time putting up some more documentation.  I have ideas from all the research about things that probably, you know, things like Vitamin D and magnesium status are other things that are important, that are not part of the formula because I regard those as sort of foundational things that someone should be doing just for general good health.  But they are things that could keep this from working.  So anyway, it's been a huge success overall, so I wanted to thank everybody for their support and for the feedback that they've provided.



And also most of the mailbag was feedback about the last PC I will ever build.  We have a huge audience, not surprisingly, of PC builders, and tons of input about all aspects of the PC.  There's no way I can respond and thank everybody, so I just wanted to do this as an all-in-one thank you for all the feedback I got.  Super, super interesting and useful.



Oh, and this tied into Leo's Tech Guy show.  I found this also in the mailbag, Alan Farough in Kanata, Ontario, Canada.  He said:  "I was listening to Leo's 'The Tech Guy' show.  He was talking about SSDs and spinning hard drives and the fusion drive compromise.  I was curious, how does SpinRite see a fusion drive?  Leo mentioned the drive has special firmware to marry the two technologies.  I can see that would have to be the case.  Does SpinRite bypass the firmware?  If so, how could it do this?  Would you only want to run a fusion drive on SpinRite Level 1 or 2 so as not to burn out the SSD cells?"  He says:  "I do not have one of these drives, just curious about it."



And so I just wanted to address that briefly.  A fusion drive is a sort of a - it's a variation on the caching drive that we've had for a long time.  What we've always had for years is a volatile RAM cache in the hard drive that buffers what the drive is doing.  So, for example, when you read a sector, we know that the chances are great that you're going to be asking for successive sectors downstream of the one you just read.  So the drives will typically go ahead and read.  Or, if you ask for a given sector, sometimes the heads come to the track at the wrong location.  Drives now all start reading whatever they encounter, even if they haven't gotten to your sector yet, because those may actually be upstream of the sector you've asked for.  So they will have already read it during the previous revolution.



So the point is that as much cleverness as we humans could bring to bear have been brought to bear in improving hard drive performance by putting a volatile cache between the user and their computer and their magnetic media, which is a lot slower.  So a fusion drive, of course, marries a, well, there's still RAM.  But there's also SSD, the idea being that you sort of have a - it's like in the same way that a CPU has a level one cache, a level two cache, and a level three cache, now hard drives are getting multiple tiers of caching.  In this case, the SSD is a buffer in front of the hard drive which is able to provide less speed than the RAM buffer, but more speed than the hard drive.  So again, we're bringing the latest technology to bear, creating a hierarchy.



What v6.1 of SpinRite will do is deliberately disable the SSD portion, or allow SpinRite to test it explicitly.  That is, there is an API in these drives, an extension to the venerable AT8 spec, which manages both the large sectoring that drives now have, and also the idea of putting nonvolatile SSD in front of the hard drive.  All of the hooks are available, and I'll be taking advantage of them with the next generation.  Now, I would say running Level 2 is the right thing to do.  You are reading from what the SSD may have.  And as soon as it doesn't have it, then you're pulling from the hard drive behind it.



So it's not clear what pattern testing, what doing full data inversion, what effect that would have with a fusion drive.  It would be a function of exactly how they've implemented their algorithm.  And there isn't really a standard for that.  That's every manufacturer inventing their own - and they consider it proprietary - protocol.  Like, you know, how many bands they divide the SSD into, what their caching algorithm is, is it an n-way cache, is it a simple MRU cache.  There are any number of ways that this could be designed.  So it's up to the manufacturer to decide how they want to.  But the AT8 spec does give us the hooks for getting underneath all that.  And that'll be another one of the features of 6.1.  I've already got it in my notes for where 6.1 will be going.  So we will be taking care of that.



LEO:  Nice.  Excellent.  Let's take a break, come back with questions.  I've got questions; Steve's got answers.  We wouldn't do it the other way because it would be very boring.  Steve has prepared some questions.  And by the way, I asked him before the show, you going to talk about WhatsApp?  And he said a little bit.  But he said, "But I like to have some time to - I don't want to answer off the cuff."  And I really admire that about you, Steve.  Everybody else, including me, we're pundits.  We just make shit up as we go along.  You, you, my friend, you try to actually be correct.  It's novel.  It's kind of cute.



STEVE:  Just me.



LEO:  No, I'm just teasing you.  But I really do really appreciate that about you.  And so here we go, questions asked at his website, GRC.com/feedback or through the Twitter, starting with an anonymous listener who used Shodan to look around at SMB:  Steve, you mention in 553 that, since SMB, CIFS, and Samba should not be exposed to the Internet by any right-minded person, that the risk of Badlock was being somewhat overstated, given that your listeners were all likely right-minded people and therefore wouldn't open up SMB ports inbound on their routers, would they.



But go to Shodan and, of course, enter "SMB port:445," that's the default port, and Shodan shows plenty of systems exposing their IPC, inter-process control share; 250 of them were in the U.S.  That's actually not many.  That's pretty good.  But more than 10,000 in Russia.  One of the ones listed on the first five pages that I can view with a free Shodan account, almost all of them - oh, of the ones on the first five pages, almost all of them said they were a Dune [D-U-N-E] SMB server, which is apparently some sort of media player [dune-hd.com] which is headquartered in Taiwan, with engineering teams in Moscow, Russia, and Kiev.  The company also has offices in the U.S. and a distribution network that covers more 60 countries.  They seem to be very proud of all the awards they've won.  Unsurprisingly, none of them appears to be for outstanding network security.  Dune servers, wow.



STEVE:  Oh, boy.  So just a reminder that next Tuesday is Patch Tuesday for Microsoft, and the big reveal for the Badlock bug, whatever that is.  People have been tweeting me, saying, "Do you have any news?  Do you know what it is?  Could we get a early heads-up?"  And it's like, no.  I've found nothing about it.  If it's as bad as they say, and they're not just overhyping this, then I understand the need to keep a lid on this.  It literally would be a need-to-know basis where "need to know" means you are in charge of fixing any implementation of SMB, and nobody outside of your immediate circle.  Because to hear these guys talk about it, the Badlock people, the moment this becomes public knowledge, there's going to be a land rush for finding and leveraging this vulnerability.



So again, I'm glad that our anonymous listener did a little Shodan look.  I'm just scratching my head.  How could port 445 be exposed, whatever this Dune SMB server is.  I guess it's, well, this Dune HD, it's a media player that has opened SMB to the Internet.  It's like, oh, lord, okay, well.  So I don't think you even need...



LEO:  Is it going to stop working on Tuesday?



STEVE:  I don't think you need an exploit right now.  You just, you know...



LEO:  What movies you got?



STEVE:  It's got 445 open.  That's an invitation.  You don't need Badlock.  You can just use good lock.



LEO:  Yeah, just use built-in Windows networking.



STEVE:  Lord.



LEO:  Ben Schneider in Cincinnati, Ohio recently encountered Locky, that new ransomware.



STEVE:  Ooh.



LEO:  He was listening to 553:  I'm a lead network and system engineer for a managed services provider and, as such, the person ultimately responsible for security for all of our clients' networks.  That's about 20 to 30 different small-to-medium-sized networks.  Last Friday, one of our larger client's systems got infected with Locky.  When the user found he couldn't get to his documents, well, he just logged out and went home early.



STEVE:  Oh, darn.  Nothing's working.



LEO:  When everyone came in on Monday, we started getting calls that their users couldn't access their files on network drives.  It took all day; but since we do incremental backups every hour on our servers, we were able to restore everyone's files.  Good man.



STEVE:  Yup.



LEO:  He's earned his keep.  I have been seeing a distinct uptick in the amount of Locky infections in the last week.



STEVE:  Yeah.  I think Locky is the next really bad one.  And I just got a kick out of this, you know, that all of the files are encrypted, it's Friday afternoon...



LEO:  I'm going to go home.



STEVE:  Oh, what the heck.



LEO:  You know what happened.  He thought he did it.



STEVE:  And that leaves this thing a week, or a weekend...



LEO:  Get all those files.



STEVE:  ...to crawl throughout the network, go find all of the shared server directories and encrypt them all.



LEO:  You know what happened.  He thought he did it.



STEVE:  Probably.



LEO:  And he just said [crosstalk].  I'm going to go home.



STEVE:  Well, anyway, Ben, sounds like Ben is on the ball.



LEO:  Good man, yeah.



STEVE:  Yeah.  Managed service provider, so that probably says that these small companies are using remote network storage for all of their work.  And so they've centralized management at his firm, and his firm is doing incremental hourly snapshots, so nothing was lost.



LEO:  Nice.  Good.



STEVE:  That's absolutely the way you want to do it, either in-house or outside.  But, you know, bravo.



LEO:  He earned his fees.



STEVE:  And again, when I saw this, I wanted just to remind people there's no excuse.  I mean, you've got to have a backup.



LEO:  Versioning is the key.



STEVE:  In this day and age.



LEO:  Yeah.  Patrick Harrington is wondering how to make the best case for HTTPS:  Steve and Leo, thank you for all your work and your expertise.  I'm in a class which required me to register with a library on campus so I'd be able to enter the library.  It has some sensitive material in its collection.  Ironically, the registration page is not encrypted with HTTPS.  Part of this registration involved submitting some personal information that I try to avoid sharing online unless necessary. I bit the bullet and submitted it.  I didn't really have much choice.  But I would really like to bring this up with someone in the library because it's only getting easier, and this is a case where the encryption would be particularly important, given the information being transmitted.  Any suggestion how to bring this up?



While Security Now! has been very helpful in expanding my understanding of cybersecurity, I have a lot to learn; and I suspect those in this library do, too.  It's gotten easier to move to HTTPS.  Institutions have priorities.  And I'd like to make a convincing case for making this change despite being a neophyte with respect to cybersecurity.  I guess I can thank my English degree for being able to use the word "neophyte," but my network security skills could use some work, and I'd like to sound as savvy as possible.  Thanks for the show.  Patrick.



I bet you they're WiFi, too; right?  So insecure and WiFi.



STEVE:  Okay.  So, yeah.  There are several interesting aspects to this.  First is I wanted to make sure that Patrick knew, just for the record, that the form you're on does not have to be secure for the form's transmission to be secure.  So because the way in this kludge solution that we have that sort of outgrew HTTP, where the original technology was for browsers to be receive-only, somebody said, hey, how can we send stuff back?  And so the way you send something back is by asking a question, that is, essentially doing a query of a special type, typically called a post, where in the body of the post you're actually making a query, but you're sending information with the query, as the query.  My point is that the submission could be secure.  I'm not saying it is, but there's a chance.



Now, the fact that you're filling out a form which is not secure is not a good sign.  So even though it's possible that when you hit the Submit button, that's an HTTPS connection and transmission, and back in the day that's the way this was done.  For example, when websites were almost completely HTTP, only the username and password when you're logging in, that button would be secure and would briefly protect your username and password in flight as it got to the server, and then you'd be back at, I mean, actually the page you would return to would be secure because it would be a response to a secure query, which was your username and password being sent securely.  But then the site was always in a hurry to put you back down to HTTP.  And so when you click the link, you return to nonsecure.



So the fact that you are looking at an unsecured form is worrisome.  But remember, this is just sort of the tip of the iceberg of the worry because, if security is either a second thought or not a thought at all in this situation, for example, if it turns out that the form submission is not, even that is not secure, then that means that, as you are right to worry, Patrick, the data in flight could be eavesdropped on.  But that also sort of lends a concern to the security of the data once it arrives.  That is, this really feels like a situation where there's just no concern for security at all.



And, I mean, nothing that we're seeing would lead anyone to believe that, oh, yeah, they didn't really worry about giving you a secure form to fill out, or maybe not a secure transmission of the form data.  Why would we think they're doing anything secure with the database where it goes?  So, and then the last thing I wanted to make, or the last point, was that, boy, he asks what case do I make?  Well, so there's a lot of things to think about, what I've just said.  But the other thing we've seen is how difficult it is to get any motion.  Everybody's busy.  Everybody has, like, stuff to do.  And the good news is security is in the air.  The one thing the Apple and FBI fight did was really up the profile of this whole issue.



LEO:  Yeah.



STEVE:  So that, you know, people who were not at all interested in, weren't even, hadn't even given it a thought before, are suddenly, wow, what's going to happen?  And suddenly they're like, it's an issue now.  So the good news is this is probably the right time to mention it.  And then the trick is how do you get someone to allocate resources that are probably scarce, which are probably committed elsewhere right now, to do something that is, like, preemptive.  And that's the problem.  This is preempting a problem.  But it's certainly a really great point you raise that, you know, here you're filling out sensitive information, and you have no sense for where it goes afterwards.  But in this case Patrick had no choice.



LEO:  Well, I'm glad Patrick listens to the show and realized the risks.  That's a good thing.  And he's no neophyte, as far as I'm concerned.  He might be a troglodyte, but he's no neophyte.  Peter Haines - I don't know, that's actually not quite right either.  Peter Haines in San Bernardino wonders about encryption of data at rest:  Steve, long-time listener, first time emailer, yada yada.  My employer is wanting to improve our security to come closer to PCI standards.  That's the credit card security standards; right?



STEVE:  Yes.



LEO:  One aspect is encryption of data at rest.  Microsoft's database solution is SQL Server Transparent Data Encryption or TDE, but Wikipedia has a reference to a recent article on breaking their encryption from Simon McAuliffe that suggests TDE doesn't offer any practical security at all.



If I understand it correctly, it says there's a whole class of problems like SQL injection that it doesn't help with at all. And those that it potentially might help with, it doesn't really because it stores the encryption key with the data at rest anyway.  Oh, great.



STEVE:  Yeah.



LEO:  Probably unencrypted, just sitting there in a file called "encryption key."  What's really going on here?  Do we live in a world where a company like Microsoft can sell a security product that adds no practical security?  Or is there some practical benefit?  Love the show.  Thanks, and keep on spinning right.



STEVE:  So this is a great question because we like talking about technology and the way stuff works.  So this is a database that has to be online, presumably.  It's a SQL Server, I mean, we don't know exactly what the usage mode is.  But in your typical corporate infrastructure, your servers are on 24/7, even when your employees go home.  A lot of them are working from the home and working in the evenings and on weekends.  So they probably still need access to corporate resources.



Compare this to a TrueCrypted hard drive because they're very similar.  The idea is that, with a TrueCrypted hard drive, it, too, while it's in use, the encryption key is in RAM.  And in fact we've talked in years past about various exploits, for example, you know, spraying Freon on the RAM and pulling the RAM out of the laptop and running over and putting it somewhere else and then powering it up and sucking out the data from the RAM.  Or sticking a Firewire interface, because a Firewire has DMA access, into main RAM, and taking a snapshot of main RAM, and then finding the TrueCrypt key that's sitting there in RAM.  It has to be there because it's in use in order to dynamically encrypt data coming in, being stored on the hard drive, and decrypt data that's coming from encrypted hard drive back into use.



So the reason we bother with TrueCrypt of BitLocker or VeraCrypt or any of these is when it's not in use.  That is, when we shut the system down, we log off, we power down, that key is lost.  If then the laptop is - we lose control of it, it's stolen or lost or whatever, what's there is of no use to anyone.  The problem with - so that's the model.  Now we move that model into a real-time online database.  And I have to agree with anyone saying, eh, how is this useful?  It's useful if bad guys came to raid the company and unplugged all of the servers and took them out, like the FBI has been known to do.  They just come in, and they yank everything out, and they take it away.  Well, in that case, the SQL key will fall out of RAM, and they'll have an encrypted database.



But frankly, this model, it's encrypted all the time.  So access to the physical hard drive would show pseudorandom noise.  Queries through the SQL interface would show you plaintext data.  So that's the thing to recognize.  I kind of agree that it's not clear how valuable this is.  It doesn't cost anything to have it in there, so I'm not surprised Microsoft's got it.  Maybe it's a bullet point that Oracle offers, and so Microsoft said, okay, yeah, we're going to do that, too, on-the-fly encryption to the physical storage.  I can't really think of a great deal of value that it adds.  But that's certainly a reason to wonder about what use it is.



LEO:  What use is it?



STEVE:  What use is it?  Because there isn't a mode, probably, where, I mean, unless it's on a laptop, for example.  But in a corporate setting, it's probably on 24/7, so the key is always there.



LEO:  But that is the challenge in many situations.  I mean, it's not an unusual challenge.  Continuing on.  Question #5, Mr. Gibson, comes to us from Ken Drexler in San Rafael, down the road a bit, California.  He hit a bump with Never10 and Norton:  Hi, just tried to download never10.exe from GRC.com.  It downloaded to my desktop.  That's where I put my downloads.  Then Norton Internet Security went to work and flagged it as a threat.  It called the threat WS.Reputation and - pardon me, WS.Reputation.1 - and reported that it had deleted it.  Wait a minute.  I looked in the Trash; but, no, Norton didn't put it there.  How do I get never10.exe installed?  I suppose I could disable Norton temporarily.  Is there another way?  Thanks for Security Now! every week.



STEVE:  So I got a kick out of that because I had a lot of reports from people.



LEO:  Hey, Norton.



STEVE:  And this is essentially social networking meets Internet security.  It's what we've come to, and sort of as a last resort, is that now our antivirus is using reputation.  It's not my reputation, or actually it might be the reputation of the certificate that signs the software.



LEO:  Oh, interesting.



STEVE:  What happened was I was using a certificate that still had about six months on it, and it was an SHA-1 certificate.  And so there were some complaints from some Windows systems.  Some Authenticode verification was configured not to accept SHA-1 signed software any longer.  So it's like, oh, really?  Okay.  So I contacted DigiCert; and as I mentioned last week, they jumped right up and helped me, and within hours I had an SHA-256 cert.  But it was a new certificate.  So it, unlike the certificate I had been using for years, had no reputation.  And so the, what was it, Microsoft calls theirs the SmartScreen.  And so for about 24 hours, anyone who was trying to use the newly signed, or signed with the new certificate, would get a warning from SmartScreen, or in this case from Norton, saying, eh, we don't really know about software signed with this cert, so we're just going to not.  You can't have it.



LEO:  Wow.



STEVE:  And so, briefly, deleting it was all you could do.  It was obviously perfectly fine.  But unfortunately what the world has come to is a better-safe-than-sorry.  And, I mean, I can understand.  Now I have a reputation with this certificate, and it's a three-year cert, so everything that I do from now on will sail right through.  But for a period of time it was, eh, we're going to just say no until we determine one way or another whether this looks like it's good or not.  So it's an interesting new little hiccup for anyone with a newly minted certificate who's creating something that a lot of people want to have access to.  You actually may not be able to get it to them for a day.



LEO:  Wow.  That is kind of unexpected.



STEVE:  Yeah, isn't it?  But you can see how it's evolved.  It's like the only thing - it's, you know, we've talked about blacklisting and whitelisting, the argument being that only, in the same way like with a firewall, you don't block the bad ports, you open the good ones.  And, that is, you blacklist everything, and then you whitelist the ones you know you need.  Similarly, there are corporations now that are using a whitelist rather than a blacklist.  Only specific applications that have been given the green light by IT are allowed to run within that corporation.  Those systems will not run unauthorized software.  I mean, they've gotten to that point as, I mean, just as matter of being defensive.  They have no choice.



LEO:  I suppose it's - you're too diplomatic to say, but I might say it wouldn't be - if you're not going to upgrade, you're doing Never10, what are you running Norton for?  Get rid of Norton.  You don't need an antivirus.  I guess if you're on XP you might.  But you don't need an antivirus.  That's dumb.  Not Norton, anyway.  Lisa in Oregon worries about - Steve didn't say that.  Leo did.  Just so you know.  Lisa in Oregon worries about unintended consequences of Let's Encrypt's success:  While it's great that millions of additional websites now have HTTPS certificates, thanks to the free and efficient Let's Encrypt CA, I'm concerned that our corporate IPS and firewall will be unable to inspect the increasing percentage of incoming encrypted traffic and therefore be less able to block malicious packets.  Is that something I should worry about?



STEVE:  Well, I liked this because I just wanted to remind people that I've reversed myself on this issue recently.



LEO:  What?



STEVE:  Recognizing that a corporation has a right to control their bandwidth, and as the world becomes encrypted, as malware will thus be traveling over encrypted connections, a corporation, I think, is right to require their systems to have a certificate authority which they sign and their perimeter able to mint those certificates and crack open encrypted communications and inspect it.  I think that individuals working for the corporation, using the corporation's infrastructure,  need to understand that, yes, their communication is private outside the corporation, but within the corporation's network it's company property.  It's company bandwidth.  And so they don't have an absolute right to privacy when they are using corporate infrastructure.  And so this is inline with that.



So if Lisa's company doesn't have the ability to have an appliance that is proxying connections, then she's absolutely right.  It will be virtually useless in the future.  And so there is unfortunately, well, or necessarily a huge market for appliances which will be doing this.  It's just going to be standard operating procedure in the future.  And so I have gone from thinking that it's just a horrible thing, the idea that an encrypted connection is not actually point-to-point.  But recognizing that within a corporate infrastructure - different from an ISP.  That's a different story.  I'm worried about the day that happens.  But within a corporate infrastructure on their property, their network, their bandwidth, and you're working as an employee, I think they have the right to inspect the traffic to protect themselves from something that might come crawling down some query your browser makes.



LEO:  Mike in Chicago bring news of an uber-cool facility or service.



STEVE:  Oh, Leo.  Go.



LEO:  I like the name.  Hi, Steve and Leo.  I'd like to ask your opinion on a file transfer service called File Pizza (file.pizza).  It was developed by two graduates from Steve's alma mater, UC Berkeley.  It's great.  Files aren't stored anywhere.  They're sent from your computer via web browser using WebRTC.  But this is my main concern.  You mentioned on previous podcasts issues with man-in-the-middle attacks on WebRTC.  So my question is, is this service secure?  Thanks.  Mike.



STEVE:  Okay, now, first of all, who knew that pizza was a top-level domain?



LEO:  I knew that.  I knew that.  See, if you were on Hover, you would know there's all sorts of fun top-level domains.  Hover has them all.



STEVE:  Oh, I'm getting old, Leo.  Pizza?



LEO:  Oh, man.  There's all...



STEVE:  In my day, we had .com, .org, and .net.  And maybe .gov.  



LEO:  Oh, no no no no no.  Lisa's new website is LisaLaporte.ceo.



STEVE:  Nice.



LEO:  How do you like that; huh?



STEVE:  So everybody, this is uber cool:  file.pizza.  It is a point-to-point service.  It is on GitHub.  It's all open source.  It's open protocol.  It leverages the webtorrent protocol and WebRTC.  It solves the problem of you wanting to send a file to someone else in real time.



LEO:  That's the problem I have with it.  Unfortunately, they have to be waiting for it; right?  You have to be doing it at the same time.



STEVE:  Correct.  Exactly.  So you go to file.pizza.  You click on the button to choose the file you want to send.  And it finds it, and then it gives you a tag for you to provide the other person.  I tried it this morning, and my tag was file.pizza/lobster-zucchini-duck-pecans.  So they're using word salad passwords:  lobster-zucchini-duckpecans.  And what's nice is you could say that over the phone.



LEO:  Right.



STEVE:  You can email it to someone.  And it's still, given that their vocabulary is large enough, and these are going to be transient, and they could easily, since that's going to go to them, they could do all kinds of brute-force protection and so forth.  So essentially their service, the file.pizza server, is in sort of the same way that a NAT server allows NAT penetration, that is, allows endpoints behind NAT to talk to each other, they're just providing the IP address to each other in order to connect your two browsers.  And then the WebRTC protocol performs the file transfer.



So it solves the problem of needing to stage a big file, or any file, somewhere else first, like uploading it to some file upload site, or to Dropbox, and then giving someone a public Dropbox link, you know, that kind of solution.  Here you say, I'm ready.  The file's ready to go.  You send them this link that you get from your web browser, which comes from the file.pizza server.  They put that in at their end, or just click the link, and their browser downloads the file directly from you.



Now, the WebRTC protocol provides encryption.  But once again, we have an authentication problem because there is sort of no authentication in this.  It's easy to use because no one's worried about authentication.  So what I would say this offers is security - I'm sorry.  What it offers is convenience, not security.  If you really care about security, encrypt it first.  I heard you mentioning on one of the shows recently, Leo, that just PKZIP has good security, and it does.  What's the other one that I like?  Is it AEScrypt?  AxCrypt.  I think it's AxCrypt, A-X-C-R-Y-P-T, is also a very nice, super clean, local file encryptor.



So if you're worried, encrypt the file first, then send it, and let the person know what the decryption key is for your encryption.  Or if it's just something you don't care about, don't worry about it.  I just wanted to say it cannot be secure because there is no authentication.  So there is a man-in-the-middle problem.  But what this is, is convenient.  And so many times for things that don't absolutely have to be secure, this is just a cool point-to-point solution.  Oh, and I will mention many people, I tweeted this this morning, lots of people's browsers did not like the file.pizza server because it has a Comodo certificate.



LEO:  Oh.  What do you expect from a .pizza site anyway?  That's funny.



STEVE:  So it would be nice if these guys would fix their certificates.  



LEO:  At least it's got a certificate.  I mean...



STEVE:  For what it's worth, anybody else could bring up this server.  They're making it available.  It's publicly available.  You could grab a domain, bring up a server, and then knit these connections together for people.  Anyway, very cool.  If somebody has this problem, this'll fix it.



LEO:  I use - because I'm not, you know, I'm transferring files to, like, radio stations.  They're not waiting for me.  So I use a service called Transfer.sh, which is also open source.  You could fork it on GitHub.  One of these days I'll get around to setting up my own server.  But you can use Transfer.sh right now.  And it's a command line.  I mean, this is geeky.  It's a command-line server.  So you use cURL to upload to it, or you can write a little script.  And then you get a unique ID.  And of course this is completely insecure.  But if you encrypt before sending, it's completely secure.  And then you can give somebody that link.  I do it to transfer stuff from home to work, and to do radio show stuff.



STEVE:  Didn't the TWiT network have a sponsor who was providing...



LEO:  Yeah, ShareFile, which is, of course, a better corporate solution.  And I still use that.  And Dropbox will do it and stuff, too.  But this is nice for quick-and-dirty command-line sharing.  And what's nice is it's free up to 10GB.  But they don't store it for more than two weeks.  So it just, boom, it's just there.  But I use command-line all the time, so it's nice just to say, you know...



STEVE:  Yeah.



LEO:  And I wrote a little script that says transfer.  So I say transfer file, and it returns the URL to me.



STEVE:  We've been following your abandonment of the GUI, Leo.



LEO:  I am loving, well, I'm not abandoning the GUI.  I'm abandoning Windows is what I'm doing.  Although now I'm trying this new OS called NixOS that is highly secure, Linux-based, but you build it yourself.  It's like Arch, but you build it yourself.  And that way you know exactly what's going on and stuff.  Linux is getting better and better.  I'm telling you, Steve, stop the insanity.



STEVE:  I'm only here because I'm able to produce something like Never10.  Remember, there's more Windows OSes than anything else, still.  Still the  majority platform.  And the people on Windows are the ones who need me, so...



LEO:  Yeah.  Somebody in the chatroom, and I don't remember who, but I'm going to give it a little plug, mentioned a Spanish distribution based on Arch.  The idea of Arch Linux is you install just what you need and no more.  But the problem with it is, I mean, literally that could just be command-line and nothing else.  So somebody in the chatroom recommended something called Antergos, A-N-T-E-R-G-O-S, dot com.  It's a free Linux distro that gets you started with Arch.  So this is kind of a cheat.  But you get a whole GUI based on GNOME, ready to go.  And then but you still have Arch under the hood, so you can continue to - it's a rolling update and all that stuff.  So I've been playing with it.  And I have - see all these keys?  This one's Apricity.  This is Antergos.  This is - I don't use Ubuntu.  That's Debian.  You know, just I'm trying them all out.  It's fun.



STEVE:  Right.



LEO:  Yeah, I get nothing done.  But who needs to get anything done?  I have to say it's better than running the alternative, which is running Windows.  And I'm a little worried about Mac.  I really feel like Apple doesn't, you know, they make so much money on iPhone, they don't really care about operating systems anymore.



STEVE:  I wanted to mention that you guys were talking about Safari on MacBreak weekly.



LEO:  Yes.



STEVE:  We don't talk about it often because it's not in the news all the time in the same way that Chrome and Firefox and IE are for various reasons.  But I saw a recent very nice write-up from a serious hardcore web designer who prefers Safari over all the other browsers in terms of its support for standards and its speed.  Again, it's modest in that it's not making a big bunch of noise.  But it's there, and it's solid, and it's working.  And Apple's clearly giving it some time.



LEO:  Yeah.  And it's based on WebKit, so it's open standards.  I mean, you know.  Chrome used to be WebKit.  They forked it.  Moving along.  We've got more to do.  Norm Aylward, currently in Thailand, has second thoughts about SNMP - Simple Network Management Protocol.  You mentioned it last episode.  But I had understood from many articles on the web that it had security issues, giving out too much information.  I think this was especially true on the older version.  I have SMP shut off at the moment in Smart Switch and routers.  I have two ISPs - they go down a lot here - and two routers feeding into a Peplink 30 balancing router, then to a D-Link DSG 1210 switch.  The Peplink does have a SNMP trap in Version 3.  So maybe it is safe to turn this on in the network.  What do you think?



STEVE:  So I'm so glad Norm asked this because it was really, I considered it a faux pas of mine last week not to talk about security.  I was mentioning that many routers offer the ability for external software like the NetWorx, N-E-T-W-O-R-X, utility, to monitor the bytes flowing in and out of the WAN interface as a really cool way of managing and keeping an eye on the overall bandwidth usage within a network.  And I should have mentioned SNMP security because it is a huge issue.  So Norm is exactly right.  I'm assuming that nobody would turn it on externally, that is, on the WAN side.



What happened historically is that it was a very nice tool which network engineers used for managing bandwidth.  And so big iron routers had SNMP on, like making it available.  And it also has a default well-known username and password of "public."  Which is meant to warn people that, by the way, the password is public.  And so don't leave it set to public if you don't want it to be public because otherwise it's public.  But everybody, of course, did.  And we went through a whole phase in the industry of SNMP nightmares.  Because it's not just only a passive read-only protocol.  There is a read-only, and there is a read-write password.  And if someone gets write access, they can actually reconfigure your router through the Simple Network Management Protocol.  It's what it sounds like.



So I'm so glad this came up because, if you were to turn on SNMP, you want to make sure you're doing so for your LAN side, that is, so that it's LAN-facing and not WAN facing.  Otherwise you would be potentially opening yourself to a problem.  And by all means, change the password in any event so that only you and the utility that you want to have monitoring your router is able to do so.  So thank you, Norm.  I was talking only about the technology and not the security of it last week.  And that was wrong.



LEO:  Andrew in Virginia wonders about VLANs for security:  You talked about VLANs briefly when discussing IoT security.  You didn't really explain how they work, or don't, as a security measure.  Perhaps I missed a previous discussion of that.  I don't think we've talked about VLANs before.



STEVE:  No, we haven't.



LEO:  If not, could you go over how VLANs work for security, and maybe in the context of Internet of Things?  Thanks.



STEVE:  I'm going to do so very quickly now, with a promise that we will talk about it in depth in the future.  Many people misuse VLANs, so Virtual LANs, as a security solution.  And it is more of a management convenience solution than a security solution.  In theory, you could use it for security.  In some contexts, if you absolutely knew how every piece of hardware worked, but there is a history of - it's called "VLAN hopping," in fact, it's been named, where the VLAN encapsulation is broken out of.  In the IoT world, I'll just say I don't see much application because the VLAN security, such as it is, which is to say not very good, only applies usefully to wired situations, and only where you've got switches that, again, the switches - excuse me, I've got a little something tickling me.



The switch is the negotiator of Ethernet frames passing through.  And many of the exploits have been exploits against, like, small - they're called CAM, Content Addressable Memory tables that switches have to manage which ports of the switch are associated with which virtual local area networks.  And so you're depending upon the switch to route the traffic out particular ports.  Well, IoT is more often than not wireless.  So in a wireless mode, your Ethernet is in the air.  So VLANs make no sense because everybody can see everybody else's Ethernet frames.  So even if you use them, they'd be providing you no security.



So for now we'll just say I don't really see an application.  They can be used, if you really understand the way your hardware works, and if it's hardened against VLAN abuse.  But it's much easier to use it in a wired setting than in a wireless setting, where, again, because it's about physical Ethernet connection security.  And in a wireless mode the packets are in the air.  Anyone can pretend to be on any VLAN and see packets, if they were part of an airborne VLAN.



LEO:  Yikes.



STEVE:  Yes.



LEO:  A paranoid listener in Cairo, Egypt wonders about built-in drive encryption:  Nowadays, a lot of laptops are sold with self-encrypting drives.  We have SSDs that claim to be FIPS 140-2 OPAL compliant, meaning the data on the SSD or hard drive is always encrypted at rest.  In all these cases, the drive has a key that is encrypted by the user's ATA password when set in BIOS; or via special interface to BitLocker, that's of course in  Windows; or a default one, if the user hasn't specified one or enabled BitLocker.



The question is, in light of the recent Apple/FBI debacle and the clear privacy implications, are such drives really safe?  And if I were in Cairo I'd be asking this question.  I think this is reasonable.  Or is the FIPS 140-2 standard also backdoored in some way by the government?  I wasn't able to find useful information when researching this, so I was hoping you could shed some light on this in some future episode of Security Now!.  Thank you.  I wish you guys the best.



STEVE:  My sense is, and just sort of being a skeptic, is we never hear of law enforcement having any problem with such drives.  



LEO:  Mm-hmm.



STEVE:  You know?  It's a big problem when the phones are encrypted.  But, you know, people's hard drives, when they were using TrueCrypt, oh, yeah.  Brazil couldn't crack someone's hard drive that was with TrueCrypt, and so they sent it up to the states here for the FBI to take a crack at it, literally.  Somehow, encrypted hard drives that are encrypted natively, never really hear about them being a problem.



LEO:  Well, that's telling, isn't it.  That's very...



STEVE:  Uh-huh.  That's sort of a little inverse, an inverse warrant canary...



LEO:  Yeah.



STEVE:  ...is the fact that, eh, that doesn't seem to be a problem for anybody.  And I have heard anecdotally, and I mentioned this a week or two ago, that I'd heard stories of drive manufacturers being able to open them, under warrant from a court order through law enforcement.  So I think, again, great security for somebody stealing your laptop.  I would not trust it for, I mean, if you absolutely, in Cairo, if you absolutely had something that you knew nobody could get into.  I mean, for example, even if it were brute-forcing, we don't know anything about the key derivation function.  Is it deliberately set, I mean, even if there is like a deliberate slowdown for password guessing on a drive, I mean, there's never been any talk about 10 strikes and you're out, where you keep guessing the ATA key.  All it does is it just gives you different gibberish.  And so my sense is it's at best very weak encryption.



Now, nice from a standpoint of decommissioning drives, where you use the password from day one.  The drive is always encrypted.  And so when you destroy the password, then presumably no one can get to the drive.  That is, it's just gibberish.  You don't have to do the whole cryptographic wipe of the drive because it was always just gibberish, if you can really affirmatively destroy the password.  Again, I don't trust it.  In this day and age, if you absolutely had to have good security, I'd use TrueCrypt.  BitLocker, I'm using it on my Windows 7 laptop because that's all the encryption I need.  We've got to get away from this idea that security is absolute.  It just isn't.



And we'll be talking about this more with WhatsApp next week.  It's something you've heard me say before.  When you were using Telegram, Leo, it's like, yeah, that's good enough.  Is it perfect?  No.  They made up their own encryption algorithm.  It scrambles up people's brains when they look at it.  It's like, who came up with this?  But the bits are scrambled.  That's fine for sending notes to your partner about when you're going to be home for dinner.  But is it incredibly great encryption?  No.  But it doesn't have to be.  So we need to start thinking in terms of this stuff being relative because that's the reality.



LEO:  Encryption comes in layers.  Or security comes in layers.  And the idea is to...



STEVE:  Yeah, and we don't absolutely always need perfect security because it's a hassle.  You know, you're going to sacrifice some convenience.



LEO:  And you said TrueCrypt.  You meant TrueCrypt, not VeraCrypt or some other?



STEVE:  I meant TrueCrypt.



LEO:  Okay.  Continue to use TrueCrypt.



STEVE:  Yeah, I'm hearing some weird things about VeraCrypt, like every time you log in, it takes a minute because they've, like, gone totally overboard with their password-based hashing, believing that asking someone to wait a minute is reasonable to log into their hard drive.  It's like, what?



LEO:  You only do it once; right?



STEVE:  Well, every time you turn your computer on.



LEO:  Right.  Another nice thing about many Linuxes.  You can use their logical volume manager and encrypt the entire hard drive as part of the boot process.



STEVE:  Yup.



LEO:  You enter a password, and it's good, strong encryption.



STEVE:  Yup.



LEO:  And it's all open source, which means, if you have the abilities, you can verify it, or somebody else...



STEVE:  And we know how to do it.



LEO:  It's not hard, yeah.



STEVE:  It's not black magic.  It's just implementation.



LEO:  Yeah.



STEVE:  We know how to solve this problem now.



LEO:  Yeah.  What version of Linux did Snowden use?  I can't remember.  I think they mentioned, but I don't...



STEVE:  Don't know.  I'm a FreeBSD person, myself.



LEO:  That's the one to go with, obviously.



STEVE:  And I do build my kernel from scratch.



LEO:  Ohhh.  You might have seen the...



STEVE:  It's amazing, you see lines and lines of C-compiled going by.



LEO:  [Crosstalk], isn't it?



STEVE:  It's like, this can never possibly work.



LEO:  It's not going to write it.



STEVE:  There's no way every single one of these things works. 



LEO:  I know.



STEVE:  And it, like, half an hour later, look, you have a new kernel.  It's like, you're kidding me.



LEO:  My kernel, it built my kernel.  If you don't build your own kernel, you're nothing.



STEVE:  Nah.



LEO:  By the way, Tails, of course, that's what Snowden used.  And that's what this - that's this key.  Tails is a hardened Linux for use on a boot drive, a boot key.  And, yeah, that's it.  So, yeah.  In fact, I don't - there was recently a little conversation about is any 386 platform really - can it be considered impervious?  And because of the stuff that Intel insists on and AMD insists on...



STEVE:  Oh, there's stuff that Intel is doing [crosstalk].



LEO:  It's built in the microcode.  You can't not - so I think there's some progress along the lines of maybe making an ARM processor that doesn't have this stuff built into it.  So you could run FreeBSD on top of - but if you're running it on an Intel or AMD processor, you could still perhaps be compromised.  I mean, let's not go crazy, but...



STEVE:  Yeah, Intel has this thing, the Intel Management Engine, that's low-level access at the motherboard level, underneath your OS.  And it's like, I immediately go and turn that off.  It's like, I don't want that.  And it's on by default, of course, like everything else.  Okay, my friend.  We're done.



LEO:  We done.  We be done.  I hope you enjoyed this show.  We do it every Wednesday, I'm sorry, Tuesday afternoon, 1:30 Pacific, 4:30 Eastern, 20:30 UTC on TWiT.tv.  You can watch life, as with all of our shows, but we also make on-demand audio and video available.  Steve has copies of the audio on his website, GRC.com.  He also has written transcripts, if you like to read along.  And that makes it easy to search, too.  You can google "site:grc.com" in the topic, and you'll find transcripts and then can listen to the show, if you wish.  He also has lots of other great stuff.  His Sleep Formula is there.  So are SpinRite, the world's best hard drive maintenance and recovery utility, his Perfect Paper Passwords, his Password Generator, lots of stuff.



STEVE:  Never10, which is still going like wildfire.



LEO:  Never10.  How many downloads so far?



STEVE:  107,000.



LEO:  Nice.  That's awesome.  Never10, which you run once, turns off the 10 upgrade, and you just delete the program because you won't need it again.



STEVE:  Done.



LEO:  Thank you, Steve.  We will see you next time on Security Now!.



STEVE:  Thanks, Leo.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#555

DATE:		April 12, 2016

TITLE:		WhatsApp

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-555.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I try to cover all of an insanely busy week's security events and news.  A draft of the much-anticipated Burr-Feinstein encryption bill has appeared; news from the FBI on hacking iPhones; browser and Let's Encrypt news; several CCTV malware bits; a bunch of new ransomware; an amazing "You're Doing It Wrong"; and the result of my deep dive into the Open Whisper Systems "Signal" communications protocol that's finally been fully integrated into the world's #1 multiplatform messaging system, WhatsApp, along with two things that MUST be done to get true security.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  Last week, WhatsApp flipped the switch for encryption for a billion users.  But how good is WhatsApp encryption?  Steve gives us his analysis, plus all the security news, next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 555, recorded April 12th, 2016:  WhatsApp Encryption.



It's time for Security Now!, the show where we cover your security and privacy in technology.  And nobody does a better job than Steve Gibson from GRC.com, the creator of SpinRite, sure.  But many don't know he was the person who literally discovered spyware, named it, and wrote the first antispyware tool.  He's been a security expert and covering security kind of on his own for some time, and of course for the last 10 years right here on Security Now!.



STEVE GIBSON:  Thanks to you.



LEO:  Yeah.  I'm so glad, you know, one of our most popular shows.  And the downloads are going up and up and up.  And I guess really with today's climate I'm not surprised.



STEVE:  Yeah.  I mean, it's a mixed blessing.  We have a huge show.  We're going to talk about the WhatsApp app and its underlying protocol, which has been renamed Signal, in order to simplify it because no one knows how to pronounce the name of the endangered Axolotl healing newt.



LEO:  Axolotl.



STEVE:  Exactly.



LEO:  But it's a good name, A, because you can easily get the domain; but, B, because that's the newt that, as you said, self-healing when its tail gets bit off.  It's a salamander or something.



STEVE:  It says, ah, not a problem.



LEO:  No problem.



STEVE:  Just grow another one.



LEO:  Yeah.



STEVE:  But the news did drop this morning, as expected about [gasp] Badlock, which turns out not to be. 



LEO:  Wasn't that bad.  Oh, good.



STEVE:  We have a draft of the Burr-Feinstein bill that we've been talking about for several weeks and anticipating; news about the country of Hungary going even further than Burr and Feinstein; news on the iPhone FBI hack; some worrisome news about some innards of Firefox's extension-handling architecture.  Let's Encrypt gets a huge new supporter with a gazillion domains.  Two weird coincidences - coincidences?



LEO:  Yeah, or coinkydinks, depends on...



STEVE:  Of CCTV malware.



LEO:  Ooh.



STEVE:  A bunch of ransomware news.  An amazing "you're doing it wrong" in the U.K. involving their power meters, which is shocking.  And then we'll talk about WhatsApp.  And there are two things that must be done, which are not default, if you actually want more than an illusion of security.  But if you do those, oh my god, I mean, this is like the LastPass of communications.  These guys absolutely nailed it.  And it's also interesting that it has taken years.



Back in 2013 they were looking at the OTR protocol, the Off The Record protocol that we talked about once.  And it's funny because, in digging deep into this, I remembered some things we had covered in the past, like there was this notion of repudiation where you would want to be able to claim that you never sent that message, if it was in your interest to do so.  And you'll remember, Leo, that the crazy OTR protocol, like after the message authentication code had been expired, it deliberately published it, like publicly, in the protocol, in plaintext, just to sort of thumb its nose at anyone trying to prove that somebody sent something.  They said, no, we're going to make it impossible to prove that by deliberately expiring authentication keys.  But after they're no longer of any value for authenticating the current message, we'll publish the old ones so that no one can come along and say, you know, you actually sent this.  Anyway, what is now called the Signal protocol, I'm just all, like, revved up because...



LEO:  That's awesome, yeah.



STEVE:  ...I've spent the last few days digging into it.  And they nailed it.  I mean, it is just - it is amazing what they've accomplished.  So that's the main topic, after we deal with an incredible amount of news of the week.



LEO:  All right.  Well, we'll get to all of that.  And by the way, thank you for joining us on Sunday on TWiT to talk about Burr-Feinstein.



STEVE:  Oh, oh, and I keep meaning to say I was so impressed with your explanation at the end of The Tech Guy show on Sunday.  I was watching it because of course that was leading into TWiT.



LEO:  As your lead-in, yeah.



STEVE:  You gave the best, most perfect and correct answer about third-party cookies I've ever heard.  



LEO:  Oh, good.



STEVE:  I mean...



LEO:  Well, I learned it all from you, Steve, so...



STEVE:  Well, I was holding my breath to think, come on, Leo, yeah, yeah, yeah.  I mean, it was better than I could do because it cut out all of the extra stuff, and it was just - it was right for the audience.  It was exactly correct in every detail.  I was very proud.



LEO:  Oh, thank you.  Well, I'm very honored because that's, coming from you, extremely, extraordinarily high praise.  And I try, I do actually think about you listening when I talk about this stuff and say, what would Steve say?  What would Steve say?  Yeah, somebody asked what about cookie deletion.  And, you know, we talked about what cookies are, why they're not all bad, and what the real information leak risk is.



STEVE:  Oh, it was just perfect.



LEO:  Yeah, yeah.  It's a real privilege to get to do that radio show.  Sometimes I think, oh, I want to stop doing it because it's - my weekend's shot.  But it's such a privilege to get to talk to normal people and kind of be a conduit from people like you, all of our brilliant experts on the TWiT network, to kind of say to a million - it's a million people every weekend, a million people who are normal, relatively, people, not geeks.



STEVE:  More normal, yes.



LEO:  More normal.



STEVE:  More normal.  They are listening to that show, but still...



LEO:  Well, they're a little geeky, anyway.  But they're also, I figure, like the people who are going to then be asked by their friends and family, well, what does this mean?  And so it's kind of a chance for us to kind of set the agenda, to talk about what things are and aren't, and to do so in a non-sensational way, in a way that - and I am lucky because I have the time to, I mean, I probably spent 10 minutes talking about cookies.



STEVE:  Oh, and, well, it was the tracking.  You got the tracking exactly right.



LEO:  Oh, good.



STEVE:  Which, you know, that's important.



LEO:  Thank you, Steve.  All right.  I appreciate it.  Okay, Steverino.



STEVE:  So I did want to pay homage to the 555 timer because this is Episode 555.



LEO:  Yes.



STEVE:  I mentioned it briefly last week, and a number of people sent me some links to a blog.  A guy named Ken Shirriff reverse-engineers classic ICs, classic Integrated Circuits.  By that I mean he pops the top off of the lid and then looks at the photomicrograph and works out what the schematic was of the chip.  And he's done that both for the later CMOS version of the 555, and for their previous, known as the bipolar transistor version.  For anyone who's interested, I put the link at the bottom of the first page of the show notes.  I really would recommend anyone who sort of has an interest in engineering, yeah, there's the page you're showing for the bipolar, the earlier version of the 555 timer.



And what was unique about it was that its operation, that is, the functionality it provided at the time, was very simple and very easy to understand.  And it turned out you could use it as a building block for all kinds of, like, things that you wouldn't have thought of, not just for, like, creating a waveform at a certain frequency.  But, I mean, you could hook it up to popsicles that you put in your mouth to measure the alkalinity of your saliva.  I mean, just like bizarre things that were possible.  And people just kept coming up with new ideas such that there were books, entire books written about things you could do with this one little chip.  It was a little modest eight-pin DIP.  It had power and ground and output, and then some little I/O lines that, again, were very simple in what it did.



But it was just this perfect little building block.  And I used it like crazy.  Lots of people even today are still using them.  It still exists because it's just such a perfect little thing to drop in the right place.  So for anyone who's interested in a little bit of electricity and electronics, this Ken guy, he's also reverse-engineered, I think it was the 741 that was THE op-amp of the day, and a few other circuits.  And he does a beautiful walkthrough of the design decisions and how the part works and so forth.  So anyway, I did want to note it on this 555th episode of Security Now!.



LEO:  And you've mentioned this before; right?  This was the question about timing; right?  About how important timing was? 



STEVE:  Yeah.



LEO:  Or have you not mentioned this before?  It feels like you have.



STEVE:  I don't know if I've mentioned this.  We have talked about timing in other contexts.



LEO:  Right, and why that was a significant computer technology.



STEVE:  Ah.  Right.  Good memory, Leo.  We were talking about, in fact, that was a Q&A after we were talking about architectures, was why do all computers have a clock?  That is, what is it about a clock?  And the answer is it's about synchronization, the idea of things being done stepwise, like step by step, instruction by instruction, fetch and store.  Everything is about what happens when.  And so you need a clock in order to have a when.



LEO:  I feel like we were also talking about this yesterday.  We had James Gosling on.



STEVE:  Someone, actually a friend of the podcast, Simon Zerafa, said that James was talking about PDP-8s.



LEO:  Oh, that was it.  That was his, like you, his first computer.



STEVE:  Ah.



LEO:  He cut his teeth on PDP-8s, and he was talking about the instruction set.  I brought your name up.  I mentioned that your goal was to retire and write an operating system for the PDP-8.  We were talking about flipping the switches.  You've got to watch it.  I think you'd really appreciate it.



STEVE:  I definitely will.



LEO:  And I mentioned the kit.



STEVE:  So I imagine it's on Monday's Triangulation.



LEO:  Yeah, it was yesterday.  And I mentioned the kit, you know, the - now, yours, are yours powered by Raspberry Pis?



STEVE:  Those are not.  Those were actually - those three are from the 6100 chip, which was manufactured by Intersil.  And it was a PDP-8 on a chip.  So this minicomputer refused to die and was so popular that it ended up getting itself integrated on a single chip, the 6100.  And Bob, whose last name is escaping me right now, who found a cache of these Intersil PDP-8s...



LEO:  Right, that's right, yeah, yeah.



STEVE:  He said, "I'm going to give them some lights and switches."  And so that's that.  But the one you got...



LEO:  The kit.



STEVE:  And the kit that I have, just a few months ago, that I haven't even opened, I got another three of them because I thought, you know, if one is good...



LEO:  Why not, yeah.



STEVE:  But anyway, I haven't even opened the box, I'm ashamed to say, because I just, you know, I've got way too much going on.  But I will get to it somebody.  And that one is powered, that one is basically just an I/O panel for a Raspberry PI.  So it's switches and lights that the Raspberry Pi reads and writes dynamically.  And then running in software on the Raspberry Pi is a PDP-8 emulator, which exists in open source.  There's something called the SIMH, S-I-M-H, project which has captured all of the classic machines in software emulation, for anyone who wants to play, and often still has the OS software and everything else to go along with them.



LEO:  He was talking about loading the bootloader by flipping the switches in the front and how the really good guys could go, from memory, [vocalization], and they'd be ready to go.



STEVE:  Yup, because you're doing it all the time.



LEO:  Yeah, yeah, you're doing it all the time.



STEVE:  In fact, the first thing you would check when the machine crashed or died was, did the bootloader survive?  Because it was up at the very top of memory.  And oftentimes it would just stay there, so that you'd be doing other things, and it'd be time to, like, load another paper tape.  And it's like, okay.  Is the bootloader still there?  Or do I have to put it in again?



LEO:  You would enjoy this.  Of course Gosling the inventor of Java.



STEVE:  Yeah.



LEO:  It was a great conversation.



STEVE:  And I want to make sure people understand that Java itself is not, like, the Java...



LEO:  Right, it's not the problem.



STEVE:  ...is not the problem.  



LEO:  Right.



STEVE:  It was that it got stuck onto the web, like it got stuck into browsers as, oh, wouldn't this be neat.  And it's like, no.  This is not, I mean, it's the same problem with Flash.  Flash, if it was just not used on the web, it would be fine.  It would be a way of animating stuff and doing simple little scripted apps and stuff.  But when you put something that powerful in a browser so that people you don't know can put their code in it, and it runs on your machine, what could possible go wrong?  So, yeah.  Java, I mean, I've got Java pretty much installed everywhere, but no browser plugins because it is a very nice cross-platform solution.  And it's huge in corporations.  Even, I mean, today it's not going away.  It's a great, it's a powerful state-of-the-art language.



So the big reveal.  We've been waiting for two weeks because this was announced two weeks ago as going to happen on April 12th.  And of course it occurred to me, wait a minute, that's Tuesday.  And Microsoft's involved, so that's probably tied into Patch Tuesday.  And at 10:00 o'clock Pacific time, a little after 10:00, and I set up my web page change bot to watch for changes at 8:30 this morning because it was expected at 9:00 o'clock Pacific time, I think it was 17:00 UTC, and it was an hour later.  And so I jumped on it the moment they updated the Badlock dot - I don't remember whether it was com or org.  Anyway, that page.  And it's like, yawn.  As we hoped for the industry's sake, it was not a big deal.



They say there is a possible remote DoS on a publicly exposed SMB server.  And as I have commented for the last two weeks, who has a publicly exposed SMB server?  Now, we do know that a search through the Internet did find some wacky media server that there were several hundred of in the U.S., but a bazillion of over in Russia.  So maybe that's a problem for them.  But even users of corporate resources who are operating remotely are all doing so through their corporate VPN these days.  And so that protects that completely.



There's also a potential man-in-the-middle vulnerability, meaning that somebody who could intercept an SMB connection - and they talk about ARP spoofing kind of interception, meaning you'd have to be in the network anyway, that not all of SMB protocol is equally well encrypted.  And so there are some things to patch.



Now, Microsoft was yawning, too.  Simon again found the Knowledge Base article from Microsoft corresponding to this problem.  It almost looks like Pi - 314, it starts out, but then it kind of goes off of Pi to 8527, 3148527.  And so Microsoft says:  "This security update resolves a vulnerability in Microsoft Windows.  The vulnerability could allow elevation of privilege if an attacker launches a man-in-the-middle attack.  An attacker could then force a downgrade of the authentication level of the SAM and LSAD channels and impersonate an authenticated user.  This security update" - wait for it - "is rated important for all supported editions."



LEO:  Kind of important.



STEVE:  Important.  So, you know, maybe tomorrow.



LEO:  Not really.  Just a little bit, yeah.



STEVE:  Yeah.



LEO:  Sort of important.



STEVE:  So unfortunately these guys, they even acknowledged the Heartbleed folks and credited them with the style of prerelease hype that they adopted and tried to create a great logo because everyone thought, oh, Heartbleed had a great logo.  So anyway, unfortunately, a great logo doesn't always mean a bad vulnerability.  And in this case it's like, eh.  Microsoft says, yeah, it's kind of important, you know.  It's like, maybe.  So anyway, Badlock, yeah, fix it.  Patch when you want to.  But it's difficult to imagine a scenario where any admin would be running around with their hair on fire after learning about it this morning.  They couldn't have SMB exposed publicly.  No one really can.  And internally, well, you're trusting the people on your Intranet to - they're typically your employees, presumably.  But certainly there are some scenarios where you could have an adversary in the connection.



So this is good to fix.  I'm not saying it's nothing.  But it's nothing like the last few major, you know, like Bash is bad in every version of Linux ever made because it turns out we're using that behind the scenes, and we didn't know it, or anything like Heartbleed.  So, yeah, this is not on the same scale.



However, what is upsetting is, although it isn't law, and we need to remember that, is Burr-Feinstein.



LEO:  It's not even - it's really just a discussion draft.  And apparently another one has surfaced.  According to Mother Jones, there's another discussion draft. 



STEVE:  And do we know how it compares?  I haven't heard that.



LEO:  I have it here.  I'll have to look.  But go ahead.  Why don't you talk about - and I will see if I can...



STEVE:  Yeah.  So what the Burr-Feinstein legislation says is, unfortunately, exactly what I was predicting.  And that is that, on demand, anyone who is encrypting something must provide it in plaintext, must have a means to provide it in plaintext.  They're not legislating the means.  They're not requiring a backdoor.  They're not weakening encryption.  And that's the most important point I want to get through this discussion is this isn't, per se, weakening encryption.  But by being able to compel decryption, it certainly does weaken privacy.



So we need to, I think, just from a technical standpoint for this podcast's sake, and its listeners, I want to draw a distinction between this notion of encryption technology and encryption policy.  So what this is addressing is encryption policy.  And it's saying that anyone who is encrypting - and that's the breathtaking part of this, too.  We discussed this on Sunday's TWiT.  I meant to have the PDF up so I could quote from it again as I did on Sunday.  Yeah, here it is, I found it.  Because in the discussion draft, as it's called, they talk about the "covered entity."  The covered entity is someone, for example, in the position of Apple, who is providing a smartphone technology and device and communications infrastructure which provides encryption.



So this is just breathtaking in its sweep.  They define it formally as the term "covered entity" means a device manufacturer, a software manufacturer, an electronic communications service, a remote computing service, a provider of wire or electronic communications service, a provider of a remote computing service, or any person who provides a product or method to facilitate a communication or the processing or storage of data.  So that last phrase, "any person who provides a product or method."  I mean, that's the world.  I mean, that's everybody.



And then the other part that we highlighted on Sunday, which is sort of stomach-churning, is they describe this as, like the main line, the first line, "to require the provision of data in an intelligible format to a government pursuant to a court order and for other purposes."  So this is under court order, a government.  And I was like, what do they mean, "a government"?  Like this is a U.S. law, so it's only going to pertain to U.S. entities.



LEO:  But it could be a county or city government.



STEVE:  That's exactly right.  They define - and this is just horrifying.  They define, for the purpose of this document, the term "government" means - and I'm reading from the draft - "the government of the United States and the government of the District of Columbia or any commonwealth, territory, or position" - oh, I'm sorry - "or possession of the United States or an Indian tribe or of any state or political subdivision thereof."  Meaning Andy in Mayberry can say, hey, we want you to decrypt this phone.  I mean, the mayor, who's a subdivision of the county, that's a subdivision of the state, can say, oh, yeah, we want you to decrypt this for us.  So anyway, that's where we are today.  Again, not law, just discussion.



The last thing I heard, Leo, was that something had been sent back to the executive branch for further examination.  What we heard a couple weeks ago was that the President was not going to weigh in on this either way, although of course we did hear that disturbing rhetoric from SXSW, where he talked about us fetishizing - I can't say it.



LEO:  Fetishizing.



STEVE:  Thank you.



LEO:  Fetishizing.  



STEVE:  Fetishizing.



LEO:  When you say it that way, it really sounds terrible.



STEVE:  Wow, yeah.



LEO:  Do not fetishize your phone.



STEVE:  Yes.  And in fact what he's saying is we're fetishizing - okay, I can't say it.  We fetishize...



LEO:  We're doing that thing to the phone again.



STEVE:  Our encryption is what we're fetishizing.



LEO:  Yeah, fetishizing.  We're fetishizing privacy, frankly.  I mean, that's the logical conclusion.



STEVE:  Well, and that - yes, yes.  And so that's the thing I - if our audience gets anything, it's just I just want to draw the distinction.  This is compelling a breach of privacy.  Now, the ivory tower academics go crazy, saying there's no way to do that without weakening security.  Well, tautologically that's true.  But in fact, as the WhatsApp system is going to demonstrate later in this podcast, which is just - it is a master work of crypto technology.  It is absolutely possible, if people want to design a system that securely provides that facility, for it to be done.  People are saying no, no, no, it can't be done.  Sorry, it can be done.



But the problem is we get - that's a distraction.  I think we want to stay focused on the policy question, at what level and to what degree are we as a society, in the U.S. at least, going to decide where this lands?  To what degree do we want a government order to allow our privacy to be breached, to be opened, to be decrypted, however you want to put it.  That's where we should focus our attention because the technology can be done, if people want it to be done.  And so it will be interesting to see how this goes.  We don't know what Obama is going to say.



LEO:  And they haven't even proposed it as a bill.



STEVE:  Right, right, right, right.  And now of course we've got a wacky election for the President.  I don't know where this even falls along partisan lines.  To me it doesn't feel like a partisan issue, Republicans versus Democrats.  It feels way bigger than party and any kind of ideology.  This is, I mean, it should be bigger.  Were you able to find anything new?



LEO:  No, this Mother Jones article is just - it's not even showing the text, just saying - it's just kind of pointing out that the staff - it says:  "Senators Dianne Feinstein and Richard Burr apparently have very unreliable staff, as yet another discussion draft of the national security bill they're jointly sponsoring has been leaked to the press.  They really need to tighten up their operation."  But they don't - it doesn't - it looks, I mean, it's just another draft of the same thing, I guess.



STEVE:  Yeah.  And so what we see is the intent.  What this shows is the intent, which is - and that's - we've seen it in the rhetoric over on the law enforcement side, where they march out terrorism and child pornography and all of that, and say how can it be that Apple is encouraging terrorists to use their encryption technology?  It's like, oh, lord.  Okay.  Unfortunately for their argument, so are all of the law-abiding citizens who would like the benefit of this technology for our privacy.  So anyway, I do have an acronym, or an abbreviation, to go with this.  Of course TNO has now been - is legend for Trust No One.  It occurred to me that the proper abbreviation for this, the whole discussion that sums it up is DOD, Decryption On Demand.



LEO:  Ah, I like it.



STEVE:  Because that's what we're talking about, the idea that, yes, the Internet is going dark.  And you guys had a great discussion after I left the conversation on Sunday's TWiT about the metadata because it is the case that law enforcement is drowning in surveillance technology.  I mean, there's more surveillance capability today than there has ever been.  I don't know about where you guys live, but any street corner here in Southern California has four cameras mounted on every streetlight pointing in all directions.  And, I mean, and lots of networking going on, and all kinds of surveillance.



So anyway, DOD, Decryption On Demand, that's really what this comes down to is at what level does a need need to rise to in order to force a company to decrypt, if there is any.  Maybe we decide collectively there is no level, that privacy should be absolute.  Again, I'm going from the Constitution, which does not guarantee absolute privacy.  It just guarantees reasonable privacy against search and seizure and does use the court system to provide search warrants that allow law enforcement to breach someone's privacy.  It seems to be that, again, that's - I'm not an attorney or a constitutional scholar.  But I'll be surprised if we don't end up with something like that.  And the good news is people are going to go kicking and screaming.  But I think we don't have to have a larger loss of security and encryption and privacy than what the law decides we're going to end up with.



But this is the U.S.  Hungary's government has gone crazy.  MappingMediaFreedom.org had an article - which is a good thing because I can't read Hungarian - and they linked to it.  And I thought, well, maybe it's English because sometimes you get lucky.  It's like, no.  I don't even know what Google Translate would do with this.  Anyway, the article in Mapping Media Freedom, the headline was "Hungary:  Government plans to criminalize the use of encrypted services."



So in their translation of the Hungarian news, they wrote:  "The Hungarian government plans to criminalize the use of applications for encrypted communication.  The measure is part of a new anti-terrorism legislation package put forward by the Interior Ministry and was first presented on the 31st of March by Janos Lazar, the Minister heading the Prime Minister's Office.  If the package is implemented in its present form" - again, pending legislation, so this isn't law yet, but, again, shows intent - "anyone caught using encrypted software can be punished by two years in prison.  The providers would be obliged to ensure access to the content of the encrypted messages, and they would have to provide the identification data of the users as well as the IP address used for registration.  Failure to comply qualifies as a misdemeanor and is also punishable with a two-year prison sentence.  The anti-terrorism package also contains provisions regarding an increase of surveillance in public spaces and enables the Interior Ministry to prohibit mass events."  Wow.



LEO:  Yeah, you always get these reactions when there's, you know, because of the refugee crisis in Hungary.  You always get these kinds of overreactions.



STEVE:  Yeah.  Yeah.



LEO:  It's not a law at this point.



STEVE:  Yeah, right.  But it does, it says, okay, we're just going to outlaw encryption.



LEO:  Yeah, crazy.



STEVE:  Can't use it in this country.



LEO:  Crazy.  I could see that happening here.



STEVE:  Yeah.  So there's been additional news coming directly from the mouth of my favorite person.



LEO:  Me?



STEVE:  FBI Director James Comey.



LEO:  Oh, James Comey.



STEVE:  And longtime listeners will remember that I had us play his blatant lie to Congress into the podcast a few months before Snowden revealed it to be exactly that.  When he was directly asked by a senator on the Intelligence Committee, who had sent the list of questions that he would be asked days before, and his staff had vetted them, and he was fully prepared.  And he was scratching his head and says, "No, Senator, we are not performing any mass data collection on U.S. citizens, not wittingly."  Ugh.  Anyway, yes.  He said last Wednesday...



LEO:  It was Clapper, not Comey, I think.



STEVE:  Oh, wait.  You're right.



LEO:  We've got enough nitwits in the intelligence community...



STEVE:  Sorry, sorry, sorry.  Clapper, James Clapper.



LEO:  ...that it's easy to confuse General Clapper.



STEVE:  Oh, yes.  Thank you, Leo.



LEO:  Clapper, Comey...



STEVE:  Everything I just said is not this guy.



LEO:  No, Comey's said equally stupid things.  But he...



STEVE:  Yeah, he's on the same team.



LEO:  Yeah, he's on the same team, yeah.



STEVE:  So he said that the government had purchased, quote, "a tool" from a private party in order to unlock the iPhone used by, of course, as we know, one of the San Bernardino shooters.  Quoting Comey, he said:  "The people we bought this from, I know a fair amount about them, and I have a high degree of confidence that they are very good at protecting it, and their motivations align with ours."



LEO:  I hope they're better than the FBI is.



STEVE:  Well, yeah.  And it seems to me their motivations are commercial.



LEO:  Yeah.  They're not aligned at all.



STEVE:  Exactly.  And the FBI's are law enforcement.



LEO:  Yeah.



STEVE:  And they sold this tool, for commercial benefit, to the FBI.  And if anybody else wants a copy, here's the price.  It probably has six digits.  But there's nothing aligned about it.



LEO:  Good point.



STEVE:  So Comey also said that the purchased tool could only be used on, quote, "a narrow slice of phones" that does not include the newest Apple models or the 5s.  So not the 5s or the 6.  Comey said the government was currently considering whether to tell Apple how it pulled off the hack.  He said, quote:  "We tell Apple, then they're going to fix it.  Then we're back where we started from.  We may end up there.  We just haven't decided yet."  Well, isn't it nice to have all the cards in your hand.  Anyway, so while that doesn't exactly confirm how the hack worked, some of the reporting wrote that the distinction being drawn here may suggest that it's specifically the lack of the Secure Enclave on the iPhone 5c's...



LEO:  That makes sense.



STEVE:  ...A6, yes, the A6 system on a chip that renders the phone vulnerable.  And then of course we got the Secure Enclave with the A7 SoC appearing in the 5s and subsequent phones, which does make sense.  I did see just this morning and didn't have a chance, it was on the right-hand column of the Hacker News, that a company was claiming they were closing in on a hack for the 6.  But closing in is way different than having it.  So you either, you know, you don't have it until you do.  So it's not clear what "closing in" means, except for their marketing.



Some disturbing news about my favorite browser.  A beautiful piece of reverse-engineering was done on the architecture of the Firefox add-in ecosystem.  And the chilling phrase, when I read it, I said, "Oh, no, no, no, no."  The chilling phrase is that all JavaScript extensions installed on a system share the same JavaScript namespace.  And it's like, no, no, no, no, no.  That just can't - that can't be possible.  What that means is that it's like all the extensions are in one JavaScript file and coexist, meaning they can all see all of the variables and routines that they each have.



LEO:  What?  That's not good.



STEVE:  Yes.  That's horrible.  And, now, the JavaScript namespace has always been a problem.  It's one of these things where JavaScript has outgrown itself so that there's, for example, there's a book called "Closure" which is one of the techniques.  There's a way that you can wrap mature JavaScript applications with many different methods inside one big method that contains them all in order specifically to create a hidden namespace.  But unless you do that, and unless you're really careful, this is a problem.  I mean, it is, for example, it's a problem when JavaScript that is coming from different places stomps on each other's verbs and method names and so forth, and procedures.  It is a problem with JavaScript that it doesn't have clearly divided namespaces.  So the exploit is known as CrossFire.  And, for example, NoScript numbers among the top 10 most popular Firefox add-ons, and nine of the top 10, including NoScript, are vulnerable to this kind of exploitation.



Quoting from this whitepaper, and I've got links to it in the show notes, the researcher wrote:  "Despite the abundance of research focusing on the security of browser extensions in isolation, to the best of our knowledge the possible interactions between multiple browser extensions have not been well-defined from a security perspective.  In particular, the Firefox extension architecture allows all JavaScript extensions installed on a system to share the same JavaScript namespace, hence making it possible for an extension to invoke the functionality or modify the state of others.  This problem has long been recognized as a namespace pollution problem that can introduce errors if multiple extensions define identical global names.  However, its impact on security has not been studied so far."  So these guys did that.



Now, of the top 10 most popular extensions, number one is Adblock Plus.  And they could find no problem there.  But Video Download Helper they found 13 different problems; Firebug, one; NoScript, seven; DownThemAll!, 19; Greasemonkey, 20; Web of Trust with the maximum at 34.  Flash Video Downloader had five; FlashGot Mass Downloader had eight; and Download YouTube Videos had two.  So those are the top 10; nine of those had one or more, in some cases 34, different problems.  The Mozilla people responded, and they said [clearing throat], "Yeah, we're..."



LEO:  Yeah.  Yeah.



STEVE:  "This is a problem."



LEO:  Yeah, we know about it, yeah.



STEVE:  And as we talked about a couple weeks ago, Firefox wasn't attacked during the most recent competition of...



LEO:  Pwn2Own, yeah.



STEVE:  Yeah, exactly, Pwn2Own, because it's like no - it's regarded as a soft target.  Now, for this to be exploited, you would - and what they did, they have some proof of concept.  You need to get a malicious extension into the browser.  Mozilla has both automated and human extension verification, extension auditing.  So they have an automated process that looks for API usage.  And then somebody reads through it.  Well, we know that both are prone to failure.  We've discussed the failure modes of both of those problems at various times in the last couple years.



So what happens is, because it's possible for the malicious extension to maliciously commandeer functionality in another extension, the malicious extension itself doesn't have to have the obvious ability to do anything wrong because unfortunately what these people are not checking for is cross-extension access, that is, this kind of cross-extension accessibility, due unfortunately to this common JavaScript namespace collision.



LEO:  And you probably remember this about seven years ago, that the NoScript guy used this to modify Adblock Plus to whitelist NoScript in Adblock Plus.



STEVE:  Right.



LEO:  Do you remember that?  I don't know if you remember that.  There's a whole apology on his blog.  "I'm sorry.  I shouldn't have done this.  I will regret it forever."  This was seven years ago.



STEVE:  Yeah, Giorgio.



LEO:  Yeah.  And which may explain why Adblock Plus is on the list as having no exploitability.  I have a feeling they hardened themselves against this; right?



STEVE:  Exactly.  They put themselves - they wrapped themselves up so nobody could have access to their stuff from the outside.  I bet you're right, Leo.  I bet that's why they are the one exception is they, like, okay, no.



LEO:  No.



STEVE:  I have to say it can be a real nightmare.  Like I said, there's a book on "Closure" which is, I mean, the main way this is done in JavaScript because it's like, it makes LISP look easy by comparison.  Actually, there are some similarities.



LEO:  Yeah, Closure's from LISP.  That's a LISP technique, widely used LISP technique, yeah.



STEVE:  So anyway, I don't think this is, I mean, I'm not leaving Firefox.  I'm looking for - I hope there are the resources available to rearchitect it.  As we said a couple weeks ago when we were talking about Pwn2Own, they really do need - it's time to say, okay, time to restart.  It's because Microsoft, yeah, Microsoft bit the bullet and abandoned their IE codebase and started over, like from scratch.  I mean, imagine if you could do that now, knowing today what we know, versus still having IE6 code lingering in IE11, and it causing problems.  It would be current standards.  It would do everything right.  You would have a team trained up on security.  I mean, anyone writing a browser today, security is number one.  I mean, I would put that behind standards compliance.  Make it secure first; and then, yes, we have standards now.  So implement as much of that as you can.  But, boy, it's got to be secure.



And as we've learned in that Pwn2Own competition, Edge, the new browser from Microsoft, it won.  It had the fewest problems.  And specifically because Microsoft did bite the bullet and just say, okay, we may have been second, because the Mozilla browser was first, and then IE was second, I think.  No, there were some text browsers, too, before that, too.  But still, in terms of browsers that are still around, it was just time to say goodbye.



Coincidentally, yesterday, we did get an update to Firefox, 45.0.2, up from 0.1, although it didn't do anything about this, and it wasn't a huge change.  It was just an incremental update.



LEO:  Some might say this is the brain damage that came from C and has been propagated through these kinds of procedural languages ever since.



STEVE:  Yeah.  And I also think it's just there wasn't the focus that there originally...



LEO:  But namespaces, no, you know, computer science has understood the necessity of separating namespaces for a long time.  It's pretty fundamental.  You don't want to clobber somebody else's variable because you use the same name.



STEVE:  Yeah.  I don't think this is about C, though.  I think this is about JavaScript being simple.  The goal was let's just create a simple scripting language to sort of automate, to do some stuff on the client side.  And what's happening is it really just - it's become an incredibly powerful tool.  And so I think it outgrew, I mean, this is the problem.  And you guys, for example, have talked about this with iOS.  I completely agree with you that the iOS UI that started out as a simple, obvious, easy-to-use thing is becoming cumbersome, with all kinds of hidden behavior, because they keep cramming more stuff into a framework that wasn't designed to hold it.  Similarly, JavaScript has outgrown its roots, and it just hasn't done it gracefully.  Now, Leo...



LEO:  Yes.



STEVE:  Need to go to steve.grc.com.



LEO:  Wow, you're getting fancy with the subdomains here.



STEVE:  Steve.grc.com.



LEO:  Have you ever used a subdomain before?  That's a new one on me.  Oh, you've got a blog.



STEVE:  Well, okay.  So, and it's a WordPress blog.



LEO:  Nice.



STEVE:  Now...



LEO:  HTTPS, baby.



STEVE:  Yes, baby.



LEO:  That's nice.  With Let's Encrypt; right?



STEVE:  Yes, and you can look at the security certificate, and you will see that it is a Let's Encrypt certificate.



LEO:  All right.  Let me look at the details here.  Valid certificate, server certificate.  Let me view it.  I like it because they give it a nice little gold stamp, very beautiful, from tls.automatic.com.  Of course that's the parent company.  Let's Encrypt Authority X3.  Nice, Steverino.



STEVE:  Yeah.  So with this move they began a couple months ago, actually in January.  And as of yesterday, or I'm sorry, no, as of the 8th, 4/8, April 8th, they announced that it was everywhere on the mass number of domains.  All the people with custom domains, anything hosted by WordPress.com now has HTTPS.  So all of the logon tokens, the session cookies, all of the - well, the works.  And so it's just a major nice big step in terms of total domain coverage for Let's Encrypt is all of the WordPress blogs.



LEO:  Huge, huge.  Fantastic.



STEVE:  And I did nothing.  Nobody did anything.  It just all just like, bing, okay, now you have security.  And so you could use https:// instead of http to refer to your blog at WordPress.  And it works.  And you've got security.



LEO:  Woohoo.



STEVE:  So, yay, nice, nice move forward.  This is the way it should be.



LEO:  Yeah, no kidding.



STEVE:  Okay.  So another beautiful piece of reverse engineering.  A researcher, Rotem Kerner, he wrote on his blog:  "Since there are so many vendors who redistribute this hardware/software, it is hard to rely on a vendor's patch to arrive at your doorstep.  I believe there are more vulnerabilities being exploited in the wild against these machines.  And therefore your best shot would probably be to deny any connection from an unknown IP to the DVR services.  And so I will leave you here with a list of vendors who are selling some of the CCTV DVR rebranded gear, a company called TVT."



What this guy found was he was setting up a system for a friend, and it was a multicamera CCTV DVR security system.  And when he brought up its web interface, because it had a web server in it, he didn't - he was like, it seemed to be missing some of the controls that he was expecting to see.  So he's a little on the techie side, to say the least.  So he looked at - he did a view source, suspecting maybe that there was some mangled-up CSS that was preventing the display of the control UI that he was expecting to see.  What he found at the bottom of the page was - I'm trying to think.  I think I'm confusing two stories here, I'm sorry, the next story, because we have two stories that are very similar.



This first guy found some malicious code in the firmware of this commercial DVR system which enabled remote code execution.  And this wasn't obviously malicious, but it was at least a mistake.  And he did a search on the 'Net because this device opens port 81 and also 8000.  And he found, using Shodan, more than 30,000 of these systems exposed publicly.  So thus his advice to limit the exposure with a firewall to known IPs.  So there are 30,000 of these commercial CCTV DVRs.  And looking at them, I mean, he has an example of looking out the camera of some store, which is completely visible now thanks to this vulnerability.



What it turns out is that there are so many of these because the 70 different brands are all the same device.  There is a single Chinese company, this TVT, that produces a white-labeled generic solution, and 70 different companies slap their own name on it and resell it under their own brand.  They are all the same device, and they all have the same firmware, and thus the same vulnerability.  So anyway, there's really no takeaway for our listeners except that anyone who is using these systems, where it's like, oh, yeah, we have username and password.  Logon anywhere from the Internet, and you can get access.  Uh, that's probably insufficient security.  And we're talking about, of course, a major privacy breach.  We're talking about something potentially publishing, not only the current image, but the past, because these things record, of all the cameras that it has hooked up to it.



The argument has been made in some of the coverage of this that this is now the way criminals are casing the organizations and retailers that they want to attack before, I mean in the physical world, that they want to break into is they just sit there and monitor that company's CCTVs to look at protocols and procedures and how things operate and where the manager puts the keys when he's through using them and so forth.  So it's just chilling that there could be this many systems, all from one company, all with a remote code execution vulnerability.  In his walkthrough - it's a nice piece of work - he goes through the process of establishing root with full remote terminal access and the ability then to download his own code package and execute it.  So basically complete takeover of the device.  And he said they are typically BusyBox based, and this family of CCTV DVRs was BusyBox based.  So he was right at home hacking into it.



The other story is the one where someone was setting up a system for a friend which he purchased from Amazon.  And so the headlines were "Beware:  Even things on Amazon come with embedded malware."  Now, the link to the Amazon device shows "product no longer available."  So Amazon quickly said whoops and took it off the market.  I was curious to see what it would cost because these things are not inexpensive.  But so he wrote:  "I needed a simple set of good outdoor surveillance cameras for a friend's home.  Like everything else I buy, I turned to Amazon.  I found what seemed like a great deal for a set of six POE" - that's Power Over Ethernet - "cameras and the necessary recording equipment.  Here's the link."  And then there's the link.



He says:  "When trying to get the cameras to work on my friend's machine, I simply logged into the admin web page and went to configure it.  First of all, something seemed a bit off.  The interface showed the camera feed, but none of the normal controls or settings were available.  Being one of those guys who assumes bad CSS, I went ahead and opened up developer tools.  Maybe a bad style sheet or style was hiding the options I needed.  Instead, what I found tucked at the bottom of the body tag was an iFrame linking to a very strange-looking host name, www.brenz.pl, a well-known malware distribution domain."



So essentially this brand new, purchased by clicking a link from Amazon - of course this is not Amazon's fault.  This is a CCTV system, and we just got through talking about 70 of them that have a different problem.  This one, for whatever reason, how it got in there we don't know, but there is just an innocuous-looking iFrame which of course is embedding a Fetch of whatever this Brenz.pl wants to place in the frame.  Very much in the same way that malicious advertising gets onto someone's browser, here it's whatever this malicious malware site chooses to stick into your CCTV viewing or admin webpage.



So, again, the retail channel is seeing these kinds of problems.  And unfortunately I think we're going to need to remain vigilant about all IoT stuff.  The problem with these is they're inherently connected.  They are on the 'Net to do their job.  Many of the IoT systems are, too.  And it creates an exposure.  We just got through getting firewalls up in front of our PCs after we finally figured out we were not capable of adequately securing them to allow them to operate without a firewall.  We know that.  Everyone knows that.  And let's just go further and put a NAT router in front of our whole network because lord knows what's going on within our network.  We need that security.  Yet here we are saying, oh, but, wow, look what I can do.  I can, you know, I can change my home temperature from the movie theater before I get home.  It's like, yes, because something outside your home is able to reach into your home.



LEO:  And so can someone else.



STEVE:  Yeah, exactly.  So there was initially bad news about a new type of ransomware called Petya.  And that's what it calls itself, P-E-T-Y-A.  And it came into the news because what it does, it operates different than other ransomware, where we've covered - everybody knows what things like CryptoLocker do.  They encrypt a subset of your files, a painful subset, a deliberately painful subset, but a noncritical for operation subset.  That is, your docs, your spreadsheets, your PDFs, all the things you care about that you have probably created or you've downloaded, but the OS still runs.  And of course the point of that is you need your OS in order to contact the bad guys to send them Bitcoin to get the key to do the decryption.



Well, the Petya author or authors decided to take a different tack.  First of all, rather than encrypting the files, they encrypt what's known in the NTFS file system as the MFT, the Master File Table.  Well, the MFT, it's clever, actually, because it's all the files in the partition, in the volume.  The filenames; the timestamps; the stream names; the list of cluster numbers where the data streams, that is, the files, reside;  their indexes; their security identifiers; the file attributes - read-only, compressed, encrypted and so forth.  Basically it is the MFT, you know, it's like in the old days where we talked about the file allocation table, the FAT, and the directory structure.  The file allocation table knew how the clusters were linked together.  And the directory structure pointed to the first cluster of the file.



This is the equivalent, rewritten and updated dramatically, for NTFS file systems, which all Windows systems are based on today.  If you encrypt the MFT, you don't have to encrypt the files.  On the other hand, the system is dead.  It's gone.  Nothing will run.  And so this thing also, it replaces the master boot record with a big, scary red-and-white skull-and-crossbones painted in dollar signs on the screen.



LEO:  Oh, that's good.



STEVE:  Yeah.  And so when you get it, it does this and crashes your system, forcing a reboot.  And when you reboot, your system dutifully loads the master boot record and displays the skull-and-crossbones with the explanation that your entire system is now hosed, and it is.



LEO:  But the data's there, it's just your master boot record's hosed.



STEVE:  Well, but, no.



LEO:  Or your MFT.



STEVE:  The MFT, right, the MFT's encrypted, and the MBR is also encrypted/hosed.



LEO:  But the data is still on the drive unencrypted.



STEVE:  Yeah, well, the data is there.  On the other hand, it's difficult to get to.  It wouldn't be impossible without the master file table.  But it would still be difficult.



LEO:  You'd need a scanner that would go and look at every sector.



STEVE:  Right.  And remember we no longer defrag our drives.  And they actually do get fragmented over time.  So although NTFS is a more mature fragmentation minimizing system, it doesn't eliminate it at all.  So a venerable drive that's been upgraded from 7.0 to 8.0 to 8.1, now to 10, and so it's been around for a long time, and that's an old NTFS partition.  Oh, boy, I mean, you'd have a hard time piecing that thing back together again.



So they made a mistake.  A few days after this all hit, this news hit on around - actually on April Fool's Day.  Now, just today, it turned out that the security community has been looking at it and reverse-engineering it closely, and the author made a mistake.  So if you or anyone you know and care about is hit with this, you do not need to pay ransom.  The mistake leaves some clues about the key behind.  There's now a free utility you can download which will go snag - the first guy that came up with this had a page where he'd worked out the algorithm, but you needed to be doing some deep voodoo like direct disk accessing to go get this sector and this offset to get this byte stream.  And so I was like, well, okay.  You need somebody maybe above your pay grade in order to find the data that you dropped into this web page, which then had the algorithm that gave you back the key.



Now there is a piece of freeware that you just download and click, and it gets it and presents it.  And then you copy and paste it into the web page.  It gets back your key, and you're able - it's just like the key that you'd have gotten from the bad guys, and you're all back and happy again.  So anyway, lots of coverage about Petya, if anyone's curious for more.  Got all the links in the show notes.  But basically - and the problem is obviously these people are going to fix that and solve their mistake.  So this is a short-lived window of opportunity.  You basically just don't want to get hit with ransomware because it's not good.  He wasn't being greedy, either.  It was 0.8 bitcoin, which is, what, maybe 300-and-some dollars?  So it's like, yeah, okay.  So, I mean, not that any is good.



Speaking of which, we have some statistics on ransomware.  Just last year, about $24 million was paid to ransomware criminals.  That is, these guys, just in 2015, made $24 million.  And it's pretty much all profit because they have a low-cost delivery infrastructure, unfortunately.  Reuters carried a story saying:  "The U.S. Department of Justice and Homeland Security last week provided new insights into the impact of ransomware and cyberattacks on public institutions and the public.  The DOJ revealed that the Internet Crime Complaint Center, the IC3, had received nearly 7,700 public complaints" - for what good it does to complain to the IC3, you know, it's too late.  Anyway, 7,700 public complaints regarding ransomware since 2005, okay, so that's going back 11 years.  So going back 11 years totaling $57.6 million in damages.  Whereas just in 2015 alone, victims paid over 24 million across nearly 2,500 cases.



So what we're seeing is - so it was 57.6 in 11 years, but almost half of that just in the one previous year.  So it's on the rise.  And of course for a while we were just talking about, what was it, CryptoLocker.  Now it's the ransomware of the day, unfortunately, because it pays.  And also unfortunately we were right in predicting that this was what was going to happen because the moment this appeared we said, "Uh-oh, this is really bad," because these guys are going to make a lot of money, and therefore we're going to get more of it.



And speaking of getting more of it, and of ransomware, Adobe just rushed out an emergency Flash update because it turns out that there was a zero-day Flash exploit, apparently only affecting Windows 10's browser's Flash plugin, in a way that was being abused by these ransomware guys.  Sophos wrote:  "The bug allows an attacker to send booby-trapped content to Windows 10's browser's Flash plugin in such a way that the browser will not only crash, but also hand over control to the attacker in the process."  Adobe claims that the latest in-the-wild exploits were only targeting Windows 10 users.  It would be wise for Flash fans - isn't that an oxymoron?



LEO:  Who's a fan of Flash?



STEVE:  Exactly, to update the software immediately.  Or just remove it.



LEO:  Get rid of it.



STEVE:  Yes, please.



LEO:  And why is anybody making a browser that doesn't automatically update Flash for you?



STEVE:  Right.



LEO:  Edge does, I'm sure, so they must be talking about the plugin for IE11 or something.



STEVE:  Well, no.  What it was, was this was before it was known.  So Windows 10, it was only targeting Windows 10 for whatever reason, maybe other aspects of the environment; and it was a zero day.  So this was found in the wild, and Adobe then did immediately update and no doubt provide the patches to Microsoft to push out through their own browser update mechanism, and presumably Chrome and so forth, too.



Okay.  So this is crazy.  Okay.  These people are not listening to this podcast.  So this is our, "Seriously?  Boy, are you doing it wrong."  In this case, this is an instance where the "spooks," as The Inquirer called them over in the U.K., that is, you know, their intelligence services, the GCHQ, intervened to prevent a catastrophically insecure U.K. smart meter plan.  The Inquirer's story goes:  "Intelligence agency GCHQ has intervened in the rollout of smart meters to demand better encryption to protect U.K. electricity and gas supplies.  The GCHQ barged in after they saw the plans and realized" - okay, everybody get a grip on the wheel.  Take a deep breath.  Leo, center yourself over your ball - "realized that power companies were proposing to use" - I can hardly read this - "a single decryption key for communications to the 53 million smart meters that will" - and "smart" should be in quotes - "that will eventually be installed in the U.K.



"The agency was concerned that the glaring security weakness could enable hackers, once they'd cracked the key, to gain access to the network and potentially wreak havoc by shutting down meters en masse, causing power surges across the network.  The security flaws would have been particularly catastrophic as the U.K.'s" - as the Inquirer describes it - "'Rolls Royce,' as in unnecessarily expensive, smart metering system doesn't just automate meter reading.  It enables power companies to engage in power management and even to cut people off remotely if they haven't paid the bills.



"A telecom industry veteran, Nick Hunn, who is the director of WiFore Consulting, told The Inquirer's sister publication Computing 15 months ago that the system designed by the utilities and metering industries was 'fiendishly complicated.'  Nick said:  'Too many cooks have ratcheted up the technical complexity to the point where it is no longer fit for purpose.  As a result, it's lining up to be the next major government IT disaster.'"



So unfortunately, we're only going to make it more complicated, but it sure is apparently not only overcomplicated, but still not complicated enough.  Now, imagine one master key for 53 million smart meters.  What could possibly go wrong?



LEO:  It's so complicated to have a different password for every device.  I think we should just have one.



STEVE:  As we know, the - well, yeah, exactly.  As we know, in order for it to work, it must decrypt the key.  So anybody reverse-engineers one of the 53 million smart meters and captures the key and now has access to the entire grid.  Unbelievable.  One key for them all, to rule them all.  Wow.  Fortunately, that won't happen.  But it does sound like it's a nightmare.  And as our telecom industry veteran Nick noted, talking about it being "fiendishly complicated," complexity is the bane of security.  If it isn't really simple, so that you can look at it and say yes, this is secure, then throw it away and start over.



A bit of miscellaneous goodies.  Hover is my choice of...



LEO:  Oh, congratulations.  Good choice.



STEVE:  ...registrar.  Yeah.  It was the overwhelming favorite among our listeners.  And not only because Hover is a...



LEO:  The power of advertising.



STEVE:  Not only because Hover is a past sponsor.  And I am completely sold.  In fact, when I go back and look at GoDaddy, I think, what was I thinking?  And I know what it was.  It's that Mark Thompson was praising GoDaddy, but I think it's only because they're in his town.  You know, they're based in Phoenix, and so is he.  And I should have used better sense.  The good news is I only had - actually, I was only in the process of the painful transfer, doing a test transfer of some domains I don't use, that did go through.  And it was Network Solutions being deliberately foot-dragging.  I mean, they used every possible day of their week, three days and then four days, they could to delay the transfer.  Anyway, I'm so happy with Hover.



LEO:  Good.



STEVE:  I am set up there.  I am very impressed.  So first of all, to our listeners who tweeted - and also the mailbag was full of suggestions, of people saying Hover, Hover, Hover, Hover.  Namecheap came up a lot.  Everybody has their favorite registrar.  But the overwhelming majority were people who had said, you know, just use Hover, and you won't regret it.  And I don't.  So thank you for that.



I also wanted to note that Friday night, before I quit for the week, I pushed out a major update to Never10.



LEO:  Oh.



STEVE:  Yes.  It is now v1.3.  And what I would ask is it's kind of important that everybody who used a previous version run it just once because I was sure that I observed behavior of Windows Get Windows 10, the GWX components themselves proactively deleting the pre-Win10 download blob that in many cases may have been downloaded into people's machines, but I was never able to recreate that behavior, despite extensively trying.  So then I started worrying, okay, maybe, I don't know, I can't explain it, I'm sure it disappeared.



But the longstanding disk cleanup tool, which is called Cleanmgr.exe, it does provide the option itself, if you select the Clean Windows System Files option.  It goes away and then comes back with a bunch more checkboxes.  And right in there is, like, Windows Upgrade Pre-Download.  I mean, they call it that themselves.  So it might have been operator error, where I discovered that, and I was playing with that, and it did what it said it was going to do, and then I thought, oh, look, GWX deleted the blob.  Anyway, the blob is 6.5GB.



LEO:  What?



STEVE:  I mean, it's massive.  And this was on a Win 8.1 test machine of mine, x64.  So 64-bit, 8.1.  It downloads about three or so, and then it expands it to 6.5.  And it took me, frankly, quite a while to root that all out.  It's an entire tree of more than 19,000 files and folders with bizarre privileges and ownership by the trusted installer.  And anyway, the point is, 1.3 knows about it and takes responsibility for it.  It shows it to you and gives you a one-click delete.  So it may very well be that, if you had been, like, saying no, no, no, no to Windows or to Microsoft and their components, until you got Never10, which stopped all of that nonsense, that 6.5 or whatever blob could still be there.  So I feel badly about that, so I created 1.3 to fix that.



So if you run 1.3, it'll just - either it won't show you anything, which means you don't have the problem, or it'll show you in those two lines below the main little readout screen the exact byte count and object count.  You can see screenshots.  I have updated new screenshots on the Never10 page, where it shows you how many there are.  And if you press the "delete them" or "remove them" button, then you watch them down count back down to zero as it scrubs your system of all of that stuff.  And the second new feature was much asked-for among our enterprise listeners, and that is full command-line switch control.  Many of our corporate and enterprise listeners wanted to use this, wanted to employ it essentially at log-in time in their log-in scripts, which requires - they wanted it just to be done silently.  And so 1.3 gives you a mature command-line vocabulary that allows you to put any combination of four different, or I think it's five, actually, different verbs behind the invocation of the EXE, and it'll do whatever you tell it to on any machine silently.



So a nice little update.  I'm done with it.  It's been a big hit.  I think we're at north of 150,000 downloads now.  But do, I would ask people who ran earlier versions, just run - again, you can of course delete it after you're done.  Just make sure that it didn't leave a big burg behind because I told people it wouldn't, and now 1.3 will at least let you know if it's there.



Also, one of the Healthy Sleep Formula ingredients, Seriphos, is completely gone from the world, unfortunately, and apparently thanks to...



LEO:  Forever?



STEVE:  Well, okay.  So here's what happened.  First it sold out at...



LEO:  Do they mine it out of - it's all used up? 



STEVE:  Well, our listeners did.  It first dried up at Amazon and iHerb, which are the two that I was linking to.  And so people started sending me notes saying, "Steve, can't find it anywhere."  So I went over the Life Extension, and they still had it.  So I made sure I had my own supply.  Sorry, but, you know, I've got to keep doing the...



LEO:  Bunch of people jonesing here, my god.



STEVE:  Got to keep doing the research.  And then, and also Swanson Vitamins had some.  And so I posted that news on the page, and tweeted it, and those immediately dried up.  So now there's no more anywhere that anyone knows about.  So I contacted the guys that make it, and I said, "Hey, what's going on?"  And they said, "Well, we don't know what happened, but it all dried up at retail."  I say, "Well, yeah, I know what happened.  But why isn't there more?"  And they said, "Ah.  We have an improved version which we're about two or three weeks away from having stock on.  And we thought we had plenty at the rate they were selling, but something happened, suddenly made them..."



LEO:  Somebody, somehow...



STEVE:  "Somehow, for some reason, everyone wants it now.  So for a couple weeks we're out of stock."  Now, anyway, so what happens is I found a - someone posted in the GRC health newsgroup, he wrote:  "Looks like Steve's HSF popularity has depleted the stock of Seriphos.  I can't seem to find it anywhere.  I'm going to run out in a couple days, and I don't want to miss a night of good sleep.  I had forgotten what it was like to sleep through the night, and I'm not willing to go back.  Anyone know of an alternative source online?"  Unfortunately, I don't think there is one.



The good news is they are saying they expect to have - they didn't have an exact ETA late last week.  But they expected to have at least an ETA soon.  So I'll be checking back, and I will update on the HSF page when I have any better idea, and when they do, of when they'll get stock back.  And it's supposed to be more bioavailable, which is good, and more hypoallergenic, and not have some of the other excipients that sometimes get stuck into these things.  People put various other, like, filler stuff to, like, bind tablets together and so forth.  And so it's freer of that.  So I think it's actually going to be an upgrade.



Now, I have to say the bad news is people have been trying to go without it and reporting failure.  And, yes, it is probably the key ingredient of the formula.  And in fact I'm right now working on a new version with fewer ingredients.  I'm down to four, and it's working really well.  I'm going to try to get rid of another one tonight.  So it requires taking more of fewer things, which I think is an improvement for a number of reasons.  But anyway, I will cover that on the page when I have some definite answers.



Two more things:  There was an amazing article written in The Guardian which I tweeted about.  And the tweet was, "What should you eat?"  And it is a long story.  In fact, The Guardian called it - it's in their "long read" section.  I created a bit.ly link for it:  bit.ly/sn-sugar.  And it is a really nice, accurate as far as I could see, sort of summary of the history of the nutrition misinformation that we have received, and why and how it was so wrong for so long.  I got a lot of very positive feedback from people after tweeting it earlier last week, so I wanted to share it with our audience:  bit.ly/sn-sugar.  Really worth the read.



And, finally, Peter Hamilton did it to me again.  He suckered me into a series that he hasn't finished writing yet.  My review that I posted on Amazon because the Kindle popped up and said, "Hi, you just finished.  Would you like to write a review?"  And I said, "Actually, I would."  So I wrote:  "Okay, I admit it.  I'm a complete sucker for Hamilton's work.  I've read everything he's written, and not just once.  Before you read this, you must read The Void Trilogy.  And before you read that, you must read the 'Pandora's Star' and 'Judas Unchained' pair.  And really the absolute best place to start would be with 'Fallen Dragon.'  I envy anyone who has these amazing pieces of truly wonderful space opera ahead of them.  As for this work, I never believe that anything I read of Hamilton's will be able to live up to everything he has already done.  How could it possibly?  And then it does.  This does.  You will love it.  I guarantee it."  And so that was "The Abyss Beyond Dreams."



LEO:  I just queued it up on my Audible because it's been sitting there.  I bought it some months ago when you first talked about it.



STEVE:  I did exactly the same thing.  And I read one night, when the formula was not working because I was doing what I call one of my "negative tests"...



LEO:  That's aptly named for that, actually, yeah.



STEVE:  Yup, "The Abyss Beyond Dreams."



LEO:  "The Abyss Beyond Dreams," yeah.  I'm there right now.



STEVE:  The good news is, for anyone who doesn't want to wait, the second one is due out mid-September.



LEO:  That's one of the reasons I didn't start it, because it's a trilogy, and it's only Book 1.



STEVE:  Yes.  And it's like, remember "Pandora's Star"...



LEO:  We've been there before.



STEVE:  ...left us, like, oh, my god, what's going to happen?  The good news is this doesn't.  It is two books, but this gives you a really nice semi-conclusion.  Yes, it'll be nice to see what happens next.  But you're not left like with a cliffhanger, where you are really annoyed that you can't keep going.  So I would suggest to people, if you like - and first of all, we haven't talked about sci-fi in depth for a while.  So there may be listeners who don't know Hamilton.  So "Fallen Dragon," it's a standalone fabulous perfect place to start with your introduction to Hamilton.



And remember that I do have a PDF that is sort of my reading list, and that's bit.ly/sn-scifi.  Or maybe there's no hyphen.  S-C-I-F-I, either with or without a hyphen.  Or maybe it's SG.  Anyway, I'm sorry.  I think it might be sgscifi, maybe sgscifi, which will get you a reading list of Hamilton stuff, who is up there among our favorite authors.



LEO:  Right.



STEVE:  And lastly, since this podcast has got so much material to cover, I wasn't going to do a long SpinRite diatribe.  I just wanted to say I saw a nice tweet from Stuart Carroll, public tweet.  He said:  "After hearing about SpinRite on Security Now! for so long, I tried it yesterday, and it brought my media drive back from the dead.  Thanks, SGgrc."  And Stuart, thanks for sharing your news.



LEO:  Well, that was easy.



STEVE:  Yeah.  It does that, by the way.  It brings drives back from the dead, for anyone who's curious.



LEO:  Yes, sir.



STEVE:  So of course the big news is the announcement from Open Whisper Systems that they had finished integrating their communications technology into WhatsApp across all platforms.  And, I mean, it is multiplatform.  And in fact they've just got - they've expanded the beta to the desktop version.  It's been in limited beta for a while.  It's now available in open beta, so anybody who wants to get the WhatsApp app for their desktop.  Now, in their photo on the announcement they show it on a Mac, and I didn't have a chance to dig into which desktops it's supported on.  But at least the Mac.  So we've sort of been talking about Open Whisper Systems, and of course Moxie has been a topic and aspect of the podcast.



LEO:  As has his hair.



STEVE:  As has his hair and the fact that he likes to sail, for a long time.  TextSecure was the name of an earlier messaging app that they had created.  And then there was like - there was RedPhone that they had.  And then there was Circle.  And there have been different efforts.  They've also been moving this forward over time.  At one point they looked at Off The Record, the OTR protocol, which we've talked about in the past.  There was a nice web browser implementation of OTR which provided encrypted point-to-point communications.  But there were some problems with the way it worked because it really needed to be online communications.  It required real-time interaction between the endpoints for the exchange of keys.



And what the Whisper Systems guys wanted to come up with was something that would allow sort of the text messaging model, that is, where you could send a message to someone who may be offline at the time; and when they came online, then they would be able to receive the message.  So it would be queued somewhere until they were able to receive it.  And the security challenges of that were significant.  So they were, over the course of years - and that's one of the interesting takeaways, is this kind of super-mature technology, which is what I think they have today, doesn't happen overnight.  It takes nurturing, and it takes building a few and seeing how they work and thinking about it because it's often difficult to attack something that's just an idea.  It really helps to, like, play with it.



And this is why building stuff is so important.  That's one of the lessons that I've talked about often is that hobbyists who create something discover stuff they didn't expect to find.  And it's because they didn't expect it that it's useful.  Even though you don't know it's useful a priori, it turns out once you do it it's like, wow.  I didn't think this was going to happen.  And that's the point.  So as a consequence of them, like, having many previous things, they've got to a point today where I was just enraptured by digging into the details of this protocol.  It, too, has been renamed, as has the app.  There's no more TextSecure or RedPhone or Circle.  Everything is now Signal.



So Signal amalgamates and pulls all of those previous efforts together as the app.  And the unpronounceable name of the protocol, Axolotl, A-X-O-L-O-T-L - and isn't he adorable, Leo?  Oh, is this the cutest little thing I've ever seen.  He's critically endangered and adorable, probably because Disney stole them all, aquatic salamander.  And they called it Axolotl because the salamander, as we talked about at the top of the show, has amazing self-healing capabilities.  Being a salamander, it can regrow limbs.  And the Axolotl protocol has some self-healing properties.



So I'm going to read two things from two different blog posts where they describe stuff, and then I'll get into my own bullet points of the features.  So one of their blog postings said:  "To continue eliminating confusion and simplifying everything within the Signal ecosystem, we're renaming Axolotl to Signal Protocol.  The implementations have been renamed, so there are open source Signal Protocol libraries available for C, Objective C, Java, and JavaScript in our GitHub repository."  So everything I'm going to talk about is also, not only well vetted, but open source, encouraging this to be the messaging protocol of record.  They continue:  "These have been making their way into an increasing number of communication apps" - as well they should, I say.  "And," they write, "we're excited for the future of the Signal Protocol as it continues to spread."



And then in one paragraph from a different posting they said:  



"As of today" - and that's this most recent one of last week - "the integration is fully complete.  Users running the most recent versions of WhatsApp on any platform now get full end-to-end encryption for every message they send and every WhatsApp call they make when communicating with each other.  This includes all the benefits of the Signal Protocol - a modern, open source, forward secure, strong encryption protocol for asynchronous messaging systems, designed to make end-to-end encrypted messaging as seamless as possible."



LEO:  By the way, Burke has just handed me a note.  He's apparently as big a science fiction fan as you are.  He reminds me that in "Dune," the Mentats grow in tanks called "Axolotl tanks."



STEVE:  Oh, nice. 



LEO:  Go Burke.  Nice.



STEVE:  Burke, I think, yeah, that's...



LEO:  Nice reference.



STEVE:  Yeah, it's up there, yes, very nice.  And, boy, they need to because they're strange-looking creatures.



LEO:  They're kind of [crosstalk] the spice.



STEVE:  Yeah.  Okay.  So we have now, I mean, as far as I'm concerned, this problem has been solved.  These guys utterly and absolutely and beautifully nailed it.  We have confidentiality, meaning of course that the communications is encrypted.  We have integrity, meaning that any message alteration will be detected and will fail the transaction, which is to say that there's a message authentication code as part of this, a MAC, so that the message cannot be altered.  They claim authentication, and that's, as I guessed, actually, last week, it's like I wasn't seeing how that was there.  And it turns out they know it's not.  But it's available.



And so that's one of the caveats we'll talk about.  And so it is possible to confirm the identity of the correspondent.  But you need to take action to do so.  Then they also claim participant consistency.  And that's really also important, and unfortunately it defaults to off.  So that's the other thing that has to be done manually.  I don't know why it's off.  It's like, turn it on.  But our listeners will.  And we'll cover that in a second.



LEO:  Yeah, okay.  I want instructions.  Okay.



STEVE:  Yes.  Then they also claim destination validation, and that's actually just related to the previous two, authentication and participant consistency.  They do have forward secrecy, and we remind ourselves that that means that a future compromise of a private key will not allow the decryption of past messages.  And they have backward secrecy, which as you would expect is the reverse of that, meaning that a past compromise of a key will not allow decryption of future messages.  And that's really just       an ephemeral key that we've talked about, a key that's constantly being changed and renegotiated.  So nobody who had a key in the past, it doesn't do them any good about the future.



Message unlinkability.  The messages are asynchronous.  They are independent.  They can arrive out of order, and they can be missing, and the whole system still holds together.



And another really cool feature, and Moxie likes this a lot, is message repudiation, which means that it is possible for a - okay.  So a nonrepudiation system is unfortunately like PGP, or Threema, where in both cases a public key is used to validate the message signed with a private key.  The problem is that private key never changes.  That is, that's static for a PGP user or a Threema user.  Which means that a recipient of such a message automatically has a guarantee that it came from the sender.  The problem is that's a nonrepudiatable guarantee.  That is, the sender is unable to say "I did not send it."



Now, it might be a little confusing because you're saying, wait a minute, we want to make sure it's from the sender.  But so the way we get message repudiation, which is a very cool feature, which is why Moxie likes it so much, is that the recipient could also forge a message from the sender.  Which means that the recipient cannot say to a third party, this guy sent this to me, because that recipient, by virtue of the way the protocol works, can also generate a message which is as equally valid as something that they received.



So when you think about it, that is just incredibly cool.  It's what you want if you care about the ability to have message repudiation, which certainly could come in handy because we've got such strength in terms of the crypto system.  So what it means is the recipient knows that only the sender or the recipient could validate this message.  But the fact that the validation includes the recipient means that the recipient can't claim, well, it means that the sender can claim, with provability, that, no, it's not necessarily the case that I sent that because the person I sent it to can forge it, too.  The recipient can forge it.  Which is very clever and very cool.



And then finally asynchronicity, the fact that the system is designed so that it does not need to be real time.  It works where messages are being queued by a server until a recipient is ready to receive them.  So I'm not, for the purpose of this podcast, going to dig into the protocol.  Frankly, I can't do it on an audio podcast because I would need some diagrams, because it is really complicated.  There's one point, for example, where each of the endpoints has a - they produce an elliptic curve pair, and it's funny how many things Signal and SQRL have in common.  Things that I did two years ago are, like, this is the way Signal is working, too, because it's like the right way to do it.  They're using the same curve I am, the curve 25519, which is Bernstein's elliptic curve algorithm.



So they create Diffie-Hellman private and public keys, static ones.  Then they create another set of ephemeral keys.  Then they use a triple Diffie-Hellman protocol where they exchange their ephemeral keys, and they use Diffie-Hellman key agreement three times to agree to generate, to take their private key and the other person's ephemeral public key, get a key agreement there.  The other guy takes his private key and the other's Diffie-Hellman public key, gets a second agreement.  And then they take the exchanged ephemeral keys and then use that with Diffie-Hellman to get a third, and they concatenate all three of those together in order to get this master session key.



And anyway, like I said, it's a crazy protocol.  But what it ends up doing is it eliminates the OTR, the Off The Record protocol, used DSA signing, the Digital Signature Algorithm, which is extremely scary for cryptographers because it's a brittle and fragile algorithm that's easy to get wrong; whereas Diffie-Hellman is just - it's hard to get wrong.  So, and that bizarre exchange and triple Diffie-Hellman and concatenation system, a whole bunch of amazing properties fall out of it.  And this is what Trevor, who's been working with Moxie, came up with, was that particular key.



But there's this notion of a ratchet.  In an interactive protocol, a ratchet is the term where you want to evolve a key that you agree upon.  As you send messages back and forth, you ratchet the key forward.  And there's this notion of a single ratchet, where the first side sends the first half of a Diffie-Hellman key agreement to the other guy.  But until he receives the other guy's half, he can't really do anything.  When the other guy sends it back, he sends his half of the key agreement with an implicit acknowledgement of the receipt of the first half.  Now each side has new Diffie-Hellman ephemeral public keys which they have exchanged.  And they're able then to do a Diffie-Hellman key agreement to obtain the identical next ratchet key.



The problem is that's nice in real time when you're able to keep sending these back and forth and keep evolving keys.  But one of the innovations here is an offline ratchet using a hash, where, if the sender is sending successive messages, they really do not want to reuse keys.  So they use a hash ratchet, which one side can do just by hashing the old key in order to get the next key.  And that allows the keys to evolve single-endedly.  And then the way the protocol works, the moment the outstanding first real-time sort of double-sided ratchet can be completed, then they both resynchronize the offline ratchets.  And as I said, it is a little mind-bending, but they've got it all working.



And the one other really interesting thing about this protocol is that there's a problem with establishing the first session.  That is, in a real-time protocol you could somehow come up with a shared key in real time.  But this whole system wants to be able to send somebody you have never sent a message to a secure message.  So that the very first one is secure.  And the question is, how do you solve that problem?



Well, they did it brilliantly.  When you register your WhatsApp or your Signal app, whatever it is, with the central server, your client pre-seeds the server with a hundred of your public keys and gives them IDs.  Then what that allows is that allows somebody who wants to send you a message, who has never sent you one before.  They're online.  I mean, they're sending you a message.  They're able to get one of the hundred pre-seeded keys from the server, which you have provided the server ahead of time, in order to bootstrap a secure message.



LEO:  It's your public key, so there's no downside to putting that on the server.  Or it's a one-time...



STEVE:  Actually, it's 100 ephemeral public keys.



LEO:  Okay.



STEVE:  So it's not your public key.  It's actually...



LEO:  It's a one-time key.



STEVE:  It's actually, exactly, it's a cache of one-time keys.  And what they do, then, is they use that to encrypt and place that back on the server until you're online.  When you are, that blob comes to you.  Well, first of all, you will never allow the reuse of that one-time key.  So if you've ever seen it used, actually in use before, you absolutely drop the message.  The server itself should never issue it a second time.  But again, a recipient could try to reuse it.  But they're one-time.  So since the server is going to delete it, nobody else will get it.  The recipient has no reason to reuse it because it won't be accepted because the originator of that key will remove it from their pending valid ephemeral keys list and won't accept it.



So the system is just, I mean, it is - they nailed it every way from Sunday, with one exception, that you cannot be sure who you're talking to.  And this is always the problem.  Authentication is the bugaboo.  It's the thing, you know, when I was excited about Threema, it's because they put that in front.  They said, you know, authentication is critical.  And that's what the three dots and the yellow, green, and red, like, stop sign was.  It was how much, you know, you only got green, full green authentication if the two devices had seen each other's QR codes and had, like, a physical device exchange because then you absolutely knew that they had exchanged - that the public key you were getting was the public key of the person you thought you were getting it from.  That's the problem is this man-in-the-middle problem.



And what's interesting is they know it.  The picture, Leo, at the top of this - in the show notes, at the top of our discussion, under the WhatsApp headline, is the photo that they show in their blog posting.  And what is it?  It's the authentication portion.  What they've done is they understand that the one thing they haven't solved - and, I mean, it is the problem.  There is not a way to solve this.  And so what they do is they provide a QR code or a, yes, sitting down, 60, six zero, digit confirmation.  That QR code is a version of those 60 decimal digits.  They chose decimal because WhatsApp wants to be multilingual, and no other alphabet is as universal as the decimal digit system which does exist in all the languages that WhatsApp spans.



LEO:  Now, what if I - could I put my QR code on the screen?  And then people would...



STEVE:  Yes.



LEO:  Because that would verify, I mean, as long as you trusted this, and somebody didn't edit my code into the video.



STEVE:  No, that won't work.



LEO:  It won't work.



STEVE:  That would work with Threema.  That won't work here.



LEO:  Oh.



STEVE:  Because, as I was just about to say, that code contains both of the parties' keys.



LEO:  Oh, I don't have a code until I'm in a conversation.



STEVE:  Correct.



LEO:  Got it.



STEVE:  And so this is used - so you establish a conversation.  And so, okay, so what I like about this is that authentication is optional.  That is, you don't need to do it.  Everything's fine.  I mean, and it's almost certain that the world is working the way you expect it is.  But you cannot know.  You cannot be sure.  So what you have to do is arrange to share either the QR code or those 60 digits with the person that you're in a conversation with.  That is unique to your conversation.



LEO:  Okay.  Get your phone out, Jason.  I'm going to authenticate with Jason right now because we've already had a little chat.  So I would pull up that chat.  And then how do I do that?  Is that in the menu here?



STEVE:  I fired it up and got it going at my end, but I've never had a conversation with anyone, so I don't know.



LEO:  That's the problem.  No one has this.  Okay.



STEVE:  Okay.  So, but, well, no, it's WhatsApp.



LEO:  I know, everybody has it.  But the problem is not everybody uses it.



STEVE:  The second part of this is that, for some reason, if that ever changes, you are not notified.  That is, if a man in the middle inserts themselves, you're not told.  But under account security, you can turn that on.  And it's like, okay, why is that not on?



LEO:  Oh, the alert that it's no longer secure,  yeah, by default is off.



STEVE:  The alert that the identity linkage has been broken, essentially, that is, that thing that you are authenticating has changed.  And so they say "Show security notifications," and then they said "Turn on this setting to receive notifications when a contact's security code has changed."  Why would you not want that on all the time?



LEO:  Yeah.



STEVE:  Because it should never change.



LEO:  Right.



STEVE:  The messages you send and your calls are encrypted, regardless of this setting, when possible.  But everybody needs to turn that on.



LEO:  Right.



STEVE:  So, I mean, since no one's - even if you don't authenticate, there's never a reason for that code to change unless they are setting up a new device, or they've lost their device, and they're replacing it, and et cetera.  So anyway, it is an amazing protocol.  And, I mean, it does provide encryption.  They've nailed it all.  But the one problem is you need to verify one time.  You only need to do it once.



LEO:  So I figured out how.  Actually Jason did.  I tapped his picture on the chat that we're already engaged in and go to info.  No?



JASON:  Yeah, that's it.



LEO:  Oh, yeah?  Info?  Okay.  Picture, info, and then I scroll, and it says "Encryption," and there's a little key, and there's that.  Now what does he - oh, so I press - so he's done that.  Now I'll scan your code, Jason.  So put your code down here, and I'm going to scan your code.  Yeah.  Now, pull up the code on my - right, Steve?  I would scan my code in his phone.



STEVE:  Yup.



LEO:  And then that would verify that there.  And now we are secure.



STEVE:  Yeah.  Well, now you are authenticated. 



LEO:  To him.  And now we want to do the opposite; right?  So you press scan code on your phone.



STEVE:  No, there's actually no need to reverse it.



LEO:  There's no need.  It's both ways, okay.



STEVE:  All it was doing was comparing to make sure they were identical.



LEO:  Got it.  So it's verified, but that was an unnecessary second step.



JASON:  Yeah.



LEO:  So now it's verified.



STEVE:  Correct, right.  And the other way is to read...



LEO:  That long...



STEVE:  ...the 60-digit...



LEO:  Yeah, not going to do that.



STEVE:  I know it's long.  But frankly, the first three digits will be wrong if the code is incorrect.  It's a hash.



LEO:  Jason said now we're encrypted.  But, no, we've always been encrypted.  This is just that now I know it's you, couldn't be anybody else.



STEVE:  Exactly.  Until then, there could have been a third party who was intercepting both of your connections, pretending, and essentially impersonating each of you to the other.



LEO:  Right, right.



STEVE:  And this cuts out the middleman.  This absolutely verifies there is no middleman.  And so for someone who you're wanting to - who you can't visually exchange codes, you can just say, okay, as the picture shows, you know, 173275114426668.  Because you'll notice you and Jason will have the same number.  If you compare, yeah, they're the same.



LEO:  Ah.  Got it.  That's why you only need to do it once.  It's the same QR code.



STEVE:  Exactly.



LEO:  Got it.



STEVE:  Exactly.



LEO:  So Dr. Mom says, so if I'm not - I want to chat with my cousin in Paris.  She would have to read the code off over the phone.  Or I guess she could send a picture of the QR code.  But then you'd have to trust that transport.  So that wouldn't work.



STEVE:  True.  True.



LEO:  If you have PGP - okay, here you go.  You have PGP.  She encrypts a message to you with that number in it, and then you can verify.  Or a picture, actually, better, a picture of the QR code.  A question from the floor.



STEVE:  Fax it to her or...



LEO:  Fax it to her, yeah.



STEVE:  Or here's one.  Alternate.  Because this code is set up in 12 groups of five, alternate reading to each other every five digits.



LEO:  Wait a minute.  Now, here's a question.  This is a good one from the audience.  It's the same code.  I just take a picture of my own code.  That wouldn't work, Steve.  There must be a different number.  



STEVE:  No, this is for you to - all you're doing is - what that checkmark said was that these are the same.



LEO:  Yeah.  But couldn't I just take a picture of the QR code and then...



STEVE:  Yours and Jason's are showing the same code; right?



LEO:  Yeah.  So I just take a picture of my code on my phone.  Yeah, it is the same code.



STEVE:  So the point is it's for your information.  It's not - it doesn't do anything for the...



LEO:  I'm not too bright.  I apologize.  I don't really understand how to do this.



STEVE:  It doesn't do anything for the app.  It doesn't change anything.  It's just this allows you to know that you actually have Jason's private key, and he actually has yours.



LEO:  Right.  So you really wouldn't want to just take a screenshot of your screen and then take a - because that would be - you wouldn't be proving anything.  You have to make sure these both match.  That's it.



STEVE:  Yes.



LEO:  This could be the bad guy's code on your phone.



STEVE:  Right.



LEO:  So you have to go to tell Jason, hey, make sure these match, and then we know.



STEVE:  Right.  



LEO:  Got it.  This could be the man in the middle until I verify that we both have the same thing at both ends.



STEVE:  Yes.



LEO:  Got it.



STEVE:  And in fact, if you had different codes, there is no question that there is a man in the middle.



LEO:  Right, because that would have to be, yeah.



STEVE:  Those codes have to be identical if it's a point-to-point connection.  So not only does it prove that you each have each other's actual private key, it also proves, if they're the same, that there is no man in the middle.  If they are different, there is a man in the middle.



LEO:  Okay.  Now, I don't want to be the Windows 10 in the punchbowl here, but there is one point that there's nothing - it's not open source, so you can't - in fact, this is of course what EFF says, as well.  There is, you know, seven green checkboxes.  And while Signal is open source, and you can verify it, you can't verify WhatsApp.  So there's a red check there that's code is not reviewed.



STEVE:  And in fact one of the things they announced a few months back was they got a verifiable build on Android, meaning that, from the public source, they built a binary identical to what the Android app had, which of course is what we want to see.  We want to see that it is absolutely, bit-for-bit, from the source, that it was no source [crosstalk].



LEO:  Yeah. You can do that, and you should do that because that verifies the fingerprint.  But that only verifies the binary blob.



STEVE:  Well, and Leo...



LEO:  You don't know that there's no NSA code in there.  You just take - you have to take their word.



STEVE:  Right.  And, even worse, you made a very good point a couple weeks ago when we were talking about Apple.  And this is why I want to - the other thing I want to stress on the podcast is absolute security in the ivory tower exists at the mathematical level.  In application, it doesn't.  There is no such thing.  It is an illusion.  And so I would argue that we get too worked up over this idea of why can't I have perfect mathematical security?  Because you can't.  You're typing on a screen, and you didn't write the firmware yourself, or the software, or design the silicon.



LEO:  Or, exactly, the processors.  We talked about it last week.



STEVE:  There's too many, you know, there's theory, and there's real world.  So it cannot get any better than this.  It doesn't need to get any better.  So people should expect...



LEO:  Open source could arguably be better.



STEVE:  No.



LEO:  Not perfect.



STEVE:  No, no.  I would say I really don't think that we're seeing any evidence of that because Stagefright is open source.  OpenSSL is open source.



LEO:  No, no, no, no.  Not by nature of being open source, but just you have to trust Moxie Marlinspike and the WhatsApp team that they haven't injected code in here.  If it were open source, somebody could at least verify that there's no backdoor in there.



STEVE:  Right.



LEO:  I agree with you there's no - open source isn't, per se, more secure.



STEVE:  Unfortunately.



LEO:  Bugs exist in every form of code.  But it does allow you to verify that there's no intentional backdoor in there.



STEVE:  Right.



LEO:  All right.  Eh, you know, I mean...



STEVE:  Yeah, well, okay, Leo.



LEO:  There's nothing perfect.



STEVE:  If you want perfect security, you use a cutout to arrange a meeting in the middle of a park on a bench.  Or if you don't trust the person that you're going to whisper to, you meet in a steam bath and briefly flash each other.



LEO:  Excellent, excellent tradecraft, Steve.  I have a QR code on my butt.  Please scan it.



STEVE:  Unfortunately, technology is only as good as its implementation.  And nothing has changed from the days of "Casablanca" and the old spy movies.  If you really want to be secure, you've got to meet face to face in a place where you cannot be eavesdropped on, without listening devices, and whisper to each other.  That's the way it is.



LEO:  Is it Ben Franklin said two could keep a secret, but only if one is dead, I think was the line.



STEVE:  Right.  Anyway, WhatsApp is a beautiful piece of work.  Hats off to these guys.  We have now what should be an industry standard messaging solution in Signal - open source, cross-platform, multi-language libraries available.  There's just no excuse for anyone to do anything else.  They nailed it.



LEO:  Actually, Ben said three can keep a secret if two are dead.  But it's still the math.  It's just the math.  Steve Gibson, I am so glad that you give this your thumbs-up.  And what's remarkable really about this is that, with the flip of a switch, Facebook and WhatsApp gave one billion people, close to one billion active users, instantaneously secure, not just text, voice communication.



STEVE:  Yeah.



LEO:  Wow.  Pretty impressive.



STEVE:  Yeah.



LEO:  We do this show every Tuesday, 1:30 Pacific, 4:30 Eastern time, 20:30 UTC.  Please watch live, if you can.  Love having you in the chatroom.  We also had a great studio audience.  You probably heard them giggling in the background and asking tough questions.  If you want to be in the studio audience, tickets@twit.tv is the email address.  Steve will be doing a Q&A, God and Moxie Marlinspike willing, next week.  So you can put your questions up on the Twitter.  He's @SGgrc.



Or go to his website, GRC.com/feedback.  While you're there, golly, there's so many great things to do.  Pick up your copy of SpinRite, world's best hard drive maintenance and recovery utility.  He also offers audio of the show, and transcripts, written transcripts.  I think it's really helpful sometimes to read along.  And the show notes are there, too.  So if you want to see the pictures we talk about, they're all in there, as well.  And links.



STEVE:  And all the links.



LEO:  Yeah.  We have also audio and video of the show at our site, TWiT.tv/sn.  We also put it on YouTube, and it's on every podcast client and all that.  Just search for Security Now! and subscribe.  Ten years in the making.  You don't want to miss another episode.



STEVE:  556 next week.



LEO:  Wow, wow.  Thank you, Steve.  We'll see you next week.



STEVE:  Thanks, Leo.  



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#556

DATE:		April 19, 2016

TITLE:		SMTP STS

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-556.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss the outcry following the "60 Minutes" high-visibility demonstration of real-time cellular phone hacking.  We also cover the news of the Canadian RCMP having BlackBerry's master decryption key; the end of Apple's QuickTime; what the FBI found (or didn't) on the San Bernardino attacker's phone; and a revisit of Threema, WhatsApp, and Signal.  Then, after a bit of miscellany, we take a look at a newly proposed specification for increasing eMail security known as "SMTP STS."



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  He's upset.  He's annoyed.  He's very dismayed by this proposal to somehow glom STS, Secure Transport, onto SMTP, the email server.  No, he says.  We'll find out why.  And we'll also talk about the latest tech news, including that "60 Minutes" report last night on cell phone hacking.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 556, recorded Tuesday, April 19th, 2016:  SMTP STS.



It's time for Security Now!, the show where we protect you and your loved ones - what are you laughing at, Steve?



STEVE GIBSON:  You're rocking the baby?



LEO:  I'm rocking a baby, showing how we protect babies.



STEVE:  You know what that reminds me of?  That reminds me of, if anybody - we've talked about "The Good Wife" a couple times.



LEO:  Love that show.



STEVE:  But, oh, Leo, last Sunday, oh.  It was just - it was so, I don't know who - I don't know if they, like, change writers, or if the writers know they only have three more to go and so they're just giving it - they're going out with a blast.  But it was so full of little extra wonder, I just - it was just spectacular.  And the one guy, you know, holding the dog, just - he just walks around with this little dog, with his arm - with his paws up in the air.



LEO:  Oh, how funny.



STEVE:  And it just, oh, gosh.  So are you behind in...



LEO:  Oh, I'm years behind.  I'm only on Season 4, I think, so...



STEVE:  Oh, it doesn't disappoint.  It continues to be good.  And this is the last season.  They have three episodes left, or remaining, of this final season.  But, oh, boy, is it wonderful.  So I'm not sure what you were rocking, but it reminded me...



LEO:  It wasn't a dog.  But I did not yet tell you that that voice you hear is Steve Gibson.  He's from GRC.com.  He's our security guru.  He's been doing this show for 10-plus years, 11 almost, and knows everything there is to know.  We just - actually, you probably have, almost 11, because we just celebrated our 11th anniversary of TWiT.



STEVE:  I think we're a few months away.  But, boy, that 11th year went fast.  Because we were just...



LEO:  I know, we just did the 10th, I know.



STEVE:  Yeah.



LEO:  So let's see.  So I started TWiT in April.  First show was April 17th, 2005.  And I was still going up to Canada.  And I think I was in Canada, I said, Steve, you and I should do a show.



STEVE:  It was between our - we would shoot, what was it, like four episodes of Call For Help. 



LEO:  It was horrible.



STEVE:  And it was between [laughing] - it was between those episodes.  I would come up and sit down with you and do things on a whiteboard because that was, you know, it was a TV show, and so we could count on visuals.  And so I'd set up a whiteboard normally in between.  And so you said to me - because you, basically, you worked for one week out of the month, except for the weekends when you were doing The Tech Guy.  So you had all this spare time.  Meanwhile, podcasting was happening.  And so you said to me, "What would you think about doing like a weekly podcast on, like, Internet security?"  And I said, "A what cast?"



LEO:  Really?  You didn't know what I was talking about?



STEVE:  And you said, "You don't know about podcasting?"  I said, "No, nobody does."



LEO:  Nobody did.  It was April - August 2005.



STEVE:  I'll never forget, I was watching MSNBC, and Chris Matthews found out he had one.  And he was reading the teleprompter.  And he said, "And also, check for our - our what?  Our-our podcast?"  And then he, like, looks off-camera.  "What's a-a pod-podcast?  What's a pod..."



LEO:  Oh, I've got to find that.  I wonder if I could...



STEVE:  "I guess we have something called a podcast."



LEO:  I would love to find that somewhere.  That's funny.  That's funny.



STEVE:  Anyway, it's turned out to be the best thing that ever happened, so...



LEO:  I love it.  I mean, it is one of our absolute top podcasts.  We've started our own rating system because we haven't been able to find a reliable one.  And so we're getting now finally consistent, reliable numbers.  And as I see these numbers come in, it's just really mindboggling how many people listen.  It's something, I can't remember what it is, but it's something like 80,000 a week listen every single week to this show.  And that's an amazing number.  So, well done.



STEVE:  Well, thank you for suggesting it, and for creating the forum, and setting it up, and the links and the bandwidth and everything else that you do.  I'm happy to bring...



LEO:  Plus that's 80,000 people a week who are protected a little bit from the perils of the Internet.



STEVE:  Well, and we have some more of that this week.



LEO:  Oh, really.  What a surprise.



STEVE:  On Sunday, before the crazy fourth-to-the-last episode of "The Good Wife," "60 Minutes" aired one of their three pieces that they do every Sunday.  The last one of the three was about cell phone hacking, and it generated a flurry of information.  Now we've got the Senate worried because, you know, basically they shined a bright light on something which we had already talked about, back when it was news, which was the summer of 2014, the Chaos Computer Convention had an expose on this.  And we talked about the baseband processor in cell phones, which gets very little attention.  And back then we talked about how, you know, this is something no one's looking at, and it's a big security problem.  So we have to talk about that, sort of to follow up on what "60 Minutes" talked about and to give it a little additional fluffing up and context. 



LEO:  Well, and what's interesting is that we talked about it a couple of years ago.  It's not improved.  And it probably will never be improved.  Those things just don't get updated.



STEVE:  Actually, as I was thinking about this and looking at all of the attention it got, I thought...



LEO:  Maybe it will.



STEVE:  ...the NSA, if they were dead, they would be turning over in their grave.  They're not.



LEO:  Please don't tell people about this.



STEVE:  They're not dead, and they are not happy.



LEO:  No.



STEVE:  Because this is not something, I mean, it is so potent that they're like, ooh, no, no.  And the good news is nothing will happen.  Nothing will change.



LEO:  It's hard to do; right?  It's hard to fix.



STEVE:  Yes.  It is.  It is.  In fact, it's funny because the subtitle of this week's episode about a different technology is "Horrible Internet Kludges Never Die."  And similarly, you know, horrible, really old telco kludges never die.  I mean, you just - you can't change the way this stuff that is so deeply burned into the infrastructure is built.  And what "60 Minutes" was talking about, and we'll be coming back to this when we're actually supposed to be talking about it, is a signaling system which glues individual providers together.  And it's a deep, rich API that presumed nobody had access to the network.  Well, once upon a time nobody did.  Then they said, oh, look, Internet, and put everything on the Internet, so everybody has access to the network.  But nothing else changed.  Anyway, we'll get there in a second.



I wanted to talk about a recently released RFC, sort of perversely called Request For Comments.  The only comment I had was a typo where they got the direction of something backwards.  And I thought, am I going to bother telling them?  And I thought, no, a whole bunch of other people will tell them.  Anyway, this is about something which is definitely right in our wheelhouse, and that's the acronym, or the abbreviation, is SMTP STS.  STS, of course, stands for Strict Transport Security, or sometimes Strict Transport Secrecy.  I guess I like secrecy.  I'm not sure which I like better because it is really about encryption, so that's secrecy.  Security requires a large - is a bigger, has a bigger set of requirements.



But of course we've talked about HTTP STS, that is, enforcing HTTPS, essentially, on the HTTP protocol.  And this, unfortunately, tries to bring the same thing to email transport, that is, SMTP, which is Simple Mail Transport Protocol.  The bad news is what we really want is a good solution which DNS Security could provide, and so much more.  But it's sort of not happening because there's a lot of - a lot has to happen in order for us to have any DNS security.  Every piece of the system has to be in place, or we have none.  So...



LEO:  Are we moving in the direction, at least?



STEVE:  Yeah, I mean, yeah, the root servers finally got signed, and that was a big deal.  But the deployment has to happen.  And unfortunately, DNSSEC is an all-or-nothing.  And so it's like, okay, when?  So in the meantime, this is an interim horrific kludge meant to kind of improve the security.  And the problem is in order to do it, it is just a godawful mess.  And as I'm reading through this, I'm thinking, oh, my lord.



Well, anyway, so I'll explain all of this at the end, after we cover all of the news.  And it's the kind of thing where I just hope this doesn't happen because the subtitle is "Horrible Internet Kludges Never Die."  And if this ever does actually happen, then it'll always kind of be around.  Even when we don't actually need it any longer, some people will keep using it.  And this'll be like, and it's just awful.  So anyway, so we'll have a lot of fun today.  We'll talk about that "60 Minutes" expose.  I wanted to call this "Black and BlueBerry."



LEO:  I know why.  I know why.



STEVE:  Yes, because it turns out that it looks like the Canadian law enforcement had the master key for BlackBerry for the last six years, and then tried to suppress the court documents that disclosed that fact because they wanted to keep it a secret.  Then of course I also wanted to call this "QuickSand for QuickTime" because QuickTime is in trouble.  And we'll talk about some of the details that you didn't cover on MacBreak Weekly because that's what we do here, like the nature of the two heap overflow, heap buffer overflows in QuickTime that require all Windows users to pull it; what wasn't found in the decrypted San Bernardino phone; a little conversation about Threema relative to WhatsApp and Signal because the Threema guys weren't happy with all of the great press that WhatsApp got as the Signal protocol was finally incorporated into it, and so they produced a big marketing checklist that has all green happy checks for them and all red unhappy X's for WhatsApp.



LEO:  Oh, dear.



STEVE:  And it's like, eh, okay, you know.  Like some of them are, okay, we have less lint in our navel than they do.



LEO:  Yeah.



STEVE:  It's like, okay, but that just doesn't have any real bearing on, you know...



LEO:  Big problem with Threema is it's not open source.  That's kind of a significant problem, I think.



STEVE:  Correct.



LEO:  Nor is WhatsApp, for that matter.



STEVE:  Correct.  And but like Signal, for example, is.



LEO:  Is open source.



STEVE:  It is, except that it requires you to, like, give it access to your contacts.



LEO:  Right.



STEVE:  And if you don't, it doesn't work.  And it's like, wait a minute.  What if I don't want to?  So anyway, so some fun conversation about that, and then we'll talk about - we have a little bit of errata.  Oh, and news of a very well-regarded miniseries starting tonight on, I think it's AMC, I've got it in my notes, that when I tweeted the news a few days ago, it first was released in the U.K., and everyone over there said, oh, my god, we've seen it, it's unbelievably good.  And I've never seen a 100% Rotten Tomatoes, or I think it's like 8.6 or something on IMDB.  I mean, the highest scores I've seen.  So lots of stuff for today's podcast.



LEO:  And, by the way, I apologize for grossly underestimating your audience.  Patrick Delahanty, who runs the code that does the audience measurement - and by the way, very sophisticated stuff we're doing, I'm really proud to say - 168,000 downloads of last week's episode so far.  So far.  Which means you'll probably cross 200,000 by the time we're done.  And that's uniques.  We measure uniques.



STEVE:  That has been some growth over the years.



LEO:  Well, and partly it's because the measurement systems we were using had some serious flaws which we did not uncover till more recently.  And so we've had to roll our own.  And now that I understand the code underlying and how it's working, I have some real confidence in these numbers.



STEVE:  Nice.



LEO:  So there is a jump.  But it's mostly, I think, because we switched providers.



STEVE:  Now counting correctly.



LEO:  Well, what we're doing - at some point we should go through this because I...



STEVE:  I'm still bouncing everything through Podtrac.  Should I be doing that?



LEO:  That's fine.



STEVE:  Okay.



LEO:  Well, no.  In fact, I'll have Patrick email you.  It still goes through Podtrac, but what we do is we have a redirect, we have a download link that's TWiT dot something.  And then that does a double redirect.  So it goes through our redirector and then Podtrac's redirector.  Redirecting is, I know, it's not ideal.  It won't be - that won't be for much longer.  But redirecting is the only way to really effectively count.  You would think you could look at server logs and stuff.  But there are a lot of - there's a lot of noise in a server log.  For instance, podcast apps often open five streams at the same time.



STEVE:  Yup.



LEO:  And you don't want to count that as five people.  It's just one person downloading five parts.



STEVE:  I do the same thing on all of my download counts because I only count the retrieval of the first byte of the file.



LEO:  Right.  And then but we have - but at the same time, everybody who downloads from Microsoft comes in as the same IP address.  So you don't want to count a thousand people as one person, either.  So there's some black magic, and we've refined it over time, but to the point now where I feel very confident.  One of the tests is it's highly consistent.  And shows like yours shouldn't show a lot of volatility.  That was a warning sign, when there was all this volati- every week was, you know, 50 percent different.  And that was just wrong.



STEVE:  Wow, you're right, that's crazy, yeah.



LEO:  Because especially shows like yours, which doesn't have different hosts, doesn't have different content, and most people, I think, subscribe to, you wouldn't expect big fluctuation.  So that was the red flag.  And now that we've got our own system in place, it's very consistent, as we would expect.



STEVE:  Right. 



LEO:  A little behind-the-scenes stuff.  168,000, nice.  That makes you bigger than The Screen Savers on Tech TV.  That's what gets me.  When you get the actual [sighing].  As one reviewer once said about Tech TV, they have the audience of a large high school.



STEVE:  So, okay.  There's two different problems with cell stuff.  One we talked about when we were addressing this whole subject years ago, and that's that there is another processor that we never talk about in every cell phone, which for historical reasons is called the "baseband processor."  Apple has been making noises about doing their own for some time, but at this point they're still purchasing them from Qualcomm at a cost of about $33 apiece, which makes it an expensive component of all Apple smartphones.  And thus they look at that and think, you know, we don't really need to be buying this from a third party.  Yet there is a lot of technology there.  It is an ARM-based system with firmware, and it's rumored that there's bugs there.



And the problem is that no one looks there.  We're all, you know, when we were talking about iOS security whitepapers and breaking into the phones and the FBI decrypting this and fingerprints and, you know, all of that is completely separate from this baseband processor that's just sitting there quietly, not getting anyone's attention.  And probably the people who know where the flaws are, are quite happy with that state of affairs.  They don't want us looking there.



And it's difficult to look there because there isn't the same kind of - we don't have a relationship with it, the way we have with the A7X and the A8 and the Secure Enclave and all, you know, it's not very exciting.  It's just sort of, you know, it is the thing that hooks us to the rest of the world when we have a cellular connection as opposed to a WiFi connection.  It's not sexy.  But it's crucially important that it be secure.  And it's probably not.  But we don't know because we don't look at it very often.  And if history teaches us anything, it's what you don't look at is a problem because it's probably got problems that are unobserved, and that there are people who know what they are.



Now, completely separate from that is a known problem, a known huge problem.  And that is the protocol which glues all of these baseband cell phones together.  And that's known as "Signaling System 7" (SS7).  And  it is old, which is one of the first problems.  Any time, you know, it's like SSL v1.0.  Actually, it's the same era.  It's from the 1980.  And so back a long time ago, when the mobile phone system was just kind of beginning to happen, this system was put together, and the presumption was that there would be hard wires that were linking, you know, like leased lines that were linking individual cell phone carriers to each other in a private electrical network.  Not packet switching, but leased line.  And the idea being that the presumption was, well, these are our wires.  Nobody will have access to them.



So the protocols that they developed had no concept of security.  That just wasn't necessary.  If you have a leased line connecting Sprint to AT&T, and they hook up to each end, you know, it's like, well - and they have a subscriber transit agreement, very much like top tier peering agreements we have on the Internet, then, you know, it's like, okay, we're going to connect to each other.  And so we need some protocol for, like, handing a subscriber off.  Like what if two cell phone, two mobile phone customers want to, on different networks, want to talk to each other?  Well, we need some way to handle that.  And we need to have billing information.  And, you know, what if they want to do a conference call?  We need, we have to have a conferencing protocol.  And what if the subscriber has two phones, and we need to deal with SIMMs and all this?



So all of this kind of got developed quietly by the carriers to fulfill their own needs.  And there are two key mobile protocols called MAP and CAMEL, M-A-P and C-A-M-E-L.  And because of the timeframe when this happened, they have no authentication.  There is no concept...



LEO:  Ugh.



STEVE:  ...of authentication.



LEO:  If you put a layer on top of it?  Authenticate first?



STEVE:  Well, you could.  But then everyone would have to support it, or it wouldn't work.  And so today, this moment, the entire international mobile phone system is essentially open.  And what "60 Minutes" demonstrated was something that was demonstrated in the summer of 2014 in the Chaos Computer Club.  And in the show notes, for anyone who wants to dig deeper, I mean, our links to videos that are two years old, and what the "60 Minutes" show demonstrated, which was riveting, was - yeah, there's one of them.



And there's also, somewhere, maybe it's toward the bottom of that page is a 140-slide deck of, well, 140-slide deck of slides - there it is, that red one - where it went along with the presentation, showing, like, the nature of the complexity of the system.  All of this has been now reverse-engineered, that is, the messaging protocols and how they work.  This 140 slides shows the evolution into a network of protocols linking sort of the sprawling pieces of the system and all the points of attack which hackers now have access to.



And what "60 Minutes" demonstrated was all you have to have is anyone's cellular phone number.  That's all you have to have.  To set this up for the demonstration on the show last Sunday, they got a brand new iPhone, and it might have been purchased, and gave it to a - I don't remember now if he was a senator or someone in the House of Representatives.  But they said, "With your permission, we want to provide you with this phone, and we'll give you a call.  And you need to know that this is part of a piece we're doing on mobile phone hacking, and we'll be working with some German hackers."  And these are the guys that worked this out two years ago and showed everybody.  And we talked about it back then, but nothing happened.  "And so you'll be subject to, maybe, if these guys could pull it off, eavesdropping."



And so he agrees.  And so the "60 Minutes" person calls, and they have a conversation.  And that's all it took.  With knowing his number, it is possible to essentially install what amounts to a man in the middle, such that his physical location is known, his SMS messages are captured, his voice conversations are in the clear, and basically everything he does with the phone at the cellular level, now, not smartphone stuff, but conversations and text messaging, all available.



And so later in the show they played back nonsensitive conversations that he had had with other people that were completely intercepted by this.  I mean, and it's a very compelling piece.  And I'm not going to spend any more time on it because there's really nothing more to be said except just sort of as a heads-up that the mobile phone system doesn't begin to be secure.  And there's no question that law enforcement knows this and uses this with, I mean, like without a moment's second thought.  There are international commercial entities known to be selling SS7 hacking tools to governments and law enforcements throughout the world.



So if anyone is having a conversation that isn't encrypted, for example, by Signal or WhatsApp or some additional encryption layer, and if you're not using iMessage or WhatsApp or Signal or Threema or some additional, something other than just SMS text messages, then everything you're doing, the conversations you're having, and the simple messaging system, you know, SMS messages, completely available to anyone who has access to the system and knows the phone number you're using.



And so basically, you know, this is why the concept, the notion of a burner phone has been in movies and plots for a long time and apparently is what people wanting to maintain anonymity do is they get burner phones, and they use them for a short time, and they toss them because the system that they're using is known not to be secure in any way, shape, or form.



LEO:  So the only way to secure it is if no one knows your phone number.



STEVE:  Correct. 



LEO:  So a burner phone works only because the phone number's known only to your confederate.  But presumably at some point government might figure that out, and that's that.



STEVE:  Correct.



LEO:  Although Stingrays would figure it out.



STEVE:  Yeah.  Anything that's able to, like, create a fake tower, then it's going to know who you are and where you are and be able to decrypt your conversations, too.  So basically it's just an insecure network.  Now, exactly as you were saying at the beginning, Leo, all of the things we're doing, layering our own end-to-end crypto on top, that's secure.  But most people aren't doing that.  I'm not having, when I have a conversation, I'm not bothering to, like, move the conversation over to a secure channel.



LEO:  But as an example, if you used WhatsApp, which has phone calling, and many messaging apps do, that's encrypted over on top of the broken SS7.  So that would be secure; right?



STEVE:  Well, except the metadata would not.



LEO:  They'd know who you're calling.



STEVE:  Exactly.  And there is no way to protect that.  I mean, as has been said, metadata, you know...



LEO:  But, well, wait a minute.  What if the signaling, though, is not done through the cell network, but is done through the data network using an encrypted channel?



STEVE:  Well, yes.  And in fact that's one of the things you can do is turn off, go into...



LEO:  Don't use your cell phone calling capability.  Use data.



STEVE:  Correct.  Shut it down.  Shut down the, yes, the cellular radio and use WiFi, like whenever you're...



LEO:  Or LTE data.  Couldn't you?  Because it's not data.  It's not phone number data.  So you can still...



STEVE:  A good question.  I don't know.



LEO:  I mean, they could - yeah, you'd have to use Tor or something like that because they'd know the endpoints of the LTE conversation.



STEVE:  Yeah.  My, you know, I guess my takeaway is we all want to have privacy, yet no one seems very willing to give up much for it.  And all of the tests that we've read have shown, like, how little, like, here's a candy bar.  Can I have your password?  Ooh, chocolate.  You know?  And it's like people don't value that so much.  I think there's a subset of people who really do care.  And I respect that.  I think those people should have the tools at their disposal for real privacy.



LEO:  But we're not talking government intrusion alone.  For instance, somebody could use this to get your second-factor authentication from your bank; right?  So if they knew your phone number, and, I mean, they could get your - they'd have to know your bank password first.  But if they got your password, then all they'd need is your phone number, and they can get that authentication code, for instance.



STEVE:  Yes.  I forgot to mention when I was, yes, when I was talking about Hover last week, one of the things I liked about them is that they do offer two-factor authentication.  And for access to my registrar, that's somewhere I'm not messing around with security.  My domains are crucial to me.  They offer two forms.  And I did want to reiterate, and I forgot to last week, I chose the Google-style time-based authentication specifically because there is no question it is superior, vastly, dramatically superior security.  I do not want a six-digit SMS text message coming to me when I log into my Hover account.  I much prefer recording a - I got it from them, the big key that drives the crypto in the time-based authenticator, and then have that in my phone so that it's generating a sequence of six-digit keys with a 30-second life.  And when I want to log in, I provide that without prompting, except for the field that I have to fill in, to my Hover account.



So I just did want to note that, you know, exactly as you said, Leo, receiving text messages is - this is another perfect example of why that's not really good.  I mean, it's better than nothing, but it's not second-factor authentication that's nearly as secure as establishing a time-changing, you know, a time-based additional factor where, after it's been established, no communication of it needs to pass back and forth.



LEO:  Yeah, well, this is a good reason.



STEVE:  Yeah.



LEO:  Yeah.  So if you have a choice between an authenticator app - they always say "Google-based authentication."  It's really not Google.



STEVE:  It's not.



LEO:  It's a standard.  If you have a choice between authenticator-based authentication, use that, software-based authentication versus text-based.



STEVE:  Right.



LEO:  Text is convenient, and you may not have the choice.  My bank doesn't give me the choice.  But they should.



STEVE:  Right.  And I did appreciate that Hover did.



LEO:  Hover does, yeah.



STEVE:  Yup.  So, okay.  I have to set this up so that the statement from BlackBerry's CEO - so that we'll have the context for it because it's just the most mealy-mouthed non-confirmation imaginable.  So this begins with Vice, Vice.com, who uncovered from court documents, and not just a few, thousands of pages of court documents that this was buried in.  And so from Vice's coverage, they wrote:



"The revelations are contained in a stack of court documents that were made public after members of a Montreal crime syndicate pleaded guilty to their role in a 2011 gangland murder.  The documents shed light on the extent to which the smartphone manufacturer" - and they're referring to BlackBerry because the headline was "Canadian Police Obtained BlackBerry's Global Decryption Key."  And we learn some horrifying things by implication also about the much-vaunted BlackBerry encryption, which doesn't impress me at all because the fact that this was possible tells us that, I mean, that this BlackBerry encryption was crap.  Like for all these years we thought, oh, it's the best encryption there is.  And it was completely secret.  And now we find out, well, it was a secret that should have been better kept because it's awful.



So anyway, Vice says:  "The documents shed light on the extent to which the smartphone manufacturer, as well as the telecommunications giant Rogers, cooperated with investigators.  According to technical reports by the Royal Canadian Mounted Police that were filed in court, law enforcement intercepted and decrypted roughly one million PINtoPIN BlackBerry messages" - and we'll explain what PIN-to-PIN means in a second - "messages in connection with the probe.  The report doesn't disclose exactly where the key - effectively a piece of code that could break the encryption on virtually any BlackBerry message sent from one device to another  came from.  But as one police officer put it, it was a key that could unlock millions of doors.



"Government lawyers spent almost two years fighting in a Montreal courtroom to keep this information out of the public record.  And while neither the RCMP nor BlackBerry confirmed that the cell phone manufacturer handed over the global decryption key, and both fought against a judge's order to release more information about their working relationship, the Crown prosecutors admitted that the federal police service had access to the key.  And if the global key is still sitting on a server in the RCMP's headquarters, the potential consequences could be significant.  Although it wouldn't offer police a backdoor into most of its government and business clients" - I mean, that's a key.



LEO:  And they say that government is the most important because, by the way, every member of Congress in the United States uses BlackBerry.



STEVE:  Yeah.



LEO:  And you can bet the RCMP has given those keys to U.S. law enforcement.  Right?  And you don't want Congresscritters to start saying, what do you mean, somebody's listening in on my phone?



STEVE:  Uh-huh.  They say:  "Although it wouldn't offer police a backdoor into most of its government and business clients, who make up BlackBerry's core constituency, it would mean that police enjoyed years of access" - and we're talking from 2010, so at this point six years - "years of access to Canadians' personal cell phones without the public being any the wiser.  In a technical report attempting to underscore the significance of this technology and filed with the Superior Court of Quebec, the RCMP stated that it had obtained 'the key that would unlock the doors of all the houses of the people who use the provider's services, and that without their knowledge."



Okay.  So then this was also done along with Motherboard, who said:  "BlackBerry, formerly RIM, encrypts all messages sent between consumer phones, known as PINtoPIN or BBM messages, using a single global encryption key" - which is where, you know, we just put our face in our hands because it's like, what?  What? - "that's loaded onto every handset during manufacturing."



LEO:  And it's a lot easier to just hand that out.



STEVE:  Oh, boy.  "With this one key, any and all messages sent between consumer BlackBerry phones can be decrypted and read.  In contrast, Business Enterprise Servers" - that's the BES that we've talked about years past, the BES servers - "Business Enterprise Servers allow corporations to use their own encryption key, which not even BlackBerry can access.  According to more than 3,000 pages of court documents pertaining to the case that resulted from [what's known as] Project Clemenza, obtained by VICE Canada, the RCMP maintains a server in Ottawa that 'simulates a mobile device that receives a message intended for the rightful recipient.'"  In other words, a man in the middle.  "In an affidavit, RCMP Sergeant Patrick Boismenu states that the server 'performs the decryption of the message using the appropriate decryption key.'  The RCMP calls this the 'BlackBerry interception and processing system.'"



So, naturally, news of this required a response from BlackBerry.  John Chen, who is the wunderkind, apparently, Chairman and CEO...



LEO:  No, he's not, he's the guy they brought in because the company was falling apart.



STEVE:  Right.



LEO:  Yeah.  So I don't know if he's a wunderkind or just...



STEVE:  Well, but in the past I guess he was, you know, he was, like, responsible for major, you know, dazzling successes in previous things he did.



LEO:  Oh, I see, yes.



STEVE:  Doesn't look... 



LEO:  Not there, of course, yeah.



STEVE:  Right.  Doesn't look like that's happening here.  So he did a blog posting titled "Lawful Access" - which is the first clue - "Corporate Citizenship" - okay, second clue - "and Doing What's Right" - third clue.  And he says - I just have one paragraph from a relatively short blog posting where he said essentially nothing.  But so, given some serious reading between the lines, which is what's necessary, but he also slaps Apple, he says:  "When it comes to doing the right thing in difficult situations, BlackBerry's guiding principle has been to do what is right for the citizenry, within legal and ethical boundaries.  We have long been clear in our stance that tech companies as good corporate citizens should comply with reasonable, lawful, access requests."  Okay, now, okay.  Continuing, just to finish this paragraph:  "I have stated before that we are indeed in a dark place when companies put their reputations above the greater good."



Okay.  So that tells you all you need to know.  So he's saying that, yes, we did not take the position Apple took of saying no.  We complied with, as part of our corporate citizenship, with lawful access requests.  Now, I would argue what they did was massively overly broad.  And there are some diagrams that I've seen that show the details of the man in the middle.  And basically they did hand over the master key that then allowed for unrestrained monitoring of the BlackBerry network, completely, I mean, of basically any conversation, anyone's phone that they chose to.



So I think that's pretty much the end of BlackBerry, at least the end of any notion that we were holding that they have some magic secret security that had been unobserved, but we just assumed was fabulous.  If all phones have a single key such that knowing it allows you to decrypt everything the system is doing, then that's awful.  I mean, it's like it's, essentially it's what everyone was saying that installing a backdoor would require.  And we know that you can do secure decryption on demand in an intelligent fashion.  This is not that.  This is the worst possible design.  So, wow.



LEO:  Yeah.  I mean, I think BlackBerry always assumed, well, if you really cared about security, you'd run your own BlackBerry server, your own BES server.  And in fact that would have - that would be your own generated key.



STEVE:  Right.



LEO:  And certainly that's what government and business probably does.  It's just that it's kind of you and me, who would just buy a BlackBerry phone.  And they always sold it as secure, but I never really believed them.  So now we know.



STEVE:  Yeah.  Wow.



LEO:  I mean, they gave the keys, they were - many countries demanded the key.  I used to say "keys."  Now I say "key."



STEVE:  Yeah.  They said no to somebody.



LEO:  I think India.  Or maybe China.



STEVE:  Yeah, I can't remember who now.  Oh, Pakistan wanted it.



LEO:  Pakistan, okay.



STEVE:  And they said no.



LEO:  I think they didn't want - Pakistan wanted source code to the server.



STEVE:  Oh.



LEO:  They didn't hand that over.  But now we know a single key unlocks all phones that run through BlackBerry's own servers.



STEVE:  Wow.  Yeah, and everybody knows.



LEO:  Yeah.  To tell the Canadians, the Canadians tell the states, the Americans tell the English, it doesn't take long.



STEVE:  Yeah.



LEO:  It's probably on a bulletin board somewhere.



STEVE:  So, QuickTime is officially no longer, Apple has stated, going to be updated on the Windows platform.  And the problem is Trend Micro found a couple problems with QuickTime, the latest version from Apple, the last version from Apple that will ever be released, and said, hey, Apple, we've got a couple - we've got some serious heap overflow problems that we found.  And Apple said, yeah, well, we're not going to change them.  We're not going to fix it.  We're not going to do anything.



So that released Trend from what they considered their responsible disclosure obligation, where they would have otherwise waited and let Apple have the time to fix the problem.  Apple's never going to fix the problem.  So Trend immediately went public and said:  "We're putting the word out that everyone should follow Apple's guidance and uninstall QuickTime for Windows as soon as possible.  This is for two reasons.  First," they wrote, "Apple is deprecating QuickTime for Microsoft Windows.  They will no longer be issuing security updates for the product on the Windows Platform and recommend users uninstall it."  And they say:  "Note this does not apply to QuickTime on Mac.



"Second, our Zero Day Initiative" - this is Trend Micro's - "has just released two advisories detailing two new critical vulnerabilities affecting QuickTime for Windows.  These advisories are being released in accordance with the Zero Day Initiative's Disclosure Policy for when a vendor does not issue a security patch for a disclosed vulnerability.  And because Apple is no longer providing security updates for QuickTime on Windows, these vulnerabilities are never going to be patched."



I did a little more digging and found that they said:  "Both of these are heap corruption remote code execution vulnerabilities.  In one case an attacker is able to write data outside of an allocated heap buffer."  Yikes.  "The other vulnerability occurs in what's called the 'STCO' atom where, by providing an invalid index, an attacker can write data outside of an allocated heap buffer.  Both vulnerabilities would require a user to visit a malicious web page or open a malicious file to exploit them.  And both vulnerabilities would execute code in the security context of the QuickTime player, which in most cases would be that of the logged-on user."



So this is not just the QuickTime plugin, but this is any document type that QuickTime has registered itself as the handler for in Windows.  The most probable attack vector, I would think, would probably be spearphishing, or maybe just more broad spray phishing, where it's the standard come-on of here's the invoice for the something you didn't purchase email, and you go, what?  I didn't purchase that.  And you click on it, and it's an obscured URL that actually goes to some QuickTime document which contains code that then executes on your machine.  So it's a means for allowing a malicious document to run on your machine.



Now, again, security context of the logged-on user, this is less a problem on modern Windows than it used to be because you have to elevate your privilege going through the User Account Control, typically to do anything important.  On the other hand, a lot of users just click through that.  So for naive users, this isn't going to protect them.



So, boy, removing QuickTime for Windows would be a good thing to do.  In fact, it would be nice if, I don't know if Microsoft would ever do this, but because Windows Update is really the only way to push anything out, as we well know, to everyone on Windows, it would be nice if they pushed out something that would alert you if you did have QuickTime installed, and at least give you a heads-up about getting it removed.  To me this feels like a big problem; although, Leo, do you think QuickTime is - where would it be installed?  Would it be typically installed in, like, newer editions of Windows?



LEO:  No, it's not installed by default.  It's only installed if you install, well, a lot of people have it from installing iTunes.  So iTunes no longer requires QuickTime.  But in the past it has.  And so if you installed iTunes on Windows, which of course everybody who used an iPod had to do, you would have gotten QuickTime with that install.  No, in fact, we - so many people had problems with iTunes that we often recommended you install QuickTime separately.  So you'd install QuickTime and then install iTunes.  And that fixed some problems people had in Windows.  So those people may still have legacy - it's an old version of QuickTime.  It's very old.



STEVE:  Did you need that for, like, codec support?



LEO:  That's the other issue.  I'm told that some - yeah, I think so.  Or actually, no, that was the player in iTunes.  I mean, iTunes did not work without QuickTime.



STEVE:  Oh, that's right, I remember seeing the little window come up.



LEO:  It wouldn't play without QuickTime.



STEVE:  Nice sort of a brushed silver look and...



LEO:  Yeah, it's old, though.  I mean, it's not required by modern versions of iTunes.  The other problem, though, and it's much more significant, is that some programs, I think Adobe Premiere, their video editor, is one of them.



STEVE:  I've seen stuff bring QuickTime along.  It's like, what the heck is that doing?



LEO:  Yeah.  You need it for Pro, if you want to do ProRes, which is Apple's format.  That's, by the way, the format this show is recorded in.  And our editors all have QuickTime installed on their computers because they use Adobe Premiere to edit the show.



STEVE:  What a mess.



LEO:  So that's - so it's a problem, yeah.



STEVE:  Yeah.



LEO:  You know, Russell's in Las Vegas for NAB.  But when he gets back, I'll talk to him, and I guess we'll have to figure out what to do.



STEVE:  Yeah.



LEO:  So, don't know.



STEVE:  Anyway, anybody who's listening to the podcast, if you don't know you need it, I guess just go into Programs and Settings, or Programs and - I think that's what it's called, whatever it is...



LEO:  Yeah, Programs and Settings.  It changes all the time.



STEVE:  Yeah, it does, and see if you've got QuickTime.  Probably says - you think it's under "A" for Apple QuickTime?  Or maybe "Q" for QuickTime for Windows?



LEO:  Beats me.  And by the way, it's Programs and Features in more modern versions of Windows.



STEVE:  Ah, that's right, Programs and Features.



LEO:  Install the programs...



STEVE:  And just, you know, remove it.  Hopefully you've pulled Flash out, if you don't need it.  And now it's time to pull QuickTime out.  You know, we're moving slowly forward, removing these things which are problems.  But it is a, you know, maybe Apple could do this.  I wonder if QuickTime checks itself for updates.  Does it have an auto-update feature?



LEO:  Yeah.  Well...



STEVE:  Because Apple could take responsibility and push out an update that removes it from the system, since they're not - although they don't want to pull it away from people who do need it.



LEO:  Right.



STEVE:  It's a mess.



LEO:  It's a mess.



STEVE:  Yeah.  So CBS News had some exclusive reporting.  They found someone who was willing to talk about what the FBI found, or rather didn't, on Farook's unlocked phone.  A law enforcement source told CBS News that so far nothing of real significance has been found on the San Bernardino terrorist's iPhone, which was unlocked by the FBI last month without the help of Apple.



Pat Milton, who's the senior investigative reporter for CBS, reported that it was stressed to him by his source that the FBI continues to analyze the information on the cell phone seized in the investigation, which is just their way of saying, well, yeah, but we're not saying we're done yet, probably because they're not happy, by saying after all this noise they didn't find anything.



I did want to mention, as I said at the top of the show, that Threema put together a rebuttal page to all of the glowing conversation about Signal, the Signal protocol fully being integrated into WhatsApp.  And I also wanted to take the time to make the point that it was Signal I was talking about last week, and that WhatsApp is a container for Signal.



But, for example, the fact that you have to give it your phone number, that is, that's the way it identifies you, that's sort of annoying.  I mean, it's a lack, it's an immediate loss of anonymity; whereas, for example, Threema doesn't require that you give a phone number.  And that, where possible, Threema is as anonymous as it can be because they allow payment, which is I think $3, or at least it is on iOS, but iOS of course you're not anonymous because, if you have to buy something through iOS, you're known to Apple.  But on the Android platform, where it is possible to be anonymous, you're able to purchase with bitcoin.  And, you know, and they grumble, Threema grumbles, they have a clear economic model where you pay a little bit for support and the product, and then you know why you're getting the service from us.



But basically, I mean, anyone who's done any competitive marketing has seen these charts where it's all good news for the person preparing the chart and bad news for the others.  Some of their points are good.  One person raised a very good point via Twitter in the intervening week, and that is that WhatsApp, i.e., Signal in WhatsApp, doesn't give any residual indication when you've confirmed that you and the person you're communicating with have identical keys.  That is, you did this on the show and showed it on the video, Leo, where the two opposite ends of a Signal-based Threema dialogue, when your phone saw the other phone's QR code, it gave a big happy green check mark that then just sort of faded away.  And so it was an easy way of doing the verification, but it didn't mark it somehow.



And of course Threema is all about authentication, and always has been, which of course is my own, you know, I keep reminding people that you have to have authentication, or you really have no protection from a man in the middle.  And so Threema has those three, sort of, I think of them as the traffic signal lights - yellow, green, and red - for what level of authentication has been provided this connection.  And every contact you have is branded with how sure you are, how much have you authenticated the other person's identity.



So anyway, I did want to - I wanted to separate explicitly our conversation of WhatsApp, that is an entity owned by Facebook, from their incorporation of the Signal protocol.  And I was a little disappointed even to download Signal, which I took the time to do, and saw that it, too, needed access to my contacts list.  And actually, Leo, you and Lisa showed up among my contacts list...



LEO:  [Crosstalk], yeah.



STEVE:  ...as the only people I could connect to.



LEO:  That's a convenience because otherwise how do you find people?



STEVE:  Yes. 



LEO:  So, but of course it leaks information.  And so now we know, if somebody knows your cell phone number, you're screwed.  So that's probably not good information to leak.



STEVE:  Yeah.  So, and again, everyone wants, everyone says they want security.  But we all tend to take convenience over security.  And so, and I think if anything that this podcast is teaching us all, it's that security in the ivory tower, you know, in the land of the cryptographers, that's the only place it is pure, the only place it reaches, like, its theoretical perfection.  Because the moment the rubber hits the road, the moment it becomes time to deploy it, then the real world gets in the way.  And so it is, the idea of absolute security is an illusion because there are so many other things that can go wrong in the actual implementation of it.  So I just think it's important to have that perspective because it's the truth.



LEO:  And I think Apple admits, in fact I seem to remember, and I wish - I can't find it, I think it was Tim Cook saying recently, well, we carefully weigh security with the convenience of our customers.



STEVE:  Right.



LEO:  And that's their kind of admission.



STEVE:  Well, iMessage is the perfect example.  iMessage manages the keys for the people you're encrypting to.  Which means, you know, they could be any...



LEO:  For your convenience, Steve.



STEVE:  They could be any - for your convenience.



LEO:  For your convenience.



STEVE:  That's right.  Okay.  Two little bits of errata.  Oh, no, one bit of errata.  Never10 did get bumped up.  A little tiny - I gave it a one-thousandth of a bump in the version number.  1.3 I talked about last week, where I added the ability to delete all of the files that might have been downloaded ahead of time and hidden, and also a series of command line switches that could be used by enterprise.



Well, friend of the show Evan Katz found a bug in 1.3 because - and it's absolutely a bug.  I wrote a new parser for it and failed to exclude the text before the command line arguments.  I don't know what I was thinking.  I just - it just was an oversight.  And Evan had a network drive in the path, Programs and Updates\, and he put Never10 in there.  And when he tried to run it from that network share on a different machine, it appeared not to run.  Well, it was running, but it saw the phrase "update" in Programs and Updates and treated that as a command-line switch.  Whoops.



Anyway, 1.3.1 fixes that.  And so it wasn't worth giving it a .4, just a bug, plain and simple.  I overlooked it; and so thank you, Evan, for bringing it to my attention.  And that's fixed now.  And I did get reports from a bunch of people saying that they'd recovered, I saw one just this morning, 5GB of hard drive space by running v1.3 just once, so...



LEO:  It's a 3GB download.  But as you pointed out last week, it expands it after it downloads it, which can make it much, much larger.  Jeez.



STEVE:  Yes.



LEO:  Couldn't you wait to expand it till you needed it?



STEVE:  Yeah, wouldn't you think?



LEO:  God.



STEVE:  So, unfortunately, I did tweet this for people who follow me, but it's on AMC, and it's titled "The Night Manager."  I think that's a title of the...



LEO:  Famous movie.



STEVE:  Yes.



LEO:  Yeah.



STEVE:  Or a book.  It's a miniseries, and it's starring Hugh Laurie, who...



LEO:  Oh, love Hugh Laurie, of course, "House."



STEVE:  Yes.  He was the, yes, he of course was Dr. House in the series "House."  And I'll never forget, like, seeing some of the behind-the-scenes stuff and listening to his accent for the first time, it's like, wow, he doesn't have an accent when he's Dr. House.



LEO:  I know.  He's really good.  But he was - Fry and Laurie, Stephen Fry and Hugh Laurie, when they were at Cambridge, had a wonderful comedy duo.  You've got to look up "Fry and Laurie" on YouTube.  Hysterical.



STEVE:  Oh, good.



LEO:  Yeah.  They're Brits.  But this is a great John le Carre novel.



STEVE:  Yes, that's what it is. 



LEO:  I love John le Carre.  And there's nothing - he's just wonderful.



STEVE:  So I picked up on it because one of the things I do, I've mentioned, I just - I have TiVo sucking in Charlie Rose.  And Charlie is, unfortunately, a lot of it is about politics lately, and the U.S. election has just gotten to be so, so repetitious and annoying.  So, but he interviewed, Charlie Rose interviewed Hugh Laurie, and they discussed this.  And so this is not like some hotel night manager.  Hugh Laurie plays an international arms dealer.  And so IMDB rated it at 8.6 of 10; Rotten Tomatoes gave it 100%.  I tweeted it.  A whole bunch of our listeners in the U.K. were just jumping up and down, raving.  One person said that the first episode put him to sleep.  It's like, well, okay, maybe he took the Healthy Sleep Formula too early in the evening.



LEO:  Well, Carre is very - it's not James Bond.  Carre is, I mean, he wrote "The Spy Who Came in from the Cold."  You might have seen that movie.  You might have seen that movie.



STEVE:  Ah, right.



LEO:  He is a - I think "Tinker, Tailor, Soldier, Spy" was a wonderful miniseries based on his books.  His character, Smiley, is a very - it's not swashbuckling.  But it's, I feel, very accurate, very realistic.



STEVE:  Well, apparently this picks up after the first episode.  So people should not be disappointed.  Apparently the first one is a little bit of a stage-setting episode.  But then it kicks in.  And what Hugh said was that what was different for him was that he was dying to produce this; whereas with "House" he would show up, and they would give him a script, and he would just do it.  This is really, I mean, this has heart and soul.  He really was excited to do this.



So it starts tonight.  So I'm afraid that people who are not hearing the podcast until tomorrow will be behind.  But I'm sure you'll be able to catch up, or they'll run them all together.  They called it a "miniseries," and I meant to look to see if it's, like, in successive nights, or is it just going to be over the, you know, like once a week.  I don't know what the schedule is.  But so "The Night Manager" on AMC in the U.S., and everybody in the U.K. already knows all this.



LEO:  I'm logging into my TiVo right now to record it.  By the way, that is a nice feature. 



STEVE:  I love it.  I use it all the time.



LEO:  Love my TiVo.  All right.  "Night Manager."



STEVE:  And a little quick Zeo update.  For all of the 2,500-plus listeners who got Zeos, there is an effort underway to create replacement headbands.  That's the one thing about it that has a potential to wear out because it uses a conductive, three conductive silver bumps.  Anyway, ZeoBand.com, Z-E-O-B-A-N-D dotcom.  He's still sort of trying to gauge interest.  And it's funny, too, because he sent out a mailing to those who registered a while ago, saying this really started out kind of slowly, but interest suddenly ramped up for some reason.



LEO:  Yeah, we know why.



STEVE:  I don't know what happened.  It's like, yeah, and the world is also all out of Seriphos for some strange reason.  So if you're playing with your Zeo, you might just go over to ZeoBand.com and let them know that you're interested.  Maybe, I think he was - something, I heard something about $15.  So it seems reasonable for a replacement headband.



And somebody working in the GRC newsgroups has almost finished an amazing new Zeo app for Android that does all kinds of stuff.  Much higher resolution.  Instead of five-minute intervals you get 30-second intervals.  You can do journaling.  You can annotate them.  You can export the database over to the Java-based Zeo Viewer.  Just it's unbelievable feature packed.  It's not quite out of beta.  We're all using it over in the GRC.health newsgroup.  As soon as it hits 1.0 - I just don't want to deluge him with additional testers because he's not really ready yet.  So I'm not pointing people to it, though I've already created a bit.ly shortcut for when it's time.  So I just wanted to let people know there will be an additional open source GitHub third-party Zeo app happening soon.



And lastly, I got a nice note from - a "G'day Steve" from Canberra, Australia, Simon Byrne, under the subject of "SpinRite recovers SSDs?"  And then he has in all caps, "YOU BET IT DOES."  He says, "G'day, Steve.  I bought SpinRite years ago for no other reason than to support you and the Security Now! podcasts."  Thank you.  "Last Saturday I fired up my MacBook Pro with a 1TB Outer World Computing SSD installed.  It got halfway and then shut down.  Not good.  I do video production and generate very large amounts of data.  I do have a good local backup regime, but backing up over the web is impractical as I generate many gigabytes every day.  However, I was working the day before offsite with no local backup, so I was faced with losing a full day's work, which equated to about 12GB.



"I took the SSD drive out of my Mac and put it into one of my PCs and fired up SpinRite on Level 2.  Nine hours later, SpinRite had finished, reporting no errors recovered.  I was disappointed that no errors were shown, so I was dubious as to whether it was going to work.  I tentatively put the SSD back into my Mac and turned it on and, YES," in all caps, he says, "it booted up perfectly.  I immediately backed up all my data.  So, yes, SpinRite absolutely can recover data on an SSD drive."  Thanks, Simon, for the report, and confirmation of what we've been finding, and the reason for a long future life of SpinRite.



Speaking of email, okay.  So we know about HTTP STS - Hypertext Transport Protocol, Strict Transport Security.  The idea with that is that websites are able to essentially publish, to anyone who connects to them, they're able to publish the fact that they only want to be connected to securely.  So in the header, in the response header to a query, so a client makes a query, you know, a user's browser makes a query to a website.  And maybe they make it over HTTP, and then the website redirects them to HTTPS, the equivalent, or whatever.  So, for example, you may be able to get to that site over either HTTP or HTTPS.



But in either event, in the response headers, the metadata that's not part of what you normally see, but things like the expiration date and cookies that may be assigned to that session, one of the things there is this STS, the strict transport security header, which gives a lifetime, in the future, the number of minutes that the site is willing to commit to always offering secure connections.



So the idea is the browser will cache that.  It'll store that, if it supports strict transport security, and they all do now, it'll store that with a date stamp.  It'll, like, look at today, at now, the timestamp of now, and it'll add that many minutes that has been indicated to now and set a time, an expiration date in the future for when this expires, if it isn't renewed anytime again.  And of course normally every visit will bump that timestamp forward that far again into the future.



So what this does is this gives the web browser itself permission to upgrade any, any link to that domain from HTTP and connecting to port 80, to HTTPS and connecting to port 443, which is the well-known port for a secure HTTP connection.  And this all works.



Now, this still has what's known as the "first contact problem."  And in fact there's an acronym, TOFU, that we've talked about in the past, T-O-F-U, which is Trust On First Use.  Because what that sort of reminds us is, well, we only get the knowledge of strict transport security after first contacting a website.  We don't have it a priori, ahead of time, in any means.



Now, there has been action taken there, too.  We'll remember that Google was leading this, and they offered any domains that wished it to register with them for inclusion in Chrome as a domain that will always be secure.  GRC is proud to be enumerated among those, like early on, and is still there.  And so that solves the first contact problem.  If you basically build into the browser the permission for this domain, then you solve that trust on first use problem, the idea being that, if the browser had never contacted an STS site, and there was a man in the middle downgrading HTTPS to HTTP and, for example, also because of their man-in-the-middle position, stripping the response header, saying use strict transport security, then the browser would never have the opportunity to know the site offered it and so wouldn't be able to take advantage of it and could then run an exploit.  But it just takes one trustworthy, one first contact to initialize the cache of that knowledge.



So we have all that.  We don't have security, useful security, today for email, unless it's layered on top like PGP, where the underlying transport mechanism is just known to be useless for security.  So if you really care about a message being secure, you'll do something on top of it.  Even if you weren't using PGP, you would, you know, write the message in some DOC, and then zip it with a good password, and then attach it to an unsecure piece of email to send it to somebody who knew the matching, you know, who knew the password, who would then receive it, unzip it, and view the DOC.



So but the problem is that email has been really resistant, probably because it's a multicomponent system where with the web browser we just have a server and a client, like a one-to-one relationship.  The email ecosystem has MTAs, as they call them, Message Transport Agents; and MTUs are the user side.  They initiate email and absorb mail.



And the other problem is it's not just a one-to-one.  I might be - I have my user agent, and I place email on my SMTP server, my MTA.  And then it has the freedom to connect to another one and another one and another one, and then finally a destination one.  There have been, historically, crazy complex email systems that do use a multi-hop store-and-forward because in fact the architecture, the original architecture allows that.



And in fact one of the things that we've talked about in way years past was looking at your email headers.  And you can see, like, you view from the first header backwards the path that the mail took from one server to the next because each of the hops, the server adds a few lines of information.  That's done in order to prevent the possibility of loops, where due to the fact that you've got essentially email routing, it's possible to have a routing loop which would cause email to go around in a circle forever, if you didn't have some way of a server receiving a piece of email and checking the headers and saying, wait a minute, I already sent this.  Because it would see itself in its own headers that it had put on when it sent the mail out, and that would tell it, okay, we've got a problem.  This is not getting to its destination.



So as a consequence of the fact that it is a more complex system, and that it's got deep history, it just hasn't been easy to upgrade this.  Now, we've talked about one of the solutions, which is known as "opportunistic TLS."  And that is, you sort of - the server that is accepting a connection can give a list of capabilities and does give a list of capabilities in response to the hello message, which is the opening message in a dialogue that two servers, two SMTP servers have between each other as they're initiating their handshake.



In the hello message, the connection-accepting server lists its capabilities.  And among them would be the statement STARTTLS, which is saying that it knows how to accept the STARTTLS command from the connection initiating server, which would allow them to bring up a private TLS link, a point-to-point link, which would then mean that the email that they would transit would not be in plaintext.  Which it otherwise is.  And, I mean, and this is a problem because, by default, email, even in this day and age, is unencrypted between endpoints.



Now, the problem with STARTTLS is that it is privacy protection only against a passive observer.  That is, only somebody who can only monitor the network is going to be stumped by seeing STARTTLS happen.  They're going to say, oh, darn, look, they both support STARTTLS, and I just saw the command go by.  And now there's a TLS negotiation.  And now it just looks like random, pseudorandom noise, and I can't see what the messaging is.



The problem is a man in the middle, somebody active, an active attacker, simply drops the STARTTLS declaration from the list of supported features that the answering SMTP server offers.  And then the accepting server won't attempt to bring up a TLS connection because it believes that the one it's connecting to doesn't know how to handle it.  So it's trivially overridden.  It's trivially susceptible to a man-in-the-middle attack.



So what a group of people decided to do, and this is Google, Yahoo!, Comcast, Microsoft, and 1&1 Mail & Media Development & Technology that's a German email provider, that group of five people - Google, Yahoo!, Comcast, Microsoft, and 1&1 - they've got a proposal.  And I was all excited, thinking, hey, okay, cool, that sounds like a good idea.  Until I read it.  Oh, goodness.



So they're trying to do for SMTP what we have done for HTTP.  Unfortunately, due to the details of the way SMTP works, it's not as simple as the server sending a header to say that I support security because it's trivially easy to intercept that, and we sort of already have that with STARTTLS, the server saying, yeah, I support STARTTLS.  And you simply strip that out, and now you're not going to have any security.



So essentially they have gone to great lengths to engineer a system that still has that problem, such that they're - and they fully acknowledge that they have the TOFU, the Trust On First Use problem.  They have a system that allows the receiving server to cache the knowledge that the server it connected to supported security.  So they are, once again, they're basically using the same model as HTTP STS is using, where you have to get the message through once, and then they're going to cache it.



But they use an out-of-band signaling, that is, they don't use the SMTP protocol in the same way that HTTP does use the existing HTTP protocol, which is one of the things that made this so simple.  Instead, they go through all kinds of jumping through hoops.  They want to create a specially named and well-known named subdomain in DNS, off of the DNS domain name of the email domain.  So, and that's called _smtp_sts.  Then it would be like dot and, for example, GRC.com [_smtp_sts.example.com].  So that subdomain would contain text records to describe the type of SMTP STS that this email server supports, and things like expiration time.



But the problem is they recognize that DNS is not secure.  And so all throughout this document they're saying, well, really we should have DNSSEC.  But we don't, so here's what we're going to do.  And so, for example, among the things that they do is that the records in this insecurely delivered DNS record can point to a well-known directory in an HTTPS server where it's possible to find the identical records that the DNS subdomain is delivering.  I mean, this is just unbelievably horrific.



And then, and the reason they do this is they want to take advantage of the PKI, the existing Public Key Infrastructure, which does exist for the web, but doesn't exist for SMTP.  So they use DNS to point to - and they call it Web PKI is the name in the field that they're using.  And so that that contains an HTTPS URL, referring to the same domain and a directory which is .smtp_sts, then slash, and then smtp-sts, and then a document name.  And that contains records which have to be exactly the same as what DNS is publishing.



I mean, the further I dug into this, the more I couldn't believe what, like, the hoops that they were jumping through in order to try to get something that still has the Trust On First Use problem, and where throughout the document they're saying, but this would really be better if we just had DNSSEC.  And so I'll just remind everyone that DNSSEC, when it finally happens, and it's just, it's coming along very slowly, what it will allow is absolutely secure publishing of anything we want to publish.



So, for example, right now we have a public key hierarchy, where we trust Certificate Authorities, and they sign our web server certificates, and that's the way we trust them.  But if we had DNSSEC, that is, if we absolutely could cryptographically rely on what a DNS response has, then a domain could publish its own certificate, and a client could look up the certificate in the domain because - and what we don't have today is the absolute ability to securely sign what the DNS provides.  If we had that, then the certificate would be known to be true, and it could then use that to compare it to the certificate coming from a web server, and there would be no need for a third party for domain verification.  Again, in the same way that we still have a use for extended validation verification, where we're asserting much more than just a certificate for a domain, we still need a third party.  So there's still a use for third-party certificate authorities.



But the point is, and we've talked about DNSSEC through the years, it would be wonderful to have this because another thing it would do is it could provide a simple statement that this email server accepts secure connections.  End of story.  And so SMTP servers that are using DNS to look up the MX record, the mail exchange record, and sometimes the mail exchange server name or IP, could also pull some future defined record.  And this crazy SMTP STS RFC even talks about, oh, yeah, you know, be nice to have a new RR, a Resource Record in DNS that could be securely delivered over DNSSEC, and it would just say, yeah, this domain supports security.



Well, let's just do that.  Because the problem is this kludge from hell, if this ever got traction, it's just going to - it just mucks up everything to an incredible degree, in order to try to get security, which remains weak even if we did all of this.  And it just strews its junk all over the place.  So, end of rant.



LEO:  All right.



STEVE:  I was thinking, this thing sounds wonderful, until I read it.  And then it's like, oh, please don't let this happen.  Please, please, please.  Because, as I said, the subtitle of this podcast is "Horrible Internet Kludges Never Die."  And this is one for the record books in terms of just being just a horrific kludge.  Yikes.  We just need DNSSEC.  If this energy could have been put in furtherance of DNSSEC, it would have been far better invested because, if we get that, we get all, we get everything else.  I mean, just I can't even imagine the things we're going to be able to do after we get good DNS security.



LEO:  Right on.  Someday.  Well, Steve, what fun it has been.  I think we're done; right?



STEVE:  Next week a Q&A.  Yup, we're done.



LEO:  Yeah, yeah, we have strewn the Internet with our words.



STEVE:  And if this can help to keep this from happening, then it was time well spent.  Oh, lord.



LEO:  Steve's website is...



STEVE:  Just unbelievable.



LEO:  Oh, well, you know.  They're trying.



STEVE:  Yeah.



LEO:  Steve's website is GRC.com.  That's the place where you can find SpinRite, the world's best hard drive recovery and maintenance utility, and also all of his other fine stuff, like, oh, I don't know, Shoot the Messenger, ShieldsUP!, DCOMbobulator.



STEVE:  Never10.



LEO:  Perfect Paper Passwords.  And Never10.  Is there an updater in that, or do you have to just download a new version if you want?



STEVE:  No, just it's 83K.  The updater would have expanded it up.  I'm not even sure what I'm going to do with the SQRL client because it doesn't - you don't have to install it, but people want to install it.



LEO:  Right.  Don't install it.  Just put it, you know, put it - run it.



STEVE:  Yeah.  Except that browsers go, like, put things in the download directory. 



LEO:  Right.



STEVE:  And then so I think it should install itself.  That is, and I'll talk to all [crosstalk].



LEO:  You can do that.  When you run it, you move yourself to the applications folder, and that's it, yeah.



STEVE:  Right, right, right.



LEO:  A lot of apps, not a lot, but some apps, I think, do that.  And I think it's the right way to do it.



STEVE:  [Crosstalk]



LEO:  It's not an installer, it's a mover.



STEVE:  It's a mover.



LEO:  It'll add one line.  Am I in the Programs and Features or whatever it is, and I am in percent app docs percent, well, then, move me there.



STEVE:  Yeah.



LEO:  Ah, yeah, what else?  Oh, the show is there.



STEVE:  Unless I'm on a removable drive.  It's aware of that already.  And so it...



LEO:  Portable.



STEVE:  Because you want to be able to carry it around...



LEO:  Right, portable.



STEVE:  ...and be able to run it from one drive.



LEO:  Oh, that's the way to do it, yeah.



STEVE:  Yeah.



LEO:  Oh, let them run it from Download, who cares?



STEVE:  Except that some people purge their download folder from time to time.



LEO:  Oh, but that's fine.  You only run it once.



STEVE:  I haven't figured out what I'm going to do.



LEO:  Well, I mean, SQRL you don't have to run it again, right?



STEVE:  I think I may have an announcement next week.



LEO:  Oh, whoa.



STEVE:  Yeah, I did a - I finished a chunk of work yesterday, and I've got a great week ahead of me, so, yeah.



LEO:  Good.  Yay.



STEVE:  Getting close.



LEO:  Check up on SQRL's progress at the website, GRC.com.  You can also find the podcast itself, including transcriptions, at GRC.com.  Steve's Healthy Sleep Formula is there.  Somebody sent me an email, "I can't find Never10."  It's on the website.



STEVE:  Or just google it.



LEO:  It's in Projects; right?  Or google "Never10" works really good, yeah.



STEVE:  Yeah, Google, you know, is - that is the Internet, you know.  So says my realtor friend, Judy.  I just put it in the Google.



LEO:  She's not far wrong.



STEVE:  I just ask the Google.



LEO:  How do you get to Yahoo!, Google?  Oh, this way.  Over here.  If you want audio or video of the show, you can also get it from us, TWiT.tv/sn.  We put it on YouTube.  We put it on, you know, on the Internet as a podcast.  That means you can use your podcast client to download it.  All you have to do is get the podcast client and search for "Security Now!."  You can find audio and video versions.  Of course there's TWiT apps, too, on every platform.  That's another way to do it.  We will be back here next Tuesday, 1:30 Pacific, 4:30 Eastern, 20:30 UTC for yet another edition.  I guess a Q&A, barring...



STEVE:  Q&A time.



LEO:  Barring problems in security.  So get your questions to Steve at @SGgrc on the Twitter, or GRC.com/feedback.



STEVE:  Yup.



LEO:  We'll pick 10 and do those next week.  Thanks, Steve.



STEVE:  Okay, my friend.  Thanks.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#557

DATE:		April 26, 2016

TITLE:		Listener Feedback #232

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-557.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  Leo and I discuss an interesting week of security news, including an update on Let's Encrypt's growth, the advance in encryption thanks to Edward Snowden, a clever bypass for Windows AppLocker, Opera's built-in VPN that isn't, more crypto ransomware evolution, fake DDoS extortionists, some DNSSEC follow-up, and 10 great questions and talking points from our 200,000-plus weekly listeners!



SHOW TEASE:  It's time for Security Now!, the show where we talk about the latest security news and information with my friend Steve Gibson.  There is a lot of security news.  Steve will talk about it.  And we'll also, I'm liking this, we're going to get to some of your listener questions.  And we're going to do some basics, some of the fundamentals, like should you use an antivirus?  What's the difference between a NAT router and a firewall?  We're going to explain - and how to avoid spam.  We're going to explain all that and more, next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 557, recorded Tuesday, April 26th, 2016:  Your questions, Steve's answers, #232.



It's time for Security Now!, the show where we cover the security.  What else can I say?  Your security and your privacy online.  Steve Gibson is here, GRC.com.  He's our Explainer in Chief.  Hi, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be with you again as we close in on the end of our 11th year.



LEO:  Yikes.



STEVE:  Episode 557 and a Q&A.  We had lots of news this week.  We're going to talk about - we're taking a look at Let's Encrypt's continuing certificate issuance, amazing progress.  Something known now as the "Snowden effect" on the rate of encryption in general.  What the cost was, both in dollars and public perception, to unlock what turned out to be a relatively empty iPhone.  There's a clever Windows AppLocker bypass.  And the way this works is just so cool.  So I wanted to talk about that.  That was buzzing a few days ago.  Opera announced that they have a built-in VPN in their browser.  Unfortunately, it's not true.  So we'll talk about that.



LEO:  Ooh, I know, wow.



STEVE:  TeslaCrypt, the bad ransomware, has continued to evolve.  We even have something that was predictable, which is DDoS extortionists that have actually no botnet because they've never actually DDoSed anybody, but they're still making a lot of money, just because everyone's so worried about it now.



LEO:  The threat is stronger than the execution.



STEVE:  Yeah.  The U.S. has launched its first-ever "cyberbomb" at ISIS.  And what's odd is that they're talking about it because they're actually waging a little bit of a public relations campaign at the same time.  So we'll cover that.  I wanted to mention something that I forgot to talk about, about DNSSEC.  I have a public service reminder for our listeners.  And then we've got great questions and talking points from our massive audience.  So a great podcast.



LEO:  Nice.  As usual, lots to say, lots to do.  All right, Steve.  Let's get the news here.



STEVE:  So Let's Encrypt continues to grow.  And the growth is not linear.  It's exponential.  Meaning that you can't fit a straight line to this curve because it keeps curving up faster.  So the rate of its growth is increasing, in addition to the absolute number of issued certificates.  They said, the EFF said last Thursday that they had issued their two millionth domain certificate on last...



LEO:  Wow.



STEVE:  You know, a little over, or a little less than a week ago, five days ago, eight weeks after finishing its first millionth.  So they did their second million in less than eight weeks, whereas it took them a few months, I think they began at the beginning of December 2015.  So the rate at which - the length of time between successive millions is shrinking as this thing is really catching fire.  And they reminded us that, since single certificates can and typically do often cover many websites, Let's Encrypt is probably newly protecting many more millions than just two.  And the EFF also noted that nearly all of the new certificates are protecting domains that were not previously HTTPS.  So this represents just a sweeping increase in encryption.  And it's interesting because we have some comments made by - I'm going to get this right this time - Comey.  We've got both Clapper and Comey in our news this week.



LEO:  As usual.



STEVE:  Yes, as usual, and not in a good way.  So because it was Comey whose - no, I'm not sure.  I've got to wait till we get to this in the notes because I don't want to get them wrong again.  But so anyway, Let's Encrypt is a success.  And we talked about how - what's the big blogging site?  I'm just - I'm drawing a blank now.



LEO:  WordPress.



STEVE:  WordPress, how WordPress has adopted Let's Encrypt and is now providing...



LEO:  It's really cool because you just get HTTPS automatically, for free.



STEVE:  Yeah, I mean, you know, my two blogs, GRC.blog dot - wait, is it GRC dot - no, blog.grc.com and steve.grc.com, those are CNAME records in GRC's DNS that redirect people to the blog pages.  And when I went there after reading that WordPress was all HTTPS, sure enough, my blogs are now HTTPS.  So you can go https://steve.grc.com, and it works.  Although the certificate is interesting to look at because, as I recall, mine, the certificate that is protecting me is shared with I didn't even count how many other domains.  So WordPress is minimizing the number of certificates they issue by just cramming as many - they're called SAN, it's the SAN field, the Subject Alternative Name field is just full of other domains.  So it's useful for basically removing plaintext from the 'Net.



And we'll be talking about that theme a couple times this hour because - or in this podcast because that's sort of the way security is turning out to be - we talked about this a little bit last week, how this notion that, yeah, the math is perfect, but it's impossible in the real world, or impractical in the real world, to obtain the level of actual security that the math provides because of all the difference between the math, which is ivory tower, and the implementation, which is, you know, who made the chips, who burned the ROMs, who made the hardware, who wrote the OS, who created the apps.  I mean, there are just so many other things that can go wrong, each of which has the potential for compromising security, down from the absolutism of the math.



LEO:  You know what I would love to see?  I wonder if they're going to do this.  I would love to see Let's Encrypt offer signing certificates for email and stuff.  What that would do is empower encrypted email much more easily for people because they'd just download the certificate, and most email clients will handle it, and...



STEVE:  There have - I have seen some notes about sort of off - I don't know what the term is.  Off the standard uses of Let's Encrypt.  For example - go ahead.



LEO:  I mean, I guess, I mean, it's a certificate.  But you can't - it's not the kind you would use for email.  Or is it?  I mean, couldn't they do the same thing for email that they do for HTTPS?



STEVE:  You absolutely could.  For example, GRC's email is using our DigiCert certificate and is offering TLS connections on the alternative ports, not the old...



LEO:  I mean having a certificate on your computer when you sign your email so you can have signing and encryption in your email client.  I don't mean for the email server.  I mean encrypted client-side encryption, a client-side service.



STEVE:  Yeah, yeah.  These are tied to domains, though, so...



LEO:  Yeah, you can't, yeah, you have no - that's what I'm saying is you'd have to do a different kind of cert.



STEVE:  Right.



LEO:  The p7s or the S/MIME.



STEVE:  Right.  But you're right, it certainly makes sense for someone now to extend this notion to create personal certificates.



So it was Clapper who yesterday morning, in a breakfast sponsored by the Christian Science Monitor, and he's of course the Director of National Intelligence (DNI), he stated that what he called "Snowden's surveillance leaks" have...



LEO:  Ugh.



STEVE:  Yeah, have prompted, he called it, a "massively accelerated push to improve encryption, with the result that today the world is seven years ahead of where it would otherwise be if 'Snowden' [in quotes] had never happened."  And I just... 



LEO:  What a nonsense quote.  I don't even...



STEVE:  Isn't that interesting?  I thought it was interesting that, you know, I mean, this is bureaucracy, and this is the level at which he operates where they have some sense for the rate at which encryption is being adopted.  You know there must be, like, people with degrees generating papers.



LEO:  And there's a graph somewhere, yeah.



STEVE:  Yeah, exactly, generating papers, talking about the number of encrypted devices because this, you know, the notion of encryption is clearly a threat to the degree that it removes plaintext from the 'Net because, when we first started talking about Snowden, when in fact my hypothesis was that there were taps that were installed, which we later found out to be the architecture that was in use, they were happily siphoning up a bunch, I mean, like everything that went by.  And at the time a lot of it was still in the clear.  When we talked about Firesheep, way back then, it was something which you could install in Firefox which would allow you to obtain all of the plaintext of people operating around you on unencrypted WiFi.  And it was just - it was the way the world was then.



Well, it's changed dramatically since then.  And there's no question that the Snowden, the Snowden revelations were a wakeup call to an industry that, you know, we were moving forward with encryption.  But, for example, Let's Encrypt, with its exponential, you know, way more than two million domains now encrypted, it's a reaction, probably, to this.  So I think he's certainly right.  But I just thought it was a - I got a kick out of seven years.



LEO:  Yes.



STEVE:  And Clapper said, "From our standpoint, it's not a good thing."  Then...



LEO:  See, I feel like that's propaganda because I feel like it's very clear they have better ways to surveil us than they've ever - we're seven years ahead of where they would have been in surveillance, thanks to the Internet of Things, the widespread use of open WiFi, and on and on and on.  They've got massively good means.  I mean, how did they solve crimes before we had smartphones?



STEVE:  Now, I'm not disagreeing that there is - for example, we've argued that metadata, and many people are now agreeing, that metadata is arguably almost more useful than the data that the metadata is describing.  That is, the content can be completely unknown, yet it's the who-called-who-when linkages which is still very difficult to obscure, and incredibly valuable from an intelligence standpoint.



LEO:  And I feel like there's - I think there's some disinforma- and of course we don't trust Clapper anyway.  He's a known liar.



STEVE:  No, no.



LEO:  But there's some misinformation.



STEVE:  He's the famous, you know, tell where he was scratching his head, lying directly to the Senate Committee.



LEO:  Here's what I wonder about.  He knows, surely he knows, Comey knows they actually have many more resources and much better Intel about people than ever before.  That's obviously true.  And so why do they keep banging this drum?  What is it they really want?  Why is it that they don't want encryption?  It's more than just tracking down terrorists, I feel.  It's got to be more than this at this point.  They have lots of means now.



STEVE:  I just think they can cry, and they can pull the national security card, and they can pull the terrorists, and we hear about the child pornographers and, you know, and the - how can it possibly be that criminals can have communications that we can't see?  And so they're, you know...



LEO:  That's a red herring.  You know, whenever they raise child pornography, you should know that there's something going on behind the scenes; right?



STEVE:  Right.



LEO:  But I think I general it's a red herring, that they want you to think it's all about terrorism.  What is it really about?  Why do they care so much whether we can encrypt our email, or I can have an encrypted chat with you, or...



STEVE:  I think it's just that they would rather we didn't.  I think...



LEO:  They want everything.  They want it all.



STEVE:  I think that for the last 30 years most of what was happening on the Internet was in the clear.  Email was in the clear.  We briefly went to a secure connection to pass our login credentials to Amazon or Facebook or wherever.  And then, because encryption was expensive in terms of overhead, the standard operating procedure was drop you back to HTTP.  And so, I mean, there was - it was a treasure trove of absolute plaintext that they could do keyword searches in, and they had their little probes installed all over the Internet, and they...



LEO:  So there was a magical golden age of surveillance, briefly, when we first got on the Internet, and we were putting everything out there unencrypted.



STEVE:  And everybody was happy that it just worked.



LEO:  Prior to that, they had...



STEVE:  We were all just happy that it worked at all.



LEO:  Prior to that they had less information than they have even in this encryption era.  So they said, oh, we had a golden age for a year or two.  We want that back.



STEVE:  Oh, no, no, for decades.  Decades.



LEO:  Well, the Internet really wasn't widespread use till the mid-'90s.  So two decades.



STEVE:  Okay.



LEO:  Two decades, that's all.  So they had a gold- and by the way, in those golden years, did they eliminate terrorism?  No.  Arguably, it was worse then than it is now.



STEVE:  Well, and the terrorists are using this technology to huge advantage.



LEO:  But before they didn't have the Internet, so they would write notes to each other or something; right?  So...



STEVE:  Well, and as I said last week, absolute security is an illusion.  It is unobtainable.  And if you actually want a conversation not to be overheard, you meet on a park bench, you know, where you can see everything around you, and you whisper to each other.



LEO:  Right, which is what you did until recently.



STEVE:  Right.



LEO:  So we're, I mean, you could say there's no way we're taking a step backward.  If anything, we've taken - made it easier for law enforcement.



STEVE:  Well, and as it turns out, this leads me to the next note of this week, and that is - I titled this "Our taxpayer dollars hard at work."  And this follows the news that the FBI reportedly paid a hacker $1.3 million to unlock the San Bernardino shooter's iPhone that had been - that was the one that he'd been given by the county.



LEO:  And 8,000 college graduates, computer science graduates, decided they were going to into the hacking business.  Payday.



STEVE:  Well, and the way - it was funny because the way - now, this is Comey.  The way he said this was bizarre.  So this was last Wednesday.  Speaking at the Aspen Security Forum in London, our FBI Director James Comey provided a roundabout hint about the price it paid, "it" the FBI, to an unnamed outside party for the hacking solution which, as we know, followed Apple's refusal to help the agency bypass the iPhone security mechanisms.



He said, when he was asked how much the FBI paid for what they called a zero-day flaw that allows the FBI to break into Farook's iPhone, Comey replied, quote: "A lot.  More than I will make in the remainder of this job, which is seven years and four months for sure."  And so people, like, okay.  Well, public records indicate that Comey earned $183,000 last year.  And without a raise or bonus, he will make $1.34 million through the remainder of his job.  And so that's where we've come up with this $1.3 million figure was from this bizarre comment, "More than I'll make for the remainder of my employment as FBI director."  So it's like, uh, okay.



The problem is that, in losing, essentially losing both of these court battles, the argument can be made that the FBI is way worse off today than they were before.  The Verge had an interesting story, Russell Brandom wrote it, and I'm just going to paraphrase from it.  But as we know, on February 16th, the FBI took Apple to court over the Farook iPhone, and Apple refused to comply.  Meanwhile, a similar phone unlocking order was already being argued in New York.



Well, essentially those two cases plunged Apple into a legal crisis because the company faced the possibility that a ruling might undo a lot of their security work.  Well, here we are now, two months later.  The fighting is over.  And the FBI's hoped-for legal solutions were both defeated.  It's always been clear to observers that the FBI hoped to establish legal precedence with these cases, both which failed.  As we just noted, they ended up dropping the pursuit, in the case of Farook's phone, after paying a hacker $1.3 million, apparently.



And now of course there's the question of are they going to make what they learned available to Apple.  And now, I just saw today that Apple is - or the FBI is saying that, well, we really don't understand it well enough for there being anything for us to give Apple.  It's like, okay.  Observers believe they just want to keep it to themselves, even though we have been told that it doesn't work, it's inapplicable to anything newer than the 5c that was the phone that the county had given to Farook.  Moreover, after losing the fight in New York, the judgment came down against them.  The FBI promised to appeal that negative decision.



Then late last Friday, which is where you drop news you just sort of don't want anyone to notice - it's famous, you know.  Friday afternoon or evening is the news dump where you just don't want it to be in the cycle.  It's the reverse of Monday.  And so late last Friday they said that they had, quote, "found the passcode" for this phone that was at issue, for which there had been a negative judgment against them which they promised to appeal, so they've dropped the appeal.



So now, with the New York case closed, the government is no longer attempting to use the courts to force Apple to break its own security.  As we know, there are plenty of other iPhones prosecutors would like to unlock, but not a single other active case.  So essentially the FBI retreated in both of these instances, did not get the outcomes from a legal standpoint that they were hoping.  And it's left them with, essentially, with bad judgments that now stand and show no indication of being appealed.  So it was not a good couple months for law enforcement.  Yikes.



Also in the news, a very clever AppLocker bypass was discovered.  There was a security researcher, Casey Smith in Colorado, who had the problem of wanting to get a reverse shell on a machine that was locked down with AppLocker.  As we know, AppLocker was a technology that was introduced with Windows 7 which essentially is a white- and blacklisting system that allows, typically in an enterprise environment, allows systems to only run approved-of software.  And so this guy was trying to get something to run on a system that was locked down with AppLocker, essentially a whitelisting system that would only run permitted software.  And so, faced with the problem, he found a solution, which is really interesting.



LEO:  It was kind of clever, actually.  And it's scaring the pants off me.  We use AppLocker here.



STEVE:  Yeah.  And so it turns out there is a tool that is in the Windows System32 directory called "regsvr32" and "regsvr64."  It is a means of registering OLE controls, the Object Linking and Embedding controls, and also COM controls, DLLs, ActiveX things, with the operating system.  So, and it's something that's for - sometimes installing software requires you to register these controls.  And it's sort of supposed to be done automatically.  It's not something users typically do.  But sometimes when, like, stuff breaks, part of the advice is run this regsvr, and they'll give you this magic incantation command line.  And you first unregister the thing, and then you reregister it.  And it just sort of rehooks it into the system again.



Well, it turns out that what was not known is that the command line which you pass it in a /i: argument, can be a URL.  And it's just like, what?  Who knew that?  Somehow Casey figured this out.  And what's troublesome is that regsvr is trusted by the system.  It's signed.  And it has been given by default firewall permission.  So Microsoft knew that regsvr, their regsvr utility - and maybe Microsoft uses this, and no one was really aware of it because it could be just done sort of by scripting internally, to go out on the Internet and obtain scripts to run.



And so Casey did this.  He set up a script on a remote server.  And it can either be JavaScript or VBScript.  And as we know, JavaScript and VBScript, especially now that it's able to invoke PowerShell stuff, I mean, you could do anything with this.  And so this is an element in Windows which is trusted by the system, has firewall permissions by default, understands proxying by default, so it's able to get out through corporate proxies also.  So basically it cuts right through all security, and it bypasses AppLocker completely.



LEO:  Amazing.



STEVE:  So using this with essentially a simple command line, Casey was able to essentially invoke external scripts to run applications of his choice, even though AppLocker did not permit them to run, because essentially he was getting this trusted regsvr to do it on his behalf.



LEO:  It seems like Windows has gotten so complicated.



STEVE:  Yes.



LEO:  That you just can't keep track of everything that's there.



STEVE:  That's exactly right.  And as we know, nothing is the enemy of security more than complexity.  And exactly as you say, Leo, it is just - it's so complicated, there's just ways to do this.  And so from a theoretical standpoint, the idea that he had a problem, and he decided to solve it, it's like, oh, how many other hackers have had this same problem and have solved it, but haven't told us?  You know, he told us.  And so the only reason we know about this is that he's a good guy, and he put up a proof of concept.  And he said, oh, by the way, this works.  And so presumably Microsoft will do something there, probably in, you know, next month on Patch Tuesday there'll be something to fix this.  Who knows what?  Now...



LEO:  Might be hard to fix because a lot of things may depend on this.



STEVE:  I was just going to say that, exactly.  If in fact they are using the URL-ness of this, and one thinks they probably are because they've given it explicit firewall permissions, it may break stuff to close things down.  In fact, the only workaround that anyone has at the moment, and this is what people are recommending if you're concerned, would be to remove firewall permissions, both from regsvr32.exe and regsvr64.exe, in order to prevent it from being able to reach out of a network and grab potentially extremely powerful scripts to run without anyone's permission on a system.



It looks like a local concern.  This is not something where it's, for example, opening ports and servicing requests from the outside.  So it would be a local bypass of AppLocker.  But that's what AppLocker is meant to prevent is local programs that are unauthorized from running.  So this is definitely creating a breach where an enterprise or other system is using AppLocker to lock it down.  This says, eh, no, we're going to run a program anyway.



LEO:  Yeah.  And we spend a lot of money for AppLocker.  I mean, and it isn't so much to keep our employees from doing bad things.  It's just we want to keep these machines kind of - these are our editing machines, you know - stable and not insecure.  It's not about employees.



STEVE:  Oh, Leo, and having ransom cryptoware...



LEO:  Exactly.



STEVE:  ...rifle through your network, that would not be a good day...



LEO:  Not good.  



STEVE:  ...at TWiT, no.  



LEO:  Yeah.



STEVE:  No.  Even with backups of everything, you still have downtime that would shut down production significantly.



So Opera posted an item on a blog that generated a huge flurry of excitement last week.  They wrote:  "Today we want to share with you another big thing that you will first see in the developer channel for Opera for computers."  And I guess they  mean Opera for computers as opposed to Opera for mobile or other platforms because, you know, they have been trying to push Opera out into other environments, you know, embedded uses and so forth.



They said:  "We are the first major browser maker to integrate an unlimited and free VPN, or virtual private network.  Now, you don't have to download VPN extensions or pay for VPN subscriptions to access blocked websites and to shield your browsing when on public WiFi."



So that generated, as I said, a lot of interest.  The problem is that it isn't a VPN.  It's actually a - maybe we should call it a browser super proxy service.  So, and we've talked about Opera proxying for years.  This is one of the tricks that they've used on their mobile platform in order to offer their service and to minimize bandwidth consumption.  They would proxy connections and, for example, re-render large images to make them smaller in order to optimize the performance of their mobile Opera.



So the argument is that what this really is, is an encrypted browser proxy.  It does hide your IP address because Opera will replace the IP address with the IP of one of their proxy endpoints.  And I'm calling it a "proxy endpoint" because it isn't actually a VPN.  The problem is that a virtual private network has a universally agreed-upon definition.  And that is that it is a tunnel around network bandwidth that inherently encrypts all network bandwidth.  But this doesn't.  What they've done is it's - what a traditional browser proxy does is proxy HTTP, that is, just HTTP proxy, meaning that other protocols like, for example, video, which wouldn't be HTTP and would get blocked by firewalls that are controlling what you have access to, they wouldn't be tunneled in a strict web proxy.



So what Opera has done is they have expanded the coverage of their proxy so that, for example, specifically, web videos are proxied.  And so they say that they unblock firewalls and websites.  Many schools and workplaces block video streaming sites, social networks, and other services.  By using what they are saying is a VPN, they say you can access your favorite content, no matter where you are.  And of course you do get the geographical jumping aspect of it because your public IP is one of their - one of Opera's endpoints where your traffic emerges.  And they note that public WiFi security, when you're surfing the web on public WiFi, they say intruders can easily sniff data.  And that's of course true if it's not secured.  Then they say using a VPN you can improve the security of your personal information.



The problem is it doesn't even capture everything, even everything your browser could do.  For example, the whole WebRTC protocol is not in this VPN of theirs, which is not a VPN, it's really a proxy.  So the problem is they've done more than proxying.  Unfortunately, they have overstated what they've done.  And they were forced to respond to the industry that was taking exception to this.  And their head engineer, Krystian Kolondra, he attempted to clarify this and said:  "In our case we are coming with a new term, a browser VPN.  And our goal is that all the network activity from the browser is actually routed via our secure proxy, unlike the usual proxies that only route the web traffic.  So it's different than a system-wide VPN, but it's also different than a proxy, thus a browser VPN."



And then he says:  "Currently, WebRTC and plugins are still not routed that way.  But we're very open about this.  We've just released this as a developer preview and planning to fix this in the coming updates."  So even by their subsequent acknowledgment, they're not a VPN.  They are capturing additional queries beyond HTTP and routing them through their proxy.  So anyway, I wanted to just sort of clarify for everyone who was excited that this is, you know, not a free VPN.  It doesn't mean that, you know, that I think it's clear that email and anything you did not in the browser would not receive the benefit of this.



And unfortunately, even everything you do in the browser does not receive the benefit of this.  Only a few more things, some additional things, like - and they haven't made it really clear.  But, for example, viewing web videos.  Apparently they're capturing that so that it wouldn't be clear to anyone who was explicitly blocking those that that was being done.  And you do get encryption.  So, I mean, so it's not without its purpose.  It's just not - it's stretching it to call it a VPN.  And, you know, so I salute it, but it's not clear that it's going to move a lot of people.



LEO:  Would it be hard to do a VPN?  I mean, you'd have to pay for it, obviously.



STEVE:  Maybe they're going to migrate in that direction.  Maybe they'll...



LEO:  But that's the first step, right, because now you're proxying traffic.



STEVE:  Right.



LEO:  You can proxy - it wouldn't be that hard.



STEVE:  But to be a VPN, it would have to be something outside the browser.



LEO:  Ah, right.  I get it.



STEVE:  That's the key.



LEO:  I get it.



STEVE:  Yeah.  So what would be nice, and I hope they'll do this, would be, for example, to capture WebRTC and plugins so that, as they're saying, right now they're doing more than just proxying HTTP, but there's a lot they're still not doing.  What would be clean would be to at least capture everything the browser does.  And, for example, it's not clear that they're even capturing DNS.  They're probably not.  So that anyone monitoring DNS would still be seeing all the various sites that your browser was asking for IPs for.  So it's just sort of messy.  It'd be nice if they had total encapsulation of everything their browser was doing.  That would be cool.  Right now it's like, eh, sort of a work in progress.  And we'll sort of keep our eye on it to see where they go.  But to be a real...



LEO:  So it's better than nothing.



STEVE:  Yes.



LEO:  It's just not a VPN.



STEVE:  Right, right.



LEO:  Oh, that's all right.  And they may be misrepresenting it slightly.



STEVE:  Yeah.  And unfortunately they used the term VPN and got everybody excited because, wow, wouldn't that be cool?



LEO:  Right, yeah.



STEVE:  But, yeah, not so much.  So unfortunately there's a new version of TeslaCrypt out.  And it's like version 4.1a.  So now our crypto ransomware has version numbers.  The worrisome thing about it is that it's got stronger obfuscation strategies.  It's getting much better about evading antivirus.  It's got anti-reverse engineering technology in it, much stronger stealth.  And whereas we were seeing some targeting, you know, spearphishing, apparently, of high-value targets, like we've talked about various hospitals that have been crippled with this, now what's happening is the various security companies that watch the Internet are seeing TeslaCrypt as part of high-volume spam flooding campaigns.



So, you know, one of the things that I do, and something I would recommend for any of our listeners that are positioned within an organization, when I hear things like "Cryptoware is now in high-volume spam campaigns," I just send a little email to Greg and Sue, just to sort of remind them.  Because, you know, this is happening.  This is really bad.  You know, yes, we can recover.  But it's really better if it doesn't happen to you.  So just don't open attachments.  You know, just continue, I mean, they're really good.  They're not getting themselves infected.  But a little reinforcement is, I think, useful to remind them.



Oh, and the other thing is that the ask from the high-volume campaigns is lower.  So they're asking for a smaller piece of a bitcoin.  But what's been noted is, unfortunately, they're making it up in volume, so...



LEO:  Oh, lord.



STEVE:  It's like, oh.



LEO:  It's like a real business or something.  Wow. 



STEVE:  Yeah.  Yeah.  Boy.  Meanwhile, you'll get a kick out of this, Leo.  On the next page I've got a copy of the email which is being sent.  Okay.  So this was a Cloudflare blog posting.  What happened starting last month, in March, is that Cloudflare's customers - and of course Cloudflare is providing DDoS protection for sites that are having this problem and needing to put themselves behind a large pipe proxy, essentially.  They began forwarding to Cloudflare's management email that they've been receiving, telling them that unless they paid money to the Armada Collective, which is a well-known DDoSing gang, that their site would be blasted off the Internet, and they would not be allowed back.



So, let's see.  Reading from this email, it says:  "Forward this email to whoever is important in your company and can make decision.  We are Armada Collective."  And then there's a link.  And I think the link is to a Google search.  And what's clever about...



LEO:  Yeah, "lmgtfy" stands for Let Me Google That For You.



STEVE:  Ah, perfect.



LEO:  And so this is the snarky response you give to somebody who asks a painfully obvious question they could have discovered the answer to on Google in moments.  You send them the link, lmgtfy.com, with the query attached.



STEVE:  Right.



LEO:  When they click it, it pulls it to a Google page with a prefilled query.



STEVE:  Right.  So...



LEO:  And we do that in the chatroom a lot.  That's why I know.



STEVE:  So what's clever about this is it leverages the reputation, the DDoSing reputation, of the Armada Collective to substantiate their existence and their claim that they'll...



LEO:  It's just saying, just Google us.



STEVE:  Right, exactly.  You can see how real we are.  So they say:  "Your network will be DDoSed starting" - and then they fill in a date - "if you don't pay protection fee, 10 bitcoins," then the bitcoin address.  And so, what, bitcoins are now on the order of $400, so that's $4,000 that they're asking for.



LEO:  Wow.



STEVE:  Yeah.  Then they say, "If you don't pay by [date], attack will start.  Your service going down permanently.  Price to stop will increase to 20 bitcoins and will go up 10 bitcoins for every day of attack."  They say:  "This is not a joke.  Our attacks are extremely powerful, sometimes over one terabit per second.  And we pass Cloudflare and other remote protections, so no cheap protection will help.  Prevent it all with just 10 bitcoins," and then they provide the bitcoin address.



LEO:  But if you act today...



STEVE:  Right.  "Do not reply.  We will not read.  Pay, and we will know it's you, AND YOU WILL NEVER HEAR FROM US AGAIN," it says in all caps.  "Bitcoin is anonymous.  Nobody will ever know you cooperated."



LEO:  Wow.  I can see that this would scare some people, if you...



STEVE:  Oh, lord, yes.  



LEO:  Yeah.



STEVE:  And, I mean, a lot of companies are going to get this and think, I mean, especially companies that are like, $4,000?  Uh, ow.  But they're hearing the stories about sites being blasted off the Internet all the time.  And now they get this demand letter from a legitimate DDoSer with a reputation, the Armada Collective.



Now, there are just a few problems with this.  First of all, they use the same bitcoin address for every one of these demand letters, and the same 10 bitcoins amount.  Bitcoin is anonymous.  So in fact they cannot determine who paid them.



LEO:  Right.  They will have no idea.



STEVE:  They have no idea.  Despite that fact, the fact that these are blind demands for payment that they have no way of knowing, the Chainalysis group that watches the blockchain have found more than $100,000 paid...



LEO:  Oh, man.



STEVE:  ...to that bitcoin address.



LEO:  Wow.



STEVE:  So these guys are making money.



LEO:  Holy cow.



STEVE:  At $4,000 a pop.  Oh, and Cloudflare, of course, that broke the news of this, also talked to their competitors and found their fellow DDoS preventers' customers were also receiving this.  And not a single instance of an actual attack.



LEO:  Right.



STEVE:  So there is no teeth behind these threats.  They can't know whether anyone paid them or not because it's the same bitcoin address.  So they're just making money.  Oh, and this was in less than eight weeks.  So this is $100,000 in less than eight weeks.



LEO:  So what do you suggest?  Wait till somebody actually does a demonstration of their DDoS capability before you hand over the money?  Just say, like, hey, if you're real, just take me down for a minute, would you?



STEVE:  There isn't a good solution.



LEO:  There's no way.



STEVE:  I mean, exactly as you suggest, Leo, the way for a legitimate attacker to function is to take the company down for a period of time, or actually to send email saying...



LEO:  I will take you down, yeah.



STEVE:  ...we're going to demonstrate our ability, yes.  It has to be done...



LEO:  Anybody who's ever seen a Bond movie knows the evil villain has to do a demonstration that he has the nuclear weapon before he can actually blackmail you.



STEVE:  Right.



LEO:  So you've got to blow up an island first.



STEVE:  Right.  And he has to notify you he's going to so that that solves the problem of someone saying, "Oh, I'm the one who did that," even if they weren't.  So only by notifying you ahead of time, and then doing it, can they establish causality.  And then they say, okay, you've seen what we can do.  If you don't want to live your life that way, pay up.



LEO:  And by the way, somebody in the chatroom's a little confused because they said, well, no, DDoS attacks are real.  We're not saying that there aren't DDoS attacks.



STEVE:  Oh, you remember "GRC Is Down."



LEO:  Some people know about this.



STEVE:  "GRC Is Down" was the title of this podcast a few months back, yes.



LEO:  But these are unsubstantiated ransom requests.



STEVE:  This, unfortunately, I mean, and the - I mean, it causes, I don't want to say it causes a problem for the DDoS industry.



LEO:  It kind of does because credibility, their credibility's shot now.



STEVE:  Right.



LEO:  I'm not paying you.  You're just phony.  I love it.



STEVE:  And in fact, in Cloudflare's blog post, because they are so highly ranked in Google, they are hoping that this explanation of this fake demand will rank highly in Google so that that link will fail.  That is, it won't only be legitimate instances of this group, but a very public expose on the fact that these demand letters are just bogus.



LEO:  If you want people to believe you have a Death Star, you've got to destroy Alderaan first, or you just don't have the credibility.



STEVE:  Yeah, so a horrible ripple is felt.



LEO:  Thousands of voices shouting out.



STEVE:  Yes.  Yes.  So the U.S. was sort of surprisingly public.  And David Sanger, who's a well-known reporter for The New York Times covered this in a story that was titled "U.S. Cyberattacks Target ISIS in a New Line of Combat."  David wrote:  "The goal of the new campaign is to disrupt the ability of the Islamic State to spread its message, attract new adherents, circulate orders from commanders, and carry out day-to-day functions like paying its fighters.  A benefit of the administration's exceedingly rare public discussion of the campaign, officials said, is to rattle the Islamic State's commanders, who have begun to realize that sophisticated hacking efforts are manipulating their data."  I mean, and I'm thinking, thank goodness we're doing that.  "Potential recruits may also be deterred if they come to worry about the security of their communications with the militant group.



"Defense Secretary Ashton Carter" - who's oft quoted - "is among those who have publicly discussed the new mission, but only in broad terms, and this month the Deputy Secretary of Defense, Robert O. Work, was more colorful in describing the effort."  This is the line that caught my attention.  He said:  "'We're dropping cyberbombs,' Mr. Work said.  'We have never done that before.'"  So apparently we are cyberbombing ISIS.



And then David wraps this up, saying:  "The fact that the administration is beginning to talk about its use of the new weapons is a dramatic change.  As recently as four years ago it would not publicly admit to developing offensive cyberweapons or confirm its role in any attacks on computer networks.  That's partly because cyberattacks inside another nation raise major questions over invasion of sovereignty.  But in the case of the Islamic State, officials say a decision was made that a bit of boasting might degrade the enemy's trust in its own communications, jumbling and even deterring some actions."  So, okay.  I'm glad that they're, you know, that we're using our cyber technology to that end.



I did want to mention Hover again, my new - and I'm very happy with them - registrar because, after talking about the catastrophe of SMTP Simple Transport Security (STS) last week, and how what we really needed was DNSSEC, I spent a little time digging around, looking at what it would take for GRC to sign its DNS records.  And it turns out that among the things it takes is registrar support.



LEO:  Mm-hmm.



STEVE:  That is, support from your registrar, because the registrar has to provide, I think it's DS records they're called.  Maybe it's domain signing.  I just dug in enough to get a sense for what it would take.  But it's crucial that your registrar be able to take records that typically you provide to them and include that in your official domain registry entry.  Well, Hover can.  Network Solutions, and I was stunned by this, cannot.  I mean, they are the venerable registrar of the Internet.  I'm with them because I registered GRC.com like around the same time Microsoft.com was first registered.  You know, we were - this was the beginning of the Internet, and they were where you registered.



LEO:  Yeah, I was with them at first, Network Solutions, yeah.



STEVE:  Yeah.  Everybody was.  What I found interesting was that, in looking at charts and tables that exist on the Internet of which registrars do offer this, the ones that were the favorites of our listeners all do support DNSSEC.



LEO:  Oh, interesting.  So that would be Google, Hover - yeah.



STEVE:  Yes.  Even Namecheap, for example.



LEO:  Namecheap, yeah.



STEVE:  You know, the hip registrars do support DNSSEC.  But many still don't.  So one other thing to consider at some point, if DNSSEC is going to - when it starts to happen, when we start having things that are really valuable to protect.  Signing is still a pain.  It's, I mean, it's like, I looked into it, and it's like, okay, well, nothing I have really needs it, so I'm going to wait until something does because, oh, it really does - it's a mess.  But one of the things you need is registrar support.  So I said, ooh, does mine?  My new one?  And the answer is yes.



LEO:  Yeah.



STEVE:  So right now I still have - I bought a bunch of years.  I'm not sure when GRC expires at Network Solutions.  But, boy, I will be moving it to Hover because today, at this moment, I could not, if I wanted to, have DNSSEC support on GRC.com because my registrar, the registrar for GRC.com, doesn't offer it.  They just figure they don't need to.



LEO:  So the registrar has to have it, not the nameserver.



STEVE:  Nameserver, too.  So...



LEO:  Yeah, nameserver as well.  But you can't just use somebody else's nameserver.  You have to have the registrar support it.



STEVE:  Yes.  There needs to be records added to, essentially, to the domain root.  You know, so somewhere there is a, you know, there is GRC is a record in the dotcom servers.  And it's my registrar that provides me with that linkage with the GRC record in the dotcom servers.  So those records need to have the DNSSEC, I think they're the DS records, added to them.  And so your registrar needs to be able to do that.  And Network Solutions can't.



LEO:  Good.



STEVE:  I can't get away from them fast enough.  Oh, I'm so happy with Hover.



LEO:  December 2017, somebody says.



STEVE:  Ah, is when GRC...



LEO:  GRC expires, yeah.



STEVE:  Yeah.  I wanted to give a quick public service reminder to our listeners.  A number of people in the last couple weeks, probably because of the success of Never10, have been setting up new instances of Windows 7 and saying that Windows Update never does anything.



LEO:  Oh, that's not good.



STEVE:  Well, and I've talked about this.  And so I wanted to remind everyone because people - so for all of our listeners who, in the future, have an occasion to set up a new Windows 7 machine, the problem is that even the Windows 7 SP1 image, you know, the ISO that typically you start with, it is old now compared to Windows Update.  So when you install a brand new Windows 7 with SP1 built into it, which is about 175 updates behind in the first round - it takes, like, five rounds of updates of updates of updates of updates before you're done.  But it reaches out with its - with the Windows Update client that it had when it was SP1, when it was brand new.



And unfortunately the protocol has changed.  The protocol or the domain, something has changed.  I haven't bothered to dig into it because I don't care.  But the point is it doesn't work.  So the first thing you have to do after installing a brand new Windows 7 is update Windows Update.  And you have to do it manually because it can't do it itself.



LEO:  Great.



STEVE:  Because it's too old.



LEO:  That's lame.



STEVE:  It is so lame.  It is so lame that, like, I mean, and  Windows 7 is still supported, you know, like through 2020.  So it's just wrong that they changed Windows Update and broke the Windows Update for a version of their operating system that is still supported.  So I created a bit.ly link for this, and it's wupup, Windows Update Update.  And so it's bit.ly/wupup, all lowercase.



LEO:  Wupup.



STEVE:  That will take you to the Update Windows Update page on Microsoft.  You download that EXE, run that, and it's a standalone installer that will bring Windows Update up to current so that then it's able to go find the 170-some updates.



LEO:  But what's weird is that you're downloading an ISO from Microsoft for Windows 7.  Oh, maybe they're installing it from a DVD that they had lying around.  If you get the Windows 7 ISO from Microsoft, it should have an updated updater.



STEVE:  No.



LEO:  No?



STEVE:  It's the image from then.



LEO:  Oh, can't fix the image.



STEVE:  I know.  I know.



LEO:  I'm increasingly coming around to your point of view on all of this.  I don't use Windows, period.  I'm just so - it's just - I feel like it's just - it's too old.  It's just become crufty.  And I'm much happier with Linux.  And I just bought a new Windows PC.



STEVE:  Oh, and things like OLE and ActiveX and COM+, I mean...



LEO:  It's all just kind of hanging out in there.



STEVE:  We've been through so many bad stages where...



LEO:  Yeah.  It's like a soup with old clams.  It's like they don't want to refresh the ingredients.  They just want to keep all the old ingredients lying around, just in case.



STEVE:  Yeah, now, to their credit, they did, with Edge, they dropped IE, and they started over.  So, you know, and Edge is doing well from a secure standpoint.



LEO:  They didn't really drop IE.  It still comes, IE still comes with Windows 10.



STEVE:  That's true, it's there.  You're right.



LEO:  They did not drop it.  They can't.  That's the problem.  I mean, it's not completely their fault.



STEVE:  Right, because it breaks too many things.



LEO:  Yeah.  They have to preserve downward compatibility.  Legacy is everything in Microsoft.  But what are you going to do?



STEVE:  It would be nice, it would be nice if they could just start over.  It's like Mozilla needs to start over with Firefox.



LEO:  Yeah.



STEVE:  Some of this stuff just gets too old, and it's, well, and in fact we've even been seeing this with OpenSSL.  It's so old, I mean, it is the absolute reference code, which is like a mixed blessing because, you know, we talked about how Amazon has created a vastly smaller and simpler build, you know, their own TLS, which does everything they need, and it's, what was it, like 5% the size?  And it's not - it's because it isn't the kitchen sink.  It doesn't have all this other crazy stuff in it which is just all the legacy that OpenSSL has.  But it works.



LEO:  There really is no reason now not to use Linux, except for you because you're writing Windows software.  But everybody else, Linux has just - the more I use it, it's really mature now.  It's not old because you can...



STEVE:  And I listen to you guys...



LEO:  ...[crosstalk] that just has the features you want.  You don't - you are in charge of what legacy's there.



STEVE:  Right.  And I listen to you guys on MacBreak Weekly, talking about how sometimes just an iPad is all you need.



LEO:  Yeah.



STEVE:  And also sometimes just a Chromebook is all you need.



LEO:  Chromebook is a good choice.  For most people, a tablet or a Chromebook is really all they need.  A general purpose operating system is not necessary.  That's old days.  In the old days, you didn't have a choice.



STEVE:  Yup.



LEO:  But we've come a long way.  We do have a choice.



STEVE:  And I think it is telling that Intel is making noises now about...



LEO:  Wow, they're moving away.



STEVE:  ...moving, yes, moving away, looking at other...



LEO:  I like my desktops.  You know what I'm hoping at this point, that AMD kind of survives, first of all - that would be a nice start - and can kind of create some solid kind of privacy-focused chips for people who want to roll their own.  You know, it seems like there's an opening there.  We've really moved into an appliance, computing appliance world.



STEVE:  And I think what's happened is we've seen many stages.  There was a day about, ooh, 25 years ago, when you could charge for a mouse.  That is, you could charge for a GUI where you had a mouse and a cursor that, like, moved on the screen.  And so we had GEM, and we had Windows.  And, you know, that was like a big deal.  Then that became commodity, so that everybody had that.  There was no more - there was no value there.



And what we're seeing now is the operating system is now a commodity.  Everybody knows how to make them.  There's a bunch of them that are free.  They're open source.  They're build your own.  They're, you know, what desktop do you want?  You know?  And so we're sort of, in the same way that we're sort of in the post-GUI era, I mean, we have them, but, you know, you can't get any money for that anymore.  That's just part of the ground.  And now operating systems are, too.



LEO:  Yeah.



STEVE:  I've been having some discussion over in the spinrite.dev group, like next generation, and sort of like thinking about how I'll do SpinRite 7.  And the idea is that, you know, because I'm a Windows developer, and I know this environment so well, and I'm so comfortable here, that SpinRite 7 might be a bunch of custom kernel drivers to give me the super low-level access that I need to the hardware, and then a feature-full Windows application that talks to the custom drivers.  So anybody with Windows who purchases SpinRite 7 would be able to run SpinRite without leaving Windows; would be able to perform recovery on their drive, even the one they're using, assuming that it boots; and do all kinds of SpinRite things on attached storage of any kind without leaving their operating system.



And the ReactOS, which is coming along very nicely, is 100% Windows API-compatible and driver-compatible.  Which means I could take the entire identical set of work, SpinRite kernel drivers and a SpinRite Windows app, and host them on the ReactOS for everyone who was using Linux or Mac...



LEO:  You use FreeDOS right now; right?



STEVE:  Right.



LEO:  This would replace FreeDOS?



STEVE:  Right.  And so for, like, for the next major revision of SpinRite, you would be able to boot SpinRite with the ReactOS if you didn't have Windows.  Or if your Windows...



LEO:  And that would run on an ARM chip, too; right?



STEVE:  Uh-huh.  And that's the other thing, is that...



LEO:  Oh, interesting. 



STEVE:  Is that I would make it platform independent and bring it - I would finally give up, you know, in the rewrite, lift it away from assembler, rewrite it in C so that it would be cross-platform and cross-architecture, too.



LEO:  Very interesting.



STEVE:  So anyway, just some discussions that we've been having about how I might do this.  I've got one more interesting piece of news.  I got a long DM from a neat, I want to call him a kid.  I don't know how old he is.  Just sort of felt like a neat developer kid.  I'm sorry if I'm insulting you.  His handle is Inphektion.



LEO:  Inphektion.



STEVE:  Inphektion.  Yeah, there you go, good.  Inphektion.



LEO:  That's definitely a kid, by the way.  I don't know anybody over 25 that would use that as a handle.



STEVE:  Right.  So he says:  "Hey Steve, nice chatting with you, ha ha.  Wondering if you could help get the word out about the easiest way for a layperson" - and it's not really a layperson, but, you know, he wrote that - "to set up their own OpenVPN server.  I consider this similar to helping people, just as Let's Encrypt has helped lower the bar for website owners to offer their sites over TLS.  This allows anyone who is able to boot a Raspberry Pi to install and manage OpenVPN.  I call it PiVPN.  Installing it is as simple as entering: 'curl install.pivpn.io | bash' into the command prompt.  That's it.  I have a site up with more information at pivpn.io."



LEO:  This is a great idea.



STEVE:  It is.



LEO:  Use your Raspberry Pi, a $35 Raspberry Pi as an OpenVPN server.



STEVE:  Yes, yes.  I loved it because what this lets our listeners do is you take a Raspberry Pi, and you just plug it into your router.  After setting it up, you plug it into your router, and it's an OpenVPN server.  So what that would mean is that, wherever you were out and about, as long as you knew the IP of your home, and of course you could use dynamic DNS, DynDNS, to do that, you could VPN into your home network.  So that would allow you then to get out to the Internet, so you'd be VPNing away from where you are, and your IP would be your home's IP.  And of course you'd also be able to get onto your home network with access to all of your home resources.



So what's so cool about this is, you know, curl, and then install.pivpn.io.  That pulls what you need and pipes it through bash that does all of the work for you.  So it's a script that installs OpenVPN server and configures it and sets it up.  And you can even manage the server because you have - he says you have add, list, and remove, et cetera, commands for managing the client certificates.  So he says he'd greatly appreciate me getting the word out, and I have.  And I think this is a cool idea.  So I salute you, Inphektion.  PiVPN.io.  I think I - I haven't tried it myself.



LEO:  I'll try it.  I'll try it.  I'm going to try it.



STEVE:  Looks like a cool solution.



LEO:  Yeah.  I'm going to try it.  Now, the Raspberry Pi has an ethernet port, and you could put WiFi.  Because you'd need dual - wouldn't you need dual ethernet to do a VPN?



STEVE:  You really don't.  We think of it that way, but there's no reason that it could not route from the outside and back to the [crosstalk].



LEO:  [Crosstalk] loop.  So it goes through and comes back out.  Okay.



STEVE:  Yes.



LEO:  So a single ethernet would be adequate.



STEVE:  It could be set up that way.  I don't know how he's done it.  But...



LEO:  This is a trend which I'm loving.  And Let's Encrypt is another good example of this, of people taking the effort to write scripts that automate these processes that you could do by hand.  I mean, they're cookbook processes.  But it's, as you mentioned when you talked about setting up an OpenVPN server, it's nontrivial.



STEVE:  It's what drove me to consider CryptoLink.



LEO:  Right.



STEVE:  Was, you know, I got mine running.  I use one.  But, oh, boy, it's not for the faint...



LEO:  Yeah.  So, and I'm seeing, by the way, more and more of this.  And I love it.  And there are tools, there's tools like Jenkins designs to build these automated - Jenkins is an automated build server.  But for developers it automates this process that used to be very tedious and manual.  And the reason I think of Jenkins is because there's a great little program to build a Raspberry Pi, or actually could run on anything, a Minecraft server.  And you just run this, it's a Java program, but it basically is a long script that does all - that grabs stuff from where it needs and assembles it and puts it together.  It runs for, like, 20 minutes.  And at the end you get a JAR file...



STEVE:  Nice.  Nice.



LEO:  ...that is the whole thing.  And it's so nice.  I think this is a great - this is, if you're not a programmer, but you're an accomplished user that knows how to install stuff...



STEVE:  Exactly.  It's sort of a - it's like a perfect middleware thing where, you know, you're able to pull all the pieces together and create value.



LEO:  Exactly.  I'll try this.  I see no reason not to, despite the name Inphektion, I see no reason not to try it.  And I'll let you know how it works.  The nice thing is...



STEVE:  Cool.



LEO:  ...it's Raspberry Pi.  Worst-case scenario, you format the MicroSD card and start over.



STEVE:  Yeah.



LEO:  Yeah.



STEVE:  Yeah, cool.  Very cool.  So we all know that one of my pet peeves is non-zero-based Y axes on graphs.  And I loved this.  Somebody found this and tweeted it to me, and I said, oh, that's the Picture of the Week.  Well, it got bumped down into Miscellany by the exponential growth of Let's Encrypt.  But I just love this.  The caption is:  "Is truncating the Y-axis misleading?"  And this shows a chart where essentially 1% says no, and 99% say yes.  But because the Y-axis has been truncated so that the zero is essentially 98, it looks like it's an even split.



LEO:  Equal.  It's a perfect example.



STEVE:  Between yes and no.



LEO:  Perfect example.



STEVE:  Yeah, loved it.



LEO:  Yes, it's awesome.



STEVE:  And then going through the mailbag, I did find a note from a Rob Peel.  And I'm hesitant to pronounce this Australian city name because I mangled, what was it I mangled...



LEO:  Yeah, Canberra.  Canberra.  Canberra.  Canberera.



STEVE:  ...Canberra last week.



LEO:  Canberra.



STEVE:  So what do you think?  Geelong, you think it's Geelong?



LEO:  That one you got me.  Geelong?  Geelong?  Is it a hard or a soft "G"?  Is it "jif" or "gif"?



STEVE:  Yeah.



LEO:  Geelong.



STEVE:  And then we heard - someone said it was "yif" now.  I've heard that used.



LEO:  Yeah, "yif," I'm saying "yif."



STEVE:  Okay.



LEO:  Because that way you get out of the whole battle.



STEVE:  That's right.  We're just going to go - we're going to take the road less traveled, the third branch.



LEO:  It's "Yeelong."



STEVE:  So he says - so anyway, his note was in the mailbag, and it was about my switching to BSD or Linux and the suggestion for a podcast, a different, a new podcast that we would do, Leo, to follow my journey into that territory.  And so I just thought, okay, well, no.



LEO:  Just what we need.



STEVE:  I don't think so.  But, he said, "P.S.:  I purchased SpinRite a few years ago, and when a friend's XP machine was failing to boot recently, I had a chance to give it a go.  I pointed SpinRite at the hard drive and came back once it had finished.  It hadn't appeared to have found any problems."  This is a popular refrain we've heard before.  So he says, "So I was beginning to think it could just be Windows rotting away as it seems to do when it has users installing all those search bars.  Anyway, I restarted the machine, and she booted straight up without any errors.  Magic," he says.



And then, separately, I thought you'd get a kick out of this, Leo, as would our listeners.  Someone who's a longtime SpinRite user has been collecting what we call the "detailed technical log" screens, which is a graphic representation of what SpinRite found on the drive.  And I've got four of those screens in the show notes that he provided.  The first one is just a really bad day.



LEO:  Oh, yeah, man.  



STEVE:  It's just, yikes.



LEO:  Lots of red.



STEVE:  Lots of red unrecoverables, where SpinRite, despite everything it tried, it would have ended up approximating the data in the sector.  And as we know, that's not as good as a perfect recovery.  But sometimes, you know, sometimes it just means that a few bits ended up it couldn't figure out, but all of the other 4,096 bits it could, or all but, I mean, there's a total of 4,096, so a few it lost; but the rest, the balance of them it was able to get.  And if, many times, even an executable will run if something like - if a small part of it is broken.  So definitely worth doing if you're in recovery mode.  So that's one of the reasons SpinRite wins as much.  But the other three are interesting because they evidence the physical nature of data destruction.



LEO:  Oh, look at that.



STEVE:  Yes.



LEO:  So it's like slices.  It's like slashes of green.



STEVE:  Well, think about it.  The disks all have a periodicity to them.  That is, there are surfaces, and there are platters.  And so, for example, if a surface died, then...



LEO:  It would look like this; right?  It would be kind of stripes.



STEVE:  Yes.  And in fact I think this represents a problem that, that second image, a problem with one whole surface.  It looks to me...



LEO:  So just so people understand who are watching this, red means an unrepairable bad sector.  Green means a repairable bad sector.  So those are bad sectors, those stripes.



STEVE:  Right.  Well, so, and notice that the unrecoverable ones were at the beginning.



LEO:  Yeah.



STEVE:  Then we had a whole region where SpinRite was able to repair the problem.  And then notice how at the bottom they kind of taper off, that is, they're not as wide because whatever it was that went bad, it was sort of fading out there toward the end.  And then at the very end of the drive there was no problem.  So it's really interesting that you see the cyclical or the per-surface nature, the physical nature of the problem.



LEO:  Geometry shines through, yeah.



STEVE:  Yeah.



LEO:  How about this one?



STEVE:  And then the third one is the same kind of...



LEO:  Perfectly evenly scattered dots.



STEVE:  Yup.  So there is a - there was, like, the head bounced on the drive, or scraped across the surface or something.  So spaced out in equal distances across..



LEO:  What is the X and Y?  Is it - do you start at the center and move out from top to bottom?



STEVE:  Correct.  So the upper left is the beginning of the drive.



LEO:  Zero sector.



STEVE:  And we know that that's the inner cylinder.  So drives always start in the inside and move to the outside.  I'm sorry, no, disks do that.  I think drives typically start on the outside, on the outermost cylinder, and then move inwards.  And so the upper left is the beginning of the data, and the lower right is the end of the data.



LEO:  So on a spinning hard drive, this is probably the outside.  Because that's the fastest part of it is the outside; right?



STEVE:  Correct.  Correct.



LEO:  It starts, it uses this first because that's the best part to use.



STEVE:  Exactly.  You get the highest data transfer rate.



LEO:  Right, right, okay.  And then this one?



STEVE:  And then the last one is fewer, but still the same sort of periodicity showing that there was something physically where there was a problem.  I just thought those were kind of cool.



LEO:  Really neat.  Somebody in the chatroom said, "There is a limit on how much you should do SpinRite."  He said, "I have a friend who used SpinRite 33 times in a month on the same drive because it kept coming up with errors."



STEVE:  Oh.



LEO:  There is a point at which you discard the drive; right?  I mean, there are - it is also the fact that sometimes the error is not like a hard or a permanent error.  Relocating the data and marking that sector bad will keep a drive going.  It's like back to, you know, continue to use it. 



STEVE:  Correct.



LEO:  But there is a, what, how many times should somebody run SpinRite on a single drive before giving up?



STEVE:  I guess it's sort of a function of your situation.



LEO:  If it happens again, like you fix it, and you're using it, and then you have another problem, and you run SpinRite again, and there's more bad sectors, that would be enough for me to say, hey.



STEVE:  Yes.  I would say it is absolutely the case that, if a drive insists on failing, nothing SpinRite can do can prevent that from happening.



LEO:  Right.



STEVE:  That is, you know, it is - SpinRite, think of it as providing you a big, a much larger gray zone than you ever had before, between the drive is all happy and the drive is dead.  SpinRite, like, instead of that just being white and black, now there's this gray zone that allows you some leeway in, like, saying no, no, no, no, I really need this back.  And so, you know, run SpinRite on it, and it'll say okay.  You were in the gray zone, but you weren't that deep in.  So we'll give you your data back.  But it's like, yeah, take that as a hint that, you know...



LEO:  Yeah.  Get your data off and move on.



STEVE:  ...maybe you don't want to stay in, you don't want to get any deeper in the gray zone.



LEO:  [Singing] Riding in the danger zone.  I want to ask you a question.  Then we've got 10 questions from our audience.



STEVE:  Yup.



LEO:  But just a quick question about just - I'm getting a new Thunderbolt 3 enclosure.  These new Thunderbolt 3 enclosures.  40Gbps, I mean, just...



STEVE:  Oh, wow.



LEO:  I'm so excited.  And then I'm putting into it SSDs, the top-of-the-line Samsung EVO 850s.



STEVE:  Nice.



LEO:  Yup.  And it's a two-drive enclosure with hardware RAID.  You could do zero or one, or you can span, or you can just say, hey, there's two drives in there.  Is it nutty for me to do RAID 0, the striped RAID?  It gives me a 2TB drive that's fast; right?  Although is it faster on an SSD?



STEVE:  Yes.  Well, it depends upon the RAID controller.



LEO:  Okay.



STEVE:  Striping is supposed to be faster.



LEO:  It interleaves rights, goes right here, right here, right here.  But that's to compensate for seek time.  And there's no seek time on an SSD.



STEVE:  No, but so the problem is the interface you've got is faster than the drives.



LEO:  Right.



STEVE:  And so that's what we're...



LEO:  Oh.  I get it.



STEVE:  Yeah.



LEO:  I get it.  Okay.  So we're getting a faster throughout by interleaving the drives.



STEVE:  By pulling from both drives at the same time.



LEO:  Oh, at the same time.



STEVE:  Yes, yes.



LEO:  So I would want to use RAID 0 for maximum throughput.



STEVE:  Yup.



LEO:  Because the drives can't saturate the bus.  The bus is way faster than [crosstalk]



STEVE:  Correct.  If the RAID controller - the question is, is the RAID controller good enough to pull from both, or to cache and then write to both?



LEO:  I'll have to do some tests and see.  I don't want it redundant.  I don't care about that.  I want speed.



STEVE:  Yeah.  Yeah.  Well, and...



LEO:  And 40Gb.



STEVE:  With the size of the stuff you guys are throwing around there, I mean, you know, the overhead of producing the shows just, I mean, I'm hearing you talking about all the video compression stuff.



LEO:  Oh, can you imagine?  Our render times are huge.



STEVE:  Yeah.



LEO:  That is, unfortunately, the biggest issue for us, getting these shows out.  We'd love to turn around and show the show - and people all the time say, why does it take so long?  We'd love to give you a show the minute it's done.  But you've got to render the thing.  So video, it's all about video.  Video takes forever.



STEVE:  Yeah.  When I'm sending the audio to Elaine, the time of the evening that I send it is a function of how long the podcast was.



LEO:  Yes.  



STEVE:  Because as this podcast is longer, we end up with the rendering time expanding.  And so your guys just aren't able to get it posted any faster.



LEO:  Yeah, you know, and there's actually two parts to that, two functions to that because what we do is we - and of course, if we didn't have to do video, none of this would be a problem.  If it were all audio, everything'd be a lot faster.  And so for things like TNT, the daily news show, we do just push the audio the minute it's done, so you at least can audio as quickly as possible.



STEVE:  Yeah.



LEO:  But not only is it rendering, but upload.  These are big files.



STEVE:  Yeah.  



LEO:  So we get it, and the new place will have better bandwidth for...



STEVE:  Ooh, nice.



LEO:  ...half the cost, yeah.



STEVE:  Nice.



LEO:  We have a number of fiber choices and gigabit - we have Gigabit from Sonic.net and...



STEVE:  Oh.



LEO:  It's a little pricey.  I can't - I don't think we get the Gigabit.  We'd love it, though.  All right, Steve.  Q&A time.  You ready?



STEVE:  Yeah.



LEO:  We've got about half an hour, but I think we can burn through a few of these.  Let's start with Redding.  In the U.K., Neil Warwick writes:  Isn't it time to drop Firefox?  On a couple of recent podcasts you've mentioned some things that make me wonder, should I stop using Firefox and switch to Chrome?  The last thing you mentioned, the namespace bug in Firefox, that was last week, was a little worrying - I agree - especially since I use the LastPass plugin, and I worry another malicious plugin could steal my data.  Also, given that no one at Pwn2Own even bother with Firefox because it's so easy to attack makes me think maybe I should be looking for something else.  My preference would be Chrome.  No reason to stick with any particular browser, but I'd be interested in your view.  You're still a Firefox user, aren't you?



STEVE:  I am.  But I empathize with Neil's position.  To be frank, I'm on Firefox because I love the add-ins.



LEO:  It's the plugins that you're hooked on.



STEVE:  Yeah.  Although now, you know, Chrome - when Chrome was new, it didn't have comparable plugins.



LEO:  Oh, it's got amazing [crosstalk], yeah.



STEVE:  Now it's pretty much caught up.  I really love the side tabs.  And there is a Chrome plugin that offers that.  But for me, the biggest problem is RAM use because I'm stuck in a 32-bit OS still.  And as we know, Windows XP only gives you three of the 4GB of RAM.  And I just - I can't afford to have lots of tabs in Chrome.  The security modeled in Chrome is a multiprocess model where they use the OS-enforced process isolation in order to create inter-tab security.  That's a good model, except that it's expensive in terms of memory.  It's the reason Chrome tends to consume memory.  As you open lots of tabs, those are each at least one process, sometimes several processes.  So, and it consumes memory.



Now, when I switch to Big Mama, my 64GB of RAM machine, memory will no longer be a problem.  And I guess we have to sort of see what happens with Firefox.  I'll be a holdout, probably, just because - but I am going to end up running, figuring out how to put this thing in a VM.  There is no way that, as soon as I can afford to, my browser does not go in some kind of a true high-security container.  And the only real way to do that is to stick it in its own VM.  Browsers need to be in virtual machines so that they cannot, they do not have access, uncontrolled access, to the underlying operating system.



But for most people, I kind of have to agree with Neil.  I think that, until Mozilla revamps Firefox, and I hope they can, just in the same way that Windows is getting old, and we said earlier that Firefox is showing its age, because the architecture has been dragged forward now for so many years that at some point you just have to say, okay, we need to start over.  And I love Firefox.  But I have to say most people, I think, probably better served with Chrome.



LEO:  Except Windows XP users.  Right?



STEVE:  Who like tabs.



LEO:  Well, but also Chrome is not being updated for XP now.  So Firefox is it.  That's your last best safe browser.



STEVE:  Right.



LEO:  Unfortunately.  Mike Hodos - Hodor! - in Raleigh, North Carolina wonders about the difference between a hardware firewall - well, you know, this is a good - I can't wait to hear your answer.  This is a question that comes up a lot, especially on the radio show.  What's the difference between a hardware firewall and a NAT router?  And are there benefits to the hardware firewall in addition to a properly configured NAT router?



STEVE:  So I agree, this is a great question.  And I see it all the time, too.  So I was sort of trying to figure out how we got where we are.  And it's mostly a function of history.  That is, in the beginning, we didn't have consumer NAT routers because there just wasn't a need for multiple IPs.  We typically had computers with modems that were dialing a modem pool remotely to get us on the Internet.



Meanwhile, corporations were getting themselves on the Internet, and their networks also were small, and they were being given blocks of IPs, which they needed, but they needed to protect them.  So this was before NAT, but still a need for packet filtering.  And so a hardware appliance was created to be inserted at the perimeter of an Intranet in order to control access to the Internet.  And that was a hardware firewall.  It was an appliance.  It was something that was typically very expensive.



But corporations said, oh, you need a hardware - you need a firewall to protect your network.  And of course movies all then had firewalls, and hackers were breaching firewalls.  And so it was a thing.  And it was sort of a - it was a device that had a role in the beginning.  And, as we've seen, nothing ever goes away on the Internet.  You know, it's why I'm hoping that SMTP STS never happens because, as I said last week, kludges never die.  And but so what's happened is you could - there are still hardware firewalls.  Not for any reason except sort of there were hardware firewalls back when we really did need them.



And now we have NAT routers because fewer IPs are being given to people who need many more.  And the classic example is the residence, where we've got one IP being shared among now all of our light bulbs and other things in our home.  So the distinction between a hardware firewall and a NAT router has really been lost.  We've got terminology - hardware firewall and NAT router - which has survived the loss of difference between them.  There really is no difference.  NAT routers have additional firewall capabilities where you're able to punch through the NAT in order to create a DMZ.  That's an old-school sort of firewall term.  And firewalls all offer NAT as a feature of them.  So there really is no difference anymore.



And then for a while remember there was the whole stateful packet inspection, where it was like, ooh, an SPI NAT router.  Well, yeah, but all NATs are stateful because that's what NAT is, is stateful.  So what we have is have sort of redundant terms - hardware firewall, NAT router, no difference.  Just different terms now for what has essentially become merged into the same single thing.



LEO:  There must, I mean, we spend - okay.  There's definitely a difference in firewalls.  I mean, we use heavy-duty enterprise-grade firewalls.  And so there's definitely some additional...



STEVE:  No.



LEO:  No?



STEVE:  No.



LEO:  Because these are like $10,000.  And I would like to not buy them.



STEVE:  Well, okay.  So are they doing...



LEO:  These are security devices.



STEVE:  ...antivirus?



LEO:  They do other stuff, right.



STEVE:  Yeah.  So, see, that's not a firewall.  That's a - yes.



LEO:  Security device.



STEVE:  That's a network security appliance.



LEO:  Okay, okay, yeah.



STEVE:  So it's a firewall plus.



LEO:  Like the Astaro.  That's what the Astaro was.



STEVE:  Right.



LEO:  Yeah, okay.



STEVE:  And it's doing way more than just being a firewall.



LEO:  Yeah, we're using Astaros now, but they're close to their end of life, and we have to decide in the new building what we're going to get, I guess, yeah.



STEVE:  Yes.



LEO:  Okay.  Because otherwise I'm just going to say go out and get some Linksys routers, and we're good.  Don't laugh.  I don't want to be DDoSed.  Dontrell in Georgia, he's being driven crazy with spam email, Steve.  Guys, I was introduced to your podcasts through a course I'm taking - wow, that's neat.



STEVE:  Yeah.



LEO:  And I want to know how I could stop - by the way, we hear from a lot of people, lot of college professors and others.  People use this in their curriculum.  I'm really - that's wonderful.  I wanted to know how I could stop all the unwanted emails I get.  I've tried the usual way of unsubscribing.  Oh, no.  But I think when I unsubscribe I start getting more unwanted emails from another unknown source.  Yes, that's right.  Sorry if I'm off subject of what you guys usually cover, but I'm looking for any advice.  This is a good subject, too, another great question.



STEVE:  It's another great one.



LEO:  You talk about what you do, but I'm going to talk about what I do because I have a solution, as well.



STEVE:  Okay.  So I do two things.  And I just sort of wanted to share this.  Now, I have the advantage of running my own email server, so I can do some things that are less easy.  But there are ways to do them, for example, with Gmail.  So I do two things.  One is I change my email address annually.  That is, my email address incorporates the current year number.  And what's cool about that...



LEO:  Steve, don't give away your algorithm.



STEVE:  What's cool about that...



LEO:  I thought that was secret.



STEVE:  Yeah.  It's important.



LEO:  You're more open than you used to be.  Now that you do these Twitter DMs and all this stuff, you don't mind a little bit of...



STEVE:  Yeah.  So the algorithm does include my email address.  I mean, I'm sorry, the email address includes the current year.  What's cool about that is that, if somebody has my email address from the prior year and sends me something, and it bounces, then they can look at it and go, oh, I'll bet I know what it is now.  And so they just update the current year after January, and it goes through.



What this has taught me, though, what I discovered is the reason this was worth divulging my algorithm.  I don't know why, but spam takes time to find you.  And something as simple as changing your email address loses spam.  That is, it's just gone.  And you might think that, oh, it's going to find you again within a week or two.  No.  It takes, I can attest to this, years, multiple years.  Because what I typically do is I forward the old addresses into the new address, just so that I'm not losing something I might care about.  And so, you know, I'm getting some spam from 2011, for example.  And I know that because it's got the 2011 number in the email address.  But I'm not getting spam from 2012, 2013, 2014, 2015.



LEO:  Oh, that's interesting.



STEVE:  It really is.  So whatever the mechanism is, there is a long lead time.  And so just what I've learned from experience is just changing your email address periodically sheds it for quite a while.  And if you do it in some way so that people you care about could figure out where you've gone, then you lose the bad guys, you lose the automation, but not the humans.



The other thing I do is for - and this is where I use my own server.  I'm able to easily create aliases.  So, for example, DigiCert, I don't use that annually expiring email for DigiCert because I have to go change DigiCert and everybody else.  So Amazon and DigiCert and PayPal and, you know, the relationships that I have that are long-lived and that are trustworthy, I give them a static email address for them.  And that's an alias that then forwards to whatever my current email address is.  So then I just quickly update the aliases in the server after January 1st, and everything keeps flowing through.



So those are the two things I do.  And I mentioned the alias because, as we've talked about, it is possible to create aliases on Gmail accounts in order to create essentially individual accounts and get some sense, you know, get additional control over email.



LEO:  You could do it with a plus sign.  You do your name plus, and it ignores anything after the plus sign.  So I use Gmail.  I find Gmail is plenty for spam filtering.  So what I do...



STEVE:  So just running email through Gmail.



LEO:  I just - I have - so of course I don't use a Gmail address.  I use my own address that I have with a registrar, with Hover.  And then you send me email at that address.  It just - Hover has an MX record that says go, you know, send - no, I don't want it.  I don't have a server.  Send it to Gmail.  Gmail does, I think, very good collaborative spam filtering.  So that's kind of the best kind.  Computers are okay.



STEVE:  Right.



LEO:  But they're not great.  So the collaborative filtering means that, when somebody else in Gmail says that's spam and marks it as spam, and enough people give it that signal, Gmail will say, oh, you know what, this is a spam.  And even though I didn't know it because my computer wasn't that smart, I'm not going to give this to anybody else.  So that's great.



STEVE:  So you wouldn't even know.  You wouldn't even know you were being DDoS extorted.



LEO:  Yeah, no, I don't - yes, perfect example.  Because people would mark that as spam.  So that, I have basically a sewage treatment system.  You know, sewage treatment is a multiple-stage system.  So that's my primary treatment.  Then...



STEVE:  Water comes out the other end.



LEO:  Yeah.  Eventually we're going to have pure email.  The next thing I do is I send it to my IMAP provider.  So they use Cyrus, which is a really excellent IMAP server.  That's FastMail.  So it goes from Gmail with my public address to a private address that no one knows at FastMail.  That way only mail from Gmail is going to get to FastMail.



STEVE:  Yup.



LEO:  Which is kind of what I want.  I want it to be that primary treatment for everything.  FastMail runs something called Spam Assassin, which is a more old-school but very, I think very effective, if properly configured, antispam filter, as well.  That'll catch any strays that go through.  But then filtering, the final stage, the tertiary stage is my own custom filters.  And I'm looking for stuff, first of all, addressed to me directly.  But other things I look for, and this might help our correspondent, is if the word "unsubscribe" appears in the email body, now I know that's a mailing list.  So I just put those all in a separate mailing list folder, so they never get in my Leo inbox; right?



And then I have - one of the things that FastMail does is it has my address book, which I upload and keep synched.  If somebody's in my address book, they're presumed to be a friend.  They go to a friend folder because that's never a spammer.  I also have a VIP list, and those are a handful, like my mom, that are - those get - that immediately goes to the VIP folder.  And then the rest fall through to the Leo folder.  And if it's not addressed directly to me, then there are lots of other places they might go.  But those are much lower priority emails.  They're mailing list emails or group emails, that kind of thing.  And they're of less interest than something that's addressed directly to me.  By doing that, and that alone, I find I am in pretty good shape.  I rarely, rarely see spam.  It's just - it just doesn't get down to that pure water level, you know. 



STEVE:  Right.  And I guess I would only say that the only difference, or the biggest difference, is I have zero filtering.  So I never - so there's never any false positives.



LEO:  Right.



STEVE:  I never - there's no danger of missing anything.



LEO:  I don't see any on Gmail.  False pos- but you're right, that's the risk of my system.  The risk of your system is I get a lot of email, and I can't change my address every year.  It's not - that's not practicable for me.



STEVE:  Right.



LEO:  So you, you know, that system makes sense if you really don't want email, and only people who know your system can get through.



STEVE:  Right.



LEO:  I can't do that.  I have to have a public email address that anybody can email to.



STEVE:  Right.



LEO:  So I have to use this.  And there's one more additional thing I'd add, which is, if you do use Gmail, there's a plugin called Unroll.me that you can set up to automatically unsubscribe.  So if you do get emails that are - that have an unsubscribe link, and that's almost all the emails that are from - they're ba- we call them bacon.  They're not spam.  You probably did sign up for them, or in some way indicated to somebody, yeah, it's okay to send me offers.  But they're not something you want, either.  So Unroll.me will give you some control over that.  One way it can do it is a digest, with single email with all of them.  Or it can actually unsubscribe you automatically.  But to answer his specific point, that is kind of risky because a spammer wants to know if there's somebody at that address; right?



STEVE:  Well, and a perfect example of bacon is I mentioned that I had purchased some components from New Egg.  Well, now I'm their best friend.  And so they're sending me their daily deal constantly.  And I, you know, I got that for a while.  Then I thought, you know, no.  And so I unsubscribed.  And so it was a legitimate unsubscribe link from a legitimate retailer.



LEO:  Right.



STEVE:  And I just said, nah, I don't need to know...



LEO:  Periodically I'll do that.



STEVE:  ...that within the next 10 minutes I save 25% if I purchase this particular SSD that I don't particularly want.



LEO:  What I find, though, is you can unsubscribe, and then a week later, two weeks later, everything starts up.  You know, I mean, it is very hard to fight this.  So automated systems seem to be the best.  The nice thing about FastMail, very sophisticated filtering system that allows me to look at any part, you know, any X-header, any unusual - I can do - any part of that email I can parse with grep.  And so you can get pretty - for a while, anything that came from China I was just dumping automatically.  You know, there's stuff like that that you can get some pretty good rules in there.  And rules will help you, too.  That's kind of like that plus thing.



STEVE:  Let's do one more and then pick up the rest next week.



LEO:  Okay.  Sorry about that.  I shouldn't be talking.



STEVE:  No, no, no.  No, we've done a beautiful two-hour podcast, and we'll do another one next week.



LEO:  Well, and it's Episode 1500 of TNT coming up in seven minutes, and we can't let that [crosstalk].



STEVE:  Nice.



LEO:  Marissa in British Columbia, is that who you'd like to do next?



STEVE:  Yeah.



LEO:  You know what's great?  These questions that we've done are like the real fundamental questions we get all the time.



STEVE:  Yeah.



LEO:  Nice to wipe them out.  All right.  This is the no-antivirus question:  Steve and Leo, I've been listening to the show since the start of the year, and I'm hoping - so these are all people who are fairly new, I guess; you know?  I'm hoping   that I will become more knowledgeable in security, mostly by osmosis.  Thank you so much for your interesting conversations and for sharing your infinite wisdom.  Aw.  Thank you.



My questions may show my true naivete, though:  I was listening to a recent Security Now!, and Leo mentioned that you need not have an antivirus.  What?  I personally use Avira's free antivirus, and I like to scan to make sure that I have no intruders.  Is there a better way to do this?  Does this even protect me in the slightest?  Can you recommend any episodes of Security Now! that could possibly teach me some more basics, or any other free - minimum-wage laborer here - educational tools.  Thanks so much.  I look forward to your podcast every week.  Marissa.



STEVE:  So you and I are on the same page on this, which is that the AV which is now available for free - and I assume that Marissa is a Windows user.  She didn't say.  But Windows incorporates either, what, Windows Defender or Security...



LEO:  It used to be called Security Essentials.  And in Windows 10 it's just called Defender.



STEVE:  Right.  And it's being updated.  It's constantly updated.  Microsoft has sort of slowly crept into this business so they wouldn't upset the existing AV industry that first formed around Windows.  But at this point I just - I don't suggest anyone use a third-party AV.  If something really gets - somehow passes that and gets in, I like - I just use Malwarebytes, free edition, run that to clean a system, and then remove it.  But otherwise, I don't have anything running all the time. 



LEO:  I pretty much agree with that.  The problem is that viruses spread so fast now that an antivirus probably isn't going to protect you. 



STEVE:  Correct.



LEO:  So in some ways that's a false sense of security.  You get a free antivirus.  You don't need one on a Mac, really.  There's really not an issue on the Mac.  And the other one I would say is there are a lot of companies trying to sell you antiviruses on mobile, on iOS and Android.  And there's no reason in the world to use those.  They can't do anything of value.  And Google and Apple already do everything that can be done.  In fact, Google will scan every app before you install it.  And Microsoft won't even allow you to have an app that isn't scanned before.  Doesn't keep stuff out of the store, but they have ways of killing it.  And even if you download it, and it gets in the store, having a antivirus on iOS or Android is not going to prevent you from getting hurt.



STEVE:  Right.



LEO:  So they're of limited utility.  And they have some negative impacts.  They slow your machine down.  Sometimes they can keep you from doing things.  A lot of the bugs that I hear about on the radio show, first question, I say, do you have security software running?



STEVE:  Well, and we also know that they've had some questionable practices, too, that they have installed security certificates in the root store, and they're looking at all of the security traffic coming in and out of your machine.  Now, on one hand, it's like, well, yes, but that's local, and it's for your benefit.  But if they're not careful, third parties can obtain the key and use that as a means of getting into your system.  So it just - I don't think that, on balance, the benefit outweighs the collection of problems.  And, for example, if you do have Windows, just use what's there.



And lastly, just to wrap up the question, Marissa, we do have a daunting number of previous podcasts, all of which are available.  I don't have specific episodes of Security Now! that I would recommend for the basics.  But we sort of did start at the beginning, in the beginning.  And so if you've got time, you could go back to Episode 1 and learn about Honey Monkeys.



LEO:  It's all still relevant.



STEVE:  And go forward.  Yes, it is, it's surprisingly...



LEO:  Alas.



STEVE:  ...useful.  I did see in the mailbag somebody was referring to Episode 225, I think it was, and we were talking about how Apple was just expanding its input code from four digits to six.  And he says, "It's still relevant."



LEO:  Yeah.  Isn't that interesting, yeah.



STEVE:  Yeah, even half the way back.



LEO:  And Marissa, because you're a beginner at this, and we don't normally cover the really fundamental basics here, I'm going to point you to a website and a book that I interviewed the author.  The book was scary.  It was called "Future Crimes."  But he's a computer security pro, and what he put together is an acronym called UPDATE.



And I'll run this by you, Steve, real quickly.  But I think that you will agree with all but one.  There's one that I kind of question.  But these are kind of in order:  Update frequently, number one.  Passwords, he talks about making a good password, keeping track of your passwords, two-factor authentication.  I think we'd agree.



STEVE:  Yup.



LEO:  Download.  This is what you've said.  Only download software that you wanted, that you asked for.



STEVE:  You went looking for.



LEO:  You went looking for.  Be skeptical of free software, et cetera.  Admin, which is don't run as the root superuser or admin user.  This is the only one I - I don't dis- it's not bad, but he says turn off your computer because that reduces your attack surface.



STEVE:  No, I never do that.



LEO:  That's silly.



STEVE:  Yup.



LEO:  Because really the real problem is not while your computer is off, it's while you're using it.  It's not when it's just sitting there.  It's you that's the problem.  And finally, Encrypt.



STEVE:  If we didn't have NAT routers, then I would say turn it off.



LEO:  Maybe, yeah, right.



STEVE:  But, you know, there is no attack surface.



LEO:  Right.  And finally Encrypt.  So it's not as good an acronym without the "T," UPDAE.  But just remember you don't need to turn off the computer when you're not using it.  But everything else, really, is actually very good, I think, solid advice.  So he did a good job of that.  It's FutureCrimes.com is the website.  And then you just go to the resources or the...



STEVE:  How about instead of "T" for turn off your computers, train your family?  



LEO:  Train.  Very good.  UPDATE.  Replace the "turn off" with "train."  Because it is.  It's about knowledge.



STEVE:  Yeah, because we are the weak link.



LEO:  We are.



STEVE:  And so you want to explain, just as I said, like sending a little reminder to Sue and Greg, you know, I know everyone's good about not clicking on stuff in email, but really, really, really don't.  And so you just want to, you know, you want to train your family and friends, you know, spread the knowledge that you get here.



LEO:  Or "T" could be Trust No One.  I don't know if that's...



STEVE:  That's good, too.  Perfect.



LEO:  Yeah, that's good, too, from Chickenhead21 in the chatroom.  That's Marc Goodman.  The book is "Future Crimes."  I'm not necessarily recommending the book, but I do think - I mean, it's a good book, but it's not going to help you with security.  It's mostly going to scare you.  But the UPDATE acronym is good.



STEVE:  And I have to say, I mean, we have a daunting library of prior podcasts.  But so many people say that they've, like, everything they know about security they got from the podcast.



LEO:  Yeah.  Well, that's true for me.



STEVE:  Or like it made it so easy to graduate with this or that degree and so forth.  So there is, if you have time, there's - it's just dripping with, you know, information goodness.



LEO:  Dripping with information goodness.  That is our motto here at Security Now!.  You'll find Steve at his website, GRC.com.  That's where you get SpinRite, world's best hard drive recovery and maintenance utility, even for SSDs.  GRC.com.  But when you're there, there's so much free stuff that he gives away, including this show, and transcripts of the show, so you can read along as you listen.  GRC.com.  Questions can be left there, but he's also on the Twitter, @SGgrc, and accepts DMs from anyone, which is very - much more generous than I.  Do not DM me.



STEVE:  Even if your name is Inphektion.



LEO:  Inphektion.  You're a brave man, I must say.  We have audio and video of the show as well on our site, TWiT.tv/sn; on YouTube.com/twit; and wherever you get your podcasts, including those great third-party TWiT apps written by our friends, friends of the network, who have just done such a nice job on every platform.  Look for the TWiT app and subscribe.  You don't want to miss an episode.  I still need to write a little script to download every episode.  I should do that.  All right.  That'll be my task this week.



STEVE:  Yeah.  You're having fun with scripts.



LEO:  It's easy.



STEVE:  And command line.



LEO:  It's not hard to do.



STEVE:  Yeah.



LEO:  Thank you, Steve.  We'll see you next week.



STEVE:  Okay, my friend, thanks.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#558

DATE:		May 3, 2016

TITLE:		Listener Feedback #233

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-558.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss another interesting week of security news including the U.S. Congress's passage of the Email Privacy Act, the Snowden/Zakaria encryption debate, the still unresolved question of compelling fingerprint unlocking, more Android trouble with Stagefright, WhatsApp going dark in Brazil again, the return of Who Is Satoshi, Steve's fabulous new puzzle discovery, and more.  Plus some more questions from Security Now! listeners if we have any time left.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson's here.  He's got a wrap-up on all the big security news, including his take on the Satoshi Nakamoto drama playing out right now with Dr. Craig Wright.  He also talks a little bit about new problems with Android.  Yeah, there's another Stagefright bug.  And we'll answer five more questions from our great audience.  Security Now! is next.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 558, recorded Tuesday, May 3rd, 2016:  BitCon.



It's time for Security Now!, the show where we cover your security and safety online.  Makes it sound scary.  It's actually a great show, a fun show, where you learn a lot about technology with this guy, Steve Gibson.  Hey, Steve.  



STEVE GIBSON:  Hey, Leo.  Great to be with you again.  We only got four of our nominally 10 questions in last week because we had so much to talk about.  And I have a similar concern this week because there's lots of fun stuff has happened.  Congress has passed an Email Privacy Act.  Edward Snowden and Fareed Zakaria debated for an hour on the issue of encryption.  We still have this question of can you be compelled to have your finger pressed against the iPhone unlock button up in the air.  Android has continuing problems with the Mediaserver module which of course we're introduced to with the exploits known as Stagefright.  And Google has in fact renamed their monthly security now from "Nexus Security Update" to "Android Security Update," acknowledging that Android ecosystem is bigger than just Nexus.  WhatsApp was ordered shut down again by the same moron judge.  And we found out what WTF is in Portuguese.  Then of course everyone wants to know...



LEO:  But it's back, you know.  The higher court overturned it once again.



STEVE:  Yeah.  One hour.



LEO:  One hour.



STEVE:  I mean one day.  It was supposed to be out for 72 hours; and it's like, okay, it's back up the next day.  And it was the same judge.



LEO:  Was it?  I thought it was a different - it's a different case though; right?



STEVE:  Different case, same judge.



LEO:  Oh, how funny.



STEVE:  He just is annoyed.



LEO:  He doesn't like it.



STEVE:  Yeah.  And then the question is do we finally know who Satoshi Nakamoto is.  And it's funny, too, because in my show notes I put, "Will the real Satoshi Nakamoto please stand up."  And I thought, I wonder if our audience is too young to understand that reference?



LEO:  No.  Oh, you don't see - okay.  So here's the thing, Steve.  You're too old to understand that reference.  You're thinking about "To Tell the Truth."



STEVE:  Correct.



LEO:  And our young audience is thinking about Slim Shady.



STEVE:  Who?



LEO:  Yeah, see, okay.  It's an Eminem song:  "Will the real Slim Shady please stand up."



STEVE:  Yeah.



LEO:  So it works.  But this is one of those rare multigenerational references.



STEVE:  Nice.  Nice.  Well, then I'll keep that in my repertoire.  And I have discovered a new puzzle.  And so far I'm batting, what is it, a thousand is good.  A thousand is perfect, as I understand it.



LEO:  Well, I brought back Blek for iPad Today yesterday because it was such a great game.  And I'm ready.  I'm ready for a new one.  Let's do it.



STEVE:  Well, good.  Because that's the best-named one I've come up with, or that I've seen.



LEO:  Blek?



STEVE:  Yeah, I'm not a fan.  I'll explain why.



LEO:  Oh, okay.



STEVE:  It's just it's not my kind of thing.  I like more of a sort of a strategy...



LEO:  Something cerebral.



STEVE:  Yeah, thank you.



LEO:  That was more of a kinetic puzzle, yeah.



STEVE:  Lots to - and Blek is, if nothing else, it's kinetic.  So we have lots to talk about this week.  And maybe, if we have time, we will continue with some questions because we were on a great roll there with those first four that everyone liked last week.



LEO:  They were awesome, yeah. 



STEVE:  We ran out of time.  So we'll see.  We'll play it by ear.  Maybe we'll do some more Q&A if we have time.



LEO:  Another great Security Now! all queued up.



STEVE:  Lots of stuff.  So we did have a nice little bit of legislation coming out of the Congress.



LEO:  I thought it was kind of telling.  Congress hasn't passed a bill unanimously in years.



STEVE:  No.  And the fact that this was unanimous in the House, given how partisan the House is, this just says - what it means is it will just cruise through the Senate because now this thing goes from the House to the Senate.  The Senate will say fine.  They'll bless it.  And then it'll be sent to the President for his signature.  So this is the Email Privacy Act which updates what was a 30-year-old law, the Electronic Communications Privacy Act, called the ECPA, of 1986.  So, yeah, maybe needed a little bit of updating.



What this does is requires the government to obtain a probable cause warrant from a judge before obtaining private communications and documents stored online with companies such as Google, Facebook, and Dropbox.  The EFF supports this and was jumping up and down, and they were happy this passed.  They did note, though, that one thing it did not do is require any notification by the government that this was being done to the user accounts where it was.  So this still allows for secrecy.  And the EFF considers that notification is important because it would then allow users to obtain some legal counsel to lobby for their rights.  So the EFF wasn't totally happy.  But this was a nice big step forward.



And this also upheld, or it codified, rather, a previous appellate court, the Sixth Circuit Court's ruling that the Fourth Amendment demands that the government first obtain a warrant before accessing email stored in cloud service providers.  So there had been some case law, but it hadn't been - but that was just decided by a court and attorneys arguing.  Now it's been codified as formal doctrine.  So this is nice.  And great to see this, as you said, Leo, unanimous is like, whoa.  Nobody said no?  So that's...



LEO:  I think what it tells you, what it tells me, is they're a little nervous about - because the whole thing was, you know, up to this point, actually it's still the law, anything older than 180 days is abandoned and doesn't need a warrant.



STEVE:  Right.



LEO:  And I think that...



STEVE:  So half a year.



LEO:  ...they realized, oh, crap, they're going to be able to read our email.  There goes Dennis Hastert on his perp walk from old stuff.  Maybe we'd better get some better protections for us.  That's about, I bet, I mean, that's cynical of me, but I think that's maybe got something to do with it.



STEVE:  No, it's a very good point, Leo.  Very good point.



LEO:  I mean, it's unanimous.  It's got to be something like that; right?



STEVE:  Yeah.  It was surprising.



LEO:  Yes.



STEVE:  And what it does mean is, unlike many of these things, I don't expect this to die.  It's not going to die in the Senate.  If it's unanimous in the House...



LEO:  Oh, no, it'll go through, yeah.



STEVE:  It'll just cruise right through.



LEO:  They all have skeletons in their email.  Every one of them.



STEVE:  Yeah.  And I see no reason why the President would not sign this into law.  It's like, seems like a good thing, so.  And, I mean, it keeps with this notion that the Constitution provides against overreach, where you have to convince a judge that there's probable cause for search.  And so this follows that model.



Speaking of which, this was the argument that Fareed Zakaria had in his debate with Edward Snowden.  There's something called the Debates of the Century series.  And I perked up when I heard that some notable billionaires were funding this.  And so they're a series of sort of high-end debates being held about significant questions.  And they were debating - oh, I'm sorry, Fareed and Edward Snowden, who was there of course by telepresence.  He was in Moscow.  And Fareed is arguably my favorite CNN guy on Sundays.  He has a Sunday show, "GPS," Global Public Square.  And I just - I like his approach.  It's sort of no-nonsense.  It's clean.  Maybe a little academic, but also grounded.



So he debated with Edward Snowden the motion, quote:  "Government should have lawful access to any encrypted message or device."  That is, you know, they're debating the question of, as we call it on this podcast, DOD, Decryption On Demand.  Should that be the way the law is?  It's an interesting debate, although - and I watched it this morning.  And I didn't feel that we learned anything new.  I was a little distraught by Snowden being a little cute.  I think, I mean, he's been the focus of this question for so long, he's developed some anecdotes.  And from my standpoint, when I see somebody saying something that's important, which is arguably wrong, but is being stated as a fact, that's a problem.  I mean, opinions are fine, but facts are facts.



Now, they did an online poll of the audience and their online viewers because this was being streamed.  I don't know how many, how large the sample was.  We didn't see a viewership number.  But before the debate began, the moderator gave everybody a text message number where they could text how they feel, that is, government should have lawful access to any encrypted message or device:  no, yes, or undecided.  Before the debate, no was a little over three quarters, 77%; yes was 13; and undecided was 10.  After this hour-long discussion, no dropped to 69, and yes went up from 13 to 22, and undecided dropped a little bit, well, by 1%, to 9%.



So for what it's worth, Fareed made some good points.  And Fareed's position, frankly, was my position, which is that he's had smart people tell him that this could be done if we wanted to do it.  Edward Snowden's position was there's no possible way of - it's just not possible.  He kept using things like outlawing encryption, and we know this is not about outlawing encryption.  "Governments should have lawful access to any encrypted message or device" is not about outlawing encryption.  It's about putting in the law a means for providing access, which is different from outlawing encryption.



So anyway, I made it the bit.ly link of the week, for anyone who's interested.  It was a good discussion.  But there was nothing dramatically new brought forward.  So at bit.ly/sn-558, if anyone wants - that just bounces you to the YouTube video.  I think, with the introductions, it's a little over a hour.  And, you know, I enjoyed it.  And these are the arguments that we've seen before.  And the question of our era at the moment is where will the law come down?  And there were some interesting points made.  So, but, again, nothing earth-shattering.



And we still have this fingerprint compulsion question, like, in the wind.  Actually, all of these things are still up in the air, even can you be compelled to give testimony against yourself in the form of your passcode if you're not using biometrics.  This was brought back into the news because an L.A. judge or court ruled that the girlfriend of an alleged Armenian gang member had to press her finger against an iPhone which had been seized from a home in Glendale, where it was believed that this iPhone would contain important evidence in a case.



So as we know, we've talked about this before, this whole question of is a biometric, because it's something you are, not something you know, the argument has been that it doesn't qualify as testimony.  And so what the Constitution protects is self-incriminating testimony.  And so there have been arguments that compelling someone to release a passcode is requiring them to testify against their interests.



Well, there are scholars that believe that this can be, that argument can be extended to unlocking a phone; that if a phone contains incriminating evidence, then even though it's sort of one step removed, the same law applies.  So the Supreme Court has ruled, at the Supreme Court level, that police can search your phone if they have a warrant; and, separately, that they can order you to produce fingerprints without a court order.  However, it's not clear that the two could be combined.



So what we're still doing here is we're sort of rummaging around in the lower courts, very much like Apple and the FBI were, needing the highest court to formalize law that works for 2016 and going forward.  We talked about two years ago, in 2014, that case in Virginia that set some precedent, which determined that fingerprints were okay to compel, but passcodes were not.  At the same time, it's not decided.



At the moment there is a 17-year veteran and former sergeant of the Philadelphia Police Department who is suspected of, but not formally charged with, possession of child abuse images on encrypted hard drives.  He is in contempt of court because he has refused to provide the passphrase that would unlock those drives.  So although he's not even formally charged, because he refuses to provide those passphrases, he's been in jail for seven months, and the judge says he will remain locked up indefinitely until he decrypts the drive, saying that, quote, "he carries the keys to his prison in his own pocket."



So here again we have the same sort of problem, is we've got competing interests and attorneys arguing their sides of these cases.  And every court decides what it wants to, based on some precedent or ignoring precedent.  And meanwhile, we need the Supreme Court to decide these issues.  But at this point it's not clear.



There's a woman, Mary Fan, who's a law professor at the University of Washington, who was asked by Ars Technica on this issue, and she said, "This is why I tell my criminal procedure students that they have more protections today if they use a passcode rather than a fingerprint to guard entry to their phones.  While I don't," she said, "conduct crimes on my cell phone, I still decline to use my fingerprint out of an abundance of caution."  And of course I also don't conduct crimes on my iPhone, and I use my fingerprint out of an abundance of convenience.



LEO:  I think what's interesting, I mean, we've always said this, that they can collect a fingerprint; they can collect hair.  But I understand why this is now, and it should be, going to court, and ultimately should be decided by Congress, as with all of these things, because a fingerprint is like giving a piece of evidence, or hair is a piece of evidence.  It's not testifying against yourself.  But unlocking your phone is more than a piece of evidence.  It's giving...



STEVE:  It's an action.



LEO:  It's an action that gives a much larger pool of information to law enforcement.  So I understand why this is actually being contested.



STEVE:  Yeah.



LEO:  And I do hope that they will see this as more than simply giving up a fingerprint or giving a DNA sample.



STEVE:  Right, a fingerprint traditionally has been limited to identifying you.



LEO:  Right.



STEVE:  That is, you know, is that your fingerprint on a murder weapon.



LEO:  It's a piece of evidence, but not self-testimony, right.



STEVE:  Right.



LEO:  It's, you know, again, as the President said, we are fetishizing our phones.  But there's a good reason for it.  They have everything.  They've got it all.



STEVE:  Well, and I would argue that privacy needs to be pried from our cold, dead hands.  That is, let's fight for all of it that we can get, and we'll see how much we can hold onto.  My guess is we're not going to - it's not going to be something that we can have absolutely.  And of course we know on this podcast that there's no such thing.  The phrase "electronic Internet privacy" is an oxymoron because one portion of the ecosystem is unlocked, but all of the conduits in and out can be spied on.  So, okay, there is an aspect of this that isn't as absolute as we would like to imagine that it actually is.



LEO:  It'll be very interesting to see this whole thing play out.  I think we're going to see it play out.  And it may end up being a small footnote to the presidential election which is actually playing out right now.  It may be moot, in other words.



STEVE:  I meant to talk to you about this before...



LEO:  Well, we don't want to get political on this show.  Yet many of the subjects that come up in covering technology are political.  This is a perfect example.  It affects us.



STEVE:  Yeah, although it's never been clear to me how this really divides down party lines.  And we might argue that the unanimous vote for email privacy hasn't.  Things like Hillary's email.  That's clearly political realm stuff.  I went on record months ago saying, if there was actually an operating server in a closet in some random office building, then if you don't have physical security, you have no security.  So that was unconscionable.  I have, you know, just to get to my servers, where there's not that much of great import, I've got to go through three different hoops, you know, and guarded camera scanning, dogs are sniffing around, I mean, it's intimidating.  And then we hear that the server was in operation in a closet off of the bathroom.  It's like, what?



LEO:  Well, but I think that that's a larger story because I think that that's more a reaction to the fact that the government didn't have secure servers and so...



STEVE:  And wasn't really enforcing policy.



LEO:  Yeah, I mean...



STEVE:  They say they had policy, but...



LEO:  It's because email's so new, frankly.  And so I'm sure by now, I would hope, that they have.  But these governmental email servers were not any more secure than one in your closet.



STEVE:  No.



LEO:  In fact perhaps less so because they were a target.  So, I mean, I can't impute her intention, but you could make the case that she felt it was more secure to run her own server than it would be to trust the government servers.



STEVE:  Well, and we've talked about this before.  But the fact that her email address wasn't dot gov, it was dot bill or something.



LEO:  It was clintonemail, clintonemail.com, yeah.  She was using, basically, she was using her personal email for government business.  But again, that's because this was all new, and still is somewhat new.  Government moves slowly.  Remember, we've had email for a long time.  They're just now figuring out that, if you don't use your email for six months, it's not abandoned, you know.



STEVE:  Right.  And Colin Powell did the same thing.



LEO:  He did the same thing, exactly, because it was new.



STEVE:  So this hadn't been addressed.



LEO:  Right.



STEVE:  And certainly has been over-addressed now.



LEO:  Yeah.



STEVE:  But anyway, my point was that clearly that is a political issue...



LEO:  Yes, it's partisan; right.



STEVE:  ...that I have a feeling we're going to be living with until November.  But this, to me, seems apolitical.  It seems, I mean, I don't see where this is partisan.  But this is policy, and incredibly intriguing.  I've got a bunch of projects on hold pending the outcome of this.



LEO:  Yeah, no, I've got watch and see what happens, yeah, yeah, yeah.



STEVE:  So Android is back in the news, but in the same way that all of our deeply inspected platforms now are.  What we're seeing is, if there's a takeaway with a broad brush, it would have to be, if you look really, really, really hard at anything that's really complicated, you will find holes.  We see it over and over and over.  I just read, and I didn't have a chance to dig it up because I just - it just came by an hour ago that OpenSSL just had two longstanding critical patches made.  There it is.  It's everywhere.  It's longstanding.  There are, like, really big problems with it.  And it's like, okay, yeah, and we just fixed two real big problems that presumably everybody needs to fix OpenSSL now.  And so we have a history of problems with Windows.



Now Android is the new kid on the block.  As I mentioned at the top of the show, what Google was calling the "Nexus Security Bulletin" has been renamed the "Android Security Bulletin" yesterday.  And nothing huge to mention.  They did push out an over-the-air update containing 32 vulnerabilities.  The carriers received this package a month ago, on April 4th.  So with any luck they've been pushing those out, too.  There were two privately disclosed - so these are not zero-day.  They are not known to be currently exploited.  But once again in the Mediaserver module, two critical remote code execution vulnerabilities which affect versions 4.4.4, 5.0.2, 5.1.1, 6.0, and 6.0.1.  And those are all in the show notes for anyone who's interested.



The problem is that Mediaserver is very exposed.  In one podcast some months ago we really took a close look [SN-518].  We were looking at the C code and looking at the pointer math where it was so easy, they hadn't casted the same variable the same way.  So this is the problem with C is that it's very literal, as programming languages are.  And because there was a slight mix-up in the interpretation of the variable, the inequality was treated as signed or unsigned or a different length.  I don't remember the exact detail, but we covered it at the time.



So what's happening is now people are looking carefully at this and finding more problems.  But the crux of it is that it's this shared media processing library that needs to handle a wide range of different input file types and formats.  And the so-called Stagefright vulnerability or this Mediaserver module is accessible in a number of different ways.  And what we've also seen is that media parsers have historically been problematical.  You know, parsers in general tend to be kind of an inflection point.  We see them, for example, with font rendering.  That's a font format parser where it's essentially taking sort of a meta language and interpreting it to understand the exact handling of the media that it's bringing along, whether it's a font or it's a graphics file or, in the case of Mediaserver, MMS or MPEG movies or whatever.



So it's a difficult type of code to get right.  And as we know, it's necessary to be perfect because, if it's not perfect, and it's possible for an exploit to find its way to the flaw, then that can be leveraged.  And the problem is that many different components within the Android OS invoke this Mediaserver module, sort of by implication.  It's just there to handle their media needs.  And so there are all kinds of - so what that means is it has a large attack surface.  And there's just all kinds of ways to get externally supplied sort of pseudo media at this module.  And if it's not perfect, that can cause problems.



So anyway, I'm hoping that Google will get this out to everyone with Nexus devices.  If you have an option, you certainly want to update.  I know that Amazon is - I've got a Fire device, and every time I turn it on it's been doing things.  So I'm assuming that these updates are getting out in a timely fashion.  And again, not super critical.  It's not like it was before, where this was a zero-day, and it was already being exploited in the wild, and people's phones were getting taken over.  But this is just something you want to get taken care of.  And probably we haven't seen the last of it.



Oh, and I forgot to mention that this server is operating with extensive rights on the platform.  It needs to have access to the camera and the microphone and lots of the platform's hardware.  So it's in a privileged position.  And unfortunately it's prone to being poked at.



I tweeted earlier today that we now know that the Portuguese abbreviation PQP is our equivalent of WTF because there were a lot of people tweeting...



LEO:  I want to hear you say it in Portuguese.



STEVE:  Oh, and speaking of which, from now on I am spelling Australian city names.  Talking about batting a thousand with puzzles, I'm at zero for...



LEO:  They're impossible, I know.



STEVE:  Just I'm not doing it anymore.  I'm going to spell them because I just have no idea how to pronounce them.  I can't do it.  So once again a judge yesterday ordered a three-day blackout of WhatsApp in Brazil because WhatsApp, of course now owned by Facebook, and now sporting the Signal messaging protocol which is designed so that it cannot be decrypted, and given the way it's structured - we've covered it extensively - it's just it's a beautiful protocol.  Hats off to Moxie and group for producing Signal and for WhatsApp and Facebook for incorporating it in.



So this judge is the same guy who a few months ago not only ordered WhatsApp to be blacked out, but put a WhatsApp executive in jail briefly.  And so he's just on the warpath.  He just doesn't get this, that this has been designed so that it's not possible.  And they say it's not possible.  And so then the fine would be the equivalent of $142,000 to a carrier, a cell phone carrier, who did not comply with the judge's order.



So throughout Brazil WhatsApp was blocked, and it went dark.  Then the order was once again overturned.  The executive a couple months ago, he was let out of prison.  People were just scratching their heads saying, "We don't know what's wrong with this judge; but, you know, sorry about that, sir."  So again, we're seeing the consequence of this weird place we're in where we are currently designing encryption that no one is able to decrypt, and the courts haven't caught up with that.  And I don't know what'll happen.  I mean, we're having a big enough problem in the U.S. where we're watching this all happen.  But there's Brazil, and then there was - what was the country, do you remember, that was going to outlaw completely, ban all encryption?



LEO:  Oh, yeah.  I don't remember.  It was a former Soviet Bloc country.



STEVE:  Yeah.  I don't remember now.



LEO:  Oh, it was Hungary.  Hungary.



STEVE:  Yes, you're right, Hungarian, yes, [crosstalk].



LEO:  But obviously this is going to be a battle that's going to be held all over the world.



STEVE:  Yup.



LEO:  And, see, my answer to the Fareed Zakaria/Snowden debate is that that's not - that's posing kind of the wrong question.  I would agree that lawful interception of encryption would be nice.  However, it's just not available because any time you do that, you undermine encryption.  And so people want to - and good encryption exists.  It'd be very, I mean, if countries try to really outlaw strong encryption, which is the only...



STEVE:  Well, the argument, the best argument is that, as we know, strong encryption apps exist.



LEO:  There's nothing we can do about them.



STEVE:  Even if Apple was compelled to redesign their system so that iPhones could be unlocked on demand without any weakening, well, doesn't matter because ISIS already has their own [crosstalk].



LEO:  Well, I do, too, and so do you.  Everybody does.  And WhatsApp has kind of jumped the game by building it into their app, as well, so everybody has access to that.  So then what do you do?  The only next logical step is to ban use of strong encryption.  Which, by the way, would also, somebody pointed out, Burr-Feinstein would also ban the use of a browser since it has built-in strong encryption, and the guy who makes the browser cannot break it.  Or we'll stop using browsers because they'll do a man in the middle; right?  And at that point then the only thing you could do is ban strong encryption.  And when that happens, well, I fear for the world because, what, are you going to put everybody in jail who uses PGP?  Leo Laporte, Steve Gibson talking security and moving on.



STEVE:  So we're back again to who is the...



LEO:  Oh, man.



STEVE:  ...creator of the Bitcoin.  And back in December, so, what, like five months ago, five and a half months ago, this other person came to the fore, Craig Wright, W-R-I-G-H-T.  And two publications were claiming that he was the guy.  We talked about it a little bit at the time.  I didn't give it much time on the podcast.



LEO:  It had broken during the show.



STEVE:  Ah.



LEO:  Which is why.  So you didn't have time to really think about it.  And by the time we were back next week it was like, yeah, that's bogus.



STEVE:  Well, and his location was raided.



LEO:  The day that it was broken, and it was broken in Gizmodo and Wired magazine.



STEVE:  Yup.



LEO:  And it was suspect from the beginning.  And that day he was raided by Australian tax authorities.



STEVE:  Right, right.  And so we just let it drop.  Okay, then suddenly there's this big flurry a couple days ago.  And, I mean, every - because bitcoin is a big thing, it's an opportunity for everyone on the Internet to say something about who is this.  Anyway, my tweet from this morning - Craig Wright put up a second tweet this morning.



LEO:  Well, we should say that this started up again because the BBC and the Economist...



STEVE:  Yes.



LEO:  BBC said, oh, we found him.  This is for sure true.  The Economist hedged it a little bit.  But in both cases they were partially convinced by the former director of the Bitcoin Foundation, a man I've interviewed on Triangulation, Gavin Andresen, who is a smart, and one thinks, one trusts, guy with integrity, and one of the few people who's personally corresponded with Nakamoto.  He took over the Bitcoin Foundation when Nakamoto withdrew from the Internet in 2011.  He said to Andresen, "Okay, you're in charge.  I'll see you."  So if anybody, you'd think Gavin would be the guy to ask.  And he met with Wright, flew to meet with Wright to see the proofs, the demonstrations of the proofs, and wrote on his blog, "This is it.  I thought before I met with him it would be true, and it is."  And of course immediately his commit keys were withdrawn on GitHub from the Bitcoin repository because people thought either he was hacked or he's delusional.  We still don't know.  I don't think Gavin's said anything much since then.



STEVE:  So, okay.  So thank you for the background.



LEO:  Yeah.  So people know where we stand.



STEVE:  Yeah.  So there was a first post a couple days ago which it just - it sort of felt like a shell game.  I mean, very much like Craig, who is - so this Craig Wright guy, who is claiming to be Satoshi, he says in his first post, you know, "I really sort of reluctantly have decided that I need to assert proof that I'm Satoshi because I was hoping this would all blow over back in December, and it kind of did, but then again it kind of didn't, and my friends and family and acquaintances are being harassed."  And it's like, okay, you know, either you are or you're not.



LEO:  And meanwhile, he's benefited significantly from the perception that he is Satoshi.



STEVE:  Right.  And the problem is that, as we know from our podcast on Bitcoin years ago, that what there is ultimately is a private key.  And that private key is used to sign things.  And we talk about this sort of concept in crypto on the podcast all the time.  And that if he purchased - if he spent a bitcoin that he mined - and what we believe is that he's got a million bitcoins that are now worth 449...



LEO:  Satoshi does.  The real Satoshi does.



STEVE:  Satoshi, correct, Satoshi, yeah, right.  We believe that the originator of the blockchain has, I mean, no.  We know that there are a million bitcoins presumably created by and owned by and being held by the real Satoshi.  And all that's necessary is that, if Satoshi wants to prove his identity, he spend a fraction of a bitcoin.



LEO:  If he can move a bitcoin from the known Satoshi blocks...



STEVE:  Yes.



LEO:  But preannounce it.  Say "I, Dr. Craig Wright, am now going to move a coin from the Satoshi block."  That would be sufficient; right?



STEVE:  Correct, because...



LEO:  Unless he's stolen his keys or something.



STEVE:  The only way to do that is with the private key in the bitcoin wallet.  So this "evidence" that was shown wasn't that.  It was some sort of obscure use of scripts and kind of, again, I liken it to a shell game.



LEO:  It was a magic trick.  It was B.S.



STEVE:  Yeah, where sort of some things were shown, and some hashes were made, and don't look behind the curtain.  And, oh, look, these hashes are identical.  Now, a number of people have torn that apart.  Then this morning Craig posted again.  And so I read as I was preparing for the podcast this latest blog posting of his that I'm going to share because what I tweeted was, "I sure hope this clown is not Satoshi.  Get a load of this latest spew of nonsense."  So, okay.  So, and, I mean, I'll let people draw their own conclusions.  But so he says - the posting was titled "Extraordinary claims require extraordinary proof."  And people have had a lot of fun with that already because it's like, no.  Just proof.



LEO:  Any proof.  The real proof.



STEVE:  Just real, exactly, real proof.  Not extraordinary, just actual.  So he says:  "Yesterday, Andreas Antonopoulos posted a fantastic piece on Reddit."  And this is Craig speaking in his blog post this morning.  "Andreas said something critically important, and it bears repeating:  'I think the identity of Satoshi Nakamoto does not matter.'"  And then Craig continues:  "He is absolutely right.  It doesn't, and shouldn't, matter to the bitcoin community.



"I cannot deny," writes Craig, "that my interest in bringing the origins of Bitcoin into the light" - into the light - "is ultimately and undeniably a selfish one.  The only person to whom this should matter is me.  In the wake of the articles last December in which I was outed, I still believed that I could remain silent.  I still believed that I could retreat into anonymity, sever contact, go quiet, and that the storm would eventually pass, and life would return to normal.



"I was right and wrong.  The story did eventually retreat, but not before it turned.  And the allegations of fraud and hoax, not to mention personal threats and slurs against me and my family, clung to me.  I now know that I can never go back.  So I must go through and go forward.  Mr. Antonopoulos's post also notes that, if Satoshi wants to prove identity, 'they don't need an authority to do so.  They can do it in a public open manner.'  This," again writes Craig, "is absolutely true, but not necessarily complete.  I can prove access to the early keys, and I can and will do so by moving bitcoin.  But this should be a necessary but not sufficient condition for such an extraordinary claim."  What?



Anyway, "And this is why I wanted to speak with Gavin weeks ago.  Gavin was in a unique position as we dealt with each other directly while we nurtured Bitcoin to life in 2010.  I knew that Gavin would remember the content of those messages and discussions and would recall our arguments and early interactions.  I wanted to speak with Gavin first, not to appeal to his authority, but because I wanted him to know I owed him that.  It was important to me that we could reestablish our relationship.  Simply signing messages or moving bitcoin would never be enough for Gavin."  Okay, I don't know what any of that means.  He says:  "And it should not be enough for anyone else."  No, sorry, just spend some bitcoin.  Anyway, so he says, he finally says:  "So over the coming days I will be posting a series of pieces that will lay the foundations for this extraordinary claim."



LEO:  This really sounds like a con artist.



STEVE:  Doesn't it?  It does.



LEO:  Stroking Gavin because Gavin, you know, is the mark.  And it just really feels like that kind of a con.



STEVE:  "I'll be posting a series of pieces..."



LEO:  A grandiose, narcissistic - yeah.



STEVE:  "...to lay the foundations for this extraordinary claim, which will include posting independently verifiable documents and evidence."



LEO:  No, just stop talking and do it; right?



STEVE:  Exactly.



LEO:  Just do it.



STEVE:  "And addressing some of the false allegations that have been leveled, and transferring bitcoin from an early block.  For some, there is no burden of proof high enough."  Swooning.  "No, no evidence that cannot be dismissed as fabrication or manipulation.  This is the nature of belief.  And swimming against this current would be futile.  You should be skeptical.  You should question.  I would.  I will present what I believe to be extraordinary proof and ask only that it be independently validated.  Ultimately, I can do no more than that."  And it's like, oh, my lord.



LEO:  It's B.S.  It's just blatant B.S.  It's obvious.



STEVE:  It is.  And so now you understand why my tweet was, "I sure hope this clown is not Satoshi.  Get a load of this latest spew of nonsense."



LEO:  Yeah.



STEVE:  Robert Graham followed up with a very nice cryptographic deconstruction titled "How Craig Wright's deception worked," where he basically takes apart what was done a few days ago.  And no one understood a few days ago why he just didn't do it.  And we're still waiting.  I mean, we don't know until - we don't know what's going to come next.  But he said he's...



LEO:  I love it that he put screenshots of the proof.



STEVE:  Yes.



LEO:  With typos, by the way.  The bash commands that he uses wouldn't actually run, if you typed them in.  So this is very common kind of con artist behavior.  And it's sad because I feel that Gavin's been taken in by it, but...



STEVE:  Well, the guy, Craig, should just dig a hole and crawl in it and stop doing anything because I don't...



LEO:  If you wonder what's in it for him, he has left Australia.  He's in flight there because he owes a lot of money to the tax authorities because what he was doing was using bitcoin to generate tax refunds and collecting actual cash for bitcoin transactions.  And so, by the way, if you're Satoshi, you don't really need to do this because you've got $100 million in bitcoin.  Yeah, so he would do these - he did the $30 million bitcoin transaction and asked for a tax refund.  The tax refund's in real Australian dollars, so he'd get the check.  That's why he was under investigation.  They want his money back.  So he left the country.



STEVE:  Is that why he's in London?



LEO:  Yeah.  It's just obvious what's going on.  It's sad.  And, you know, Gavin Andresen has not published anything since his original confirmation.  There's some question in my mind.  Maybe he was compromised.  Where is he?  What is his response?  Maybe he's just embarrassed because, you know, if you've been conned, what you want to do is, oh, no no no, really.  You want to - you double down on it.



STEVE:  You want exoneration.



LEO:  Yeah.  You don't want to admit that you were fooled.



STEVE:  Yeah.



LEO:  So it's sad.



STEVE:  So for our listeners, we still don't know.  But John McAfee's been a little quiet lately, so we have some more entertainment.  Wow.  I did want to follow up on something that we talked about last week.  David Roots sent me a DM.  And he said, "In the latest Security Now! episode you and Leo agreed that turning off the computer adds no real security."  He says, "That's not the case when we're not talking of a home computer which is in a 'safe' environment, like your house.



"However, I work in a bank.  My workstation stays in the office after I leave for the day.  I always turn it off each day, even though it adds a minute of boot time for tomorrow.  The reasons are as follows:  I do now know who has physical access to the PC when I'm gone.  I've set BIOS passwords for boot and admin which should at least make it more difficult to boot the OS or from USB.  I've encrypted my hard drive, which has to be unlocked before boot.  I have no real faith in the Ubuntu 'lock screen.'"  That's nice that he's using Ubuntu.  "There are ways to bypass it.  When shut off, there is nothing in the RAM - no loaded SSH keys, no login passwords, et cetera."



So I just wanted to tack that on to the end of our discussion because I thought that was a good point.  We leave our machines on because it's better for them to stay on.  They're not thermally cycling, going hot and cold and hot and cold.  Once upon a time ICs used to creep out of their sockets, when integrated circuits were in sockets.  They're not in sockets anymore, and lord knows the CPU cannot possibly get loose from where it's contained because it's screwed down tight against its sockets.  But still, it's just not good if you don't need to, I would argue, to power cycle a machine that doesn't need to be.



But David makes a great point.  If you don't have oversight over the machine for the two thirds of its life that you're not sitting in front of it, definitely better to turn it off.  And if it's the bank's computer, presumably they're keeping it current and backed up.  And if it does have a problem, they'll get you another one.  So no biggie.



LEO:  It also saves power. 



STEVE:  Yes.  Very good point.  Okay.  Now, errata.  I stepped in it last week.



LEO:  Oh, I'm sorry.  I usually try to protect you from those things.  What happened?  I feel bad.  I feel like it's my fault.



STEVE:  Well, on this podcast, I endorsed something that I myself could not physically bring myself to do.  And I did it without thinking, so I apologize.  I endorsed the idea of piping the output from curl into bash in order to set up an OpenVPN server on the Raspberry Pi.  What I loved, the first of a tweet storm that I received from our very security-conscious, absolutely correct listeners, was from a Paddy Kerley.  He tweeted:  "Really, Steve?  Pipe this random script from a guy called Inphektion to install something?  What happened to TNO?"



And so everybody who sent this is of course correct.  I mean, if I were sitting there, I wouldn't be physically capable of entering that command because I would run - I would pull the contents of the URL into a file and look at it.  I would, out of curiosity and because I would implicitly understand that I'm pulling a script off of the Internet, and it's running, you know, it's essentially providing a stream of commands to the bash command prompt, doing who knows what.  Now, at the same time, it is sort of time for a reality check because I did find out, by the way, that Inphektion is 40 years old and has kids.  So we were sort of...



LEO:  It's his old handle.  He's not Inphektion anymore.  Now he's Dad.



STEVE:  Yeah.  So at the same time, let's all remember the degree of implicit trust that we have in everything we do.  Unless you design the chip and bring the sand in from the beach and make it and program it and build it up from its roots, at every single stage we're trusting the goodwill of the people that provided this to us.  And there have been lots of accusations of, like, secret things, even in some of the early Intel chips, things that were undocumented and that we weren't sure about.  And of course there's that famous NSA key in Windows.  That thing, that rumor never goes away because it happens there's some coincidental string that happens to be NSA that people keep finding inside of Windows.  It's like, no, no, no, no, the NSA does not have master keys to Windows.  I mean, so I wanted to acknowledge and thank everybody.



LEO:  The point kind of is that Trust No One is an impossible goal.  It's a good motto, and it's a good thing to aim for.  But you can't compute without trusting a lot of people.  Right?



STEVE:  Well, and, yeah, even in the Trust No One model, which is, for example, you encrypt something locally and then you stick it on the cloud, the point being you pre-encrypt it.  And we were calling it "PIE" for a while, Pre-Internet Encryption.  Even there, unless you wrote the crypto yourself, you are trusting the authors of the crypto.  So all of these things have a security perimeter.



LEO:  What was it that we were piping?



STEVE:  It's very cool.



LEO:  I forgot, to be honest with you.



STEVE:  Yeah.  You connect a Raspberry Pi to your router.  You bring up the command shell on the Raspberry Pi, and you type in one line, which is a curl - curl retrieves a URL from the Internet - and then the vertical pipe character, and bash.  So basically you're piping a script into bash.



LEO:  A script into bash.  Which is no different than downloading the script and then invoking it.  It just saves a step.



STEVE:  Well, and that's exactly right.  You could, what, you could download an executable that performed all the same configuration stuff.  So what I liked was the elegance, the minimalism of that.  But with it comes some responsibility, that we are trusting the integrity and the intentions of the person who did this.  Now, I will say that something that, for example, did this hourly or daily, that would raise my alarms higher because then at any time in the future, if there was a compromise, like imagine the world is full of these Raspberry Pis that are doing this every day.  Well, then that's a huge target of opportunity.  Somebody compromises that script once, and suddenly all these devices download something nefarious.  To me, it's different if you get it once.  And by all means, look over the script.



LEO:  Well, is it a bash script that you're downloading?  Because if it is, you can just look.  It's open source.  The code's open.



STEVE:  Yeah, it's a text file.



LEO:  Look at it, and but then probably download it once, look at it, and run it in a cron job instead of running the curl command each time in the cron job.  But by the way...



STEVE:  No, it doesn't have to be run each time.  It only is run once.  And so what I was...



LEO:  Once.  But by the way, we all do this all the time.  Have you ever downloaded some code from Git and compiled it and run it?  That's essentially the same thing.  And so it behooves you to trust the person you got it from.  And the nice thing is, if it's a script, you can read it.



STEVE:  Right.



LEO:  So you can - by the way, this brings up a point because over the past week a number of people have sent me scripts for downloading every Security Now! episode.  And I've posted those scripts on my blog, LeoLaporte.com.  And I said in the post, I haven't run them.  And a cursory glance looks like they're not malicious.  But if you want to use these, it's on your head.  So there's a bash script from @sethleedy.  There's a Python script from @thepunkgeek.  And Gary Nevills sent me a PowerShell script for you Windows 10 users that will either download individual episodes of Security Now!, or all the episodes if you want, or other episodes of other shows, as well.  So those are at LeoLaporte.com.  And you know what, it's the same thing.  Just as risky.



STEVE:  Yeah.  I did, however, want to acknowledge the...



LEO:  They're not named Inphektion.



STEVE:  ...the people who said, wait a minute.  And I should have said something.  I didn't say anything last week.  So that's why this is in errata.  I should have said "I wouldn't type that."  I mean, I would obtain the script.



LEO:  And read it.



STEVE:  And I would, out of curiosity if nothing else, just peruse it to see what it's doing and decide, okay.  And then send it into bash to set up the VPN.  And by the way, it works.  I've had several tweets from people who said, oh, my god, my Raspberry Pi is now an OpenVPN server running plugged into my router, and I can VPN to my home network.  Works beautifully.  So congratulations to Inphektion, a proud father, not a teen.



LEO:  He wrote a script that does everything you would do manually.



STEVE:  Yes.



LEO:  Automatedly.  You can review it.  And you know what, that's a hell of a lot safer than a binary blob that you have no idea what it's doing.



STEVE:  Good point.



LEO:  So I don't have a problem with that.  Read it before you curl it.  I mean, curl it, read it, then bash it.



STEVE:  Right.  Okay.  So, Leo, if you scroll down you'll find a JIF or YIF or GIF.



LEO:  We're going to call it YIFs from now on.  I love the YIF.



STEVE:  No, please, not a YIF.  It's blogspot.com.  Click that so you can show that.  That's an animated GIF.  I've always called them JIF, so I'm going with JIF.



LEO:  Yeah, me, too.



STEVE:  Or was it GIF?  Now I've even forgotten what I used to call it.



LEO:  I do both to drive people crazy.



STEVE:  Yeah.  Actually what - okay.  So I have a new puzzle.  I tweeted it when I discovered it.  And I owe someone of our listeners a thanks because this is one that I had already obtained, and it was sitting on my device, and I just hadn't gotten around to it yet.



LEO:  Ooh, I like this.  This looks good.



STEVE:  Oh, Leo, it is wonderful.  Now, we had Rails in the past, which was the...



LEO:  Choo-choo trains.



STEVE:  The choo-choo train track thing that was fun.  Blockwick a lot of people loved.  That was a really nice sort of satisfying sliding block puzzle.  Hook, of course, was very popular.  The only problem with it, there was only like 25 levels.  And I contacted the author, and I said, "Everybody wants more."  And he said, "No, I'm going to do something different."  Well, okay.  I said, "If you ever need more money, just do more levels, and we'll all - we want more."  Then of course there was Osmos and Auralux.



LEO:  Oh, yeah.



STEVE:  Which are sort of similar, and both wonderful.  And then Infinite Loop.  Infinite Loop probably is the most favorite of the puzzles I have recommended because it's more of sort of a doodle.  It doesn't take much thought.  You just tap it, and it rotates pieces in order to, like, knit this thing into a finished little puzzle.  And it's infinite.  So after the disappointment of discovering that Hook only had 25 levels, we really wanted something that we wouldn't run out of.



Okay.  This one is a win.  It's called The Sequence.  And I created some jump links.  The first 13 levels are available free on the Android platform.  So...  



LEO:  It's only 99 cents.  I'm buying it for the whole thing; right?



STEVE:  Yes, Leo.  You absolutely must.



LEO:  Yeah.  I trust you, Steve.  It's worth a buck.



STEVE:  I tweeted it maybe like five days ago.  And people already know that they're in trouble when I recommend a puzzle.



LEO:  By the way, it's also not only available on Android, but also iOS and Steam.



STEVE:  Correct.



LEO:  And Windows.



STEVE:  Correct.



LEO:  So you've got your - you'll have a platform you can play this on.



STEVE:  Yes.  It is the grand prize winner of the Unity Game Developer Contest.  Unity is a cross-platform development environment, and these guys took first grand prize.  This is different than the other things.  The person who recommended it to me said, "Steve, you like programming, you'll probably like this."  First of all, the developer is gifted.  There's sort of a whimsicalness to it.  Not only is it a great concept, but it is beautifully done.  So after I tweeted, I got a reply back from Pete Shanahan, who said:  "@SGgrc, you are the only person whose game recommendations get immediately purchased/downloaded.  You have stellar taste, sir."



And so I wrote back, I DM'd him back, I said:  "Thank you, Pete.  Because people have figured out that I love puzzles, I get lots of recommendations, but only a few make it through my own filter.  So I'm always excited to share those that do.  My criteria are clear:  No hurry.  No timers.  No reflexes being tested.  No unnecessary punishment.  Under-designed, not over-designed.  No hidden stuff that you need to poke at to find.  Just the kind of thing where everything you need to know is in front of you so that you can stare at the screen, running possibilities through your mind.  This one goes a bit further and is actually charming and humorous in its execution.  I think people who have enjoyed my previous discoveries will find this one equally wonderful.  Thanks again."



So The Sequence.  And as you said, Leo, it's available on all platforms, and the first 13 levels free on Android.  I just love it.  So to give people who are just listening to this some idea, you have a grid that is, like, seven by nine, something like that.  It's an odd by odd so that you have a center column and center row.  Not that that's important, but I've just noticed that.  And there's one cell where there is a binary object.  It's a little white circle.  And that's sort of the source.  And then there's another sync where you need to transfer this binary circle over from the source to the sync.



And you have little modules.  For example, there's a module which is a pusher.  And so anything that is in front of it, it pushes to the next square.  But it can't push it further than that because then it's not in front of it any longer.  Then there's something else that grabs it and rotates it 90 degrees into a square off to the side.  And then there's another thing which spins whatever is in front of it.  And then there's another thing that reverses the polarity of the thing that it's connected to.  So like it would cause the next spin to be in the other direction, or it turns the pusher into a puller.



Anyway, the point is for just - I've only - I'm at, like, level 25 or something.  And I've found - there's five objects that have been.  And this is sort of selectively revealed to you.  A little tutorial in the beginning, kind of gets you to get the hang of it.  And then you're off.  And so this is more - this is something not to be upset about that some of these are difficult.  This is not so much a doodler as it is a real problem solver.  But, boy, I just think people who are hooked by this are going to enjoy being hooked because it is fun.  The soundtrack is nice, but a little repetitive in the background.  But the actual sounds of the actions are fun.



And then just after you think you get it arranged, you start it.  And then this whole thing sort of runs in a stepwise fashion because you assign a sequence to each of these little blocks.  And so they execute one at a time.  And their actions then all link together in order to move this little binary bit thing from the source to the sync.  And it has to do it four times in order for you to succeed on the level.  And you'll sort of get the hang of it when you see it.



But anyway, I have no reservations except that I will say it's a little tougher.  Some of these things, I have no problem putting them down and then coming back to them a few hours later or the next day and going, okay.  And oftentimes I have an inspiration.  So some of them are tricky.  But I really think people who enjoy the podcast...



LEO:  Yeah, it's programming, it really is.



STEVE:  Yeah, it is.  It is.  It's a little graphical programming language.  I should mention, too, just so that I haven't omitted it, that the same author has a previous game called Hard Logic.  And that's in the offing.  I've poked at it a little bit, and it's like, oh, it was well named.  It is even more minimal, but it does look like it's a - but I'm just loving this.  Oh, and after you get the 32nd level - I think it's 32.  Maybe it's 35.  Anyway, then it unlocks a playground.  And I think what that means is you can just build your own machines.



LEO:  Oh, neat.



STEVE:  Which, yeah, I think would really be fun.  They're just - I don't know what it is about it.  But the execution is just beautiful.  The graphics, the little noises they make, I just get a kick out of watching the thing go, and you feel a real sense of accomplishment when you've built one of these because, as I said, they do get challenging.



LEO:  Cool.



STEVE:  Yeah.  I wanted to mention that KB3035583 resurfaced when I turned my machine on this morning, my Windows 7 machine.



LEO:  Oh.



STEVE:  And of course 3035583, you've got to be a real geek to know what that number means.  That's the infamous WGX...



LEO:  GWX, yeah, although...



STEVE:  The Get Windows 10 - yeah, sorry, GWX.



LEO:  Although you might be tempted to call it WTF, yeah.



STEVE:  Yeah, exactly.  So it's like, why are they changing it?  I don't know why.  I bit the bullet because, you know, I have to.  I have to make sure they haven't, like, done something really stupid.  Maybe they're backing off.  Oh, Leo, we forgot to talk about the weather lady.



LEO:  Well, we did it on Windows Weekly last week, so, yeah.



STEVE:  I don't believe that we forgot to talk about the weather lady.



LEO:  But that is proof positive that Microsoft has gone too far.



STEVE:  Oh, boy.  For anyone who's been living under a rock, you probably already know.  But during a morning - and was it, like, was it last Wednesday?  It's been since the last podcast.  But she - yup, there it is.



[Clip]



LEO:  The best is the last line, though, here.



STEVE:  Yes, I know.



WEATHER LADY:  What's going on?  Where's my clicker now?  Okay, winds have been very gusty overnight, as well.  It's the Windows 10; right?  That's what people are going to say.  Don't do it.



LEO:  Don't do it.



STEVE:  Don't do it.  Oh.  So she's doing, you know, she's a meteorologist standing in front of the green screen.  And up comes the big, well, we all know what it looks like, the big white and blue, you know, Microsoft recommends updating to Windows 10.  Oh.  And it's like, oh, boy.  Wow.



LEO:  Oh, lord.



STEVE:  Enough said.



LEO:  Oh, lord.  Oh.



STEVE:  So and of course I got a lot of people tweeting, saying, oh, you ought to tell them about Never10.  It's like, yeah, well, I'm sure they know now.  Oh, boy.



LEO:  Yeah.  She's famous now, though.  It was a good thing for her.  She got her viral video.



STEVE:  And I just need to go off the reservation completely to share one of my discoveries that I am very excited about.  And that is, I've been using this for a few months.  And this is a beautiful six-port 60W USB charger.



LEO:  I have several of those.  The Anker?



STEVE:  Of the Ankers?



LEO:  Yeah.



STEVE:  Yup, yup.



LEO:  Love them.  I keep buying more.  I have them everywhere in the house.



STEVE:  Yes, exactly.  It was on the occasion of me buying two more that I thought, okay, the first one proved itself.  I need to share this with our audience.  So it's A-N-K-E-R.



LEO:  They make great stuff.  They're a really good company.



STEVE:  Amazon carries it, 60W.  And what's special about this is people may know that a USB charger is not just a five-volt supply.  You need to support some minimal USB protocol in order to get devices to understand the capabilities of the charger that they're being plugged into.  So this thing is universal.  Again, and it's not easy to find one with six outputs because that's a lot of juice.  And the other side is not a wall wart, but an actual AC cord.  So inside is a little switch, a very high-efficiency switching power supply that drives six ports.  And so I just, again, as I said, it's completely a non sequitur, but I love this.  And you can get it in black or white.  It's about $32 on Amazon.  And the black one, I don't know about the white one, has 2,057 five-star reviews on Amazon.  So, yeah, just my recommendation.



LEO:  It's a good thing.  I have, as I said, I have three or four, like you.  It's so funny.  And then just I have them everywhere in the house.  I have it on my bedside table.  I have one in...



STEVE:  It's the right one.



LEO:  Yeah, yeah.



STEVE:  I mean, it beats - because we all have so many USB charging things now.  And the normal USB adapters are big blobs that often block the adjacent port, or you have to have an octopus coming off in order to work with them.  So, yeah.  I waited a few months.



LEO:  By the way, they now have, for a hundred bucks, a 10-port, if you really want to go crazy.



STEVE:  Wow.



LEO:  How many watts is the 10-port?  Yeah, still 60W.  So, see, maybe you'd be better off with fewer ports because you'd get more watts per port.



STEVE:  Yeah, and your dollars per watt has dropped a lot, too.



LEO:  Yeah, that's a little expensive.  Amazon makes, and this is kind of interesting, an AmazonBasics that looks exactly the same, and it's 25 bucks.  And I'm wondering if that's, you know, all of these companies just source these from Chinese companies and label them.



STEVE:  Yeah.  It's just private labeled.



LEO:  So it's 60W, six-port, USB charger.  I don't know.  Anker's so good.  You could trust Anker.  I only use Anker stuff.



STEVE:  I do.  And I've been very impressed with it, so I wanted to share it.  



LEO:  Good.



STEVE:  And one more recommendation I have is for something called SpinRite.



LEO:  Oh, yeah, I heard of that.



STEVE:  Not surprisingly, yeah.



LEO:  Yeah.



STEVE:  Simon Willcock in Manchester in the U.K., he asked a quick question.  And in the spirit of this nominally being a Q&A, and we've got time for some questions here in a second, he said:  "Steve, a quick question.  I have a friend whose introduction to her laptop was 'The disk is dead; can you get me a new one?' she said.  I asked if I could run SpinRite on it.  She agreed, and I ran it at both Level 2 and 4, and no errors were found.  She is convinced that she needs a new disk."  Then he says, "PCWorld tech guy told her so.  From what I can see, there's no problem with the disk.  How confident can I be?"  And so, okay.  What's not clear is where the original idea of the disk being dead came from.  Disks can declare themselves in trouble through the so-called SMART, the Self-Monitoring - what's the A?  Self-Monitoring - S-M-A-R-T.  Self-Monitoring something and Reporting Tool, or Technology.



LEO:  Yeah.  As I remember, it's not an intuitive acronym.



STEVE:  S-M-A-R-T.  Self-monitoring...



LEO:  I'll look it up for you.



STEVE:  And reporting?  Yeah, and.



LEO:  Is it really?  Oh, all right.



STEVE:  I think it's Self-Monitoring and Reporting Technology.  Anyway, so disks can provide a warning, and BIOSes can read that and put up a notice when you boot the machine that the disk is in trouble.  SpinRite monitors...



LEO:  It stands for Self-Monitoring Analysis and Reporting Technology.



STEVE:  Analysis and reporting.  Okay, thank you.



LEO:  But whatever it is, it's not very smart.



STEVE:  No, it's not.  However, and this is my point, if the drive is freaked out enough to say that it's dying, I would believe it.  On the other hand, SpinRite checks for that.  It explicitly looks for that.  And I've had people running SpinRite tell me that SpinRite suddenly put up a note saying this drive is reporting it's near death.  You may want to stop running SpinRite and back up what you can.



So the fact that SpinRite ran twice on it with no such report to me says this entire thing was specious.  And wherever this idea came from that it was dead was clearly wrong.  So Simon, if you run SpinRite on it, and SpinRite is happy, we know two things:  first, that SpinRite is happy, and also that the drive is not unhappy with its own condition because, if it were, SpinRite would let you know. And since...



LEO:  SpinRite is smarter than SMART.  Seriously.



STEVE:  Oh, it's way smarter than SMART.



LEO:  Yeah.  SMART was - the hard drive companies didn't really want SMART, so they dumbed it down.



STEVE:  Correct.  Kicking and screaming.  Compaq said we're not going to buy from you unless you give us some means of knowing what's going on inside the black box.  That was as drives became - the IDE drives were the first, where the controller moved into the drive.  And Compaq said, look, how do we test these?  Drives fail.  And so, actually, and Compaq was using SpinRite to prequalify the drives...



LEO:  Really.  Good for them.



STEVE:  ...before they put them in users' machines, yeah.



LEO:  Wow, that's nice.  That must have felt pretty good.



STEVE:  Yeah.  And next week we're going to talk about Samsung and the SmartThings hack.



LEO:  Ooh, yes.



STEVE:  So lots of interesting information there.  And in general, about IoT stuff because that's going to end up being, unfortunately, a big topic for the podcast moving forward.



LEO:  Yeah.  Yeah, yeah, yeah.  All right.  We are going to pick up where we left off.  Right, Steve?



STEVE:  Yes.  Yeah.  Perfect.  I think we're going to get the rest of these other remaining six questions.  We've got half an hour.



LEO:  Should be no problem. 



STEVE:  Be perfect, yeah.



LEO:  Let's go to - is it Oscar Morales who's next?



STEVE:  It's Neil, number five.



LEO:  Oh, Neil Baldridge of Lubbock, Texas.  Question 5 was where we left off last time.  He's wondering about LTE safety in the light of this kind of bogus, but still scary, "60 Minutes" piece, and particularly on SS7:  You mentioned last week it was unclear if SS7 eavesdropping would apply to LTE data.  I've always made the assumption that LTE data would be reasonably secure, especially when compared to open WiFi.  But it's my assumption.  It's not based on any evidence.  Have you learned any more about whether SS7 vulnerabilities would allow eavesdropping on LTE data that is not specifically or otherwise encrypted, say on an HTTPS link?



STEVE:  So what we know is that the cellular network itself, I mean, what "60 Minutes" was right about, although this wasn't newsy because we talked about it a couple years before...



LEO:  It's been a lot longer than that, apparently.



STEVE:  Yeah, it was at the Chaos Computer meeting in 2014 in the summer that this was first shown is that the entire, the glue that knits the global cellular system together has never been secure because what it lacks is authentication.  And, you know, that's always the bugaboo.  You can bring up security.  You can have negotiated keys between endpoints.  But if you don't know who you're negotiating with, then even if you, on the fly, negotiate a key, there could be someone in the middle, and you're negotiating your key with him, and he's negotiating separately with the other end, and knitting the conversation together, being in the middle.  So, and the problem is, in an electronic environment, where you don't see who you're talking to, you don't know.



So what we have to understand is that the cellular system lacks authentication.  That being the case, we know what it means, that it isn't secure.  So HTTPS, for example, and he mentions between a smartphone and an HTTPS banking site, HTTPS does provide authentication.  That's what the certificate is.  It is an assertion.  That's why we talk about them so much, because they're so important.  The certificate is a statement of identity of the certificate issuer.  And it's the reason certificates must be protected and kept safe, because you don't want your identity stolen.  You don't want anybody else to be able to pretend that you're Bank of America or whomever.



So the HTTPS, that is, the TLS protocol, with certificates, provides authentication.  And so it doesn't matter if the channel it's transiting is insecure, is not secured, or itself provides no authentication, because the endpoints do, and the protocol protects us.  So what's not secure would be standard voice conversations or standard SMS and MMS that are not using any kind of a third-party wrapper or protocol.



If you were to use Signal or WhatsApp or anything else, that is, some other technology which provides its own encryption and some means of authentication, then it doesn't matter.  If it's between two tin cans with a string, it's going to be that essentially you're using the carrier just to get the data across, and then the layer on top is providing safety.  So if this whole SS7 thing worries you, and you want to, for example, have a truly private voice conversation, then you need to use a third-party voice app of some kind that will then provide the security.



LEO:  All right.  Oscar Morales in Paris, France and Bogota, Colombia with a question:  Steve, why haven't we seen any attacks to Android phones in real life?  I've been a consultant on Information Security for the past 10 years, and as a big fan I've been listening for six years.  Talking to a fellow IT security consultant about Android phone security, he argued he's going to still use his little Motorola Android phone, even if it took him months to get the latest OS updates.  Now, he says Motorola.  I don't know what generation we're talking about here.  But, he says, I was speechless when he said, if it was so bad or dangerous, why, despite having more than a quarter of a billion vulnerable phones, we never hear about people being attacked or compromised due to these vulnerabilities?  And that question's been bothering Oscar.



ARS Technica announced that 950 million Android phones were at risk, that was back July 27th, 2015.  On March 18th, 2016, we got news of 275 million Android phones at risk with a new vulnerability.  Steve, you just mentioned another Stagefright vulnerability.  That seems like a good bounty, says Oscar, 275 million personal devices compromised.  However, have there been even a million complaints?  Has anyone noticed anything funny running in their pockets?  Why is no one taking advantage of this?  What is protecting us?  Why it isn't yet the end of the civilization as we know it?  Thanks for your show and for the answers.  Actually, I ask the same question, Steve.  Why?



STEVE:  Yeah.  If we look at history, we can see what the pattern is, which is it took us a long time to get things like Code Red and Nimda and MSBlast.  We had insecure platforms for a long time until someone decided to do those things.  And frankly, look how long it took before we ended up with crypto malware.  You might argue that, well, they needed some sort of an anonymous payment system, which unfortunately Bitcoin now provides them.  But there is, without question, a decoupling between what could be done and what is done.  We often mused about how viruses were, like, rampant, but they didn't destroy things.  They just sort of seemed to be viruses for the sake of being viruses.  They used vulnerabilities just for the sake of propagating.  People were just sort of screwing around, seeing if they could make something propagate.  Until, of course, it became profitable, and now we have crypto malware.



So the fact that these phones and the Android platform is vulnerable doesn't immediately beget worms and big, high-profile attacks.  There were reports of people receiving MMS messages when Stagefright was new.  People were getting, like, hit all the time, and we covered it.  And the advice was turn off MMS.  Don't open those messages.  The known phone numbers of blocks of phones were being scanned, just because they were there.  So they weren't weaponized because people didn't bother to do that.  They were just sort of screwing around, crashing people's phones because they could.



So I guess my point is that the fact that there are vulnerabilities doesn't mean that there will be automatically attacks against them.  History shows us there's, for some reason, there's a disconnect between that.  And I'm thankful for it.  Well, on one hand I'm thankful for it.  It would be nice if there was more pressure to fix these things because it's a little annoying that attacks are allowed to remain outstanding until they actually are being exploited in the wild.  Then it's a big panic to get them patched.  That sort of is just the nature of this industry.



LEO:  I also think that it's a little bit harder to exploit these platforms than merely having the exploit, that mobile platforms are really kind of significantly different than desktop platforms.  And so I think it's going to be a little bit more difficult for people even knowing the vulnerabilities exist.



STEVE:  I agree.  I also think it's a bit of a higher end hack.



LEO:  Yes.



STEVE:  When you have a Windows machine with all of the debugging and developer tools and sort of everything here in front of you, even though you don't have the source, I think it's easier to build a virus for that than it is for a very complex mobile platform where you do have access to the source in some cases.



LEO:  Right.



STEVE:  I think you have to have some motivation.  I would guess...



LEO:  I think these mobile platforms also were designed in a post-virus world.  So there are things done on these mobile platforms, Android and iOS, that weren't done on desktop operating systems.



STEVE:  For example, they all have Address Space Layout Randomization.



LEO:  But even they have stores.  I mean, there's a whole, you know, you can download any arbitrary code you want on a Windows system.  Have fun; right?  It's not so trivial or easy on a mobile device.



STEVE:  The apps are curated, yup.



LEO:  So, and both iOS and Android have kill switches.  They both have scanners built in that check everything you download before you run it.  Windows finally has something like that, and Apple does.  But this was kind of - I think security was kind of built in a little bit more on these mobile...



STEVE:  Well, and they had the advantage of coming in later and understanding.



LEO:  They knew.



STEVE:  I mean, like no one today would build a browser that didn't have strong security as the first thing, like as a fundamental of what they were doing because we now understand how important it was.  But the early browsers had no concept.



LEO:  However, I think that your point's well taken.  Give it time.



STEVE:  Yeah.



LEO:  It probably is just a matter of time.



STEVE:  And if an individual is worried about if they're like a high-profile target, then this is the kind of thing that the spooks, as they say in the U.K., they could do targeted attacks if they wanted to get somebody, rather than just 275 million people all getting a dancing bear.



LEO:  Yeah.  John in Montreal isn't at all sold on Signal's security.  Uh-oh.  Just because your copy of Signal can be verified bit-for-bit to be identical between your phone and some other build, it doesn't mean that WhatsApp uses THAT version of Signal.  If Signal is a demand-loaded module, WhatsApp could even load it but not use it.  Sorry to rain on your parade.  Niener niener niener.



STEVE:  So, yeah.  And again, this comes back to, well, yes.  Doing any of this requires that we extend some trust.  There is absolutely no way around that.  If you want absolute security, arrange to be in the physical presence of the other person and whisper in their ear.  Otherwise, if you stick it on a wire, and you didn't design every aspect of what happens to it, you have no great security.



LEO:  Yeah.



STEVE:  I mean, so, yeah, I take John's point.  But it's like, okay, what's the takeaway?  What can we do?  Mine is there's nothing I'm doing on these platforms that is really important.



LEO:  And it's my argument that you really don't have security unless you have open source security.  And you can, I mean, truthfully, it'd be better if you could read all the code and understand it and vet it.  And we've learned...



STEVE:  And of course Signal is.  Signal is.



LEO:  Right.



STEVE:  And so if you wanted to download this Signal app or [crosstalk] build it...



LEO:  You'd be better off building it from source.



STEVE:  Yes.



LEO:  Then you know what you got; right?



STEVE:  Yes.



LEO:  And so that's, I mean, truthfully, I think it's probably good for us to spread the word because, if encryption does become outlawed or somehow modified, it'd be good for everybody to know, and it's not hard, how to download code, look at it, compile it, build it yourself.  That's better, much better than a binary blob, you don't know where it came from.  Especially if, as he points out, it loads on demand.  Who knows what that is?



Gregg in North Hollywood, California wants an episode on Tor appliances.  Like a refrigerator?



STEVE:  A refrigerator, and you don't know where it is.



LEO:  Anonymous refrigerator.  Hi, Steve.  Watching TekThing 68 - that's Patrick Norton's show he does with Shannon Morse - and they have a Tor appliance.  I have a Tor appliance in my pocket right now.  Could you do a show, multi-part if needed, on these offerings?  You could make your own Tor network appliance thingy using a Raspberry Pi, Banana Pi, Intel NUC, cheap small motherboard, et cetera; or make your own private Tor using DigitalOcean - which is a sponsor, we should mention - Droplets, data centers in San Francisco, New York, Amsterdam.  Yeah, you could totally do that.  You could use the Tor browser.  I have in my pocket here a Tor appliance.  So let me let you answer, and then I will show you mine.



STEVE:  Actually, you'd better show me yours because I have no idea why this question is here.  Last week there must have been something I had to say about this.



LEO:  Netcat just wants to know.



STEVE:  And I have no idea.



LEO:  Inquiring minds.  So one of the things that would be nice is to make VPN and Tor just automatic, right, so that...



STEVE:  Easy.



LEO:  Easy.  So that it would just be built in.  And of course, if you built it yourself from a Raspberry Pi, you could vet the code.  But I'm going to show you something that just breaks all the rules I just mentioned.  This is a binary blob from a source I don't know except I trust him.  I'm talked before about my Tiny Hardware Firewall, TinyHardwareFirewall.com.  This is the latest.



STEVE:  Look at that little cute thing.



LEO:  Isn't that cute?



STEVE:  Oh, my goodness.



LEO:  So you plug this into your laptop.  It's a WiFi-to-WiFi device.  So it's both a WiFi receiver and a WiFi transmitter.  You plug it into your laptop.  It takes about three or four minutes to boot because, as you might imagine, it's a very slow processor.  But there is - it's a little computer.  And what happens is, once it boots up, you will see it as an access point on your computer, with a randomly generated name and WPA2 key.



STEVE:  No kidding.



LEO:  Yes.



STEVE:  So it's only getting power from the USB port.



LEO:  That's all it needs.  I'll show you right now.  I'll plug it in.  And then of course you know ahead of time what the key and everything is.  So it is going to take a while to boot, so I won't be able to show you how it works in any reasonable amount of time.



STEVE:  Oh, look.  It lit up a little green light.



LEO:  Yeah, it's booting up.  So then you'll join it.  And once you join it, you surf in your browser to the address of this device, and you can configure it.  First thing you're going to do is you're going to configure its WiFi access to the open access point at the coffee shop that you're at.  So you log into that.  And that's how it handles captive portals and all of that.



STEVE:  Yup.



LEO:  Once you've logged into that, now there's a button on the website that says "Engage VPN."  You could choose your server and start up the VPN.  There's another button that says "Engage Tor."  And at that point all of the traffic coming and going from this device will be both through a VPN and through Tor.



STEVE:  Okay, now, everybody wants to know what this is, so we have to tell them.



LEO:  So this little device, and by the way, not very expensive, I've recommended these before, this is the latest from TinyHardwareFirewall.com.



STEVE:  Oh, those guys.  Yeah, yeah, yeah.



LEO:  We've mentioned them before.  The thing about this is...



STEVE:  And it's cute. 



LEO:  ...it's cute.



STEVE:  For people who don't, who can't see the video...



LEO:  Well, I keep this in my pocket.  It's the size of a...



STEVE:  That's the cutest thing I've ever seen.



LEO:  It's only as big as a USB key.



STEVE:  Wow.



LEO:  That's all you need.  Now, they make a bigger one that does Ethernet, which would be more secure, obviously.  But this one is - let me look at the price.  The way they sell these is a little weird.  And I should just say this is one of many.  You could buy this device without this deal.  But the way they sell these is with a year's worth of VPN from HotSpotVPN.



STEVE:  Ah.



LEO:  So this is essentially a HotSpotVPN product.  But they make - I've had the bigger one before.  But these little USB ones are so tiny and easy to use.  I mean, and it's got Tor built in; right?



STEVE:  It's just adorable.



LEO:  Yeah.  So this is a Tor appliance.  Now, you would be more secure, I admit, if you built your own out of a Raspberry Pi.  So 30 bucks, I think, for this.  If you want a year's worth of firewall plus the hardware, 91 bucks.  You basically pay for the firewall, and you get the hardware for free.  But if you just wanted the hardware, 35 bucks.  These are cheap.  This USB thing, it's called a Napoleon, is $30.



STEVE:  And it's just cool.



LEO:  And so I love this idea; right?



STEVE:  Yup, yup.  So...



LEO:  So that, I think, is what they're talking about.



STEVE:  Yup.  So the VPN gets you out of your local insecure environment.



LEO:  Right.



STEVE:  Through a VPN tunnel.  And then if additionally you want Tor's "promise of anonymity," and I'm calling it that rather than "anonymity" because, as we know, lots of attention has gone to deanonymizing Tor users. 



LEO:  Not fully anonymous; yeah.



STEVE:  Right.  Location obscuring.



LEO:  Governmental, yeah.



STEVE:  Then you turn that on, and you get way worse performance, but way more secrecy, essentially.



LEO:  Yeah, yeah.  And it's not, you know, this one is not...



STEVE:  Very, very cool.



LEO:  It's not horribly slow, I have to say.



STEVE:  Good.



LEO:  So it's slower.



STEVE:  Right, because you're...



LEO:  But you [crosstalk] your megabits...



STEVE:  ...bouncing typically through three Tor nodes.



LEO:  Right.  Still in my speed test, you know, it's maybe 3Mb down, something like that, you know, 550K up.  Enough to get email and surf the web safely.



STEVE:  Yeah.  Very nice.



LEO:  So I really love this idea.  And just, the thing is, this makes it so easy.  You just carry it around.  You don't even have to put it in a laptop.  In fact, you might not want to.  I just have a little battery, right, one of those little portable batteries, plug it into that, and that'll run all day.  So you keep it in your backpack, and you have in your backpack, that you just log into, a server.  Couldn't be easier.



STEVE:  Very cool.



LEO:  Yeah, yeah.



STEVE:  Very cool.



LEO:  Yeah.  Well, I'm glad I was here for that one.



STEVE:  Yeah, because I was useless on that one.



LEO:  Like, what is a Tor appliance?  Well, that's the idea.



STEVE:  Why did I choose that one?



LEO:  That's the idea.  And there's, you know, you could create, as I guess Patrick and Shannon showed, you can create your own, which would be, for a Trust No One person like you, probably a good idea.



Ramsey's wondering about implementing key hierarchies:  Love the show, blah blah blah.  Can you explain how encryption systems can have master keys?  The scenario I'm thinking of is when an employee quits and leaves behind an encrypted hard drive on a company laptop, can the company decrypt the drive?  I think yes, but I can't quite figure out how the crypto would work in that case. 



STEVE:  So, yeah.  This was sort of a quick one to answer.  Well, could be.  The idea is, and we'll take Ramsey's use case, you have a drive which is encrypted under some key which was arrived at randomly.  So, and we'll take the TrueCrypt model, that is, when you're setting up TrueCrypt, there's some source of entropy that may or may not involve the user.  TrueCrypt, for some reason, liked telling you to move the mouse randomly around and, you know, crazy for a while, until you decide you're done, and then press a button.  And that always bothered me because the question was, wait a minute.  People are not random.  And so how much are we supposed to move the mouse?  What if we don't move the mouse enough?  That was just always nonsense.  But it's like, okay, fine.



The point is that generates the key that encrypts the drive.  Now we encrypt that key.  That is, so that's the master drive encryption key.  So now the user provides a passphrase, hopefully long and high-entropy, and so that master drive encryption key is encrypted using the user's long passphrase.  But nothing, and here's where the key hierarchy essentially comes from, although this is a flat hierarchy, nothing prevents that same master hard drive key from being encrypted also under, like, an administrative super master password.  So now you have two encrypted things, one which is decryptable to the hard drive master key with the user's password, and the other one which, if the administrator applies their super master key, decrypts to the same master hard drive password.  So two people can have their own keys to the same device.



And the crypto is, I mean, so, and this has always been my argument, for example.  This is in fact a variation of the argument on the whole decryption on demand.  That is, phones could be the same way.  You could have two separate keys, one stored by the entity responsible for being able to respond to a court order, the administrator; and the other one is the user's.  And either one can be used, and neither lowers the security of the other except in the obvious way.  But from a technology standpoint there is no difference between them, and the encryption is not outlawed or weakened or broken or anything.  So that's what's so cool about these little modules, these little crypto components that we have now, is they can be put together in all kinds of ways to create any kind of interlock that we ask.  And so this simple little flat one is an example of a key hierarchy.  Just taking the master key and then reencrypting it under two different keys that are known by different people.



LEO:  Well, here's another kind of related question.  This is about interlocking.  Hendrik in Germany has a question about WhatsApp and interlock protocol:  Wondering if the code comparison in WhatsApp encryption could be verified via the interlock protocol, by sending alternating digits.  You have to explain what this all means.



STEVE:  So I thought that this was sort of fun.  This was - we talked about how, with Signal, and I want to be careful with my wording because when we say WhatsApp, what we're talking about is the Signal protocol in WhatsApp.  I'm comfortable talking about the Signal protocol because that's what's published, and it's what we know Moxie and his group have worked on in order to just nail.  And, boy, they got it right.  So when we were talking about this a couple weeks ago, the whole - we come back to authentication.



And so what Hendrik is asking about is could we verify the identity of the other person by sending alternating digits back and forth.  And the problem is that you have to have an association between the endpoints in order to send alternating digits back and forth.  Remember that you could ask the WhatsApp version of Signal to show you that key for the conversation.  And that was both a QR code and, what was it, 80-some digits?  It was a lot of characters.  But the idea was you could then read those to the other person and have them verify them.



The problem is that, if you sent them back and forth - well, okay.  I should explain.  If you did it by voice, then you would know you were talking to the other person.  But if you do it in-band rather than out-of-band, that is, if you use the protocol itself to prove the identity of the other end, well, there could still be a man in the middle.  And so they would be verifying the fraudulent connection to them with each of the endpoints, and the endpoints would think that they had verified with the far end when in fact they were verifying with the man in the middle.  So that's why the key is an out-of-band verification.



And Leo, you did this when, on the show, your two phones, you showed one of your phones the QR code.  That was out of band.  That was the optical channel directly between phones, not going through the connection.  And that's what you have to do.  You have to have some sort of independent verification, just once, and then you absolutely want to turn on the "Notify me if this contacts verification ever changes" because it's not that it absolutely can't ever.  But it should absolutely raise a red flag.  And I don't know why that's turned off by default.  That's just nuts that it's off by default because the contact changing is a serious man-in-the-middle warning, and it just ought to be part, it ought to be on by default.



LEO:  Yeah.



STEVE:  So that's the one thing that I think they got wrong.  Clearly, for convenience and usability and because most people wouldn't know what it meant if it popped up.  Unfortunately, the only reason it's really going to pop up is if there is somebody who's stuck themselves in between.  And the system was designed with that authentication to prevent that.  So anyway...



LEO:  Nice.  Very cool.



STEVE:  You can't do it in-band.  You have to do it out of band.



LEO:  And that, ladies and gentlemen, concludes our edition of Security Now! for this third day of May.  Thank you, Steve.  I'm just connecting up to the Tor on here so that I will be able to surf completely, like, well, mostly anonymously.



STEVE:  I'll bet this is going to be - this'll be a hit with our listeners, Leo.  This is the cutest little thing.



LEO:  Yeah, I just love the idea.  And the thing is, I just carry it around so that it's an easy thing to use if I'm at an open access point or a hotel.  I got it before - I was trying to get it before the cruise because I knew I was going to be a whole week on an open access point on the cruise ship, you know, their WiFi.  And I thought, that's disaster.  [Crosstalk] a whole week.  And there are 5,000 other people using it.  I probably should have some sort of protection.  Unfortunately, it didn't come in time.  But there you go.  I don't think I got hacked.



Steve, it's always a thrill, always a slice.  I'm so glad...



STEVE:  A thrill.



LEO:  It's a thrill and a chill.  And we didn't mention "Silicon Valley" or "Veep" or "Game of Thrones" or "Expansion" or...



STEVE:  Or "The Night Manager."



LEO:  "The Night Manager," episode two was even better. 



STEVE:  Yes.



LEO:  They kind of started a little slow, as you said it would.  Episode 2, "slow" wouldn't be the word I'd use.  Wow.



STEVE:  Yeah, I can't wait till tonight.



LEO:  I love John le Carr.  I just think he is the greatest, the best spy writer because he was a spy.  He was in MI6.  All right, Steve.  We do the show...



STEVE:  Okay, my friend.



LEO:  ...every Wednesday, Tuesday, I'm sorry, Tuesday, 1:30 Pacific, 4:30 Eastern, 20:30 UTC.  You must tune in and watch, be in the chatroom.  If you can't, though, don't worry.  On demand audio and video is available.  Steve's site has it, GRC.com.  He's even got written transcripts.  He's got audio at his site.  He also has great stuff including SpinRite, the world's best hard drive maintenance and recovery utility at his site, and lots of freebies.  He's very generous with the freebies.  You'll also find versions of the show at TWiT.tv/sn, or subscribe in your favorite podcatcher so you won't miss an episode.  And as I mentioned, LeoLaporte.com, my blog, LeoLaporte.com has a script, several, one in Python, one in bash, and one in PowerShell, that you can modify to your heart's content to download every single episode, if you wish, of Security Now!.



STEVE:  Wow.



LEO:  The PowerShell downloads from your site.  I think the Python and the bash scripts - they're very simple, by the way.  You can look at them and assure yourself that there's nothing going on.



STEVE:  Nothing nefarious.



LEO:  As I say, nothing nefarious.  Thank you, Steve.



STEVE:  And next week, IoT, I believe.  We'll talk about Samsung's SmartThings and other nightmares with your refrigerator.



LEO:  And, you know, one of the things I really enjoy doing when I use Tor is just seeing where I am.  Let me just see if I can find out what my IP address is.  You know, if you just type "IP" into Google it'll tell you?



STEVE:  Yeah, yeah.



LEO:  Where you are?  Although, because it sees me coming from a Tor, it's asking me for a CAPTCHA.



STEVE:  Ah.



LEO:  "Our systems have detected unusual traffic."  I am at 128.153.145.125.  And I'll have to do a WHOIS to figure out where in the world I am.  I really enjoy that.



STEVE:  Where in the world is Leo?



LEO:  So my traffic, you know, it bit me because I signed into Facebook, and Facebook blocked me, saying you're signing in from Cairo.



STEVE:  Ah.  Nice.  



LEO:  I'm at Clarkson University right now.  So there.  Isn't that fun?



STEVE:  Who knew.



LEO:  Who knew?  And I'm sitting here in the Brick House.



STEVE:  That's very nice.



LEO:  Thank you, Steve.  We'll see you next time on Security Now!. 



STEVE:  Okay, buddy.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.










GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#559

DATE:		May 10, 2016

TITLE:		Dumb SmartThings

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-559.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I discuss an interesting week packed with security news, including Microsoft's Mega Patch Tuesday; the final word from Dr. Craig Wright; Lenovo, Microsoft, and Qualcomm each in separate doghouses; more Curl Bashing; terrorist math; lots more - and a look at the insecurity of the most popular home automation system, Samsung's SmartThings.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We're going to talk about the week's security news.  There's a big, big Windows Update today.  He's got the details.  And then later we'll look at the ZigBee protocol and potential security flaws that make it probably a pretty bad choice for home security monitoring.  Steve will have the details, next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 559, recorded Tuesday, May 10, 2016:  Dumb SmartThings.



It's time for Security Now!, the show where we cover your security and privacy online with this guy right here, our Explainer in Chief, Mr. Steven Gibson.



STEVE GIBSON:  Oh, and for those of you who missed the pre-show...



LEO:  Oh.



STEVE:  ...my eyes are watering...



LEO:  It was kind of a silly pre-show.



STEVE:  ...from crying.



LEO:  We may duplicate it, however, as we get into the full content.  This is going to be a good show today.	



STEVE:  We have a lot to do.  This is our smart, or, I'm sorry, our Dumb SmartThings episode, where we're going to take a look at some research that various people have done into the operation and architecture and, frankly, the profound failings of the number one most popular home automation Internet of Things system, which Samsung bought from its creator back in 2014 and just sort of added to their Samsung collection of stuff.  It is by far, in terms of number of apps and number of devices, currently the leader, although there are a bunch of other companies, one huge consortium, the AllJoyn, J-O-Y-N.  That's like the Who's Who.  It's everybody except Samsung is a member of that.  So it'll be interesting to see how this evolves over time.  But we're going to end up talking about that.



But we've got a Mega Patch Tuesday.  We've got, thank god, closing the chapter on Dr. Craig Wright.  Lenovo, Microsoft, Qualcomm, all in their separate dog houses.  A fun little piece of curl bashing, following up on the problem of piping the output of curl into bash that we've been talking about for the last couple weeks.  A strange event in the world of terrorist math.  An expensive but possibly useful gizmo that I ran across on Gizmodo.  A bunch of miscellaneous stuff.  The Temperfect Mug actually exists.  I received it.  Actually, I think it was the afternoon of last week's podcast, so I've had a chance to play with it and can review it.



LEO:  Oh.  I want mine.  Okay.



STEVE:  I have a significant breakthrough in the Healthy Sleep Formula.  You, my sister, and my best buddy are all receiving bottles of one ingredient which has changed, which dramatically improves its strength and will allow, I mean, I'm still recalibrating things, in fact.  It's like, it's big.



LEO:  Wow.  I love it that I get little pill bottles in the mail from Steve.  I pick up the package, and it's rattle, rattle, rattle.  I go, "Oh, new ingredient."



STEVE:  No excuse for not trying it.



LEO:  Oh, no.  I love it.  Keep 'em coming, thank you.



STEVE:  We have a little follow-up on last week's hit, The Sequence puzzle game.  The new companion app for the Zeo is released and available.  A few more tidbits, and then SmartThings.  So tons of stuff to talk about this week.  Well, so we are on May 10th, the second Tuesday of May, and it's...



LEO:  Oh, there's a big one, I think; right?



STEVE:  Oh.  In fact, I made this deliberately redundant because it's just sort of a joke at this point.  This is the Windows Patch Tuesday bonanza.  And so as I was putting this together, I thought, oh, this is just a crackup because we have a critical remote code execution flaw in Internet Explorer, where Microsoft says:  "This security update resolves vulnerabilities in Internet Explorer.  The most severe of the vulnerabilities could allow remote code execution if a user views a specially crafted web page."



Critical remote code execution in Microsoft Edge:  "This security update resolves vulnerabilities in Microsoft Edge.  The most severe of the vulnerabilities could allow remote code execution if a user views a specially crafted web page."  Critical remote code execution in JScript and VBScript:  "This security update resolves vulnerabilities in Jscript and VBScript scripting engines in Microsoft Windows.  The vulnerabilities could allow remote code execution if a user visits a specially crafted website."



Critical remote code execution in Microsoft Office:  "This security update resolves vulnerabilities in Microsoft Office.  The vulnerabilities could allow remote code execution if a user opens a specially crafted Microsoft Office file."  Critical remote code execution in some generic Microsoft Graphics Component:  "This security update resolves vulnerabilities in Microsoft Windows.  The most severe of the vulnerabilities could allow remote code execution if a user opens a specially crafted document or visits a specially crafted website."



And it goes on, including same thing for Windows Journal, Windows Shell, and then we have somewhat toned-down problems in IIS, Windows Media Center, Windows Kernel, Microsoft Remote Procedure Call (RPC), Kernel-Mode Drivers, Adobe Flash Player, .NET Framework, Virtual Secure Mode, and Volume Manager.



So update Windows.  I did that on my various Windows 7 machines.  And, boy, I've been seeing reports about Windows Update being sluggish.  And I don't know what's going on.  Some people have suggested maybe they're prioritizing Windows 10 updates over the down version updates, specifically Windows 7.  But, I mean, it's not snappy anymore, that's for sure.  I don't know, it's like - I don't know what's going on.  But I had 16 patches on both of two different Windows 7 machines, and some optionals.  They keep trying to give me Silverlight, and it's like, no, I'm never going to want Silverlight.



LEO:  What?



STEVE:  Oh, yeah.



LEO:  I'm telling you, Steve, sooner or later you're going to go to Linux or BSD.



STEVE:  I don't doubt it.  I don't doubt it.



LEO:  OpenBSD would probably be the right choice for you.  But I just put Linux on my Chromebook Pixel, and it's gotten so easy.  I thought this was going to be quite challenging.



STEVE:  Nice.



LEO:  It's a snap.  And this is UEFI and Secure Boot and everything.  And it's just, you know, you can do it.  You have to turn off Secure Boot.  But it's so easy.



STEVE:  Oh, and we'll be talking about that in a few minutes.



LEO:  Right, yeah, mm-hmm.



STEVE:  Because there was a glitch in a bizarre...



LEO:  I don't want to use Windows anymore.  I really don't.



STEVE:  Yeah, I know.  It's like you really feel like Microsoft is now fighting their users.  I mean, every week now there are problems, and we've got some more that we'll talk about in a second.  But I did want to close this chapter on the good Dr. Craig Wright.  Everyone will remember that a week ago, just before the podcast, I was just shaking my head, and I tweeted, "I sure hope this clown is not Satoshi.  Get a load of this latest spew of nonsense."  And I shared last week's spew.



So what he then posted, you just have to shake your head.  It's like, okay, you know, thank goodness this case...



LEO:  This is a classic conman.  Classic.



STEVE:  It is.



LEO:  Right?



STEVE:  So for people who don't know, just listen to this.  It's short.  And it's just - it is just screwball.  So it starts out - this is all you get when you go to drcraigwright, W-R-I-G-H-T, you know, D-R-C-R-A-I-G-W-R-I-G-H-T dot net.  That's all that's there.  "I'm sorry," it starts.  "I believed I could do this."  Now, okay.  So just for a little back story, if anyone has skipped any episodes of the podcast or has been under a rock somewhere, he was going to give us proof, and spoofed apparently proof, to Gavin, who he knows and cares about, for reasons that are beyond comprehension still, several weeks ago.  So now here's the final chapter:



"I'm sorry.  I believed I could do this.  I believed that I could put the years of anonymity and hiding behind me.  But as the events of this week unfolded, and I prepared to publish the proof of access to the earliest keys, I broke.  I do not have the courage."



LEO:  Oh, that's what happened.  He broke.



STEVE:  "I do not have the courage.  I cannot.  When the rumors began, my qualifications and character were attacked.  When those allegations were proven false, new allegations have begun.  I know now that I am not strong enough for this."  Okay, well, let me finish.  "I know that this weakness will cause great damage to those that have supported me, and particularly to Jon Matonis and Gavin Andresen.  I can only hope that their honor and credibility is not irreparably tainted by my actions.  They were not deceived, but I know that the world will never believe that now.  I can only say I'm sorry, and goodbye."



LEO:  So that's what a con man does when he gets caught, basically.



STEVE:  Yes.  Yes.  Some bizarre loony-tunes spin.  You know, yeah, he painted himself into a corner and just came up with another bizarro spin.  Anyway, the guy is...



LEO:  Bye-bye.



STEVE:  We're done with him.  So, wow.



LEO:  Bye-bye.  So long.  See you later.



STEVE:  Yeah.  Okay.  Now, get this.  ASUS motherboards for a long time have enabled Windows Secure Boot, or just generic, you know, UEFI Secure Boot, by default.  Secure Boot support was introduced with Vista, so it's always been built into Vista and successor OSes from Microsoft, thus Windows 7.  Consequently, when Windows 7 systems have been installed on ASUS motherboards, which had Secure Boot enabled, those Windows 7 OSes were configured by the setup system with Secure Boot, which the OS supported by default.



Then, like a week and a half ago, for reasons still not explained, Microsoft reclassified a previously optional Windows Update, which is KB3133977.  They reclassified it from optional to recommended.  What that of course did was install itself on Windows 7 machines.  What does 3133977 do?  It removes from Windows 7 its support for Secure Boot because it's no longer "supported," in quotes.  So everybody who had Windows 7 installed on ASUS motherboards, last week, when they rebooted their systems after this recommended update had installed itself and removed Secure Boot, was greeted with a big red warning from the BIOS with the title "Secure Boot Violation.  The system found unauthorized changes on the firmware, operating system, or UEFI drivers."  



LEO:  Oh, no.



STEVE:  "Press OK to run the next boot device" - meaning give up on booting your hard drive because of course you can't - "or enter directly to BIOS Setup if there are no other boot devices installed."  And then it says, "Go to BIOS Setup > Advanced > Boot and change the current boot device into other secured boot devices."  Anyway, this is just...



LEO:  Wow.  I mean, that's what we have - don't you have an ASUS motherboard, too, on your new one?



STEVE:  Oh, my new one was a...



LEO:  Gigabyte, you bought Gigabyte.



STEVE:  Gigabyte, yeah.



LEO:  We bought ASUS.  So I guess I can't do Windows Update.  Oh, my god.



STEVE:  Well, so what's crazy is, like, Microsoft seems to be doing things that are hard to explain.  Of course the conspiracy theorists say, oh, here's yet one more thing Microsoft's doing to try to move you from Windows 7 up to Windows 10.  It's like, make Windows 7 no longer boot on your ASUS motherboard.



LEO:  Geez Louise.



STEVE:  Yeah.  So the problem was there was no clear connection between just doing Windows Update, which doesn't normally, or isn't supposed to, render your systems unbootable, and then this big red BIOS warning saying "Secure Boot Violation."  How would you put those things together?  And it's funny because, as I was putting these notes together, I was reminded of my discovery of the very first spyware from that Aureate company.



LEO:  Right, right.



STEVE:  That's where I created OptOut.  And what happened back then was that freeware was surreptitiously installing this Aureate spyware which was designed to be a kind of a central server of ads for that freeware and of any other Aureate-enabled freeware.  But because it was surreptitiously installed, one of the problems was the Aureate freeware was - somehow it hooked into IE, but it broke IE for many people.  So they install the freeware and use it to check their shoe size or whatever the heck it was doing.  And then they go to use IE, which is now broken.  And so they think, oh, that's odd.



Well, first of all, there isn't a connection between the two events.  It's obvious.  But maybe they uninstall the thing that they installed, thinking that it might have some connection, except that the instructions were, because many different pieces of freeware might be using this central ad server which you had unknowingly just added to your system, the explicit instructions to developers who included this Aureate stuff was don't remove it because other software may still be in the system which uses it.  So you would remove that bad stuff you had inadvertently downloaded, that is, you would uninstall the freeware.  It would leave the Aureate stuff behind, still screwing up your system.  And we only found out about this when I created OptOut to find it and remove it.  And then people said, "Oh, my god, my browser works again."  And I was thinking, what?  How does OptOut fix your browser?



And so it was by reverse-engineering that, the whole tale was finally uncovered.  But similarly, here is, you know, you're just installing Windows Updates, and suddenly you're getting a Secure Boot violation, which just seems crazy.  Anyway, so ASUS has responded.  They've got a patch for the BIOS.  Maybe users, presumably users, if they figure it out, can disable Secure Boot and tell the BIOS, okay, calm down.  For whatever reason we no longer have a Secure Boot-capable OS because Microsoft just decided to take that away from Windows 7.



So, I mean, again, I'm becoming, I mean, I'm a Windows developer, Leo.  Never10, it was important for me to be able to crank out Never10 quickly.  We're at something like 335,000 downloads, and 5,000 a day, so it's been a huge, I mean, I get all this great feedback from people.  So I'm glad I'm able to respond.  And Windows still is the majority OS in the world.  So it makes sense for me to be here.  But, boy, I mean, Microsoft is just becoming hostile to their users.  And I'm with you, that it just does not seem like the place I want to be.



LEO:  I don't get it.  I just don't get it, yeah.  It's just a mistake.  I mean, it can't be - it's not intentional.  I can't buy that it would be intentional.



STEVE:  You're right.  You have to imagine that somebody at Redmond is in trouble for not testing this, or not considering the consequences...



LEO:  That's what's weird.  How could you not - yeah.



STEVE:  ...of retroactively revoking Secure Boot capability on an OS that has it.  It's like, what?  Why?



LEO:  Odd.



STEVE:  And based on the protocol of Secure Boot, perhaps, I mean, perhaps they have to do this.  But, unfortunately, this is something that should have been better thought through.



LEO:  Is it possible that - somebody in the chatroom was saying ASUS implemented their own Secure Boot, that is it possible ASUS did something nonstandard, and that's why they're - I mean, obviously they're different than anybody else.



STEVE:  Good question.  All I encountered in digging into this was that they enable Secure Boot by default.  It may well be that other motherboards...



LEO:  Oh, everybody does.  No, no, everybody does.



STEVE:  For example, my Gigabyte motherboard supports it, but it's disabled.



LEO:  Oh, really.  Oh, interesting.



STEVE:  Yeah.  And so I think...



LEO:  Well, if you build your own, that makes sense because you could then put Linux on it.  But if you buy a Windows machine, Secure Boot is always on by default.



STEVE:  Right.  In fact, that was a requirement up until 10.  Well, up until 10 it had to be on by default, but you had to be able to disable it.



LEO:  Right.



STEVE:  They've softened that a little bit, where it's now sort of unspecified.  So far, all the systems we've seen, you are able to turn it off.  And of course the industry is sort of in a quandary at the moment.  Alternate OSes need to either know that systems can have it disabled, or be able to support it themselves.  So it's not quite sure where we're going to go.  But I think the future is Secure Boot, that because of problems with rootkits and just trying to tighten security up - to me this all feels a little bit backwards, though.



Look at the list of fixes that we just had today in Windows in terms of anyone - basically, touch the Internet, and you can have malicious code run on your system.  Okay, and we're worried about something affecting the boot?  I mean, yes, that's a problem.  We should fix that, too.  But, boy, look at the inconvenience that that brings to the rest of the ecosystem.  No inconvenience to Microsoft.  They're able just to say, oh, you know, we're going to have Secure Boot, and we're going to make everybody else do it, too.



LEO:  Right.  Well, a lot of Linux users were upset about that because, again, the conspiracy theory was, oh, well, Microsoft doesn't want you to put Linux on your Windows machine.  And you do in fact have to disable it to use Linux.



STEVE:  Right.



LEO:  But you can disable it, so it's not the end of the world; right?



STEVE:  So Lenovo, back in the doghouse.  The so-called "Lenovo Solutions Center" has both a userland or user mode app and a kernel mode backend server thing.  And it turns out that they didn't code it correctly.  There is an arbitrary code execution vulnerability which allows either a remote attacker or a local user to execute arbitrary code with full system privileges.  So, once again, a problem with Lenovo.  They've scurried around and fixed it.  So if you do have Lenovo Solutions Center installed, you may want to ask it for a solution to itself, and have it supply that.



LEO:  That's a little recursive.  Solve yourself.



STEVE:  Meanwhile, Qualcomm, it turns out, five years ago, back in 2011, they provided some updates to the core Android system, adding a bunch of network features, including tethering capabilities.  That required that they update the netd daemon in Android.  And it has just come to light that there are some serious problems with that.  Now, the good news is not remote code execution, so not as bad as the Stagefright problems, where just receiving an MMS message can take over your machine.  But this is a local privilege elevation flaw which does allow apps to get up to mischief that they shouldn't be able to.  They're able to obtain access to the users' private data, including SMS and call history; to change system settings, disable the lock screen, and more.



Now, this has already been patched in the May Day Android security patch that we talked about last week.  So it's been fixed.  The concern, though, is that because this is old, this is back in 2011, that it's most worrisome on devices running Android 4.3 Jellybean and previous, which are unlikely to ever get patched.  So I just sort of wanted to give our listeners a heads-up that, I mean, this is a problem that's been fixed in newer Android versions.  It isn't known to be exploited.  But over time, if you're running older Android, this may not get fixed.  I mean, it's probably not going to get fixed.  And so it'll be a known vulnerability that some mischievous developers could consider leveraging in order to get access, to basically break out of the app sandbox and get access to the OS-level features.



And in sort of a side note, both the FCC and the FTC are beginning to wake up to the whole question of mobile security and the obligation of carriers and vendors to patch this stuff.  They're asking Apple, Google, and others for clarification of their policies for the factors that they consider in deciding whether to patch vulnerabilities on a particular mobile device.  So that's good.



As we've been saying on the podcast now for quite some while, these are computers in our pockets.  And we now have a long history of understanding that consumer devices need to be patched.  First it's desktop computers.  Then it's our mobile devices.  And of course now we recognize that embedded devices like this whole IoT, the Internet of Things world, are going to be needing the same kind of ongoing patch maintenance.  There just is, you know, all of our history and experience says that all of these systems are going to have weaknesses and flaws that need to get fixed.



There was also, remember I mentioned last week that the infamous 3035583 update, I saw that sort of like came back last week.  And that's the one, that's the Get Windows 10, the GWX update.  And there was some anecdotal report, like the day after I mentioned that, that the GWX icon had reappeared, and that people were being offered Windows 10 again.  Now, the good news is not a single user of Never10 reported that.  I did see one person who said he was going to be reinstalling the big GWX utility thing.  I can't remember the name of it.



LEO:  The Control Panel.



STEVE:  Oh, the Windows Control Panel, GWX Control Panel.



LEO:  Right.



STEVE:  Then in a follow-up of some of the - it was Windows ITPro that initially reported it, I think on May 5th.  Then on the 6th they updated their story, saying that this issue has only been, or may only be responsible - I'm sorry.  This issue has - okay, the English.  I did copy it right from the story.  "This issue has only be reproducible," they wrote, so whatever they meant.



LEO:  I've noticed lately, blogs no longer have anybody copy checking or proofreading.  Even big blogs, frequent typos.  You can see where - obviously the guy wrote "been" and then accidentally deleted the "en" or something like that.  But you would catch that immediately if you looked at your copy before you filed it.



STEVE:  Yeah.



LEO:  The standards have just collapsed for this stuff.



STEVE:  It's funny you mention that because I was also quoting, in the next story, the top of a blog post, and it was just full of spelling errors.  And I thought...



LEO:  And on, like, well-known, like The Verge and stuff.  I mean, it's kind of - I guess they have to file so fast, so many stories, I mean, they really have to do many, many stories a day, that they don't have time to check it.  Which makes you wonder about the facts.



STEVE:  It's also part of the culture now, isn't it.



LEO:  Right.



STEVE:  It's this, oh, my goodness, we have to be first out with this.  I mean, I will say, on the flipside, I was stunned but pleased by the rate at which Never10 was, like, found.  And it was like, one site finds it, and they're all of course looking at each other's Twitter feed.



LEO:  Well, that's - you can manipulate this, exactly, because there's such a huge need for content, if they're factories, that they will totally do that.  Everybody will pick up everybody else's story, and it just goes.  Everything's a wildfire now.



STEVE:  Or nothing.



LEO:  And you miss that day, it's over.



STEVE:  Yeah.



LEO:  What's sad is that we can be manipulated, and that's why we have the candidate for President we have.  It's so easy to manipulate that technique, as well.



STEVE:  So whatever they meant, they said:  "This issue has only been reproducible in a few reported instances and does not seem to be widespread.  If you are experiencing this problem, let us know so we can help determine if it's" - okay, and there should be an apostrophe there.  Anyway, "if it's environment or configuration specific."  So for what it's worth, something happened, and it doesn't look like, I mean, I immediately was worried when I saw this.  It's like, I was just so sure that Microsoft would never think of violating their own group policy enforcement to prevent this, which of course is what Never10 uses is the fully normal sanctioned Microsoft-blessed way of not, you know...



LEO:  Yeah.  Yeah.  That should do it.



STEVE:  Yeah.  And so I was like, I was thinking, oh, my lord, you know, is Never10 going to be broken?  And it's like, no.  It's not clear what it was.  What I think must have happened is various, you know, early on there were other wacky ways of semi-blocking this.  And so those people who adopted earlier previous solutions, like maybe they installed the GWX Control Panel, then removed it, thinking it was no longer necessary, or who knows.  And it did other things than what Never10 does.  But the good news is we all appear to be fine.  And I guess, is it the presumption, Leo, that in July, when the...



LEO:  July 29th.



STEVE:  When the deadline - the deadline.



LEO:  The deadline for free is over.



STEVE:  Update by now, or you're going to have to pay $129.



LEO:  Yeah.  Yup, that's July 29th.



STEVE:  To be further abused.



LEO:  So presumably this will all go away then.



STEVE:  Oh, yes, nice, yeah.  Wow.  Okay.



LEO:  By the way, important point.  Probably everybody should do this.  Turn off recommended updates.  It is on by default in Windows 10, anyway.  Just do critical updates.  That's the ones you have to do.  Recommended updates are the ones that bring along all of these problems, including the ASUS motherboard problem.



STEVE:  Right.



LEO:  Just don't do the recommended updates.



STEVE:  Right, right.  So we've talked for a couple weeks now, starting with the - I'm trying to think of the name of it, the Raspberry Pi...



LEO:  I'm usually very good at guessing your intent.



STEVE:  ...VPN.



LEO:  I don't know where you're going with this.  Oh, yeah, yeah, that script.



STEVE:  Yeah, yeah, yeah, the script.  But there was a fun name for it, and I'm blanking on it now.



LEO:  I can't remember, either.



STEVE:  The chatroom will figure it out.  Anyway, the idea was, what was fun was that you could plug a Raspberry Pi into your router, bring up its terminal window, and pipe the output of curl into bash.  Curl is C-U-R-L, simply retrieves from a URL something on the Internet and spews it out.  Well, when you pipe that into bash, the spew goes into the bash shell, so bash interprets those lines as commands.  And basically, so it's an automated - it's a cool way, but dangerous, as we talked about last week, of basically turning your little Raspberry Pi over to a server on the Internet, to in this case install the OpenVPN.  Okay.  I think this will be the final comment on that.  But I got a kick out of this.  Phil, whose last name I couldn't find, he has a blog at IDontPlayDarts.com.



LEO:  A good name.



STEVE:  And so he said:  "Installing software by piping from curl to bash is obviously a bad idea, and a knowledgeable user will most likely check the content first."  Which we talked about last week.  "So wouldn't it be great if a malicious payload would only render when piped to bash?"  So essentially we're escalating this as an attack vector.



He said:  "A few people have tried this before by checking for the curl user agent, which is by no means failsafe," meaning that - remember that whenever you ask a server for something by URL, part of the query, the so-called metadata, the query headers, there's a user agent.  You know, Internet Explorer declares itself, but they always say Mozilla for some deeply historical reason, and Chrome and Firefox and so forth.  You're able to tell who's asking.  You know, spiders that crawl the 'Net, they identify themselves as a spider.  And so that allows the server to manage them however it wants to.



So the point is that, similarly, curl will declare something.  And maybe there's some way of determining from the metadata, from the query headers, that it's being piped to bash.  So he says:  "A few people have tried this before by checking for the curl user agent, which is by no means failsafe.  The user may simply curl the URL on the command line, revealing your malicious code.  Luckily," he writes, "the behavior of curl and wget," which is actually - that's the tool that I often use on Windows - "changes subtly when piped into bash.  This allows an attacker to present two different versions of their script, depending upon the context."



Now, okay.  I did last week handle that by suggesting that you curl to a file, browse the file, see what the command stream is, then pipe that file into bash, meaning pipe what you have audited and looked at into the bash command prompt.  But anyway, what's clever is, and his point is, that bash is an interpreter that is interpreting line by line what it receives.  So if the first line of the script that is coming from the server is a statement like "sleep 10," "sleep 10" puts a 10-second pause into the interpretation of the script for whatever reason.  Sometimes it's to allow something else to happen asynchronously.  You just sort of want to pause the bash script.  Maybe you want to put up a notice that the user will see when stuff's crazily scrolling by.



You want to just, like, pause so the user can look at something, and then you continue.  The point is, that will create a pause in the pull from bash through the TCP connection that the remote server could sense.  So if the server wanted to be malicious, that is, if it wanted to deliver different content to a terminal window versus bash, it could put a little pause at the beginning, notice if there was no pause in the pull.



Then it would say, oh, that sleep statement wasn't interpreted, it was simply displayed by the command window, and that would tell it to follow that with benign content so the user surveying it would go, oh, yeah, look at that, it looks all fine.  Then when they issue the same command, but with bash, there would be a pause because bash would interpret the "sleep 10" statement, and that would then allow the malicious content to be swapped in its place, and you wouldn't know any wiser.  So interesting sort of security lesson there, which is...



LEO:  But I have to say that this kind of piping a script, downloading and piping is done all the time to save people steps and to simplify.  I'm looking at this is something that a lot of people install on their Macintosh called Homebrew, allows you to install Linux packages.  And you can see that the command is a one-liner that curls a script and runs it through Ruby.  And that's very common.  And, I mean, you see this all the time.



STEVE:  Well, and again, that's what was so elegant about this was that...



LEO:  It's simple, yeah.



STEVE:  ...here's, like, one line.  And, bang, you've got OpenVPN installed and configured on your Raspberry Pi.  It's very cool.  But from this podcast's standpoint, there is a security implication.



LEO:  Oh, yes, absolutely.  But anytime you install software from an unknown source, especially somebody named Inphektion, you should be careful.  This is Oh My ZSH, which is a really nice shell utility.  You see sh-c, and there's a curl command.  You curl a script and run it, and it's a one-liner, and it just runs it.  And so you see this all the time.  And if you don't trust these people, they could screw you in many other ways, too.  They don't have to run the one-liner.



STEVE:  Right, right.  And again, I think that's - yes.  That is an important point, and it's been one of the themes that we've been highlighting recently, which is just how much of the whole system...



LEO:  It's all trust.



STEVE:  ...is in fact out of our control.



LEO:  Right.



STEVE:  And we know that security has to be soup to nuts.  If you skip a course, there's an opportunity for someone to do a little man in the middle anywhere between the sand coming off the beach to create the silicon for the chips, all the way to you explaining to your mother-in-law why all of her files have been encrypted.



LEO:  Sorry.



STEVE:  Sorry about that.  What did you click on?  Yeah.  Okay.  So...



LEO:  Well, it was just a one-liner, a Perl one-liner.  I don't understand why... 



STEVE:  Okay.  So this, I didn't know how I was going to cover this because this was interesting.  But the Washington Post covered this event in such a wonderful narrative style that I wanted to just share it as it was written.  So this was last week, Thursday evening, two days after last week's podcast.  The writer says:  "On Thursday evening, a 40-year-old man - with dark, curly hair, olive skin and an exotic foreign accent" - and I have a picture of him in the show notes - "boarded a plane.  It was a regional jet making a short, uneventful hop from Philadelphia to nearby Syracuse.  Or so dozens of unsuspecting passengers thought."



LEO:  Clearly a terrorist.  He's using al-gebra.



STEVE:  Oh.  "The curly-haired man tried to keep to himself, intently if inscrutably scribbling on a notepad he'd brought aboard."  A notepad, Leo.



LEO:  Ooh.



STEVE:  "His seatmate, a blond-haired, 30-something woman sporting flip-flops and a red tote bag" - we still don't know her name, by the way...



LEO:  No, she escaped.



STEVE:  "...looked him over."  She gave him, you know, the once over.  "He was wearing navy Diesel jeans and a red Lacoste sweater - a look he would later describe as 'simple elegance' - but something about him didn't seem right to her."  So she decided to try out a little small talk.



"'Is Syracuse home?' she asked.  'No,' he replied curtly."  He simply "deflected further questions.  He appeared laser-focused" - perhaps too laser-focused, Leo - "on the task at hand, those strange scribblings.  Rebuffed, the woman began reading her book.  Or pretending to read, anyway.  Shortly after boarding had finished, she flagged down a flight attendant and handed that crew member a note of her own.



"Then the passengers waited, and waited, and waited for the flight to take off.  After they'd sat on the tarmac for about half an hour, the flight attendant approached the female passenger again and asked if she now felt okay to fly, or if she was 'too sick.'  'I'm okay to fly,' the woman responded.  She must not have sounded convincing, though.  American Airlines Flight 3950 remained grounded.



"Then, for unknown reasons, the plane turned around and headed back to the gate.  The woman was soon escorted off the plane.  On the intercom a crew member announced that there was paperwork to fill out, or fuel to refill, or some other flimsy excuse; the curly-haired passenger could not later recall exactly what it was.  The wait continued.  Finally the pilot came by and approached the real culprit behind the delay:  that darkly complected foreign man.  He was now escorted off the plane, too, and taken to meet some sort of agent, though he wasn't entirely sure of the agent's affiliation, he would later say.



"'What do you know about your seatmate?' the agent asked the foreign-sounding man.  'Well, she acted a bit funny,' he replied, 'but she didn't seem visibly ill.'  Maybe, he thought, they wanted his help in piecing together what was wrong with her.  And the big reveal:  The woman wasn't really sick at all.  Instead this quick-thinking traveler had 'seen something,' so she had 'said something.'  That 'something' she'd seen had been her seatmate's cryptic notes, scrawled in a script she didn't recognize.  Maybe it was code, or some foreign lettering, possibly the details of a plot to destroy the dozens of innocent lives aboard American Airlines Flight 3950.  She may have felt it her duty to alert the authorities just to be safe.  The curly-haired man was, the agent informed him politely, suspected of terrorism.



"The curly-haired man laughed.  He laughed because those scribbles weren't Arabic, or another foreign language, or even secret terrorist code.  They were math.  Yes, math.  A differential equation, to be exact.  Had the crew or security members perhaps quickly googled this good-natured, bespectacled passenger before waylaying everyone for several hours, they would have learned that Guido Menzio is a young but decorated Ivy League economist, and he's best known for his relatively technical work on search theory, which helped earn him a tenured associate professorship at the University of Pennsylvania, as well as stints at Princeton and Stanford's Hoover Institution."



Anyway, yes.  See something, say something.  But maybe - who knows what was going on during these hours of tarmac stall and then return to the gate.  But no one bothered to figure out who he was.  And they do seem to maybe have overreacted a bit, since this was just some math scrawled on a notepad, not formulas for explosives.  Wow.  The story generated 4,700 comments, which I did not have time or any further need to read.



LEO:  I think you get the gist after the first few, I'm sure.



STEVE:  Wow.  Wow.



LEO:  Sad that we celebrate ignorance in this country, it really is.  It's just sad.



STEVE:  Okay.  Now, at first blush, this seemed crazy to me.  But upon further digging I thought, well, there are some applications, perhaps, for this.  Gizmodo had the story, and they titled it:  "When Your Internet Goes Out, This Smart Plug Resets Your Router Until It Works Again."  And I thought, what?  So get this.  It's a cute little thing, Leo.  It's ResetPlug.com.  Bring that up, a big, pretty picture of it.  ResetPlug.com.  Gizmodo wrote:



"When your Internet goes out, resetting your WiFi router and cable modem often seems to fix the problem.  Instead of getting up from the couch to fiddle with power cords, why not let a tiny outlet..."



LEO:  This is actually a great idea.



STEVE:  Except that it's $60.



LEO:  I know.  Because the cats knock off our Internet all the time, and it would really be...



STEVE:  "Why not let a tiny outlet router power cycle your hardware for you?"  Now they write:  "You might balk at the ResetPlug's $60 price tag, but it's not an awful idea for people who hate having to get up when the Internet goes out.  You plug the device into an outlet, then plug your WiFi router, modem, or both, into the ResetPlug itself."  It only has one outlet, so you need a Y adapter.  "It constantly monitors your home's Internet connection; and, when it detects a problem, it automatically cycles power to your router and modem until the Internet returns."  So again, ResetPlug.com.  



LEO:  I wonder how much of a delay it puts in there.



STEVE:  Yeah, there would be some.



LEO:  It takes a while; right?



STEVE:  Yeah.  Well, it takes, my god, a cable modem takes about an hour to come back online.  



LEO:  Right.



STEVE:  Now, I was thinking, okay, take that same $60 and just buy a real router because, frankly...



LEO:  One that works, you mean?



STEVE:  Yeah, one that doesn't hang.  I've never had that happen once.  And, yeah, I buy high-end routers.



LEO:  Right.



STEVE:  Now I have a little PC running pfSense, and it's just bulletproof.



LEO:  Right.



STEVE:  But really, come on.  Yes, you can drive with a tank of gas and jumper cables in your beat-up car that won't hold a charge, or you can just get a good battery.  I would just say, $60?  Get a real router, and you're probably fine.  However, when I looked at their page, they did bring up some interesting points because, when you're not home, you're not there to reset anything.



LEO:  Right.



STEVE:  And if you're depending upon, as people, as we'll be discussing here when we get to the content at the back half of this, the Internet of Things stuff, and you do have, for whatever reason, a tendency for your home to go off the Internet, then this makes a lot of sense.



LEO:  Lee Hutchinson in Ars Technica wrote about this.  He said:  "ResetPlug is a $60 device to keep you trapped in crappy WiFi hell."  It's a Band-Aid.  But it's true that, if your burglar alarm is on WiFi, or you know my Ring Video Doorbell.  When the WiFi's out, the doorbell's not going to work.



STEVE:  Right.  Exactly.  And so on the ResetPlug page they say security cameras, thermostats, smart appliances, smoke alarms, carbon monoxide alarms, Smart TV or DVR, remote computers, sensors, security alarms, smart lighting, file servers, other IoT devices - the point being, yes, I mean, what is actually happening is our homes have to be on the 'Net even when we're not there, for exactly the example you'd give, Leo, with the Ring Doorbell, but all these other things, too.  And so, yeah.



Now, what we'd like to see is a router that's smart enough to, like, reset itself when it realizes it's lost connectivity.  I guess if it hangs, though, it can't.  Okay.  But embedded devices have always had - I'm blanking on the term - a dead man feature, where there's a hardware counter.  And what it does is it's in hardware, and it counts up.  And if it ever overflows, it pulls the hardware reset line - I'm sorry, watchdog timer, that's the term, a watchdog timer.  And it's been part of embedded technology forever.



So the idea is that, in the software loop, the event loop, for example, the main event loop for the software, every so often it has a software timer which expires, and that software timer pulls an interrupt that tells the watchdog, which causes the watchdog timer to be reset.  And so the point is, every second or so, while the OS is running, it's resetting the watchdog.  And if the OS ever hangs for any reason at the hardware level, that it stops being reset, that hardware counter overflows, a hardware reset is performed in order to basically reboot the router.  It'd be nice if we had that.  Apparently we don't in our consumer blue plastic routers.



But anyway, I wanted to share this because, frankly, though it seems a little pricey, you could do this for 20 bucks, and I'm sure there will be some for 20 bucks, although patent pending because it's an invention.  And so maybe not.  Maybe you've got to go - but still, I wanted to share it with our listeners because I thought, okay, there will be people for whom this provides an answer that they've been looking for.



LEO:  All right, Steve.  Onward.



STEVE:  So catching up on a bunch of loose ends and previous news, the much-discussed, oft-discussed Temperfect Mug arrived.



LEO:  Oh, I'm so excited.  Yay.  Now, that's the titanium edition.



STEVE:  This is, yes, this is the ridiculous, I'm embarrassed now that I...



LEO:  Powder-coated titanium.



STEVE:  ...spent this much money.  Although it'll be interesting to see how it weathers over time.  It's a titanium oxide, which, I mean, apparently you can't scratch it.  It is, like, way too hard.  It's sputter deposited at 3,500 degrees through some process.  And I have to say, I mean, it is gorgeous.  It has sort of a fine-grain sandpaper feel, which is nice because you'd like, if it's not going to be a rubber grip, you'd like it to be a little grippy.  And so this provides that.



But mostly what intrigued us three years ago when this project began on Kickstarter was the concept that, as coffee drinkers, we, was the concept that it had a phase-change inner lining which - and by that I mean it actually is changed from a solid to a liquid.  And that changing, it's a waxy-like nontoxic substance which, anyway, it's not, like, exposed to the coffee.  It's behind actually three layers of aluminum.  And so there's a sandwich.



And the layer closest to the coffee is this stuff which rapidly, in about two minutes, absorbs the initial heat of the coffee, which is initially too hot to drink, bringing it down to drinkable temperature.  And so the idea is that inner lining has a large thermal inertia.  So it holds - it takes the heat out of the coffee, but then puts it back in over time.  Yeah, there is this crazy titanium.  You're showing the video of it being sputter deposited.



LEO:  Kind of plasma spraying it, yeah.



STEVE:  Yeah, it's crazy.  So the idea is that it pulls the heat out, but then returns it as the coffee cools.  And then the next layer is a vacuum layer.  And in fact, I mean, these guys, there has been constant email flow from them as they've gone through the trials and tribulations.



LEO:  Did you get a serial number on yours?



STEVE:  Yes.



LEO:  You're one of the first 10.



STEVE:  Number two.



LEO:  Oh, my god.



STEVE:  You could see him etching it.



LEO:  Wow.



STEVE:  And so I got a very nice note from Dean, one of the guys.  He says:  "Hi, Steve."  First, I mean, the way it looked, I thought it was just printed to all of the early adopters.  But he say:  "Hi, Steve.  I don't remember exactly how it happened.  It's been a long time!"



LEO:  They raised a quarter of a million dollars for this thing.



STEVE:  He says:  "But somehow my nephew, Will LaValley, brought our Kickstarter campaign to your attention late 2013.  You talked about it on your podcast, and I think we got a lot of tech-savvy coffee-loving backers because of that mention.  We really appreciate it.  You were also our second Titania mug backer.  And since we happen to be shipping the Titania mugs first, you get the second-ever Temperfect Mug.  I hope you love it.  Feel free to get in touch with any questions or comments."  So I just have to say it's the real deal.  The good news is I think the reasonably priced ones are, like, $40 or something.



LEO:  Yeah.  That's the one I got, $40.  And still haven't received.  He said it may take a while.



STEVE:  Yeah.  And it actually works.  It kept coffee hot for three hours, I mean, like truly hot, while the outside was weirdly cold because I think the AC was on that day last week.  And so it would just, I mean, there was no heat leakage except out of the very top where there's a plastic lid.



But for what it's worth, I mean, it's been - I'm sure all of the backers know, because we were getting constant email from these guys, all of the problems they had.  They are perfectionists, and they were not happy with the way the shutter was working.  The first three samples didn't hold vacuum.  Then they figured out how to do that.  I mean, it was just one thing or another.  They didn't give up, and they did deliver.  So bravo.



And it's a beautiful piece of work.  I mean, it is 100% commercial grade.  It's got a beautiful seal on the top.  And you can feel the heat coming through the plastic, so there is some nominal heat loss.  But the bulk of it doesn't lose heat, and it surely does keep the coffee hot for hours.  And other people responding to my tweet said, "Who wants to drink three-hour-old coffee?"  And that's, you know, you're right.  You're normally going to drink it before that.  And the point is you can.  So there is a very nice solution for keeping our coffee hot for a long time.



LEO:  Can you still - you can buy them, he's selling them, if you didn't get in on the Kickstarter?



STEVE:  Yeah.



LEO:  Yeah.  So, yeah, you can.



STEVE:  Okay.  So the Healthy Sleep Formula is a hit also, but wasn't effective for everyone.  And I think this change will change that.  It's something I finally got around to exploring four days ago, and it's made a huge difference.  And the difference is I switched the L-theanine from a capsule to a tablet.  There's a well-regarded company, Source Naturals, which makes effectively a slow-release or extended-release version of L-theanine.  That's the amino acid in green tea.  And it is one of the key components of the Healthy Sleep Formula.  What it does is raise the level of glycine and GABA, both which are inhibitory neurotransmitters, and also raises dopamine nominally.



The problem is that the ability for it to get into our brain through the so-called blood-brain barrier is rate limited.  It shares something known as the leucine transport, which is what main dietary amino acids use.  And that is a rate-limited transport.  So what happens is, if you take L-theanine in a capsule, which when it's dissolved dumps all of the theanine into your blood stream, you get a short spike of high concentration which our livers start metabolizing and rather quickly remove from our blood.



One of the things that happens is the greater the concentration, the greater the rate of removal, which creates a half-life effect where the half-life, for example, might be an hour.  So an hour after you've taken it, the concentration is reduced in half, and then another hour later that half is reduced in half, and another hour later that half is reduced in half.  So you get an exponential decay curve. The problem, though, is if our ability to get it into our brain is rate-limited, then we've lost the bulk of the effect because, even though it was initially high concentration, it didn't have a chance to get into us.  And of course the melatonin that I chose is similarly time-released for the same reason.  We want it over the course of the evening. 



So what this one change, by switching to this tabletized form of L-theanine, does is it trickles it into our bloodstream over the course of the night.  So it raises the level in our blood.  Since the concentration level is never super high, our livers' rate of removal of that L-theanine is also not super high.  So it gets to stay present.  And that's at a compatible level to the rate at which it is able to cross the blood-brain barrier and get into us.



Bottom line is this changes everything to such a degree that I'm now having, I mean, to rejigger the formula.  I tried removing glycine completely last night.  That was a mistake.  So I had a middle-of-the-night wakefulness for about 90 minutes.  But after I realized I wasn't able to get back to sleep I quickly took some glycine.  And as soon as it got into me, then I was.  Anyway, I will have - there will be more changes coming.  But Leo, you, my sister, and my best buddy...



LEO:  We've received the patch.  We have the update, the patch to the formula.



STEVE:  Yes.



LEO:  Okay.



STEVE:  Exactly.



LEO:  And I realize I should take the Taurine out.  I just reread the page, and you've decided Taurine causes you to pee too much.  So let's not do that.  Okay.



STEVE:  Yes.  Many, many people reported that the diuretic effect of Taurine was just - it was causing them a problem.  And while it can be beneficial, it's like, eh, okay, maybe take it in the morning, if you're a morning supplement taker.  It's good for you.  There's lots of benefits to having Taurine, to supplementing Taurine.  But you don't want to take a diuretic just before bed.  And so Taurine's removed, or I should say relocated to the morning.  You might as well use up what you've got.



But please, I mean, I have to say I am amazed at the difference this makes, and really delighted, because some people were not finding a success with the formula, and I think this will change that, probably across the board.  So I've got the links on the Healthy Sleep Formula page.  I knew that it was going to be subject to change, and this is the nature of this sort of work.  Other people have had problems, for example, finding GABA.  I think Australia you can't get it, and there are some places in the U.K. where it is not available.  This may obsolete it.  I don't know yet.  I'll be finding out, challenging myself with some sleepless nights.



So it's still subject to change.  But absolutely, without question, you want to change to this particular Source Naturals L-theanine.  They have some others, but unfortunately - some other L-theanine-containing tablets, but they've also got Taurine in them again.  And so I think we probably want to stay away from that.



Oh, and I've been in constant touch with the InterPlexus people that make Seriphos because of course this is the great Seriphos shortage of 2016, that apparently is going to end in about two weeks.  So I did make a note on the page also that, by the end of this month, it should be back in stock at retail.  They were encapsulating it two weeks ago.  Now they're running it through quality assurance and hoping to have it within about a week and a half.  And it ought to take some time for it to get out at retail.  But many people, I mean, there has been no Seriphos in the industry since shortly after this Healthy Sleep Formula caused all the retailers to sell out of what they had.  And they've been reformulating it.  Apparently we're going to get an even better one next round.



LEO:  Good.



STEVE:  So the wait is almost over.  And I just did want to make - I wanted to make sure that people who may not have moved on the recommendation last week of The Sequence puzzle, I wanted to remind people about it.  It's been a huge, huge hit.  And you said, Leo, before the show, I think, that it was your pick for iOS Today yesterday?



LEO:  Yup, yup, my app cap, yup.



STEVE:  Do you have any idea how far...



LEO:  It's really fun.



STEVE:  Yes, it is.  Do you know how far along you are?



LEO:  Oh, not very far at all.



STEVE:  Yeah.  Many people, there are a couple people in the 40s.



LEO:  How many total levels are there; do you know?  



STEVE:  I don't know.  I don't know.  So 22 I was hung up on for a couple days.  And I should say, like, I'm not in a hurry to finish this.  I would recommend to people that they just sort of take it as it comes.  Look at a level, spend a few days.  What I notice sometimes is that I'll work at it, I can't figure it out, and I just - I get tired.  And it's like, okay, I'm going to put it down.  And I pick it up the next day, and it comes to me.  So anyway, I'm at 29 at this point.  No, I finished 29.  And I actually solved it with only three pieces.  There were seven available, and I only needed three because I'd noticed something in an earlier level that was not obvious. So for what it's worth, people are really liking it.



I had also mentioned that someone in the GRC health newsgroup, where there's been a lot of conversation about the Zeo EEG headband, was working on and nearly finished with a piece of free open source software that is now at v1.01.  And on the Zeo page at GRC, just GRC.com/zeo.htm, you can find links to that.  It's got just an amazing amount of additional features beyond the standard Zeo software.  And we now never need to worry about that Zeo software disappearing.  This thing is, like, exports the data, shows much finer grain resolution.  If anyone is, like, deeply into the Zeo, then I recommend it.  I'm really quite happy with the standard app.  It just tells me enough of what I need to know for my own, you know, for the Healthy Sleep Formula research that I'm doing.



Second to last is that many people have asked about how I'm cooling the hard drives on this mega machine that I built and talked about a few weeks ago, because I talked about putting some big copper heat sinks directly onto the hard drives.  And the problem is that I didn't just buy the heat sinks.  I've had them for years.  I used to have them on the hard drives in my Series One TiVos, just because I believe in keeping drives cool.  And so the air circulation in the TiVo would blow across the fins and bring the drive temperature down.



What I did do was I put a link in the show notes to the Arctic Alumina Thermal Adhesive which I used.  This is a two-part epoxy adhesive, and it is way permanent.  So what I did was I peeled the plastic label off of the top of the hard drive so that it's metal on metal, or rather bonded with this thermal adhesive.  You want to be careful to see whether there's a vent hole.  Many hard drives, if not all, will have a little vent hole somewhere to keep the internal and external pressure equalized.  So you don't want to cover that up.



But otherwise, if you just eBay or use Amazon or just google "copper block heat sink fins" or something, you get Google's images, or just like pictures of them.  And all you really want is just a big thing that will fit over, occupy a lot of surface area over the drive.  And so it doesn't really, I mean, if I'd just purchased them, I would have a link to offer.  But it's really noncritical.  You just want to make sure the fins are not too tall so that they'll fit within your enclosure.



And there's just tons of copper block heat sinks.  So just google that, or look on eBay, and get a couple, and just glue them to the label-removed metal surface of the hard drive, and you should be good to go.  And also arrange to have it in the air flow.  You want some air to flow over it, and it makes an incredible difference in the drive's temperature.



And lastly, many people said, "Hey, Steve, don't you know that when you transfer a domain, the recipient registrar always honors the total remaining life of the domain?"  And the answer was, no, I didn't know that.  Now I do.  So thank you, everyone, first for telling me.  And then I just finished performing a series of experiments, moving some domains that had lots of time left on them over from Network Solutions over to Hover.



And Hover wants me to pay for one year at that domain's annual fee for moving it over, but then they tack that year onto the existing remaining time the domain had at the old registrar so that you're not disincentivized from moving to them.  Which makes sense.  I was just surprised because they're not getting any money, potentially for a long time.  So that's why I was just assuming they weren't going to honor the existing remaining time on the domain.  But they do.



So for anyone who might also not be sure, I wasn't; now I am.  And everybody else knew.  So thank you for letting me know, everybody.  And I've confirmed it.



And speaking of confirming, not that we need much confirmation at this point of what SpinRite's able to do.  But I found a fun story.  Actually he sent it to Sue, who forwarded it to me, from  Kev Blythe in the U.K.  He said:  "Hello, Steve.  I would like to say thank you for that magical item of software you call SpinRite.  A local garage called in a panic."  And it's funny, Leo, because you were just talking about some old laptops that are still necessary for car service of some sort?



LEO:  Oh, yeah.  There are, whatever it is, 15 McLaren F1s out there, these very, very expensive cars.  And the way they created them, I'll see if I can find the image, they can only be modified by a particular old laptop which they're running out of because there aren't that many of them.



STEVE:  Yeah, well, so this may - I don't know if that's this, or just what the garage had, but he said...



LEO:  Twenty-year-old Compaq.  This is it.



STEVE:  Yeah?



LEO:  That's it.  That's the only one they can use.



STEVE:  I have one of those laptops, by the way.



LEO:  Well, you should contact the McLaren folks.



STEVE:  No.  I'm keeping it for the Gibson Museum.



LEO:  Yeah.  This is one of the - this is probably the most expensive production car ever produced.



STEVE:  Wow.



LEO:  Yeah.  It's like a $10 million car.



STEVE:  Oh, no.



LEO:  Yeah, yeah, yeah.  They only made a hundred of them, and they have to use - they only built 106 of them.  There are a hundred left.



STEVE:  And so it is tied to some aspect of that particular laptop.



LEO:  Yeah, because the - actually...



STEVE:  The software will only run on that laptop?



LEO:  It's for a particular hardware interface.



STEVE:  Oh.



LEO:  So that's the engine, by the way.  Looks like a jet aircraft engine.  And the interface is, well, there you go.  You see those big plugs?



STEVE:  It does look like the inside of an airplane.



LEO:  Yeah, yeah, yeah.



STEVE:  Wow.  So anyway, so this...



LEO:  LTE, if you've got a Compaq LTE-5280, I would call McLaren.



STEVE:  Yeah, we'll see what they're willing to pay.  So anyway, in this case he says:  "A local garage called in a panic.  An old diag laptop had failed with a BSOD and was going round and round in circles, like the owner.  So I picked it up for a look.  I confirmed a hard drive issue; and, having worked in a local PC repair shop, where I often witnessed the proof of the power of your software to get hard drives back into bootable state, I headed to GRC for my own copy of SpinRite.  I grabbed a copy, and before lunchtime the machine was repaired, imaged, returned, and smiles all around.  Many thanks.  Kev Blythe, U.K., and a local garage."  So, Kev, thanks for sharing that.



LEO:  Yeah.  Maybe you should - I bet the McLaren folks have a SpinRite lying around.  Apparently it's DOS.



STEVE:  I have a lot of the early Compaq laptops.  I was, I mean, they weren't really practical back then.  They were monochrome.  But, hey, I'm DOS, so it was fine.



LEO:  It's DOS, yeah.



STEVE:  Yeah.



LEO:  Still use Brief.  All right, Steve.  Now, I should tell you, a little disclaimer upfront, SmartThings is a sponsor of our network.  They were a Kickstarter project which I invested in and love.  I bought the original Hub.  The idea was a single hub and a single app will translate and talk to all the other stuff.  And it uses most of the protocols.  And it's really convenient.  I got the upgraded Hub when Samsung bought them about a year ago, upgraded the Hub.  And I have all of the devices.  So tell me, am I in trouble?



STEVE:  So, yes.



LEO:  Oh, dear.



STEVE:  It's a case of the classic tradeoff between simplicity and security.



LEO:  Yeah.



STEVE:  And the initial pass being used for more than it was intended to be used for.  So, I mean, and the good news is there's a future in v3 of the ZigBee protocol.  ZigBee is a low-energy, low-power, low-data rate WiFi that links all these things together  There's also Z-Wave, and then of course Bluetooth Low Energy are the various technologies.  Bui ZigBee is the one that's - it's been around for more than a decade.  It's an IEEE standard 802.15, I think it is, dot something or other.  And so most of these devices are running on top of ZigBee.  And ZigBee is at v1.2.  I don't know what happened to 2.0 because everyone's already talking about 3.0.



And the problem is that - okay, there are a couple problems.  So as I understand it, Samsung purchased SmartThings from the SmartThings guys.  Without being a fly on the wall or being privy to their development decisions, I have no context for understanding many of the decisions which an analysis of the result demonstrates were made, which seem wrong in retrospect.  So it may be that what's happened is that, due to the way the Internet of things has evolved, we're using this in a way where I'm tempted to say we're misusing it, or we're abusing it, which is to say we're relying on a system that was never designed for security, for security.



And I was thinking back, for example, to the origin of email, and how we've often talked about how difficult it is to secure email because it was never designed to be secure.  And the people who designed it knew that it wasn't secure.  It was for academics to send papers and stuff back to each other.  And then fast-forward 15 years, and you're wanting to send corporate confidential documents to your patent attorney.  And it's like, whoa, whoa, whoa, whoa, whoa, whoa, whoa.  Email's not secure.  And it's like, well, yeah, but we want it to be.  It doesn't matter.  It's not.



So probably the SmartThings guys are absolutely aware of the fact that this should not be controlling your door locks.  This should not be used for an alarm system.  Fine, make your lighting green or blue.  Have it control your light bulbs and maybe tell you when your toothbrush has been recharged.  But don't use this for mission-critical things.  We didn't design it for that.



Yet the problem is that, wouldn't it be fun if you could use it for your home security.  There's a market there.  And it's like, yes.  But the infrastructure isn't secure.  And so you can imagine how it goes from there.  So it is a very cool, open standard, easy to develop for platform that is super popular.  It is by far and away the most popular standard that we have at the moment.  There's Samsung SmartThings.  There's Apple's HomeKit.  There's Vera Control has something called Vera3.  Google has their effort, Weave and Brillo.



And then there's something called the AllSeen - it's a little creepy name.  At least it's not "AllSeeing."  If it was the AllSeeing Alliance, that would be too strange.  But the AllSeen Alliance, which has something called AllJoyn.  And they're, like, the Who's Who.  Basically everybody else is there, more than 200 members.  I put a link in the show notes, Leo, AllSeenAlliance.org/alliance/members.  And, I mean, the page just scrolls on and on:  Canon, Electrolux, LG, Microsoft, Philips, Qualcomm, Sharp, Sony, Buffalo, ASUS, AT&T, Cisco, DigiCert, Honeywell, IBM, LiteOn, Netgear, Panasonic, and those are just the big names.  I mean, it's just, again, everybody else.  And if numbers matter, there's a lot there.



On the other hand, SmartThings is where all the action is today.  So it's certainly important for us to recognize that we're in early days.  And I think where we are is in this awkward place where we're wanting to do things that we don't have the underlying framework for yet.  And, boy, that's not a new tune.  That's the story of the Internet, where we decided, oh, yeah, let's add forms to the web so users can submit things.  And then people say, okay, but that's not secure.  Oh, well, but we want it to be.  But it's not.  Well, but, yeah, but we want it to be.  Well, okay, sorry, you know.



So several things.  Two researchers from the University of Michigan and a researcher at Microsoft Research did a deep dive specifically into the SmartThings system.  And they analyzed 499 different SmartThings apps, which are called SmartApps; and 132 different device handlers were examined.  I mean, there was, again, without talking to the original developers, without understanding why they made the decisions they did, we can't reverse-engineer their intent.  But, for example, there is a privilege separation model as part of SmartThings, where devices that share the Hub are intended to be isolated from each other, and separated.



Yet the nature of the way this was implemented forces what these guys call "significant overprivilege."  And I'll define that a little more closely with some examples.  But what they found was that more than half, 55% of SmartApps are overprivileged due to there being insufficient granularity in the privileges.  So again, I don't know why, maybe they tried to fit all the privileges into a 16-bit token, and so they just lumped them up by category rather than enumerating them for whatever reason.  But they also found that, once installed, a SmartApp is granted full access to a device, even if the app specifies needing only limited access.



So that, again, we want, in order to have a secure system, we want much tighter control.  SmartThings has an event-based architecture or platform, where devices communicate asynchronously.  They indicate what events they want to be notified of, and then receive that code, receive those notifications.  But what the researchers found was that it did not sufficiently protect events which carry sensitive information, such as door lock codes.



So I just picked four examples from their work, where in exploring this with no documentation or help from the developers, just doing essentially the work anyone could do, they remotely exploited an existing SmartApp, which is available on the app store, to program what they call "backdoor pin-codes," meaning additional pin-codes, into a connected door lock.  Their attack made use of what's called the LockCodes capability that the SmartApp never requested, but the SmartApp was automatically overprivileged due to the current protocol lacking sufficiently granularity.  They were able to eavesdrop on the event subsystem within an installation in order to snoop on the lock pin-codes of a Schlage smart lock when the pin-codes were being programmed by the user and then leak them using the unrestricted SmartThings-provided SMS API.



So essentially they installed the SmartApp, which was a spy.  And when the user programmed pin-codes, that was SMSed out to the outside world.  And the app that was created simply advertised itself as a battery monitor, and only requested battery monitoring capability, yet was able to do much more.  They were able to disable an existing vacation mode on the SmartApp, which was available in the app store, using a spoofed event to stop the vacation mode simulation.  So presumably that, like, shuts things down or turns something off when you say that you're on vacation.  And they were able to defeat that remotely.  And no capabilities were required for that attack.



And, finally, they were able to invoke a fake fire alarm using a spoofed physical device event.  And that attack showed that an unprivileged SmartApp was able to escalate its privileges to control devices it's not authorized to access by misusing the logic of benign SmartApps.



Then, separately, several years ago - because this, as you noted, was a Kickstarter a long time back - another researcher was able to trivially jam the well-known ZigBee radio frequency used by SmartThings and was able to enter a protected home.



LEO:  But this would be anything that used ZigBee would be susceptible to this; right?



STEVE:  True, true.



LEO:  Well, so it's not a SmartThings flaw, it's a flaw with any hub that speaks ZigBee.



STEVE:  Well, except that it also - the problem with SmartThings is that there was no acknowledgement given that there was jamming going on.



LEO:  Oh, I see.



STEVE:  And so you'd like to be able to at least say something is jamming us.  There's like a malicious signal in the air.  So, but again, I mean, so agreed, Leo, this is a problem with any radio frequency-based system which you're using for home security, which is using sort of consumer-grade technology.  So this guy was able to enter, tripping window and door alarms, and move through the interior, suppressing all warnings, and the system didn't acknowledge that there was a problem.



LEO:  Wow.



STEVE:  Yeah.  So, and I don't want to mischaracterize this final piece, so I'm going to share what Dan Lieberman, who is the head of research and standards at SmartThings, said just this last December, because there's something known in the protocol that they're built on, on this ZigBee protocol.  And again, it's not their fault that they're using ZigBee, except that ZigBee's what everyone uses.  And so my point is that it's not ready for primetime.  It's an insecure system.



So he explains in his FAQ at SmartThings, he says:  "There are really two distinct things at play here, and I'll do my best to describe them, what their potential impacts are, and what we're doing at SmartThings to eliminate or mitigate them.  I apologize in advance if this is overly dense, but there's a lot to get to here."  And of course it won't be dense for our audience.



He says:  "What are the issues?  First, as has been pointed out in this thread, there is a designed 'moment of insecurity' in the ZigBee Home Automation 1.2 spec that uses a well-known symmetric encryption key, known as the Trust Center Link Key, to distribute a unique network key when a device first joins the network."  Okay, now I should pause here and say that it's much worse than that.  It is possible, since this Trust Center Link Key is globally known, it's been tweeted, anyone with a ZigBee radio and an Arduino can become a device on anyone else's SmartThings network.  That is, it is trivial to authenticate yourself, unfortunately, to the network.  And the reason is that they want to make it easy.  And it is.  Unfortunately, it's easy to abuse.



Anyway, he continues, saying:  "This is a tradeoff that the ZigBee Alliance chose to make between security and simplicity, with a mitigated impact, given that an attacker would have to be capturing ZigBee network traffic at the same time that a new device is being joined to the network."  And that actually is not true.  Many people - there's a lot of demonstration of researchers who have just added themselves to existing networks.



He says:  "This method" - and this is the key, though, the good news is "This method has been removed from the upcoming ZigBee 3.0 specification and replaced with a process that requires a per-device installation code that is used to generate a unique joining key, which is then used to acquire the ZigBee network key.  The install code may be printed on the device, may be a 2D barcode that is scanned by a camera, or some other out-of-band method of passing the code from the end-device to the ZigBee Coordinator device - in our case, the SmartThings Hub - such as NFC or Bluetooth Smart."



Okay.  So again, where we are is, as he says, the acknowledged tradeoff between security and simplicity.  And the problem is we're in this place at the moment where an insecure technology that its designers probably never intended to be used for secure applications, is nevertheless being used for security applications.  But work is underway for the spec to catch up.  The problem is none of the existing devices will be 3.0 ZigBee.  It'll only be things after the ZigBee 3.0 spec happens which understand this secure protocol join technology.  And they won't be as easy to join.  But they shouldn't be because the fact that it's so easy means that attackers can do it, too.  And so nothing new here for our audience.



He says:  "The second issue described by the CognoSec" - there was a report that I've linked to at the bottom which is an extensive reverse-engineering analysis, which is different than the research that I talked about before, the U. of Michigan guys and the Microsoft Research researcher - "is a method known as 'insecure rejoin.'  Insecure rejoin also exists in the ZigBee Home Automation 1.2 specification as a tradeoff between security and simplicity.  This method allows a previously paired device to rejoin a network using the same well-known Trust Center Link Key in the event that the network key changed since the last time the device joined the network.



"This enables battery-powered devices that aren't always listening for commands from the ZigBee Coordinator - otherwise known as 'sleepy' devices - to rejoin a network if the network key changed, as the sleeping device wouldn't have received the new key update from the ZigBee Coordinator.  So if an end-device such as a motion sensor or contact sensor fails to join the network using their stored key, they can ask for the new key, which is transmitted using the well-known Trust Center Link Key."  Well, okay.  Wide-open security breach because it means that anything can pretend to be an "I don't know the network key, please send me the network key using the Trust Center Link Key, which is public knowledge."



So anyway, he says:  "The specific issue that CognoSec describes in their publication is the ability to spoof a device on the network to send a false insecure rejoin request, triggering the network key to be sent using the well-known Trust Center Link Key.  This bypasses the mitigation effect described above" - which, as I already said, isn't valid, I mean, isn't a mitigation even - as an attacker could, he says, potentially cause, well, yeah, I would say readily cause, "the network key to be transmitted at will."



So then he says:  "How is SmartThings impacted, and what are we doing about it?  SmartThings currently supports insecure rejoin, as many ZigBee Home Automation devices will only attempt to rejoin once with their stored key before reverting to an insecure rejoin mode."  Meaning that the SmartThings Hub and architecture have had to come down to the lowest common denominator in order to be functional with the least secure of any of the ZigBee Home Automation devices.



"This means," he says, "that without insecure rejoin, if there are any issues rejoining the network after a Hub reboots or a router in the mesh goes away, the device would not be able to rejoin the network and would be effectively stranded.  The only way to resolve a stranded device would be to delete it from SmartThings, perform a factory reset on the device, and put it back through the initial join process.



"We do recognize the security concerns presented by spoofed insecure rejoin requests, and since the issue was brought to our attention we've been developing an update that will give users the option of turning off insecure rejoin while we work to understand the broader negative impact of simply disabling it by default.  We hope to have this update in place within the next 60 days."  Well, that was written in December, and it's not in place today, so it's taking longer than they had hoped.



"Once the feature is available, we'll let you know how to go about disabling insecure rejoin.  In the longer term, the ZigBee 3.0 specification eliminates the insecure rejoin process."  And again I'll say the problem being that none of the existing devices will know about 3.0, and they will all assume insecure rejoin is available.  So I don't know how that's going to get handled.



"As for the initial joining process, SmartThings must support the standard ZigBee Home Automation 1.2 Trust Center Link Key join process because that's how nearly all ZigBee Home Automation 1.2 certified devices join a ZigBee network."  Again, lowest common denominator problem.  "And as an open platform, we support many ZigBee Home Automation-certified devices from many manufacturers.  As mentioned above, ZigBee 3.0 will eliminate the 'moment of insecurity,' but we're also exploring methods," blah blah blah blah.



Anyway, so you get the picture.  So I don't mean to beat up on them.  This is the dilemma of a system where user convenience completely trumps security.  And if it was light bulbs, you know, and your TV, I mean, things where security didn't matter, fine.  Unfortunately, it's because of the convenience and people saying, oh, hey, let's do home security.  Well, as long as you regard it as a toy, it's fine.  Don't expect it to protect you.  Or at least, I mean, in the default case it probably can.



But it is not robust by any means in the face of anyone who wants to defeat it.  At this point, it's just a wide-open system.  And again, not SmartThings' fault.  It's the fact that they're trying to be compatible.  In order to say they are ZigBee Home Automation compatible, they've had to accept the operation of things that are just not secure.  And unfortunately, it's brought the whole system down to that level.



So again, we're in the early days.  And I would simply urge people to wait until we have a standard defined.  If you really want security, just don't rely on this for any application where you're relying on it for affirmative serious residential security.  Use it for things that are fun.  And also consider that you're probably going to have to replace a lot of your early hardware once a secure spec occurs.



The good news is it is being worked on, and the problems are recognized.  And ultimately it'll be less easy to use.  But it needs to be less easy to use.  There has to be an out-of-band process.  And we've talked about this often.  I mean, that's why authentication is a problem.  It's why Signal and WhatsApp and Threema show you an optical instance of an identity, because you need out-of-band authentication.  There's no way around that.  Otherwise, anybody can pretend to be a valid device and get into your network.  So this is going to advance over time.  It's early days.  I would consider this a toy at this point, not something you use for mission-critical work.  But I think we're going to get there.



LEO:  Good.  But, now, just to be fair to SmartThings, this would be a problem with any hub that used ZigBee; right?



STEVE:  Yes.  Any.  Exactly.  It's not about SmartThings.



LEO:  I think SmartThings is getting the attention because they're responding to it.  I think most of them are - ZigBee's a widely used protocol.  So what we're really saying is don't use ZigBee for home security.



STEVE:  Yes.  Yes.



LEO:  SmartThings does support other protocols, like Z-Wave.  So I'm not sure, I imagine somebody's looking at Z-Wave, as well, which is a similar protocol.



STEVE:  Yeah.



LEO:  Sounds like these shouldn't be used for home security because radio jamming would be an issue.



STEVE:  Yes, yes.  And there are, like, 500 SmartThings apps and 50 other things apps.  I mean, they're, like...



LEO:  They're the king of the hill.  No, I agree, yeah.



STEVE:  SmartThings is the absolutely...



LEO:  Yeah, you're right, right.



STEVE:  And so of course they're the people that the people...



LEO:  I just want to be fair to them.  It's not something they did.



STEVE:  Agreed.



LEO:  It's a flaw in a protocol they support.



STEVE:  Although earlier I was talking about things that are hard to explain, the overprivilege of devices, the fact that unprivileged devices are able to do things, that's different than the ZigBee level.  That is about the SmartThings protocol.



LEO:  Right.



STEVE:  And it's not fair.  They're not here to defend themselves.  So again, and as I said, I don't mean to attack them.  I can't - I don't - there's no context for understanding what the security researchers found and were able to do.  And if someone sends me a link, I would certainly happily cover that in the future.



LEO:  Yeah.  Well, there you go.  Once again, Steve Gibson.  He is our support, our staff, our candle in the wind.



STEVE:  Our now-exhausted weekly...



LEO:  And he's sleeping well.  He didn't sleep well last night, but he's going to sleep well tomorrow.



STEVE:  Actually, I got eight hours because I gave myself a buffer, knowing that I might lose an hour and a half in the middle.  So I did get eight.



LEO:  The rest of us call it sleeping in.  He calls it "I gave myself a buffer."  That's Steve, right there in a nutshell.  I sleep in; he gives himself a buffer.  Steve.



If you want to know more about the Healthy Sleep Formula, the latest, GRC.com.  There's lots of free stuff, lots of interesting information.  We should say Steve's not a doctor.  He's just an interested amateur.  You know, take it with a grain of salt.



STEVE:  Yeah.  Well, and you know what I was realizing, too, is that the constant theme here is technology.



LEO:  Yeah.



STEVE:  And I think of technology as applied science.  So science is sort of the theory and an understanding of what happens.  Technology is taking that and making it do something.  And so for the last 10 years I've been learning about the science of our biology.  And so just in the same way, what intrigues me is the technology.  Like, okay, why does 200 milligrams of the same amino acid dribbled out over time have a phenomenally more powerful effect than that 200 milligrams released at once?  And I understand it, and half an hour ago I explained it.  And to me that's just fascinating.



LEO:  Oh, yeah, yeah.



STEVE:  And, oh, Leo, wait till you try this.  It is night and day.



LEO:  He's hacking his sleep.  



STEVE:  It changes everything.



LEO:  I can't wait.  You should also check out SpinRite.  That's there, too, GRC.com.  That's the world's best hard drive maintenance and recovery utility.  And also text transcripts of the podcast are at the website, GRC.com.  So are, of course, the podcasts themselves, the audio versions of the podcast.  And if you have a question for Steve, you can leave a question there, GRC.com/feedback.  He also accepts the occasional DM.  Well, he accepts them all, I don't know if he reads them all, @SGgrc on the Twitter.



We have full-quality audio and video on our website, TWiT.tv/sn.  Doesn't matter where you get it.  Either way, just fine with me.  Or subscribe, because it is a podcast.  That means there is an RSS feed, and you can plug that into your favorite podcatcher, and you should get it.  Or use the TWiT apps - they're everywhere - and subscribe that way.  But we do this show every Tuesday, 1:30 p.m. Pacific, 4:30 p.m. Eastern, 20:30 UTC.  If you want to stop by and watch live, you can also do that.  Make sure you're here next Tuesday and every Tuesday for Security Now!.  See you, Steve.



STEVE:  Thanks, Leo.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#560

DATE:		May 17, 2016

TITLE:		Z-Wave Goodbye

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-560.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I catch up with a busy week of security happenings, including Steve's true feelings about Windows, the Oracle/Google Java API battle, the end of "burner" phones, public audio surveillance, more John McAfee entertainment, a Ring Doorbell glitch, a loony Kickstarter security product campaign, some miscellany, and a look at the closed proprietary Z-Wave IoT home automation system and some hidden problems with one of its door locks.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We're going to talk about yet another home automation protocol, Z-Wave.  But we're also going to talk about lots of other stuff, including kind of a scammy Kickstarter he wants to warn you about.  Lots of news about Windows and why Steve still is in love with that great operating system from Redmond.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 560, recorded Tuesday, May 17th, 2016:  Z-Wave Goodbye.



It's time for Security Now!, the show where we protect you and your loved ones online.  "We" not really so much.  He is Steve Gibson, the security guru at GRC.com.  Hi, Steve.



STEVE GIBSON:  Hey, Leo.  Great to be with you.  So we jumped on ZigBee and SmartThings.



LEO:  Last week was anti-ZigBee week.



STEVE:  Yeah, with dumb SmartThings and anti-ZigBee.  And I thought, you know, it's not fair not to take a look at the competition, which is Z-Wave, which is the other very popular protocol.  By some counts, it is actually getting more uptake than ZigBee-based systems.  So I found a good piece of research that had been done.  And so the title for today's podcast is Z-Wave Goodbye.



LEO:  Yes, let's offend equally all sectors of the IoT economy.



STEVE:  Well, we've got a whole bunch of fun stuff to talk about.  And I'm glad that, I mean, I don't have that much to say about it except I want to, after last week's podcast and this week's, that'll give us some foundation to sort of talk about the direction I hope that home automation and the Internet of Things takes because it's sort of in its infancy.  And if anything, I would counsel people, where they can, to wait because nothing that we've really seen so far seems to be right.  And we really need an open consortium and spec.



And in fact, openness is one of the things we're going to talk about.  We're going to talk about the Oracle and Google fight over the copyright ability of the Java API.  I got a lot of tweets after last week.  I guess I must have come down really hard on Windows because people were, like, saying, "Why do you hate Windows?"  And so I wanted to correct the record on that and explain why I love Windows.  We've got some pending legislation requiring the registration of burner phones, which is a little creepy.  Surveillance microphones found outside of courthouses in San Francisco, hoping to pick up...



LEO:  I know.  That was amazing.



STEVE:  Yes.  McAfee is providing us another round of entertainment.  It's been so long since we've been able to have fun with somebody, like, inventing alien-strength cryptography.  And anyway, there is a - oh.



LEO:  Thank you.



STEVE:  I thought I was [indiscernible] speaker somewhere.  Anyway, there's just a loony tunes Kickstarter that I keep expecting to disappear because it's just - but the good news is I don't think it's going to fund because enough people look a this and go, eh, this doesn't sound right.  So we'll talk about that.  A controversial feature being removed from Windows 10.  A problem with the 7-Zip application that should cause everyone, if they're using 7-Zip, just to update it.  It's not a huge, end-of-the-world thing, despite what The Register said.  And then we're going to talk about, take a look at the Z-Wave home automation system.  So I think a great podcast for everyone.



LEO:  Jam-packed.



STEVE:  We'll see if we can fit it into two hours.



LEO:  As usual, jam-packed goodness coming up.



STEVE:  It's funny, I learned a lesson when I was, like, maybe six.  And understand, I've always been fanatically interested in engineering and technology.  And there's a picture that my dad took of me when I was four, wiring up a little light and a dry cell and a knife switch and things.  And I'll never forget going over to - my parents were going to another family's home for dinner, and they had kids around my age, and my sister and I went over.  And I saw, like, this - I don't think it was a keypad, but it was something to do with, like, there was an alarm system at this home.  And I asked the owner of the home, I don't remember his name - actually, I do, Chuck Snook.  But I said, "Hey, you have an alarm system," and he said yes.  And I said, "Tell me about it."  And he said no.  And I said, "What?"  And he says, "It's not something that one speaks about."



LEO:  One does not speak of one's canary.



STEVE:  You do not talk about one's alarm system.  That's supposed to be...



LEO:  It's really good, yeah.



STEVE:  And it just stuck with me, just like, wow.  I mean, the essence of that, that there are some things that are not spoken about.  And then I realized, yeah, I don't want to know because, if anything ever did happen, I would never want to be on the list of people who knew.



LEO:  That's true, too, isn't it, yeah.



STEVE:  So it's just like - and it just stuck with me.  It was like...



LEO:  The bank doesn't announce what kind of safe it has.  That would be foolish; right?  I know that because I talked to Mikko Hypponen, the legendary security researcher for F-Secure.  And I said, well, what do you - hey, you're like a security guru.  What operating system do you use?  He said, "I'm not going to tell you that."  He says, "I don't want to give anybody any attack surface at all."



STEVE:  Right.



LEO:  You just don't - I will not tell you.  It's security through obscurity, but why give that stuff away?



STEVE:  Correct.  Correct.  Okay.  So this week's photo on the first page of our show notes is an often-tweeted to me in the past week dialogue which explains what sort of the mysterious refresh two weeks ago of the 3035583 update.  3035583 is, of course, the Get Windows 10.  And what Microsoft did was they refreshed it in order to move this from you kind of have a choice to, eh, really not so much.  And in fact Paul Thurrott tweeted that this dialogue - he just sort of had his face in his hands.  It's like the worst user experience imaginable.  For somebody who doesn't want to upgrade, they're just not being given a choice.



And this is, you know, you have the big button that says "OK."  So the dialogue says "Windows 10 is a Recommended Update for this PC."  And frankly, I think some of the confusion comes from the fact that many users, I mean, for example, I don't mean to pick on Jenny.  Actually, she's off on a Mac now, so she's safe.  But this would come up, and she would think, okay.  And, like, whatever Microsoft wants.  And I think the problem is that Windows 10 is such a huge experience change, less from 8.1, but certainly from Windows 7, that people just sort of assume this is like security updates, and they're not going to see any difference.  Instead of, like, everything they know going away or being moved somewhere.



So anyway, it was the update two weeks ago to this 3035583 that changed this behavior.  And now what we're seeing is - and was it on The Tech Guy on the weekend, or maybe it was - I don't remember now what show it was.  But somewhere I know that you had encountered someone that this had happened to.



LEO:  Oh, yeah.



STEVE:  I think it was a photographer.



LEO:  This is pretty similar to the old one.  The point is that there's no, you know, typically you see an "OK" and "Cancel," or "OK" and "Not Now."  But the choices are "OK" or "Upgrade Now," which is identical.  That's the same choice.  And only if you - but this has been on there for a while.  There is a "Click here to change upgrade schedule or cancel scheduled upgrade."  You know, that's your only out.  But it's not apparent.  In the fine print there's an out, but the buttons that normally users choose from, there's no "Cancel."  But it's been that way for some time.  They must have - this is maybe worse than it used to be, but it's... 



STEVE:  Yeah, well, it's becoming apparently increasingly aggressive. 



LEO:  Yeah, yeah.



STEVE:  And so this is a good segue for me to talk a little bit about my relationship with Windows.  I think people may have gotten the wrong idea.  Sometimes I'm at fault for being a little too glib and sort of assuming...



LEO:  Well, you did say Windows 10 was a turd.



STEVE:  A flying turd.



LEO:  Oh, I'm sorry, a flying turd.



STEVE:  I did.  I did early on.



LEO:  That was Windows 10, not necessarily Windows in general.



STEVE:  Well, yeah.  And so I want everyone to understand.  I don't hate Windows.  I love Windows.  I have a multi-decade massive investment in Windows.  And it is today, remains the majority operating system, with more than half of the market share, even when you include iOS and Android, the large mobile platforms.  And if you look at only desktop, it's at 83.6%.



So, I mean, so my whole deal is that I want to be able to write software which helps people, is useful.  And I'm able to do that for a greater percentage of all users if I'm writing for Windows.  So even today I'm not regretting the investment that I made.  I'm not wishing that I knew how to program one of the much lesser desktop operating system platforms.  I'm 100% happy with my knowledge and understanding of Windows and my past with it.



My complaint is that my needs are at odds with Microsoft's needs.  And it's why I'm on XP still today and didn't move.  It would be nice if I didn't have to completely rebuild a system from scratch in order to move.  So certainly a compelling idea, a concept in Windows 10 is that it will now just evolve as it is, rather than you needing to just effectively start over.  But it is a problem for me that it's Microsoft's closed source commercial profit center.  And through the years they have needed to create new ones because we all know upgrade revenue was what fueled Microsoft historically.



And so the tension that exists with me is only that it's changing for Microsoft's purposes, not for mine.  And this matters to me because it's not a toy.  I don't just bounce around with it and use it for displaying social networking and Instagrams and things.  I mean, it is a tool.  I need it to work, and I need it to be reliable, and I need it to be stable.  And so, for example, when Microsoft says, as they are with Windows 10, "the most secure Windows ever," well, that's complete nonsense.



They also said that about XP.  And as we talked about at the time, it's impossible to declare a platform secure at its birth.  You may want it to be secure, but it's up to history to prove that.  And if XP is any example, it was the biggest security disaster we've ever known.  Code Red and Nimda and the MSBlast worm and, I mean, it provided material for this podcast endlessly because it was a disaster.  And Windows 10 will get fixed and patched.  But as we know, with security, leaving things alone rather than constantly changing them is the way for them to be secure, rather than constantly adding stuff.



And then on top of that, there's my feeling that I've talked about before, that the role of an operating system is to provide a file system for managing files, manage memory, manage applications, create a foundation for applications to run on, and provide I/O and networking services.  That's what it's for.  But it's the way that Microsoft is evolving it in their desperation to move people to something new.  None of those things are of use to me.  So as Windows 10 acquires increasing market share, we'll continue covering it.  There's nothing there that it offers me.  And so I will be, as I've said, moving to Windows 7 at some point.



And again, I think that people want me to love the Windows they've chosen.  And I'm not going to.  I love Windows itself.  But there's nothing that 10 or 8 or 8.1 have for me.  And I'm moving to 7 because I do need 64 bits so that I can use a lot more RAM.  And as protocols evolve, I do need to be able to be using the latest protocols and crypto suites and have those available.  So there are things that push me.  But in the case of an operating system platform, I'm definitely not in a hurry to be the first out there with arrows in my back because for me it's a tool.  And what I just want is stability.



So anyway, I just - I wanted people to understand that I don't hate Windows 10 at all.  You know, the fact that I created Never10 isn't a statement at all about Windows and Windows 10.  It was that Microsoft was pushing people.  And we see instance after instance of this push that Microsoft has to move everyone to 10 not being about what's best for the user.  It's what's best for Microsoft.  And that's a problem.  So Never10 just gives people some control over that.



LEO:  Yeah.  I'm the one who hates Windows.  If you want to tweet at me, that's fine.  Don't blame Steve for my aversion to it.



STEVE:  And I think...



LEO:  And I don't have the same concerns you do.  When I write programs, I write them for myself.  I'm not writing for anybody else.



STEVE:  And I'm glad you mentioned that because I have no problem, Leo, with you feeling however you want to feel.



LEO:  Well, I have the same feelings you do.  But the point is I have no commercial reason to use Windows other than so I can talk - I have to, and I do use it all the time, and I have Windows machines because I have to for a variety of reasons, mostly involving reporting on Windows.  But the way Microsoft - the road Microsoft's gone down, I agree with you, is not a good road for consumers.  So for those of us who don't have to use it, why use it?



STEVE:  And I've heard you taking a broader view, which I completely agree with, which is in general this is happening across the entire industry.



LEO:  Yeah, yeah.  For a while we were talking about user-centric businesses, and that seems to have gone away.  It's like, what's in it for me now for all of these companies.



STEVE:  Now it's all about us being leveraged in one way or another.



LEO:  Yeah, yeah.  And they use it against you, frankly.



STEVE:  Well, and someone tweeted that his Windows 10 was now pushing Office 386, or I'm...



LEO:  365, yeah.



STEVE:  Office 365.  And it's like, oh.  I just, you know, I don't want my operating system to be a marketing platform.  That just isn't what I want.



LEO:  There's ads now.  They put ads in the Start Menu.



STEVE:  Yeah.  I know.



LEO:  The thing is, at the same time as that's been happening, I feel like desktop Linux has gotten better and better and better.  You would be so much happier if you didn't have to use Windows.  And we're going to talk about open versus closed.  And I've always had a strong predisposition toward open platforms versus closed source platforms.



STEVE:  Yes, yes.



LEO:  And I think that the point you're going to make later applies more broadly than just to security and to - but we'll talk about it.



STEVE:  Yeah.  I completely agree.



LEO:  You've kind of come around a little bit because I've always said crypto has got to be open source.  I'd like some more open source hardware.  That's a tougher challenge, frankly.



STEVE:  Yeah.  And, I mean, for a true codesmith like myself, the idea of the source being available...



LEO:  It's awesome, yeah.



STEVE:  ...is compelling.  There have been times when I've been fighting with the Windows API.  It just doesn't seem to be doing what I expect it to.  And if I could open the source for it and look through it and go, oh, that's why, you know, and like there's a documentation error.  So the good news is, for the large part, Microsoft has been very good about it working right, for which I thank my lucky stars.  And historically their developer tools have been excellent.  I mean, it was a very nice, compelling place that brought developers in because their tools are among the best in the industry.  They're getting a little bloated and sluggish now, which is just not what you want in a tool.  You don't want to click something and have to wait for the menu to respond because then the system begins getting in your way.



But anyway, so I just sort of wanted to explain that it is a problem that Microsoft's interests and mine don't align.  Microsoft has historically been upgrading people for their reasons, not people's reasons, not providing any benefit that I could see in this march of operating systems.  And if people want the newest and the latest, I think that's fine.  But I'm driving a 2001 model car because it works, and it's got no Internet connection, and no magic keys, and it's unhackable, and it hauls my butt from one place to another just fine.  I'm just not a person who thinks that "new" automatically means "better."  That just isn't my style.  But anyway, I just wanted to correct the record because people seemed really annoyed with me, as if I hated Windows.  And I don't.



LEO:  I've been getting a lot of tweets too because of Windows Weekly.  And I don't remember saying anything particularly negative on Windows Weekly.  Maybe just the pro-Windows forces have rallied.  And I don't know why you would - I understand if you're a developer.  There's lots of reasons to be pro Windows.  I'm not saying that.  That's still the largest install base of users.  But I think it's a good - I think, you know, one of the things I say a lot, and I know you agree with this, is many users are buying more computing power than they need, more complexity than they need.



STEVE:  Oh, yes, exactly.  I mean, the idea of using a Chromebook for what you'd need, I mean - and because the platform is becoming huge and fragile.  And as we know, complexity is the enemy of security.



LEO:  Yeah.



STEVE:  And so security is just - it's going to be a constant problem.  And being able to just power wash your Chromebook and have it forgive anything that you may have done, that's wonderful.



LEO:  Yeah, yeah.  And there are plenty of people, I mean, look, I couldn't be using my HTC Vive or my Oculus Rift without a very nice powerful Windows 10 PC, and I was very happy to build one, and it's great.  If you're a gamer, you should be running PCs.  And the truth is the people who need to run PCs are sophisticated enough that they probably know how to keep them safe.  It makes me sad to see people who don't need full-powered operating systems like Mac and Windows running it, especially since they often don't have the skills to maintain them and keep them safe.  So it's a bad - but, gosh, most of the people listening to this show could use whatever they want because they know enough to keep themselves safe.



STEVE:  Well, because these systems have become incredibly complicated.



LEO:  They're very complicated, yeah.



STEVE:  Yeah.



LEO:  All right.



STEVE:  Okay.  So...



LEO:  Good.  It's not your fault, man, it's my fault.  Blame me, folks.



STEVE:  Well, no.  And I just, I think, again, I think sometimes I'm a little too glib because I just assume everyone has sort of been following along for the last 11 years.



LEO:  Yeah, yeah.  Me, too.  I do the same thing, yeah.



STEVE:  No, I mean, I have...



LEO:  People should know us better.



STEVE:  I have an unopened box of Microsoft Windows 3.1.



LEO:  Right.



STEVE:  And I have, just above where the camera is, a beautiful sandblasted bottle of cabernet that was part of the Windows 3.0 launch that Microsoft gave me.  I mean, I'm in all the way with Windows.  I just - I don't follow along with, as everyone now knows, certainly, with the latest major change because I look at it, and I think, okay, what does that do that I need?  Nothing.



LEO:  Right.



STEVE:  And it seems like a big step backwards.  So it's like, you know.  So anyway, I've got, you know, I have a Windows 10 machine, an 8.1 machine.  Of course the new mega box I built will be running 7.  And so I'm here, but I'm just not a fanboy, unfortunately.  I love it, and it's the platform that I develop for.



LEO:  See, that's - I wouldn't say I love it.  To me, I mean, you know, you can love your operating system.  It doesn't love you.  



STEVE:  I love XP.  I love XP, and I'm liking 7.  So this is really - you've been talking about this, and I just wanted to spend a little bit of time on this podcast, for those who aren't following this all very closely, and that is that for years there has been an ongoing battle between Oracle and Google over Oracle's contention that Google is violating Oracle's copyright in essentially using the Java APIs.  And the EFF has a nice summary where they wrote:



"At issue in Oracle v. Google is whether Oracle can claim a copyright on Java APIs; and, if so, whether Google infringes these copyrights.  When it implemented the Android OS, Google wrote its own version of Java.  But in order to allow developers to write their own programs for Android, Google's implementation used the same names, organization, and functionality as the Java APIs.  For non-developers out there, APIs (Application Programming Interfaces) are, generally speaking, specifications that allow programs to communicate with each other.  So when you read an article online, and click on the icon to share that article via Twitter, for example, you are using a Twitter API that the site's developer got directly from Twitter."



In May of 2012, so exactly four years ago, "Judge William Alsup of the Northern District of California ruled that APIs are not subject to copyright.  The court clearly understood that ruling otherwise," writes the EFF, "would have impermissibly and dangerously allowed Oracle to tie up 'a utilitarian'" - and this is the judge - "'a utilitarian and functional set of symbols,' which provides the basis for so much of the innovation and collaboration we all rely on today.  Simply, where 'there is only'" - and this is the judge again - "'there is only one way to declare a given method functionality so that everyone using that function must write that specific line of code in the same way,' that coding language cannot be subject to copyright."  I thought that was a beautiful piece of legal reasoning, that is, if there's only one way to do this, then it's not subject to copyright.  It's a recipe that you are following in order to create the result you want.



"Oracle then appealed Judge Alsup's ruling to the U.S. Court of Appeals for the Federal Circuit.  On May 30, 2013" - so that was one year later, one year after the May 2012 ruling that Judge Alsup gave - "EFF filed an amicus brief on behalf of many computer scientists asking the Federal Circuit to uphold that ruling" - that is, Alsup's ruling - "and hold that APIs should not be subject to copyright.  On May 9, 2014" - again, one year later - "the Federal Circuit issued a disastrous decision, reversing Judge Alsup and finding that the Java APIs are copyrightable, but leaving open the possibility that Google might have a fair use defense."



Then on October 6, 2014, so about six months after that, "Google filed a petition asking the U.S. Supreme Court to review the Federal Circuit's decision," so basically saying, okay, we're not happy with this appellate court's overturning.  Could the Supreme Court please look at it?  And again, the next month, on November 7, 2014, "EFF filed an amicus brief on behalf of many computer scientists that asked the Supreme Court to grant Google's petition for review, reverse the Federal Circuit, and reinstate Judge Alsup's opinion.  Unfortunately, in June of 2015" - so last summer - "the Supreme Court denied Google's petition."  So saying, no, we're not going to take it up.  "The case will now return to the district court for a trial on Google's fair use defense."



So that's the background summary from the EFF.  Oracle has got some strange thinking.  And I want to share it and quote it verbatim because it's interesting.  Oracle has expanded the scope of their ongoing copyright battle against Android and accused - and get this wording - "accused Google of 'destroying' the market for Java.  Oracle made a request last month to broaden its case against Android."



LEO:  That's a little farfetched.  I think they might have...



STEVE:  Oh, wait, it gets...



LEO:  ...in fact done more to help Java than anybody.



STEVE:  Exactly.



LEO:  With Minecraft, probably.



STEVE:  Exactly.  "Oracle made a request last month to broaden its case against Android.  Now, a supplemental complaint filed Wednesday in San Francisco district court encompasses the six new Android versions that have come out since Oracle originally filed its case back in 2010:  Gingerbread, Honeycomb, Ice Cream Sandwich, Jelly Bean, Kit Kat, and Lollipop.  Oracle charged:  'As with previous versions of Android, these six Android releases copy thousands of lines of source code from the Java platform, as well as the structure, sequence, and organization of that platform.  This copying constitutes copyright infringement.'"  Okay, now, that's okay.



Then they said:  "Oracle also noted that Android has expanded beyond smartphones over the years" - Android has expanded - " to include wearable devices, TVs, cars, and various household appliances.  Advertising on the mobile platform has increased dramatically as well, it said, thereby bolstering Google's core source of revenue and allowing the search giant to 'reap enormous profits from both its direct and indirect exploitation of the infringing code.'"



And finally:  "As a result of all this, Oracle's Java business has been seriously harmed, it said."  Oracle wrote:  "Given the widespread dominance Android has achieved with its continued unauthorized use of the 37 Java API packages over the past few years, Android has now irreversibly destroyed Java's fundamental value proposition as a potential mobile device operating system."  What?



LEO:  No.



STEVE:  What?



LEO:  No.



STEVE:  This is exact.  This is from the legal complaint.  Android and Google have destroyed Java's fundamental value proposition as a potential mobile device operating system.  What does that even mean?  Anyway...



LEO:  Well, it has, if you're going to do copyright, there's four fair-use tests.  And one of them is you don't get fair use if it damages the economic viability of the product, if you hurt sales.  So when you read these pleadings, it's very clearly aimed at the four tenets of fair use, which is the only defense Google has because this is such a weird, bizarro world to begin with.  That they even allowed copyrighting an API in the first place is bogus.



STEVE:  Yes.  Well, and so I liked your analogy when you were - I think you were talking about this on TWiT.



LEO:  No, it was The Tech Guy, with the brakes and the cars?



STEVE:  Yes.



LEO:  Yeah.



STEVE:  It's driving a car.  If we didn't have a single uniform car/driver interface, meaning brake and accelerator, and this is how the steering wheel works, it would be a disaster.  And as I though about this more, I realized that this notion of standards is what this comes down to.  And standards are such a part of our life that it's even - it's almost hard to appreciate the degree to which we depend upon them.  I mean, think about even threads, you know, nuts and bolts with standard threading.  If everyone just made up their own, so that screws were not interchangeable, it would just be a catastrophe.



And, I mean, so I guess my real complaint is that Oracle has historically benefited from the spread and the use of Java.  And so because they allowed that to happen, it's done as well as it has.  And suddenly now Google has capitalized on it, and they're wanting to take their marbles back and to say - or basically, essentially, this is a $9.3 billion lawsuit.  So they're saying we want some of the revenue which Google is obtaining as a consequence of doing a far better job in commercializing and leveraging Java for profit than we ever could.  Because all we're doing is telling everyone to get Java out of their computers.



LEO:  Yes.  I think you could make the case that Google singlehandedly kept Java alive.



STEVE:  Right, it's the only reason to use it today.



LEO:  Millions of developers have learned Java just so they can write for Android apps.  And by the way, if I were Google, I'd just change to Swift and say screw you, Oracle.  Just screw you.  Just, you know, just change it all.



STEVE:  Well, it is frightening precedent.



LEO:  It's a terrible precedent, absolutely.



STEVE:  And, for example, Intel never tried to say that our instruction set is copyrighted, and thus their - is it Citrix?  There have been several Intel clones, and of course AMD as the largest.  And that kind of competitive environment has resulted in everybody getting better products.



LEO:  Cyrix.



STEVE:  Cyrix, right.



LEO:  Remember that chip?  That wasn't a good chip.  But it was compatible.



STEVE:  Yeah.



LEO:  Couldn't have been without this.



STEVE:  Yeah.  And so historically...



LEO:  Phoenix BIOS, the Compaq computer, all of that.



STEVE:  Yes, yes.



LEO:  And on and on.



STEVE:  The BIOS is another perfect example.  The fact that IBM gave us an interface called the Basic I/O System allowed all kinds of programs to be written without regard for whether it was, for example, a color graphic display or a monochrome graphic display.  They were completely different.  They occupied different hardware regions.  Yet the BIOS hid those differences so that a program didn't have to worry about what type of hardware you had.  And that was an API, a standard.  But just in general this kind of standardization, you can sort of imagine sort of a Mad Max post-cataclysm world where you no longer have standards, and everyone's thing is just made from scratch, and they're not - nothing's interoperable.  And it would just be a bizarre place.



And I think one of the major things that the Industrial Revolution did was it taught us the power of interoperability.  And here Oracle is trying to say, yeah, we're going to get a toll for you using something that we purchased and never figured out how to use.  And lord knows, I mean, everyone - I was thinking of all the times in the past we've just been saying to people, if you don't know you need it, meaning Java, uninstall it because it's just bad.



LEO:  I'm telling you, Steve, you're going to get to the end of this show, and you're going to say - the moral of this show is going to be open source software, open APIs, and GPL solves all these problems.  And it's the only way going forward, frankly, because everybody's trying now to, you know, kill everybody else and make a buck.  And it's too bad.



STEVE:  Well, yes, yes.  And clearly, you know, we've talked about how increasingly more and more is sort of becoming generic, how once upon a time you could charge for a mouse that moved a pointer on the screen.  I mean, that was like a big deal.  You could get money for that.  A GUI, oh my goodness.  And now it's like, what?  It's just sort of become the way things work, and no one is able to leverage that.  And once upon a time an operating system was spooky and magical and sort of like, oh, my goodness.  Now you just download however many you want in a day.



So this is Microsoft's problem, is that they built themselves around a proprietary, closed source technology which is becoming a commodity.  There's a commoditization of operating systems and hardware such that none of this is as special as it once was.  Yet they're desperate to somehow hold onto it.  So, yeah, you and I are definitely on the same page.



LEO:  And we should be clear, so you don't get tweets, you don't hate Java, per se.  It's a perfectly good programming language, and the Java Runtime and the JVM is all a very clever way to make software write once, run everywhere.  What you hate and I hate and everybody should hate and uninstall immediately is the plugin that makes Java run automatically in browsers.



STEVE:  Right, because we should have never - it should never have been that an extremely powerful programming environment was exposed to a web server that you visited.



LEO:  Right, right.



STEVE:  I mean...



LEO:  That's like ActiveX, same problem.



STEVE:  All of our listeners know.  There's no way that's not going to end badly.



LEO:  Yeah, it's just it's a security nightmare.



STEVE:  Yeah.  I have Java on my system.  I have several major applications written in Java that require me to have the JVM, the Java Virtual Machine.  None of my browsers expose it.  And, yes, it's a very useful tool.  I completely agree with you.



LEO:  Yeah.  Minecraft's written in Java.  That's why it runs everywhere.  But it doesn't mean you have to let the browser do it.



STEVE:  On Friday the 13th I tweeted something that someone sent me, and I tweeted:  "Wow.  A new law proposed in the U.S. House of Representatives requiring legal identification for the purchase of 'burner' phones."  This is H.R. 4886.  If anyone is curious, I created a jump link, j.mp/HR4886.  And the legislation reads:  "To require purchasers of prepaid mobile devices or SIM cards to provide identification, and for other purposes."



And then it says:  "This Act may be cited as the 'Closing the Pre-Paid Mobile Device Security Gap Act of 2016.'"  And so it was interesting, a lot of people responded that, oh, yeah, that's the way it's always been in this or that country.  So I guess we're, at this point, it sounds like the U.S. has been lax and open and unconcerned, relatively, about the security implications of selling somebody a pre-paid mobile phone.  And now suddenly Congress is going to fix that oversight.



So Section 2 of this act - Section 2 is Identification Requirement - reads:  "Prior to the completion of any sale of a prepaid mobile device or SIM card to a purchaser, an authorized reseller shall require the purchaser" to provide the following information:  their full name, their complete home address, and the date of birth of the purchaser.



And then under Section 3, which is Identification Verification, there's either in-person sales or not.  They call it "other sales."  For in-person sales, "An authorized reseller making a sale to a purchaser in person shall verify the purchaser information provided under Section 2 by requiring the purchaser to display either of the following."  First, a photographic identification card issued by the federal government or a state government, or a document considered acceptable for purposes of identification of the Immigration & Nationality Act, or any two of the following:  a W-2 wage and tax statement received from the IRS, a Form 1099 Social Security benefit statement received from the Social Security Administration, a 1099 received from another agency of the federal government, or any document containing personal identifying information that the Attorney General finds by regulation to be acceptable for purposes of this section.



And then, if it's not in person, then for other sales, "An authorized reseller making a sale to a purchaser not in person shall verify the purchaser information provided under Section 2 by requiring the purchaser to submit the following information:  Valid credit or debit card account information, their Social Security number, their driver's license number, and any other personal identifying information that the Attorney General finds by regulation to be necessary for purposes of this section."  So again, it's not law, but it gives us some indication for where the wind is blowing.



LEO:  Fortunately, there's a gun show exception.  So you'll be able to buy your burner phone at a gun show.  And that's the good news.



STEVE:  Is that true?



LEO:  No.  But there ought to be.  Get your gun and your burner phone.



STEVE:  Because I was wondering, you know, I'm not a gun owner, and I watch all of this go by, all of the gun rights legislation stuff.  But I was wondering how this compares to buying a gun.  Is it now more difficult to buy a cell phone than it is to purchase a firearm?  I'm not, you know, I don't know.



LEO:  Yeah, you can go to a gun show, much easier.



STEVE:  Wow.  CBS in San Francisco uncovered the fact that hidden microphones were placed in bus stops and pedestrian walkway lighting by agents of the FBI to secretly surveil the environ around the courthouse for any, I guess you'd call it "ex parte" conversation that a client might be having with their defense attorney.



LEO:  That's terrible.  That's terrible.  Although, I mean, look, you're in public.



STEVE:  Yes.



LEO:  I don't think it's against the law.  I don't think a judge would allow you to use any ex parte conversations with your attorney.



STEVE:  Correct.  So it is not against the law.  An attorney was contacted by the reporter doing the story and said, and I quoted these in the show notes:  "Speaking in a public place does not mean that the individual has no reasonable expectation of privacy."  And "A private communication in a public place qualifies as a protected 'oral communication' under Title III, and therefore may not be intercepted without judicial authorization."



LEO:  Right.



STEVE:  And so, yes, I think - and so what may be happening is the FBI is hoping to gather some information that would give them some clues into other people that they should get formal surveillance warrants for and so forth.  But still, just a little bit creepy that in a place where you would not expect to be surveilled, that's going on.  On the other hand, there's video cameras pointing in every direction these days.



LEO:  Well, I guess that's the point is we're being surveilled all the time, and it isn't illegal to do so.



STEVE:  Yeah.



LEO:  It reminds me of the Philly police who had the car with the Google Maps logo on it because they wanted to hide the fact that they had all this machinery to scan license plates.



STEVE:  Right.



LEO:  And it feels wrong to me because it's like a fishing expedition.  They're just looking for stuff.  But it's not because you're in public.



STEVE:  Yeah.



LEO:  You know?  I mean, Google might have a problem with it.



STEVE:  I forgot to mention that Denise Howell, who was on - was she on TWiT?



LEO:  Yes, she was on TWiT.  She was great.



STEVE:  She was great and had some really good additional input on the Google/Oracle fight, explaining that, as I remember what she said, explaining that some of what the Supreme Court said was that enough of this had not been resolved in the earlier arguments.  And so it's not that the Supreme Court was never going to hear this, and that they might not reconsider taking it up, but that it was sort of done prematurely.  It was pushed to them before - and I don't remember any of the legal jargon that Denise used.  But she understood that we have a ways to go, and that all is not lost yet.



And I am glad that Oracle has decided to fight Google and not some much smaller fry that wouldn't be able to defend themselves because certainly Google can.  Although, boy, some of what the attorneys were apparently saying didn't sound very compelling.  Like the judge was more confused after the attorneys got through explaining it to him.



LEO:  This is the judge, by the way, we mentioned when this happened, who taught himself Java so he could - because I guess he went to - his undergraduate degree is in math.



STEVE:  You're right, we did talk about it four years ago.



LEO:  Yeah.  He taught himself Java.



STEVE:  And were very impressed that he learned what this meant.



LEO:  And his ruling originally was you couldn't copyright an API.



STEVE:  Correct.  He came to the right decision.



LEO:  Yeah.  But then it was overturned.



STEVE:  Yeah.



LEO:  So it's just, yeah, oy.  It just shows, you know, really the truth, what I take away from this, is if you can afford lawyers for years upon years, you can do anything.  You need to have enough of a bankroll to just pay the lawyers.



STEVE:  Right.



LEO:  And they can just tie things up forever.



STEVE:  And it's not like it's inexpensive.  It's like, you know, all of your money goes down the drain.  I remember someone talking about patents and was asking me why I didn't patent things.  And I said, well, you know, I guess there's a little bit of ego benefit.  It's like, oh, I have 14 patents.  I said, but on the other hand, you have to enforce them.  And enforcing a patent is incredibly expensive.  And as I said, I used to be an expert witness.  I used to agree to be an expert witness.  And I watched several technology decisions come down absolutely on the wrong side.  And I just thought, oh, boy, you know, this is - I don't want to be associated with this.  It's just too frustrating.



LEO:  Yeah.



STEVE:  Speaking of not being associated, John McAfee.  So McAfee is back in the news. 



LEO:  What's he up to this time?  The last we heard of him - by the way, John McAfee, inventor of the McAfee Antivirus.  Which he sold, we should say, to - who did he sell - not Symantec, Intel.  Intel owns it.



STEVE:  Yeah.



LEO:  And so it's not...



STEVE:  You've got to wonder whether they're sort of wishing they'd changed their name.



LEO:  Oh, they should change their name, yeah.



STEVE:  Really, because McAfee Antivirus is just like, wait a minute, is that the John McAfee Antivirus?  Well...



LEO:  And then he went - he took the money and went to Belize.  Kind of had a crazy lifestyle.  There was a murder charge.



STEVE:  Someone killed his dog.



LEO:  It was a thing.  He escaped.  And then the last we heard of him he said, "Oh, I can crack the Apple iPhone.  If I can't, I'll eat my shoes."  And then he said, "Well, I was lying.  I couldn't really.  But I'm not going to eat my shoes."



STEVE:  Right.  So now he decides - well, okay.  So the press covers this with "WhatsApp Message Hacked by John McAfee and Crew."  MSN reports:  "John McAfee claims to have cracked secure WhatsApp messages."



LEO:  My god.  Why do they still fall for this stuff?



STEVE:  Engadget:  "John McAfee claims he can read encrypted messages on Android."  And Gizmodo:  "John McAfee Apparently Tried to Trick Reporters into Thinking He Hacked WhatsApp."



So here's what actually happened:  "It appears that McAfee has tried to trick reporters again, by sending them phones precooked with malware containing a keylogger..."



LEO:  Oh, lord.



STEVE:  "...and convincing them he somehow cracked the encryption on WhatsApp.  According to cybersecurity expert Dan Guido, who was contacted by a reporter trying to verify McAfee's claims, McAfee planned to send this reporter two Samsung phones in sealed boxes.  Then, experts working for McAfee would take the phones out of the boxes in front of the reporters, and McAfee would read the messages being sent over WhatsApp over a Skype call.  McAfee offered this story to at least the International Business Times and Russia Today, and one additional source said he also shopped the story to Business Insider."



So this security researcher, Dan Guido, said:  "John McAfee was offering a couple of news organizations to mail them some phones, have people show up, and then demonstrate with those two phones that McAfee, located in the remote mountains of Colorado, would be able to read the message as it was sent between the phones."  Dan wrote:  "I advised the reporter to go out and buy their own phones because, even though they come in a sealed box, it's very easy to get some Saran wrap and a hair dryer to rebox them."



LEO:  What kind of idiot would just take the phone and go, okay, and not say, well, okay, John, I have my own phone.  Why don't we try it on this one?



STEVE:  And of course this bubbled up to Moxie...



LEO:  Oh, boy.



STEVE:  ...because WhatsApp uses Signal.  And we talked about Signal a few weeks back, and for me it was a love affair because I was so impressed with, I mean, the protocol and the technology and the cleverness of the solutions they had come up with.  So "Moxie Marlinspike, who of course developed the encryption protocol used in WhatsApp and assisted in implementing it, told Gizmodo that McAfee also admitted his plan to him."  Moxie said:  "Some reporters that had been contacted by McAfee about a demo got in touch with me" - contacted by John McAfee, not McAfee AV - "by John McAfee about a demo got in touch with me.  I talked," says Moxie, to McAfee on the phone.  He reluctantly told me that it was a malware thing with precooked phones, and all the outlets he'd contacted decided not to cover it after he gave them details about how it would work."



So remember in the case of the San Bernardino phone, he later said, yeah, I don't really have any way to do that.  And actually the phase he used was "I just thought it would generate" - and I'm sorry to say this word, but he used the term - "a shitload of press."



LEO:  Yeah, yeah.



STEVE:  And so he was doing it purely...



LEO:  What's bizarre is he's not - he isn't selling anything.



STEVE:  No.  No.



LEO:  What does he want the press for?



STEVE:  It's ego.



LEO:  Ego.



STEVE:  It's just he needs, you know, I mean, Washington has Donald Trump, and our industry has John McAfee.



LEO:  Yeah.



STEVE:  And both are providing a lot of interesting times and entertainment for the press.  So, wow.



There was a problem that was misreported by a lot of the media, the tech media, because there were some reports of users of one of our favorite products, the Ring Doorbell, seeing other people's video.  And I was very impressed with The Verge and their reporting.  And so I'll just share it because they did a beautiful job of explaining it.  And Ring's response was nice, too.



So The Verge wrote:  "Sometimes the wheels can just come off this whole Internet of Things thing.  When cameras are talking to the cloud, there's room for them to make mistakes, and these devices are filming pieces of your private life so that can be a little worrisome.  Unfortunately, some owners of the Ring Doorbell Pro recently experienced just this sort of mix-up when the 'smart' system showed them video of visitors outside  only it wasn't their own home that the feed was coming from.  They were getting video from other Ring users.



"Now, this isn't the worst thing," writes The Verge, "to have happen, securitywise.  It's pretty hard to tell someone's address from a doorbell camera, so once you come to the realization that you're not seeing your house, all you're left with is a video of a total stranger.  And for what it's worth, Ring claims that there were only 10 instances of this problem out of over millions of calls that its doorbells make each day.  Still, it's the sort of problem that absolutely can't happen if we're going to invite smart home gadgets into our everyday lives 24/7.  To that end, the company says it's taken steps so that this weird and," they wrote, "semicreepy bug won't repeat itself in the future."



And then Ring explained it.  They said:  "We use random numbers to" - and I should mention, some outlets said that they were - they got the story wrong, and they said that the random numbers lacked enough entropy so that there weren't collisions.  That wasn't it at all.  Ring said:  "We use random numbers to generate a call ID from Ring products.  We did a very robust beta test of the new Ring Video Doorbell Pro on experimental software; and, when we moved it out of beta for the commercial launch, some customers' numbers were in two different databases."  That is, they were still in the beta database, but then they were also in the commercial launch database.



So Ring says:  "As a result, those call ID numbers were overwritten.  We believe, based on all the data we've analyzed, that this caused less than 10 instances  out of more than four million calls per day and over 84 million calls total  where video recordings overlapped for Ring Video Doorbell Pro users only.  We're in the process of merging those databases so this will no longer occur.  This issue only affected Ring Video Doorbell Pro users, not users of our other products, Ring Video Doorbell and Ring Stick Up Cam."



So again, I'm impressed.  We talked about a problem that was found by some researchers on the Ring doorbell months ago.  And then, in following that up, we learned that the doorbell immediately updates itself the first time it comes online, so no one would ever have been in any risk, even if they had one that they bought off the shelf that still had that firmware.  The doorbell updates itself autonomously.  And in fact that led me to say that, you know, this has to be standard operating procedure for Internet of Things devices.  If they're going to be little operating systems running firmware, everything we know says that they're going to have security problems.



So much like routers that are connected to the Internet, the idea that Internet routers have old firmware is crazy because their nature is to be on the Internet.  They ought to be periodically reaching out and repairing themselves.  And so anyway, that's what that was about.  It was well contained.  Ring understood the problem and took care of it quickly.



LEO:  And we should mention Ring is a sponsor of this show, in fact of this episode of this show.



STEVE:  Right.



LEO:  And I did it on the air, and I hope people heard it.  For the people hearing it ahead of time I said, "Please, Steve, don't let that in any way affect your coverage of this story."  I didn't know ahead of time what his coverage was.  But there you go.  They are a sponsor.



STEVE:  Yeah.  And I actually own one.  I haven't yet installed it.



LEO:  Oh, you do?  Oh, good.



STEVE:  Yeah, yeah.



LEO:  I hope you enjoy it.



STEVE:  I completely think it's the right thing.



LEO:  Yeah.



STEVE:  Okay.  Now, this is just too wonderful.  The Kickstarter campaign is called DataGateKeeper.



LEO:  Oh, boy.



STEVE:  Yeah.  So the subhead is "DataGateKeeper:  The First Encryption Software Engineered to Defeat Hacking."  So no other encryption software that we're aware of, and apparently that they're aware of, has been engineered to defeat hacking.  Theirs is...



LEO:  It's the first one.



STEVE:  Theirs is the first.



LEO:  Nobody's ever done this before.



STEVE:  We can start feeling good right away.



LEO:  Damn, already.



STEVE:  They say:  "Every day you use flawed data protection, not by choice.  Due to these flaws, cybercriminals and hackers steal and profit from your stored and transmitted personal and business data every day."  Then they explain that "Designed before the turn of the century, AES, the Advanced Encryption Standard, is older than most of the cars on the road today."



LEO:  Wow.



STEVE:  Like the wheels are falling off, Leo.  "However, it forms the basis" - this older than the turn of the century - "forms the basis of our global data security protection.  And," they say, "It's failing.



"AES hacking solutions are readily available for sale on the dark web."



LEO:  What?



STEVE:  "In the late 1990s" - who even remembers back then - "AES, while under well-intentioned government oversight, somehow a backdoor found its way into this 'approved' data security solution, and has been widely reported."  What?  What?  Not here.  But apparently everywhere else.  Widely.  "The unintended consequences of this backdoor in AES allows for complete access to your data..."



LEO:  Oh, my god.



STEVE:  "...without your permission, to data monitoring, data mining and active eavesdropping, effectively voiding your right to privacy and confidently."  Okay, they meant confidentiality, but that word had too many syllables.  "So common is this practice, it has a name."  They named it, Leo, "active snooping."  Now they go on to explain:  "SSL is a myth."



LEO:  Oh, no.



STEVE:  Doesn't exist, Leo.  SSL, we wish we had it.  But, you know, it's just a myth.  "Cybercriminals know about these flaws and backdoor."  Because of course they hang out on the dark web, where this is all available.  "They are stealing, compromising, and profiting from your data every day."  Okay.  This is just too fun.



"The commitment to build an impenetrable data encryption solution, free of outside influence" - because that would be bad, of course - "began nearly three years ago," well after the 1990s that no one can remember.  "At the same time we were developing the DataGateKeeper, codenamed Deterrence, unfortunately over 150 million personal and confidential files were compromised, stolen, or hacked in the U.S. alone."  So, you know, while they were developing this amazing new technology, Leo, it was happening.  So clearly there's a big need for this.  "And those were just the ones," they write, "that were reported."  And then, "See the timeline."  They have a very nice timeline where they show all of this happening.



They write:  "We knew we needed to be successful.  To accomplish our goal of building an impenetrable data security solution, we first had to be able to beat hackers at their own game, using their own tools.  To do this, we reverse-engineered several commercially available automated password cracking programs, and two which are not, to understand these programs' methodologies."  Ooh, they used a long word.  "Following the decompile and disassembly procedure, we designed and built our own cracking program, and then we set about defeating our own new super hybrid.  Goal met.



"The DataGateKeeper Total Data Protection Software" - oh, and I should mention there's just little TMs all over this stuff - "is the first data protection software specifically designed and engineered to defeat automated hacking and code cracking programs.  Exclusively, the DataGateKeeper contains no backdoor."  Unlike AES, which they have already explained has a backdoor that you can find on the dark web, "DataGateKeeper contains no backdoor, exclusively.  And it disallows automated repetitions" - oh, why didn't we think of that? - "the core method used in brute-force attacks."  They just disallow that, so we can't have any brute-force attacks.  "We built an exploit that destroys their exploit."  And this goes on.  I won't belabor...



LEO:  My favorite line is "You don't have to be 007 to use the DataGateKeeper encryption software."



STEVE:  No.  One-click protection.  One click.



LEO:  And then they throw in stuff like "our pledge to those who serve to protect us, active duty and first responders" is completely gratuitous.  It's very weird.



STEVE:  Oh, it is.



LEO:  So it's not - and by the way, not cheap.  It's 99 bucks for a 64GB flash drive with the DataGateKeeper software preinstalled.



STEVE:  Oh, and they have a very nice full-chested woman animated there who shows the cap being removed from the USB thumb drive, just in case you weren't sure how to take the cap off of it.



LEO:  It both encrypts and decrypts.



STEVE:  Which is handy, you know.  Oh.



LEO:  I don't know how this stuff gets by the Kickstarter people.



STEVE:  That's why I kept worrying they were going to take it down.  Oh, there she is.  Look at that.  See how that cap comes off? 



LEO:  Comes off?  But, you know, it looks like it screws on and off.  Ooh.



STEVE:  Oh, well, you know, it is good to a hundred meters under water.  So you'd want to have it, you know, maybe it screws into a nice rubber O-ring so that it protects it from...



LEO:  You know, they need to change her T-shirt, though.  It says "MyDataAngelFloom."



STEVE:  Oh, no, we've got Data Angels, too.



LEO:  Oh, okay.



STEVE:  I didn't get to the Data Angel part.



LEO:  Oh, there's more.  Oh.



STEVE:  Oh, yeah.  Well, I'll just say that it's not exactly clear from their chart.  That chart, if you go down a little further...



LEO:  He's [crosstalk] Mr. Wizard.  That must be for you.



STEVE:  Yeah, see, now they're going to get technical because you have 512kb, and I'm not sure what that is.  But apparently it's six million times stronger.  The "exploit the exploit," they said:  "Following months of research, decompiling, and disassembly, we had a baseline for Deterrence" - remember that's the code name - "and developed our cipher utilizing cryptanalysis."  So they're just not screwing around here, Leo.  They're using cryptanalysis to develop their own cipher.



LEO:  Oh, here's the math.



STEVE:  Oh, yeah.  Yes.  Watch out.



LEO:  That's an animated GIF with the math.



STEVE:  Oh, goodness.



LEO:  Formula C(n,r) = n!/r!(n-r)!).  There you go.



STEVE:  I know.



LEO:  There you go.



STEVE:  And they say:  "We created a cipher that is six million times stronger than current data security."



LEO:  Sorry, that was factorial, not not.



STEVE:  Right.



LEO:  N factorial.



STEVE:  As proven by algorithmic mathematics, Leo.



LEO:  Ooh.



STEVE:  They employed algorithmic mathematics in order to determine that their cipher, which they developed with cryptanalysis, is six million times stronger than that crap from 1990 that we're all using by mistake.  So, yeah.  And somehow, with the 512kb level, you get 50 years of protection, and that's for civilians.  With the 768kb, you get 75 years of protection, which is for use by first responders, police, retired and active duty military.  But if you really want to go big, that's the 1024kb encryption, which gives you 100 years of protection, and that's for enterprise.  So, boy.



LEO:  Wow.  Oh, here comes Vinny in his car.  Oh, Finito Brothers.



MALE VOICE:  Jack needs a job done, Mona.  We hear you're the best hacker on the East Coast.



FEMALE VOICE:  AES, DES, Twofish, Blowfish.  Not a challenge.



LEO:  What's Bluefish?  Twofish Bluefish?  Made it sound like a Dr. Seuss story.  Obviously she means Blowfish; but, you know, okay, fine.  Okay.  Wow.  Okay.  But they have raised a little bit of money, I've got to point out.



STEVE:  Well, you know, it's the Internet, Leo.  And what was it that Barnum said, famously?



LEO:  Yeah.



STEVE:  Yeah, unfortunately.



LEO:  There's a sucker born every minute.



STEVE:  Oh, goodness.



LEO:  So nobody who listens to this show will be fooled by that.



STEVE:  No.  And many people were giving them a dollar, just to be able to post...



LEO:  To laugh.



STEVE:  Like, what a crock this is.  And then for a while they were rebutting them.  And then finally they shut down the $1 donation because people were just using it, they were willing to pay a dollar just for the opportunity to say, oh, come on.  Yeah, so we haven't had any fun like that in weeks.



LEO:  That was a fun one.



STEVE:  The problem is we did this 10 years ago, back when people were still creating their - but, you know, that was after 1990s, Leo.  It's like, people were still - they hadn't given up on creating their own cipher that they were absolutely sure was unbreakable.



LEO:  You know what's really old?  Math.  Man, that's, like, thousands of years old.  It's time we had something new.



STEVE:  Yeah, new math.  They tried to teach that to me in high school.



LEO:  Oh, yeah, we had to study that.



STEVE:  So a couple little last points here.  We did note that in the Windows 10 Insider Preview Build which was announced, 14342, way down at the bottom of Microsoft's blog at Windows.com, they noted:  "We've removed the WiFi Sense feature that allows you to share WiFi networks with your contacts and to be automatically connected to networks shared by your contacts.  The cost of updating the code to keep this feature working, combined with low usage and low demand, made this not worth further investment.  WiFi Sense, if enabled, will continue to get you connected to open WiFi hotspots that it knows about through crowdsourcing."  So I don't know how to read that, really.



LEO:  They're just turning off that thing, you know, that...



STEVE:  Yeah, and then...



LEO:  It never really was as bad as everybody was talking about.



STEVE:  No, because you really did have to go through, jump through some hoops to turn it on.



LEO:  That's why nobody uses it, probably.



STEVE:  Yeah.  Yeah.  But, I mean, I guess I don't really understand.  This seems a little strange that they're taking things away because there are people who are not happy that they're taking it away.



LEO:  Well, it happens all the time where a company doesn't want to support a feature that nobody used.  And they know who uses it because they've got all that telemetry.



STEVE:  I was going to say, I think that's probably the way Windows 10 will roll moving forward is that they'll add things and remove things and just sort of, you know, things that work and people like stay, and things that don't, they go away.



LEO:  Right, right.



STEVE:  People using 7-Zip, TheRegister.co.uk reported this as, you know, basically the end of the world as we know it.  In fact, it's far less concern than that.  The Talos security division of Cisco did find a couple heap overflow problems with the version of 7-Zip that was current at the time.  So the idea would be, if someone created a malicious zip file, and they were targeting you, and they knew you were going to use 7-Zip, then maybe there was a way for them to execute code in your computer with the privileges of your logged-on session.  And so that's the sum and total of it.  So if you're a 7-Zip user, there's a new version.  Go get it, and you should be fine.



Mary Jo Foley tweeted this morning, Paul retweeted and I retweeted, something that will be of serious interest for a subset of our listeners.  Many people in the last few weeks have been, for whatever reason, installing Windows 7 fresh and having huge problems with Windows Update.  And it has seemed to be going very slowly.  What Mary Jo just tweeted was that Microsoft - her tweet reads:  "Microsoft comes through with its promised 'convenience rollup,'" as they call it, "of updates and fixes for Windows 7."  So it's not technically Service Pack 2, but you could think of it as Service Pack 2.  So, and I got all three of them because I will be probably setting up versions of Windows 7 in the future.



The thing to remember is KB3125574.  KB3125574.  So what that takes you to is - oh, it's interesting, too, because you need a version of IE to run their whatever it is thing that they use.  I had Windows 7 rolling.  I fired up my Windows 7 box that I run Skype on, specifically to be able to do it, because I tried to get it on my XP system, and it just laughed at me.  But there's three versions of this, and they're, like, 374MB to 474MB.  And they are - it's a massive update rollup.  So you would install Windows 7 with SP1, that is, the version that includes SP1.  Then you would download or probably, either on that system download or have previously downloaded, this three to 400MB rollup.  And it's a single executable that just brings you current.  And so, yay, you know, thank you, Microsoft, for providing that. 



LEO:  I was talking to somebody, said it took him a week to apply all the updates with all the reboots and everything.  So a rollup is really much appreciated.



STEVE:  Yes.  And something seems to have gone wrong.  Actually, maybe it's over because, when I turned my system on this morning, I had a couple little things it wanted to update, but it knew about them quickly.  And last week it took, like, hours for that to happen.



LEO:  You have to think that this could also be part of Microsoft's attempt to move you to Windows 10.  Let's just make the experience, I mean, they've already taken stuff out of 7, and they don't seem to be patching it as quickly.  And I just - I wonder if they're just - this is part of the whole thing to get you to go to 10.



STEVE:  And we did hear even that some of their telemetry stuff was being pushed back into Windows 7.



LEO:  Right, it's in 7, yeah.



STEVE:  Which is a little annoying.  Well, I have a nice report from somebody who is not annoyed, and that's Brad in New South Wales, Australia.  His subject line caught my eye because it's "SpinRite success on iMac SSD."  This was dated May 14th, so just a couple days ago.  He said:  "Hi, Steve and Leo.  I've been listening to your show for about three years and really enjoy it.  I need to give a bit of background to this story as there is a lot involved."  And he actually gave me permission to cut it down, which I did a little bit.



He said:  "I have a 2009 iMac that hasn't missed a beat since I purchased it.  A year ago, it started to slow down somewhat.  Not wanting to fork out a few grand just yet for a new machine, I managed to pull the machine apart and upgrade the optical drive and 3.5-inch mechanical drive to two new hard drives."  Actually he says HDDs.  He says:  "One a higher capacity spinning drive, the other an SSD."  And he made the SD his boot device.



He says:  "The SSD was installed by a built-for-purpose blanking plate in the shape of the optical drive and was installed in the optical drive's original location."  So basically he took out the optical drive and put the SSD in in its place.  "Once the SSD was in place, the machine ran like new.



"Recently, the SSD was showing signs of failure and was no longer booting properly."  So it was beginning to die.  "Not wanting to pull the iMac apart again, I researched a solution.  I came across a video I think you mentioned in a previous episode where it was possible to run SpinRite from within Mac OS X.  I installed OS X onto an external hard drive and booted to it.  I then downloaded VirtualBox and ran up a DOS virtual machine.  I attached the dying SSD managed to the DOS virtual machine, then booted SpinRite with its ISO file.  I ran Level 2 on the iMac's SSD, and after rebooting she now runs just like new again.  Thanks for a great podcast.  Cheers, Brad."



LEO:  Woohoo.



STEVE:  So he came up with a nice solution.  In the future, with SpinRite 6.1, I will be making that all a lot easier.  But basically he had an SSD that he had installed into his iMac.  It was dying.  He arranged to run SpinRite on it, and it brought his SSD back to full speed.  So yet another instance of SpinRite doing its same goodness on a solid state drive as on one that spins.  Thus lots of future for SpinRite.



LEO:  Yay.  We continue on with Security Now!, Steve Gibson.



STEVE:  So in our talking about Dumb SmartThings last week, and the ZigBee wireless protocol, the alternative, which is by some measures even more popular than ZigBee, is Z-Wave.  And I thought, you know, having been rough on ZigBee, I ought to take a look at Z-Wave and just see how it measures up.  And what I found was that it is sort of a mixed blessing.



My biggest complaint with it is that it is utterly single-source closed and proprietary.  And I just don't think that is fitting for something that is going to be IoT.  I mean, if the Internet were that, we wouldn't have the Internet today.  And I think the things we connect to the Internet need interoperability, but also we need to be able to have people looking at them who want to.  So there is a very nice analysis of its security which was really difficult to do.  I mean, it was impeded deliberately by Sigma Designs that is the owner of Z-Wave, not wanting anyone to take a look at this, which is just, you know, that raises all kinds of, as our listeners know, security red flags.



In the abstract of their paper, they wrote:  "The ZWave wireless communication protocol has been widely used in home automation and wireless sensors networks.  ZWave is based on a proprietary design and a sole chip vendor.  There have been a number of academic and practical security researches on home automation systems based on ZigBee and X10 protocols; however, no public vulnerability research on ZWave could be found prior to this work.



"In this paper, we analyze the ZWave protocol stack layers and design a radio packet capture device and related software, which we named ZForce, to intercept ZWave communications.  This device enables us to decode different layers of the ZWave protocol and study the implementation of encryption and data origin authentication in the application layer.  We then present the details of a vulnerability discovered using ZForce tool in AES-encrypted" - it's too bad they don't have the Data Angel encryption because that would be six million times more difficult.  Anyway, "...AES-encrypted ZWave door locks that can be remotely exploited to unlock doors without the knowledge of the encryption keys."



So basically the system is completely closed.  The Z-Wave protocol is proprietary, developed by Sigma Designs.  They are the sole source of the chips that are in any Z-Wave-enabled devices.  The SDK is only available to OEM manufacturers after signing a non-disclosure agreement where the manufacturer promises never to make this available publicly.  So, I mean, this is as bad as it gets.  This is completely closed.  Researchers are forced to use, as these guys did, they used a Texas Instruments SDR, a Software-Defined Radio kit operating at the frequency of Z-Wave to do raw packet capture and pull the stuff out of the air.



They also found, and they didn't indicate which one, but they found a Z-Wave device whose firmware they were able to read out.  And so they reverse-engineered the firmware in order to obtain some details of the crypto algorithm that was not otherwise obvious from just looking at the data, so to speak, on the wire, in this case over the air.  And in doing that, they realized that a mistake had been made.  And they then developed the technology to unlock a door lock that they had examined without having any knowledge or access to the system.



It turns out that the main controllers have a factory-burned 32-bit essentially Home ID.  And so since only a single manufacturer makes these chips, that gives them 4.3 billion homes that would each have a unique Home ID.  And then nodes on the network, there's an eight-bit byte for node ID.  So you can have up to 200, and it wasn't quite 56, like 252, I think, because there were some reserved values.  But, you know, so plenty of nodes.  It forms a mesh network where nodes are able to be repeaters.



And in digging through this and reading all of the paper, on one hand I was impressed by the technology, and depressed by the fact that it was completely proprietary and locked up.  And it would have been deliberately made as difficult as possible for any security analysis to be made of the system.  And so it required them overcoming all these hurdles.  And so the point is it doesn't matter if NDAs are in place.  It doesn't matter if you try to hide this and protect it.  All of our experience says that's a fool's errand.  You can't do it.



And in fact these researchers demonstrated that they're able to reverse-engineer an endpoint, figure out everything that they need to know.  And when they did, they found a flaw.  So of course this raises the specter of who else knows about these flaws that are able then to, simply by sniffing the traffic - what they did was they sniffed the traffic, which is very active in the Z-Wave network.  That allowed them to determine the 32-bit Home ID and the eight-bit node ID of the door lock.  And then using a protocol mistake which they found, they unlocked the door, all from outside the house and wirelessly.



So overall my take is, as I said at the beginning of the show, what we need is, and I didn't have a chance to look at this big consortium of, as I described it last week, essentially everybody else.  I mean, it's like it was the Who's Who of everybody except Samsung and Sigma.  It has a different protocol that they're working on.  That's what we need.  It needs to be open.  It needs to be multisourced.  And ultimately, that's going to end up being the solution that I hope to see win.



So for what it's worth, this echoes what we said last week, which is that the systems today need to be regarded as sort of first-round IoT deployments.  For early adopters, that's fine.  I would say in the long term, since the eventual winning open system will require replacement of all of the existing investment, you may want to minimize your investment.  That is, rather than going out and just completely setting up your whole system this way, ultimately I expect the winner is going to be the open, well-analyzed, truly secure, you know, there's just no way that that kind of group, with all the understanding we have of how to do this right, there's no way we're going to get a system that isn't designed with the kind of security we want.



It may not be that light bulbs, you know, light bulbs you may be able to screw in, and they'll discover themselves and then be on the network.  But there will be, for example, high security links where you have to go through, you have to jump through some more hoops in order to authenticate the device to its home base.  But that makes sense if it's your front door lock or your burglar alarm system.  And also we have to look at the whole question, as we talked about last week, Leo, of using radio.  I mean, there are technologies, there's frequency-hopping and there's spread spectrum, neither of which these current systems use, which are far more jam-proof than fixed-carrier frequency solutions, which are trivially jammed.



So anyway, I think, I have no doubt that in the fullness of time the podcast is going to keep going.  And I imagine that at some point this large consortium of people working on the ultimate open standard for home automation, they'll have something.  And then I'll be able to really dig in and tell everybody how it works.



LEO:  And of course anything they do has to be patchable, has to be remote-patchable over-the-air updates, you know, so that when we do discover the flaws - because nothing, just because it's a consortium, and it's open, doesn't mean it won't be flawed.



STEVE:  Correct.



LEO:  But when we do discover flaws, there have to be procedures.



STEVE:  Oh, yeah.  Look at OpenSSL and Linux.



LEO:  Yeah, right.



STEVE:  I mean, we're finding problems in all of these things all the time because they're just so complicated.  So, yes, everything's going to have problems.  We just need a means of fixing them.



LEO:  And, you know, tomorrow I expect Google to announce some home automation stuff.



STEVE:  Yeah.



LEO:  They're one of the companies that's...



STEVE:  Is it Cricket?  No.



LEO:  Well, Chirp is a thing that they're going to do - it's an Amazon Echo device.  That's the rumor.  But of course they have Weave and Thread.  They have home automation protocols which are primarily open.



STEVE:  And that Hub thing that...



LEO:  The OnHub supports those, although it does nothing yet with them.



STEVE:  Fancy antennas, but, you know...



LEO:  Yeah, fancy antennas in there.  And by the way, I think it has the 802 dot, oh, I can't remember, is it 15?  There's a spec...



STEVE:  15.



LEO:  Yeah.  And is that Z-Wave, or is that ZigBee, or...



STEVE:  ZigBee.



LEO:  ZigBee.  So it has a ZigBee antenna in support, although it doesn't do anything with it.  So it's going to, you know, I think, yeah, you're right, I mean, this has been early days for a decade.  At some point it's somehow going to be figured out, but...



STEVE:  Oh, I think we're seeing it now.



LEO:  Yeah, it has to be.



STEVE:  I mean, with everybody's light bulbs and alarm systems  and, you know, it's going exponential.  It's a good market opportunity.



LEO:  Well, the smartphone has really helped because the smartphone gave everybody a control device.



STEVE:  Yes.



LEO:  And at this point we're in a situation where everything, like Ring, like Hue lights, they all have their own app.  And so SmartThings was an attempt to, and still is an attempt to make one app that can talk to everything.  That's why it supports both ZigBee and Z-Wave.



STEVE:  Right, and an app ecosystem, too, because they have an open programming environment.



LEO:  That's right.  But so does Apple.  Apple has Home Kit.



STEVE:  Right.  It's this, then that sort of interface.



LEO:  Right, yeah.  And Google and Apple are doing that, as well.  So, you know.  And I think tomorrow we're going to be doing a live broadcast of the keynote tomorrow at 10:00 a.m. Pacific, 1:00 p.m. Eastern time, 17:00 UTC.  Andy will join me, and Ron Amadeo from Ars Technica.



STEVE:  Great.



LEO:  And so, yeah, we're going to - Russell Holly.  So we're going to cover the keynote, and I think there'll be a lot to say there about home automation.  And I think Google will do the right thing, if anybody does.



STEVE:  Oh, and I know it's a huge interest of our listeners.



LEO:  Oh, yeah.



STEVE:  And the security of it is obviously important.



LEO:  Oh, yeah.  And it seems prudent at this point not to use it for home security.



STEVE:  Yes, yes.



LEO:  That would seem to be a wise idea.



STEVE:  Yes.



LEO:  That's why actually most home security, good home security systems, don't they use - they don't use cell phones, they use landlines.



STEVE:  Yeah, mine does.



LEO:  We had to install a landline because...



STEVE:  Mine does, yeah.



LEO:  Because of the jamming.



STEVE:  Yeah.



LEO:  Steve does this show every Tuesday, 1:30 Pacific, 4:30 Eastern, 20:30 UTC.  You can watch it live, participate.  I guess Q&A next week?



STEVE:  Yes, let's do a Q&A next week.



LEO:  Okay.  So go to GRC.com/feedback, if you want to leave a question.  Or Steve will take DMs on Twitter, or I guess regular open messages on Twitter.  @SGgrc is his handle, @SGgrc.  As you're traveling the web, do stop by GRC.com and pick up a copy of SpinRite.  If you've got a hard drive, you've got to have some SpinRite.  Get some SpinRite in your life, the world's best hard drive maintenance and recovery utility, even for SSDs.  You can also find lots of other stuff, including - people were asking about Steve's latest Healthy Sleep Formula.  It's in there.  He doesn't make any money on that.  He's not selling pills.  It's not a vitamin shop.  He also...



STEVE:  No, in fact I've had people asking for me to use affiliate links.  And I said no.  I just...



LEO:  Good for you.



STEVE:  It's just too creepy.  I just - I don't want there to be anyone who says, oh, yeah, you're just doing this so that you get affiliate credit.  It's like, no, I don't want any credit.  If everybody is sleeping better, that's great for everybody.



LEO:  You'll be wide awake for this show.



STEVE:  That's right.



LEO:  Coffee is not a substitute for a good night's sleep, my friends.  You can get audio and video, as well, of this show on our site, TWiT.tv/sn.  And the best thing probably is to subscribe.  That way you get it each and every week.  And you know what, it doesn't matter to us how you get it, just get it.  We just want you to get it every week because there's always something good on Security Now!.



STEVE:  So far.



LEO:  See you next week, Steve.



STEVE:  Thanks, my friend.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.




GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#561

DATE:		May 24, 2016

TITLE:		Listener Feedback #234

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-561.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I catch up with a busy week of security happenings, including a surprising end to the TeslaCrypt file encrypting malware, Google's increasing squeeze on Flash, 117 million old LinkedIn account email and hashed passwords for sale, the encryption technology Google is using in their new Allo messaging app, Cory Doctorow keeps fighting for our rights, some fun miscellany, and questions and comments from our terrific listeners.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We've got all the security news including, oh, man, more problems than you could shake a stick at, a complete indictment, frankly, of Microsoft and their Windows 10 upgrade process.  Plus 10 of your questions and 10 of Steve's answers.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 561, recorded Tuesday, May 24th, 2016:  Your questions, Steve's answers, #234.



It's time for Security Now!, the show where we protect you and your loved ones, your privacy, your security online, thanks to this man right here, a hero for our times.  Ladies and gentlemen, I give you Steve Gibson.  Hi, Steve.



STEVE GIBSON:  You know, every Tuesday evening, after your group pulls this together and gets the audio posted, I download it in order to recompress it for Elaine.  And I listen to the beginning of this, and I think, you have achieved such consistency through the years.  It's the same sort of rev up and go.



LEO:  Some would call it consistency.  Some would call it a kind of a boring sameness.



STEVE:  Well, and also on The Tech Guy on the weekends, it's, "Well, hey, hey, hey."



LEO:  Right.  That I do on purpose.  But, you know, that was because I couldn't say "Good morning" or "Good evening" because The Tech Guy is heard across the country.  So I needed a greeting that was agnostic, time agnostic.



STEVE:   Yeah, so sort of a Yogi Bear kind of thing.



LEO:  We even have some stations tape-delaying it.  I can't - yeah.  [Crosstalk]  Hey, hey, hey, Boo-Boo.  It's time for tech talk.  So it's a Q&A day today.



STEVE:  Yeah.  We've got lots of fun stuff in the mailbag, since we had skipped several Q&As, although we did do a double Q&A three weeks ago because, remember, there was so much to talk about we only got, like, four done out of the 10 that we had scheduled.  So I had 352, I think it was, pieces of unread mail when I dumped the mailbox, and so found some great things.  And also, oh, you know, just a crazy week.  Not a ton of news, but interesting stuff.



There was a surprising end to the TeslaCrypt encrypting malware episode.  Google has announced their plans to continue putting the squeeze on Flash, and we'll talk about the details of that.  Of course, appeared on the Internet for $2,200 was the sale of an additional 117 million old LinkedIn email addresses and passwords from 2012.  So we're going to cover the details of that.  We have an interesting little tidbit I just sort of liked about the underlying technology of Google's announced-last-week Allo messaging system. 



LEO:  Oh, I can't wait.



STEVE:  Cory Doctorow has been, it turns out, doing a series of posts.  And I didn't pick up on it until the most recent one, but it's really significant, about, again, the entertainment industry struggling to close content on the Internet.  And so I want to talk about, I want to share what he wrote because it's not very long, and actually I think it's really important that we understand at the technical level what he's talking about.  And then we've got some fun miscellany and feedback from our listeners.  So I think another great couple hours for our listeners.



LEO:  And I see behind you that you have received something new and exciting.



STEVE:  Well, yes.  When you mentioned the Ring Pro, or I did, someone did last week, because it was on - I'd seen it on Amazon, or I think I'd seen it on their site, and I didn't know what it was.  And then I thought, hey, I don't think it's been four weeks yet.  And sure enough, it had only been three since I ordered it from Amazon.  So I was able to return it.  And then I went to Ring.com/securitynow and saved myself shipping and got the Pro.



LEO:  Smart man, yeah.  Actually, I don't know, did you save shipping?  Because I thought that they said that free shipping only applies to the original Ring.  So, good.  Good on you.



STEVE:  Yeah, yeah.  So, and what I like about it is that it is - they solved the problem of the bezel coloration.  So you get all - you get three different bezel colors.



LEO:  Oh, they just snap on bezels, yeah.



STEVE:  Yeah, a silver...



LEO:  Otherwise you have to order the one you want, yeah.



STEVE:  Right, a silver, a brown, and a black.  And then the unit itself - or I guess a white, a brown, and a black.  And it has the silver one snapped on it already.  And as you said last week, basically there's not a lot of difference, but it is 1080p rather than 720p.  So I figured, oh, since I hadn't drilled any holes yet, I might as well take the time and upgrade to the highest resolution one.



LEO:  Yeah.  Steve Gibson, Leo Laporte.  Let's get to the security news.



STEVE:  So this was really odd.  And there are a couple things that strike me as strange about this.  We've talked often about the so-called TeslaCrypt, which was one of the early and - I hesitate to use the word "successful" in the case of file-encrypting malware, but it was very successful, meaning that it generated a lot of income for the cretins who created it.  And as all of our listeners know, this is something that people would get their machines infected with inadvertently.  And it would identify basically all of their content files, stuff that was the irreplaceable, unreinstallable portion of their world - their DOC files, their MP3s, their spreadsheet files, whatever - and encrypt it with a key.



And the confounding thing about this was that the technology was well designed.   Before it did any encryption, it would contact a master server.  And from the server, which would generate a key pair, it would use public key crypto to encrypt the files such that only the key which could decrypt them, that is, the matching asymmetric key, was available on the server.  It was never on the victim's computer.  So that made the decryption irrevocably one-way.  There was no way to reverse this after it was done.  And believe me, lots of security researchers looked at it carefully.



Now, we have talked about some "me, too" clones of this that were less well done, where they did leave the key inadvertently around so it could be found, and other versions or other complete, separate builds - not builds, well, just separate malware was doing the same kind of thing.  So what was covered in the last week was that TeslaCrypt was shutting down.  And so in what was a surprising end to this reign and run of TeslaCrypt, an analyst at ESET, noting that they were sort of winding operations down...



LEO:  It's just so weird.



STEVE:  It is.



LEO:  What, did they make enough money to buy the Tesla, so now they're quitting?  What's the deal?



STEVE:  Well, and I don't get - because in some of the coverage they talked about TeslaCrypt had been slowly closing its doors while their previous distributors had been switching over to distributing the CryptXXX ransomware.



LEO:  Huh.



STEVE:  So there was another whole family of ransomware.  But the notion of having distributors for file encryption malware just boggles me.



LEO:  It's a business now, yeah.



STEVE:  Yeah, exactly, boggles my mind.  So this ESET researcher posts on TeslaCrypt's support chat, asking if, since they were apparently shutting things down, would they consider releasing the master decryption key?  And they did.



LEO:  What?



STEVE:  Now, first of all, I didn't know there was a master decryption key.  And in trying to go back and find some early reference to there being one, unfortunately the only thing Google would show me was like all of the news, the recent news about there being a master decryption key, and I didn't spend a lot of time trying to dig into the past.  But I don't remember at any point in our coverage there being an idea that there was a galactic master key.  Somehow...



LEO:  That's what they gave the NSA.  That was the backdoor key.



STEVE:  Right.  So now this ESET researcher, just he knew or he assumed there was one.  So he...



LEO:  Wow.  He probably went, you know, he went through the code, obviously; right? 



STEVE:  Yeah, and he said, hey, would you guys let that loose?  And they said yeah, sure.  So they posted it.



LEO:  Sure, we're not using it.  Wow.



STEVE:  So as a consequence, two things now exist.  Over on the BleepingComputer.com site - which we have been referring to since the beginning of this whole drama with file-encrypting malware because they've been really right on the leading edge of news and coverage.  They've got some good forums and lots of good tools and feedback.  Someone there, one of their contributors has created TeslaDecoder v1.0.  And the way the coverage read, apparently earlier, pre-1.0 versions existed, but it wasn't done.



So when this master key was released, TeslaDecoder went to v1.0, and it is now available.  I'm not sure how it's valuable because of course it would require somebody who had maybe never succumbed to the blackmail, decided they could live without their files.  So, you know, maybe there are hard drives around that were TeslaCrypted and, for whatever reason, ransom wasn't paid; decryption didn't work; they waited too long.  Remember there was the whole timeout.  You had, like, what, 72 hours, and then after that it was over, they weren't going to help you any longer.  So maybe there are drives around that have encryption still in place, in which case this is one of two tools that would be able to decrypt those files.



The other is that ESET has their own.  ESET's site is WeLiveSecurity.com.  And they've released a nice-looking command line.  So you fire up a DOS command shell window, and theirs runs in a command-line environment; whereas TeslaDecoder has a GUI with drop-in fields and buttons and all kinds of bells and whistles.  So anyway, I thought it was just - who knew that there was a master decryption key, and that these guys would say, yeah, yeah, you know, we're done, so here you go.



LEO:  So funny.



STEVE:  If there are any drives lingering out in the world that are still encrypted, obviously you're not going to pay us or you would have already, so here you go.  Here's your master decryption key.



LEO:  Amazing.



STEVE:  Weird.



LEO:  Weird.



STEVE:  Yeah.  And creepy that there's, like, the previous distributors of TeslaCrypt, oh, they've all switched over to CryptXXX.  So for whatever reason.  Maybe the TeslaCrypt people just got tired of doing this.  I don't know.



Speaking of tired of doing things, Flash continues to get the squeeze.  Google announced - and I presume this was at I/O last week because this is May 15th is the date of this coverage from VentureBeat, that picked up the story.  Although then I followed the link to Google's - they had some kind of funky developer-looking slides.  So, yeah, that must have been from I/O because they also said on the slides, you know, all of this terminology is subject to change once people with suits look at it.



So to recap, last September, so September of 2015, what, eight months ago, Chrome 45, Google's Chrome browser v45, began pausing any Flash content that was not - and I remember we had fun talking about this at the time because Google's terminology was not central to the web page.  And it's like, what?  So Google's now deciding what Flash content is important.  I mean, that's good.  We'd rather that they just paused everything.  But in this case there are, like, sites that rely on Flash.  They didn't want to disturb those.  But things like ads.  If you had a Flash ad where things were bouncing up and down and flashing in your face and just really being an annoyance, Google said, eh, no.  We're just - that's an ad.  That's not central to the page's content. We're just going to pause it.  And you could wake it up if you wanted to, but we were all happy that they had put those things to sleep.



So now, essentially one year later, meaning in Q4 of 2016, which would put us back to September again, Google intends to further squeeze this.  Again, well, but this time also applying these rules to the central content, as they define it, such as Flash-based games and videos.  So they call this new initiative, which will happen, well, we're still a ways away, but presumably like a year from when they did the last one, so Q4 of 2016, they're calling it "HTML5 by Default."  And again, I don't know if that'll be the final term.  That was the name of this in the developer slides.



So Flash Player will continue to be bundled with Chrome, so it'll still be there.  However, its presence will not be advertised by default.  Now, what that means is that, when you've got script running on a page, there is an array called navigator.plugins, and another one, navigator.mimeTypes.  And so script is able to enumerate through the entries in the array to determine all the plugins that the browser has and all the mime types.  Mime is like .html, .mp3, you know, it's basically the type of file that the extension represents.  And so by not advertising those, what that means is that Flash will be there, but script that checks the browser to find and launch Flash won't find it.



So what Google says is, as a consequence, sites that offer both Flash and HTML5, but bias themselves to the past, essentially, to Flash, they will no longer do that.  They'll then, feeling that Flash is apparently not available, will fall back to - or actually fall forward because HTML is where we're going - to HTML5 for rendering what they would have otherwise rendered with Flash.  So that becomes, as Google puts it, HTML5 experience becomes the default.



Then, when a user encounters a site that needs Flash Player, a prompt will appear at the top of the page, giving the user the option of allowing it for a site.  So now we're getting to the "do you want to run Flash" on this domain, or on this website, behavior.  So again, sort of just putting up an additional barrier.  You can click through it.  If you do, Chrome will remember your choice so you're not forced to do that every time.  So it'll honor whatever decision the user made, pro or con, on subsequent visits.



Then there is a concern that, on the very most popular sites, which are still dependent upon Flash, that this would create what Google is calling "overprompting."  So they will separately maintain a whitelist in Chrome of the then Top 100 sites based on aggregate usage.  And that whitelist will prevent that extra prompting question from coming up and just allow Flash to run.  So sort of a heuristic tradeoff.  And that whitelist apparently will be groomed and evolve over time as sites get their acts together, finally say, okay, I guess it's time for us to stop using Flash and do that.  Google will bring in some other site and presumably remove the one that got things fixed.



Now, this is where it gets a little kludge-y because basically all of this behavior is a kludge.  This is not the way anyone intended the Internet to work, where the browser pretends not to have services to offer, and it says, oh, well, unless you're really important, then we'll let you have them.  Or if you're not, then we're going to make the user go through extra hoops and all that.  Okay?  So as a consequence, sites like Pandora.com will direct the user to download Flash Player when it determines that the browser doesn't support Flash, which is now the faade that Chrome in September, starting in September, will be presenting.



So Google doesn't want that to happen because you actually do have Flash.  So somehow they're, like, special-casing that behavior.  And if Chrome sees some sites like Pandora, and I guess it's on a site-by-site basis that they're checking for this, they - it just sounds horrible.  They intercept the request to download Flash Player.  Or maybe that's what they're doing, so they're able to get all sites because you get an intercept page from Pandora saying, oh, you need Flash Player to proceed, you know, click here to download Flash Player.  So when you do, you click a link, get.adobe.com/flashplayer.  Google Chrome will see that, will intercept and cancel the navigation, and instead present the Allow Flash Player "infobar," as they call it.



So as I said, just a nightmare.  But I don't - obviously this is all aimed at increasing our stability of the web, using Chrome's power to put pressure on websites to move away from Flash.  And we know that, if pressure wasn't applied, all of the experience that we have of these technologies on the 'Net, which have so much inertia, is that Flash would never die otherwise.  And we all understand it's time for it to die.  It's only inertia today which is keeping it going.  Anyone starting from scratch now would just use HTML5.  So there will be a policy setting available to enterprises which gives them the ability, enterprise-wide, to override all this nonsense with "Always run Flash content."



Now, maybe that's only - it wasn't clear whether that was browser-wide or just for their site, so that their own users wouldn't be harassed if they wanted to run Flash on their own corporate site.  But under user-accessible, that is, for all of us, content settings, there will be the option of specifying how we want this handled.  So we'll be able to, on an instance of Chrome basis, to select always run Flash, allow sites to ask to run Flash, ask the user to always be prompted about running Flash, or never run Flash.  So very much the way like cookies are handled, like keep them forever, never accept them, or keep them only for this session.  Similarly, we have four different settings for how the user wants Flash handled.



So I think this is - it's unfortunate that this is what's required.  I can't think of a better solution.  We do want Flash to get phased out.  We've got good alternative replacement technology now.  And so Google is saying, okay, we're taking a stand.



LEO:  People are asking why is TWiT still using Flash.  We don't use Flash; but some of our providers, not all, but some of our providers do.  And so it depends on what stream you're getting and so forth.  But obviously we don't require Flash because you can visit our websites on iOS and Android and watch live video.  So some of this is a signaling issue with your browser and our site and so forth.  But Ustream, for instance, if it sees that you're not supporting Flash, will give you an HTML5 stream or an HLS stream.  BitGravity I think is Flash only.  I don't know if Twitch offers the alternative.  Probably does.  Amazon owns Twitch now.



STEVE:  Yeah, I don't think we're ever really going to get rid of it.  These things just never completely go away.



LEO:  We don't provide our own - we stream to these providers, and then they choose what to send you.  So we don't really have that much control over it.  We pay, because we wanted to be on iOS, we do pay a company called Flosoft for an HLS stream that works on iOS, and that's what you'll get on the iOS apps.  But it costs us money.  I don't know.  I mean, you know...



STEVE:  Yeah.  I had, you know, I've got a bunch of videos on GRC.  I've got the PDP-8 videos, and then the SpinRite, what it does and how it works videos.  And the SpinRite stuff I took the time, and I'm not - I don't remember now if I did that yet with the PDP-8 videos.  But I wanted it also to be able to run on mobile devices, non-Flash-based devices.  And so I have three different codecs, the WebM, the Ogg, and MP4.  And it's really funky because in the HTML5 they have to be offered in a specific order.  And one of them is, like, oddly out of order, specifically because of the way iOS works.  But this stuff is now available.  And it's a little bit of a pain.  But it's sort of where we are at this point.



LEO:  Right.



STEVE:  And actually we're going to talk about Cory Doctorow's posting at the EFF a little bit later about what, unfortunately, movement we're seeing in terms of closing this down.



LEO:  Good.  Good, good, good. 



STEVE:  So we talked back in 2012, four years ago, when 6.5 million email addresses and - I'm doing air quotes, no one can see it, but trust me, around the word "encrypted" - passwords leaked onto a Russian hacker forum.  And the air quotes are around "encrypted passwords" because, at the time, and this was in 2012, still well downstream of when this was not correct behavior, LinkedIn had unsalted SHA-1 passwords.



LEO:  Eww.



STEVE:  So, I mean, they weren't MD5.  That would be worse.  But still, SHA-1, the GPU code for screamingly fast hash-cracking of unsalted passwords was already mature.  And what we found was - we had some fun at the time at the expense of that 6.5 million users because "monkey" was number 12, and many passwords were 12345, and then the next most likely was 123456, and so forth.  And so it's like, oh, come on.  So anyway, the news this week, and that's odd because I don't get this, now an additional 117 million passwords, actually it's 167 million, but about 50 million are missing some of the information.  So there's 117 million complete email address and password pairs still, I mean, from the original breach with unsalted SHA-1.



So what's so weird about this is that this is time-sensitive value.  And at the time, LinkedIn informed everyone who was affected, that is, the 6.5 million people whose email addresses were part of this public posting, that they forced a password reset.  So, sorry, you can't log in again.  You've got to use password recovery.  We'll send you a recovery link in email because we and everybody else has your email address now, and then you'll be able to update your password.  They also advised all of the rest of the non-affected subscribers at the time that they should probably change their password, too.  Well, yeah, because apparently there's 167 million, or at least 117, with full account compromise information.



But again, what's strange to me is that that information, that additional 117 million, was far more valuable as part, you know, like four years ago in 2012 as part of the original offering.  I'd love to know the back story behind, like, what has been happening for the last four years.  Now a hacker who goes by the moniker Peace, P-E-A-C-E, is offering to sell this next batch, or old batch, of 117 million for $2,200 USD, payable in bitcoin.  So, what, like five bitcoin.  And again, the database has been looked at; 90% of the passwords were cracked within three days, within 72 hours, because again...



LEO:  Rainbow tables they're using, or...



STEVE:  In 2016, we can just cut through SHA-1 unsalted hash like butter.  It just doesn't pose any kind of a barrier any longer.  And so this is interesting, too, because it's a little bit of a lesson.  One of the things that our listeners have watched over the coming up on 11 years of this podcast is how the whole crypto and security industry is routinely retiring technologies and rolling forward into new ones.  And of course we've just been talking about SHA-1 and the problem with signing using SHA-1.  It's very different than a password.  Remember that the reason we can crack a password is that a GPU can easily guess short alphanumeric phrases and 123456 and things, and go, oh, look, you know.  And in fact there's all sorts of ways also to dramatically accelerate that kind of brute-forcing.  Basically we're sort of reversing the hash.  So, and of course TheRegister.co.uk snarkily reports that LinkedIn users haven't learned any lessons about proper passwords.  And I observe, well, yeah, except that those are all from four years ago.  So this was part of the original breach, apparently.  



LEO:  Oh, interesting.



STEVE:  It's strange to me that something that's no longer nearly of as much value has taken this length of time to get back out onto the market.  But what the heck.  So I guess, if you want to take something away in terms of an action item, if you have an account on LinkedIn, if it predates the 2012 breach that we talked about four years ago, and if you have a simple password, and you ignored LinkedIn's advice at the time, even though you weren't one of those initial 6.5 million people, and you did not change your password, probably...



LEO:  Now's the time.



STEVE:  Too late.



LEO:  We all know it.  It's not so much LinkedIn.  It's really that, if you used monkey123 for LinkedIn, you probably used it for everything else.



STEVE:  Correct.  Exactly.  And in fact we know there was some reporting that indicated there were people who still had an unchanged password because there had been breaches of LinkedIn accounts following the release of this database.  So it's like, okay.  Again, some people just won't change their password.



Allo.  One of the things we learned at Google I/O last week is that Google is jumping into the messaging chat, sort of feature-crazed messaging app business.  And they have something called Allo, A-L-L-O, which is the name of their messaging client.  I have to say, Leo, before I forget, I thought that the idea of showing the incoming video before you answer it is brilliant.



LEO:  Knock-knock, yeah.



STEVE:  Just like the kind of thing, it's like, why didn't anyone think of that before?



LEO:  Right.



STEVE:  So hats off to them for that.  But what we learned was that Allo would not have encryption enabled by default; that it would support encryption, but it would be turned off.  And a whole bunch of people throughout the industry have weighed in on this on both sides.  And what we understand is that a lot of the features that Allo offers, like - and in fact I was listening to you guys talking about it during the announcement.  As I understand it, Allo is able to, in a dialogue with somebody, suggest responses.



LEO:  Yeah.



STEVE:  And so you just choose, oh, yeah, I like that response; and you just click, you know, click the suggestion.



LEO:  Yeah, exactly.



STEVE:  Well, clearly, for Google to do that it has to see into the conversation.



LEO:  Of course, yeah.



STEVE:  Yeah.  So Allo offers users a choice.  And, boy, talk about some social experimentation.  I'm interested to see how this comes down.  So Allo will offer users a choice.  Do you want to enable encryption, thus having privacy and security; or opt not to have end-to-end encryption, which then enables the entertainment and interactivity side.  And TechCrunch, in their coverage of this, suggested that, most likely, consumers will likely choose the latter.



LEO:  Well, they'll choose...



STEVE:  They will go for entertainment and interactivity.  They want that feature over privacy and security.  And I agree.



LEO:  They won't choose anything.  They'll choose the default.  This was the only argument is what should the default be.



STEVE:  Right, right.



LEO:  I mean, Google clearly needs to see into your stuff to do all the magic that it does.  It does that with inbox on email, too, to suggest responses.  And they're very good.  They're uncanny because they're reading what I'm saying, and they put it in my voice.  They're very, very good.  And I don't have a problem with that.  But of course if you - see, what I think Google should have done, I don't think crypto should have been by default.  I think there's a middle ground where you could turn it on, and it would stay on.  Because right now you choose incognito per conversation.



STEVE:  Ah, okay.



LEO:  In other words, it's not a setting.



STEVE:  Not globally.



LEO:  You say, I'm going to do an incognito conversation now.  What you should have is a checkbox that says I want all my conversations to be incognito.  And they can put up a big thing that says, well, you understand we're not going to be able to do anything we want to do.



STEVE:  Right.



LEO:  But they decided not to do that.  I don't have a big problem with that because use Signal or WhatsApp if you...



STEVE:  That's precisely what I was going to say, was use two different messaging systems.  Use the fun one that has all of the Google enhancements where you're just talking about where you're going to have a meeting and so forth.  And if you have something you need to have private, use a high-security messaging app that only operates that way.  The good news is where they got their encryption.



LEO:  Right.



STEVE:  If you do turn it on, it's from Moxie and company, Open Whisper Systems Signal Protocol that I talked about several weeks back and was just knocked over by from a technology standpoint.  Those guys, in terms of the design of the crypto, for an asynchronous secure messaging system, Signal is it.  And of course that's what WhatsApp adopted.  And we have a question in our Q&A later about what, of all these different alternatives, what would we recommend.  So we'll talk about that when we get to it.  But anyway, I thought that was interesting.  And I think you're right.  I think, as we know, as I call it, "the tyranny of the default," people will just leave it the way it is.  They will like all of that stuff.  And they may notice, if they do bring up security, that suddenly all of that extra stuff isn't there, and think, oh, well, I want that.



LEO:  Yeah.  I mean, it's there if they want it.  And it's kind of nice to have it as an ad hoc option.  You don't have to install another messenger.  And if you're going to...



STEVE:  Yeah, if you kind of want to whisper to each other.



LEO:  You know that the tech blogs are calling it the "sexting mode."



STEVE:  Okay.  



LEO:  That's where they're going.  I'm excited.  I think this, you know, I actually bought a book now on machine learning because I'm very interested in what the limits are, what the capabilities are, how hard this is to do, how it works.  I think Google is smart to say we're going to reinvent search and start using this knowledge.  And it depends on them gathering information about you.  And so if people understand that, and that this is what they get in return, I think that's fine.



STEVE:  Yeah.  Jeff Hawkins, hierarchical temporal memory (HTM) is the work that he's doing.  You had him on Triangulation quite a while ago.



LEO:  He was amazing.  Graffiti guy, yeah.



STEVE:  And, yeah, I mean, he gave us the Palm Pilot and Graffiti.  And I loved his notion of compromising, where the user could learn how to form letters that were still the letters, so it was easy to remember, but they were also - it disambiguated them from all the other letters of the alphabet.  Just really a brilliant solution.



And he turns out to know a lot about brain science, too, and he's one of the major technology - I remember seeing the demonstration of his vision system where you were - and it sounds like the kind of stuff that Google has now.  Doesn't seem like such a big deal as it was at the time.  But you could show this software a whole bunch of different boat pictures, and then show it some pictures of completely different-looking boats and non-boats, and it would find the boats.  Like somehow it's like, wow, you know?  I mean, it, like, understood boatness somehow.  So very, very impressive.  So, yeah, Leo, it's - that's cool stuff.



LEO:  I'm excited, yeah.



STEVE:  So Cory Doctorow.  You had him on Triangulation.



LEO:  Oh, he's been on TWiT many times.  He's a friend of the network.



STEVE:  Many times, right.



LEO:  We love Cory.



STEVE:  Neat, you know, "for the people" guy.  So it turns out he's really got a burr in his bun over something that's happening over at W3C.  And I didn't realize it until I saw this most recent posting and then saw that it ties into some previous ones.  And there's enough interesting specifics here for Security Now! that I want to share this.  So this one is titled, and this is posted over at EFF, "Save Firefox."  And with a little bit of an introduction here, he says:



"Once upon a time, there were two major browsers that virtually everyone used:  Netscape and Internet Explorer, locked in a death battle for the future of the web.  They went to enormous lengths to tempt web publishers to optimize their sites to work best inside their windows, and hoped that users would follow.  Then, a game-changer:  the open, nonprofit Mozilla browser spun out of Netscape, with the mission of putting users, not publishers, in charge.  Mozilla defaulted to blocking pop-up ads, the scourge of the early web.  It was a step none of the major browsers could afford to take because publishers were convinced they would go broke without them, and any company whose browser blocked pop-ups by default would alienate the publishers, who'd throw their lot in with the competition.



"A little over a decade later," writes Cory, "and the world of browsers is unrecognizable:  Mozilla turned into Firefox, Internet Explorer turned into Edge, Apple launched Safari, and Google launched Chrome.  Every one of them blocks pop-ups by default.  Literally none of the dominant browsers from a decade ago are in widespread use today.  Which is not to say that there isn't competition.  There is, and it's fierce as ever.  It's a strategic fight to please both publishers and users, whose interests are not always the same.  Publishers want to gather more information on users; users want to keep their information private.  Publishers want to control users' browsing and viewing experience; users want to sit in the driver's seat.



"We need competition.  We also need diversity.  We need the possibility that young, game-changing market entrants might come along.  We need that idea to be kept alive, to make sure that all the browsers don't shift from keeping users happy to just keeping a few giant corporations that dominate the web happy because there's always pressure to do that.  And if all the browsers end up playing the same old game, the users will always lose."  So, he says:  "We need more Firefoxes," meaning an ecosystem that encourages upstarts.



He says:  "We need more browsers that treat their users, rather than publishers, as their customers.  It's the natural cycle of concentration-disruption-renewal that has kept the web vibrant for nearly 20 years."  And he says:  "We may never get another one, though.  The World Wide Web Consortium, once the force for open standards that kept browsers from locking publishers to their proprietary capabilities, has changed its mission.  Since 2013, the organization has provided a forum where today's dominant browser companies and the dominant entertainment companies can collaborate on a system to let our browsers control our behavior, rather than the other way around.



"This system, 'Encrypted Media Extensions' (EME), uses standards-defined code to funnel video into a proprietary container called a 'Content Decryption Module.'  For a new browser to support this new video streaming standard, which major studios and cable operators are pushing for, it would have to convince those entertainment companies or one of their partners to let them have a CDM (Content Decryption Module), or this part of the 'open' web would not display in that new browser.



"This is the opposite," writes Cory, "of every W3C standard to date.  Once, all you needed to do to render content by a server was follow the standard, not get permission.  If browsers had needed permission to render a page at the launch of Mozilla, the publishers would have frozen out this new, pop-up-blocking upstart.  Kiss Firefox goodbye, in other words.



"The W3C did not have to do this.  No copyright law says that making a video gives you the right to tell people who legally watch it how they must configure their equipment.  But because of the design of EME (Encrypted Media Extensions), copyright holders will be able to use the law to shut down any new browser that tries to render the video without their permission.  That's because EME is designed to trigger liability under Section 1201 of the Digital Millennium Copyright Act" - our good old friend the DMCA - "which says that removing a digital lock that controls access to a copyrighted work without permission is an offense, even if the person removing the lock has the right to the content it restricts.



"In other words, once a video is sent with EME, a new company that unlocks it for its users can be sued, even if the users do nothing illegal with that video.  We proposed that the W3C could protect new browsers by making their members promise not to use the DMCA to attack new entrants in the market, an idea supported by a diverse group of W3C members; but the W3C executive overruled us, saying the work would go forward with no safeguards for future competition."



And he wraps up, saying:  "It's even worse than at first glance.  The DMCA isn't limited to the USA.  The U.S. Trade Representative has spread DMCA-like rules to virtually every country that does business with America.  Worse still, the DMCA is also routinely used by companies to threaten and silence security researchers" - as we talk about often - "who reveal embarrassing defects in their products.  The W3C also declined to require its members to protect security researchers who discover flaws in EME, leaving every web user vulnerable to vulnerabilities whose disclosure can only safely take place if the affected company decides to permit it."



And he finally says:  "The W3C needs credibility with people who care about the open web and innovation in order to be viable.  They are sensitive to this kind of criticism.  We empathize.  There are lots of good people working there, people who genuinely, passionately want the web to stay open to everyone, and to be safe for users.  But the organization made a terrible decision when it opted to provide a home for EME, and an even worse one when it overruled its own members and declined protection for security research and new competitors.  It needs to hear from you now.  Please share this post and spread the word.  Help the W3C be the organization it is meant to be."



And this was one of a series of similar postings where Cory goes back and looks in similar fashion to looking back at the circumstances under which Firefox was born.  And he notes that we would not have Netflix today if this were the environment that a Netflix were trying to be created under.  And people who've been around, you'll certainly, Leo, remember that Netflix was under attack by Hollywood because the original model was mail you movies, which you would watch and then return.  And the entertainment industry hated that and tried to sue them into nonexistence.  And as we know, historically, the same thing happened when home video recording tried to happen.  Again, that was, you know, the entertainment industry tried to absolutely prevent that from happening.



And so Cory notes, not only Netflix, but even iTunes, iTunes was fighting in the beginning an uphill battle.  I mean, so this whole - the model that we have and the history that we keep seeing being repeated is that the copyright holders are - it's in their nature to want the most comprehensive sweeping blanket protection that they can get.  We have to remember what's in the interest of the people because that's the intent behind copyright is to maximize the value for the population, giving creators of content real, but limited, you know, curtailed rights.  And it's kind of creepy to imagine that we're moving towards a technology where we're going to have essentially DRM pushed into browsers, and only browsers that are permitted to display that DRM will be able to display that kind of protected content.



LEO:  Yeah, I agree.



STEVE:  So bravo to Cory for carrying the torch and...



LEO:  Carry that torch.



STEVE:  ...helping us.



LEO:  Back we go to Steve Gibson and more security news, yes, yes.



STEVE:  So, yeah, a couple bits of miscellany.  I wanted to note that, as a consequence of Microsoft's latest Get Windows 10 shenanigans, which has everybody really upset, Graham Cluley, who's been writing in the industry forever, he wrote a piece this morning with the headline, "Microsoft has a dirty little Windows 10 upgrade trick up its sleeve.  Clicking 'X' won't stop your PC upgrading to Windows 10."



LEO:  Oh, no.  Yeah, we were showing that window.



STEVE:  Yeah.



LEO:  You can't just close the window?



STEVE:  No.  No.  And in fact I'm going to read something from someone we all know, and I'm not going to tell anybody who it is first.  So the title was "Upgradegate:  Microsoft's Upgrade Deceptions Are Undermining Windows 10."  This author says:  "For months now, I've complained about the software giant's heavy-handed tactics in trying to trick customers into upgrading to Windows 10.  But a recent change to the Get Windows 10 advertisement that is forced on Windows 7 and 8.1 users takes things entirely too far.  This is indefensible.  Frankly, this entire episode has been indefensible, with Microsoft introducing a non-stoppable, non-hideable advertisement on several hundred million PCs from around the world, and then upgrading that advertisement to thwart those who do seek to remove or hide it.  It has changed the language of the ad, made no clear cancel choice available, and jammed it into the recommended updates that auto-install via Windows Update.  If you read this site," writes this author, "listen to Windows Weekly or What the Tech, you know how bad things are.  It's been a constant refrain."



And this author writes, "Well, I've had it.  Last week Microsoft silently changed Get Windows 10 yet again, and this time it has gone beyond the social engineering scheme that has been fooling people into inadvertently upgrading to Windows 10 for months.  This time, it actually changed the behavior of the window that appears so that, if you click the close window box, you are actually agreeing..."



LEO:  No.  You're kidding me.



STEVE:  No.  "You are actually agreeing to the upgrade, without you knowing what just happened."



LEO:  Oh, my god.



STEVE:  "Previously, closing this window would correctly signal that you do not want the upgrade.  So Microsoft did not change the wording in the window.  It didn't make an Upgrade Now button bigger, or a nonexistent Don't Ever Upgrade button smaller.  It pulled a switcheroonie.  It's like going out to your car in the morning and discovering that the gas pedal now applies the brakes, while the brake pedal washes the windshield.  What a fun commute.  The violation of trust here is almost indescribable.  It's bad enough that Microsoft has been training Windows 7 and 8.1 users, i.e., most Windows users, to not trust Windows 10 because of this horrible unstoppable advertisement, but now they will not trust their own sanity because all they'll remember is that they dismissed the advertisement by clicking the Close Windows box.  "Why on earth did Windows 10 just install on my PC?"  Why on earth, indeed.



"Coupled with the growth of clean personal computing platforms like Chromebooks and Macs, and the fact that Microsoft cannot convince its own PC maker partners to not ruin the Windows experience with crapware, one has to wonder:  Is this all part of some plan to destroy Windows from within?  I mean, seriously.  You couldn't write a dumber story about how to ruin something that is otherwise as wonderful as Windows 10.  My god, Microsoft, just stop.



"And for you Windows 7 and 8.1 holdouts out there, please feel free to utilize a third-party utility like Steve Gibson's Never10 to hide the Get Windows 10 advertisement from appearing and prevent Windows 10 from silently downloading to and upgrading your PC.  You shouldn't be treated like this, but at least you can stand up for yourselves."  And that piece was written this morning by our friend Paul Thurrott.



LEO:  No, I could tell.  And of course we'll talk about it tomorrow.  So just to be clear, this window is not new.  It's a terrible window to begin with because it says Windows 10 is a recommended update, and you have two choices:  the OK button, which will start the installation, and where you would normally see a Cancel button, Upgrade Now button.  So that's the same thing.



STEVE:  Well, now, and remember that there was a previous version that had two buttons.  One was Upgrade Now, and the other was Upgrade Later.  



LEO:  Well, that's what OK does because OK will do it later tonight.



STEVE:  Correct.



LEO:  Now, here's the button you need to click.  It's not the "X" button.  It's the Click Here to Change Upgrade Schedule or Cancel Scheduled Upgrade.  And it's not obvious that you want to click that link, that blue link underneath the date and time.



STEVE:  And it's not even underlined.



LEO:  No.  I mean, if you hit Return, it would be okay.  The thing that's upsetting Paul is upsetting, which is in every other case hitting the "X" would indicate cancel.  They're not even letting you do that.  You have to - the only way out at this point is to Click Here and then say no.  And then does Never10 stop this particular thing?



STEVE:  Oh, yeah.



LEO:  Yeah, you don't see this.



STEVE:  Yeah, it just all goes away.



LEO:  Yeah.



STEVE:  Yeah.  So what's interesting is there has been a skyrocketing explosion of downloads.



LEO:  Oh, it's terrible.



STEVE:  We're at, when I looked this morning, a total of 535,000 downloads, and we're tracking at more than 25,000 copies of Never10 per day.



LEO:  Microsoft's become the Borg.



STEVE:  Wow.



LEO:  Resistance is futile.



STEVE:  And again, I'm Steve "I Love Windows" Gibson.  This is not anti-Windows.  This is anti-Microsoft.  This is like, as Paul wrote - and we know Paul's not anti-Windows.  In fact, he did a piece over the weekend, he installed a brand new Windows 7 and was tweeting through the experience.  Actually it was pretty much all day Friday, like I can't believe it's this slow.  I can't believe I still have - he says, I'm going to go out and have some more kids and come back, and I'm still going to - this thing won't be updated.



LEO:  So we're going to make this the TWiT Bit for the show.  Patrick Delahanty's saying this in the chatroom, and I agree, Patrick.  This will be our TWiT Bit.  And we will put this on our YouTube TWiT Bits channel, which is YouTube.com/twit.  So you can link to it.  It'll just be a couple of minutes of Steve talking about this, us showing the dialogue box, where to click, and the warning.  And I think Patrick wants to share it with friends and family, and I think others may well, as well.  So this is, right here, the little snippet from Security Now! we're going to put up.



STEVE:  Well, and what's sad is, oh, my god, there were 232 responses, an hour after Paul posted this.  And the first three of them were people telling stories, like from this morning, getting tech support calls from people saying, "Nothing works.  I got up this morning, and my computer is broken," and so forth.



LEO:  And one last piece to the TWiT Bit:  GRC.com, is it /never10?



STEVE:  Yeah, that'll get you there.



LEO:  Slash N-E-V-E-R-1-0.  The thing I want to really emphasize is Steve writes this in assembly language.  It's a few hundred bytes.  You download it.  A few hundred kilobytes.  Right?  It's under - it's a megabyte.



STEVE:  81.



LEO:  81 kilobytes?



STEVE:  Yup.



LEO:  You download it.  You run it.  It is using Microsoft's approved method, the method that they prescribe to enterprises so that, you know, enterprises don't want to see this in their business.



STEVE:  Right.



LEO:  That makes the edits that group policy editor would make; right?



STEVE:  Correct.  



LEO:  The registry changes.  So unless Microsoft really gets crazy, which they could, this will work forever.  And you can then delete the program.  You don't have to keep the program.  It's made those edits in your registry, and you're done.



STEVE:  Correct.



LEO:  It will also, if you check the box, uninstall, you see this "Remove Win10 Files"?  What a lot of people don't realize is, even before this comes up, Microsoft has been in the background secretly downloading the Windows 10 installer.



STEVE:  About 6.5GB of Windows 10, ready to land on your drive.



LEO:  Once it's expanded, it's giant.  And so that's sitting on your hard drive right now.  So there's a button on here that says Remove Windows 10 Files.  Do that before you delete the program.  And as far as we know, this is not going to ever happen again.



STEVE:  Correct.



LEO:  Once you run this Never10.



STEVE:  Correct.  With all of the instances out there, there's been no report of anyone who's run it ever being harassed again.  And for what it's worth...



LEO:  And that makes sense because Microsoft's not going to cheese off their big enterprise customers.  That's...



STEVE:  They can't, no.  It's like on their site.  It's that page.  And I'm actually, the way this has turned out, I'm happy for.  It's not, again, I don't have anything against people upgrading to Windows 10 if they want to.  The whole point is, for whatever reason, people don't.  And they should have the right to be able to control that, not to.  And essentially Microsoft is overriding their will.  What I'm pleased about is that, when the Microsoft documentation first appeared, we talked about it on this podcast.  And it was like, you know, your eyes crossed over, like, trying to navigate through the registry and...



LEO:  Oh, yeah.  And no normal user should be asked to edit their registry.  That's just a recipe for disaster.  That's terrible.



STEVE:  Right.  And so I stole a week from the work on SQRL because I just thought, you know, this needs to be simpler.  There was that GWX control panel, but it was hundreds of somethings, I mean, it was big, and it was covered with buttons.  And I looked at it and was confused by, it's like, well, okay, all I want to do is not have this pop up.  And so I thought, okay, I've just got to fix this.



What I'm really pleased about is that this Never10 launched sometime, I think it was like early in March.  And so it had enough time to be around and to get some traction so that now, in this last week, when it's really become a problem, everyone knows that it exists.  And so people are, I mean, I'm seeing tweets about it constantly.  And as I said, 25,000 copies a day now.  So it's...



LEO:  Yeah, and I'm going to say I like Windows 10.  I mean, it's not that we're - you might not like Windows 10 for the privacy reasons.  But it's not so much that it's - and I know Paul loves Windows 10.  It's not so much that we're saying, oh, you don't want Windows 10.  You should have the right to choose.  And no company should ever trick you, trick you into installing an upgrade like that.  It's a massive upgrade.  It does break some systems.  It does break some software.  It should not be forced on you.



STEVE:  But mostly it's for grandmothers who, like, have figured out how to use 7.



LEO:  Makes me cry.  Yeah, makes me cry.



STEVE:  It's not like an iOS update, 9.3.2 goes to 9.3.3, where nothing changes, essentially.  The move from 7 to 10 is like, what happened?  I mean, it's just like, wow.  And Paul used a term - he posted over the weekend before this morning's posting, where he used just exactly the right term.  He talked about "Windows enthusiasts."  And I thought, yeah, I like that because that's not me.  I am a user.



LEO:  Yeah.



STEVE:  I'm, you know, for me it's a tool.  But I get it.  I mean, that someone could just want to play with the latest and greatest, a Windows enthusiast.  And so of course you're going to want Windows 10.  And you wanted 8, and 8.1, and you're going to follow the train.  And for me, it's like, I want stability.  I just want it to run my programs and for me to use it as a tool.  An enthusiast here I'm not.  So, but I liked the differentiation that he made over the weekend.  I thought that was really good because, you know, he is one.  And a lot of people who are using Windows 10, it's like, yeah, I want the latest Windows.  Cool.



LEO:  Right, yeah.  But they should get to choose.



STEVE:  Yeah.  I'll just also say that I've listened to you guys, I think it was last week, wondering whether the upgrade would end.  That is, are they going to terminate it?  And I have to think...



LEO:  They say they're going to make people pay starting July 29th.



STEVE:  Yeah.  And I have to think that, with this much backlash, with this, I mean, Microsoft can't be deaf to everything that's being written.  Brad, it looks like Chacos, C-H-A-C-O-S, who's the senior editor of PC World, he wrote that it is a nasty trick.  He said:  "So after more than half a year of teaching people that the only way to say 'no thanks' to Windows 10 is to exit the GWX application, and refusing to allow users to disable the pop-up in any obvious manner, so that they had to press "X" over and over again during those six months to the point that most people probably just click it without reading now..."



LEO:  Oh, they trained you, yeah.  Wow.



STEVE:  "...Microsoft just made it so that very behavior accepts the Windows 10 upgrade instead, rather than canceling it."



LEO:  Yeah.  Isn't that interesting.



STEVE:  Ugh.



LEO:  That's a good point.  That's a nasty trick.



STEVE:  So anyway, I have to think Microsoft is aware of this, and they're going to go, okay, fine, message received, we gave everybody a year, no excuse.  If you didn't want it for free, fine.  We're going to stop pushing it on you.  So I have to think they'll take it away.



LEO:  I don't know if there's a lot of evidence for that.  People have been screaming about this for months.



STEVE:  So I did want to mention many, many, many people have been experimenting with the Healthy Sleep Formula.  And I had previously mentioned that one of the key ingredients, Seriphos, apparently as a consequence of the Healthy Sleep Formula and the timing of the manufacturer choosing to drain the channel in order to replace it with a reformulated version, no one has been able to get it since, like, for a couple months.



Well, just this last weekend it reappeared.  And the bad news is they ruined it.  It is not the same.  It is at best 44.4% the dosage of the original at currently about twice the price.  So it was already one of the most expensive, I think it was the most expensive single ingredient with the reformulated Source Naturals L-theanine in number two.



There is something called Enerphos, E-N-E-R-P-H-O-S, but I'm a little worried about that, too.  It's from a company called T.E. Neesby.  And they were once in Fresno, but I think they're gone.  So I think we're in the same position of there being, in this case, a stock, an existing inventory of this Enerphos, which to me looks the same as the original Seriphos.  But unfortunately, if all of us Healthy Sleep Formula people go buy it, we're going to buy it out of stock again.



Anyway, I have a bottle of Enerphos.  It literally came today because I purchase it the moment I realized that it might be the same.  And of course I also have a bottle of the reformulated and ruined Seriphos, which I've already seen some anecdotal reports from people saying, yeah - they're not Healthy Sleep Formula people.  I immediately, over on Amazon, I put up a warning that this Seriphos bore no resemblance to the eight-year historical Seriphos that all of the - there's like 233 glowing reviews of it for adrenal fatigue and lowering cortisol.  And unfortunately, unless this was brought to people's attention, they'd be buying this new one thinking it was, you know, trading on the reputation of the previous one.  And it no longer deserves that at all.  So I wanted to give people a heads-up.



I don't have a Healthy Sleep Formula response yet.  I will play with this Enerphos and post on the page my results to see whether it could be an interim replacement.  But again, it looks to me like we're just draining Internet stock that may exist.  This company appears to be gone.  So I will let people know.  And I'm just gratified by the amount of help this has been for people.  I have no scientific study to demonstrate what the efficacy has been.  I don't know whether people are sending me more positive responses than negative.  I know that there are some people for whom it has been ineffective.  But when I hear that 35 years of insomnia has been completely cured, the people are, like, sleeping, as they put it, like a six-month-old baby through, I guess - do six-month-olds sleep through the night?  Anyway, I think of it as like sleeping like a teenager because I think of teenagers...



LEO:  [Crosstalk] kids.



STEVE:  Like logs.



LEO:  Yeah, like sleeping like a teenager, yeah.



STEVE:  Anyway, so it's worked for, I don't know, maybe 90% of the people who've played with it.  And the change to the Source Naturals L-theanine was a big help, too.  So I'm just happy that it's been of use to so many people.  And I will tweak it when I have some more information.



LEO:  Our lawyers have asked us to say that Steve is not a doctor, and you should consult your physician before taking any supplements.



STEVE:  Oh, and I should mention, many people have also written saying they did go to their doctor, and their doctor has been very impressed.



LEO:  But ask YOUR doctor.



STEVE:  Yes.



LEO:  I'm just saying.  Because you may be on medications they're not on, et cetera, et cetera.



STEVE:  Absolutely.



LEO:  So before taking any supplements, always consult your physician.



STEVE:  So I'm a little embarrassed about what this person writes.  But it's kind of true, so I decided, well, okay, even though it embarrasses me, I'll share it.  This is Curt M. in Southern California somewhere.  The subject line - this was written on the 20th of May, so, what, four days ago.  He said, "My personal experience with an old friend, SpinRite."  And he says:  "Dear Steve, in the '70s you would call the TV repairman to replace the tubes in your TV.  They were expensive and went out often.  In the 1980s, computers were much the same.  Hard drives, though more reliable than floppy discs, for anyone who still remembers, that's not saying much.



"As a young man in the '80s, I spent many an hour working in computer repair.  The problems were many, from Compaq, and Mac 128K power supplies, to 30MB Seagate RLL drives, which were really just 20MB drives with a different controller.  Drives of that era were just not very reliable.   Over the course of my lifetime, I have repaired hundreds, if not thousands, of hard drives.  You know how many times, after all those years, SpinRite failed me?"  He writes, "0, zero, nada" (numeric zero, then the word zero)."  Wow.



"To me," he writes, "SpinRite is the Rock of Gibraltar.  I've always felt that, if you know SpinRite, you know the man behind it.  I believe it was a labor of love, and it shows in the end product.  And if you love what you do, then you understand in intimate detail the principles of what makes it all tick.  It's clear that you do.  Thanks for giving the world a product they can truly trust.  I can attest that, with SpinRite, you can trust it like an old friend.  Respectfully, Curt M."



LEO:  Isn't that nice.



STEVE:  So, Curt, very nice.



LEO:  That's very nice.  All right, Steve.  Let me get the PDF up on my screen, and I'm going to get you some questions.  You ready to answer some? 



STEVE:  Yes.  Coffee refilled.



LEO:  Yes, coffee refilled.  Mug to the brim.  Starting with Joel Davis.  He's coming to this question-and-answer session via the Twitter.  He says, and I quote:  Regarding Z-Wave and ZigBee security, while I fully agree that a fully secure home automation protocol would be ideal, looking at the current state, what would be easier for a thief, hacking the protocols with a software-defined radio or just kicking in the door?  I'm not a fan - I don't disagree.  I'm not a fan of letting the perfect be the enemy of the good enough.  



STEVE:  Yup.  And I liked that because it sort of brings us back to earth.  We've been talking for the previous two weeks about some of the details of IoT security, looking first at Z-Wave and SmartThings, and then also ZigBee security.  And it's worth remembering that, yeah, you know, we're talking about in many cases a door lock or alarm or security systems.  But in terms of gaining entry, we've all got glass windows.  And if somebody really wants to get in, that could be done.



LEO:  Yeah.



STEVE:  You know, so anyway, I don't think it's black and white.  It's certainly different if you could walk up to the door and twist the handle and walk in.  That's an unsuspicious action that anyone observing you from the street would lead them to believe you had rightful access to that facility; whereas kicking the door in or throwing a brick through the window makes it pretty obvious that you don't live there.



LEO:  Yeah, yeah.



STEVE:  Or, if you do, you have a real problem forgetting your keys inside the house.



LEO:  You have anger issues.



STEVE:  But again, I appreciated Joel's note because, yes, it's easy - and I think we often do this, for example, when we're talking about crypto.  You raised the point, Leo, a very good one, a few weeks ago.  It's like, yeah, you may have end-to-end encryption that is just bulletproof, and it's got ratcheting, and Moxie Marlinspike has given it everything he's got.  Except if you've got a keystroke logger, game over, because it's logging the keystrokes you type before the encryption and everything.  So, yeah, it's necessary for us to keep some perspective on all of this.  And so I appreciated what Joel said.



LEO:  Bryan in Carlsbad, California saw the return of the dreaded 3035583:  Steve, you mentioned some folks saw the Windows Update KB3035583 coming back.  So did I, on my Windows 7 machine, despite running April 18's version of Never10.  I also noticed many other updates; and, no longer being able to trust what Microsoft says, I looked it up, and KB3150513 is also purportedly for Windows 10.  So I unchecked that box, too.  What's the deal, my friend?



STEVE:  So this, I liked this question because we've gotten a lot of questions - we've gotten.  We've received.  What's happened to my English?



LEO:  We've gotten many questions from all of you people.



STEVE:  We've received many questions.  People are confused because they assume that Never10 is going to prevent this 3035583, it's going to remove it and prevent it from coming back.  Which is not the way it works.  During the development of Never10, I looked long and hard at doing that.  And Microsoft, for whatever reason, it's an area where normally Microsoft has very comprehensive, expansive APIs that give you incredible granularity and control into the operation of things.  Yet, oddly, that's missing from Windows Update.  As a developer, and I dug into it, there's no way to say to Windows Update, I don't want this update.  You can't even have something running in the background that, like, filters through them.



So it would have been a real kludge where it would have seen it already arrive and then had to, like, invoke some sort of removal tool in the background.  There was just no good way to do it.  And it wasn't necessary.  It's easier just to let it come in and set the registry keys, which it checks, and it goes, oh, shoot, I can't do anything here.  And then it just sort of sits there limp, not bothering you any further.  And we presume, after the end of July, maybe Microsoft will take it away.  They'll just remove it.



So I wanted to make it clear that Never10 doesn't prevent these things from coming in because I would if I could, but there just isn't a practical means of doing that.  Instead, I just tell it don't do anything once you get here.  And it's not very big.  I think it's 30K.



LEO:  And I've got to presume that, again, that they're going to honor...



STEVE:  I think they're going to clean it up.  I think they'll remove all this junk from people's systems.



LEO:  On the 29th, yeah.



STEVE:  Yeah.



LEO:  And they're going to honor what they told enterprises.  They're not...



STEVE:  Oh, they have to.



LEO:  They may be downloading stuff, but they're not going to...



STEVE:  They have to.



LEO:  Well, you know, it's a new day.  I don't, you know, I don't recognize this Microsoft.



STEVE:  Boy, that would be a bridge too far, I think.  We'll hope.



LEO:  Herschel Day, Houston, Texas, wondering about the security of video baby monitors. 



STEVE:  [Groaning]



LEO:  Steve, maybe you've covered this before, and I can't find it, but there are a lot of articles posted about baby monitors being hacked.  From what I can tell, this is mostly with WiFi-based devices versus the radio devices.  I've only recently become a parent, the little one is five months old, and this is obviously a concern.  What prompted this search was that I currently have a radio-based monitor.  It was given to us as a gift.  It seems to be interfering with the 2.4GHz band on my WiFi, which has my Ring Doorbell and a few other things on it.  I then began to look for something that wouldn't interfere, and I found these issues.  Should I just get a Nest Cam and forget all this, or am I safe, or what?



I should point out one of our fans earlier today said he bought a security camera on Amazon, didn't like it, returned it, but he'd already installed the software.  And a couple of days later he started getting notifications from the camera, and he's looking into somebody else's bedroom.



STEVE:  Ohhhh.



LEO:  They then - yikes.  We are really a brave new world here, huh.



STEVE:  Oh.  So we discussed old school video baby monitors way back in the early days of this podcast.  And so I thought, that's interesting.  I have not brought myself up to speed lately.  And I was pulling this all together last evening, so I did some looking around.  And what I found was so horrific that I thought, okay, we have to - I just can't wave my hands around and say, "Oh my god, oh my god," because the details that are available are just chilling, and they make such fabulous content for this podcast that we're going to talk about it next week.  So, and those are WiFi Internet-enabled.  The security firm Rapid7, whom we've talked about often in the past, analyzed the security of nine baby monitors.   Eight of them got an "F," and one got a "D."  But, again, the details are just so juicy.  Very much like what you just said, Leo.  That was a perfect lead-in for next week.



So way back before IoT, when not everybody even had WiFi, baby monitors were what Herschel Day has now.  That is, they were 2.4GHz.  They were analog, but also had some sort of encryption.  And back at the time we were talking about how it wasn't great encryption.  The problem was it didn't have enough entropy, so somebody who knew what you had could essentially explore all of the possible settings for the encryption key that links the transmitter to the receiver and find your video.  But that pales in comparison to anyone on the planet being able to look at your bedroom antics.



So Herschel, I think you should stay with what you've got.  And this Rapid7 report was just in September.  This is just only a few months ago.  So it's not like it's back when LinkedIn was losing its SHA-1 unsalted passwords.  This is contemporary.  So we're going to talk about the details next week because, oh ho ho, it's just - it demonstrates a complete unconcern with security, which is, as you said, Leo, the brave world that we're in at the moment.  Now, the Nest Cam may be okay.  I mean, those guys certainly understand...



LEO:  It's WiFi, yeah.



STEVE:  I'm sorry?



LEO:  It's WiFi, yeah.



STEVE:  Yes.  It's WiFi.  But, I mean, when you hear what is available on the market that people are buying unwittingly, and how easy it is to...



LEO:  I have to say there's also radio receivers.



STEVE:  And that's what Herschel has.



LEO:  I'm saying there's radio interception devices, as well, but they have to be proximate to your house.



STEVE:  Correct.  So, exactly. 



LEO:  [Crosstalk] put it on the Internet.



STEVE:  Exactly.  And today, if I had to choose, I would either use a WiFi-based camera whose security you really understood - now, I've got here the Ring Doorbell.  And somebody wrote that it was necessary to open six ports or map six ports through their router in order for the Ring to work.  I will be researching this when I get mine installed.



LEO:  Yeah, I didn't have to do that, yeah.



STEVE:  I'm sorry?



LEO:  I didn't have to do that.



STEVE:  Okay.  He may have wanted, instead of using UPnP, maybe static port mapping.  I don't know.  But anyway, so I'm still, you know, mine's still in the box.  I'll be talking a look...



LEO:  Yeah, I'm curious what you think, yeah.



STEVE:  I'll be taking a look at it.  So I would say, if you can take responsibility in some fashion for what a web-enabled camera, for the security of a web-enabled camera, then okay.  But, boy, based on the study of baby cams that are, I mean, contemporary baby cams, it's just amazing how bad they are.  I mean, it's like, you've got to be kidding me.



LEO:  Yeah.



STEVE:  So Herschel, I'd stick with what you've got.  Yeah, somebody, as Leo said, proximate to your house, who really wanted to, could - typically they're encrypted.  There is a key, so there is some security.  They all advertise security.  It's not great security, not nearly as good as WiFi security.  But, boy, it's not available anywhere on the planet.  And the Shodan search engine is immediately finding you every baby bedroom on the planet, where you just have an analog camera.



So, boy.  We're just in a rough time right now.  I'd stick with an analog device, unless - or the other possibility is, if you could find one that was functional without needing the Internet, that is, where the Internet wasn't part of its feature set.  Unfortunately, they're all offering, oh, view your baby's crib anywhere, like while you're at work during the day.  So that of course means the signal's leaving your house over the Internet.  And, boy, they just haven't cared at all about protecting their customers.



LEO:  Yeah.  Erik in Sweden wonders, why is my proxy not breaking SSL?  Steve and Leo, as usual, great show and all that.  I started listening around Episode 390.  I've also gone back and listened to episodes 1 through 300, so I - wow.  I'm almost caught up.  I've run into something that's puzzled me for a while.  I set up a proxy in Germany to make it look like traffic from domains I choose come from that country.  And the strange thing is it works perfectly; or, to be more precise, it works perfectly with SSL.  I tried using Google.com with SSL through the proxy, and I searched for my IP, and Google showed the IP of the proxy and not my ISP's IP.  By the way, that's the search, "My IP," and that works quite nicely on Google.  But I was at the same time connected to Google.com using SSL, and everything was green in my browser.  But wait a minute, wait a minute, wait a minute.  Shouldn't a proxy break SSL?  I guess he's using Squid because he asks does it have some built in magic that makes proxying SSL possible?



STEVE:  So, great question, because we often talk about how, for example, corporate proxies on the corporate Intranet border are having to play all these games in order to intercept HTTPS connections, in order to see into what traffic is coming into the network.  Squid, as an example of a popular browser, like many proxies, has the ability to leave the session alone.  There's a command called Connect on a Squid proxy that brings up a tunnel.  And any protocol can simply tunnel through without needing the protocol to be broken.  That is to say, the TCP packets which carry SSL, or TLS now, they will go to the proxy's IP.  And it simply rewrites the IP header on the packet, changing the destination IP from its own to where Eric is in Sweden, and then drops that packet back on the 'Net.  Now that same packet that went to the proxy now goes to Eric.



So essentially it's sort of bounced through the proxy, but it wasn't ever opened up.  And so proxies can inspect traffic, which, for example, they would have to do if they were going to cache it.  There are caching proxies that must then look at the traffic.  But it's also possible for it simply to be an IP-level proxy that doesn't go into the higher level protocols.  So all it does is it changes the source and destination IPs and puts it back on the Internet.  And so it sort of just bounces the packet through it.  That way anybody who is outside, like Google, saying what's this user's IP, they see the IP at the proxy, when in fact those packets are then being forwarded to where Erik really is.  So, you know, that's how it works.  Proxies don't necessarily inspect the traffic.  They're able simply to forward it, and that's what's happening in this case.



LEO:  Mike, Question 5, in Chicago, wonders which secure text messaging app to use on his Android phone:  I'm trying to decide once and for all which secure text messaging app to use.  Seems like Signal Private Messenger from Open Whisper Systems is the way to go, but Telegram?  Oh, boy.  What are you guys currently using on your iPhone and Android phones?



STEVE:  I thought this was an interesting question because I see these kinds of questions coming in all the time, which one should I use?  And he's saying, I'm trying to decide once and for all.  Well, it's such a moving target.



LEO:  Yeah.



STEVE:  You know?  Here Google has just introduced or announced Allo, which wasn't an option, and it has all these features and optional security on a per-conversation basis, as you told us, Leo.  And remember also that a messenger is inherently part of an ecosystem.  That is, whoever you're messaging has to have the same one because we don't really, at this point, we're not at a level, maybe we will eventually be, but currently we're not in a standards mode.  You know, everyone is stovepiping and hoping to capture the market for their own private messaging protocol.  Maybe, if something like Signal created interoperability, that is, Signal being a great protocol around which many people could agree, then maybe that could allow different messaging apps to interconnect.  But at this point you can only talk to somebody who's got the same thing on the other end.



LEO:  Right.



STEVE:  So the decision is not an easy one.



LEO:  Android has one advantage, though, Steve, that you're not familiar with because you use iPhones.



STEVE:  Okay.



LEO:  Which is that you can name another arbitrary messaging system as your SMS messenger, as your default messenger.  Just as you could say, I want to use Chrome or Firefox as my default browser, you can tell Android, this is my messenger.  Which means text messages will come through there.  Now, you're not going to get the security unless the other person is using the same messenger.  But at least it could become your default messenger, which is kind of, I think, a good choice.  You can't do that with Apple.  You have to use messages.  So you're exactly right that, if I'm going to use Signal, for instance, and I make Signal my default messaging app, anybody I want to have a secure session with has to also be using Signal.  



STEVE:  Right.



LEO:  At least if it's...



STEVE:  Although I do have...



LEO:  Go ahead.



STEVE:  On iOS I have green and blue balloons, and so I'm able to do messaging to non-Apple users.



LEO:  But surely you're not proposing that you think Messages is as secure as, let's say, Signal.



STEVE:  Oh, no no no no.



LEO:  No, no.  So...



STEVE:  No, no, in fact I've been leading the charge that, unless people manage their own keys and authentication, you have encryption, but you really don't have provable security.



LEO:  Right, right.  So what do you say?  What do you like?



STEVE:  The answer to Mike's question - yeah.



LEO:  You know what, I'd love it if anything that used Open Whisper Systems was interoperable, that would be awesome.



STEVE:  Right, right.



LEO:  But I don't think they are, are they?



STEVE:  No.  As far as I know at this point, they're not because they all want to do their own thing.  So, for example, in Allo, again, we're still at an early stage where the various messengers are all hoping to acquire, like, a market share, and maybe win in the long term.  And so we have complete fragmentation.  And the fragmentation is increasing, rather than decreasing.  So anyway, to answer Mike's question, the optimal solution - first of all, I think it's too soon yet to arrive at something.  But if you truly need secure messaging, then remember that the other end has to have the same thing that you do.  And for me there's nothing other than Threema.  I know that it's not open source.  It is open protocol.  Yet, and so we're trusting them.  They seem trustworthy.  But you are managing your own key.



The alternative would be a Signal-based solution because I love the Signal protocol that Open Whisper Systems has created, although there you do need to take the initiative to verify the identity of the other end out of band, that is, through some other means.  And we talked about that a few weeks ago.  And turn on that off-by-default notification if the user's identity ever changes because it's stored locally, and there's an option to alert you if something like a man-in-the-middle were starting to intercept your communication, which you wouldn't otherwise know.  So, I mean, the fact that you wouldn't otherwise know it, that's kind of problematic for me.



So, again, it's all a bunch of tradeoffs.  I just feel like it's still too soon.  It's like, it's all, you know, up in the air.  People want security, but they also want convenience.  I think the Allo experiment is going to be very interesting to see how many people really care.  It's like, no, I'd rather have Google giving me features and listening.



LEO:  You know, Threema's got that big advantage of the matching up in three dots and all that stuff.  But it's closed...



STEVE:  And across platform.



LEO:  But it's closed source, which frankly to me is a nonstarter.  I think, in my opinion, you have to use an open source solution.  And that's why Signal's the way to go.  It's a little weird because we don't know exactly how WhatsApp has implemented it.  So we have to take their word and Moxie's word that they've implemented it.



STEVE:  Yeah.  I also heard something disturbing about Signal, and that is that they're claiming license required in order to use it.  So it's not open source, and you can't actually use it without their permission and without a license.  So I'm afraid that Open Whisper Systems has gone a little commercial.  And I don't blame them.  It's their right because they've got beautiful IP.  But still it's like, oh, that's unfortunate.



LEO:  I just went over to check EFF's secure messaging scorecard.  And they've actually taken it down because they're working on a new secure messaging guide because things have changed so much.



STEVE:  Oh, good.



LEO:  You can look at version one of their scorecard, and all of these checkboxes will give you some idea of what you're looking for, including open source and whether it's been reviewed and if there's an audit and so forth.  And there aren't that many that are 100% green checkboxes all the way.  ChatSecure plus Orbot is one.  Off-The-Record Messaging for Windows using the Pidgin app is another.  Signal, RedPhone, Silent Phone, Silent Text, those are all from Whisper Systems.  Telegram Secret Chats, they give all green to - you're not so fond of it.  It's open source, but it's using a non-standard encryption suite, one of their own design.



STEVE:  Yeah.  Matthew was... 



LEO:  Matthew Green?



STEVE:  He tweeted something about it a couple weeks ago, like, you know, like who would ever use this?  It's like, yeah.



LEO:  TextSecure, I like that one a lot.  TextSecure is quite good.



STEVE:  Yup.



LEO:  You see, Threema loses one check because it's not open to independent code review.  So if you google EFF Secure Messaging Scorecard, you can see the old one.  And I can't wait to see the new one, yeah.



STEVE:  Great resource, yeah.



LEO:  Yeah, be interesting.  Moving on.  Question No. 6 comes to us from Xi'an, China, where the terracotta warriors are.  Li writes to us:  You mentioned in a recent podcast or two that Windows Update was getting very slow.  FYI, it looks to me like they have moved the antimalware scan from after the installation to the start of the "Downloading..." part of the update.  Oh, that's interesting.  That's the Microsoft Spyware Removal Tool or Software Removal Tool.  Hence there's initially a long period of 0% downloaded, no network activity, and nothing appears to be happening despite a busy CPU.  That's interesting.



STEVE:  I thought this was a really interesting observation.  I shared it with Paul this morning.  We corresponded back and forth about it.  And so I've not confirmed it, but I wanted to share it with our listeners because I know we have a ton of techie listeners, and everyone has been observing something really bad seems to have happened with Windows Update, where it just, like, takes forever now.  And so it's worth looking at maybe digging down to see where the processor is busy, like what process it's in at the beginning of Windows Update.



If this observation is correct, then it would explain that it's like, especially on an older, bigger system, where there's just a lot to rummage through, if they're doing a pre-update like MSRT scan or a Windows Defender scan, like a full system scan, that takes a long time.  And I've watched it sitting here, like with no network activity, like what is it doing?  It's like, it's just - and I was assuming, as I wrote to Paul, that it was building a big dependency tree.



LEO:  [Crosstalk] more accurate.



STEVE:  Because, boy, I would not like the job of having to engineer Windows Update and manage all of the different overlapping updates that replace this or that file and, like, filter through that and somehow figure out what set of updates this system needs.  That's just, over the course of time and with so many files being updated and replaced, that's just a horrific task.  And so the way to do that is by building some sort of a data structure of what updates are available and which have been applied and then, granularly, which ones are replacing which files to figure out what you should do.  Not an easy task.  I've just been assuming that's sort of what it's doing.  But it sure has slowed down, like, recently.  And they may have changed the logic.  So I just wanted to share this so that our listeners could explore that on their own.



LEO:  Yeah, good theory.  Interesting theory.  Paul Konigsburg in Great Falls, Virginia wants safe browsing, or wants to know about safe browsing in a VM:  Steve, I'm a medium-term follower of Security Now! for the last three years.  On several of your recent shows you have mentioned that safe web browsing should be done in a virtual machine.  I was wondering if you could give more guidance as you did with the Three Dumb Routers show [SN-545].  I'm currently using the flying turd, Windows 10.



STEVE:  He wrote that.  I appreciated his humor.



LEO:  Do you have a recommendation for a good VM for Windows?  Or should I look, as Leo would suggest, to go to some flavor of Linux?  If yes, which flavor and which hypervisor?  In either case, how would you get data, mostly files, from the web browsing VM to my machine that I care about, the one that does my banking and hobbies?  I'd appreciate any guidance.  Paul Konigsburg.



STEVE:  So I pulled this, not because I have an answer, but because I will promise to have an answer.  I think this will end up being as interesting and potentially as important as Steve's Dream Machine was back in the early days of the InfoWorld column, when I worked out all of the details of, like, choose this motherboard, these drives, this controller, blah blah blah, and gave a clear explanation of why I had made those decisions.  I can't do it yet because that waits for me to move over to Windows 7, where I have enough memory and it's feasible to run a VM at the same time as my main system.  But I still think that's the ultimate solution is we have to have true high-level containment of the web browser as the major element that contacts the Internet, and it's the conduit through which so much of these problems flow.



So it is on the burner as something that I want to work out for myself, and I will absolutely share it with everyone and provide all of the bases for my decision.  You know, it's going to want to be lean, easy to bring up, a small footprint so it doesn't gobble up lots of memory, so that in the VM will be some sort of very small operating system, enough to give you networking and run the browser of your choice, and then also be able to provisionally communicate across the VM boundary.  As Paul notes, there are times when you do want to be able to move a file out of that container into your main system and vice versa.  So it remains to be resolved.  But it's, like, it's something we need.



LEO:  I'll be very interested to see what you come up with.  Of course, you know, VMware is probably the king of virtual machines.  And they offer free player-only solutions.  There's a free one from Oracle they got when they got Sun, VirtualBox.  



STEVE:  Yup, VirtualBox.



LEO:  Yeah.  And then a number of people are suggesting, and this would work, and this is what I'd do would be - I'm not that nervous.  But if I wanted to be really secure, I'd carry around a read-only USB key, or you could put it on a DVD, and you could either put your choice of Linux distros on it - I use Tails, which is an intentionally secure version of Linux.  You put it on a USB key, and you pretty much have a secure environment there that's pretty hard to...



STEVE:  Well, yeah, but you've got to shut down your whole world in order to...



LEO:  You reboot, yeah.



STEVE:  Yeah.  It's like, that's not happening.  I typically...



LEO:  Nowadays, machines boot pretty fast.



STEVE:  Yeah.  Well, I have like a mature environment of Windows up.  I've got logs that are running on a 24-hour basis and all kinds of stuff.  So for me it's like, well, and I've got two big Firefox windows with the 290 tabs open right now.



LEO:  You don't want to touch those, huh.  I like to reboot once in a while.  It's just me, though.  Karl, Westfield, Indiana.  He says, "I already have a real router."  Steve, a week or two ago you were talking about a device that senses when your Internet goes out and reboots things.  Your response was "get a real router."  Just wanted you to know I have a nice Netgear cable modem, but every several days my Comcast Internet goes out.  I could wait for an hour for it to come back or reboot my cable modem.  I can't explain it, I just know it works.



STEVE:  So many people responded that they have this problem.  And I thought about it, and so he has a real router, but he says, "I have a nice Netgear cable modem."  And that when he restarts his cable modem, his Internet comes back.  So it's like, okay, Karl, there's a problem with your Netgear cable modem.  I mean, it's not that the cable is out, it's that the Netgear cable modem stopped being a cable modem, and it locked up, who knows why?  But if rebooting it brings your cable connection back, then that's the problem.  That doesn't happen for most people.



But I will say it was surprising, in response to this, how many people responded that they have DSL, or they've got cable or satellite or whatever, but their stuff is dying, and they're having to give it a swift kick every so often to get back on the Internet, which is unfortunate.  My stuff just sits here and runs for months.  I mean, like forever.  It never has a problem.  So I do think that equipment can be a little bit marginal.  And also it can be power line, for example.  There is flaky power in various areas of the country.  Now, I don't know about Westfield, Indiana, where Karl is.  But if you've got some big industrial motor starting next door that pulls the power down briefly, gives you a bit of a brownout, that can be all it takes to cause some of this equipment to hang.  And so it may just be that the device itself is okay, but through the power supply it's getting glitched and causing it to hang.  And that could also be a cause.



So I guess my point is you could put up with this kind of behavior, but you should recognize that a lot of the world isn't, and that you can probably diagnose it, if you care.  Or you can just get one of the power reboot plugs and have it restart things whenever the Internet dies.



LEO:  You know, that's two states of mind.  And a lot of users just kind of grind along with marginal systems, put up with it. And then there's people like you who don't put up with things and say, I want to figure this out, even if it takes them days, and you pull all your hair out.  They don't want to grind along with a suboptimal situation; right?  You've got it just so.



STEVE:  Yeah.



LEO:  Yeah.



STEVE:  And I think we're done.  We've got two questions, but they were both SQRL, and we'll talk about them next week.



LEO:  How's SQRL going?  Going well?



STEVE:  It's going well, yeah.



LEO:  Okay.  Baby monitors next week?



STEVE:  Yes.  Yes, we have to talk about some of these details.  They're just - our listeners will love them.  And it's a great cautionary tale.



LEO:  Yeah, yeah.



STEVE:  And I'm sure we can come up with a great title for that one.



LEO:  I'll leave it to you.  You'll find Steve at GRC.com.  That's where he hangs his hat.  That's his website.  That's where you can find, of course, this podcast, 64Kb audio, transcripts, and more.  You'll also find SpinRite, the world's finest hard drive maintenance and recovery utility.  Steve's sleep formula is there, all sorts of stuff.  GRC.com.  There's only one thing you have to pay for.  That's SpinRite.  Everything else is free.  That's your ticket to entry.  Oh, well, there is no ticket.  Nobody's taking the tickets, anyway.



GRC.com.  If you have a question for Steve, you can leave him a question there at GRC.com/feedback.  Or on Twitter he's @SGgrc, and his DMs are open, so you can DM him.  Or if you want to just ask in public and get a public answer, @SGgrc is his Twitter handle.  We put the show up on our website, TWiT.tv/sn, as quick as we can after the show is done.  We are going to put a TWiT Bit up with all of that information about the Windows 10 and Never10.



STEVE:  Wow.



LEO:  Wow is right.  You'll find that at TWiT.tv/specials.  We of course put this show on YouTube.  There's audio and video at TWiT.tv/sn, or subscribe.  That way you'll get it every week.  There are podcatchers on every platform, and all of them have Security Now!.



You might have noted that we were not nominated in the Podcast Awards this year.  There's some dispute over what happened.  I maintain I received a letter from the organizers saying you are no longer eligible because you've won so often, so you're now a legacy podcast.  They say, oh, that was just TWiT.  You could have entered anybody else.  But since you didn't, you didn't get nominated.  I have nothing but a disdain for the Podcast Awards.  I think they're exactly what's wrong with podcasting.  We've been stripped of awards in the past because they didn't want to give us an award.  Now they've decided we're not eligible.  They sent us an ambiguously worded email two months ago.  Now they're saying it's our fault.  This is exactly what's wrong with podcasting, ladies and gentlemen, is it's small time.  So I don't - in the past we've said we're not going to bother with it because we've won enough.  We don't need anymore.



STEVE:  Yeah.  And that's how I feel.



LEO:  But for them to say, oh, you can't win is like...



STEVE:  And our listeners know what content we're offering.



LEO:  They know, yeah.



STEVE:  And it couldn't be any more solid.  We're close, in this case, the case of this podcast, closing in on year 11.  So there's been no evidence of - there's no podfade happening.



LEO:  Right.



STEVE:  We're here for a reason.



LEO:  Yeah.  So just because - and I know last year you wanted to win, and I just wanted to let you know that's why your name doesn't show up.



STEVE:  Yeah, and in fact, I saw that it was happening, and I just shrugged.  It's like, eh, you know.  We have our followers.



LEO:  Yeah.  That's about it.  Thank you, Steve.  We'll see you next week.  We do the show every Tuesday about 1:30 Pacific, 4:30 Eastern, 20:30 UTC.  Tune in live.  We'd love to have you.



STEVE:  Thanks, Leo.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#562

DATE:		May 31, 2016

TITLE:		IoT Infancy

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-562.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm



DESCRIPTION:  Leo and I first cover the past week's security events, including the collapse of the Feinstein-Burr encryption bill, the result of the Oracle/Google trial, Google's attempts to keep Android in the field up-to-date, an intermediate certificate issued to an Internet appliance maker, lots of bad news about laptop add-on bloatware, and an update on SQRL's development.  Then we take the first of two weeks' look at the many problems with our infantile Internet of Things.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here. We're going to talk about the latest news in the security world, and then start to dissect how Internet of Things devices work and how insecure they are.  That's why he says they're in their infancy.  It's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 562, recorded Tuesday, May 31st, 2016:  IoT Infancy, Part 1.



It's time for Security Now!, the show where we cover the latest security news.  We help you protect yourself online, help you become an expert who can help your friends and family and those people around you.  People who listen to Security Now! not only are safer themselves, but make sure that their loved ones are safer, too.  So this is a show you have to listen to.  Steve Gibson is here, the Explainer in Chief.  He makes it all possible.  Hello, Steve.



STEVE GIBSON:  Yo, Leo.  Great to be with you again for Episode 562.



LEO:  Yikes.



STEVE:  As we close in on the end of our 11th year of this never-ending quest for security.



LEO:  You know, in 11 years, the one thing I've never asked you - in 11 years.  You'd think this would be the kind of thing one buddy would ask another.  Spaces or tabs?  Only "Silicon...."  You know, I got dead silence when I asked Andy Ihnatko and Rene Ritchie.  



STEVE:  I watched it.



LEO:  They hadn't seen "Silicon Valley" yet.  That's why.  I have to, you know, Lisa goes to bed because it's late.  After "Game of Thrones" she goes to bed.  But I say, "Honey, I have to stay up because part of my job is knowing what happens on 'Silicon Valley' and 'Veep.'"	



STEVE:  That's right.



LEO:  And let's face it, John Oliver, as well.



STEVE:  Yup.



LEO:  So that's part of my research.  Sunday night I'm stuck in front of the - glued in front of the tube.



STEVE:  Yup.  I have, as our listeners know, I'm still coding.  All of the code that I write is in a DOS box in a text...



LEO:  Do you use Brief?  What do you use?



STEVE:  I use Brief, yeah.  And Brief actually has its roots in Emacs.  It was some guys that were Unix people that originally created Brief sort of in the image.  And so there is a LISP-like language which actually glues it together.  So it's a completely programmable editor.  BRIEF was an acronym that involved bars reconfigurable.  So it's like, interactive reconfigurable editor, blah blah, you know, programmers, I don't know what it was.  But there was an acronym [Basic Reconfigurable Interactive Editing Facility].  And it was a company called UnderWare.



LEO:  I remember it, yeah.



STEVE:  Yeah.



LEO:  Only hardcore people used Brief.



STEVE:  Dave somebody, can't quite get his name.



LEO:  It's gone, though; right?  I mean, they don't make it anymore.



STEVE:  Oh, yeah.  It got bought.  Brief got sold to someone.  But it still works.  And but the point is that I was also a devout WordStar user.  And so one of the things that I did is to completely reconfigure the keyboard mapping so that it uses WordStar keystrokes, where you hold the control down with your pinkie.  And of course the Ctrl key is where it was meant to be, immediately to the left of the "A."



LEO:  Yes.



STEVE:  Not Caps Lock.  Whoever...



LEO:  But that's what I do the first time I - any new machine, the first thing I do is I remap Caps Lock to Ctrl.



STEVE:  Exactly.



LEO:  Because otherwise I'm going to be typing at y'all in caps sooner or later.  They call it "Emacs finger," by the way, your Emacs pinky, from a little overuse, because Emacs, everything's a Ctrl keystroke.



STEVE:  Right.  So anyway, the point is that so not only does Brief know about WordStar keystrokes, but then I created a superset of those.  For example, I have one key, actually it's Ctrl-I, that a great programming friend of mine came up with that is so useful.  He hadn't ever seen it anywhere, but it was implemented back in the '80s on an Interdata minicomputer, and it pulls the character down from the line above.  And it turns out it's just so handy to have that.  So I adopted that in Brief.  So I have that.



But also, for example, I have one that immediately cleans up the file.  It removes any white space from the end of lines.  So I can do that.  And it says, oh, four lines were cleaned up.  It's like, oh, okay, fine.  You know, where you just sort of have some spaces at the end of something that are obviously not important.  And so this removes them.  And, of course, there's a tabification, which is where I was coming with this, is that, if there's ever more than eight spaces in a row, it says tsk-tsk-tsk, and it replaces them where it can.  It removes them and puts tabs in, in order to, of course, reduce the source file size.



LEO:  You really missed out, though.  If you were using the one true editor, you would be able to do all of that and so much more.  And you wouldn't even have to - I can't believe Brief Pro is 120 bucks.  Emacs is free on every platform.  But that's okay.  That's okay.  The problem with Emacs is you spend...



STEVE:  I paid for mine 30 years ago, and I'm still using it.



LEO:  I know, you got your money's worth.



STEVE:  And I actually live in it every day.



LEO:  You got your money's worth.  The problem with Emacs, and I really - this is really the truth, is it is so infinitely configurable, it really isn't an editor.  It's just a framework that you never get any work done because you're so busy changing, you know, fixing the UI and making it...



STEVE:  That's the problem with object-oriented languages is that many...



LEO:  Yeah, you're always messing with it.



STEVE:  The programmers get so caught up in expressing the problem in the language that it's like, okay, great, you know, you've got this fabulous object hierarchy design now which  beautifully represents the problem.  Have you solved it?  Well, no.  But, boy, we're going to - as soon as we actually write some code, it's going to be amazing.



LEO:  Going to be amazing.  But first you have to set it all up.



STEVE:  It's like, uh, okay, yeah.



LEO:  Just so.  I'm working on the header files.  I'll be done soon.  Ctrl KS, save that, and we'll move on to the news of the week.



STEVE:  Yup.  So, yeah, lots to talk about.  We're going to talk about the Burr-Feinstein encryption bill, the outcome of the Oracle/Google fight, Google's pressure to increase updates of Android in the field.  I got a lot of tweets about the news of a company called Blue Coat obtaining an intermediate CA certificate from Symantec.  Some news from some security research, insecurity of laptop add-on bloatware of various kinds.  Last week we ran out of time, and I didn't get a chance to talk about what's been going on with SQRL, and so we're going to do that.  And I had promised to talk about a report that Rapid7 security did when they looked closely at Internet-connected baby monitors.



Well, it turns out that when I laid everything out, there was just so much to talk about that I thought, okay, I mean, I wanted to talk - I ran across other information about IoT stuff.  And so I named this podcast "IoT Infancy," but this ended up being Part 1 of that topic.  So we have so much to talk about that I just realized we wouldn't be able to do it justice, and I wanted to.  So next week we will do Part 2, where we'll deal with all of the crazy security news that has transpired since then and wrap up this topic by looking at some really frightening details of what Rapid7 found.  But this week's first part coverage is sort of the meta view of it because there's some interesting other things that I found that sort of leads us into the look at the details that I know our listeners will find really interesting.



So, lots to do.  And at the very end, so that our security-focused people don't have to listen to it, a lot of our listeners have asked for what's going on with this whole Seriphos/Enerphos ingredient of the Healthy Sleep Formula.  So I promise to move it to the very end so people can say, okay, fine, stop, and then not have to listen to any of that.  Although, frankly, 1,700 people a day are now visiting the Healthy Sleep Formula page, and it's become a thing.  So I need to give it a little bit of time, and I don't have anywhere else to do that other than here, so we'll just stick it at the end so people can say, okay, not for me, stop.



So Burr-Feinstein. The good news is it met a quick and swift and complete death in the Senate.  Reuters had some great coverage and uncovered some little tidbits that I don't think we would have known about otherwise.  The way they expressed it was they said:  "After a rampage" - talking about the San Bernardino rampage - "a rampage that left 14 people dead in San Bernardino, key U.S. lawmakers pledged to seek a law requiring technology companies to give law enforcement agencies a 'backdoor'" - whatever that means, and we've talked about how ill-defined important terms are, unfortunately, but, you know, so for whatever that means - "to encrypted communications and electronic devices such as the iPhone used by one of the shooters.



"Now," they wrote, "only months later, much of the support is gone, and the push for legislation dead, according to sources in congressional offices, the administration, and the tech sector.  Draft legislation that senators Richard Burr and Dianne Feinstein, the Republican and Democratic leaders of the Intelligence Committee, had circulated weeks ago likely will not  be introduced this year and, even if it were, would stand no chance of advancing, these sources said."



The other little tidbits that I pulled out of much longer coverage was that "The short life of the push for legislation illustrations the intractable nature of the debate over digital surveillance and encryption which has been raging in one form or another since the 1990s."  What I didn't know was that "The CIA and NSA were ambivalent," meaning, okay, but we know that the FBI wasn't.  But the CIA and NSA were, "according to several current and former intelligence officials," wrote Reuters, "in part because officials in those agencies feared any new law would interfere with their own encryption efforts."  So they wanted things to sort of be left alone.  They were like, eh, we have to be very careful with what we do here, if we implement any new legislation.



And Reuters also wrote that "Half a dozen people familiar with the White House deliberations said they were hamstrung by a longstanding split within the Obama administration which pitted Comey and the DoJ against technology advisors and other agencies including the Commerce and State departments."  And then, finally, they said there was "reluctance to take on the tech industry in an election year," which I thought was interesting.



So, yes, the tech industry does have power, and this really does sound like the huge, what, reaction that occurred in the tech sector, which was very vocal among both professional cryptographers and everything that we covered, the EFF and all of the letters signed by the Who's Who of technology and cryptography really did serve to put the brakes on this.  And, if nothing else, just it's like, well, we can't deal with that now.  So, I mean, it died just completely and totally.  Which is really a good sign.  It's like not alive in any form any longer.  So, yay.



LEO:  The greatest virtue, really, in our system of government is that it moves incredibly slowly.



STEVE:  Mm-hmm.  Yes.



LEO:  It's just really impossible to get anything done.



STEVE:  I'm often glad now that I'm 61 because they won't be able to screw it up that badly...



LEO:  You're safe for the next 40 years.



STEVE:  ...I figure in the time I have left.  Yeah.  And it does move slowly.



LEO:  Yeah.  So any big change like that, you know.  I'm really curious.  I bet you it is, I think you're right, that it's probably the lobbying of the tech industry that had the most impact on this.



STEVE:  The feeling I got from reading Reuters' coverage was that there was enough - I don't want to use the word FUD because that's famously Fear, Uncertainty, and Doubt.  But arguably, the politicians don't understand the technology.  And so the technologists said this is impossible.  What you want is impossible.  And I would argue, and everyone has heard me argue, that's not true.  But it turned out to be great that that's what got said because, like, the politicians who don't know one way or the other said, oh, maybe it is.  I mean, the smart people are saying we can't do this, even though we don't know why, so maybe we shouldn't.  Yeah, so that was good.



Also there was another good piece of news, and that is that - I think it was Thursday of last week, so a couple days after our coverage last week of the whole Oracle/Google API mess.  After three days of deliberation, the two-week-long trial concluded with the jury unanimously deciding in Google's favor that Google's use of the API fell under the umbrella, sort of the get-out-of-jail-free card of copyright law, of fair use.  And so of course Oracle immediately vowed to appeal.



Oracle's general counsel, Dorian Daley, in a written statement, said:  "We strongly believe that Google developed Android by illegally copying core Java technology to rush into the mobile device market."  Continuing, Dorian says:  "Oracle brought this lawsuit to put a stop to Google's illegal behavior."  Eh, well, no, no.  They'd like to have $9 billion, please, because Google did what Oracle failed to do.  Anyway, that's me editorializing.  Dorian said:  "We believe there are numerous grounds for appeal, and we plan to bring this case back to the Federal Circuit on appeal."  And observers suspect that they will.



Now, I was a little curious about, okay, what exactly is fair use?  And so I found a nice little piece at Stanford Law that sort of explained it a little bit.  Stanford Law wrote:  "In its most general sense, a fair use is any copying of copyrighted material done for a limited and 'transformative' purpose, such as to comment upon, criticize, or parody a copyrighted work.  Such uses can be done without permission from the copyright owner.  In other words, fair use is a defense against a claim of copyright infringement.  If your use qualifies as a fair use, then it would not be considered an illegal infringement."



So Stanford continues, saying:  "So what is a 'transformative' use?  If this definition seems ambiguous or vague, be aware that millions of dollars in legal fees have been spent attempting to define what qualifies as a fair use.  There are no hard-and-fast rules, only general rules and varied court decisions, because the judges and lawmakers who created the fair use exception did not want to limit its definition.  Like free speech, they wanted it to have an expansive meaning that could be open to interpretation."



So Stanford said:  "Most fair use analysis falls into two categories:  commentary and criticism, or parody."  And of course this would fall under, essentially, commentary.  And so Stanford said:  "If you are commenting upon or critiquing a copyrighted work - for instance, writing a book review - fair use principles allow you to reproduce some of the work to achieve your purposes," which is where Google is.  "Some examples of commentary and criticism include quoting a few lines from a Bob Dylan song in a music review, summarizing and quoting from a medical article on prostate cancer in a news report, copying a few paragraphs from a news article for use by a teacher or student in a lesson, or copying a portion of a Sports Illustrated magazine article for use in a related court case."



So anyway, that's clearly the position that Google took was that we didn't copy all of Java.  We copied a tiny portion, that is, these 37 APIs that Oracle is complaining about.  And we reimplemented them.  We wrote them ourselves, but it was necessary for compatibility to duplicate this portion of the Java standard.  And Oracle, you know, Sun never had a problem with it.  Oracle didn't have a problem with it until way downstream when it had been proven to have - when Google's use created a huge amount of value to their particular implementation.



And so I guess, in watching the way the industry has responded, there is a sense that this original judge - this is Judge Alsup, whom we've talked about.  He was also the judge who gave the jury instructions prior to their going away for three days of deliberation.  And some people have said it was a broad interpretation of fair use that this judge, who's been on - I wouldn't say he's been on Google's side, but we've talked about him.  We talked about him in 2012 when this thing first - when the case first happened.  He's the guy who taught himself Java in order to really come up to speed and understand this.  His original ruling was that this API, that an API was not subject to copyright.  And then Oracle got that overturned on appeal.



And so then this two-week-long recent trial was Google taking the position, okay, if API is subject to copyright, then our use is not an infringement of that copyright because it was fair under the fair use doctrine.  And once again, Judge Alsup's court said, right, we agree.  And so we can imagine that Oracle's going to say, well, we don't, and we're going to get this overturned on appeal again.  So we're still, once again, the decision is in Google's favor, and it does seem like Oracle is not going to give this up.



Meanwhile, there was an interesting story that Bloomberg covered about Google's increasing pressure on their industry partners for keeping Android up to date.  They had an interesting graphic in the story that I put into the show notes here, showing that, whereas 84% of devices running iOS9 are using the latest version, only 7.5% of devices running Android are running Marshmallow.  So there's a dramatic difference in the support for the latest versions of the operating systems.



What Google is - and so Google is trying to change the way the current smartphone ecosystem works.  And we've talked about this extensively, the fact that, whereas mainstream operating systems, notably Windows and Mac, have essentially moved updating into it being done by default on a schedule, interacting with the user, saying we're going to update at a certain time, and updates are pushed out monthly and so forth.  The problem is that the smartphone change has come to an industry that wasn't using smartphones.



And of course all of this echoes sort of the IoT problem, too, that we'll be talking about later in this podcast and have been talking about in the last several podcasts.  And that is that the smartphones are being sold by cellular carriers that have traditionally sold feature phones or dumb phones or flip phones or phones that didn't carry with them the burden of being kept updated.  And so on the one hand they want the revenue from selling a high-value, expensive, high-demand product.  But they don't want the responsibility that inherently comes with selling a computer, an Internet-connected computer.



And all of our experience tells us that Internet-connected computers that are inherently incredibly complex, using layers of software that other people wrote, pulling it all together, grabbing pieces from every direction and cramming it into a ROM and then saying "Here you go," there's going to be bugs, vulnerabilities, problems.  These things have to be updateable.  And so the problem has been that there isn't that same drive to update.  And so Google is, like, struggling to come up with a way to change the way this industry is behaving.



So one of the things they're doing is using much more forceful tactics.  Google has drawn up a list that now ranks the top phone makers by how up-to-date their handsets are, that is, out in the field, based on security patches and operating system versions.  Google has shared this list, or did share this list, with their Android partners earlier this year and has discussed making it public to highlight those manufacturers who are proactive and publicly shame vendors that are tardy in keeping their handsets up-to-date in order to put pressure on these companies.



And this is behavior, I mean, this is sort of a strategy that we've watched Google implement in various other areas of the industry.  Google understands that people don't make change unless they're forced to.  And so there is tension that Google is creating with their downstream users of Android in order to put pressure on them to come up with approaches to keep their devices more up to speed.



In the story that Bloomberg put out, and I didn't put it here in the show notes because there was just too much to say, but they did mention that Verizon claimed it cost them hundreds of thousands of dollars to perform their own testing of all of this material that they were getting from Google, that Google was pushing them to push out to their customers.  And Verizon was feeling that they had a responsibility not to break their own customers' phones or there would be hell to pay.  And so this constant flow of patches isn't something they wanted.



Verizon doesn't want that because it creates a huge burden for them to deal with it.  And so they've just been saying no, you know, we want to leave things alone.  And they're trying to shorten that process.  Sprint has cut their time down from several months by a few weeks, trying to be responsive.  But the problem is there isn't the mechanism in place.  These companies are not used to being computer operating system vendors.  And Microsoft has years of experience doing this.  Apple has years of experience doing it.  The truth is these are very sophisticated operating systems that are being treated like appliances.  And of course this tune is familiar to our listeners because this is the whole IoT problem.



Now, one of the things that Google is doing is changing their behavior a little bit.  Because they're seeing that they're unable to get the newest version of their operating systems out into the field, like only 7.5% of all Android devices are running Marshmallow today, so what they're doing is they're reducing their own reliance on this update process which isn't functional.  New features, such as, for example, the Allo messaging service, are not being packaged as part of a new OS.  Rather they're being packaged on purpose as standalone apps so that Google can offer these to users of Android that their vendors haven't patched, haven't updated, that aren't current, so that they are able to provide them without the carrier being in the way.



And, for example, Instant Apps, which was unveiled at Google I/O recently, deliberately works on phones running versions as old as Jellybean, which came out in 2012.  So what that means is 95% of the current Android user base will be able to get access to, for example, the Instant App technology.  So Google's recognizing they're just not getting their partners to update, so they're deliberately making their newer things available, not as part of a later generation OS, because then no one's ever going to have them.  And this way people are able, 95% of the current Android user base is from Jellybean or more recent.



So anyway, I thought that was some interesting look at the problem, that another aspect of - essentially we can think of this as a flavor of IoT, where these things are smartphone appliances.  Users just want them.  They just want them to work.  And they want them to be secure and to be kept up to date.  But unfortunately they're coming through an ecosystem where that hasn't been the case.  And they don't want it to be the case.  And so, as we've said on this podcast before, that has to change.  These are computers that people have in their pockets.



I got a bunch of hubbub raised when the story was covered that Symantec had given Blue Coat Systems an intermediate certificate authority cert.  Now, I immediately recognized Blue Coat because I had referred to them years ago when I did the certificate fingerprinting work at GRC.  GRC's certificate fingerprinting talks about the idea of checking whether GRC sees the same certificate fingerprint as a user does because a certificate fingerprint cannot be spoofed.  And if there's a man in the middle, if there's any kind of connection interception - which is a thing we're talking about all the time now on the podcast.  For example, employers may deliberately, in order to deep scan HTTPS connections, they need to do that.



Now, the sanctioned way of doing that is for the appliance on the perimeter to install its certificate on all of the machines within that employer's network - essentially, that it becomes a certificate authority.  And so, just as we do now, where we have CA certs in our machines telling us which CAs to trust, if you are working for a company that has one of these appliances, all of the machines within that Intranet would have that CA cert added to them in order to allow that appliance to essentially create certificates on the fly.



Okay.  Well, what Symantec did was to give this Blue Coat Systems their own intermediate certificate.  And that's bad.  So what this means is, because everybody is trusting Symantec certs - remember, they purchased VeriSign, the certificate business, the CA business from VeriSign.  So all systems the world over have the VeriSign cert in their root store.  So what a third-party having an intermediate certificate from Symantec means is it's very different than this appliance operating on a controlled perimeter, like a corporation.  What this means is that this appliance does not need to put its certificate in all of the systems downstream from it because, since its cert is an intermediate certificate authority, it's able to create certificates which will automatically be trusted because Symantec has given it permission to do so.



Now, when I went looking for some coverage of this, I thought, okay.  I want a snarky take.  So of course I went to TheRegister.co.uk, which is where you go for snark.  And they wrote:  "Blue Coat sells network equipment that does just this kind of espionage."  I jumped down into their coverage.  "The gear intercepts connections to websites and strips the encryption away so secured communications can be monitored.  This is useful for corporations that want to keep tabs on their staff at work.



"Unfortunately, Blue Coat's HTTPS-snooping products have been used by repressive regimes to spy on activists online and quash dissent.  To tear away the encryption and peek inside people's packets, Blue Coat's man-in-the-middle gear masquerades as legit websites.  And this is so much easier to pull off when the manufacturer is an intermediate certificate authority because it will have the flexibility to generate trusted certificates as required.  It paves the way for seamless surveillance by Blue Coat-built equipment."  All absolutely true.



The Register wrote:  "We asked Blue Coat how it planned to use its new powers, and we were assured that its intermediate certificate was only used for internal testing and that the certificate is no longer in use.  The two firms [meaning Symantec and Blue Coat] said in a statement:  'Symantec has reviewed the intermediate CA issued to Blue Coat and determined it was used appropriately.'"  Okay, whatever that means.  And then they also said:  "Consistent with their protocols, Symantec maintained," wrote Symantec, "full control of the private key, and Blue Coat never had access to it."  Okay, well, that's not how this works, so that can't be true.



And then the statement continues:  "Blue Coat has confirmed it was used for internal testing and has since been discontinued.  Therefore, rumors of misuse are unfounded."  It's like, well, okay, except that the only way this works is for Blue Coat to have a private key which is trusted by all the systems downstream of it by virtue of its certificate being signed by Symantec.  I mean, that's what this was.  So for anyone to say that Symantec maintained full control of the private key, well, they may have maintained full control of theirs.  But the way an intermediate CA works is that it has a private key which it uses to sign the certificates it mints on the fly.



So anyway, what's important to take away is for Blue Coat to do what it wants to - that is, it is a provider of appliances that do this.  But we should remember that all they need in order to do this transparency is for any certificate authority out of the many hundreds, I think it's 1,100, that we implicitly trust, any one of those can do the same thing that Symantec was caught doing.  And so the way they got caught was that someone looked at the certificate that Blue Coat was using, and apparently this was not being used for testing.  This was somehow publicly found.



But we should remember that any government that wants to do this just needs to have one of the certificate authorities under that government's control.  I mean, China has them.  Any government certainly has certificate authorities that they can instruct to produce an intermediate certificate and sign it, please.  And then that intermediate certificate gets installed on the egress points to their network, or ingress points to their network, or to their country, and they're able to decrypt all the traffic.  And no red flags are raised by anyone's browser because there's a chain of trust back from that intermediate certificate, back to a trusted CA, a root certificate authority that is already in the trust store of everyone's computers.  So this is the mixed blessing of the whole public key infrastructure is it relies on trust.  And unfortunately, over time, it's gotten very top-heavy, or very trust-heavy.



Okay.  So there was an interesting study conducted by Duo Labs, and my title for this was "Bloatware Insecurity Continues to Haunt Consumer and Business Laptops."  And Leo, I've heard you talking about the whole bloatware problem, the problem of just all laptops containing some add-on software...



LEO:  All Windows laptops.



STEVE:  Right.



LEO:  That's not all laptops, thank goodness.



STEVE:  Yes.  Thank you.  I'm glad you clarified.



LEO:  Really it's Windows is the - yeah, right.



STEVE:  Right.  Well, and in fact I haven't mentioned that, when it became clear that Microsoft was saying that they were going to abandon support for older hardware, I did update myself to a state-of-the-art, it's a fourth-gen Carbon X1 Lenovo.  And the first thing I did was strip it and attempt to reinstall Windows 7.  Windows 7 would not install on that laptop...



LEO:  Oh, really.



STEVE:  ...because it already had Skylake, and Lenovo wasn't providing those drivers separately.  So, and I think I heard you mention that you were having problems installing Linux on your brand new HP.



LEO:  Yeah.  I get weird errors.  Maybe that's it, yeah.



STEVE:  That's the reason is that - now, what'll happen is, in time, Linux will catch up with drivers for that hardware.  But the hardware is newer than our operating systems.  And anyway, so what I was forced to do was to roll back to the original Windows 7 that came on this Carbon X1 fourth-gen laptop.  And then I went in and surgically removed all of the nonsense, all of that Lenovo crap that is added to it, which is all of their own, we're going to keep all of this stuff updated.



And that's the point of this story is that this Duo Labs took a look at Acer, Asus, two different Dell laptops, HP, and two different Lenovos, and looked at the security of it.  And I have another graphic here in the show notes.  For example, many of them do not transmit the manifest, that is, they have an XML manifest which their update managers use in order to query what's changed.  A couple of them do use TLS, but many of them don't.  So that's going back and forth in the clear with no security over it.



The researchers published a report on 10 new laptops, all running either Windows 8.1 or Windows 10, including some Microsoft Signature Edition machines that are supposed to be bloatware free, but still include some of these components.  All of the updaters specify their own update manifests, where the system grabs a remote XML file over HTTP.  Only the Dell systems update over HTTPS.



So of course that's a concern because anyone who is able to intercept that XML file could change it on the fly.  None of the manifests are signed, and they don't use proper engineer practices to make sure the integrity of the manifest is validated properly.  All of the manifests include commands to ensure that the updates run properly.  Meaning that a bad guy could simply hijack those commands and use that to execute whatever they wish with system-level permissions.  And all of these updaters run with system-level permissions, meaning that they're able to bypass any other security protections on the machine.



So what we're seeing is, again, and this is sort of becoming a theme as we look closely at what happens when third parties are involved in what need to be secure solutions, is that their focus is on making the stuff work, not making it secure.  So what Duo Labs found was that every vendor shipped with a preinstalled updater that had at least one vulnerability resulting in arbitrary remote code execution as system, allowing for a complete compromise of the affected machine.  Vendors often failed to make even basic use of TLS, properly validate update integrity, or verify the authenticity of the update manifest contents, meaning that they weren't bothering to sign them and validate signatures.  So they could be changed at will, and the updating software wouldn't know any different.



Vendors sometimes had multiple software updaters for different purposes and different implementations, some more secure than others.  So in one case there was one that was secure, but it was running alongside one that wasn't.  And what this does is create a large attack surface which is being created by these ancillary OEM software components, which the updaters are introducing to the system.  So unfortunately we have all of this focus on the OS security, where Windows is doing everything it can to keep itself hardened and secure.  Yet this unwanted bloatware, which all of these vendors are adding, is making the systems insecure.



So essentially what this says is, when you get one of these machines, you want to - and this is what I've heard you talking about on Windows Weekly with Paul and Mary Jo is just immediately, if you can, reinstall Windows.  If you can't, then go in and just get rid of this stuff, which you didn't ask for, and which is doing nothing but creating an exposed attack surface.  It looks like, without exception, this stuff is a serious security problem.



LEO:  Although I noticed the Lenovo Solution Center gets all green checks.  Is the update agent running, though, on all Lenovos?  Because, if it is, then it doesn't matter because it gets all red X's.



STEVE:  Correct.  And that's a perfect example.  One thing is all green.



LEO:  They do one thing right.



STEVE:  The update engine is running alongside, and it's all bad.



LEO:  Oh, lord.  But if I wiped it and put vanilla Windows 10 on this HP, Windows is doing it right, is what you're saying.  



STEVE:  Correct.



LEO:  Microsoft's doing it right, it's just these third-party solutions.



STEVE:  Correct.



LEO:  Including updaters.  And everybody puts updaters on.  Everybody does.



STEVE:  I know.  And so what this was a study of was 10 of these systems, are any of them secure?  The answer is no, not a single one was done correctly.



LEO:  Wow.



STEVE:  Because, again, security is hard, and their goals are just to make it work.  They're under the gun.  Their programmers are being told, you know, we were supposed to have this last month.  Finish it today.



LEO:  Well, I guess I'll be wiping my HP and putting Windows 10 on it until I can - because Windows 10 will work with the Skylake.  It's just Windows 7 that wouldn't.



STEVE:  Correct.  Correct.



LEO:  And you can probably slipstream something in there that might make it work.



STEVE:  Yeah.  In this case it was - I only purchased it like two months ago, along with - it was when Microsoft said, okay, we're going to stop supporting this.  Because all of my laptops are much older.



LEO:  That won't happen, by the way, for a couple of years.  So that's not the issue.  It's just maybe there's some pieces you need in your Windows 7 or something.



STEVE:  Correct.  It was doubtless the mass storage hardware.



LEO:  Yes, right.



STEVE:  Because the original Windows 7, even Service Pack 1, it's way years ago.  And so if you can't get that to go, then you're unable to bring it current.  And Lenovo is not officially supporting Windows 7 on the modern hardware.  And I had to go in and say, no, I don't want Windows 10, I want Windows 7.  So I had that downgrade permission, but they're still not officially supporting it with, like, exposed driver packages and everything.



LEO:  Yeah.  Well, maybe it'd be worth trying to get Linux on here instead of Windows 10, but I'll figure it out.



STEVE:  So I just did a refresh of the Never10 page.  I just wanted to give everybody an update:  783,503 downloads.



LEO:  That's awesome.



STEVE:  783,000.  It has wildly broken every record in GRC's long history of very popular freeware.  We are seeing more than 35,000 downloads per day.



LEO:  I can't believe somebody from Microsoft hasn't come to your house.



STEVE:  A day.



LEO:  Mr. Gibson, it has come to our attention that you have blocked nearly a million people from installing...



STEVE:  Well, this time next week, for next week's podcast, we will be north of a million downloads of Never10.



LEO:  Man.  Shhh.  Steve who?  Don't know him.  Never heard of him.  Unh-unh.



STEVE:  Yeah.  And that's just GRC.  All the other download sites now offer it, too.  And so they're downloading it like crazy, too.



LEO:  Get it from the original source.  Let Steve bear the brunt of this.  Don't get it from someone that's going to put malware...



STEVE:  Well, it's nice to have a count.



LEO:  Yeah.



STEVE:  And, frankly, there was one guy who accused Never10 of completely screwing up his system.  And, I mean, boy, he was mad.  Oh, lord.  I mean, he was dropping the F bomb all over the place and screaming at us.  And so I answered his email.  I wrote back to him, and I said, "Sir, I'm sorry that somehow your machine has been messed up, but really it couldn't have been by Never10.  Never10 sets two registry entries..."



LEO:  Doesn't do anything.  It's simple.



STEVE:  "...that Microsoft documents and sanctions."  And by the way, at that point we were north of half a million.  And I said, "Half a million people have used this, and it hasn't hurt anybody else's machine."



LEO:  Right, right.



STEVE:  And I also said, you know - and he wrote like he didn't know who we were.  And I said, if you got this from somewhere else, one of the dangers of getting it from somewhere else is that bad guys will use super-popular software as a means of getting malware into your machine.



LEO:  Guy Smiley in our chatroom's saying the Major Geeks download site is wrapping it with other stuff.  So you really don't...



STEVE:  A perfect...



LEO:  Yeah, perfect example.  And they have 16,769 downloads there.  So those people are getting - get it from the original source always, always, always.  Don't get it from these download sites that just really are kind of piggybacking on success.



STEVE:  Right, and try to get you to download their manager, you know, their...



LEO:  Shameful, yeah.



STEVE:  Yeah, exactly, and then take over your browser and get the Ask toolbar and other junk.  Yeah.  Okay.  So...



LEO:  By the way, just get Linux, Steve.  Would you please do me a favor, stop trying to make any of this stuff work and just put Linux on everything.  I wish you would.



STEVE:  Actually, I installed Linux on...



LEO:  Good.  See, easy; right?



STEVE:  Yeah, it was.  I had to do it because there were some problems with SQRL under Wine.



LEO:  So you had to try it, yeah.



STEVE:  And so, yeah, and so it wasn't fair for me to keep asking...



LEO:  No one has written an implementation for Linux?  I'm surprised.



STEVE:  Not natively.  No, I mean, it's got to get out there first.



LEO:  All right.  You feel calm?  You feel collected?  Your blood pressure's gone down?



STEVE:  Oh, I just don't have the...



LEO:  No, seriously, a lot of this stuff we talk about, it's like just the steam starts coming out of my ears.  It's like, how could they do this?  It was because of this whole Windows 10 thing that I finally said, you know what, I'm going to put Linux on one of these machines.  I've used it for years, but could I use it day in, day out?  And now I don't want to use anything else, to be honest with you.  Debian is my preferred distro.  And you probably heard, I've ordered a kind of high-end Linux laptop as my in-studio system.



STEVE:  I know, you're panting over it.



LEO:  Very excited.  It's a 17" laptop.  I mean, when I'm at the roundtable for TWiT and MacBreak Weekly and TWiG, I can't use a desktop.  I use a desktop in here in my office.  But I can't use a desktop.  But I want a laptop that's, you know, it's always plugged in.  It doesn't need to be portable.  So this thing, I'm sure it weighs eight pounds, but it's an i7 and 32GB of RAM, and it's got an NVIDIA 980M GPU.  And so I'm - tomorrow I get it.  I'll let you know.  But it's just, there's something nice about running an open source operating system with no spyware.  One of the reasons I don't run Ubuntu - and this laptop from System76 does come with Ubuntu, so I'm going to have to weigh this - for a while Ubuntu was routing your search.  Look at that.  Nice.  Nice.  You're using Ubuntu.



STEVE:  Yup.



LEO:  Yeah, you know, I think they're all right.  Now, I don't like it that you see there's an Amazon icon there in the dock.  That kind of bugged me.  And for a while they actually were sending search queries to Amazon.  So I kind of got soured on Ubuntu.  And then there was the Ubuntu One fiasco.  I think they've cleaned up their act.  I think they realized people don't like that kind of stuff, not in an open source operating system.  But I decided to go back to the distro that Ubuntu is based on, which is Debian.  Which, by the way, nowadays is just as easy and straightforward to install on existing hardware as Ubuntu is.



STEVE:  Yeah, well, and in fact that was one of the - that's an older T500 ThinkPad that I had just...



LEO:  Lenovos are great for Linux.  Great for Linux.



STEVE:  Yeah, that I had lying around.  And it just, you know, it just went right in.  And, I mean, it was flawless.  It recognized all the hardware.  Networking came up, WiFi, Bluetooth.  I can close the lid, and it puts itself in standby, so all power management is working perfectly.  No, it was just - it was a great experience.



LEO:  Yeah, it really is amazing, yeah.  I mean, we've come so far since the first time I tried to install Linux, which was a Slackware distro in '94 or '95.  And it was a nightmare.  Not to mention that it was on multiple CDs or maybe even floppies.  It was a little bit...



STEVE:  Yeah, I had to do a few things.  There's some controversy on the Ubuntu desktop because the tray was becoming overloaded with icons.



LEO:  I don't like it, yeah.



STEVE:  And so they, like...



LEO:  You can change that, obviously.  Everything can be changed.



STEVE:  Yes.  And in fact, so, for example, SQRL uses the tray to show its little icon in the tray, and you're able to access settings and do things and change things.  So I had to go in and fix that.  Of course I had to immediately swap Caps Lock and Ctrl, as we talked about earlier, in order for that to be workable.



LEO:  Easily done, though.  There's a tweak tool [crosstalk].



STEVE:  Yeah.  Yeah, exactly.



LEO:  Yup.



STEVE:  Yeah.  So I was - anyway, so SQRL.



LEO:  Yes.



STEVE:  A bunch of people have asked where we are.  With caveats, it's done.  So let me give everybody sort of a sense.



LEO:  Those are two words I didn't expect to hear out of your mouth.  Wow.  That's great.



STEVE:  Well, and - yeah.  So one of the things that SQRL has that, for example, that FIDO, arguably some competition for it maybe someday in the future, is the whole SQRL system provides complete identity management, whereas FIDO says that's somebody else's problem.  It's like it's out of spec.  The individual implementers will deal with managing identities.  For me, that was as much a part of making this thing user-friendly as anything else.  And the reason Never10 is going, like, just burning up the wires, is that it's just so simple.  I mean, somebody, was it How To Geek, somebody actually referred to me as an "unknown developer."  And I thought, well, okay.  They may not know me.  But still they were recommending Never10 because it's just tiny, and it just does the job, and it works.



So one of the things that SQRL does is, in this identity management, is that there is a - we had to deal with the possibility that someone's private key might get out of their control.  The whole concept with SQRL, as our listeners know, and we'll of course give it, again, coverage once this thing is downloadable for everyone to play with, is that you create one master key, and then all of the websites you visit receive a derivative of that based on their domain name.  And the derivative is the way they identify you every time you come back.  And by signing a challenge that they provide, you prove that you are the owner of the key that they know you by, essentially.



So in a perfect world there is, like, you're giving the website essentially a public key.  But the way to think of it is you're giving them no secret to keep.  And that's one of the keys.  In all traditional login, you're giving them a secret.  You're giving them your username and password, and you're needing them not to lose it, not to let it out of their control.  Well, we know how well that works.  We were talking about 117 million passwords that were published a week ago from an old LinkedIn breach just last week.  But the point is that the way the whole - the coolest part of SQRL is that what you give the website is a public key which is unique for that website, derived from your super-secret master key that never leaves your control.  So the website knows you and identifies you by that public key.



And so the simplicity of SQRL is that the website sends you a nonce, a random blob.  We call it a "nut," of course, instead of a nonce, because it's SQRL.  The website sends you a nut.  You sign that with the private key which corresponds to that website's domain, which again is derived on the fly from your super-secret master key.  So there's only one thing, one secret that SQRL has.  The entire system then works off of that.  And so every different website gets a different public key.  And that's the point is that it's a public key.  They could lose it.  They could publish it if they wanted to.  Doesn't hurt anybody because it's not of any use to anybody else because in order to use it you have to have the matching private key that only the actual originator of that public key would have.  So from that standpoint it's very simple.



But the question then is, what happens if that one super-secret private key is compromised?  And we just can't say, oh, well, that's not our responsibility.  That's out of spec or something.  No.  We had to deal with it.  So in the SQRL system, if you believed that something happened, if you were just - if you were worried, you had some concrete reason to believe that the private key was compromised, that your identity's one super-secret master key was compromised, then we need a means of replacing it that is not burdensome.  So SQRL incorporates the concept of a previous key.  And your SQRL identity, that is, it's just a file which has a well-defined structure as part of the spec, it can carry both your current and your previous super-secret secret.  So essentially you rekey.  A user, like if the government got your phone or something led you to believe you could no longer trust in the integrity of your SQRL identity, whatever the reason, you are free at any time to rekey your identity.



What that then means is you carry both.  And when you go to a website and perform the SQRL authentication - again, all of this is hidden from the user.  All they see is the QR code, and they snap it with their smartphone, or they click it with the mouse.  What happens is the site tells you whether it recognizes you by your current key or, if you have one, your previous key.  And if the site recognizes you by your previous key, it behind the scenes automatically updates to your current key.  So it forms in crypto terms sort of a ratchet, where it's able to take the secret, the obsoleting secret, the secret that is in the process of being obsoleted, and use that to jump to the current one.



And so the idea would be that essentially that makes this whole process transparent for all SQRL users.  They rekey their identity for any reason; and then, as they log onto websites that still know them, that they haven't logged into since, that thus still know them by their old key, it's transparently updated to the new key.  So that's the way the system had been from its beginning.



The argument was, okay, well, what if, like, something was really wrong, and you needed to rekey again, that is, have a second rekeying, and SQRL only kept the previous key, and you hadn't visited all the websites that know you by your first obsoleted key before you had obsoleted the key again.  And so it was like, well, okay, how far do we take this?  And so the point is what I spent, maybe it was - I'm not sure how long ago it was and how long it was.  But basically we came to a compromise.  And that was that, first of all, remember that maybe many users in their entire use of SQRL will never rekey even once.  That is, it'll just work.



So, but again, this has to survive worst-casing.  So it's like, okay, we really want this to work, both the potential to become an industry standard, so there can't be any gotchas.  So we settled on four, just because we don't want the identities to become too big.  They become burdensome.  And remember that the only time you would need more is if you were, like, rekeying like crazy such that any site you visited didn't know you by, for example, any of your four previous keyings.  Which seems unlikely, given that no one may in fact ever need to rekey even once.



But a good use case, where you would probably want to rekey, is, for example, Stina at Yubico has expressed a strong interest in immediately supporting SQRL, the moment we officially say it's done.  And so if you were using it without hardware support, then even I would rekey my identity for hardware.  That is, because what Yubico would produce would be an HSM, a Hardware Security Module, where the signing process never left the hardware, so it was virtually then impossible for it ever to get out of your control or be lost.  In which case, I could see that rekeying makes sense.



Anyway, so one of the things that had to happen was that the storage spec had to be updated.  The interactive spec needed to be changed.  And this change has had some repercussions through the spec.  So that's all done.  And the SQRL client and the demo website, in fact I think Jeff's iOS client is already up to speed.  Actually, he beat me there.  He had the four previous identities support before I did.  So we're current there.  And then, as I was going through the client, one of the things that I wanted to fix was the textual input.  And I'm only bringing this up because it was like the most recent thing I just finished.  And I had them, yeah, here.



So this page the SQRL client prints for you.  Again, one of the key concepts of SQRL is that there is no one to ask when you forget your password.  That's one of the keys here is any third-party system there is password recovery.  You can say to the website, oh, I forgot my password.  Send me an email link.  Well, that's a mixed blessing, of course, because that means that there is a password, a secret that they're keeping, and there is a process for recovering the password that is subject to exploitation.  With SQRL there is no third party.  There's no one to go to if you forget your password.



So as part of creating a complete solution, we had to make it practical for there to be no recourse.  And so one of the things that SQRL does is it goes out of its way to help you come up with solutions for "I forgot my password."  So one of them is your identity as a QR code.  So this is a piece of paper you put away.  When you create your identity, you print it out, and you put it away.  Maybe you put it in a safety deposit box, or in a shoe box, or wherever your other private papers and things are kept, so that this is your get-out-of-jail-free card.  If you only had your SQRL identity loaded in one smartphone, and the dog ate it, or you lost it, or something horrible happened to it, this is your SQRL identity.



Well, one form of that is printed out ASCII.  And it is, I forgot how many characters.  And actually it varies because here is an identity that has never been rekeyed, and here is one that has been rekeyed.  So it's carrying its previous and current key with it.  And you can see it's getting longer.  Well, there's whitespace at the end of this page because you might have a third or a fourth key which, again, makes it increasingly long.  So typically that would, as I said, someone might never rekey.  They just may not need to.  But we wanted to make it feasible.



So how do we enter something like this, that's long and potentially over their whole lifetime of use getting longer?  What I just finished working on last week was a - in Windows we call it a "custom control."  A control is something like a button or a dropdown list box or a text field or whatever.  Well, I had to create one from scratch because I wanted exactly correct behavior.  I wanted the user to, when we print that out, it's in multiple lines with five groups of four characters.  So I wanted the grouping to be enforced so that, as the user entered it, it automatically grouped itself.  Windows doesn't have that capability automatically.  People who've entered those, like, Windows license keys, what Windows has done is have individual text fields, but it's uncomfortable.  They sort of - you tab between them.  You're unable to cursor between them.  It just doesn't work very well.  Mine works beautifully.



But the other thing I wanted was I wanted as-you-go confirmation of everything you've done so far is correct.  So as you're entering the text into the line, when you enter the 20th character, as you're entering it, the line is red.  When you enter the 20th character, it turns green, only if everything you've done so far is perfect.  So the first 19 characters you enter are actually the key, part of the keying information.  The 20th character is a check character based on a modulus 55 of the hash of all the preceding characters.



And I should mention that the identity is a base - I'm sorry, base56, not 55.  It is 56 printable characters with the confusing ones removed.  So there's no ones, there's no zeroes, because ones look too much like lowercase "l" and zero looks too much like uppercase "O," of which there aren't any.  And so what I did was I took all of the alphabet and removed anything confusing, resulting in - if we had the whole alphabet and numbers, what would we have?  We'd have 26 in upper and lower case, so 52, plus another 10, so that would be 62.  And so instead we have 56.  I've eliminated a bunch of the confusing ones.



And so identities are in this base56 alphabet.  And there's a base56 check character.  So as you go, these lines turn green.  And because there are some people that have red/green colorblindness, I didn't want to depend upon that.  So you are unable to proceed on the next line if any previous line is incorrect.  So if it won't let you go further, and you can't see that it has not turned green, then your cue is, well, I must have a mistake in the previous line, and you're able then to go look at it again, just inspect it, move the cursor up, fix the character.  It's then allow you to proceed.  So anyway, all of that's done.



I also then just added, just as a nice little touch, the SQRL icon prints itself down at the bottom of the page printout.  But we got reports from - or I got reports, I say "we" because it's all being done in the SQRL newsgroup on GRC - that that was crashing under Wine when the SQRL client was run on Linux.  And so what I just spent the weekend doing was installing Ubuntu 16.04 LTS on a laptop.  And I found that that was due to an unimplemented function that I was using.  So I coded around that.  And at the moment...



LEO:  A function unimplemented in Wine, like you were calling something that Wine didn't support.



STEVE:  Correct.  And in fact I run across that a lot.  For example, the other problem is that I'm wanting to use Courier New under Windows because Courier is a monospace font, and the serifs make the uppercase "K" and lowercase "k" very different looking.  If I removed all possible confusion between characters, we'd end up with six.  And so that would make the identity too long because we wouldn't have enough bits per character.  So I had to make a tradeoff.



The problem is, one of the other things broken in Wine is something that is called the "font mapper" in Windows, where you're able to specify sort of the generic characteristics you want for a font, and then Windows says, oh, you want - I have one that matches what you've asked for here.  And in fact it always gives me Courier.  And under Wine it never gives me a monospace font.  It just doesn't.  That's completely broken in Wine.



So I'm in the process with the newsgroup of identifying universally available fonts.  Or, what it looks like I may do is take the FreeMono font, which is one of the free open type fonts, and remove all the glyphs from it that I'm not using.  I tried that late last night, and that allowed me, after compression, to only increase the EXE size by 15K.  So that would be me bringing my own subset of Courier New, which is in the free version as FreeMono, bringing that in and carrying it in the client, so I'm absolutely guaranteed of what the user is going to see.  And I'm a little worried about foreign language fonts in other countries because I want to make this universal.



So that's a sense for this process.  I haven't been talking about it because, I mean, while I've been working on it, it's just - it's slow going.  I want to get it done.  It's got my full time and attention.  But again, I'm wanting it to be perfect.  And we're very close.  When I said "with some caveats it's done."  So there's still some Wine problems.  Wine's fonts seem to be longer horizontally than the Windows API knows.  You're able to ask Windows how long is this font, that is, here's a string in this font.  What number of pixels long is it?  And I use that in order to trim the size of the controls.  Well, Wine trims them wrong, and so the ends of the strings are being chopped off.  So I want to give Wine some attention.



So bottom line is it's done.  There is some language I need to change in the UI because I was originally talking about creating a new identity rather than rekeying an existing identity.  And so the UI doesn't yet have the notion of rekeying just in the language.  So I need to do that.  But it's been working for quite a while.  We, like, kill it when some major upheaval occurs like going from one previous identity to four previous identities.  That took it down for a while and had repercussions throughout the code, which I then had to fix.  But that's been - it's been up again.  And I think we're done.



So there are a number of things like, for example, when you're running the client, and you click on the QR code in order to log in.  At the moment, the first time you do it, that launches SQRL.  It gets focus, and you can just type right into the - enter your password to prove that it's you in front of the computer because SQRL does still need somehow to authenticate you to it.  And then it handles all of the per-website authentication for you.  But it's still necessary to prove you're you, and not somebody who just walked up to your computer.



The problem is, if SQRL is already running and you do this, it launches a new instance which looks to see that it's already running and hands off control to the existing instance.  The problem is that Windows deliberately prevents other windows from obtaining focus because that can be abused for annoying pop-ups and things, where something pops up and takes focus away from what you are doing.  So at the moment that's something I need to fix.



But we're at that level.  We're to the point now where, for the next I don't know how long, I'm tempted to say a couple weeks, I will be in cleaning up all of those things.  I have a long list of things that I've made notes of, many of which have already been fixed, but I haven't gone back and removed them from my to-do list.  So we're very close.  It's done.  And so I hope soon to be able to say here is, I mean, it'll appear on the website.  People can download it, create SQRL identities, play with the demo site that we've had, I mean, this is the thing that a long time ago, Leo, you brought it up on your laptop and showed it on the screen, and I used Jeff's iOS client to log myself into your laptop over Skype.



LEO:  Oh, man.  I remember that.



STEVE:  Yeah.  So, I mean, the technology, that fundamental...



LEO:  That was cool, yeah.



STEVE:  ...technology has been running for a long time.  But I want this thing to be polished because we know I have a tendency, once I finish things, to be only dragged back to them kicking and screaming.  Which brings me to SpinRite 6.1, which of course I can't wait to get back to because it needs my attention next.



LEO:  Good.



STEVE:  So that's where we are with SQRL.  As far as I know, it's finished.  In every meaningful way it could be used today.  I need to finish up aspects of the UI, things like there's one dialogue where I keep coming to it, and it finishes its work, and it waits for me to hit Next rather than automatically jumping to the next screen.  And, okay, well, it ought to do that.  So it's that level.  It's just the debris that needs to get cleaned up.  So it's been quite a journey.



LEO:  It would have been easier to write it from scratch, I think, at this point, but okay.  That's okay.  That's okay.



STEVE:  Yup.



LEO:  Awesome.



STEVE:  Okay.  So I wanted to share three tweets with people.  One was from Pat, who tweeted me from @thetweetguy99.  He said:  "Steve, I recently listened to your discussion of Chrome vs. Firefox in SN Episode 557, and I was struck by your comment that 'Most users would be better served by Chrome.'  I'm a sysadmin for a small company, about 50 employees, and I check all of our end-user machine logs each week."  Boy, this guy's a responsible sysadmin.  "In reviewing those logs, two things stand out each and every week:  First, Internet Explorer is by far the application that crashes the most; and, two, virtually all of the malware events we experience are drive-by infections by legitimate websites hosting malicious ads.



"So I thought, it's time to deploy Chrome to everyone.  They've [meaning Google] made it fairly easy for enterprises to deploy - msi installers, group policy templates, et cetera.  And so I've begun rolling out test installations of Chrome with our favorite adblocker preloaded, uBlock Origin.  We're already seeing positive results, even had one user go back to a website that tried to download malicious code onto his machine via Internet Explorer just 30 minutes prior, and was pleased to see that no installation was even attempted when using Chrome with uBlock Origin."



So anyway, I just wanted to share that, a bit of feedback from the field, somebody saying IE was crashing more than anything else, and all malware events that he was logging were from websites hosting malicious ads.  And by switching to Chrome with uBlock Origin, problem solved.



Rob Woodruff - you had a comment, Leo?



LEO:  No, go ahead.



STEVE:  Oh.  Hi.



LEO:  When you're done.  I just was - I'm still working on getting Linux installed on this HP.



STEVE:  Ah, perfect.



LEO:  And here's an interesting thing I just noted.  Of course the HP has TPM on it, the Trusted Platform Module.  And one of the, you know, I know enough to turn on Legacy Boot and turn off Secure Boot because that always keeps you from installing an operating system other than Windows.  But it turns out you also have to reset the TPM if you want to install somebody, you know, something...



STEVE:  Clean it out.



LEO:  Yeah.  The TPM must have some information about Windows in it, like don't install any of that other stuff.



STEVE:  Right.  Interesting.



LEO:  Yeah, I'm playing with it still.  Haven't quite gotten there; but we're getting there, bit by bit.



STEVE:  Cool.



LEO:  Yup.



STEVE:  So Rob Woodruff tweeted.  He said:  "Hey, Steve.  I listened to the podcast from Tuesday, and Carl in Indiana with a Netgear cable modem probably needs to get a firmware update."  Remember, this was where I was talking about - he was saying that he was - this was on the whole issue of constantly needing to reboot his cable modem.  And I said, you know, if restarting the cable modem brings you back online, then it's got to be a problem with the cable modem.  So anyway, Rob said he listened to that podcast, he says, and he "probably needs to get a firmware update."



He said:  "I've seen a lot of Netgear cable modems with Comcast have that exact same problem, whereas the SMC cable modems that Comcast provided prior to the Netgear cable modems work just fine.  Comcast worked with Netgear to develop a firmware update that was supposed to alleviate that symptom."  He said:  "I'm not sure who Carl's cable modem provider in Indiana is, but he might want to check with them to see about a firmware update.  Either that, or ask for a different brand of cable modem."  But I did hear, not only from Rob, but others, that changing cable modems solved their problems for them.



And finally, I really liked this.  I can't pronounce this person's name.  S-T-I-J-N Crevits, C-R-E-V-I-T-S, said something that I thought was so sharp.  He said:  "Steve, don't you think not allowing the filtering of Win updates through APIs is more secure?  For one, malware would otherwise be able to block security updates."  And that's like one of those head slappers.  It's like, of course.  Remember, and this of course is relative to Never10 because I have commented that Microsoft doesn't provide a clean means for preventing Windows updates.  And I was complaining about it because wouldn't it be nice if Never10 could simply uninstall 3035583 and then prevent its reinstallation?  But it's like, duh, that's not good because exactly as he mentions, if there was an API that allowed you to say, okay, don't install these updates, well, that's what malware would do in order to keep itself from being washed away by updates.



So thank you for that little bit of reality.  I appreciated that.  Obviously, once you hear it, it's like, yeah.  That's one thing that you don't want software running in the machine to have control over is the machine's own updates.  On the other hand, it does mean that we are pretty much a victim of whatever Microsoft wants to push on us through the Windows Update mechanism, over which we have no good control.



And, finally, a note from a SpinRite user whose name is just - it's Sitbit, S-I-T-B-I-T, in London, Ontario, Canada.  The subject was YAST!  And I'm not familiar, but maybe that's a SuSE package manager because he said, in parens, (NOT a SuSE package manager), but rather that's his acronym for Yet Another SpinRite Testimonial.  And he said:  "Hello, Steve and Leo.  Love you guys.  The show is fantastic, yada yada, et cetera.  Just a short and sweet SpinRite story.  I had an old 320GB spinning disk salvaged from a laptop that I used to store some of my data.  It wasn't terribly important, but I didn't want to lose it, so I had it mirrored to a backup drive.  Well, the drive failed, so the directory I had it hanging off of showed up as empty.  So my mirroring software dutifully deleted my backup, thinking the files had been purposely removed.



"Long story short, I caused Steve to hear a yabba dabba doo," which of course is the sound that my system makes when someone purchases a copy of SpinRite.  I always am appreciative because that, as I have said, pays the bills around here.  And he says:  "And two hours later my drive was back in action.  Thank you for this wonderful product.  Thanks again, Sitbit."  And thank you for the great testimonial.  I'm glad for a yabba dabba doo and that we could recover the data lost from your drive and bring it back online.



Meanwhile, Leo, how is your Linux install going?



LEO:  Eh, yeah, well, I don't know.  Something weird's happening.  I'll tell you what's happening.



STEVE:  Yeah, I think it's just - I think the hardware is too new.



LEO:  Might be.  So I use to install Linux, as most do nowadays, a USB key.  And I'm using one.  I have a Debian here, an Ubuntu, and a Fedora.  And I've used the Debian and Ubuntu keys many times to install, so I know they're good.  



STEVE:  On older laptops.



LEO:  On older laptops.  And the install starts up.  The installer starts up everything.  But then at some point it says, okay, where's your CD-ROM drive, which I've never seen before.



STEVE:  That's exactly - that's it.  Because what's happened is it's trying to switch from the BIOS that it was using, it was using the BIOS for accessing the drives.



LEO:  Right, right.



STEVE:  It tried to switch to its own driver.  And when it switched to its own driver...



LEO:  Yeah, that's what happened.



STEVE:  ...it could no longer see the install media.



LEO:  Yeah.  Wow.  Wonder how I change that behavior.



STEVE:  What you might try, you might try switching - oh, you don't have a built-in CD.



LEO:  No.  I'm trying - the Fedora is a 'Net install.  So what I'm hoping is that it maybe will continue the install over the Ethernet.



STEVE:  Correct.



LEO:  Who knows what'll happen.



STEVE:  Worth trying.  Is the PXE installed?



LEO:  Well, we'll see.  I would think.  I don't know.  I don't know because, you know what, they don't want you to put anything but Windows on this.  That's really the truth.



STEVE:  No.  And that's my - I burned then...



LEO:  You put it on a CD.



STEVE:  Yeah, I burned a DVD.  It occupied about half of it, or it was like 1.7GB, I think, on a DVD.  And again, it's older hardware.  And so it knew how to talk to the device, the actual physical hardware devices on the laptop.



LEO:  Haven't purchased a machine with a CD-ROM drive in years, literally, like three or four years.  I guess I can - I have a USB drive around somewhere.  Probably won't work, either.  Anyway...



STEVE:  No, I think if your USB dongle didn't work, I think a USB CD wouldn't.



LEO:  Right, that wouldn't work either, would it.



STEVE:  But it's worth trying a 'Net install, an over-the-'Net install.



LEO:  Yeah, yeah, hoping that'll work.  All right.  Sorry, didn't mean to interrupt.



STEVE:  No, I wanted a little bit of a breather.



LEO:  Yeah.  This is the issue, though, and it's one of the reasons I ended up buying a Linux-first laptop is because these manufacturers, they're working so closely with Microsoft, and they see it as a security issue.  Oh, we want to make sure you're installing legitimate Windows 10 on here and nothing else.



STEVE:  I know.



LEO:  But that's, you know, it's a limitation of the hardware.



STEVE:  It's a foreclosure, frankly, of the industry, unfortunately.



LEO:  Yeah.  Dell is good.  Dell continues, and Lenovo, I think, continues to support other operating systems.



STEVE:  Well, and I just think, again, I think it's that laptop is brand new.



LEO:  Right.



STEVE:  And similarly...



LEO:  Somebody will solve this, in other words, in the Linux community, yeah.



STEVE:  Yes, yes.  It'll be, you know, I'm sure somebody's already - one of the kernel gurus is working on updating the driver to incorporate support for whatever that latest chipset is that is in the HP.  Because I had exactly the same problem when I tried to do a clean install of this brand new fourth-generation Carbon is it just said, well, it just lost the access to the mass storage when it tried to switch over to it.



LEO:  I may be forced to use Windows 10, and isn't that what Microsoft wants.



STEVE:  Yeah.



LEO:  After all.  All right.



STEVE:  Okay.  So IoT in its infancy.  I actually came up with an acronym, I-D-I-O-T, which is...



LEO:  IDOT?



STEVE:  I Don't Internet Of Things, and of course that's IDIOT. 



LEO:  I-D-I-O-T, yes,



STEVE:  Uh-huh.  So one little anecdote I loved was something that I picked up, but I've been saving it for when we could talk about this.  And we've often talked about the CVE, that's the Common Vulnerabilities and Exposures.  What CVE is, is an industry-wide list of information, like system, security vulnerabilities and exposures whose goal is to provide common names for publicly known cybersecurity issues.  The goal of CVE is to make it easier to share data across separate vulnerability capabilities - tools, repositories, and services.  That is, you know, to give us a common numbering for, like, all vulnerabilities in the industry.  So what I got a kick out of was - and that's at CVE. Mitre.org.  They posted an update, and this is maybe a month or two ago, but I grabbed it because I was just - I'm just, like, oh, my god.



It said:  "Update.  The recent explosion of Internet-enabled devices known as the Internet of Things, as well as the propagation of software-based functionality in systems, has led to a huge increase in the number of CVE requests we have been receiving on a daily basis.  We did not anticipate this rate of growth and, as a result, were not as prepared for the latest surge in requests over the past 12 months as we had hoped.  The result has been some of the delay in CVE assignments that the software security community has recently witnessed.



"We recognize the inconvenience that has resulted and are working hard to come up with a solution.  Last week we proposed a possible option to our CVE Editorial Board, but some members raised concerns about the approach, and we have withdrawn it from consideration.  We're working diligently to come up with a solution that will meet the needs of all the various use cases of CVE."  In other words, the Internet of Things has overloaded the long-running existed CVE management system.  They cannot provide indexes and numbers and names for vulnerabilities fast enough as the Internet of Things is creating problems for the industry.



So one of the little studies that I ran across when I was putting this together, and this is something else that I've been holding onto for a while, but only for a few weeks, was Network World reported on a BitDefender study.  We've talked about BitDefender.  They are a well-known security company.  They examined four popular Internet of Things devices.  One was of course the WiMo products - WiMo is popular enough that probably everybody has heard of them - used to control lights and wall sockets.  They found that the switch communicates with the smartphone without authentication.  The only thing encrypted is the password, but the password is composed of elements of the MAC address and the device ID, both which are already transmitted without encryption since only the password is encrypted.  And that encryption uses a preset knowable static key.



LEO:  Oh.  



STEVE:  They informed WiMo six months ago.  Nothing has changed.  So no traction from the vendor.



There's a light bulb called the Lifx Bulb that they also looked at.  BitDefender found that its hotspot function suffered from insufficient authorization and authentication.  When setting up this mood effect bulb, as they called it, a "temporary," in quotes, "bootstrap hotspot" is created to manage the initial configuration with the phone.  But the problem is that you can later create, anyone can later create an identical fake bootstrap hotspot which then allows a hacker to capture the username and password of the main actual WiFi network that the bootstrap hotspot was only there to allow you to establish.



So the idea is, the way this works is that you have an existing WiFi network, and this Lifx bulb wants to get onto the main network.  So what it does is it establishes a bootstrap Open WiFi network that your phone can see.  And then you use that to tell it to identify the main network that it wants to get on.  You then give it your username and password, and you use this bootstrap hotspot to communicate to it because of course it has no otherwise, like, mouse and keyboard and screen and so forth.  Problem is, anybody can come along later, bring up that bootstrap hotspot, and query it for the username and password.  Not good.  Once again, after six months of having been notified of the vulnerability, its manufacturer has taken no action.



There's something called the Link Hub which is a GE product.  The GE Link light bulb hub is used for remote-control lighting, lacks any transport encryption when configuring through the hotspot, so the data is transmitted in cleartext.  And once again, after six months, no activity.



The fourth thing that BitDefender looked at seemed a little better.  There's something called the MUZO Cobblestone audio receiver, which did fare slightly better than the others in that some of its vulnerabilities were repaired after BitDefender notified its manufacturer.  However, the initial issue was scary.  And even after it was fixed, there's still a problem.  So the device created a new WiFi hotspot that was never disabled.  So again, this is this problem of how do you bootstrap these things onto the network?  And it's funny because I had my best friend set up a WiMo.  And he said, "Oh, yeah, it was so easy to set up."  And I'm like, "Okay, well, how did you get it on your WiFi network, exactly?"  And he said, "Oh, you know, I just used my smartphone and gave it my WiFi password."



And I had never looked at this process, but it seemed to me this was a chicken-and-egg problem because how could he give it his WiFi password if it didn't know his WiFi password because it wouldn't be on his WiFi.  Now I understand.  These devices set up an open unauthenticated temporary hotspot, which the phone, you know, probably called WiMo or something, which the phone then gets on, and that's how you communicate with it.  Unfortunately, that feature is, like, still there.  These things don't shut it down, probably because they're worried, oh, what if you change your WiFi password?  Then you're going to have to get back on the hotspot.



So they're creating insecure hotspots which are inherently linked through them to your main secure network, making them insecure.  And in fact, in the case of this MUZO Cobblestone audio receiver, believe it or not, it never shuts down its hotspot, and runs an open telnet service with the userID of "admin" and password of "admin" statically present, which allows open access to the household's original WiFi network, bypassing any need for credentials.



LEO:  Well, it saves some time.



STEVE:  So unfortunately, that's a snapshot of the state of the art of IoT devices.  We can't say that they're all a problem, but the huge majority of them really do seem to be a problem.  And so taking a meta view, stepping back from the details a bit, these first-generation IoT devices are trying to do the impossible.  They're trying to be, they're pretending to be a limited-use, purpose-specific appliance, with at the same time having all the sophisticated communications and connectivity power of a general-purpose computer hidden inside.  But they're also trying not to have, not to present any of the responsibility baggage that all of our experience has taught us necessarily comes along with any powerful, connected, general-purpose computer.



And in fact, at the beginning of their report that we will cover in more detail next week in Part 2 of this, Rapid7 put it perfectly.  They said:  "For our purposes, we can think of a 'Thing' with 'Internet' as simply any device, regardless of size, use, or form factor, that contains a CPU and memory, runs software, and has a network interface which allows it to communicate to other devices, usually as a client, sometimes as a server.  In addition, these Things tend not to resemble traditional computers.  They lack a typical keyboard and mouse interface, and they often have a user interface not centered around a monitor or other text-filled screen.  Finally, these devices are marketed and treated as if they are single-purpose devices, rather than the general-purpose computers they actually are.



"This last distinction is often the most dangerous one to make when it comes to deploying Internet of Things devices.  In his keynote address to the Chaos Computer Club titled 'Lockdown:  The Coming War on General-Purpose Computing,' Cory Doctorow makes the case that, with today's technology and current computer science thinking, we cannot yet create a computer that is anything other than general purpose.  End users may have devices that are nominally prohibited from performing certain actions according to the manufacturer, and those manufacturers sometimes go to great lengths to foil modification efforts.  In the end, though, it is not possible to build and sell a computing device that cannot be coerced into rebelling against a manufacturer's intentions."



And so my own take is any system based upon a stored program must be able to have that program changed when bugs and security vulnerabilities are found.  We all want that.  We need them to be fixable.  But that same need for the "ware" to be "soft" inherently opens the device to abuse.



So next week we'll look at some details of what Rapid7 found when they looked closely at baby monitors.  And, boy, I know that our listeners will find it really fascinating.



LEO:  Sounds like it's going to be worse than that, even.



STEVE:  Oh.



LEO:  IoT, it's in its infancy.  And, well, if you want to know a way, I guess, to use IoT, Steve has in the past described a more secure way.  You don't want to give it access to your home network.



STEVE:  Oh, everything, every - yes.  Everything we are learning says, I mean, you absolutely have to create a securely segmented network where...



LEO:  Is a guest network sufficient?  Problem is, then it's not really on your network, which makes another issue.



STEVE:  Right.  That's a problem, too, is that, I mean, you certainly - we will show next week how anybody with a baby monitor, any of these that Rapid7 looked at, I mean, the horrifying insecurity, and the horrifying lack of care that the manufacturers have.  What we see are companies producing feature-laden monitors that are virtually devoid of security.  Meaning that anywhere, anyone in the world can be looking at your baby sleeping, or wherever you have aimed this camera.  I mean, they're just - it's horrifying.  And they don't care.  They're selling functionality.  They're not selling security.



And they all say, oh, you know, encryption this and secure that.  And it's just nonsense.  But the buyer doesn't know.  They just say, oh, look, it said it's secure.  Okay, click here and purchase.  So there the vulnerability is not that it, I mean, you don't want it on your network, certainly, because lord knows if it's got an exposed telnet server that anybody can log into elsewhere in the world using admin and admin as the username and password, you don't want that on your network.  But you really don't want it exposed to the Internet at all.



LEO:  Yeah.  Wow.



STEVE:  Yeah.



LEO:  And I'm still, just for an update, no.  I think you nailed it.  So this is what happened to you.  It gets to a certain point, and then it just switches the drivers.



STEVE:  Correct.



LEO:  And it says, "I can't read that key anymore."



STEVE:  Correct.



LEO:  And of course I don't have any USB 2.0 ports on this thing, or any other kind of legacy way of doing it.



STEVE:  Right, right.



LEO:  Yeah.  All right.



STEVE:  Makes sense.



LEO:  But it's locked down.  See?  We can't have it both ways.  All right, Steve.



STEVE:  Okay.  So for anyone who's not interested in sleep, you can hit Stop now.  I just need to briefly tell all of the people who have been following along what's going on.  As I mentioned before - okay.  One of the key ingredients of my Healthy Sleep Formula is Seriphos, which was the trade name of something called serine phosphate, produced by a company called InterPlexus.  As everyone knows who has been following this, several months ago - coincident, unfortunately, with my going public with the Healthy Sleep Formula, which I don't have a sense for how many people we've helped, but lots - the InterPlexus company decided to discontinue their old formula.  Unfortunately, the new formula doesn't work.



And so what I did, I guess it was maybe a week ago, as soon as the new one came out and reports surfaced that it wasn't working, was I put up a review on Amazon to warn people that this new one was changed and that anyone - the problem was there were, like, some 208 glowing five-star reviews on how fabulous Seriphos was.  Unfortunately, unless people were warned, they would be purchasing the new Seriphos, believing it was the old one.  So I just wanted people to say - I wanted to alert people that the formula was changed.



Well, InterPlexus was not happy with me, and I received a phone call last Friday from France, where the medical director of InterPlexus was traveling, to express his unhappiness.  And I got harangued for an hour by this guy, trying to tell me how pure the ingredients were, and that they bought the best possible components and minerals from Germany, and this new formulation was incredibly high quality.  And I said, yes, that's very nice, but it no longer works.  And he apparently didn't care that it no longer worked.  He just was focused on how high quality the new ingredients were.  So it's like, well, okay, sir.  I'm sorry.  Anyway, so I updated my review to tell everybody how good the new ingredients were, in fairness to him, but also that it unfortunately appeared to no longer work.  Make up your own mind, but I have to go find some other solution.



So I tracked down the people who make Enerphos, E-N-E-R-P-H-O-S.  The bad news is the moment I posted that news, that like maybe this was going to be a replacement, they sold out all over the Internet.  No, you couldn't get it anymore.  And so same problem, again.  I found them, and I told them that - oh, and I also talked to the chemist who was the originator of Seriphos.  He's the guy that created the original Seriphos and was supplying it to InterPlexus for quite a while, until there was some falling out, and they went their own ways.



So this morning I got an email from the company that makes Enerphos.  And Sheryl, who is one of the executives, said:  "It was good to talk with you last week.  Thank you for reaching out to us and giving us a heads-up on the new demand we can expect for Enerphos.  Brian worked all weekend making more."  Literally making it.



And so she said:  "We have a few hundred bottles en route to Emerson now and expect to be able to ship more by Friday.  We'll keep you informed of our shipments to our suppliers, so you can keep us updated on the feedback you get from your readers.  Thank you again for your thoughtfulness in contacting us directly."  And of course it was self-serving because I would like people who are interested in the Healthy Sleep Formula to be able to get the components of it.



So on the Healthy Sleep Formula site, or page, just google "healthy sleep formula," is a link to Emerson.  Emerson is one of their larger suppliers.  And right now it's backordered.  But they're in the process of getting more stock.  So if anyone is waiting for Enerphos, the thing to do would be to backorder it.  And I'm sure that this Emerson - Emerson Ecologics is the name of the company - will ship it when they can.



Now, I should say I haven't yet made my own determination about Enerphos as opposed to Seriphos.  It just takes time.  I've been working on this since last October, and I only went public with it recently.  And it's changed a lot of people's lives.  And now the problem, of course, is that we can no longer get the Seriphos that I based this healthy, like a lot of this formula was based on.  So I don't know what I'm going to do.  I need to see whether Enerphos is a replacement.  And if it's not, then at least I know who invented the original Seriphos, and maybe I could say, "Hey, Brian, can you make some of the original stuff for us because we need that."  Anyway, that's where we are.



LEO:  I can see it's not long before you start to grind your own phosphatidylserine in a mill in the back of your garage and start making Steve's [Numinos]. 



STEVE:  Well, I love that this guy and company, they're in Fresno, and he made a bunch over the weekend because we need more.  So that's nice.



LEO:  This is starting to sound a little weird.  I'll be honest with you, Steve.  Just a disclaimer:  Steve's not a physician.  Consult your physician before taking any supplements.  And if you want to know more, GRC.com.  And I got nothing to do with this one.  This is all you and the Seriphos family.  Okay.  What is it supposed to be, actually?  I mean, is it actually a formulation of a variety of things, like a secret formula? 



STEVE:  Okay.  So there is a - great question.  There is a molecule called phosphatidylserine.  It's a so-called phospholipid.  What that really means is that it's a long molecule.  It's got phosphorus in it.  And attached to one end is something else, in this case serine.  And attached to the other side of the phosphorus is a glycine molecule, to which two long lipid tails, actually DHA, docosahexaenoic acid, are attached.  And so this is a very long molecule.  And you can get phosphatidylserine on the market.



The problem is that, because it's so big, it isn't well absorbed.  And but it's very good for us.  It increases cellular membrane fluidity, that is, the actual fluidity of our neural cells, so that they're able to pass stuff in and out more easily.  And it turns out that it increases the sensitivity of our brain to cortisol.  And so by increasing its sensitivity to cortisol, our brain senses the cortisol in our blood better and thus requests less of it from our adrenal glands.  And that's the mechanism by which it reduces this main stress hormone which is one of the mechanisms that we use, that the Healthy Sleep Formula uses for producing better sleep.



The other is that phosphatidylserine helps GABA get into our brain through the blood-brain barrier to relax our brain.  But phosphatidylserine is not well absorbed because one of the things that we learn when you're following the whole supplement thing is it's not what you take, it's what you absorb that matters.  And so serine phosphate is just sort of the head of the whole phosphatidylserine.  It's the serine, the phosphate, and then what's attached to it, instead of glycine and two big long phospholipid tails, or fatty acid tails, rather, is just something small, like magnesium and calcium.



And so what that means is it's a much lighter-weight molecule, much better absorbed.  And so that gets into our bloodstream.  And then our bodies attach the lipid, the fatty acid tails to the serine phosphate head in order to turn into phosphatidylserine.  So it ends up being phosphatidylserine inside of us, but not when we take it.  So anyway, yes, Biochemistry 101.



LEO:  It's just, I mean, the only thing that worries me is some guy in his garage in Fresno, and this is a completely unregulated industry, so who knows what he's, I mean, doing.  You don't really kind of know exactly what you're getting.  There's nobody overseeing this at all.  Right?



STEVE:  That's true.  And actually this is a snapshot, though, into the supplement industry.



LEO:  Yeah, no kidding.



STEVE:  And all I would say in defense is that the number one cause of liver failure and liver transplants in the U.K., of course, is Tylenol.



LEO:  Yeah, which I don't take, either.



STEVE:  So, yeah.



LEO:  And it's regulated, right.



STEVE:  Yeah, exactly.  And of course pharmaceuticals are causing all kinds of problems for people.  So, yup.  Six to one, half a dozen to the other.



LEO:  Anyway, GRC.com is the place to get more on that.  Of course SQRL, the Perfect Paper Passwords, and SpinRite, the world's finest hard drive recovery and maintenance utility.  Plus this show.  Steve has audio of the show and beautifully written transcripts, as well.  It's all there.  Do you ever document somewhere, is it on the website, the build, your computer build, and what you put into it?  A lot of people are asking me about it.



STEVE:  I know.  No, I haven't.  It's just a matter of time, Leo.  I just, you know, I mean, I would like to, but...



LEO:  Take some pictures.  This is where crowd-sourcing would be so great.  If you like could take some pictures and say tag these parts.  And people would do it.  They would figure it out.  I don't know.  I don't know.  Just a thought.  But we'll find out, I'm sure, at some point.  One of many things.  It's such a great site, full of lots of information:  GRC.com.



We do this show every Tuesday, 1:30 p.m. Pacific, 4:30 Eastern, 20:30 UTC.  Please tune in live.  Join us in the chatroom.  If you have questions for Steve, I guess we're going to finish IoT up next week.



STEVE:  We're going to do Part 2 of IoT Infancy.



LEO:  And we'll do questions the week following.



STEVE:  Yeah.  And I have to say, of the big monster box I built, the reason I'm uncomfortable is that it's not something I could recommend.  Like, for example, I chose a, what was the name, it was not ASUS.



LEO:  Acer.



STEVE:  A Gigabyte motherboard.



LEO:  Oh, Gigabyte motherboard, that's right.



STEVE:  But I don't know that it was the right one, or the best one.  And I kind of had to fight with it in order to get, you know, I wanted to run 128GB of RAM.  I could only run - only - 64.  But I could run 128 if I slowed it down.  So I would, I mean, you know me.  I don't want to recommend something that I don't really know, and I haven't really believed in.  So once upon a time, Steve's Dream Machine was a result of really knowing there's no better solution for every single one of these components than what I chose.  I just don't know that, you know, for this.  This works, and I fought with it for a while to make it what I wanted.  But I just - I couldn't ever represent that it's, like, the best solution.



LEO:  That makes sense.  It's just something you chose.  But you know your fans.  They want to do whatever you did.  They figure it's going to better than whatever they do.  Anyway, it's good.  You make a good point.



STEVE:  I shopped intelligently.



LEO:  Yeah, you make a good point.  Let's see.  I mentioned, oh, you can get on-demand audio and video of the show, not only at TWiT.tv/sn, but every single podcatcher, all the world around.  Just choose one.  Subscribe so you get every week.



STEVE:  Because we've been there from day one.



LEO:  Day one.  And at LeoLaporte.com/blog there is an entry with three scripts that will allow you to, with some modification, download every episode of Security Now!, should you want to build your collection.  I put those on my blog.  Three different fans have written scripts in PowerShell and Python and Bash, I think, something like that.



STEVE:  Nice.



LEO:  Yeah.  So that's at LeoLaporte.com/blog.  Thank you, Steve.  We'll see you next week.



STEVE:  Okay, my friend, thanks.



LEO:  Bye-bye.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.










GIBSON RESEARCH CORPORATION		https://www.GRC.com/



SERIES:		Security Now!

EPISODE:	#563

DATE:		June 7, 2016

TITLE:		IoT Infancy Part 2

HOSTS:	Steve Gibson & Leo Laporte

SOURCE:	https://media.GRC.com/sn/SN-563.mp3

ARCHIVE:	https://www.GRC.com/securitynow.htm 



DESCRIPTION:  After Steve rants a bit about the reality of OS versions and security, he and Leo cover the past week's security events, including a new zero-day vulnerability affecting all previous versions of Windows; a truly horrifying and clever chip-level exploit; yesterday's Android Security Update; a sad side-effect of Microsoft's GWX pressure; Mark Zuckerberg's old LinkedIn password; Facebook's plans for optionally encrypting Facebook Messenger; five things that challenge self-driving cars; and some miscellany.  Then we conclude our look at the horrifying problems with our infantile Internet of Things.



SHOW TEASE:  It's time for Security Now!.  Steve Gibson is here.  We're going to of course cover the security news.  And as usual, there's a lot of it, including a new Windows vulnerability.  Hey, only $95,000 if you've got the scratch.  We'll also get back into this IoT security issue.  He's going to take a look at three different makes of baby monitors and show you just how insecure they can be.  That's all coming up next on Security Now!.



LEO LAPORTE:  This is Security Now! with Steve Gibson, Episode 563, recorded Tuesday, June 7th, 2016:  IoT Infancy Part 2.



It's time for Security Now!, the show where we talk about the latest insecurity and privacy and protecting yourself online with this guy right here, Mr. Steven Gibson of GRC.com.



STEVE GIBSON:  Yo, Leo.



LEO:  Yo, Steve.  Good to see you.



STEVE:  So it's California Primary Day.



LEO:  I voted.



STEVE:  Yup.  I did, too.  I'm a permanent by-mail voter.



LEO:  I am, too.  But you know what I do is I take the mail ballot, mark it up at home because that's easier.



STEVE:  Yup, and then go down to the polling place.



LEO:  But I like to get my sticker.



STEVE:  Yup.  Fun to have the "I Voted" sticker.  I like that, too.



LEO:  So in fact I told them at the polling booth, first I said, "Thank you for your service, I appreciate you doing this, and I only came here for the sticker."  And they said, "All right, put your ballots in the box there, and here's your sticker."



STEVE:  So we're going to continue with last week's coverage, thanks to some really, really great reporting that Rapid7, the security firm Rapid7 did when they analyzed the security of 10 different baby monitors.  First part, last week, we talked sort of generically about sort of the fundamental problem of a non-security focused product which wants to create a turnkey appliance that is, in this case, selling to a market that they're not security people, I guarantee you.  I mean, we may have some listeners who have baby monitors, but not the other way around.  It's not like they're all concerned about or even conscious of the issues of security.



So here are these products selling on the Internet which offer remote viewing of the activity in front of the camera.  And unfortunately, as we will cover in detail at the end of this podcast, they're offering much more access than any owner could possibly believe.  And this is the way the world is at this point.  I'm hoping, and I'm going to summarize at the end, one of the consequences of us not fixing this quickly.



So anyway, I think a really interesting podcast.  We've got a bunch of stuff to talk about.  I'm going to begin with, before the security news, what I'm going to try to keep from being a rant.  I called it the "reality check timeout."  So I just have to say something because it's been - the pressure's been building for a couple months.  And it's like, okay.  But I'm going to keep it - our listeners will not have to turn the volume down on their earphones.



There is a new zero-day Windows exploit on the market, and literally "market," selling for $95,000.  A horrifying and very clever chip-level exploit, that is, silicon-level, which has been called by the press "demonically clever."  And we're going to talk about the details of how that works.  Yesterday was the June update for Android, with a bunch of fixes.  A little bit of news on two fronts about Facebook, one that affected Mark Zuckerberg directly, and one involving Facebook's Messenger program.



I ran across an interesting little aside in The New York Times I want to talk about, about the five things that give self-driving cars the biggest problems.  Many of our listeners who were really listening and paying attention when I was talking about SQRL's authentication management, all brought up the same issue.  So I want to cover that.  We have a little bit of miscellaneous stuff.  And then we're going to get into the horrifying details of why you want to be very careful when you buy a baby monitor that offers Internet connectivity.



LEO:  Especially if you're monitoring more than your baby.



STEVE:  Yes, exactly.  You don't want this aimed into your bedroom.



LEO:  Yeah.  You know what I'm saying here.



STEVE:  And I was worried about maybe the crib next to the bed, so they'd get sort of a package deal.  Oh.  Anyway.



LEO:  On we go.  Steve Gibson, Leo Laporte, and the security news.



STEVE:  So, okay.  My reality check timeout.



LEO:  Uh-oh.



STEVE:  During which I promise not to raise my voice.



LEO:  Okay.



STEVE:  What I keep seeing is Windows 10 people saying that Windows 10 is more secure.



LEO:  Yeah.



STEVE:  Which is utter nonsense.  And the distinction I need to draw for, like, again, the reality check, is that added security features is completely different from security.  And in fact you can argue strongly that added security features decrease the security of the system until they are proven.  I will never forget Steve Ballmer prancing around onstage before the release of Windows XP, claiming that it was the most secure operating system ever.  And we said at the time, you can't say that.  That's not something that anyone can declare.  XP had more features.  In fact, it was the first Windows operating system with a firewall.  Unfortunately, they forgot to turn it on.  So it wasn't until Service Pack 2 that it was turned on.



So the point is, I don't argue that Windows 10 has more security features.  But that's completely separate from it being more secure.  And in fact every lesson that we are taught by feedback from reality is that new code has bugs.  And the more new code you have, the more bugs you have.  And it takes time to find them and remove them. And Leo, you were talking, I think it was on Saturday, you were mentioning Debian's stable track and how there's been some controversy over some guy that wants to change the XScreenSaver on the Debian...



LEO:  Yeah, JWZ.



STEVE:  Yeah.  And they're saying no, don't mess with it.  And I was just sort of smiling because it's like, yes, that is the correct philosophy if you want stability.  If you want a stable system, if it's not broken, don't fix it.



LEO:  That's actually really a good point.  That's the greybeards' attitude in Debian is, if you use Debian stable, you're going to be using old software.



STEVE:  Right.



LEO:  Because it's proven.  And we'll do patches, but we're not going to be upgrading to the latest stuff all the time.



STEVE:  I only moved GRC's servers off of Windows 2000 a couple years ago because Windows 2000 didn't understand any of the new SSL/TLS protocols.  So I had to.  But that thing sat there and ran literally years at a time, just like a bulletproof Unix box that just sits in a closet, and you forget about it because it never has a problem.  I mean, that's what you want, if you want stability.



Now, I get it.  In fact, Paul's term "Windows enthusiast" is the perfect one because, again, I don't have anything against Windows 10.  As everybody knows, I use Windows.  I love Windows.  But I also understand that new is not necessarily better.  And that's the other thing is that this is not, Windows 10 is not a new operating system.  That's another myth that Microsoft pushes and has always pushed because they want to get people to upgrade.  Until Windows 10, it was revenue-generating for them.  Now they're going to arrange to generate their revenue somehow else.



But how do we know it's not new?  It's because, when a defect is found, it affects all previous versions of Windows.  Think about it.  We always see that.  Every problem that is found affects every previous version.  Well, if it was a new operating system, there would be a disconnection between the problems.  There is no disconnection between the vulnerabilities because it's all the same single piece of code.  The other way you know is, if you drill down a few levels in the UI, you find dialogues that haven't changed in 20 years because the code's fine, they haven't screwed it up, and they've left it alone.



So what we have basically is NT with about nine layers of different sugarcoating UI wrapped around it.  They keep changing the way it looks.  Oh, let's go 32-bit colors.  Oh, let's have shadows.  Now let's do 3D.  Oh, we don't like that anymore.  Now let's make it flat.  They're changing the surface, but it is all a single old operating system.  And I'm happy that it's old because new code just has problems.  So the point is we know it's the same old operating system because every problem we talk about affects all the versions, all the way back, until they stop supporting them.  So it's monolithic.  It looks different, but it's not different.



So anyway, I just - I wanted to make a couple of those little points, and that is that security features does not mean more secure.  It actually means less secure, at least initially.  And it's not a new operating system.  It's the same old operating system because all the problems are shared with Windows XP and 7 and as far back as it goes.  And we'll be talking about a few of those today because, again, same operating system, different coating on the top.



And speak of the devil, first item here of news is that it turns out that all currently supported versions of Windows suffer from a newly discovered zero-day exploit.



LEO:  Oh, that's ironic.



STEVE:  Oh.



LEO:  Because they didn't change it in Windows 10.



STEVE:  Right.  It's the same operating system.  It just has a different UI on top.  So a Russian forum was found offering - some guy, I love the name of this guy, BuggiCorp, B-U-G-G-I Corp, is offering a pervasive Windows zero-day exploit for which he wants $95,000.  Now, the good news is - well, good is relative.



LEO:  That's a lot of money.



STEVE:  But at least it's a local privilege escalation.  It's not a remote code execution, which would be chilling.



LEO:  It's worth $95,000?  Wow.



STEVE:  Well, yeah.  And in fact he goes to some lengths to demonstrate the veracity of his claim.  So, translated from the Russian, he wrote:  "Exploit for local privilege escalation (LPE) for a zero-day vulnerability in [a module of Windows] win32k.sys.  The vulnerability exists in the incorrect handling of window objects, which have certain properties.  The vulnerability exists in all OS versions, starting from Windows 2000."



LEO:  Wow.



STEVE:  So like I said, same piece of code, win32k.sys.  We have it today, and we had it back 16 years ago.  "The exploit is implemented for all OS architectures, x86 and x64, starting from XP, including Windows Server versions, and up to current..."



LEO:  To be clear, that's the 32-bit compatibility layer for Windows 10; right?  I mean, it's not - because Windows 10 is 64-bit.  I would guess that's the 32-bit compatibility there.



STEVE:  Correct.  Right, right, right.



LEO:  Yeah.  So that would be in there, of course.



STEVE:  Yeah, exactly.  And it's win32k.sys, so it's the portion that they've had all along to run the 32-bit code under Windows.  So they said:  "...up to the current variants of Windows 10.  The vulnerability is of 'writewhatwhere' type," he writes, "and as such allows one to write a certain value to any address in memory, which is sufficient for a full exploit."



LEO:  Oh, yeah.



STEVE:  Yeah.  "The exploit successfully escapes from application containment" - meaning it breaks out of any sandboxes - and bypasses "all existing protection mechanisms such as ASLR, DEP, SMEP, et cetera.  The exploit relies solely on the KERNEL32 and USER32 libraries."  So again, 32-bit.  "The source code project of the exploit and a demo example are written in C and assembly with Microsoft Visual C 2005," because that's what they have in Russia.  "The output is a lib file which can later be linked to any other code" - just to make it convenient for the malware authors - "and additional output from the source code project is a demo EXE file which launches" - oh, so you have the demo, a demo EXE - "which launches CMD EXE and escalates the privileges to the system account."  And he goes on.



So anyway, the point is that this was found by the Trustwave group, and they said that:  "Although such an exploit cannot provide the initial infection vector like a remote code execution would, it is still a very much needed puzzle piece in the overall infection process.  For instance, an LPE [local privilege escalation] exploit paired with a client-side remote code execution could allow an attacker to escape an application that implements sandbox protection, like Google Chrome, Adobe Reader, et cetera."



So what was rare was to find this zero-day exploit offered for sale.  Typically that's not done.  There's, like, other exploits and malware pieces and things, but not something this significant.  So they wrote:  "Finding a zero-day listed in between fairly common offerings is definitely an anomaly.  It goes to show that zero-days are coming out of the shadows and are fast becoming a commodity for the masses," they wrote, "a worrying trend indeed."



So that got a lot of press coverage, too, because people are like, oh, no, it was zero-day.  But it's not, again, this is not being found in the wild yet, which is normally where we encounter and talk about zero-days.  This instead is like pre-wild.  This is "Who wants a zero-day," and then get one.



Okay.  So this is just chilling.  Andy Greenberg writing for Wired covered it, and I'll just read the first two paragraphs of what he said, then talk about this in more detail.  He said:  "Security flaws in software can be tough to find.  Purposefully planted ones - hidden backdoors created by spies or saboteurs - are often even stealthier.  Now imagine a backdoor planted, not in an application, or deep in an operating system, but even deeper, in the hardware of the processor that runs a computer. And now imagine that silicon backdoor is invisible, not only to the computer's software, but even to the chip's designer, who has no idea that it was added by the chip's manufacturer, likely in some," he writes, "far-flung Chinese factory.  And that it's a single component hidden among hundreds of millions or billions" - on the chip, he meant - "and that each one of those components is less than a thousandth of the width of a human hair.



"In fact, researchers at the University of Michigan haven't just imagined that computer security nightmare? they've built and proved it works.  In a study that won the Best Paper Award at last week's IEEE Symposium on Privacy and Security, they detailed the creation of an insidious, microscopic hardware backdoor proof-of-concept.  And they showed that, by running a series of seemingly innocuous commands on their minutely sabotaged processor, a hacker could reliably trigger a feature of the chip that gives them full access to the operating system. Most disturbingly, they write, that microscopic hardware backdoor would not be caught by practically any modern method of hardware security analysis and could be planted by a single employee of a chip factory."



And I agree with everything that they wrote, having dug into this.  They named it A2 because it's an analog attack.  And what it uses, although they didn't call it this, in electronic terminology it's known as a "charge pump."  So what's tricky about this, what's so clever - and, I mean, it's like this is the stuff of nightmares for anyone who's concerned about fabricating secure processors - is that we think of a computer processor as a massive array of interconnected gates, which is deterministic.  That's the key.  If it is a massive array of interconnected gates, then it starts from power up in a known state, and it executes instructions, each instruction of which moves it from one known state to the next known state, based on what that instruction does.  That's a programmed instruction computer.



What these guys did was they added - it was described in the documentation as a capacitor - probably a capacitor and a couple diodes.  But, I mean, that's just vanishingly small in terms of the real estate of this chip.  I'm sure everyone's sort of familiar, having seen photomicrographs of what a processor looks like these days.  You just kind of - your eyes glaze over dealing with this incredible complexity of what modern chips have become.



So what they did, they took an open source processor design.  I don't remember, it's like OS 1200, I think, stands for open source 1200, or open core maybe it was, OC 1200.  But there is, there exists now open core designs where it's all laid out, and you can have it fabbed, or run it through programmable arrays and get yourself a nice, high-performance, state-of-the-art RISC processor.  So they took the silicon fab for that, and they added just a couple microscopic components such that, every time one of the signal lines in the chip is raised, it couples a little bit of the energy of the edge of that raising through this capacitor into an adjacent line.  And the problem is, that isn't enough to change the state of the coupled-to line unless you do it with a sufficient frequency for a sufficient time.



So it's a charge pump.  It pumps charge from one line to another in a way that no static analysis of the function of the chip could ever find it because it uses basically an analog-coupled pattern of access in order to change the state of an adjacent line.  And where they chose in the design essentially removed the memory management restrictions from the program that was currently running so that any program that was running with normal OS hardware-enforced containment, which is what all of our programs have now, when the kernel decides to run the thread in a process, it sets up access to memory so that the process has a very filtered view into the actual physical memory that is available on the computer.  So that the process running sort of sees - it's called a map.  It's through the memory mapper.  It sort of sees an abstraction of the actual physical memory.



What this then allows is a process running on this chip that knows about this tiny defect that was added to the design to release itself from all OS constraints so that the mapper is shut down, and it has access to all the memory on the system.  It's basically a behavior-based switch that was added that would not be found by any diagnostics running on the processor.  And what's horrifying is that there's really no defense against this.  The only thing you could do would be to apply the highest level of security throughout the entire design process, including all the way to and through fabrication.



And in their paper they get a little defensive about why they did this.  And it's like, well, okay, yeah.  We've shown the world this could be done.  But mostly it's to make sure people understand this is not just theoretical.  And what they proposed was that some other kind of trusted component that would also be integrated on the chip, which doesn't exist today, would be an overseer which would independently watch to make sure that no process running on the system had obtained that kind of access.  And I'm like, well, okay.  That doesn't really do it.  Here we're back to the problem of trying to anticipate all the things that something could do that wants to be nefarious.  And you can't.  That's the classic virus/antivirus, goodware/malware problem, is that they designed their little hack to change the memory mapper.



So they're saying, okay, so now we need a memory mapper overseer to guard against that.  But there are all kinds of other ways you could subvert a chip maybe a little less horribly than just remove the memory mapping facility because that does just completely drop all of the defenses of the system.  But there are other things you could do that are equally troublesome.  So there's just nothing but bad news, essentially.



Now, there has been a concern that designs of chips could have deliberate hardware backdoors installed in them.  And that's a concern.  This ups the ante sort of infinitely because now it's not just the design, I mean, you could test the design after fabrication and never find that this behavior-based flaw had been inserted into the chip.  So, wow.  I mean, I guess I'm glad that they brought this to light, although unfortunately I don't see a practical mitigation for it.  I mean, it really sort of says to a degree that maybe helps us appreciate the fact that, much as we want to have security, security is not an absolute.  It is a relative.  And I don't see how that changes in the future.  Wow.



Yesterday Google released the June 6th or the June Android Security Bulletin, which had a bunch of goodies in it.  They offered over-the-air updates to all currently supported Nexus devices.  And it flashed by me, and I think I want to say, like, Nexus maybe 6, 7, and 8?  I think I remember seeing, like, three major version numbers, maybe 5, 6, 7?  I just don't know.  But anyway, it's the ones that are currently receiving updates.  They all got them.



LEO:  Nexus 5.  Let's see.  I have a 6P, so I think probably the Nexus 5 and 6P and the 5X.



STEVE:  Okay, good.  They did release these to their partners a month ago, on May 2nd, so all of the carriers got them who want to push these out to their customers.  Google wrote that "The most severe issue is a critical security vulnerability that could enable remote code execution on an affected device through multiple methods such as email, web browsing, and [wait for it]  MMS."  And we know why.  The Mediaserver module is back in the hot seat.



There is a critical Mediaserver flaw which exposes Android devices to remote code execution such that an attacker could send vulnerable devices a malicious media file that corrupts memory during the processing, the interpretation of that file.  And because Mediaserver runs at the kernel level with system kernel-level privileges, the resulting code would essentially be in the Mediaserver, so it can do pretty much anything it wants to.  So an important update to follow up on.



And that was one of a dozen other issues in Mediaserver.  There were a bunch of, I think it was 12 other elevation-of-privilege issues which could be exploited by a local app.  So not a remote "send you a media file and you're taken over," but rather inadvertently run a local app on the device, and it could then - the app could use it to gain system-level privileges, which would let it break out of the app sandbox, app containment.  Also there is a problem with the WebM encoder, and that is a critical remote code execution flaw.



So once again, you know, we talked a few weeks ago about sort of the general problem, like why are we having problems with these media display playback things?  And it's because they are interpreters by nature.  Essentially, the files are little programs.  The nature of the metadata in these files makes them little programs which the code interprets.  And it is very difficult to make that bulletproof.  You just have to check every single parameter perfectly and not make any mistakes with overflows or signed versus unsigned or is this a byte or a word or a double word and so forth.  It's just difficult to make that perfect.  And as we know, it's got to be perfect, or somebody can find a mistake.  So a bunch of things.



And not to be forgotten - and actually for some reason Qualcomm was in the hot seat, although a lot of these problems were not Qualcomm's.  But Qualcomm's drivers that exist in these devices, there were five problems in the WiFi driver, two each in the video and sound driver, one in the GPU driver, and one in the camera driver.  So there were just a bunch of things to get fixed.  And so follow up on that if you're an Android user, and you didn't automatically get these things over the air.



I skipped a story last week, just because I thought, really?  The senior editor of PC World, Brad, and I don't know how to pronounce his last name, C-H-A-C-O-S.



LEO:  Chacos?



STEVE:  Chacos?  Yeah.  We'll say - and sorry, Brad, if that's not how you pronounce it.



LEO:  Because I'm making it up, too.



STEVE:  He did a story which was titled "Fearing forced Windows 10 upgrades, users are disabling critical updates instead."  And I thought, really?  But then two days ago I got email that routed itself either through Sue or Greg and found its way to me, from someone who was a little desperate.  I think her name was Victoria.  She had a Dell Vostro, and she was concerned that it was so old that it wouldn't run Windows 10.  So she had turned off Windows Update and had 117 pending updates and was writing for, like, okay, how do I use Never10 to, like, make sure that if I, like, shouldn't I have these turned back on?  And I said yeah, probably a good idea to keep your Windows updated.



And so I said, "Run Never10, then reboot your machine to make sure that it takes, then run it again to make sure that it still says that Windows updating is disabled, then turn on Windows Update and suck in those 117 pending updates."  I said, "Then I'm sure it'll ask you to reboot.  So then reboot and run Never10 just once more to make sure that, after all those updates, everything's still happy, and Windows 10 updating is still disabled, and you should be good to go."



So I did want to mention that I mentioned last week the crazy rate of uptake of Never10.  I think I said we were, like, at 33 or 32,000 per day.  We peaked over the weekend at 35,000 downloads per day.  And I said that at that rate last week, we would cross a million.  We did that.  I said we would cross million by this podcast today.  We did that at 10:00 a.m. this morning.



LEO:  Yeah.



STEVE:  More than a million downloads of Never10.



LEO:  That's awesome.



STEVE:  So, and it's, let's see, where are we, 1,005,295 at the moment.  And it is slowing down a little bit.  We're now down to about 33,000 downloads per day.  But it did, it's interesting, as Microsoft sort of turned up the heat, Never10 took off.  So as I said last week, I was glad that it had a chance to be in place so that people were aware of it, so that it could provide a solution for people who wanted the opportunity, the option to choose not to upgrade to Windows 10.



The only reason this is interesting, I think, is because Mark - oh.  I forgot to mute that little laptop.



LEO:  [Crosstalk] leave it going.



STEVE:  So Mark Zuckerberg was in the news because apparently he had an easy-to-hack Twitter password from 2012 because Mark has, you know, I guess he's now over on Facebook, not surprisingly.  He hadn't apparently tweeted, his last tweet in Twitter was in January of 2012.  But he apparently shared his Twitter password with his LinkedIn account.  And a group calling themselves OurMine Team claim to have used the data from that massive LinkedIn breach, which we talked about last week, the additional 117 million accounts, to find Zuckerberg's password and see if it worked anywhere else.  The password was "dadada."



LEO:  No.  How do we know that?



STEVE:  Well, because it's an unsalted...



LEO:  They said it?



STEVE:  Yeah.  Everyone knows it now.



LEO:  Dadada.



STEVE:  Yeah, dadada.  Dadada.



LEO:  That's a terrible password.



STEVE:  Yeah, it wasn't even - and only four years ago it wasn't very good.



LEO:  Well, but he doesn't care because these are throwaway accounts.



STEVE:  Well, yes.  The problem was he still had his LinkedIn account, I mean, sorry, he still had his Twitter account, and they took it over.



LEO:  He shouldn't have used the same, I mean, I presume he didn't tweet a lot.  Maybe he did, I don't know.



STEVE:  Well, no.  He hasn't used that account for four years because now he's Mr. Facebook.



LEO:  Right.  He always has been, right.



STEVE:  And so he's not going to use Twitter.  He's going to use...



LEO:  It was to collect information about Twitter, not to use it, not to promote it.  I remember I followed him on Google+, which didn't get hacked.  I guess he didn't use dadadada.



STEVE:  Correct.  Google+ was not hacked.



LEO:  He never posted there.



STEVE:  His Pinterest account apparently was also the same password.  So he was using it in several places.



LEO:  Dadadada.



STEVE:  Yeah.  There was some information that his Instagram account also, but that turned out not to be the case.  So just Twitter and Pinterest.



LEO:  What a terrible password.



STEVE:  Also in Facebook news, they have stated that, as...



[Begin clip]



LEO:  Dadadada.  I'm sorry.  I think this is where it comes from.  It was a hit called "Dadadada."  Either that, or it's a very easy thing to type on the keyboard.



STEVE:  It's also easy to type.



LEO:  Yeah, dadadada.



[End clip]



LEO:  Okay, enough of that.  I couldn't resist.



STEVE:  So Facebook Messenger, as we know, used by about 900 million people, will be getting optional, opt-in, end-to-end encryption.  Of course this follows Google's recent announcement of the same in Allo, their forthcoming messaging app.  And as with Allo, Facebook will have this be opt-in because its use would blind Facebook to Messenger's content and prevent the use of their planned machine learning features, which is the big new idea these days and what everyone wants to roll out.  And I also heard the word - I've heard you, like, not really being happy with bots, Leo.  And apparently this is, like, would be a problem for their bots.



And of course the Guardian in their coverage noted that last month Google faced some blowback from privacy activists over their opt-in decision.  But as I said at the time, I think this is entirely appropriate.  And it'll be interesting to see, once we get some numbers, what percentage of users choose which.  Because I think we're going to see - remember the studies that have been shown, how people will sell their passwords for, like, a piece of candy or something, I mean, it's just ridiculous.  It's like, here's a piece of candy.  What's your password?  Oh, thanks, and then give up their password.



LEO:  Yeah, why not?



STEVE:  Similarly, I think, if someone turns on encryption thinking, oh, good, and then sees that they broke a lot of other nonsense that they like, they'll go, oh, bad, and turn it off again because they would rather have these messengers suggest their replies to their conversations or whatever.  So it's like, okay.  So I think it's fine.  I like that people have an option.  And as we said, if anyone really wants security - because, remember, these apparently are per-conversation decisions.  You don't just switch all of Messenger to encrypted.  Presumably you say I want to have a secure connection with this other person, but leave all the other ones unencrypted.  So as we said, if you really want security, just get a secure messaging app.  They exist, and that's a no-brainer.  And then you know that your conversations there will be secure.



And this is not security related, but I just thought it was interesting from a technology standpoint.  And that's The New York Times had a story about the five things that give self-driving cars headaches.  And the author who did a lot of research and rode around said:  "Fully automated cars don't drink and drive.  They don't fall asleep at the wheel.  They don't text.  They don't talk on the phone or put on makeup while driving.  With their sensors and processors, they navigate roads without any of these human failings that can result in accidents.



"But there is something self-driving cars do not yet deal with very well - the unexpected.  The human brain is still better than any computer at making decisions in the face of sudden, unforeseen events on the road - a child running into the street, a swerving cyclist, or a fallen tree limb.  Here," he writes, "are five situations that, for now at least, confound self-driving cars and the engineers working on them."



And I have to say, as an oldster, I'm sort of bemused by this.  I'm just totally gobsmacked by the speed with which this has happened because I'm just amazed that we're moving this quickly into self-driving cars.  I just - I'm, again, I guess I'm showing my age.  It's like, how big is your hard drive?  Really?  So I'm impressed that they do as well as they do.



And I guess the thing that brings me over a little more to the side of self-driving cars is now watching how distracted drivers must be by their smartphones.  I see cars weaving on the street, you know, crossing, just wandering out of their lane, across the line.  And of course the dead giveaway is when the lights turn green, and the cars just sit there at the light.  No one's moving because they've taken that opportunity to check in with Facebook.



LEO:  My daughter got a ticket for that exact thing.  It wasn't that she drove into anything, she just didn't go when the light was green because she was typing, and she got a ticket.



STEVE:  Who?



LEO:  My daughter, Abby.



STEVE:  No kidding.  Well, whoops.



LEO:  Not recently.



STEVE:  Well, yeah.



LEO:  A year ago.  But I was glad.  I was thrilled she got that ticket.



STEVE:  Well, and so I see it all the time.  And so I'm just thinking, okay, maybe this is not such a bad idea.  But anyway, so five things.  First is unpredictable humans, i.e., bad drivers.  And it's like a self-driving car cannot control the behavior of other drivers.  And so it's just - that's an issue.  They do the best job they can, but it's not like - that's something aside from their ability to look at the road and know where they are and use their sensors and so forth.



Another problem is bad weather, a.k.a., where did the lines on the road go?  And, I mean, think about it.  We, with all of our human senses, rain, snow, fog, really, if you're in a heavy rain, everybody is going a lot slower because it's just much more difficult to drive safely under those conditions.  So how do you feel for some poor algorithm trying to make sense of those conditions.



LEO:  Poor algorithm.



STEVE:  With all of its different sensors.  Yeah, I can just, I mean, I just imagine.  Also, detours and rerouted roads.  And the article brought up something I didn't realize, but in retrospect it's so obvious.  This author said that "Google's bubble-shaped self-driving cars rely heavily on highly detailed three-dimensional maps, far more detailed than those in Google Maps, that communicate the location of intersections, stop signs, onramps, and buildings with the cars' computer systems.  Self-driving cars combine these pre-created maps with readings from their sensors to find their way around."



And it's like, it's so obvious after you think about it.  It's like, yes.  What you'd want to do is you would want to create detailed useful 3D models of what doesn't change, that is, where the roads are, where the signage is, all of those things that are fixed, so that the car is not encountering them for the first time, just with its own onboard sensors, but rather the sensors are positioning it in real-time within a pre-existing, highly detailed 3D model.  That's what you want to do.



The problem is what happens when that model breaks, when things change from that model, because the better that model is, the more the car will tend to rely on the knowledge that is essentially embedded in that model.  And to the degree that that knowledge is suddenly incorrect because of something in the real world changing, that causes a problem also.  So there has to be sort of a resilience to it where it uses the model, but there's a constant check on how much it feels this model represents what its sensors are actually showing it.  And it's able then to pull back from the model when reality starts to diverge.  So just really interesting, from a design standpoint, decisions to make.



And then the second to last is road discolorations.  Is it a pothole or a shadow?  And of course we know that self-driving cars use radar, lasers, and high-definition cameras to scan the roads for obstacles, and the images that those sensors generate are processed by high-power processors to identify pedestrians, cyclists, and other vehicles.  But it turns out that potholes are tough.  They lie below the road's surface, not above.  And a dark patch in the road could look like a pothole or be an oil spot or a puddle, or even a filled-in pothole.  So it turns out that's a challenge for the designers of these.



And then the last one sort of took me a little bit aback because I hadn't thought about that.  And that is ethics, believe it or not, having to make tough decisions.  And this writer wrote:  "In the midst of busy traffic, a ball bounces into the road, pursued by two running children.  If a self-driving car's only options are to hit the children or veer right and strike a phone pole, potentially injuring or killing the car's occupants, what does it do?  Should its computer give priority to the pedestrians or the passengers?"  And it's like, yikes.  I mean, it's the Kobayashi Maru, is what this is.



LEO:  It's a no-win scenario.



STEVE:  It's a no-win scenario.  And, wow.  I hadn't thought about it.  But, yeah, humans, we're driving and have to make a similar sort of decision.  But imagine having to embed ethics into silicon.



LEO:  You're right.



STEVE:  I hadn't thought about it before.  Interesting.  Okay.  So something cool.  Many people - and I'm impressed, actually, by how many people picked up on this and wrote.  And in my show notes I have two tweets from people who tweeted the question.  But just at - I don't know what time zone that is.  But I just received a piece of email from someone who said it really well.  His subject was "Rekeying DOS," as he called it, or DoS as in denial of service.



He said:  "I read SN-562, where you talked about rekeying SQRL identities if their master key is compromised.  If my key is compromised, what prevents the attacker from rekeying my identity on sites, effectively locking me out of those sites?  I might not know I've been compromised, and the attacker can start with popular social, bank, and email sites to guess if I have an account there, and then lock me out.  Without password recovery or something like that, I've had my identity stolen permanently.  Just want to hear your thoughts on this."



So everybody will be glad to know we have that completely covered in a really cool way.  There's another part of SQRL which came much later.  It was the result of heated deliberations, to put it politically correctly, in the SQRL newsgroup about this problem.  And so I went off one morning to Starbucks with my engineering pad and pencil and big eraser, and thought, okay, I've got to come up with a solution for this.  And most of the time was spent staring off into space.  But I always, you know, I drew some circles with some arrows pointing at them, just sort of had an anchor for my thoughts.  And I ended up with what I think is a true invention because I've never seen it before or since.



It is a new way, a sort of repurposing Diffie-Hellman key agreement, the idea being that two people would create a private and a public key, and they would exchange their public keys.  And then by having their private key and the other person's public key, they're able to each synthesize the same result.  And that's done twice in what we have called now the Identity Lock Protocol.  And it's like, even when I had figured it out, I still didn't understand it.  I mean, it's one of those things where the equations prove it works, but I don't quite know why.  But it does work.  I've written it.  I've implemented it.  We've tested it.  Other people have duplicated that work.  It's all documented on the site and on the Identity Lock Protocol page.



But here's what it does.  We call the act of creating a SQRL login on a site "association."  That is, you associate your SQRL identity with an account.  So like you'd already have an account on Amazon or on Google or wherever, and that site allows you to log in with SQRL.  So you go there, and you say, hey, I want to add my SQRL identity here so that I can use that for logging into the site.  So we call that "associating your identity." 



When that is done, that is, the act of associating, in addition to the SQRL public key, which we know is how the site knows you, and what the site uses for verifying your signed challenge when it subsequently challenges you to prove you are who you say you are, two additional pieces of information are given to the site to hold, which is how this identity lock works.  What happens in practice is that you can create an association, the SQRL identity association, with your client.  But you cannot change it without something additional that the client never contains.



So the invention part of this was the ability for the client to provide something unique that involves a large random number.  Again, remember that linkability was something SQRL had to have so that we're giving a different - every site gets a different identity.  I needed this identity lock to similarly be different for every site so there's no linkability between sites.  So when you associate your identity to a site, you give it a couple other blobs to hold onto.  And if you want to change your identity, if you rekey your identity, you must, in order to do that, provide a higher level of authentication.



And that's what we have with the so-called "rescue code."  The rescue code is never meant to be memorized.  It is never stored in a SQRL client.  It's a deliberately long, completely random number.  The user can't choose it, specifically because users choose "dadada" if you give them a choice.  So this is 20 completely random digits that is created just once when you create your identity.  You print it out, you fold it up, and you put it somewhere secure.  This is the way we solve the password recovery problem.  That is, if somehow you forget your password, that big, random, you may never need it in your entire life, but it's there, that's password recovery.



But it also does a couple other things.  It's the thing that you must provide when you rekey your identity.  So if a bad guy completely compromised your SQRL client and got everything it knew, that bad guy doesn't get the rescue code because it is never - it's not put on the clipboard.  It's never stored.  It's never in the identity or in the client.  It just briefly exists and is embedded in the identity.  Actually, the identity is encrypted under a variant of that, and you may never need it.  But you can use it, if all else is lost, to recover your identity, to recover your password, but you must provide it as part of rekeying.



And there's one more little piece, which the person who wrote this sort of alluded to.  What if a bad guy went somewhere and tried to rekey your identity?  Well, first of all, now we know they can't.  Only you can rekey your identity by using the rescue code.  But the other cool thing in this design is we allow anyone without the rescue code to disable logon with SQRL at any site, without the rescue code.



So in this scenario, say some foreign government you believe got a hold of your identity, or a bad guy, whatever.  So just as this guy was proposing in his email, someone could go to popular sites.  You could, if you believed this was a problem, immediately go to a site with your SQRL identity and disable authentication without the rescue code.  And so you would go, if you were in trouble and did not have your rescue code with you, so you were unable to rekey your identity right now, what you can do is disable authentication.  And only a client carrying the rescue code is able to subsequently reenable authentication.  So we made that asymmetric.  You, using your SQRL client, can disable authentication with no additional authentication, but you cannot reenable it without the additional rescue code.



So anyway, as I said last week, what has evolved is a really beautiful, complete solution.  And all of the problems with the font printing and stuff that I talked about last week is resolved.  It's running very nicely now, printing under Wine.  And I'm making a few changes to the UI, and then it's just nailing down a bunch of stuff from sort of my longstanding list of things I want to fix, and we're done.  So we're getting close.



LEO:  Yay.  Steve is fully hydrated, caffeinated, addlepated, and ready to go.



STEVE:  So I've been meaning to say for a couple weeks, just to acknowledge what a win the little recommendation of The Sequence puzzle toy game...



LEO:  Oh, we love that game, man.  That is such a good game.



STEVE:  And in fact it is, absolutely hands-down, based on feedback, the all-time winner of all of the puzzle stuff that I have recommended in the past.  And what I wanted to note was that it is - I'm in Level 40-something, and there are people, like, way past me.  But I've never used a hint, and I don't want to use a hint.  I just...



LEO:  Wow.



STEVE:  Sometimes it takes me three days.



LEO:  It's hard.  I'm impressed.



STEVE:  It is hard.  There are some which are just - and though for me it's that aha moment.  It's like, oh.  The one thing I wish it had is single-step.  I was tweeting this to somebody.



LEO:  Right.  Debugging.  You want debugging.



STEVE:  Yes.  And they tweeted back, oh, you mean like a debugger?  It's like, yeah.  Because you start it, and it just goes.  And it's like, wait, wait, wait.  Oh, wait, wait, wait.  Wait, I couldn't see what happened.  So, and I've been meaning to contact the author.  But anyway, I just wanted to acknowledge what this is, the reason we love it, it is programming.



LEO:  It's programming, absolutely.



STEVE:  It is an elegant, visual programming environment that has every facet of programming because you have a goal, which is to move this little puck from location A to location B.  And you have a set of tools, and they're like instructions.  They each do one thing.  And you need to interconnect them, that is, have them do their one thing in sequence, and that's why it's called The Sequence, in order to achieve this result.  That's programming.  And it just - it's so well implemented and so charming.  I'm delighted that it's available cross-platform.  So I just hadn't had a chance to come back around and mention it again after first talking about it.



And people have talked to me about the Human Resource Machine, which is another - it's more of an explicit list of actions programming toy.  I don't know if the Human Resource Machine is over on Android.  I know that it's on iOS.  I downloaded it, but it's in the queue because I'm going to take my time, and I'm going to work my way through all of The Sequence, no matter how long it takes.  I'm not in a hurry.  And I don't do it - I don't spend all day.  I'll pick it up.  And what's interesting is that I can, like on the third day I'll pick it up, and I'll solve it, even though I spent 15 minutes on two previous days staring at it, and it didn't come to me.  Then it's like, okay, it's time.  And I solved it.



LEO:  Wow.



STEVE:  And one other bit of miscellany is people will remember this really beautiful replica that an engineer named Oscar created of the PDP-8/I console.  What's behind me blinking are PDP-8/E emulators based on an Intersil chip, the 6100, that actually was a PDP-8 on a chip.  What Oscar created essentially was a switches-and-lights peripheral for the Pi.  Why can't I think of the first name, the Something Pi.  What's the name of that thing?  The little circuit board Pi.  I can't think of it.



Anyway, the 2015 version we talked about.  I just wanted to bring people up-to-date that there's a 2016 version.  Raspberry, that's the first word, the Raspberry Pi.  So this is - and it's got much more lights.  The PDP-8/I shows you all of the various registers, whereas the PDP - and it was an earlier version of the PDP-8.  They went for reducing the cost, and that's why you can see there's a knob there that allows you to choose which one of the many registers the lights will show.  Well, those are broken out on the PDP-8/I.  So it's cool because there's just lots more lights to blink.



Anyway, so what surprises me is that he's offering this kit for $145.  But in 2016, he's exactly duplicated the rocker switches.  He had some close ones on the original 2015 design.  Now they're pre-painted, beautiful rocker switches that are exactly the same shape as the original PDP-8/I.  And this kit's $145 as a peripheral to the Raspberry Pi, and all the software is there and free and available.  So I just wanted to bring it up again because I think it's, for someone who wants to play - and this of course ties into programming because the PDP-8 had a 3-bit opcode.  It had eight instructions.  One of them was microprogrammed, that is, there were lots of bits that did different things in the arithmetic instruction.  But otherwise there was, like, jump and add and store and not many.



And so it's entirely practical to write little PDP-8 programs on a pencil and paper, very much like The Sequence.  Anyway, I created a bit.ly link long ago.  It's still functional, and it's bit.ly/pdp8kit - numeral 8 - pdp8kit.  And so, if anyone missed that the first time or is interested in looking at what Oscar did for 2016, I wanted to make mention of it.



And I'm self-conscious now about talking about the Healthy Sleep Formula.  I don't want to bore people who don't care.  I should mention it is the second, next to Never10, most popular page on GRC, about 2,600 visits per day.  So all I'm going to say is that there's been some changes.  Everybody who cares please go check out the Healthy Sleep Formula page.  I have updated it with a bunch of big news, major news.



LEO:  We should emphasize that Steve makes no money off of this.  He's not selling vitamins.  It kind of sounds like he is, but he's not.  He's just doing this for you.



STEVE:  No, and in fact people have wanted me to have links in there that would generate some revenue for me, and I've refused because I don't want there to be any appearance of impropriety, or like I'm pushing this.  No, this is me sharing the result of my own exploration.  So anyway.



LEO:  Good job.  And by the way, Steve's not a physician.  You should consult your physician before taking supplements of any kind.



STEVE:  Right.



LEO:  Your mileage may vary.



STEVE:  Right.  Josh in Bartow, Florida.  I got a really nice note from him which I really appreciated.  He said:  "Long-time listener finally uses SpinRite to recover data."  So he was referring to himself in the third person in the subject line.  He said:  "Hi, Steve.  I'm a longtime listener to the podcast.  I appreciate the work you do each week to keep us safe and informed.  Two years ago, I purchased a copy of SpinRite.  Like many other listeners, I bought a copy just to support you and everything you do for us without asking for anything in return.  I've used SpinRite in maintenance mode a couple of times, but never tried to recover data.  Well, until yesterday, that is.



"A friend of mine contacted me for help because his computer was acting 'weird.'  He had rebooted the machine, and suddenly it was asking him to 'Insert Boot Media.'"  That's never good.  "The BIOS didn't recognize his hard drive, and Windows would not load.  He did have a partial backup on an external hard drive? however, it had been a couple of years since the last time he backed everything up.  He has two small children, and he was worried that he had lost a lot of precious and irreplaceable photos, along with lots of other files.



"I loaned him my copy of SpinRite, recommending that he run it on Level 2.  This evening, he sent me another message.  SpinRite fixed the problem.  Windows booted normally, and all of his files were intact.  My friend is now hard at work backing up all of his files to his external hard drive.  I told him to get Carbonite (using the SECURITYNOW offer code, of course).  I also told him to buy a copy of SpinRite for himself so he can maintain the drive.  He's planning to do both.  Thanks again for making such a great podcast and such a great piece of software.  Josh."



LEO:  That's nice.



STEVE:  And Josh, thanks for sharing your experience.



LEO:  All right.  So let's get to the baby monitors.



STEVE:  Okay, so - oh, boy.



LEO:  Which actually is probably fundamentally similar technology; isn't it?  I mean, it's just a - it's a camera and a speaker, a microphone.



STEVE:  Well, okay.  So the problem is - and believe me, the Ring guys are light years ahead of these products because the problem here is that you're pushing your cart through Target, and there on the J-hook is the iBaby M6.  And it's like, oh, look.  It's only $39.95 on sale.  Let's get one.  And so it's like, no one's ever heard of iBaby.  Someone is surprised that Apple lets them sell "i" anything else.  So it's like, oh, great.  And so they, for a Sunday project, Dad mounts this on the bookcase and plugs it in and then goes to iBaby.com and creates an account, whatever.  And it's like, oh, look, we're able to look at our baby from anywhere in the world.



So the point is this is what's happening, and there is no concept of security.  And of course iBaby has, right there on the label, "secure, state-of-the-art, military-grade encryption."  So it's like, oh, well, fine, then.  It's encrypted.  Must be great.  Right?  No.



Anyway, so Rapid7, in choosing baby monitors as their target, sort of to set the groundwork for this, they said:  "The research presented focuses on the security of retail video baby monitors for a number of reasons.  Baby monitors fulfill an intensely personal use case for IoT.  They are usually placed near infants and toddlers, are intended to bring peace of mind to new parents, and are marketed as safety devices.  By being Internet-accessible, they also help connect distant family members with their newest nieces, nephews, and grandchildren, as well as allow parents to check in on their kids while away from home.  They are also largely commodity devices, built from general purpose components, using chipsets, firmware, and software found in many other IoT devices.



"Video baby monitors make ideal candidates for security exploration.  Not only are they positioned as safety and security devices, and therefore should be held to a reasonably high standard for security; but the techniques used in discovering these findings are easily transferable to plenty of other areas of interest.  Other products of direct interest to commercial and industrial consumers and security researchers - like commercial security systems, home automation systems, onpremise climate control systems and so forth - share many of the insecure design and deployment issues found in baby monitors."



So Rapid7 took 10.  And in their notes, one of the things that was a little chilling was that they endeavored to be responsible with security disclosure.  But in some cases there was no one to contact.  They couldn't find, like, registered domains for some of these companies.  There was one that was using some other proxy that didn't belong to the company, and they couldn't find the company.  So despite the fact that it was, like, amazingly insecure, there was no one to tell.  There was, like, no contact information, even on the packaging.  It was just generic, and horrifically insecure.  So, I mean, just shudder-worthy.



So here's an example, and it happens to be iBaby Labs, Inc., with their iBaby M6.  So the website, iBabyCloud.com, has a vulnerability by which any authenticated user to the iBabyCloud.com service - get this - is able to view the camera information of any other iBaby user, including video recordings, due to what Rapid7 called a "direct object reference vulnerability."  The object ID parameter is eight hex characters, corresponding to the serial number of the device.  This small object ID space enables, obviously, a trivial enumeration attack, where an attacker can simply brute-force the object IDs of all cameras.



Once an attacker is able to view an account's details, then links that are available provide a filename that shows the available, as they call them, "alert" videos that the camera has recorded.  And using a specific AWS CloudFront endpoint, which they found via sniffing the iOS app functionality, this URL can harvest the filename which allows the camera's contents to be viewed.  So effectively, anyone is able to view videos that were created from that camera, stored on the iBaby cloud service, until those videos are deleted, without any further authentication.  So essentially you sign yourself up to iBaby cloud service.  And you then start simply - there's a serial number which is eight hex digits.  And so you simply change, run through those, and you're then able to access the entire install base of iBaby video streams.  I mean, like, that's all there is to it.  There's no authentication on a per-account basis required.



There's another product that iBaby makes called the M3S.  Now, it runs an open Telnet server with fixed login credentials of admin for the user and admin for the password.  Now, that's not a huge problem because it's behind - we assume it's going to be behind the residence's NAT router.  So that would mean that its IP was not public, as long as the IP and port were not publicly mapped through the router.  Of course, Universal Plug & Play does allow anything inside the network to map the device through to the public Internet.



But we'll come back to this because it turns out that the majority of these devices all had locally exposed Telnet and/or web servers that were statically enabled.  And that's my problem with this, is that it would be one thing if there was a button you pressed, and it brought the server up which you needed for configuration, for example, for 15 minutes, and then shut it down.  And if that wasn't long enough, press the button again, and you back up, and you keep trying.  But they don't.  They saved on a button.  They just haven't - the server just comes up, and it's running, and it's there.  Then it's admin/admin, or it's user/user.



And while the good news is we're behind a router, the problem is, if this trend continues, if IoT devices individually assume that they're secure because they're hiding behind a NAT router, what happens is it creates a massive target-rich environment for anything that gets into the local network.  Remember that any software running on any computer, also in the network, has scanning access to everything on the local network.  And to the degree that IoT devices just say, eh, we're going to leave this server open because, after all, it must be behind a NAT, well, yeah.



But if there's 20 different things that are all relying on that privacy, then it creates a huge opportunity tension for bad guys to arrange to get onto the LAN, or apps that have a little extra functionality that wasn't documented when you downloaded it to take a look around on the LAN and see what's available.  And of course they're able, unless the user has disabled Universal Plug & Play, they're able to find things that are locally available and map them out to the public Internet using Universal Plug & Play, which typically doesn't show up in the router's UI, and that that allows them to gain public access to those assets behind the NAT router.  So, I mean, this is not good.



Philips, the electronics company, Philips Electronics N.V., they've got something called the In.Sight B120/37.  Like these others, it runs an open Telnet and web services server on its camera, with static, well known to anyone who owns one, passwords.  So that's one problem.  But of more concern is their web service that goes along with this, that in Rapid7's taking a look at it, turns out to contain multiple cross-site scripting vulnerabilities, which allows any valid account on that site, on that web service, to obtain access to the video streams of any other account.  And then what's even of greater concern is that all of the camera streams are proxied through a public cloud provider called, and I can't pronounce this, Y-O-I-C-S.  Yoics.  It should be Yikes.



LEO:  I think it is Yoics.



STEVE:  Anyway, with a public hostname and port.  In their analysis, the ports appear to range from 32,000, which of course is a common programmer's default, to 39,000, so about a range of 7,000 ports from 32,000 up to 39,000.  And those are tied to hostnames having a very simple pattern of proxy 1 through 14, essentially.  Apparently 2 didn't show up, but 1, and then 3 through 14 dot yoics, Y-O-I-C-S, dot net (proxy[1,3-14].yoics.net).  So they note, given this small and readily enumerated parameter space, that is, what, 14 or actually 13 possible hostnames from ports ranging from 32,000 to 39,0000, anyone could enumerate those.  And so basically you just try to connect.



Once found - oh, and all you have to do is you test for HTTP 200 response to a connection, and you know you found one.  That allows you access to the camera through the proxy.  And then you have administrative privileges available without any authentication of any kind to the web scripts which are running on the little web server in the camera.  And you can access a streaming URL to view the live video and audio stream accessible from the camera remotely.  So again, anyone who knows anything about how this works basically has the entire install base of users of these cameras available to them.



Then there's something known as the Summer Infant Baby Zoom - when I was writing down it was "Zoom," I thought, you bet, baby, zoom right in - the Infant Baby Zoom WiFi Monitor and Internet Viewing System.  First of all, the Rapid7 guys found an authentication bypass which allows for the addition - oh, boy, this one was a good one - the addition of an arbitrary account to the camera without authentication.  There's a web service, MySnapCam, which supports the camera's functionality.  You issue, that is, a bad guy issues an HTTP GET request to that server at swifiserv.mysnapcam.com/register, because you're saying I want to register.  Then ?fn= and you provide your first name; &ln= and then your last name, "ln" for last name; &email= and then your email address.



So this is a standard URL parameter tail with name value pairs separated by ampersands that we've seen for years, that we've been using for years, that you would typically have, a simple GET style submission to a browser would generate.  Oh, and then the userType=3, for whatever reason; and the userGroup ID, which you just make up.  You just can enumerate through those.  No authentication required.  That creates an account for you in that user group.  And then it sends you email to the email address you gave it, providing you with additional credentials, which you then use in order to log in and access the cameras belonging to that group.  I mean, it just - it's mindboggling.



So you submit this request to the server, giving it your email address.  It registers you to that account, sends additional information to the email address you provided, requiring nothing else.  So no, I mean, it's like, it's not obviously insecure.  But anyone taking any time, as these guys did, to, like, examine the system just sees that it offers absolutely no security.



There was something, another camera, from Lens Laboratories.  I love the name.  It was called the Lens Peek-a-View.  It's like, yup.  Multiple open web servers on their products, both web and Telnet, defaulting to user/user or guest/guest credentials.  And this was one where Rapid7 was unable to find anybody to complain to, to tell them that your camera has wide-open servers.  And again, several other devices out of this set of 10 all ship with statically present, always open Telnet or web servers, which the concern is, over time, if this becomes the trend, if this is the way IoT systems are, it creates a huge opportunity for anything that's able to get onto the LAN and scan the network.



Again, the absolute first order of business has got to be separate your network.  Take the time to create a WiFi branch, an arm that is separate from the WiFi that everything else uses, and put your IoT stuff there.  I mean, if for no other reason than, in theory, nothing can infect those devices, insecure as they are, well, except many of them reach out to the network.  And what I just read, some of the things I just read does allow a remote person to get onto that device with admin rights.  So I didn't run through the details; but these cameras, several of these cameras are providing active access to the LAN they are on to anyone who knows about them in the world.  Which means, if that is your LAN, they're on your LAN.



So again, we've got to separate the IoT network from the network that your other machines on the network use.  And really it's both ways protection.  You don't want the IoT devices to get over into your normal computer LAN.  And similarly, if something mischievous got onto your computer, you'd like it not to be a able to find 20 open Telnet and web servers sitting there waiting for connections.  So it makes sense from both angles to separate these onto two separate networks.



Hopefully, as I said, I called this "IoT Infancy" because I think the industry as a whole is in its infancy.  But this just can't be the way we allow these systems to operate.  At this point, people are just buying them innocently, from Amazon or Target or Walmart or wherever, and plugging them in, and they work.  But, boy, they're just incredibly insecure.



LEO:  And they're baby monitors.  That's the sad side of the whole thing; right?



STEVE:  I know.  Yeah, exactly.  So, I mean, in the worst case, as has been noted, the Ring Doorbell is aiming out of your house into your yard.



LEO:  At least it's your street, yeah.



STEVE:  I don't care if anybody sees that.  But, boy, I don't want it pointing into my home, into my baby's crib.



LEO:  Well, I'm sure if there were an onslaught of smart doorbells from China, there were commoditized doorbells - although when Philips makes a mistake like that, that's kind of surprising.



STEVE:  Yeah.



LEO:  I mean, that's a big company.  Geez.



STEVE:  Yeah.  I just...



LEO:  Although they may just be slapping their name on some Chinese commoditized product.



STEVE:  Yes, yes, yes.  And this is the lesson that we have seen over and over and over.  The goal is make it work.  Does it work?  Ship it.  And it costs nothing to print "encrypted, high-security, military-grade," you know.  Ink is free.  And so the fact that it says that on the label means absolutely nothing.



LEO:  Yeah, yeah.  Ladies and gentlemen, you see why you listen every week to this show?  It's an education in how to do it wrong, among other things.  "You're doing it wrong" episodes continue.  Steve Gibson is at GRC.com.  That's where you'll find SpinRite, his bread and butter, the only thing he charges for, world's best hard drive recovery and maintenance utility.



But there's lots of free stuff there, including, of course, this show, SQRL, the sleep stuff, everything.  It's all at GRC.com.  That's where you'll go to leave questions, if you have questions for next week's episode, GRC.com/feedback.  The podcast has not only audio there, but also written transcripts, so you can read along while you listen.  That's something unique that Steve does, and I think it's great.



You'll also find Perfect Paper Passwords, I mean, you know what, it's the kind of site you go, and you might peruse it for a while.  Set aside some time.  You can also find the show at our site, TWiT.tv/sn for Security Now!.  And we have audio and video there.  You can also subscribe in your favorite podcatcher.  Doesn't matter which one you use.  Just get it every week because you don't want to miss it.



And my blog, as I mentioned a couple of times, I'll mention it one more time, has scripts on it.  Three different listeners wrote scripts for downloading every episode, with little modification:  a Bash script, a Python script, and a PowerShell script.  And that's at LeoLaporte.com, if you want to get that.  Steve, fun.  Thank you.  Great stuff.



STEVE:  Yay.



LEO:  Questions next week.



STEVE:  My pleasure.  Be back with you for Q&A next week, Leo.



LEO:  And don't forget you can tweet Steve @SGgrc.  And he accepts DMs from anyone, so send your lengthy DMs to Steve.  Have a great week, Steve.



STEVE:  Thanks.  Bye.



Copyright (c) 2016 by Steve Gibson and Leo Laporte.  SOME RIGHTS RESERVED.  This work is licensed for the good of the Internet Community under the Creative Commons License v2.5.  See the following Web page for details: http://creativecommons.org/licenses/by-nc-sa/2.5/.






